static int foreachi(lua_State *L)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: IntegerLiteral 0x5597152e5200 <ltablib.c:35:10> 'int' 0
0
   2: ReturnStmt 0x5597152e5220 <ltablib.c:35:3, col:10>
`-IntegerLiteral 0x5597152e5200 <col:10> 'int' 0
return [B1.1];
   Preds (1): B6
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5597152e4538 <ltablib.c:26:21> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
i
   2: UnaryOperator 0x5597152e4560 <ltablib.c:26:21, col:22> 'int' postfix '++'
`-DeclRefExpr 0x5597152e4538 <col:21> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
[B2.1]++
   Preds (1): B3
   Succs (1): B6

 [B3]
   1: DeclRefExpr 0x5597152e5028 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55971525fe50 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x5597152e5120 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e5028 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55971525fe50 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5597152e5050 <ltablib.c:33:13> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152e5170 <ltablib.c:33:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e5050 <col:13> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5597152e5078 <ltablib.c:33:16> 'int' 1
1
   6: UnaryOperator 0x5597152e50b8 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x5597152e5098 <col:38, col:40> 'int'
  `-IntegerLiteral 0x5597152e5078 <ltablib.c:33:16> 'int' 1
-([B3.5])
   7: IntegerLiteral 0x5597152e50d8 <./lua.h:254:42> 'int' 1
1
   8: BinaryOperator 0x5597152e50f8 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x5597152e50b8 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x5597152e5098 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x5597152e5078 <ltablib.c:33:16> 'int' 1
`-IntegerLiteral 0x5597152e50d8 <./lua.h:254:42> 'int' 1
[B3.6] - [B3.7]
   9: CallExpr 0x5597152e5138 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x5597152e5120 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e5028 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55971525fe50 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e5170 <ltablib.c:33:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e5050 <col:13> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
`-BinaryOperator 0x5597152e50f8 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x5597152e50b8 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x5597152e5098 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x5597152e5078 <ltablib.c:33:16> 'int' 1
  `-IntegerLiteral 0x5597152e50d8 <./lua.h:254:42> 'int' 1
[B3.2]([B3.4], [B3.8])
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: IntegerLiteral 0x5597152e4fb8 <ltablib.c:32:14> 'int' 1
1
   2: ReturnStmt 0x5597152e4fd8 <ltablib.c:32:7, col:14>
`-IntegerLiteral 0x5597152e4fb8 <col:14> 'int' 1
return [B4.1];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x5597152e4580 <ltablib.c:27:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x559715260020 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
   2: ImplicitCastExpr 0x5597152e4648 <ltablib.c:27:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e4580 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x559715260020 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5597152e45a8 <ltablib.c:27:19> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152e4698 <ltablib.c:27:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e45a8 <col:19> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5597152e45d0 <ltablib.c:27:22> 'int' 2
2
   6: CallExpr 0x5597152e4660 <ltablib.c:27:5, col:23> 'void'
|-ImplicitCastExpr 0x5597152e4648 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e4580 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x559715260020 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e4698 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e45a8 <col:19> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
`-IntegerLiteral 0x5597152e45d0 <col:22> 'int' 2
[B5.2]([B5.4], [B5.5])
   7: DeclRefExpr 0x5597152e46b0 <ltablib.c:28:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5597152892f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   8: ImplicitCastExpr 0x5597152e4788 <ltablib.c:28:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e46b0 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5597152892f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B5.7] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   9: DeclRefExpr 0x5597152e46d8 <ltablib.c:28:21> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x5597152e47d8 <ltablib.c:28:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e46d8 <col:21> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B5.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: DeclRefExpr 0x5597152e4700 <ltablib.c:28:24> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
i
  12: ImplicitCastExpr 0x5597152e47f0 <ltablib.c:28:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x5597152e4700 <col:24> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
[B5.11] (ImplicitCastExpr, LValueToRValue, int)
  13: ImplicitCastExpr 0x5597152e4808 <ltablib.c:28:24> 'lua_Integer':'long' <IntegralCast>
`-ImplicitCastExpr 0x5597152e47f0 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5597152e4700 <col:24> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
[B5.12] (ImplicitCastExpr, IntegralCast, lua_Integer)
  14: CallExpr 0x5597152e47a0 <ltablib.c:28:5, col:25> 'void'
|-ImplicitCastExpr 0x5597152e4788 <col:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e46b0 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5597152892f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x5597152e47d8 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e46d8 <col:21> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
`-ImplicitCastExpr 0x5597152e4808 <col:24> 'lua_Integer':'long' <IntegralCast>
  `-ImplicitCastExpr 0x5597152e47f0 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5597152e4700 <col:24> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
[B5.8]([B5.10], [B5.13])
  15: DeclRefExpr 0x5597152e4820 <ltablib.c:29:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528b158 'lua_rawgeti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_rawgeti
  16: ImplicitCastExpr 0x5597152e48b8 <ltablib.c:29:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e4820 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528b158 'lua_rawgeti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B5.15] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  17: DeclRefExpr 0x5597152e4848 <ltablib.c:29:17> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
  18: ImplicitCastExpr 0x5597152e4910 <ltablib.c:29:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e4848 <col:17> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B5.17] (ImplicitCastExpr, LValueToRValue, lua_State *)
  19: IntegerLiteral 0x5597152e4870 <ltablib.c:29:20> 'int' 1
1
  20: DeclRefExpr 0x5597152e4890 <ltablib.c:29:23> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
i
  21: ImplicitCastExpr 0x5597152e4928 <ltablib.c:29:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x5597152e4890 <col:23> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
[B5.20] (ImplicitCastExpr, LValueToRValue, int)
  22: CallExpr 0x5597152e48d0 <ltablib.c:29:5, col:24> 'void'
|-ImplicitCastExpr 0x5597152e48b8 <col:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e4820 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528b158 'lua_rawgeti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5597152e4910 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e4848 <col:17> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
|-IntegerLiteral 0x5597152e4870 <col:20> 'int' 1
`-ImplicitCastExpr 0x5597152e4928 <col:23> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5597152e4890 <col:23> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
[B5.16]([B5.18], [B5.19], [B5.21])
  23: DeclRefExpr 0x5597152e4940 <ltablib.c:30:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528c860 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_call
  24: ImplicitCastExpr 0x5597152e4d50 <ltablib.c:30:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e4940 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528c860 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B5.23] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  25: DeclRefExpr 0x5597152e4968 <ltablib.c:30:14> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
  26: ImplicitCastExpr 0x5597152e4da8 <ltablib.c:30:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e4968 <col:14> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B5.25] (ImplicitCastExpr, LValueToRValue, lua_State *)
  27: IntegerLiteral 0x5597152e4d10 <ltablib.c:30:17> 'int' 2
2
  28: IntegerLiteral 0x5597152e4d30 <ltablib.c:30:20> 'int' 1
1
  29: CallExpr 0x5597152e4d68 <ltablib.c:30:5, col:21> 'void'
|-ImplicitCastExpr 0x5597152e4d50 <col:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e4940 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528c860 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5597152e4da8 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e4968 <col:14> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
|-IntegerLiteral 0x5597152e4d10 <col:17> 'int' 2
`-IntegerLiteral 0x5597152e4d30 <col:20> 'int' 1
[B5.24]([B5.26], [B5.27], [B5.28])
  30: DeclRefExpr 0x5597152e4dc0 <./lua.h:267:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
  31: ImplicitCastExpr 0x5597152e4ec8 <./lua.h:267:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e4dc0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B5.30] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  32: DeclRefExpr 0x5597152e4de8 <ltablib.c:31:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
  33: ImplicitCastExpr 0x5597152e4f18 <ltablib.c:31:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e4de8 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B5.32] (ImplicitCastExpr, LValueToRValue, lua_State *)
  34: IntegerLiteral 0x5597152e4e10 <ltablib.c:31:24> 'int' 1
1
  35: UnaryOperator 0x5597152e4e30 <ltablib.c:31:23, col:24> 'int' prefix '-'
`-IntegerLiteral 0x5597152e4e10 <col:24> 'int' 1
-[B5.34]
  36: CallExpr 0x5597152e4ee0 <./lua.h:267:26, col:41> 'int'
|-ImplicitCastExpr 0x5597152e4ec8 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e4dc0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e4f18 <ltablib.c:31:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e4de8 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
`-ParenExpr 0x5597152e4e50 <./lua.h:267:38, col:40> 'int'
  `-UnaryOperator 0x5597152e4e30 <ltablib.c:31:23, col:24> 'int' prefix '-'
    `-IntegerLiteral 0x5597152e4e10 <col:24> 'int' 1
[B5.31]([B5.33], ([B5.35]))
  37: IntegerLiteral 0x5597152e4f30 <./lua.h:74:19> 'int' 0
0
  38: BinaryOperator 0x5597152e4f50 <./lua.h:267:26, line:74:19> 'int' '=='
|-CallExpr 0x5597152e4ee0 <line:267:26, col:41> 'int'
| |-ImplicitCastExpr 0x5597152e4ec8 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5597152e4dc0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x5597152e4f18 <ltablib.c:31:20> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x5597152e4de8 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
| `-ParenExpr 0x5597152e4e50 <./lua.h:267:38, col:40> 'int'
|   `-UnaryOperator 0x5597152e4e30 <ltablib.c:31:23, col:24> 'int' prefix '-'
|     `-IntegerLiteral 0x5597152e4e10 <col:24> 'int' 1
`-IntegerLiteral 0x5597152e4f30 <./lua.h:74:19> 'int' 0
[B5.36] == [B5.37]
  39: UnaryOperator 0x5597152e4f98 <ltablib.c:31:9, ./lua.h:267:54> 'int' prefix '!'
`-ParenExpr 0x5597152e4f78 <col:25, col:54> 'int'
  `-BinaryOperator 0x5597152e4f50 <col:26, line:74:19> 'int' '=='
    |-CallExpr 0x5597152e4ee0 <line:267:26, col:41> 'int'
    | |-ImplicitCastExpr 0x5597152e4ec8 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5597152e4dc0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
    | |-ImplicitCastExpr 0x5597152e4f18 <ltablib.c:31:20> 'lua_State *' <LValueToRValue>
    | | `-DeclRefExpr 0x5597152e4de8 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
    | `-ParenExpr 0x5597152e4e50 <./lua.h:267:38, col:40> 'int'
    |   `-UnaryOperator 0x5597152e4e30 <ltablib.c:31:23, col:24> 'int' prefix '-'
    |     `-IntegerLiteral 0x5597152e4e10 <col:24> 'int' 1
    `-IntegerLiteral 0x5597152e4f30 <./lua.h:74:19> 'int' 0
!([B5.38])
   T: if [B5.39]
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x5597152e4490 <ltablib.c:26:13> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
i
   2: ImplicitCastExpr 0x5597152e44e0 <ltablib.c:26:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x5597152e4490 <col:13> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5597152e44b8 <ltablib.c:26:18> 'int' lvalue Var 0x5597152e3f68 'n' 'int'
n
   4: ImplicitCastExpr 0x5597152e44f8 <ltablib.c:26:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x5597152e44b8 <col:18> 'int' lvalue Var 0x5597152e3f68 'n' 'int'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5597152e4510 <ltablib.c:26:13, col:18> 'int' '<='
|-ImplicitCastExpr 0x5597152e44e0 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5597152e4490 <col:13> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
`-ImplicitCastExpr 0x5597152e44f8 <col:18> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5597152e44b8 <col:18> 'int' lvalue Var 0x5597152e3f68 'n' 'int'
[B6.2] <= [B6.4]
   T: for (...; [B6.5]; ...)
   Preds (2): B2 B7
   Succs (2): B5 B1

 [B7]
   1: DeclStmt 0x5597152e3f38 <ltablib.c:23:3, col:8>col:7
`-VarDecl 0x5597152e3ed8 <col:3, col:7> col:7 used i 'int'
int i;
   2: DeclRefExpr 0x5597152e3fc8 <ltablib.c:19:24> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
luaL_checktype
   3: ImplicitCastExpr 0x5597152e40b8 <ltablib.c:19:24> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e3fc8 <col:24> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B7.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
   4: DeclRefExpr 0x5597152e3ff0 <ltablib.c:24:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x5597152e4110 <ltablib.c:24:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e3ff0 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B7.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x5597152e4018 <ltablib.c:24:23> 'int' 1
1
   7: IntegerLiteral 0x5597152e4038 <./lua.h:79:21> 'int' 5
5
   8: CallExpr 0x5597152e40d0 <ltablib.c:19:24, col:55> 'void'
|-ImplicitCastExpr 0x5597152e40b8 <col:24> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e3fc8 <col:24> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5597152e4110 <line:24:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e3ff0 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
|-IntegerLiteral 0x5597152e4018 <col:23> 'int' 1
`-IntegerLiteral 0x5597152e4038 <./lua.h:79:21> 'int' 5
[B7.3]([B7.5], [B7.6], [B7.7])
   9: DeclRefExpr 0x5597152e4128 <./lauxlib.h:22:39> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x559715287a30 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
lua_objlen
  10: ImplicitCastExpr 0x5597152e41f8 <./lauxlib.h:22:39> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e4128 <col:39> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x559715287a30 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
[B7.9] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(lua_State *, int))
  11: DeclRefExpr 0x5597152e4150 <ltablib.c:24:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x5597152e4248 <ltablib.c:24:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e4150 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B7.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: IntegerLiteral 0x5597152e4178 <ltablib.c:24:23> 'int' 1
1
  14: CallExpr 0x5597152e4210 <./lauxlib.h:22:39, col:54> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x5597152e41f8 <col:39> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e4128 <col:39> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x559715287a30 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e4248 <ltablib.c:24:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e4150 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
`-IntegerLiteral 0x5597152e4178 <col:23> 'int' 1
[B7.10]([B7.12], [B7.13])
  15: CStyleCastExpr 0x5597152e4278 <./lauxlib.h:22:34, col:54> 'int' <IntegralCast>
`-CallExpr 0x5597152e4210 <col:39, col:54> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x5597152e41f8 <col:39> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5597152e4128 <col:39> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x559715287a30 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
  |-ImplicitCastExpr 0x5597152e4248 <ltablib.c:24:20> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5597152e4150 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
  `-IntegerLiteral 0x5597152e4178 <col:23> 'int' 1
(int)[B7.14] (CStyleCastExpr, IntegralCast, int)
  16: BinaryOperator 0x5597152e42c0 <ltablib.c:19:24, ./lauxlib.h:22:55> 'int' ','
|-CallExpr 0x5597152e40d0 <ltablib.c:19:24, col:55> 'void'
| |-ImplicitCastExpr 0x5597152e40b8 <col:24> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5597152e3fc8 <col:24> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
| |-ImplicitCastExpr 0x5597152e4110 <line:24:20> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x5597152e3ff0 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
| |-IntegerLiteral 0x5597152e4018 <col:23> 'int' 1
| `-IntegerLiteral 0x5597152e4038 <./lua.h:79:21> 'int' 5
`-ParenExpr 0x5597152e42a0 <./lauxlib.h:22:33, col:55> 'int'
  `-CStyleCastExpr 0x5597152e4278 <col:34, col:54> 'int' <IntegralCast>
    `-CallExpr 0x5597152e4210 <col:39, col:54> 'size_t':'unsigned long'
      |-ImplicitCastExpr 0x5597152e41f8 <col:39> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5597152e4128 <col:39> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x559715287a30 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
      |-ImplicitCastExpr 0x5597152e4248 <ltablib.c:24:20> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x5597152e4150 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
      `-IntegerLiteral 0x5597152e4178 <col:23> 'int' 1
... , 
  17: DeclStmt 0x5597152e4308 <ltablib.c:24:3, col:25>col:7
`-VarDecl 0x5597152e3f68 <col:3, line:19:73> line:24:7 used n 'int' cinit
  `-ParenExpr 0x5597152e42e8 <line:19:23, col:73> 'int'
    `-BinaryOperator 0x5597152e42c0 <col:24, ./lauxlib.h:22:55> 'int' ','
      |-CallExpr 0x5597152e40d0 <ltablib.c:19:24, col:55> 'void'
      | |-ImplicitCastExpr 0x5597152e40b8 <col:24> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x5597152e3fc8 <col:24> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
      | |-ImplicitCastExpr 0x5597152e4110 <line:24:20> 'lua_State *' <LValueToRValue>
      | | `-DeclRefExpr 0x5597152e3ff0 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
      | |-IntegerLiteral 0x5597152e4018 <col:23> 'int' 1
      | `-IntegerLiteral 0x5597152e4038 <./lua.h:79:21> 'int' 5
      `-ParenExpr 0x5597152e42a0 <./lauxlib.h:22:33, col:55> 'int'
        `-CStyleCastExpr 0x5597152e4278 <col:34, col:54> 'int' <IntegralCast>
          `-CallExpr 0x5597152e4210 <col:39, col:54> 'size_t':'unsigned long'
            |-ImplicitCastExpr 0x5597152e41f8 <col:39> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x5597152e4128 <col:39> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x559715287a30 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
            |-ImplicitCastExpr 0x5597152e4248 <ltablib.c:24:20> 'lua_State *' <LValueToRValue>
            | `-DeclRefExpr 0x5597152e4150 <col:20> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
            `-IntegerLiteral 0x5597152e4178 <col:23> 'int' 1
int n = (luaL_checktype(L, 1, 5) , ((int)lua_objlen(L, 1)));
  18: DeclRefExpr 0x5597152e4320 <ltablib.c:25:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
luaL_checktype
  19: ImplicitCastExpr 0x5597152e43b0 <ltablib.c:25:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e4320 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B7.18] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  20: DeclRefExpr 0x5597152e4348 <ltablib.c:25:18> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
L
  21: ImplicitCastExpr 0x5597152e4408 <ltablib.c:25:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e4348 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
[B7.20] (ImplicitCastExpr, LValueToRValue, lua_State *)
  22: IntegerLiteral 0x5597152e4370 <ltablib.c:25:21> 'int' 2
2
  23: IntegerLiteral 0x5597152e4390 <./lua.h:80:24> 'int' 6
6
  24: CallExpr 0x5597152e43c8 <ltablib.c:25:3, col:37> 'void'
|-ImplicitCastExpr 0x5597152e43b0 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e4320 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5597152e4408 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e4348 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e3d88 'L' 'lua_State *'
|-IntegerLiteral 0x5597152e4370 <col:21> 'int' 2
`-IntegerLiteral 0x5597152e4390 <./lua.h:80:24> 'int' 6
[B7.19]([B7.21], [B7.22], [B7.23])
  25: IntegerLiteral 0x5597152e4448 <ltablib.c:26:10> 'int' 1
1
  26: DeclRefExpr 0x5597152e4420 <ltablib.c:26:8> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
i
  27: BinaryOperator 0x5597152e4468 <ltablib.c:26:8, col:10> 'int' '='
|-DeclRefExpr 0x5597152e4420 <col:8> 'int' lvalue Var 0x5597152e3ed8 'i' 'int'
`-IntegerLiteral 0x5597152e4448 <col:10> 'int' 1
[B7.26] = [B7.25]
   Preds (1): B8
   Succs (1): B6

 [B0 (EXIT)]
   Preds (2): B1 B4
