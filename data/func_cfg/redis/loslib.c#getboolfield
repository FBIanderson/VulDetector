static int getboolfield(lua_State *L, const char *key)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ConditionalOperator 0x55626ed033a0 <./lua.h:267:25, loslib.c:103:52> 'int'
|-ParenExpr 0x55626ed03248 <./lua.h:267:25, col:54> 'int'
| `-BinaryOperator 0x55626ed03220 <col:26, line:74:19> 'int' '=='
|   |-CallExpr 0x55626ed03190 <line:267:26, col:41> 'int'
|   | |-ImplicitCastExpr 0x55626ed03178 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55626ed03070 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ec53a08 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|   | |-ImplicitCastExpr 0x55626ed031c8 <loslib.c:103:19> 'lua_State *' <LValueToRValue>
|   | | `-DeclRefExpr 0x55626ed03098 <col:19> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
|   | `-ParenExpr 0x55626ed03100 <./lua.h:267:38, col:40> 'int'
|   |   `-UnaryOperator 0x55626ed030e0 <loslib.c:103:22, col:23> 'int' prefix '-'
|   |     `-IntegerLiteral 0x55626ed030c0 <col:23> 'int' 1
|   `-IntegerLiteral 0x55626ed03200 <./lua.h:74:19> 'int' 0
|-UnaryOperator 0x55626ed03288 <loslib.c:103:28, col:29> 'int' prefix '-'
| `-IntegerLiteral 0x55626ed03268 <col:29> 'int' 1
`-CallExpr 0x55626ed03350 <col:33, col:52> 'int'
  |-ImplicitCastExpr 0x55626ed03338 <col:33> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55626ed032a8 <col:33> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ecb88e8 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x55626ed03388 <col:47> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55626ed032d0 <col:47> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
  `-UnaryOperator 0x55626ed03318 <col:50, col:51> 'int' prefix '-'
    `-IntegerLiteral 0x55626ed032f8 <col:51> 'int' 1
([B4.19]) ? [B2.2] : [B3.7]
   2: DeclRefExpr 0x55626ed03048 <loslib.c:103:3> 'int' lvalue Var 0x55626ed02e90 'res' 'int'
res
   3: BinaryOperator 0x55626ed033d0 <loslib.c:103:3, col:52> 'int' '='
|-DeclRefExpr 0x55626ed03048 <col:3> 'int' lvalue Var 0x55626ed02e90 'res' 'int'
`-ConditionalOperator 0x55626ed033a0 <./lua.h:267:25, loslib.c:103:52> 'int'
  |-ParenExpr 0x55626ed03248 <./lua.h:267:25, col:54> 'int'
  | `-BinaryOperator 0x55626ed03220 <col:26, line:74:19> 'int' '=='
  |   |-CallExpr 0x55626ed03190 <line:267:26, col:41> 'int'
  |   | |-ImplicitCastExpr 0x55626ed03178 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  |   | | `-DeclRefExpr 0x55626ed03070 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ec53a08 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
  |   | |-ImplicitCastExpr 0x55626ed031c8 <loslib.c:103:19> 'lua_State *' <LValueToRValue>
  |   | | `-DeclRefExpr 0x55626ed03098 <col:19> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
  |   | `-ParenExpr 0x55626ed03100 <./lua.h:267:38, col:40> 'int'
  |   |   `-UnaryOperator 0x55626ed030e0 <loslib.c:103:22, col:23> 'int' prefix '-'
  |   |     `-IntegerLiteral 0x55626ed030c0 <col:23> 'int' 1
  |   `-IntegerLiteral 0x55626ed03200 <./lua.h:74:19> 'int' 0
  |-UnaryOperator 0x55626ed03288 <loslib.c:103:28, col:29> 'int' prefix '-'
  | `-IntegerLiteral 0x55626ed03268 <col:29> 'int' 1
  `-CallExpr 0x55626ed03350 <col:33, col:52> 'int'
    |-ImplicitCastExpr 0x55626ed03338 <col:33> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55626ed032a8 <col:33> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ecb88e8 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
    |-ImplicitCastExpr 0x55626ed03388 <col:47> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55626ed032d0 <col:47> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
    `-UnaryOperator 0x55626ed03318 <col:50, col:51> 'int' prefix '-'
      `-IntegerLiteral 0x55626ed032f8 <col:51> 'int' 1
[B1.2] = [B1.1]
   4: DeclRefExpr 0x55626ed033f8 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55626ecb50c0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   5: ImplicitCastExpr 0x55626ed034f0 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed033f8 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55626ecb50c0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.4] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   6: DeclRefExpr 0x55626ed03420 <loslib.c:104:11> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55626ed03540 <loslib.c:104:11> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed03420 <col:11> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
[B1.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: IntegerLiteral 0x55626ed03448 <loslib.c:104:14> 'int' 1
1
   9: UnaryOperator 0x55626ed03488 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x55626ed03468 <col:38, col:40> 'int'
  `-IntegerLiteral 0x55626ed03448 <loslib.c:104:14> 'int' 1
-([B1.8])
  10: IntegerLiteral 0x55626ed034a8 <./lua.h:254:42> 'int' 1
1
  11: BinaryOperator 0x55626ed034c8 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x55626ed03488 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x55626ed03468 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x55626ed03448 <loslib.c:104:14> 'int' 1
`-IntegerLiteral 0x55626ed034a8 <./lua.h:254:42> 'int' 1
[B1.9] - [B1.10]
  12: CallExpr 0x55626ed03508 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x55626ed034f0 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed033f8 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55626ecb50c0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55626ed03540 <loslib.c:104:11> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed03420 <col:11> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
`-BinaryOperator 0x55626ed034c8 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x55626ed03488 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x55626ed03468 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x55626ed03448 <loslib.c:104:14> 'int' 1
  `-IntegerLiteral 0x55626ed034a8 <./lua.h:254:42> 'int' 1
[B1.5]([B1.7], [B1.11])
  13: DeclRefExpr 0x55626ed03558 <loslib.c:105:10> 'int' lvalue Var 0x55626ed02e90 'res' 'int'
res
  14: ImplicitCastExpr 0x55626ed03580 <loslib.c:105:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x55626ed03558 <col:10> 'int' lvalue Var 0x55626ed02e90 'res' 'int'
[B1.13] (ImplicitCastExpr, LValueToRValue, int)
  15: ReturnStmt 0x55626ed03598 <loslib.c:105:3, col:10>
`-ImplicitCastExpr 0x55626ed03580 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55626ed03558 <col:10> 'int' lvalue Var 0x55626ed02e90 'res' 'int'
return [B1.14];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55626ed03268 <loslib.c:103:29> 'int' 1
1
   2: UnaryOperator 0x55626ed03288 <loslib.c:103:28, col:29> 'int' prefix '-'
`-IntegerLiteral 0x55626ed03268 <col:29> 'int' 1
-[B2.1]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55626ed032a8 <loslib.c:103:33> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ecb88e8 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_toboolean
   2: ImplicitCastExpr 0x55626ed03338 <loslib.c:103:33> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed032a8 <col:33> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ecb88e8 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x55626ed032d0 <loslib.c:103:47> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55626ed03388 <loslib.c:103:47> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed032d0 <col:47> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55626ed032f8 <loslib.c:103:51> 'int' 1
1
   6: UnaryOperator 0x55626ed03318 <loslib.c:103:50, col:51> 'int' prefix '-'
`-IntegerLiteral 0x55626ed032f8 <col:51> 'int' 1
-[B3.5]
   7: CallExpr 0x55626ed03350 <loslib.c:103:33, col:52> 'int'
|-ImplicitCastExpr 0x55626ed03338 <col:33> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed032a8 <col:33> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ecb88e8 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55626ed03388 <col:47> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed032d0 <col:47> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
`-UnaryOperator 0x55626ed03318 <col:50, col:51> 'int' prefix '-'
  `-IntegerLiteral 0x55626ed032f8 <col:51> 'int' 1
[B3.2]([B3.4], [B3.6])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclStmt 0x55626ed02ef0 <loslib.c:101:3, col:10>col:7
`-VarDecl 0x55626ed02e90 <col:3, col:7> col:7 used res 'int'
int res;
   2: DeclRefExpr 0x55626ed02f08 <loslib.c:102:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55626ecbb918 'lua_getfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
lua_getfield
   3: ImplicitCastExpr 0x55626ed02fc0 <loslib.c:102:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed02f08 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55626ecbb918 'lua_getfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
[B4.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, const char *))
   4: DeclRefExpr 0x55626ed02f30 <loslib.c:102:16> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x55626ed03018 <loslib.c:102:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed02f30 <col:16> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
[B4.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x55626ed02f58 <loslib.c:102:20> 'int' 1
1
   7: UnaryOperator 0x55626ed02f78 <loslib.c:102:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55626ed02f58 <col:20> 'int' 1
-[B4.6]
   8: DeclRefExpr 0x55626ed02f98 <loslib.c:102:23> 'const char *' lvalue ParmVar 0x55626ed02d30 'key' 'const char *'
key
   9: ImplicitCastExpr 0x55626ed03030 <loslib.c:102:23> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55626ed02f98 <col:23> 'const char *' lvalue ParmVar 0x55626ed02d30 'key' 'const char *'
[B4.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: CallExpr 0x55626ed02fd8 <loslib.c:102:3, col:26> 'void'
|-ImplicitCastExpr 0x55626ed02fc0 <col:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed02f08 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55626ecbb918 'lua_getfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x55626ed03018 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed02f30 <col:16> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
|-UnaryOperator 0x55626ed02f78 <col:19, col:20> 'int' prefix '-'
| `-IntegerLiteral 0x55626ed02f58 <col:20> 'int' 1
`-ImplicitCastExpr 0x55626ed03030 <col:23> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55626ed02f98 <col:23> 'const char *' lvalue ParmVar 0x55626ed02d30 'key' 'const char *'
[B4.3]([B4.5], [B4.7], [B4.9])
  11: DeclRefExpr 0x55626ed03070 <./lua.h:267:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ec53a08 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
  12: ImplicitCastExpr 0x55626ed03178 <./lua.h:267:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed03070 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ec53a08 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B4.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  13: DeclRefExpr 0x55626ed03098 <loslib.c:103:19> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x55626ed031c8 <loslib.c:103:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed03098 <col:19> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
[B4.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: IntegerLiteral 0x55626ed030c0 <loslib.c:103:23> 'int' 1
1
  16: UnaryOperator 0x55626ed030e0 <loslib.c:103:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x55626ed030c0 <col:23> 'int' 1
-[B4.15]
  17: CallExpr 0x55626ed03190 <./lua.h:267:26, col:41> 'int'
|-ImplicitCastExpr 0x55626ed03178 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed03070 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ec53a08 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55626ed031c8 <loslib.c:103:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed03098 <col:19> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
`-ParenExpr 0x55626ed03100 <./lua.h:267:38, col:40> 'int'
  `-UnaryOperator 0x55626ed030e0 <loslib.c:103:22, col:23> 'int' prefix '-'
    `-IntegerLiteral 0x55626ed030c0 <col:23> 'int' 1
[B4.12]([B4.14], ([B4.16]))
  18: IntegerLiteral 0x55626ed03200 <./lua.h:74:19> 'int' 0
0
  19: BinaryOperator 0x55626ed03220 <./lua.h:267:26, line:74:19> 'int' '=='
|-CallExpr 0x55626ed03190 <line:267:26, col:41> 'int'
| |-ImplicitCastExpr 0x55626ed03178 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55626ed03070 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55626ec53a08 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x55626ed031c8 <loslib.c:103:19> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55626ed03098 <col:19> 'lua_State *' lvalue ParmVar 0x55626ed02cb8 'L' 'lua_State *'
| `-ParenExpr 0x55626ed03100 <./lua.h:267:38, col:40> 'int'
|   `-UnaryOperator 0x55626ed030e0 <loslib.c:103:22, col:23> 'int' prefix '-'
|     `-IntegerLiteral 0x55626ed030c0 <col:23> 'int' 1
`-IntegerLiteral 0x55626ed03200 <./lua.h:74:19> 'int' 0
[B4.17] == [B4.18]
   T: ([B4.19]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1
