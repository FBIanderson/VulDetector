static int l_strcmp(const TString *ls, const TString *rs)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   Preds (1): B2
   Succs (1): B12

 [B2]
   1: DeclRefExpr 0x5590eceeaf78 <lvm.c:218:7> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
   2: UnaryOperator 0x5590eceeafa0 <lvm.c:218:7, col:10> 'size_t':'unsigned long' postfix '++'
`-DeclRefExpr 0x5590eceeaf78 <col:7> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.1]++
   3: DeclRefExpr 0x5590eceeafc0 <lvm.c:219:7> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
l
   4: DeclRefExpr 0x5590eceeafe8 <lvm.c:219:12> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
   5: ImplicitCastExpr 0x5590eceeb010 <lvm.c:219:12> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeafe8 <col:12> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.4] (ImplicitCastExpr, LValueToRValue, size_t)
   6: CompoundAssignOperator 0x5590eceeb028 <lvm.c:219:7, col:12> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|-DeclRefExpr 0x5590eceeafc0 <col:7> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
`-ImplicitCastExpr 0x5590eceeb010 <col:12> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeafe8 <col:12> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.3] += [B2.5]
   7: DeclRefExpr 0x5590eceeb060 <lvm.c:219:17> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
ll
   8: DeclRefExpr 0x5590eceeb088 <lvm.c:219:23> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
   9: ImplicitCastExpr 0x5590eceeb0b0 <lvm.c:219:23> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeb088 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.8] (ImplicitCastExpr, LValueToRValue, size_t)
  10: CompoundAssignOperator 0x5590eceeb0c8 <lvm.c:219:17, col:23> 'size_t':'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5590eceeb060 <col:17> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590eceeb0b0 <col:23> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeb088 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.7] -= [B2.9]
  11: DeclRefExpr 0x5590eceeb100 <lvm.c:219:28> 'const char *' lvalue Var 0x5590eceea508 'r' 'const char *'
r
  12: DeclRefExpr 0x5590eceeb128 <lvm.c:219:33> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
  13: ImplicitCastExpr 0x5590eceeb150 <lvm.c:219:33> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeb128 <col:33> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.12] (ImplicitCastExpr, LValueToRValue, size_t)
  14: CompoundAssignOperator 0x5590eceeb168 <lvm.c:219:28, col:33> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|-DeclRefExpr 0x5590eceeb100 <col:28> 'const char *' lvalue Var 0x5590eceea508 'r' 'const char *'
`-ImplicitCastExpr 0x5590eceeb150 <col:33> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeb128 <col:33> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.11] += [B2.13]
  15: DeclRefExpr 0x5590eceeb1a0 <lvm.c:219:38> 'size_t':'unsigned long' lvalue Var 0x5590eceea6e8 'lr' 'size_t':'unsigned long'
lr
  16: DeclRefExpr 0x5590eceeb1c8 <lvm.c:219:44> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
  17: ImplicitCastExpr 0x5590eceeb1f0 <lvm.c:219:44> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeb1c8 <col:44> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.16] (ImplicitCastExpr, LValueToRValue, size_t)
  18: CompoundAssignOperator 0x5590eceeb208 <lvm.c:219:38, col:44> 'size_t':'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5590eceeb1a0 <col:38> 'size_t':'unsigned long' lvalue Var 0x5590eceea6e8 'lr' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590eceeb1f0 <col:44> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeb1c8 <col:44> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B2.15] -= [B2.17]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x5590eceeaeb0 <lvm.c:216:17> 'int' 1
1
   2: UnaryOperator 0x5590eceeaed0 <lvm.c:216:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x5590eceeaeb0 <col:17> 'int' 1
-[B3.1]
   3: ReturnStmt 0x5590eceeaef0 <lvm.c:216:9, col:17>
`-UnaryOperator 0x5590eceeaed0 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x5590eceeaeb0 <col:17> 'int' 1
return [B3.2];
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x5590eceeae08 <lvm.c:215:16> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
   2: ImplicitCastExpr 0x5590eceeae58 <lvm.c:215:16> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeae08 <col:16> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B4.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x5590eceeae30 <lvm.c:215:23> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
ll
   4: ImplicitCastExpr 0x5590eceeae70 <lvm.c:215:23> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeae30 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
[B4.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: BinaryOperator 0x5590eceeae88 <lvm.c:215:16, col:23> 'int' '=='
|-ImplicitCastExpr 0x5590eceeae58 <col:16> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5590eceeae08 <col:16> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590eceeae70 <col:23> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeae30 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
[B4.2] == [B4.4]
   T: if [B4.5]
   Preds (1): B9
   Succs (2): B3 B2

 [B5]
   1: ConditionalOperator 0x5590eceeadc0 <lvm.c:214:16, col:34> 'int'
|-ParenExpr 0x5590eceead60 <col:16, col:26> 'int'
| `-BinaryOperator 0x5590eceead38 <col:17, col:24> 'int' '=='
|   |-ImplicitCastExpr 0x5590eceead08 <col:17> 'size_t':'unsigned long' <LValueToRValue>
|   | `-DeclRefExpr 0x5590eceeacb8 <col:17> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
|   `-ImplicitCastExpr 0x5590eceead20 <col:24> 'size_t':'unsigned long' <LValueToRValue>
|     `-DeclRefExpr 0x5590eceeace0 <col:24> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
|-IntegerLiteral 0x5590eceead80 <col:30> 'int' 0
`-IntegerLiteral 0x5590eceeada0 <col:34> 'int' 1
([B8.5]) ? [B6.1] : [B7.1]
   2: ReturnStmt 0x5590eceeadf0 <lvm.c:214:9, col:34>
`-ConditionalOperator 0x5590eceeadc0 <col:16, col:34> 'int'
  |-ParenExpr 0x5590eceead60 <col:16, col:26> 'int'
  | `-BinaryOperator 0x5590eceead38 <col:17, col:24> 'int' '=='
  |   |-ImplicitCastExpr 0x5590eceead08 <col:17> 'size_t':'unsigned long' <LValueToRValue>
  |   | `-DeclRefExpr 0x5590eceeacb8 <col:17> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
  |   `-ImplicitCastExpr 0x5590eceead20 <col:24> 'size_t':'unsigned long' <LValueToRValue>
  |     `-DeclRefExpr 0x5590eceeace0 <col:24> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
  |-IntegerLiteral 0x5590eceead80 <col:30> 'int' 0
  `-IntegerLiteral 0x5590eceeada0 <col:34> 'int' 1
return [B5.1];
   Preds (2): B6 B7
   Succs (1): B0

 [B6]
   1: IntegerLiteral 0x5590eceead80 <lvm.c:214:30> 'int' 0
0
   Preds (1): B8
   Succs (1): B5

 [B7]
   1: IntegerLiteral 0x5590eceeada0 <lvm.c:214:34> 'int' 1
1
   Preds (1): B8
   Succs (1): B5

 [B8]
   1: DeclRefExpr 0x5590eceeacb8 <lvm.c:214:17> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
   2: ImplicitCastExpr 0x5590eceead08 <lvm.c:214:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeacb8 <col:17> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B8.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x5590eceeace0 <lvm.c:214:24> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
ll
   4: ImplicitCastExpr 0x5590eceead20 <lvm.c:214:24> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeace0 <col:24> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
[B8.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: BinaryOperator 0x5590eceead38 <lvm.c:214:17, col:24> 'int' '=='
|-ImplicitCastExpr 0x5590eceead08 <col:17> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5590eceeacb8 <col:17> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590eceead20 <col:24> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeace0 <col:24> 'size_t':'unsigned long' lvalue Var 0x5590eceea3b0 'll' 'size_t':'unsigned long'
[B8.2] == [B8.4]
   T: ([B8.5]) ? ... : ...
   Preds (1): B9
   Succs (2): B6 B7

 [B9]
   1: DeclRefExpr 0x5590eceeab30 <lvm.c:212:20> 'unsigned long (const char *)' Function 0x5590ecdd72f8 'strlen' 'unsigned long (const char *)'
strlen
   2: ImplicitCastExpr 0x5590eceeab98 <lvm.c:212:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceeab30 <col:20> 'unsigned long (const char *)' Function 0x5590ecdd72f8 'strlen' 'unsigned long (const char *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
   3: DeclRefExpr 0x5590eceeab58 <lvm.c:212:27> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
l
   4: ImplicitCastExpr 0x5590eceeabe0 <lvm.c:212:27> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5590eceeab58 <col:27> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
[B9.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: CallExpr 0x5590eceeabb0 <lvm.c:212:20, col:28> 'unsigned long'
|-ImplicitCastExpr 0x5590eceeab98 <col:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceeab30 <col:20> 'unsigned long (const char *)' Function 0x5590ecdd72f8 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x5590eceeabe0 <col:27> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeab58 <col:27> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
[B9.2]([B9.4])
   6: DeclStmt 0x5590eceeabf8 <lvm.c:212:7, col:29>col:14
`-VarDecl 0x5590eceeaad0 <col:7, col:28> col:14 used len 'size_t':'unsigned long' cinit
  `-CallExpr 0x5590eceeabb0 <col:20, col:28> 'unsigned long'
    |-ImplicitCastExpr 0x5590eceeab98 <col:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590eceeab30 <col:20> 'unsigned long (const char *)' Function 0x5590ecdd72f8 'strlen' 'unsigned long (const char *)'
    `-ImplicitCastExpr 0x5590eceeabe0 <col:27> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x5590eceeab58 <col:27> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
size_t len = strlen(l);
   7: DeclRefExpr 0x5590eceeac10 <lvm.c:213:11> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
len
   8: ImplicitCastExpr 0x5590eceeac60 <lvm.c:213:11> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeac10 <col:11> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
[B9.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: DeclRefExpr 0x5590eceeac38 <lvm.c:213:18> 'size_t':'unsigned long' lvalue Var 0x5590eceea6e8 'lr' 'size_t':'unsigned long'
lr
  10: ImplicitCastExpr 0x5590eceeac78 <lvm.c:213:18> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590eceeac38 <col:18> 'size_t':'unsigned long' lvalue Var 0x5590eceea6e8 'lr' 'size_t':'unsigned long'
[B9.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: BinaryOperator 0x5590eceeac90 <lvm.c:213:11, col:18> 'int' '=='
|-ImplicitCastExpr 0x5590eceeac60 <col:11> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5590eceeac10 <col:11> 'size_t':'unsigned long' lvalue Var 0x5590eceeaad0 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590eceeac78 <col:18> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeac38 <col:18> 'size_t':'unsigned long' lvalue Var 0x5590eceea6e8 'lr' 'size_t':'unsigned long'
[B9.8] == [B9.10]
   T: if [B9.11]
   Preds (1): B11
   Succs (2): B8 B4

 [B10]
   1: DeclRefExpr 0x5590eceeaa68 <lvm.c:210:27> 'int' lvalue Var 0x5590eceea840 'temp' 'int'
temp
   2: ImplicitCastExpr 0x5590eceeaa90 <lvm.c:210:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590eceeaa68 <col:27> 'int' lvalue Var 0x5590eceea840 'temp' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x5590eceeaaa8 <lvm.c:210:20, col:27>
`-ImplicitCastExpr 0x5590eceeaa90 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeaa68 <col:27> 'int' lvalue Var 0x5590eceea840 'temp' 'int'
return [B10.2];
   Preds (1): B11
   Succs (1): B0

 [B11]
   1: DeclRefExpr 0x5590eceea8a0 <lvm.c:209:16> 'int (const char *, const char *)' Function 0x5590ecdacb68 'strcoll' 'int (const char *, const char *)'
strcoll
   2: ImplicitCastExpr 0x5590eceea948 <lvm.c:209:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceea8a0 <col:16> 'int (const char *, const char *)' Function 0x5590ecdacb68 'strcoll' 'int (const char *, const char *)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *))
   3: DeclRefExpr 0x5590eceea8c8 <lvm.c:209:24> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
l
   4: ImplicitCastExpr 0x5590eceea998 <lvm.c:209:24> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5590eceea8c8 <col:24> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
[B11.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x5590eceea8f0 <lvm.c:209:27> 'const char *' lvalue Var 0x5590eceea508 'r' 'const char *'
r
   6: ImplicitCastExpr 0x5590eceea9b0 <lvm.c:209:27> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5590eceea8f0 <col:27> 'const char *' lvalue Var 0x5590eceea508 'r' 'const char *'
[B11.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x5590eceea960 <lvm.c:209:16, col:28> 'int'
|-ImplicitCastExpr 0x5590eceea948 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceea8a0 <col:16> 'int (const char *, const char *)' Function 0x5590ecdacb68 'strcoll' 'int (const char *, const char *)'
|-ImplicitCastExpr 0x5590eceea998 <col:24> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceea8c8 <col:24> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
`-ImplicitCastExpr 0x5590eceea9b0 <col:27> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceea8f0 <col:27> 'const char *' lvalue Var 0x5590eceea508 'r' 'const char *'
[B11.2]([B11.4], [B11.6])
   8: DeclStmt 0x5590eceea9c8 <lvm.c:209:5, col:29>col:9
`-VarDecl 0x5590eceea840 <col:5, col:28> col:9 used temp 'int' cinit
  `-CallExpr 0x5590eceea960 <col:16, col:28> 'int'
    |-ImplicitCastExpr 0x5590eceea948 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590eceea8a0 <col:16> 'int (const char *, const char *)' Function 0x5590ecdacb68 'strcoll' 'int (const char *, const char *)'
    |-ImplicitCastExpr 0x5590eceea998 <col:24> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x5590eceea8c8 <col:24> 'const char *' lvalue Var 0x5590eceea1d0 'l' 'const char *'
    `-ImplicitCastExpr 0x5590eceea9b0 <col:27> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x5590eceea8f0 <col:27> 'const char *' lvalue Var 0x5590eceea508 'r' 'const char *'
int temp = strcoll(l, r);
   9: DeclRefExpr 0x5590eceea9e0 <lvm.c:210:9> 'int' lvalue Var 0x5590eceea840 'temp' 'int'
temp
  10: ImplicitCastExpr 0x5590eceeaa28 <lvm.c:210:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590eceea9e0 <col:9> 'int' lvalue Var 0x5590eceea840 'temp' 'int'
[B11.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x5590eceeaa08 <lvm.c:210:17> 'int' 0
0
  12: BinaryOperator 0x5590eceeaa40 <lvm.c:210:9, col:17> 'int' '!='
|-ImplicitCastExpr 0x5590eceeaa28 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5590eceea9e0 <col:9> 'int' lvalue Var 0x5590eceea840 'temp' 'int'
`-IntegerLiteral 0x5590eceeaa08 <col:17> 'int' 0
[B11.10] != [B11.11]
   T: if [B11.12]
   Preds (1): B12
   Succs (2): B10 B9

 [B12]
   T: for (; ; )
   Preds (2): B1 B13
   Succs (2): B11 NULL

 [B13]
   1: DeclRefExpr 0x5590eceea230 <lvm.c:204:26> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
ls
   2: ImplicitCastExpr 0x5590eceea298 <./lobject.h:210:39, col:42> 'const TString *' <LValueToRValue>
`-ParenExpr 0x5590eceea258 <col:39, col:42> 'const TString *' lvalue
  `-DeclRefExpr 0x5590eceea230 <lvm.c:204:26> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
([B13.1]) (ImplicitCastExpr, LValueToRValue, const TString *)
   3: IntegerLiteral 0x5590eceea278 <./lobject.h:210:46> 'int' 1
1
   4: BinaryOperator 0x5590eceea2b0 <./lobject.h:210:39, col:46> 'const TString *' '+'
|-ImplicitCastExpr 0x5590eceea298 <col:39, col:42> 'const TString *' <LValueToRValue>
| `-ParenExpr 0x5590eceea258 <col:39, col:42> 'const TString *' lvalue
|   `-DeclRefExpr 0x5590eceea230 <lvm.c:204:26> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
`-IntegerLiteral 0x5590eceea278 <./lobject.h:210:46> 'int' 1
[B13.2] + [B13.3]
   5: CStyleCastExpr 0x5590eceea340 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x5590eceea320 <col:26, col:30> 'const TString *'
  `-BinaryOperator 0x5590eceea2b0 <./lobject.h:210:39, col:46> 'const TString *' '+'
    |-ImplicitCastExpr 0x5590eceea298 <col:39, col:42> 'const TString *' <LValueToRValue>
    | `-ParenExpr 0x5590eceea258 <col:39, col:42> 'const TString *' lvalue
    |   `-DeclRefExpr 0x5590eceea230 <lvm.c:204:26> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
    `-IntegerLiteral 0x5590eceea278 <./lobject.h:210:46> 'int' 1
(const char *)([B13.4]) (CStyleCastExpr, BitCast, const char *)
   6: DeclStmt 0x5590eceea388 <lvm.c:204:3, col:29>col:15
`-VarDecl 0x5590eceea1d0 <col:3, ./llimits.h:75:31> lvm.c:204:15 used l 'const char *' cinit
  `-ParenExpr 0x5590eceea368 <./llimits.h:75:22, col:31> 'const char *'
    `-CStyleCastExpr 0x5590eceea340 <col:23, col:30> 'const char *' <BitCast>
      `-ParenExpr 0x5590eceea320 <col:26, col:30> 'const TString *'
        `-BinaryOperator 0x5590eceea2b0 <./lobject.h:210:39, col:46> 'const TString *' '+'
          |-ImplicitCastExpr 0x5590eceea298 <col:39, col:42> 'const TString *' <LValueToRValue>
          | `-ParenExpr 0x5590eceea258 <col:39, col:42> 'const TString *' lvalue
          |   `-DeclRefExpr 0x5590eceea230 <lvm.c:204:26> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
          `-IntegerLiteral 0x5590eceea278 <./lobject.h:210:46> 'int' 1
const char *l = ((const char *)((ls) + 1));
   7: DeclRefExpr 0x5590eceea410 <lvm.c:205:15> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
ls
   8: ImplicitCastExpr 0x5590eceea438 <lvm.c:205:15> 'const TString *' <LValueToRValue>
`-DeclRefExpr 0x5590eceea410 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
[B13.7] (ImplicitCastExpr, LValueToRValue, const TString *)
   9: MemberExpr 0x5590eceea450 <lvm.c:205:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
`-ImplicitCastExpr 0x5590eceea438 <col:15> 'const TString *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceea410 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
[B13.8]->tsv
  10: MemberExpr 0x5590eceea488 <lvm.c:205:15, col:23> 'const size_t':'const unsigned long' lvalue .len 0x5590ece8bab0
`-MemberExpr 0x5590eceea450 <col:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
  `-ImplicitCastExpr 0x5590eceea438 <col:15> 'const TString *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceea410 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
[B13.9].len
  11: ImplicitCastExpr 0x5590eceea4c0 <lvm.c:205:15, col:23> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x5590eceea488 <col:15, col:23> 'const size_t':'const unsigned long' lvalue .len 0x5590ece8bab0
  `-MemberExpr 0x5590eceea450 <col:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
    `-ImplicitCastExpr 0x5590eceea438 <col:15> 'const TString *' <LValueToRValue>
      `-DeclRefExpr 0x5590eceea410 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
[B13.10] (ImplicitCastExpr, LValueToRValue, size_t)
  12: DeclStmt 0x5590eceea4d8 <lvm.c:205:3, col:26>col:10
`-VarDecl 0x5590eceea3b0 <col:3, col:23> col:10 used ll 'size_t':'unsigned long' cinit
  `-ImplicitCastExpr 0x5590eceea4c0 <col:15, col:23> 'size_t':'unsigned long' <LValueToRValue>
    `-MemberExpr 0x5590eceea488 <col:15, col:23> 'const size_t':'const unsigned long' lvalue .len 0x5590ece8bab0
      `-MemberExpr 0x5590eceea450 <col:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
        `-ImplicitCastExpr 0x5590eceea438 <col:15> 'const TString *' <LValueToRValue>
          `-DeclRefExpr 0x5590eceea410 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9f78 'ls' 'const TString *'
size_t ll = ls->tsv.len;
  13: DeclRefExpr 0x5590eceea568 <lvm.c:206:26> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
rs
  14: ImplicitCastExpr 0x5590eceea5d0 <./lobject.h:210:39, col:42> 'const TString *' <LValueToRValue>
`-ParenExpr 0x5590eceea590 <col:39, col:42> 'const TString *' lvalue
  `-DeclRefExpr 0x5590eceea568 <lvm.c:206:26> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
([B13.13]) (ImplicitCastExpr, LValueToRValue, const TString *)
  15: IntegerLiteral 0x5590eceea5b0 <./lobject.h:210:46> 'int' 1
1
  16: BinaryOperator 0x5590eceea5e8 <./lobject.h:210:39, col:46> 'const TString *' '+'
|-ImplicitCastExpr 0x5590eceea5d0 <col:39, col:42> 'const TString *' <LValueToRValue>
| `-ParenExpr 0x5590eceea590 <col:39, col:42> 'const TString *' lvalue
|   `-DeclRefExpr 0x5590eceea568 <lvm.c:206:26> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
`-IntegerLiteral 0x5590eceea5b0 <./lobject.h:210:46> 'int' 1
[B13.14] + [B13.15]
  17: CStyleCastExpr 0x5590eceea678 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x5590eceea658 <col:26, col:30> 'const TString *'
  `-BinaryOperator 0x5590eceea5e8 <./lobject.h:210:39, col:46> 'const TString *' '+'
    |-ImplicitCastExpr 0x5590eceea5d0 <col:39, col:42> 'const TString *' <LValueToRValue>
    | `-ParenExpr 0x5590eceea590 <col:39, col:42> 'const TString *' lvalue
    |   `-DeclRefExpr 0x5590eceea568 <lvm.c:206:26> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
    `-IntegerLiteral 0x5590eceea5b0 <./lobject.h:210:46> 'int' 1
(const char *)([B13.16]) (CStyleCastExpr, BitCast, const char *)
  18: DeclStmt 0x5590eceea6c0 <lvm.c:206:3, col:29>col:15
`-VarDecl 0x5590eceea508 <col:3, ./llimits.h:75:31> lvm.c:206:15 used r 'const char *' cinit
  `-ParenExpr 0x5590eceea6a0 <./llimits.h:75:22, col:31> 'const char *'
    `-CStyleCastExpr 0x5590eceea678 <col:23, col:30> 'const char *' <BitCast>
      `-ParenExpr 0x5590eceea658 <col:26, col:30> 'const TString *'
        `-BinaryOperator 0x5590eceea5e8 <./lobject.h:210:39, col:46> 'const TString *' '+'
          |-ImplicitCastExpr 0x5590eceea5d0 <col:39, col:42> 'const TString *' <LValueToRValue>
          | `-ParenExpr 0x5590eceea590 <col:39, col:42> 'const TString *' lvalue
          |   `-DeclRefExpr 0x5590eceea568 <lvm.c:206:26> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
          `-IntegerLiteral 0x5590eceea5b0 <./lobject.h:210:46> 'int' 1
const char *r = ((const char *)((rs) + 1));
  19: DeclRefExpr 0x5590eceea748 <lvm.c:207:15> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
rs
  20: ImplicitCastExpr 0x5590eceea770 <lvm.c:207:15> 'const TString *' <LValueToRValue>
`-DeclRefExpr 0x5590eceea748 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
[B13.19] (ImplicitCastExpr, LValueToRValue, const TString *)
  21: MemberExpr 0x5590eceea788 <lvm.c:207:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
`-ImplicitCastExpr 0x5590eceea770 <col:15> 'const TString *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceea748 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
[B13.20]->tsv
  22: MemberExpr 0x5590eceea7c0 <lvm.c:207:15, col:23> 'const size_t':'const unsigned long' lvalue .len 0x5590ece8bab0
`-MemberExpr 0x5590eceea788 <col:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
  `-ImplicitCastExpr 0x5590eceea770 <col:15> 'const TString *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceea748 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
[B13.21].len
  23: ImplicitCastExpr 0x5590eceea7f8 <lvm.c:207:15, col:23> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x5590eceea7c0 <col:15, col:23> 'const size_t':'const unsigned long' lvalue .len 0x5590ece8bab0
  `-MemberExpr 0x5590eceea788 <col:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
    `-ImplicitCastExpr 0x5590eceea770 <col:15> 'const TString *' <LValueToRValue>
      `-DeclRefExpr 0x5590eceea748 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
[B13.22] (ImplicitCastExpr, LValueToRValue, size_t)
  24: DeclStmt 0x5590eceea810 <lvm.c:207:3, col:26>col:10
`-VarDecl 0x5590eceea6e8 <col:3, col:23> col:10 used lr 'size_t':'unsigned long' cinit
  `-ImplicitCastExpr 0x5590eceea7f8 <col:15, col:23> 'size_t':'unsigned long' <LValueToRValue>
    `-MemberExpr 0x5590eceea7c0 <col:15, col:23> 'const size_t':'const unsigned long' lvalue .len 0x5590ece8bab0
      `-MemberExpr 0x5590eceea788 <col:15, col:19> 'const struct (anonymous struct at ./lobject.h:201:3)':'const struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
        `-ImplicitCastExpr 0x5590eceea770 <col:15> 'const TString *' <LValueToRValue>
          `-DeclRefExpr 0x5590eceea748 <col:15> 'const TString *' lvalue ParmVar 0x5590ecee9fe8 'rs' 'const TString *'
size_t lr = rs->tsv.len;
   Preds (1): B14
   Succs (1): B12

 [B0 (EXIT)]
   Preds (3): B3 B5 B10
