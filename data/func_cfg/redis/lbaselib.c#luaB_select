static int luaB_select(lua_State *L)
 [B11 (ENTRY)]
   Succs (1): B10

 [B1]
   1: BinaryOperator 0x562da2822628 <./lauxlib.h:101:11, col:58> 'int' '||'
|-ParenExpr 0x562da2822438 <col:11, col:16> 'int'
| `-BinaryOperator 0x562da2822410 <lbaselib.c:368:22, col:27> 'int' '<='
|   |-IntegerLiteral 0x562da28223b0 <col:22> 'int' 1
|   `-ImplicitCastExpr 0x562da28223f8 <col:27> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x562da28223d0 <col:27> 'int' lvalue Var 0x562da2821e88 'i' 'int'
`-CallExpr 0x562da28225a0 <./lauxlib.h:101:21, col:58> 'int'
  |-ImplicitCastExpr 0x562da2822588 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da2822458 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x562da28225e0 <lbaselib.c:368:19> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da2822480 <col:19> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
  |-ParenExpr 0x562da28224c8 <./lauxlib.h:101:38, col:45> 'int'
  | `-IntegerLiteral 0x562da28224a8 <lbaselib.c:368:30> 'int' 1
  `-ImplicitCastExpr 0x562da2822610 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x562da28225f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
      `-ParenExpr 0x562da2822568 <col:48, col:57> 'char [19]' lvalue
        `-StringLiteral 0x562da2822528 <lbaselib.c:368:33> 'char [19]' lvalue "index out of range"
([B3.4]) || [B2.9]
   2: CStyleCastExpr 0x562da28226b0 <./lauxlib.h:101:4, col:59> 'void' <ToVoid>
`-ParenExpr 0x562da2822690 <col:10, col:59> 'int'
  `-BinaryOperator 0x562da2822628 <col:11, col:58> 'int' '||'
    |-ParenExpr 0x562da2822438 <col:11, col:16> 'int'
    | `-BinaryOperator 0x562da2822410 <lbaselib.c:368:22, col:27> 'int' '<='
    |   |-IntegerLiteral 0x562da28223b0 <col:22> 'int' 1
    |   `-ImplicitCastExpr 0x562da28223f8 <col:27> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x562da28223d0 <col:27> 'int' lvalue Var 0x562da2821e88 'i' 'int'
    `-CallExpr 0x562da28225a0 <./lauxlib.h:101:21, col:58> 'int'
      |-ImplicitCastExpr 0x562da2822588 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da2822458 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
      |-ImplicitCastExpr 0x562da28225e0 <lbaselib.c:368:19> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x562da2822480 <col:19> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
      |-ParenExpr 0x562da28224c8 <./lauxlib.h:101:38, col:45> 'int'
      | `-IntegerLiteral 0x562da28224a8 <lbaselib.c:368:30> 'int' 1
      `-ImplicitCastExpr 0x562da2822610 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
        `-ImplicitCastExpr 0x562da28225f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
          `-ParenExpr 0x562da2822568 <col:48, col:57> 'char [19]' lvalue
            `-StringLiteral 0x562da2822528 <lbaselib.c:368:33> 'char [19]' lvalue "index out of range"
(void)([B1.1]) (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x562da28226f8 <lbaselib.c:369:12> 'int' lvalue Var 0x562da2821828 'n' 'int'
n
   4: ImplicitCastExpr 0x562da2822748 <lbaselib.c:369:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da28226f8 <col:12> 'int' lvalue Var 0x562da2821828 'n' 'int'
[B1.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x562da2822720 <lbaselib.c:369:16> 'int' lvalue Var 0x562da2821e88 'i' 'int'
i
   6: ImplicitCastExpr 0x562da2822760 <lbaselib.c:369:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2822720 <col:16> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x562da2822778 <lbaselib.c:369:12, col:16> 'int' '-'
|-ImplicitCastExpr 0x562da2822748 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da28226f8 <col:12> 'int' lvalue Var 0x562da2821828 'n' 'int'
`-ImplicitCastExpr 0x562da2822760 <col:16> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2822720 <col:16> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B1.4] - [B1.6]
   8: ReturnStmt 0x562da28227a0 <lbaselib.c:369:5, col:16>
`-BinaryOperator 0x562da2822778 <col:12, col:16> 'int' '-'
  |-ImplicitCastExpr 0x562da2822748 <col:12> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x562da28226f8 <col:12> 'int' lvalue Var 0x562da2821828 'n' 'int'
  `-ImplicitCastExpr 0x562da2822760 <col:16> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da2822720 <col:16> 'int' lvalue Var 0x562da2821e88 'i' 'int'
return [B1.7];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x562da2822458 <./lauxlib.h:101:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x562da2822588 <./lauxlib.h:101:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2822458 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x562da2822480 <lbaselib.c:368:19> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da28225e0 <lbaselib.c:368:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2822480 <col:19> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da28224a8 <lbaselib.c:368:30> 'int' 1
1
   6: StringLiteral 0x562da2822528 <lbaselib.c:368:33> 'char [19]' lvalue "index out of range"
"index out of range"
   7: ImplicitCastExpr 0x562da28225f8 <./lauxlib.h:101:48, col:57> 'char *' <ArrayToPointerDecay>
`-ParenExpr 0x562da2822568 <col:48, col:57> 'char [19]' lvalue
  `-StringLiteral 0x562da2822528 <lbaselib.c:368:33> 'char [19]' lvalue "index out of range"
([B2.6]) (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x562da2822610 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da28225f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
  `-ParenExpr 0x562da2822568 <col:48, col:57> 'char [19]' lvalue
    `-StringLiteral 0x562da2822528 <lbaselib.c:368:33> 'char [19]' lvalue "index out of range"
[B2.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x562da28225a0 <./lauxlib.h:101:21, col:58> 'int'
|-ImplicitCastExpr 0x562da2822588 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2822458 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x562da28225e0 <lbaselib.c:368:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2822480 <col:19> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
|-ParenExpr 0x562da28224c8 <./lauxlib.h:101:38, col:45> 'int'
| `-IntegerLiteral 0x562da28224a8 <lbaselib.c:368:30> 'int' 1
`-ImplicitCastExpr 0x562da2822610 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562da28225f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
    `-ParenExpr 0x562da2822568 <col:48, col:57> 'char [19]' lvalue
      `-StringLiteral 0x562da2822528 <lbaselib.c:368:33> 'char [19]' lvalue "index out of range"
[B2.2]([B2.4], ([B2.5]), [B2.8])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x562da28223b0 <lbaselib.c:368:22> 'int' 1
1
   2: DeclRefExpr 0x562da28223d0 <lbaselib.c:368:27> 'int' lvalue Var 0x562da2821e88 'i' 'int'
i
   3: ImplicitCastExpr 0x562da28223f8 <lbaselib.c:368:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da28223d0 <col:27> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B3.2] (ImplicitCastExpr, LValueToRValue, int)
   4: BinaryOperator 0x562da2822410 <lbaselib.c:368:22, col:27> 'int' '<='
|-IntegerLiteral 0x562da28223b0 <col:22> 'int' 1
`-ImplicitCastExpr 0x562da28223f8 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da28223d0 <col:27> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B3.1] <= [B3.3]
   T: ([B3.4]) || ...
   Preds (3): B4 B5 B6
   Succs (2): B1 B2

 [B4]
   1: DeclRefExpr 0x562da28222d8 <lbaselib.c:367:25> 'int' lvalue Var 0x562da2821828 'n' 'int'
n
   2: ImplicitCastExpr 0x562da2822300 <lbaselib.c:367:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da28222d8 <col:25> 'int' lvalue Var 0x562da2821828 'n' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562da28222b0 <lbaselib.c:367:21> 'int' lvalue Var 0x562da2821e88 'i' 'int'
i
   4: BinaryOperator 0x562da2822318 <lbaselib.c:367:21, col:25> 'int' '='
|-DeclRefExpr 0x562da28222b0 <col:21> 'int' lvalue Var 0x562da2821e88 'i' 'int'
`-ImplicitCastExpr 0x562da2822300 <col:25> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da28222d8 <col:25> 'int' lvalue Var 0x562da2821828 'n' 'int'
[B4.3] = [B4.2]
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x562da2822208 <lbaselib.c:367:14> 'int' lvalue Var 0x562da2821e88 'i' 'int'
i
   2: ImplicitCastExpr 0x562da2822258 <lbaselib.c:367:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2822208 <col:14> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562da2822230 <lbaselib.c:367:18> 'int' lvalue Var 0x562da2821828 'n' 'int'
n
   4: ImplicitCastExpr 0x562da2822270 <lbaselib.c:367:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2822230 <col:18> 'int' lvalue Var 0x562da2821828 'n' 'int'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562da2822288 <lbaselib.c:367:14, col:18> 'int' '>'
|-ImplicitCastExpr 0x562da2822258 <col:14> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da2822208 <col:14> 'int' lvalue Var 0x562da2821e88 'i' 'int'
`-ImplicitCastExpr 0x562da2822270 <col:18> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2822230 <col:18> 'int' lvalue Var 0x562da2821828 'n' 'int'
[B5.2] > [B5.4]
   T: if [B5.5]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x562da2822108 <lbaselib.c:366:20> 'int' lvalue Var 0x562da2821828 'n' 'int'
n
   2: ImplicitCastExpr 0x562da2822158 <lbaselib.c:366:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2822108 <col:20> 'int' lvalue Var 0x562da2821828 'n' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562da2822130 <lbaselib.c:366:24> 'int' lvalue Var 0x562da2821e88 'i' 'int'
i
   4: ImplicitCastExpr 0x562da2822170 <lbaselib.c:366:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2822130 <col:24> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562da2822188 <lbaselib.c:366:20, col:24> 'int' '+'
|-ImplicitCastExpr 0x562da2822158 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da2822108 <col:20> 'int' lvalue Var 0x562da2821828 'n' 'int'
`-ImplicitCastExpr 0x562da2822170 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2822130 <col:24> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B6.2] + [B6.4]
   6: DeclRefExpr 0x562da28220e0 <lbaselib.c:366:16> 'int' lvalue Var 0x562da2821e88 'i' 'int'
i
   7: BinaryOperator 0x562da28221e0 <lbaselib.c:366:16, col:24> 'int' '='
|-DeclRefExpr 0x562da28220e0 <col:16> 'int' lvalue Var 0x562da2821e88 'i' 'int'
`-BinaryOperator 0x562da2822188 <col:20, col:24> 'int' '+'
  |-ImplicitCastExpr 0x562da2822158 <col:20> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x562da2822108 <col:20> 'int' lvalue Var 0x562da2821828 'n' 'int'
  `-ImplicitCastExpr 0x562da2822170 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da2822130 <col:24> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B6.6] = [B6.5]
   Preds (1): B7
   Succs (1): B3

 [B7]
   1: DeclRefExpr 0x562da2821ee8 <./lauxlib.h:104:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
   2: ImplicitCastExpr 0x562da2821f78 <./lauxlib.h:104:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2821ee8 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
   3: DeclRefExpr 0x562da2821f10 <lbaselib.c:365:27> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2821fc8 <lbaselib.c:365:27> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2821f10 <col:27> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2821f38 <lbaselib.c:365:30> 'int' 1
1
   6: CallExpr 0x562da2821f90 <./lauxlib.h:104:34, col:58> 'lua_Integer':'long'
|-ImplicitCastExpr 0x562da2821f78 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2821ee8 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x562da2821fc8 <lbaselib.c:365:27> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2821f10 <col:27> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
`-ParenExpr 0x562da2821f58 <./lauxlib.h:104:55, col:57> 'int'
  `-IntegerLiteral 0x562da2821f38 <lbaselib.c:365:30> 'int' 1
[B7.2]([B7.4], ([B7.5]))
   7: CStyleCastExpr 0x562da2821ff8 <./lauxlib.h:104:29, col:58> 'int' <IntegralCast>
`-CallExpr 0x562da2821f90 <col:34, col:58> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x562da2821f78 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da2821ee8 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x562da2821fc8 <lbaselib.c:365:27> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da2821f10 <col:27> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
  `-ParenExpr 0x562da2821f58 <./lauxlib.h:104:55, col:57> 'int'
    `-IntegerLiteral 0x562da2821f38 <lbaselib.c:365:30> 'int' 1
(int)[B7.6] (CStyleCastExpr, IntegralCast, int)
   8: DeclStmt 0x562da2822040 <lbaselib.c:365:5, col:32>col:9
`-VarDecl 0x562da2821e88 <col:5, ./lauxlib.h:104:59> lbaselib.c:365:9 used i 'int' cinit
  `-ParenExpr 0x562da2822020 <./lauxlib.h:104:28, col:59> 'int'
    `-CStyleCastExpr 0x562da2821ff8 <col:29, col:58> 'int' <IntegralCast>
      `-CallExpr 0x562da2821f90 <col:34, col:58> 'lua_Integer':'long'
        |-ImplicitCastExpr 0x562da2821f78 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x562da2821ee8 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
        |-ImplicitCastExpr 0x562da2821fc8 <lbaselib.c:365:27> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x562da2821f10 <col:27> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
        `-ParenExpr 0x562da2821f58 <./lauxlib.h:104:55, col:57> 'int'
          `-IntegerLiteral 0x562da2821f38 <lbaselib.c:365:30> 'int' 1
int i = ((int)luaL_checkinteger(L, (1)));
   9: DeclRefExpr 0x562da2822058 <lbaselib.c:366:9> 'int' lvalue Var 0x562da2821e88 'i' 'int'
i
  10: ImplicitCastExpr 0x562da28220a0 <lbaselib.c:366:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2822058 <col:9> 'int' lvalue Var 0x562da2821e88 'i' 'int'
[B7.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x562da2822080 <lbaselib.c:366:13> 'int' 0
0
  12: BinaryOperator 0x562da28220b8 <lbaselib.c:366:9, col:13> 'int' '<'
|-ImplicitCastExpr 0x562da28220a0 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da2822058 <col:9> 'int' lvalue Var 0x562da2821e88 'i' 'int'
`-IntegerLiteral 0x562da2822080 <col:13> 'int' 0
[B7.10] < [B7.11]
   T: if [B7.12]
   Preds (2): B9 B10
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x562da2821cc0 <lbaselib.c:361:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x562da27f0210 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x562da2821d98 <lbaselib.c:361:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2821cc0 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x562da27f0210 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x562da2821ce8 <lbaselib.c:361:21> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2821de8 <lbaselib.c:361:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2821ce8 <col:21> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da2821d10 <lbaselib.c:361:24> 'int' lvalue Var 0x562da2821828 'n' 'int'
n
   6: ImplicitCastExpr 0x562da2821d58 <lbaselib.c:361:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2821d10 <col:24> 'int' lvalue Var 0x562da2821828 'n' 'int'
[B8.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x562da2821d38 <lbaselib.c:361:26> 'int' 1
1
   8: BinaryOperator 0x562da2821d70 <lbaselib.c:361:24, col:26> 'int' '-'
|-ImplicitCastExpr 0x562da2821d58 <col:24> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da2821d10 <col:24> 'int' lvalue Var 0x562da2821828 'n' 'int'
`-IntegerLiteral 0x562da2821d38 <col:26> 'int' 1
[B8.6] - [B8.7]
   9: ImplicitCastExpr 0x562da2821e00 <lbaselib.c:361:24, col:26> 'lua_Integer':'long' <IntegralCast>
`-BinaryOperator 0x562da2821d70 <col:24, col:26> 'int' '-'
  |-ImplicitCastExpr 0x562da2821d58 <col:24> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x562da2821d10 <col:24> 'int' lvalue Var 0x562da2821828 'n' 'int'
  `-IntegerLiteral 0x562da2821d38 <col:26> 'int' 1
[B8.8] (ImplicitCastExpr, IntegralCast, lua_Integer)
  10: CallExpr 0x562da2821db0 <lbaselib.c:361:5, col:27> 'void'
|-ImplicitCastExpr 0x562da2821d98 <col:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2821cc0 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x562da27f0210 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x562da2821de8 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2821ce8 <col:21> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da2821e00 <col:24, col:26> 'lua_Integer':'long' <IntegralCast>
  `-BinaryOperator 0x562da2821d70 <col:24, col:26> 'int' '-'
    |-ImplicitCastExpr 0x562da2821d58 <col:24> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x562da2821d10 <col:24> 'int' lvalue Var 0x562da2821828 'n' 'int'
    `-IntegerLiteral 0x562da2821d38 <col:26> 'int' 1
[B8.2]([B8.4], [B8.9])
  11: IntegerLiteral 0x562da2821e18 <lbaselib.c:362:12> 'int' 1
1
  12: ReturnStmt 0x562da2821e38 <lbaselib.c:362:5, col:12>
`-IntegerLiteral 0x562da2821e18 <col:12> 'int' 1
return [B8.11];
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x562da2821a70 <./lua.h:279:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da27eea40 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
lua_tolstring
   2: ImplicitCastExpr 0x562da2821b80 <./lua.h:279:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2821a70 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da27eea40 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   3: DeclRefExpr 0x562da2821a98 <lbaselib.c:360:54> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2821bd8 <lbaselib.c:360:54> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2821a98 <col:54> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2821ac0 <lbaselib.c:360:57> 'int' 1
1
   6: IntegerLiteral 0x562da2821b00 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x562da2821b38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562da2821b00 <col:24> 'int' 0
(void *)[B9.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x562da2821bf0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x562da2821b60 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562da2821b38 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562da2821b00 <col:24> 'int' 0
([B9.7]) (ImplicitCastExpr, NullToPointer, size_t *)
   9: CallExpr 0x562da2821b98 <./lua.h:279:27, col:53> 'const char *'
|-ImplicitCastExpr 0x562da2821b80 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2821a70 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da27eea40 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x562da2821bd8 <lbaselib.c:360:54> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2821a98 <col:54> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
|-ParenExpr 0x562da2821ae0 <./lua.h:279:44, col:46> 'int'
| `-IntegerLiteral 0x562da2821ac0 <lbaselib.c:360:57> 'int' 1
`-ImplicitCastExpr 0x562da2821bf0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x562da2821b60 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562da2821b38 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562da2821b00 <col:24> 'int' 0
[B9.2]([B9.4], ([B9.5]), [B9.8])
  10: UnaryOperator 0x562da2821c08 <lbaselib.c:360:40, ./lua.h:279:53> 'const char' lvalue prefix '*'
`-CallExpr 0x562da2821b98 <col:27, col:53> 'const char *'
  |-ImplicitCastExpr 0x562da2821b80 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da2821a70 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da27eea40 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
  |-ImplicitCastExpr 0x562da2821bd8 <lbaselib.c:360:54> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da2821a98 <col:54> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
  |-ParenExpr 0x562da2821ae0 <./lua.h:279:44, col:46> 'int'
  | `-IntegerLiteral 0x562da2821ac0 <lbaselib.c:360:57> 'int' 1
  `-ImplicitCastExpr 0x562da2821bf0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
    `-ParenExpr 0x562da2821b60 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x562da2821b38 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x562da2821b00 <col:24> 'int' 0
*[B9.9]
  11: ImplicitCastExpr 0x562da2821c40 <lbaselib.c:360:40, ./lua.h:279:53> 'char' <LValueToRValue>
`-UnaryOperator 0x562da2821c08 <lbaselib.c:360:40, ./lua.h:279:53> 'const char' lvalue prefix '*'
  `-CallExpr 0x562da2821b98 <col:27, col:53> 'const char *'
    |-ImplicitCastExpr 0x562da2821b80 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da2821a70 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da27eea40 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
    |-ImplicitCastExpr 0x562da2821bd8 <lbaselib.c:360:54> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da2821a98 <col:54> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
    |-ParenExpr 0x562da2821ae0 <./lua.h:279:44, col:46> 'int'
    | `-IntegerLiteral 0x562da2821ac0 <lbaselib.c:360:57> 'int' 1
    `-ImplicitCastExpr 0x562da2821bf0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
      `-ParenExpr 0x562da2821b60 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x562da2821b38 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x562da2821b00 <col:24> 'int' 0
[B9.10] (ImplicitCastExpr, LValueToRValue, char)
  12: ImplicitCastExpr 0x562da2821c58 <lbaselib.c:360:40, ./lua.h:279:53> 'int' <IntegralCast>
`-ImplicitCastExpr 0x562da2821c40 <lbaselib.c:360:40, ./lua.h:279:53> 'char' <LValueToRValue>
  `-UnaryOperator 0x562da2821c08 <lbaselib.c:360:40, ./lua.h:279:53> 'const char' lvalue prefix '*'
    `-CallExpr 0x562da2821b98 <col:27, col:53> 'const char *'
      |-ImplicitCastExpr 0x562da2821b80 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da2821a70 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da27eea40 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
      |-ImplicitCastExpr 0x562da2821bd8 <lbaselib.c:360:54> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x562da2821a98 <col:54> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
      |-ParenExpr 0x562da2821ae0 <./lua.h:279:44, col:46> 'int'
      | `-IntegerLiteral 0x562da2821ac0 <lbaselib.c:360:57> 'int' 1
      `-ImplicitCastExpr 0x562da2821bf0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x562da2821b60 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x562da2821b38 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x562da2821b00 <col:24> 'int' 0
[B9.11] (ImplicitCastExpr, IntegralCast, int)
  13: CharacterLiteral 0x562da2821c28 <lbaselib.c:360:63> 'int' 35
'#'
  14: BinaryOperator 0x562da2821c70 <lbaselib.c:360:40, col:63> 'int' '=='
|-ImplicitCastExpr 0x562da2821c58 <col:40, ./lua.h:279:53> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x562da2821c40 <lbaselib.c:360:40, ./lua.h:279:53> 'char' <LValueToRValue>
|   `-UnaryOperator 0x562da2821c08 <lbaselib.c:360:40, ./lua.h:279:53> 'const char' lvalue prefix '*'
|     `-CallExpr 0x562da2821b98 <col:27, col:53> 'const char *'
|       |-ImplicitCastExpr 0x562da2821b80 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562da2821a70 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da27eea40 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|       |-ImplicitCastExpr 0x562da2821bd8 <lbaselib.c:360:54> 'lua_State *' <LValueToRValue>
|       | `-DeclRefExpr 0x562da2821a98 <col:54> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
|       |-ParenExpr 0x562da2821ae0 <./lua.h:279:44, col:46> 'int'
|       | `-IntegerLiteral 0x562da2821ac0 <lbaselib.c:360:57> 'int' 1
|       `-ImplicitCastExpr 0x562da2821bf0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
|         `-ParenExpr 0x562da2821b60 <col:16, col:25> 'void *'
|           `-CStyleCastExpr 0x562da2821b38 <col:17, col:24> 'void *' <NullToPointer>
|             `-IntegerLiteral 0x562da2821b00 <col:24> 'int' 0
`-CharacterLiteral 0x562da2821c28 <lbaselib.c:360:63> 'int' 35
[B9.12] == [B9.13]
   T: if [B10.14] && [B9.14]
   Preds (1): B10
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x562da2821888 <lbaselib.c:359:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
   2: ImplicitCastExpr 0x562da28218d8 <lbaselib.c:359:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2821888 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   3: DeclRefExpr 0x562da28218b0 <lbaselib.c:359:22> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2821920 <lbaselib.c:359:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da28218b0 <col:22> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da28218f0 <lbaselib.c:359:11, col:23> 'int'
|-ImplicitCastExpr 0x562da28218d8 <col:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2821888 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da2821920 <col:22> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da28218b0 <col:22> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
[B10.2]([B10.4])
   6: DeclStmt 0x562da2821938 <lbaselib.c:359:3, col:24>col:7
`-VarDecl 0x562da2821828 <col:3, col:23> col:7 used n 'int' cinit
  `-CallExpr 0x562da28218f0 <col:11, col:23> 'int'
    |-ImplicitCastExpr 0x562da28218d8 <col:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da2821888 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
    `-ImplicitCastExpr 0x562da2821920 <col:22> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x562da28218b0 <col:22> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
int n = lua_gettop(L);
   7: DeclRefExpr 0x562da2821950 <lbaselib.c:360:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   8: ImplicitCastExpr 0x562da28219c0 <lbaselib.c:360:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2821950 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B10.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   9: DeclRefExpr 0x562da2821978 <lbaselib.c:360:16> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x562da2821a10 <lbaselib.c:360:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2821978 <col:16> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
[B10.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: IntegerLiteral 0x562da28219a0 <lbaselib.c:360:19> 'int' 1
1
  12: CallExpr 0x562da28219d8 <lbaselib.c:360:7, col:20> 'int'
|-ImplicitCastExpr 0x562da28219c0 <col:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2821950 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da2821a10 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2821978 <col:16> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
`-IntegerLiteral 0x562da28219a0 <col:19> 'int' 1
[B10.8]([B10.10], [B10.11])
  13: IntegerLiteral 0x562da2821a28 <./lua.h:78:22> 'int' 4
4
  14: BinaryOperator 0x562da2821a48 <lbaselib.c:360:7, ./lua.h:78:22> 'int' '=='
|-CallExpr 0x562da28219d8 <lbaselib.c:360:7, col:20> 'int'
| |-ImplicitCastExpr 0x562da28219c0 <col:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da2821950 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x562da2821a10 <col:16> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x562da2821978 <col:16> 'lua_State *' lvalue ParmVar 0x562da28216d8 'L' 'lua_State *'
| `-IntegerLiteral 0x562da28219a0 <col:19> 'int' 1
`-IntegerLiteral 0x562da2821a28 <./lua.h:78:22> 'int' 4
[B10.12] == [B10.13]
   T: [B10.14] && ...
   Preds (1): B11
   Succs (2): B9 B7

 [B0 (EXIT)]
   Preds (2): B1 B8
