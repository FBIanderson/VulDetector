static const Proto *combine(lua_State *L, int n)
 [B17 (ENTRY)]
   Succs (1): B16

 [B1]
   1: DeclRefExpr 0x55759c9e67b8 <luac.c:142:28> 'int' EnumConstant 0x55759c9b18d0 'OP_RETURN' 'int'
OP_RETURN
   2: CStyleCastExpr 0x55759c9e6840 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e6820 <col:26, col:30> 'int'
  `-DeclRefExpr 0x55759c9e67b8 <luac.c:142:28> 'int' EnumConstant 0x55759c9b18d0 'OP_RETURN' 'int'
(Instruction)([B1.1]) (CStyleCastExpr, IntegralCast, Instruction)
   3: IntegerLiteral 0x55759c9e6888 <./lopcodes.h:44:17> 'int' 0
0
   4: BinaryOperator 0x55759c9e68a8 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e6868 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e6840 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e6820 <col:26, col:30> 'int'
|     `-DeclRefExpr 0x55759c9e67b8 <luac.c:142:28> 'int' EnumConstant 0x55759c9b18d0 'OP_RETURN' 'int'
`-IntegerLiteral 0x55759c9e6888 <./lopcodes.h:44:17> 'int' 0
([B1.2]) << [B1.3]
   5: IntegerLiteral 0x55759c9e68f0 <luac.c:142:38> 'int' 0
0
   6: CStyleCastExpr 0x55759c9e6970 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e6950 <col:26, col:30> 'int'
  `-IntegerLiteral 0x55759c9e68f0 <luac.c:142:38> 'int' 0
(Instruction)([B1.5]) (CStyleCastExpr, IntegralCast, Instruction)
   7: IntegerLiteral 0x55759c9e69b8 <./lopcodes.h:44:17> 'int' 0
0
   8: IntegerLiteral 0x55759c9e69d8 <./lopcodes.h:42:18> 'int' 6
6
   9: BinaryOperator 0x55759c9e69f8 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e69b8 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e69d8 <line:42:18> 'int' 6
[B1.7] + [B1.8]
  10: BinaryOperator 0x55759c9e6a40 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e6998 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e6970 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e6950 <col:26, col:30> 'int'
|     `-IntegerLiteral 0x55759c9e68f0 <luac.c:142:38> 'int' 0
`-ParenExpr 0x55759c9e6a20 <./lopcodes.h:45:16, col:33> 'int'
  `-BinaryOperator 0x55759c9e69f8 <line:44:17, line:42:18> 'int' '+'
    |-IntegerLiteral 0x55759c9e69b8 <line:44:17> 'int' 0
    `-IntegerLiteral 0x55759c9e69d8 <line:42:18> 'int' 6
([B1.6]) << ([B1.9])
  11: BinaryOperator 0x55759c9e6a88 <./lopcodes.h:104:30, line:105:34> 'unsigned int' '|'
|-ParenExpr 0x55759c9e68d0 <line:104:30, col:59> 'Instruction':'unsigned int'
| `-BinaryOperator 0x55759c9e68a8 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
|   |-ParenExpr 0x55759c9e6868 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|   | `-CStyleCastExpr 0x55759c9e6840 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x55759c9e6820 <col:26, col:30> 'int'
|   |     `-DeclRefExpr 0x55759c9e67b8 <luac.c:142:28> 'int' EnumConstant 0x55759c9b18d0 'OP_RETURN' 'int'
|   `-IntegerLiteral 0x55759c9e6888 <./lopcodes.h:44:17> 'int' 0
`-ParenExpr 0x55759c9e6a68 <line:105:6, col:34> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e6a40 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e6998 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e6970 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x55759c9e6950 <col:26, col:30> 'int'
    |     `-IntegerLiteral 0x55759c9e68f0 <luac.c:142:38> 'int' 0
    `-ParenExpr 0x55759c9e6a20 <./lopcodes.h:45:16, col:33> 'int'
      `-BinaryOperator 0x55759c9e69f8 <line:44:17, line:42:18> 'int' '+'
        |-IntegerLiteral 0x55759c9e69b8 <line:44:17> 'int' 0
        `-IntegerLiteral 0x55759c9e69d8 <line:42:18> 'int' 6
([B1.4]) | ([B1.10])
  12: IntegerLiteral 0x55759c9e6ab0 <luac.c:142:40> 'int' 1
1
  13: CStyleCastExpr 0x55759c9e6b30 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e6b10 <col:26, col:30> 'int'
  `-IntegerLiteral 0x55759c9e6ab0 <luac.c:142:40> 'int' 1
(Instruction)([B1.12]) (CStyleCastExpr, IntegralCast, Instruction)
  14: IntegerLiteral 0x55759c9e6b78 <./lopcodes.h:44:17> 'int' 0
0
  15: IntegerLiteral 0x55759c9e6b98 <./lopcodes.h:42:18> 'int' 6
6
  16: BinaryOperator 0x55759c9e6bb8 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e6b78 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e6b98 <line:42:18> 'int' 6
[B1.14] + [B1.15]
  17: IntegerLiteral 0x55759c9e6c00 <./lopcodes.h:40:17> 'int' 8
8
  18: BinaryOperator 0x55759c9e6c20 <./lopcodes.h:45:16, line:40:17> 'int' '+'
|-ParenExpr 0x55759c9e6be0 <line:45:16, col:33> 'int'
| `-BinaryOperator 0x55759c9e6bb8 <line:44:17, line:42:18> 'int' '+'
|   |-IntegerLiteral 0x55759c9e6b78 <line:44:17> 'int' 0
|   `-IntegerLiteral 0x55759c9e6b98 <line:42:18> 'int' 6
`-IntegerLiteral 0x55759c9e6c00 <line:40:17> 'int' 8
([B1.16]) + [B1.17]
  19: IntegerLiteral 0x55759c9e6c68 <./lopcodes.h:37:17> 'int' 9
9
  20: BinaryOperator 0x55759c9e6c88 <./lopcodes.h:46:16, line:37:17> 'int' '+'
|-ParenExpr 0x55759c9e6c48 <line:46:16, col:31> 'int'
| `-BinaryOperator 0x55759c9e6c20 <line:45:16, line:40:17> 'int' '+'
|   |-ParenExpr 0x55759c9e6be0 <line:45:16, col:33> 'int'
|   | `-BinaryOperator 0x55759c9e6bb8 <line:44:17, line:42:18> 'int' '+'
|   |   |-IntegerLiteral 0x55759c9e6b78 <line:44:17> 'int' 0
|   |   `-IntegerLiteral 0x55759c9e6b98 <line:42:18> 'int' 6
|   `-IntegerLiteral 0x55759c9e6c00 <line:40:17> 'int' 8
`-IntegerLiteral 0x55759c9e6c68 <line:37:17> 'int' 9
([B1.18]) + [B1.19]
  21: BinaryOperator 0x55759c9e6cd0 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e6b58 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e6b30 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e6b10 <col:26, col:30> 'int'
|     `-IntegerLiteral 0x55759c9e6ab0 <luac.c:142:40> 'int' 1
`-ParenExpr 0x55759c9e6cb0 <./lopcodes.h:47:16, col:31> 'int'
  `-BinaryOperator 0x55759c9e6c88 <line:46:16, line:37:17> 'int' '+'
    |-ParenExpr 0x55759c9e6c48 <line:46:16, col:31> 'int'
    | `-BinaryOperator 0x55759c9e6c20 <line:45:16, line:40:17> 'int' '+'
    |   |-ParenExpr 0x55759c9e6be0 <line:45:16, col:33> 'int'
    |   | `-BinaryOperator 0x55759c9e6bb8 <line:44:17, line:42:18> 'int' '+'
    |   |   |-IntegerLiteral 0x55759c9e6b78 <line:44:17> 'int' 0
    |   |   `-IntegerLiteral 0x55759c9e6b98 <line:42:18> 'int' 6
    |   `-IntegerLiteral 0x55759c9e6c00 <line:40:17> 'int' 8
    `-IntegerLiteral 0x55759c9e6c68 <line:37:17> 'int' 9
([B1.13]) << ([B1.20])
  22: BinaryOperator 0x55759c9e6d18 <./lopcodes.h:104:30, line:106:34> 'unsigned int' '|'
|-BinaryOperator 0x55759c9e6a88 <line:104:30, line:105:34> 'unsigned int' '|'
| |-ParenExpr 0x55759c9e68d0 <line:104:30, col:59> 'Instruction':'unsigned int'
| | `-BinaryOperator 0x55759c9e68a8 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
| |   |-ParenExpr 0x55759c9e6868 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| |   | `-CStyleCastExpr 0x55759c9e6840 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
| |   |   `-ParenExpr 0x55759c9e6820 <col:26, col:30> 'int'
| |   |     `-DeclRefExpr 0x55759c9e67b8 <luac.c:142:28> 'int' EnumConstant 0x55759c9b18d0 'OP_RETURN' 'int'
| |   `-IntegerLiteral 0x55759c9e6888 <./lopcodes.h:44:17> 'int' 0
| `-ParenExpr 0x55759c9e6a68 <line:105:6, col:34> 'Instruction':'unsigned int'
|   `-BinaryOperator 0x55759c9e6a40 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|     |-ParenExpr 0x55759c9e6998 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|     | `-CStyleCastExpr 0x55759c9e6970 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|     |   `-ParenExpr 0x55759c9e6950 <col:26, col:30> 'int'
|     |     `-IntegerLiteral 0x55759c9e68f0 <luac.c:142:38> 'int' 0
|     `-ParenExpr 0x55759c9e6a20 <./lopcodes.h:45:16, col:33> 'int'
|       `-BinaryOperator 0x55759c9e69f8 <line:44:17, line:42:18> 'int' '+'
|         |-IntegerLiteral 0x55759c9e69b8 <line:44:17> 'int' 0
|         `-IntegerLiteral 0x55759c9e69d8 <line:42:18> 'int' 6
`-ParenExpr 0x55759c9e6cf8 <line:106:6, col:34> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e6cd0 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e6b58 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e6b30 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x55759c9e6b10 <col:26, col:30> 'int'
    |     `-IntegerLiteral 0x55759c9e6ab0 <luac.c:142:40> 'int' 1
    `-ParenExpr 0x55759c9e6cb0 <./lopcodes.h:47:16, col:31> 'int'
      `-BinaryOperator 0x55759c9e6c88 <line:46:16, line:37:17> 'int' '+'
        |-ParenExpr 0x55759c9e6c48 <line:46:16, col:31> 'int'
        | `-BinaryOperator 0x55759c9e6c20 <line:45:16, line:40:17> 'int' '+'
        |   |-ParenExpr 0x55759c9e6be0 <line:45:16, col:33> 'int'
        |   | `-BinaryOperator 0x55759c9e6bb8 <line:44:17, line:42:18> 'int' '+'
        |   |   |-IntegerLiteral 0x55759c9e6b78 <line:44:17> 'int' 0
        |   |   `-IntegerLiteral 0x55759c9e6b98 <line:42:18> 'int' 6
        |   `-IntegerLiteral 0x55759c9e6c00 <line:40:17> 'int' 8
        `-IntegerLiteral 0x55759c9e6c68 <line:37:17> 'int' 9
[B1.11] | ([B1.21])
  23: IntegerLiteral 0x55759c9e6d40 <luac.c:142:42> 'int' 0
0
  24: CStyleCastExpr 0x55759c9e6dc0 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e6da0 <col:26, col:30> 'int'
  `-IntegerLiteral 0x55759c9e6d40 <luac.c:142:42> 'int' 0
(Instruction)([B1.23]) (CStyleCastExpr, IntegralCast, Instruction)
  25: IntegerLiteral 0x55759c9e6e08 <./lopcodes.h:44:17> 'int' 0
0
  26: IntegerLiteral 0x55759c9e6e28 <./lopcodes.h:42:18> 'int' 6
6
  27: BinaryOperator 0x55759c9e6e48 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e6e08 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e6e28 <line:42:18> 'int' 6
[B1.25] + [B1.26]
  28: IntegerLiteral 0x55759c9e6e90 <./lopcodes.h:40:17> 'int' 8
8
  29: BinaryOperator 0x55759c9e6eb0 <./lopcodes.h:45:16, line:40:17> 'int' '+'
|-ParenExpr 0x55759c9e6e70 <line:45:16, col:33> 'int'
| `-BinaryOperator 0x55759c9e6e48 <line:44:17, line:42:18> 'int' '+'
|   |-IntegerLiteral 0x55759c9e6e08 <line:44:17> 'int' 0
|   `-IntegerLiteral 0x55759c9e6e28 <line:42:18> 'int' 6
`-IntegerLiteral 0x55759c9e6e90 <line:40:17> 'int' 8
([B1.27]) + [B1.28]
  30: BinaryOperator 0x55759c9e6ef8 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e6de8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e6dc0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e6da0 <col:26, col:30> 'int'
|     `-IntegerLiteral 0x55759c9e6d40 <luac.c:142:42> 'int' 0
`-ParenExpr 0x55759c9e6ed8 <./lopcodes.h:46:16, col:31> 'int'
  `-BinaryOperator 0x55759c9e6eb0 <line:45:16, line:40:17> 'int' '+'
    |-ParenExpr 0x55759c9e6e70 <line:45:16, col:33> 'int'
    | `-BinaryOperator 0x55759c9e6e48 <line:44:17, line:42:18> 'int' '+'
    |   |-IntegerLiteral 0x55759c9e6e08 <line:44:17> 'int' 0
    |   `-IntegerLiteral 0x55759c9e6e28 <line:42:18> 'int' 6
    `-IntegerLiteral 0x55759c9e6e90 <line:40:17> 'int' 8
([B1.24]) << ([B1.29])
  31: BinaryOperator 0x55759c9e6f40 <./lopcodes.h:104:30, line:107:34> 'unsigned int' '|'
|-BinaryOperator 0x55759c9e6d18 <line:104:30, line:106:34> 'unsigned int' '|'
| |-BinaryOperator 0x55759c9e6a88 <line:104:30, line:105:34> 'unsigned int' '|'
| | |-ParenExpr 0x55759c9e68d0 <line:104:30, col:59> 'Instruction':'unsigned int'
| | | `-BinaryOperator 0x55759c9e68a8 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
| | |   |-ParenExpr 0x55759c9e6868 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| | |   | `-CStyleCastExpr 0x55759c9e6840 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
| | |   |   `-ParenExpr 0x55759c9e6820 <col:26, col:30> 'int'
| | |   |     `-DeclRefExpr 0x55759c9e67b8 <luac.c:142:28> 'int' EnumConstant 0x55759c9b18d0 'OP_RETURN' 'int'
| | |   `-IntegerLiteral 0x55759c9e6888 <./lopcodes.h:44:17> 'int' 0
| | `-ParenExpr 0x55759c9e6a68 <line:105:6, col:34> 'Instruction':'unsigned int'
| |   `-BinaryOperator 0x55759c9e6a40 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
| |     |-ParenExpr 0x55759c9e6998 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| |     | `-CStyleCastExpr 0x55759c9e6970 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
| |     |   `-ParenExpr 0x55759c9e6950 <col:26, col:30> 'int'
| |     |     `-IntegerLiteral 0x55759c9e68f0 <luac.c:142:38> 'int' 0
| |     `-ParenExpr 0x55759c9e6a20 <./lopcodes.h:45:16, col:33> 'int'
| |       `-BinaryOperator 0x55759c9e69f8 <line:44:17, line:42:18> 'int' '+'
| |         |-IntegerLiteral 0x55759c9e69b8 <line:44:17> 'int' 0
| |         `-IntegerLiteral 0x55759c9e69d8 <line:42:18> 'int' 6
| `-ParenExpr 0x55759c9e6cf8 <line:106:6, col:34> 'Instruction':'unsigned int'
|   `-BinaryOperator 0x55759c9e6cd0 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
|     |-ParenExpr 0x55759c9e6b58 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|     | `-CStyleCastExpr 0x55759c9e6b30 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|     |   `-ParenExpr 0x55759c9e6b10 <col:26, col:30> 'int'
|     |     `-IntegerLiteral 0x55759c9e6ab0 <luac.c:142:40> 'int' 1
|     `-ParenExpr 0x55759c9e6cb0 <./lopcodes.h:47:16, col:31> 'int'
|       `-BinaryOperator 0x55759c9e6c88 <line:46:16, line:37:17> 'int' '+'
|         |-ParenExpr 0x55759c9e6c48 <line:46:16, col:31> 'int'
|         | `-BinaryOperator 0x55759c9e6c20 <line:45:16, line:40:17> 'int' '+'
|         |   |-ParenExpr 0x55759c9e6be0 <line:45:16, col:33> 'int'
|         |   | `-BinaryOperator 0x55759c9e6bb8 <line:44:17, line:42:18> 'int' '+'
|         |   |   |-IntegerLiteral 0x55759c9e6b78 <line:44:17> 'int' 0
|         |   |   `-IntegerLiteral 0x55759c9e6b98 <line:42:18> 'int' 6
|         |   `-IntegerLiteral 0x55759c9e6c00 <line:40:17> 'int' 8
|         `-IntegerLiteral 0x55759c9e6c68 <line:37:17> 'int' 9
`-ParenExpr 0x55759c9e6f20 <line:107:6, col:34> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e6ef8 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e6de8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e6dc0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x55759c9e6da0 <col:26, col:30> 'int'
    |     `-IntegerLiteral 0x55759c9e6d40 <luac.c:142:42> 'int' 0
    `-ParenExpr 0x55759c9e6ed8 <./lopcodes.h:46:16, col:31> 'int'
      `-BinaryOperator 0x55759c9e6eb0 <line:45:16, line:40:17> 'int' '+'
        |-ParenExpr 0x55759c9e6e70 <line:45:16, col:33> 'int'
        | `-BinaryOperator 0x55759c9e6e48 <line:44:17, line:42:18> 'int' '+'
        |   |-IntegerLiteral 0x55759c9e6e08 <line:44:17> 'int' 0
        |   `-IntegerLiteral 0x55759c9e6e28 <line:42:18> 'int' 6
        `-IntegerLiteral 0x55759c9e6e90 <line:40:17> 'int' 8
[B1.22] | ([B1.30])
  32: DeclRefExpr 0x55759c9e66a0 <luac.c:142:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  33: ImplicitCastExpr 0x55759c9e66c8 <luac.c:142:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e66a0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B1.32] (ImplicitCastExpr, LValueToRValue, Proto *)
  34: MemberExpr 0x55759c9e66e0 <luac.c:142:3, col:6> 'Instruction *' lvalue ->code 0x55759c98eb28
`-ImplicitCastExpr 0x55759c9e66c8 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e66a0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B1.33]->code
  35: ImplicitCastExpr 0x55759c9e6760 <luac.c:142:3, col:6> 'Instruction *' <LValueToRValue>
`-MemberExpr 0x55759c9e66e0 <col:3, col:6> 'Instruction *' lvalue ->code 0x55759c98eb28
  `-ImplicitCastExpr 0x55759c9e66c8 <col:3> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e66a0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B1.34] (ImplicitCastExpr, LValueToRValue, Instruction *)
  36: DeclRefExpr 0x55759c9e6718 <luac.c:142:11> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
  37: UnaryOperator 0x55759c9e6740 <luac.c:142:11, col:13> 'int' postfix '++'
`-DeclRefExpr 0x55759c9e6718 <col:11> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B1.36]++
  38: ArraySubscriptExpr 0x55759c9e6790 <luac.c:142:3, col:15> 'Instruction':'unsigned int' lvalue
|-ImplicitCastExpr 0x55759c9e6760 <col:3, col:6> 'Instruction *' <LValueToRValue>
| `-MemberExpr 0x55759c9e66e0 <col:3, col:6> 'Instruction *' lvalue ->code 0x55759c98eb28
|   `-ImplicitCastExpr 0x55759c9e66c8 <col:3> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55759c9e66a0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-UnaryOperator 0x55759c9e6740 <col:11, col:13> 'int' postfix '++'
  `-DeclRefExpr 0x55759c9e6718 <col:11> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B1.35][[B1.37]]
  39: BinaryOperator 0x55759c9e6f88 <luac.c:142:3, ./lopcodes.h:107:35> 'Instruction':'unsigned int' '='
|-ArraySubscriptExpr 0x55759c9e6790 <luac.c:142:3, col:15> 'Instruction':'unsigned int' lvalue
| |-ImplicitCastExpr 0x55759c9e6760 <col:3, col:6> 'Instruction *' <LValueToRValue>
| | `-MemberExpr 0x55759c9e66e0 <col:3, col:6> 'Instruction *' lvalue ->code 0x55759c98eb28
| |   `-ImplicitCastExpr 0x55759c9e66c8 <col:3> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x55759c9e66a0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
| `-UnaryOperator 0x55759c9e6740 <col:11, col:13> 'int' postfix '++'
|   `-DeclRefExpr 0x55759c9e6718 <col:11> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
`-ParenExpr 0x55759c9e6f68 <./lopcodes.h:104:29, line:107:35> 'unsigned int'
  `-BinaryOperator 0x55759c9e6f40 <line:104:30, line:107:34> 'unsigned int' '|'
    |-BinaryOperator 0x55759c9e6d18 <line:104:30, line:106:34> 'unsigned int' '|'
    | |-BinaryOperator 0x55759c9e6a88 <line:104:30, line:105:34> 'unsigned int' '|'
    | | |-ParenExpr 0x55759c9e68d0 <line:104:30, col:59> 'Instruction':'unsigned int'
    | | | `-BinaryOperator 0x55759c9e68a8 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
    | | |   |-ParenExpr 0x55759c9e6868 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | | |   | `-CStyleCastExpr 0x55759c9e6840 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    | | |   |   `-ParenExpr 0x55759c9e6820 <col:26, col:30> 'int'
    | | |   |     `-DeclRefExpr 0x55759c9e67b8 <luac.c:142:28> 'int' EnumConstant 0x55759c9b18d0 'OP_RETURN' 'int'
    | | |   `-IntegerLiteral 0x55759c9e6888 <./lopcodes.h:44:17> 'int' 0
    | | `-ParenExpr 0x55759c9e6a68 <line:105:6, col:34> 'Instruction':'unsigned int'
    | |   `-BinaryOperator 0x55759c9e6a40 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
    | |     |-ParenExpr 0x55759c9e6998 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | |     | `-CStyleCastExpr 0x55759c9e6970 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    | |     |   `-ParenExpr 0x55759c9e6950 <col:26, col:30> 'int'
    | |     |     `-IntegerLiteral 0x55759c9e68f0 <luac.c:142:38> 'int' 0
    | |     `-ParenExpr 0x55759c9e6a20 <./lopcodes.h:45:16, col:33> 'int'
    | |       `-BinaryOperator 0x55759c9e69f8 <line:44:17, line:42:18> 'int' '+'
    | |         |-IntegerLiteral 0x55759c9e69b8 <line:44:17> 'int' 0
    | |         `-IntegerLiteral 0x55759c9e69d8 <line:42:18> 'int' 6
    | `-ParenExpr 0x55759c9e6cf8 <line:106:6, col:34> 'Instruction':'unsigned int'
    |   `-BinaryOperator 0x55759c9e6cd0 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
    |     |-ParenExpr 0x55759c9e6b58 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    |     | `-CStyleCastExpr 0x55759c9e6b30 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |     |   `-ParenExpr 0x55759c9e6b10 <col:26, col:30> 'int'
    |     |     `-IntegerLiteral 0x55759c9e6ab0 <luac.c:142:40> 'int' 1
    |     `-ParenExpr 0x55759c9e6cb0 <./lopcodes.h:47:16, col:31> 'int'
    |       `-BinaryOperator 0x55759c9e6c88 <line:46:16, line:37:17> 'int' '+'
    |         |-ParenExpr 0x55759c9e6c48 <line:46:16, col:31> 'int'
    |         | `-BinaryOperator 0x55759c9e6c20 <line:45:16, line:40:17> 'int' '+'
    |         |   |-ParenExpr 0x55759c9e6be0 <line:45:16, col:33> 'int'
    |         |   | `-BinaryOperator 0x55759c9e6bb8 <line:44:17, line:42:18> 'int' '+'
    |         |   |   |-IntegerLiteral 0x55759c9e6b78 <line:44:17> 'int' 0
    |         |   |   `-IntegerLiteral 0x55759c9e6b98 <line:42:18> 'int' 6
    |         |   `-IntegerLiteral 0x55759c9e6c00 <line:40:17> 'int' 8
    |         `-IntegerLiteral 0x55759c9e6c68 <line:37:17> 'int' 9
    `-ParenExpr 0x55759c9e6f20 <line:107:6, col:34> 'Instruction':'unsigned int'
      `-BinaryOperator 0x55759c9e6ef8 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x55759c9e6de8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
        | `-CStyleCastExpr 0x55759c9e6dc0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
        |   `-ParenExpr 0x55759c9e6da0 <col:26, col:30> 'int'
        |     `-IntegerLiteral 0x55759c9e6d40 <luac.c:142:42> 'int' 0
        `-ParenExpr 0x55759c9e6ed8 <./lopcodes.h:46:16, col:31> 'int'
          `-BinaryOperator 0x55759c9e6eb0 <line:45:16, line:40:17> 'int' '+'
            |-ParenExpr 0x55759c9e6e70 <line:45:16, col:33> 'int'
            | `-BinaryOperator 0x55759c9e6e48 <line:44:17, line:42:18> 'int' '+'
            |   |-IntegerLiteral 0x55759c9e6e08 <line:44:17> 'int' 0
            |   `-IntegerLiteral 0x55759c9e6e28 <line:42:18> 'int' 6
            `-IntegerLiteral 0x55759c9e6e90 <line:40:17> 'int' 8
[B1.38] = ([B1.31])
  40: DeclRefExpr 0x55759c9e6fb0 <luac.c:143:10> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  41: ImplicitCastExpr 0x55759c9e6fd8 <luac.c:143:10> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e6fb0 <col:10> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B1.40] (ImplicitCastExpr, LValueToRValue, Proto *)
  42: ImplicitCastExpr 0x55759c9e6ff0 <luac.c:143:10> 'const Proto *' <BitCast>
`-ImplicitCastExpr 0x55759c9e6fd8 <col:10> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e6fb0 <col:10> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B1.41] (ImplicitCastExpr, BitCast, const Proto *)
  43: ReturnStmt 0x55759c9e7008 <luac.c:143:3, col:10>
`-ImplicitCastExpr 0x55759c9e6ff0 <col:10> 'const Proto *' <BitCast>
  `-ImplicitCastExpr 0x55759c9e6fd8 <col:10> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e6fb0 <col:10> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
return [B1.42];
   Preds (1): B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55759c9e51c8 <luac.c:136:18> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
i
   2: UnaryOperator 0x55759c9e51f0 <luac.c:136:18, col:19> 'int' postfix '++'
`-DeclRefExpr 0x55759c9e51c8 <col:18> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
[B2.1]++
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: DeclRefExpr 0x55759c9e5308 <luac.c:138:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55759c9e5330 <luac.c:138:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B3.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55759c9e5348 <luac.c:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
`-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B3.2]->top
   4: ImplicitCastExpr 0x55759c9e5490 <luac.c:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
  `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclRefExpr 0x55759c9e5380 <luac.c:138:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
i
   6: ImplicitCastExpr 0x55759c9e53d0 <luac.c:138:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: DeclRefExpr 0x55759c9e53a8 <luac.c:138:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
n
   8: ImplicitCastExpr 0x55759c9e53e8 <luac.c:138:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B3.7] (ImplicitCastExpr, LValueToRValue, int)
   9: BinaryOperator 0x55759c9e5400 <luac.c:138:22, col:24> 'int' '-'
|-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
`-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B3.6] - [B3.8]
  10: IntegerLiteral 0x55759c9e5428 <luac.c:138:26> 'int' 1
1
  11: BinaryOperator 0x55759c9e5448 <luac.c:138:22, col:26> 'int' '-'
|-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
| |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
| `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
`-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
[B3.9] - [B3.10]
  12: BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
|   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
`-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
  `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
    |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
    | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
    | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
    `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
[B3.4] + ([B3.11])
  13: MemberExpr 0x55759c9e54f0 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
`-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
  `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
    |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
    | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
    |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
    |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
    `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
      `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
        |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
        | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
        | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
        `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
([B3.12])->value
  14: MemberExpr 0x55759c9e5528 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
`-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
  `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
    `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
      |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
      `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
        `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
          |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
          | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
          | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
          `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
[B3.13].gc
  15: ImplicitCastExpr 0x55759c9e5560 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55759c9e5528 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
  `-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
    `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
      `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
        |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
        |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
        |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
        `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
          `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
            |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
            | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
            | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
            | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
            |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
            `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
[B3.14] (ImplicitCastExpr, LValueToRValue, GCObject *)
  16: MemberExpr 0x55759c9e5578 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
`-ImplicitCastExpr 0x55759c9e5560 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55759c9e5528 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
    `-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
      `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
        `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
          |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
          | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
          |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
          |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
          `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
            `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
              |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
              | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
              | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
              | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
              `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
[B3.15]->cl
  17: UnaryOperator 0x55759c9e55b0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x55759c9e5578 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
  `-ImplicitCastExpr 0x55759c9e5560 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55759c9e5528 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
      `-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
        `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
          `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
            |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
            | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
            |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
            |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
            `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
              `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
                |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
                | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
                | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
                | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
                |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
                `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
&[B3.16]
  18: MemberExpr 0x55759c9e55f0 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
`-ParenExpr 0x55759c9e55d0 <./llimits.h:63:25, col:27> 'union Closure *'
  `-UnaryOperator 0x55759c9e55b0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    `-MemberExpr 0x55759c9e5578 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
      `-ImplicitCastExpr 0x55759c9e5560 <col:48, col:59> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x55759c9e5528 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
          `-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
            `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
              `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
                |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
                |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
                  `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
                    |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
                    | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
                    | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
                    | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
                    |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
                    `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
([B3.17])->l
  19: MemberExpr 0x55759c9e5628 <./llimits.h:63:25, luac.c:117:46> 'struct Proto *' lvalue .p 0x55759c991428
`-MemberExpr 0x55759c9e55f0 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
  `-ParenExpr 0x55759c9e55d0 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x55759c9e55b0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x55759c9e5578 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
        `-ImplicitCastExpr 0x55759c9e5560 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x55759c9e5528 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
            `-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
              `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
                `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
                  |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                  | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                  |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
                  |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                  `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
                    `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
                      |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
                      | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
                      | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
                      | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
                      |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
                      `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
[B3.18].p
  20: ImplicitCastExpr 0x55759c9e5680 <luac.c:117:22, col:47> 'struct Proto *' <LValueToRValue>
`-ParenExpr 0x55759c9e5660 <col:22, col:47> 'struct Proto *' lvalue
  `-MemberExpr 0x55759c9e5628 <./llimits.h:63:25, luac.c:117:46> 'struct Proto *' lvalue .p 0x55759c991428
    `-MemberExpr 0x55759c9e55f0 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
      `-ParenExpr 0x55759c9e55d0 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x55759c9e55b0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x55759c9e5578 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
            `-ImplicitCastExpr 0x55759c9e5560 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x55759c9e5528 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
                `-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
                  `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
                    `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
                      |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                      | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                      |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
                      |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                      `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
                        `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
                          |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
                          | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
                          | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
                          | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
                          |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
                          `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
([B3.19]) (ImplicitCastExpr, LValueToRValue, struct Proto *)
  21: DeclRefExpr 0x55759c9e5210 <luac.c:138:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  22: ImplicitCastExpr 0x55759c9e5238 <luac.c:138:4> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e5210 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.21] (ImplicitCastExpr, LValueToRValue, Proto *)
  23: MemberExpr 0x55759c9e5250 <luac.c:138:4, col:7> 'struct Proto **' lvalue ->p 0x55759c98ec80
`-ImplicitCastExpr 0x55759c9e5238 <col:4> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e5210 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.22]->p
  24: ImplicitCastExpr 0x55759c9e52b0 <luac.c:138:4, col:7> 'struct Proto **' <LValueToRValue>
`-MemberExpr 0x55759c9e5250 <col:4, col:7> 'struct Proto **' lvalue ->p 0x55759c98ec80
  `-ImplicitCastExpr 0x55759c9e5238 <col:4> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e5210 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.23] (ImplicitCastExpr, LValueToRValue, struct Proto **)
  25: DeclRefExpr 0x55759c9e5288 <luac.c:138:9> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
i
  26: ImplicitCastExpr 0x55759c9e52c8 <luac.c:138:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e5288 <col:9> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
[B3.25] (ImplicitCastExpr, LValueToRValue, int)
  27: ArraySubscriptExpr 0x55759c9e52e0 <luac.c:138:4, col:10> 'struct Proto *' lvalue
|-ImplicitCastExpr 0x55759c9e52b0 <col:4, col:7> 'struct Proto **' <LValueToRValue>
| `-MemberExpr 0x55759c9e5250 <col:4, col:7> 'struct Proto **' lvalue ->p 0x55759c98ec80
|   `-ImplicitCastExpr 0x55759c9e5238 <col:4> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55759c9e5210 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-ImplicitCastExpr 0x55759c9e52c8 <col:9> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e5288 <col:9> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
[B3.24][[B3.26]]
  28: BinaryOperator 0x55759c9e5698 <luac.c:138:4, line:117:47> 'struct Proto *' '='
|-ArraySubscriptExpr 0x55759c9e52e0 <line:138:4, col:10> 'struct Proto *' lvalue
| |-ImplicitCastExpr 0x55759c9e52b0 <col:4, col:7> 'struct Proto **' <LValueToRValue>
| | `-MemberExpr 0x55759c9e5250 <col:4, col:7> 'struct Proto **' lvalue ->p 0x55759c98ec80
| |   `-ImplicitCastExpr 0x55759c9e5238 <col:4> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x55759c9e5210 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
| `-ImplicitCastExpr 0x55759c9e52c8 <col:9> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e5288 <col:9> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
`-ImplicitCastExpr 0x55759c9e5680 <line:117:22, col:47> 'struct Proto *' <LValueToRValue>
  `-ParenExpr 0x55759c9e5660 <col:22, col:47> 'struct Proto *' lvalue
    `-MemberExpr 0x55759c9e5628 <./llimits.h:63:25, luac.c:117:46> 'struct Proto *' lvalue .p 0x55759c991428
      `-MemberExpr 0x55759c9e55f0 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
        `-ParenExpr 0x55759c9e55d0 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x55759c9e55b0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x55759c9e5578 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
              `-ImplicitCastExpr 0x55759c9e5560 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x55759c9e5528 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
                  `-MemberExpr 0x55759c9e54f0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
                    `-ParenExpr 0x55759c9e54d0 <col:48, col:50> 'StkId':'TValue *'
                      `-BinaryOperator 0x55759c9e54a8 <luac.c:138:20, line:117:40> 'StkId':'TValue *' '+'
                        |-ImplicitCastExpr 0x55759c9e5490 <line:138:20, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                        | `-MemberExpr 0x55759c9e5348 <line:138:20, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                        |   `-ImplicitCastExpr 0x55759c9e5330 <line:138:20> 'lua_State *' <LValueToRValue>
                        |     `-DeclRefExpr 0x55759c9e5308 <col:20> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                        `-ParenExpr 0x55759c9e5470 <line:117:38, col:40> 'int'
                          `-BinaryOperator 0x55759c9e5448 <line:138:22, col:26> 'int' '-'
                            |-BinaryOperator 0x55759c9e5400 <col:22, col:24> 'int' '-'
                            | |-ImplicitCastExpr 0x55759c9e53d0 <col:22> 'int' <LValueToRValue>
                            | | `-DeclRefExpr 0x55759c9e5380 <col:22> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
                            | `-ImplicitCastExpr 0x55759c9e53e8 <col:24> 'int' <LValueToRValue>
                            |   `-DeclRefExpr 0x55759c9e53a8 <col:24> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
                            `-IntegerLiteral 0x55759c9e5428 <col:26> 'int' 1
[B3.27] = [B3.20]
  29: DeclRefExpr 0x55759c9e57c0 <luac.c:139:29> 'int' EnumConstant 0x55759c9b1a80 'OP_CLOSURE' 'int'
OP_CLOSURE
  30: CStyleCastExpr 0x55759c9e5848 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e5828 <col:26, col:30> 'int'
  `-DeclRefExpr 0x55759c9e57c0 <luac.c:139:29> 'int' EnumConstant 0x55759c9b1a80 'OP_CLOSURE' 'int'
(Instruction)([B3.29]) (CStyleCastExpr, IntegralCast, Instruction)
  31: IntegerLiteral 0x55759c9e5890 <./lopcodes.h:44:17> 'int' 0
0
  32: BinaryOperator 0x55759c9e58b0 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e5870 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e5848 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e5828 <col:26, col:30> 'int'
|     `-DeclRefExpr 0x55759c9e57c0 <luac.c:139:29> 'int' EnumConstant 0x55759c9b1a80 'OP_CLOSURE' 'int'
`-IntegerLiteral 0x55759c9e5890 <./lopcodes.h:44:17> 'int' 0
([B3.30]) << [B3.31]
  33: IntegerLiteral 0x55759c9e58f8 <luac.c:139:40> 'int' 0
0
  34: CStyleCastExpr 0x55759c9e5978 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e5958 <col:26, col:30> 'int'
  `-IntegerLiteral 0x55759c9e58f8 <luac.c:139:40> 'int' 0
(Instruction)([B3.33]) (CStyleCastExpr, IntegralCast, Instruction)
  35: IntegerLiteral 0x55759c9e59c0 <./lopcodes.h:44:17> 'int' 0
0
  36: IntegerLiteral 0x55759c9e59e0 <./lopcodes.h:42:18> 'int' 6
6
  37: BinaryOperator 0x55759c9e5a00 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e59c0 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e59e0 <line:42:18> 'int' 6
[B3.35] + [B3.36]
  38: BinaryOperator 0x55759c9e5a48 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e59a0 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e5978 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e5958 <col:26, col:30> 'int'
|     `-IntegerLiteral 0x55759c9e58f8 <luac.c:139:40> 'int' 0
`-ParenExpr 0x55759c9e5a28 <./lopcodes.h:45:16, col:33> 'int'
  `-BinaryOperator 0x55759c9e5a00 <line:44:17, line:42:18> 'int' '+'
    |-IntegerLiteral 0x55759c9e59c0 <line:44:17> 'int' 0
    `-IntegerLiteral 0x55759c9e59e0 <line:42:18> 'int' 6
([B3.34]) << ([B3.37])
  39: BinaryOperator 0x55759c9e5a90 <./lopcodes.h:109:29, line:110:34> 'unsigned int' '|'
|-ParenExpr 0x55759c9e58d8 <line:109:29, col:58> 'Instruction':'unsigned int'
| `-BinaryOperator 0x55759c9e58b0 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
|   |-ParenExpr 0x55759c9e5870 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|   | `-CStyleCastExpr 0x55759c9e5848 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x55759c9e5828 <col:26, col:30> 'int'
|   |     `-DeclRefExpr 0x55759c9e57c0 <luac.c:139:29> 'int' EnumConstant 0x55759c9b1a80 'OP_CLOSURE' 'int'
|   `-IntegerLiteral 0x55759c9e5890 <./lopcodes.h:44:17> 'int' 0
`-ParenExpr 0x55759c9e5a70 <line:110:6, col:34> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e5a48 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e59a0 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e5978 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x55759c9e5958 <col:26, col:30> 'int'
    |     `-IntegerLiteral 0x55759c9e58f8 <luac.c:139:40> 'int' 0
    `-ParenExpr 0x55759c9e5a28 <./lopcodes.h:45:16, col:33> 'int'
      `-BinaryOperator 0x55759c9e5a00 <line:44:17, line:42:18> 'int' '+'
        |-IntegerLiteral 0x55759c9e59c0 <line:44:17> 'int' 0
        `-IntegerLiteral 0x55759c9e59e0 <line:42:18> 'int' 6
([B3.32]) | ([B3.38])
  40: DeclRefExpr 0x55759c9e5ab8 <luac.c:139:42> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
i
  41: ImplicitCastExpr 0x55759c9e5b40 <./llimits.h:75:26, col:30> 'int' <LValueToRValue>
`-ParenExpr 0x55759c9e5b20 <col:26, col:30> 'int' lvalue
  `-DeclRefExpr 0x55759c9e5ab8 <luac.c:139:42> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
([B3.40]) (ImplicitCastExpr, LValueToRValue, int)
  42: CStyleCastExpr 0x55759c9e5b58 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55759c9e5b40 <col:26, col:30> 'int' <LValueToRValue>
  `-ParenExpr 0x55759c9e5b20 <col:26, col:30> 'int' lvalue
    `-DeclRefExpr 0x55759c9e5ab8 <luac.c:139:42> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
(Instruction)[B3.41] (CStyleCastExpr, IntegralCast, Instruction)
  43: IntegerLiteral 0x55759c9e5ba0 <./lopcodes.h:44:17> 'int' 0
0
  44: IntegerLiteral 0x55759c9e5bc0 <./lopcodes.h:42:18> 'int' 6
6
  45: BinaryOperator 0x55759c9e5be0 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e5ba0 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e5bc0 <line:42:18> 'int' 6
[B3.43] + [B3.44]
  46: IntegerLiteral 0x55759c9e5c28 <./lopcodes.h:40:17> 'int' 8
8
  47: BinaryOperator 0x55759c9e5c48 <./lopcodes.h:45:16, line:40:17> 'int' '+'
|-ParenExpr 0x55759c9e5c08 <line:45:16, col:33> 'int'
| `-BinaryOperator 0x55759c9e5be0 <line:44:17, line:42:18> 'int' '+'
|   |-IntegerLiteral 0x55759c9e5ba0 <line:44:17> 'int' 0
|   `-IntegerLiteral 0x55759c9e5bc0 <line:42:18> 'int' 6
`-IntegerLiteral 0x55759c9e5c28 <line:40:17> 'int' 8
([B3.45]) + [B3.46]
  48: BinaryOperator 0x55759c9e5c90 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e5b80 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e5b58 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ImplicitCastExpr 0x55759c9e5b40 <col:26, col:30> 'int' <LValueToRValue>
|     `-ParenExpr 0x55759c9e5b20 <col:26, col:30> 'int' lvalue
|       `-DeclRefExpr 0x55759c9e5ab8 <luac.c:139:42> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
`-ParenExpr 0x55759c9e5c70 <./lopcodes.h:46:16, col:31> 'int'
  `-BinaryOperator 0x55759c9e5c48 <line:45:16, line:40:17> 'int' '+'
    |-ParenExpr 0x55759c9e5c08 <line:45:16, col:33> 'int'
    | `-BinaryOperator 0x55759c9e5be0 <line:44:17, line:42:18> 'int' '+'
    |   |-IntegerLiteral 0x55759c9e5ba0 <line:44:17> 'int' 0
    |   `-IntegerLiteral 0x55759c9e5bc0 <line:42:18> 'int' 6
    `-IntegerLiteral 0x55759c9e5c28 <line:40:17> 'int' 8
([B3.42]) << ([B3.47])
  49: BinaryOperator 0x55759c9e5cd8 <./lopcodes.h:109:29, line:111:36> 'unsigned int' '|'
|-BinaryOperator 0x55759c9e5a90 <line:109:29, line:110:34> 'unsigned int' '|'
| |-ParenExpr 0x55759c9e58d8 <line:109:29, col:58> 'Instruction':'unsigned int'
| | `-BinaryOperator 0x55759c9e58b0 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
| |   |-ParenExpr 0x55759c9e5870 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| |   | `-CStyleCastExpr 0x55759c9e5848 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
| |   |   `-ParenExpr 0x55759c9e5828 <col:26, col:30> 'int'
| |   |     `-DeclRefExpr 0x55759c9e57c0 <luac.c:139:29> 'int' EnumConstant 0x55759c9b1a80 'OP_CLOSURE' 'int'
| |   `-IntegerLiteral 0x55759c9e5890 <./lopcodes.h:44:17> 'int' 0
| `-ParenExpr 0x55759c9e5a70 <line:110:6, col:34> 'Instruction':'unsigned int'
|   `-BinaryOperator 0x55759c9e5a48 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|     |-ParenExpr 0x55759c9e59a0 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|     | `-CStyleCastExpr 0x55759c9e5978 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|     |   `-ParenExpr 0x55759c9e5958 <col:26, col:30> 'int'
|     |     `-IntegerLiteral 0x55759c9e58f8 <luac.c:139:40> 'int' 0
|     `-ParenExpr 0x55759c9e5a28 <./lopcodes.h:45:16, col:33> 'int'
|       `-BinaryOperator 0x55759c9e5a00 <line:44:17, line:42:18> 'int' '+'
|         |-IntegerLiteral 0x55759c9e59c0 <line:44:17> 'int' 0
|         `-IntegerLiteral 0x55759c9e59e0 <line:42:18> 'int' 6
`-ParenExpr 0x55759c9e5cb8 <line:111:6, col:36> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e5c90 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e5b80 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e5b58 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55759c9e5b40 <col:26, col:30> 'int' <LValueToRValue>
    |     `-ParenExpr 0x55759c9e5b20 <col:26, col:30> 'int' lvalue
    |       `-DeclRefExpr 0x55759c9e5ab8 <luac.c:139:42> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
    `-ParenExpr 0x55759c9e5c70 <./lopcodes.h:46:16, col:31> 'int'
      `-BinaryOperator 0x55759c9e5c48 <line:45:16, line:40:17> 'int' '+'
        |-ParenExpr 0x55759c9e5c08 <line:45:16, col:33> 'int'
        | `-BinaryOperator 0x55759c9e5be0 <line:44:17, line:42:18> 'int' '+'
        |   |-IntegerLiteral 0x55759c9e5ba0 <line:44:17> 'int' 0
        |   `-IntegerLiteral 0x55759c9e5bc0 <line:42:18> 'int' 6
        `-IntegerLiteral 0x55759c9e5c28 <line:40:17> 'int' 8
[B3.39] | ([B3.48])
  50: DeclRefExpr 0x55759c9e56c0 <luac.c:139:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  51: ImplicitCastExpr 0x55759c9e56e8 <luac.c:139:4> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e56c0 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.50] (ImplicitCastExpr, LValueToRValue, Proto *)
  52: MemberExpr 0x55759c9e5700 <luac.c:139:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
`-ImplicitCastExpr 0x55759c9e56e8 <col:4> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e56c0 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.51]->code
  53: ImplicitCastExpr 0x55759c9e5780 <luac.c:139:4, col:7> 'Instruction *' <LValueToRValue>
`-MemberExpr 0x55759c9e5700 <col:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
  `-ImplicitCastExpr 0x55759c9e56e8 <col:4> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e56c0 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.52] (ImplicitCastExpr, LValueToRValue, Instruction *)
  54: DeclRefExpr 0x55759c9e5738 <luac.c:139:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
  55: UnaryOperator 0x55759c9e5760 <luac.c:139:12, col:14> 'int' postfix '++'
`-DeclRefExpr 0x55759c9e5738 <col:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B3.54]++
  56: ArraySubscriptExpr 0x55759c9e5798 <luac.c:139:4, col:16> 'Instruction':'unsigned int' lvalue
|-ImplicitCastExpr 0x55759c9e5780 <col:4, col:7> 'Instruction *' <LValueToRValue>
| `-MemberExpr 0x55759c9e5700 <col:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
|   `-ImplicitCastExpr 0x55759c9e56e8 <col:4> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55759c9e56c0 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-UnaryOperator 0x55759c9e5760 <col:12, col:14> 'int' postfix '++'
  `-DeclRefExpr 0x55759c9e5738 <col:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B3.53][[B3.55]]
  57: BinaryOperator 0x55759c9e5d20 <luac.c:139:4, ./lopcodes.h:111:37> 'Instruction':'unsigned int' '='
|-ArraySubscriptExpr 0x55759c9e5798 <luac.c:139:4, col:16> 'Instruction':'unsigned int' lvalue
| |-ImplicitCastExpr 0x55759c9e5780 <col:4, col:7> 'Instruction *' <LValueToRValue>
| | `-MemberExpr 0x55759c9e5700 <col:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
| |   `-ImplicitCastExpr 0x55759c9e56e8 <col:4> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x55759c9e56c0 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
| `-UnaryOperator 0x55759c9e5760 <col:12, col:14> 'int' postfix '++'
|   `-DeclRefExpr 0x55759c9e5738 <col:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
`-ParenExpr 0x55759c9e5d00 <./lopcodes.h:109:28, line:111:37> 'unsigned int'
  `-BinaryOperator 0x55759c9e5cd8 <line:109:29, line:111:36> 'unsigned int' '|'
    |-BinaryOperator 0x55759c9e5a90 <line:109:29, line:110:34> 'unsigned int' '|'
    | |-ParenExpr 0x55759c9e58d8 <line:109:29, col:58> 'Instruction':'unsigned int'
    | | `-BinaryOperator 0x55759c9e58b0 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
    | |   |-ParenExpr 0x55759c9e5870 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | |   | `-CStyleCastExpr 0x55759c9e5848 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    | |   |   `-ParenExpr 0x55759c9e5828 <col:26, col:30> 'int'
    | |   |     `-DeclRefExpr 0x55759c9e57c0 <luac.c:139:29> 'int' EnumConstant 0x55759c9b1a80 'OP_CLOSURE' 'int'
    | |   `-IntegerLiteral 0x55759c9e5890 <./lopcodes.h:44:17> 'int' 0
    | `-ParenExpr 0x55759c9e5a70 <line:110:6, col:34> 'Instruction':'unsigned int'
    |   `-BinaryOperator 0x55759c9e5a48 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
    |     |-ParenExpr 0x55759c9e59a0 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    |     | `-CStyleCastExpr 0x55759c9e5978 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |     |   `-ParenExpr 0x55759c9e5958 <col:26, col:30> 'int'
    |     |     `-IntegerLiteral 0x55759c9e58f8 <luac.c:139:40> 'int' 0
    |     `-ParenExpr 0x55759c9e5a28 <./lopcodes.h:45:16, col:33> 'int'
    |       `-BinaryOperator 0x55759c9e5a00 <line:44:17, line:42:18> 'int' '+'
    |         |-IntegerLiteral 0x55759c9e59c0 <line:44:17> 'int' 0
    |         `-IntegerLiteral 0x55759c9e59e0 <line:42:18> 'int' 6
    `-ParenExpr 0x55759c9e5cb8 <line:111:6, col:36> 'Instruction':'unsigned int'
      `-BinaryOperator 0x55759c9e5c90 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x55759c9e5b80 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
        | `-CStyleCastExpr 0x55759c9e5b58 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
        |   `-ImplicitCastExpr 0x55759c9e5b40 <col:26, col:30> 'int' <LValueToRValue>
        |     `-ParenExpr 0x55759c9e5b20 <col:26, col:30> 'int' lvalue
        |       `-DeclRefExpr 0x55759c9e5ab8 <luac.c:139:42> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
        `-ParenExpr 0x55759c9e5c70 <./lopcodes.h:46:16, col:31> 'int'
          `-BinaryOperator 0x55759c9e5c48 <line:45:16, line:40:17> 'int' '+'
            |-ParenExpr 0x55759c9e5c08 <line:45:16, col:33> 'int'
            | `-BinaryOperator 0x55759c9e5be0 <line:44:17, line:42:18> 'int' '+'
            |   |-IntegerLiteral 0x55759c9e5ba0 <line:44:17> 'int' 0
            |   `-IntegerLiteral 0x55759c9e5bc0 <line:42:18> 'int' 6
            `-IntegerLiteral 0x55759c9e5c28 <line:40:17> 'int' 8
[B3.56] = ([B3.49])
  58: DeclRefExpr 0x55759c9e5e48 <luac.c:140:29> 'int' EnumConstant 0x55759c9b1840 'OP_CALL' 'int'
OP_CALL
  59: CStyleCastExpr 0x55759c9e5ed0 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e5eb0 <col:26, col:30> 'int'
  `-DeclRefExpr 0x55759c9e5e48 <luac.c:140:29> 'int' EnumConstant 0x55759c9b1840 'OP_CALL' 'int'
(Instruction)([B3.58]) (CStyleCastExpr, IntegralCast, Instruction)
  60: IntegerLiteral 0x55759c9e5f18 <./lopcodes.h:44:17> 'int' 0
0
  61: BinaryOperator 0x55759c9e5f38 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e5ef8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e5ed0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e5eb0 <col:26, col:30> 'int'
|     `-DeclRefExpr 0x55759c9e5e48 <luac.c:140:29> 'int' EnumConstant 0x55759c9b1840 'OP_CALL' 'int'
`-IntegerLiteral 0x55759c9e5f18 <./lopcodes.h:44:17> 'int' 0
([B3.59]) << [B3.60]
  62: IntegerLiteral 0x55759c9e5f80 <luac.c:140:37> 'int' 0
0
  63: CStyleCastExpr 0x55759c9e6000 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e5fe0 <col:26, col:30> 'int'
  `-IntegerLiteral 0x55759c9e5f80 <luac.c:140:37> 'int' 0
(Instruction)([B3.62]) (CStyleCastExpr, IntegralCast, Instruction)
  64: IntegerLiteral 0x55759c9e6048 <./lopcodes.h:44:17> 'int' 0
0
  65: IntegerLiteral 0x55759c9e6068 <./lopcodes.h:42:18> 'int' 6
6
  66: BinaryOperator 0x55759c9e6088 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e6048 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e6068 <line:42:18> 'int' 6
[B3.64] + [B3.65]
  67: BinaryOperator 0x55759c9e60d0 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e6028 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e6000 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e5fe0 <col:26, col:30> 'int'
|     `-IntegerLiteral 0x55759c9e5f80 <luac.c:140:37> 'int' 0
`-ParenExpr 0x55759c9e60b0 <./lopcodes.h:45:16, col:33> 'int'
  `-BinaryOperator 0x55759c9e6088 <line:44:17, line:42:18> 'int' '+'
    |-IntegerLiteral 0x55759c9e6048 <line:44:17> 'int' 0
    `-IntegerLiteral 0x55759c9e6068 <line:42:18> 'int' 6
([B3.63]) << ([B3.66])
  68: BinaryOperator 0x55759c9e6118 <./lopcodes.h:104:30, line:105:34> 'unsigned int' '|'
|-ParenExpr 0x55759c9e5f60 <line:104:30, col:59> 'Instruction':'unsigned int'
| `-BinaryOperator 0x55759c9e5f38 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
|   |-ParenExpr 0x55759c9e5ef8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|   | `-CStyleCastExpr 0x55759c9e5ed0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x55759c9e5eb0 <col:26, col:30> 'int'
|   |     `-DeclRefExpr 0x55759c9e5e48 <luac.c:140:29> 'int' EnumConstant 0x55759c9b1840 'OP_CALL' 'int'
|   `-IntegerLiteral 0x55759c9e5f18 <./lopcodes.h:44:17> 'int' 0
`-ParenExpr 0x55759c9e60f8 <line:105:6, col:34> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e60d0 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e6028 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e6000 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x55759c9e5fe0 <col:26, col:30> 'int'
    |     `-IntegerLiteral 0x55759c9e5f80 <luac.c:140:37> 'int' 0
    `-ParenExpr 0x55759c9e60b0 <./lopcodes.h:45:16, col:33> 'int'
      `-BinaryOperator 0x55759c9e6088 <line:44:17, line:42:18> 'int' '+'
        |-IntegerLiteral 0x55759c9e6048 <line:44:17> 'int' 0
        `-IntegerLiteral 0x55759c9e6068 <line:42:18> 'int' 6
([B3.61]) | ([B3.67])
  69: IntegerLiteral 0x55759c9e6140 <luac.c:140:39> 'int' 1
1
  70: CStyleCastExpr 0x55759c9e61c0 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e61a0 <col:26, col:30> 'int'
  `-IntegerLiteral 0x55759c9e6140 <luac.c:140:39> 'int' 1
(Instruction)([B3.69]) (CStyleCastExpr, IntegralCast, Instruction)
  71: IntegerLiteral 0x55759c9e6208 <./lopcodes.h:44:17> 'int' 0
0
  72: IntegerLiteral 0x55759c9e6228 <./lopcodes.h:42:18> 'int' 6
6
  73: BinaryOperator 0x55759c9e6248 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e6208 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e6228 <line:42:18> 'int' 6
[B3.71] + [B3.72]
  74: IntegerLiteral 0x55759c9e6290 <./lopcodes.h:40:17> 'int' 8
8
  75: BinaryOperator 0x55759c9e62b0 <./lopcodes.h:45:16, line:40:17> 'int' '+'
|-ParenExpr 0x55759c9e6270 <line:45:16, col:33> 'int'
| `-BinaryOperator 0x55759c9e6248 <line:44:17, line:42:18> 'int' '+'
|   |-IntegerLiteral 0x55759c9e6208 <line:44:17> 'int' 0
|   `-IntegerLiteral 0x55759c9e6228 <line:42:18> 'int' 6
`-IntegerLiteral 0x55759c9e6290 <line:40:17> 'int' 8
([B3.73]) + [B3.74]
  76: IntegerLiteral 0x55759c9e62f8 <./lopcodes.h:37:17> 'int' 9
9
  77: BinaryOperator 0x55759c9e6318 <./lopcodes.h:46:16, line:37:17> 'int' '+'
|-ParenExpr 0x55759c9e62d8 <line:46:16, col:31> 'int'
| `-BinaryOperator 0x55759c9e62b0 <line:45:16, line:40:17> 'int' '+'
|   |-ParenExpr 0x55759c9e6270 <line:45:16, col:33> 'int'
|   | `-BinaryOperator 0x55759c9e6248 <line:44:17, line:42:18> 'int' '+'
|   |   |-IntegerLiteral 0x55759c9e6208 <line:44:17> 'int' 0
|   |   `-IntegerLiteral 0x55759c9e6228 <line:42:18> 'int' 6
|   `-IntegerLiteral 0x55759c9e6290 <line:40:17> 'int' 8
`-IntegerLiteral 0x55759c9e62f8 <line:37:17> 'int' 9
([B3.75]) + [B3.76]
  78: BinaryOperator 0x55759c9e6360 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e61e8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e61c0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e61a0 <col:26, col:30> 'int'
|     `-IntegerLiteral 0x55759c9e6140 <luac.c:140:39> 'int' 1
`-ParenExpr 0x55759c9e6340 <./lopcodes.h:47:16, col:31> 'int'
  `-BinaryOperator 0x55759c9e6318 <line:46:16, line:37:17> 'int' '+'
    |-ParenExpr 0x55759c9e62d8 <line:46:16, col:31> 'int'
    | `-BinaryOperator 0x55759c9e62b0 <line:45:16, line:40:17> 'int' '+'
    |   |-ParenExpr 0x55759c9e6270 <line:45:16, col:33> 'int'
    |   | `-BinaryOperator 0x55759c9e6248 <line:44:17, line:42:18> 'int' '+'
    |   |   |-IntegerLiteral 0x55759c9e6208 <line:44:17> 'int' 0
    |   |   `-IntegerLiteral 0x55759c9e6228 <line:42:18> 'int' 6
    |   `-IntegerLiteral 0x55759c9e6290 <line:40:17> 'int' 8
    `-IntegerLiteral 0x55759c9e62f8 <line:37:17> 'int' 9
([B3.70]) << ([B3.77])
  79: BinaryOperator 0x55759c9e63a8 <./lopcodes.h:104:30, line:106:34> 'unsigned int' '|'
|-BinaryOperator 0x55759c9e6118 <line:104:30, line:105:34> 'unsigned int' '|'
| |-ParenExpr 0x55759c9e5f60 <line:104:30, col:59> 'Instruction':'unsigned int'
| | `-BinaryOperator 0x55759c9e5f38 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
| |   |-ParenExpr 0x55759c9e5ef8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| |   | `-CStyleCastExpr 0x55759c9e5ed0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
| |   |   `-ParenExpr 0x55759c9e5eb0 <col:26, col:30> 'int'
| |   |     `-DeclRefExpr 0x55759c9e5e48 <luac.c:140:29> 'int' EnumConstant 0x55759c9b1840 'OP_CALL' 'int'
| |   `-IntegerLiteral 0x55759c9e5f18 <./lopcodes.h:44:17> 'int' 0
| `-ParenExpr 0x55759c9e60f8 <line:105:6, col:34> 'Instruction':'unsigned int'
|   `-BinaryOperator 0x55759c9e60d0 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|     |-ParenExpr 0x55759c9e6028 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|     | `-CStyleCastExpr 0x55759c9e6000 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|     |   `-ParenExpr 0x55759c9e5fe0 <col:26, col:30> 'int'
|     |     `-IntegerLiteral 0x55759c9e5f80 <luac.c:140:37> 'int' 0
|     `-ParenExpr 0x55759c9e60b0 <./lopcodes.h:45:16, col:33> 'int'
|       `-BinaryOperator 0x55759c9e6088 <line:44:17, line:42:18> 'int' '+'
|         |-IntegerLiteral 0x55759c9e6048 <line:44:17> 'int' 0
|         `-IntegerLiteral 0x55759c9e6068 <line:42:18> 'int' 6
`-ParenExpr 0x55759c9e6388 <line:106:6, col:34> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e6360 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e61e8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e61c0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x55759c9e61a0 <col:26, col:30> 'int'
    |     `-IntegerLiteral 0x55759c9e6140 <luac.c:140:39> 'int' 1
    `-ParenExpr 0x55759c9e6340 <./lopcodes.h:47:16, col:31> 'int'
      `-BinaryOperator 0x55759c9e6318 <line:46:16, line:37:17> 'int' '+'
        |-ParenExpr 0x55759c9e62d8 <line:46:16, col:31> 'int'
        | `-BinaryOperator 0x55759c9e62b0 <line:45:16, line:40:17> 'int' '+'
        |   |-ParenExpr 0x55759c9e6270 <line:45:16, col:33> 'int'
        |   | `-BinaryOperator 0x55759c9e6248 <line:44:17, line:42:18> 'int' '+'
        |   |   |-IntegerLiteral 0x55759c9e6208 <line:44:17> 'int' 0
        |   |   `-IntegerLiteral 0x55759c9e6228 <line:42:18> 'int' 6
        |   `-IntegerLiteral 0x55759c9e6290 <line:40:17> 'int' 8
        `-IntegerLiteral 0x55759c9e62f8 <line:37:17> 'int' 9
[B3.68] | ([B3.78])
  80: IntegerLiteral 0x55759c9e63d0 <luac.c:140:41> 'int' 1
1
  81: CStyleCastExpr 0x55759c9e6450 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x55759c9e6430 <col:26, col:30> 'int'
  `-IntegerLiteral 0x55759c9e63d0 <luac.c:140:41> 'int' 1
(Instruction)([B3.80]) (CStyleCastExpr, IntegralCast, Instruction)
  82: IntegerLiteral 0x55759c9e6498 <./lopcodes.h:44:17> 'int' 0
0
  83: IntegerLiteral 0x55759c9e64b8 <./lopcodes.h:42:18> 'int' 6
6
  84: BinaryOperator 0x55759c9e64d8 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x55759c9e6498 <line:44:17> 'int' 0
`-IntegerLiteral 0x55759c9e64b8 <line:42:18> 'int' 6
[B3.82] + [B3.83]
  85: IntegerLiteral 0x55759c9e6520 <./lopcodes.h:40:17> 'int' 8
8
  86: BinaryOperator 0x55759c9e6540 <./lopcodes.h:45:16, line:40:17> 'int' '+'
|-ParenExpr 0x55759c9e6500 <line:45:16, col:33> 'int'
| `-BinaryOperator 0x55759c9e64d8 <line:44:17, line:42:18> 'int' '+'
|   |-IntegerLiteral 0x55759c9e6498 <line:44:17> 'int' 0
|   `-IntegerLiteral 0x55759c9e64b8 <line:42:18> 'int' 6
`-IntegerLiteral 0x55759c9e6520 <line:40:17> 'int' 8
([B3.84]) + [B3.85]
  87: BinaryOperator 0x55759c9e6588 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x55759c9e6478 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x55759c9e6450 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x55759c9e6430 <col:26, col:30> 'int'
|     `-IntegerLiteral 0x55759c9e63d0 <luac.c:140:41> 'int' 1
`-ParenExpr 0x55759c9e6568 <./lopcodes.h:46:16, col:31> 'int'
  `-BinaryOperator 0x55759c9e6540 <line:45:16, line:40:17> 'int' '+'
    |-ParenExpr 0x55759c9e6500 <line:45:16, col:33> 'int'
    | `-BinaryOperator 0x55759c9e64d8 <line:44:17, line:42:18> 'int' '+'
    |   |-IntegerLiteral 0x55759c9e6498 <line:44:17> 'int' 0
    |   `-IntegerLiteral 0x55759c9e64b8 <line:42:18> 'int' 6
    `-IntegerLiteral 0x55759c9e6520 <line:40:17> 'int' 8
([B3.81]) << ([B3.86])
  88: BinaryOperator 0x55759c9e65d0 <./lopcodes.h:104:30, line:107:34> 'unsigned int' '|'
|-BinaryOperator 0x55759c9e63a8 <line:104:30, line:106:34> 'unsigned int' '|'
| |-BinaryOperator 0x55759c9e6118 <line:104:30, line:105:34> 'unsigned int' '|'
| | |-ParenExpr 0x55759c9e5f60 <line:104:30, col:59> 'Instruction':'unsigned int'
| | | `-BinaryOperator 0x55759c9e5f38 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
| | |   |-ParenExpr 0x55759c9e5ef8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| | |   | `-CStyleCastExpr 0x55759c9e5ed0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
| | |   |   `-ParenExpr 0x55759c9e5eb0 <col:26, col:30> 'int'
| | |   |     `-DeclRefExpr 0x55759c9e5e48 <luac.c:140:29> 'int' EnumConstant 0x55759c9b1840 'OP_CALL' 'int'
| | |   `-IntegerLiteral 0x55759c9e5f18 <./lopcodes.h:44:17> 'int' 0
| | `-ParenExpr 0x55759c9e60f8 <line:105:6, col:34> 'Instruction':'unsigned int'
| |   `-BinaryOperator 0x55759c9e60d0 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
| |     |-ParenExpr 0x55759c9e6028 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| |     | `-CStyleCastExpr 0x55759c9e6000 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
| |     |   `-ParenExpr 0x55759c9e5fe0 <col:26, col:30> 'int'
| |     |     `-IntegerLiteral 0x55759c9e5f80 <luac.c:140:37> 'int' 0
| |     `-ParenExpr 0x55759c9e60b0 <./lopcodes.h:45:16, col:33> 'int'
| |       `-BinaryOperator 0x55759c9e6088 <line:44:17, line:42:18> 'int' '+'
| |         |-IntegerLiteral 0x55759c9e6048 <line:44:17> 'int' 0
| |         `-IntegerLiteral 0x55759c9e6068 <line:42:18> 'int' 6
| `-ParenExpr 0x55759c9e6388 <line:106:6, col:34> 'Instruction':'unsigned int'
|   `-BinaryOperator 0x55759c9e6360 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
|     |-ParenExpr 0x55759c9e61e8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|     | `-CStyleCastExpr 0x55759c9e61c0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|     |   `-ParenExpr 0x55759c9e61a0 <col:26, col:30> 'int'
|     |     `-IntegerLiteral 0x55759c9e6140 <luac.c:140:39> 'int' 1
|     `-ParenExpr 0x55759c9e6340 <./lopcodes.h:47:16, col:31> 'int'
|       `-BinaryOperator 0x55759c9e6318 <line:46:16, line:37:17> 'int' '+'
|         |-ParenExpr 0x55759c9e62d8 <line:46:16, col:31> 'int'
|         | `-BinaryOperator 0x55759c9e62b0 <line:45:16, line:40:17> 'int' '+'
|         |   |-ParenExpr 0x55759c9e6270 <line:45:16, col:33> 'int'
|         |   | `-BinaryOperator 0x55759c9e6248 <line:44:17, line:42:18> 'int' '+'
|         |   |   |-IntegerLiteral 0x55759c9e6208 <line:44:17> 'int' 0
|         |   |   `-IntegerLiteral 0x55759c9e6228 <line:42:18> 'int' 6
|         |   `-IntegerLiteral 0x55759c9e6290 <line:40:17> 'int' 8
|         `-IntegerLiteral 0x55759c9e62f8 <line:37:17> 'int' 9
`-ParenExpr 0x55759c9e65b0 <line:107:6, col:34> 'Instruction':'unsigned int'
  `-BinaryOperator 0x55759c9e6588 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x55759c9e6478 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | `-CStyleCastExpr 0x55759c9e6450 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x55759c9e6430 <col:26, col:30> 'int'
    |     `-IntegerLiteral 0x55759c9e63d0 <luac.c:140:41> 'int' 1
    `-ParenExpr 0x55759c9e6568 <./lopcodes.h:46:16, col:31> 'int'
      `-BinaryOperator 0x55759c9e6540 <line:45:16, line:40:17> 'int' '+'
        |-ParenExpr 0x55759c9e6500 <line:45:16, col:33> 'int'
        | `-BinaryOperator 0x55759c9e64d8 <line:44:17, line:42:18> 'int' '+'
        |   |-IntegerLiteral 0x55759c9e6498 <line:44:17> 'int' 0
        |   `-IntegerLiteral 0x55759c9e64b8 <line:42:18> 'int' 6
        `-IntegerLiteral 0x55759c9e6520 <line:40:17> 'int' 8
[B3.79] | ([B3.87])
  89: DeclRefExpr 0x55759c9e5d48 <luac.c:140:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  90: ImplicitCastExpr 0x55759c9e5d70 <luac.c:140:4> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e5d48 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.89] (ImplicitCastExpr, LValueToRValue, Proto *)
  91: MemberExpr 0x55759c9e5d88 <luac.c:140:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
`-ImplicitCastExpr 0x55759c9e5d70 <col:4> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e5d48 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.90]->code
  92: ImplicitCastExpr 0x55759c9e5e08 <luac.c:140:4, col:7> 'Instruction *' <LValueToRValue>
`-MemberExpr 0x55759c9e5d88 <col:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
  `-ImplicitCastExpr 0x55759c9e5d70 <col:4> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e5d48 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B3.91] (ImplicitCastExpr, LValueToRValue, Instruction *)
  93: DeclRefExpr 0x55759c9e5dc0 <luac.c:140:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
  94: UnaryOperator 0x55759c9e5de8 <luac.c:140:12, col:14> 'int' postfix '++'
`-DeclRefExpr 0x55759c9e5dc0 <col:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B3.93]++
  95: ArraySubscriptExpr 0x55759c9e5e20 <luac.c:140:4, col:16> 'Instruction':'unsigned int' lvalue
|-ImplicitCastExpr 0x55759c9e5e08 <col:4, col:7> 'Instruction *' <LValueToRValue>
| `-MemberExpr 0x55759c9e5d88 <col:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
|   `-ImplicitCastExpr 0x55759c9e5d70 <col:4> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55759c9e5d48 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-UnaryOperator 0x55759c9e5de8 <col:12, col:14> 'int' postfix '++'
  `-DeclRefExpr 0x55759c9e5dc0 <col:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B3.92][[B3.94]]
  96: BinaryOperator 0x55759c9e6618 <luac.c:140:4, ./lopcodes.h:107:35> 'Instruction':'unsigned int' '='
|-ArraySubscriptExpr 0x55759c9e5e20 <luac.c:140:4, col:16> 'Instruction':'unsigned int' lvalue
| |-ImplicitCastExpr 0x55759c9e5e08 <col:4, col:7> 'Instruction *' <LValueToRValue>
| | `-MemberExpr 0x55759c9e5d88 <col:4, col:7> 'Instruction *' lvalue ->code 0x55759c98eb28
| |   `-ImplicitCastExpr 0x55759c9e5d70 <col:4> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x55759c9e5d48 <col:4> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
| `-UnaryOperator 0x55759c9e5de8 <col:12, col:14> 'int' postfix '++'
|   `-DeclRefExpr 0x55759c9e5dc0 <col:12> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
`-ParenExpr 0x55759c9e65f8 <./lopcodes.h:104:29, line:107:35> 'unsigned int'
  `-BinaryOperator 0x55759c9e65d0 <line:104:30, line:107:34> 'unsigned int' '|'
    |-BinaryOperator 0x55759c9e63a8 <line:104:30, line:106:34> 'unsigned int' '|'
    | |-BinaryOperator 0x55759c9e6118 <line:104:30, line:105:34> 'unsigned int' '|'
    | | |-ParenExpr 0x55759c9e5f60 <line:104:30, col:59> 'Instruction':'unsigned int'
    | | | `-BinaryOperator 0x55759c9e5f38 <./llimits.h:75:22, ./lopcodes.h:44:17> 'Instruction':'unsigned int' '<<'
    | | |   |-ParenExpr 0x55759c9e5ef8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | | |   | `-CStyleCastExpr 0x55759c9e5ed0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    | | |   |   `-ParenExpr 0x55759c9e5eb0 <col:26, col:30> 'int'
    | | |   |     `-DeclRefExpr 0x55759c9e5e48 <luac.c:140:29> 'int' EnumConstant 0x55759c9b1840 'OP_CALL' 'int'
    | | |   `-IntegerLiteral 0x55759c9e5f18 <./lopcodes.h:44:17> 'int' 0
    | | `-ParenExpr 0x55759c9e60f8 <line:105:6, col:34> 'Instruction':'unsigned int'
    | |   `-BinaryOperator 0x55759c9e60d0 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
    | |     |-ParenExpr 0x55759c9e6028 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    | |     | `-CStyleCastExpr 0x55759c9e6000 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    | |     |   `-ParenExpr 0x55759c9e5fe0 <col:26, col:30> 'int'
    | |     |     `-IntegerLiteral 0x55759c9e5f80 <luac.c:140:37> 'int' 0
    | |     `-ParenExpr 0x55759c9e60b0 <./lopcodes.h:45:16, col:33> 'int'
    | |       `-BinaryOperator 0x55759c9e6088 <line:44:17, line:42:18> 'int' '+'
    | |         |-IntegerLiteral 0x55759c9e6048 <line:44:17> 'int' 0
    | |         `-IntegerLiteral 0x55759c9e6068 <line:42:18> 'int' 6
    | `-ParenExpr 0x55759c9e6388 <line:106:6, col:34> 'Instruction':'unsigned int'
    |   `-BinaryOperator 0x55759c9e6360 <./llimits.h:75:22, ./lopcodes.h:47:31> 'Instruction':'unsigned int' '<<'
    |     |-ParenExpr 0x55759c9e61e8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    |     | `-CStyleCastExpr 0x55759c9e61c0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |     |   `-ParenExpr 0x55759c9e61a0 <col:26, col:30> 'int'
    |     |     `-IntegerLiteral 0x55759c9e6140 <luac.c:140:39> 'int' 1
    |     `-ParenExpr 0x55759c9e6340 <./lopcodes.h:47:16, col:31> 'int'
    |       `-BinaryOperator 0x55759c9e6318 <line:46:16, line:37:17> 'int' '+'
    |         |-ParenExpr 0x55759c9e62d8 <line:46:16, col:31> 'int'
    |         | `-BinaryOperator 0x55759c9e62b0 <line:45:16, line:40:17> 'int' '+'
    |         |   |-ParenExpr 0x55759c9e6270 <line:45:16, col:33> 'int'
    |         |   | `-BinaryOperator 0x55759c9e6248 <line:44:17, line:42:18> 'int' '+'
    |         |   |   |-IntegerLiteral 0x55759c9e6208 <line:44:17> 'int' 0
    |         |   |   `-IntegerLiteral 0x55759c9e6228 <line:42:18> 'int' 6
    |         |   `-IntegerLiteral 0x55759c9e6290 <line:40:17> 'int' 8
    |         `-IntegerLiteral 0x55759c9e62f8 <line:37:17> 'int' 9
    `-ParenExpr 0x55759c9e65b0 <line:107:6, col:34> 'Instruction':'unsigned int'
      `-BinaryOperator 0x55759c9e6588 <./llimits.h:75:22, ./lopcodes.h:46:31> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x55759c9e6478 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
        | `-CStyleCastExpr 0x55759c9e6450 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
        |   `-ParenExpr 0x55759c9e6430 <col:26, col:30> 'int'
        |     `-IntegerLiteral 0x55759c9e63d0 <luac.c:140:41> 'int' 1
        `-ParenExpr 0x55759c9e6568 <./lopcodes.h:46:16, col:31> 'int'
          `-BinaryOperator 0x55759c9e6540 <line:45:16, line:40:17> 'int' '+'
            |-ParenExpr 0x55759c9e6500 <line:45:16, col:33> 'int'
            | `-BinaryOperator 0x55759c9e64d8 <line:44:17, line:42:18> 'int' '+'
            |   |-IntegerLiteral 0x55759c9e6498 <line:44:17> 'int' 0
            |   `-IntegerLiteral 0x55759c9e64b8 <line:42:18> 'int' 6
            `-IntegerLiteral 0x55759c9e6520 <line:40:17> 'int' 8
[B3.95] = ([B3.88])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55759c9e5120 <luac.c:136:13> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
i
   2: ImplicitCastExpr 0x55759c9e5170 <luac.c:136:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e5120 <col:13> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55759c9e5148 <luac.c:136:15> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
n
   4: ImplicitCastExpr 0x55759c9e5188 <luac.c:136:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e5148 <col:15> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55759c9e51a0 <luac.c:136:13, col:15> 'int' '<'
|-ImplicitCastExpr 0x55759c9e5170 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e5120 <col:13> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
`-ImplicitCastExpr 0x55759c9e5188 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e5148 <col:15> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B4.2] < [B4.4]
   T: for (...; [B4.5]; ...)
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: ConditionalOperator 0x55759c9e4e10 <./lmem.h:20:3, line:22:16> 'void *'
|-ParenExpr 0x55759c9e4a18 <line:20:3, col:40> 'int'
| `-BinaryOperator 0x55759c9e49f0 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|   |-ParenExpr 0x55759c9e47d8 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
|   | `-CStyleCastExpr 0x55759c9e47b0 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   |   `-ParenExpr 0x55759c9e4790 <col:26, col:30> 'int'
|   |     `-BinaryOperator 0x55759c9e14c8 <./lmem.h:20:17, col:21> 'int' '+'
|   |       |-ImplicitCastExpr 0x55759c9e14b0 <col:17, col:19> 'int' <LValueToRValue>
|   |       | `-ParenExpr 0x55759c9e1470 <col:17, col:19> 'int' lvalue
|   |       |   `-DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
|   |       `-IntegerLiteral 0x55759c9e1490 <./lmem.h:20:21> 'int' 1
|   `-BinaryOperator 0x55759c9e49c8 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|     |-ParenExpr 0x55759c9e4958 <./llimits.h:30:19, col:42> 'unsigned long'
|     | `-BinaryOperator 0x55759c9e4930 <col:20, col:41> 'unsigned long' '-'
|     |   |-CStyleCastExpr 0x55759c9e48d0 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|     |   | `-ParenExpr 0x55759c9e48b0 <col:28, col:39> 'size_t':'unsigned long'
|     |   |   `-UnaryOperator 0x55759c9e4850 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     |   |     `-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|     |   |       `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
|     |   `-ImplicitCastExpr 0x55759c9e4918 <col:41> 'unsigned long' <IntegralCast>
|     |     `-IntegerLiteral 0x55759c9e48f8 <col:41> 'int' 2
|     `-ParenExpr 0x55759c9e49a8 <./lmem.h:20:37, col:39> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0x55759c9e4988 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
|-CallExpr 0x55759c9e4d00 <line:21:3, col:42> 'void *'
| |-ImplicitCastExpr 0x55759c9e4ce8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55759c9e4a38 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
| |-ImplicitCastExpr 0x55759c9e4d48 <luac.c:133:23> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55759c9e4a60 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
| |-ParenExpr 0x55759c9e4b08 <./lmem.h:21:20, col:22> 'void *'
| | `-ParenExpr 0x55759c9e4ae8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
| |   `-CStyleCastExpr 0x55759c9e4ac0 <col:17, col:24> 'void *' <NullToPointer>
| |     `-IntegerLiteral 0x55759c9e4a88 <col:24> 'int' 0
| |-BinaryOperator 0x55759c9e4bd0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| | |-ImplicitCastExpr 0x55759c9e4bb8 <col:25, col:28> 'unsigned long' <IntegralCast>
| | | `-ParenExpr 0x55759c9e4b48 <col:25, col:28> 'int'
| | |   `-IntegerLiteral 0x55759c9e4b28 <line:31:36> 'int' 0
| | `-ParenExpr 0x55759c9e4b98 <line:21:30, col:32> 'unsigned long'
| |   `-UnaryExprOrTypeTraitExpr 0x55759c9e4b78 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
| `-BinaryOperator 0x55759c9e4cc0 <line:21:35, col:41> 'unsigned long' '*'
|   |-ImplicitCastExpr 0x55759c9e4ca8 <col:35, col:37> 'unsigned long' <IntegralCast>
|   | `-ImplicitCastExpr 0x55759c9e4c90 <col:35, col:37> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x55759c9e4c20 <col:35, col:37> 'int' lvalue
|   |     `-DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
|   `-ParenExpr 0x55759c9e4c70 <./lmem.h:21:39, col:41> 'unsigned long'
|     `-UnaryExprOrTypeTraitExpr 0x55759c9e4c50 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
`-CallExpr 0x55759c9e4dc8 <line:22:3, col:16> 'void *'
  |-ImplicitCastExpr 0x55759c9e4db0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9e4d60 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
  `-ImplicitCastExpr 0x55759c9e4df8 <luac.c:133:23> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e4d88 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
([B8.27]) ? [B6.16] : [B7.5]
   2: CStyleCastExpr 0x55759c9e4ef0 <./llimits.h:75:23, col:30> 'Proto **' <BitCast>
`-ParenExpr 0x55759c9e4ed0 <col:26, col:30> 'void *'
  `-ParenExpr 0x55759c9e4e40 <./lmem.h:20:2, line:22:17> 'void *'
    `-ConditionalOperator 0x55759c9e4e10 <line:20:3, line:22:16> 'void *'
      |-ParenExpr 0x55759c9e4a18 <line:20:3, col:40> 'int'
      | `-BinaryOperator 0x55759c9e49f0 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
      |   |-ParenExpr 0x55759c9e47d8 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
      |   | `-CStyleCastExpr 0x55759c9e47b0 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
      |   |   `-ParenExpr 0x55759c9e4790 <col:26, col:30> 'int'
      |   |     `-BinaryOperator 0x55759c9e14c8 <./lmem.h:20:17, col:21> 'int' '+'
      |   |       |-ImplicitCastExpr 0x55759c9e14b0 <col:17, col:19> 'int' <LValueToRValue>
      |   |       | `-ParenExpr 0x55759c9e1470 <col:17, col:19> 'int' lvalue
      |   |       |   `-DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
      |   |       `-IntegerLiteral 0x55759c9e1490 <./lmem.h:20:21> 'int' 1
      |   `-BinaryOperator 0x55759c9e49c8 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
      |     |-ParenExpr 0x55759c9e4958 <./llimits.h:30:19, col:42> 'unsigned long'
      |     | `-BinaryOperator 0x55759c9e4930 <col:20, col:41> 'unsigned long' '-'
      |     |   |-CStyleCastExpr 0x55759c9e48d0 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
      |     |   | `-ParenExpr 0x55759c9e48b0 <col:28, col:39> 'size_t':'unsigned long'
      |     |   |   `-UnaryOperator 0x55759c9e4850 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
      |     |   |     `-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      |     |   |       `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
      |     |   `-ImplicitCastExpr 0x55759c9e4918 <col:41> 'unsigned long' <IntegralCast>
      |     |     `-IntegerLiteral 0x55759c9e48f8 <col:41> 'int' 2
      |     `-ParenExpr 0x55759c9e49a8 <./lmem.h:20:37, col:39> 'unsigned long'
      |       `-UnaryExprOrTypeTraitExpr 0x55759c9e4988 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
      |-CallExpr 0x55759c9e4d00 <line:21:3, col:42> 'void *'
      | |-ImplicitCastExpr 0x55759c9e4ce8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x55759c9e4a38 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
      | |-ImplicitCastExpr 0x55759c9e4d48 <luac.c:133:23> 'lua_State *' <LValueToRValue>
      | | `-DeclRefExpr 0x55759c9e4a60 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
      | |-ParenExpr 0x55759c9e4b08 <./lmem.h:21:20, col:22> 'void *'
      | | `-ParenExpr 0x55759c9e4ae8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
      | |   `-CStyleCastExpr 0x55759c9e4ac0 <col:17, col:24> 'void *' <NullToPointer>
      | |     `-IntegerLiteral 0x55759c9e4a88 <col:24> 'int' 0
      | |-BinaryOperator 0x55759c9e4bd0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
      | | |-ImplicitCastExpr 0x55759c9e4bb8 <col:25, col:28> 'unsigned long' <IntegralCast>
      | | | `-ParenExpr 0x55759c9e4b48 <col:25, col:28> 'int'
      | | |   `-IntegerLiteral 0x55759c9e4b28 <line:31:36> 'int' 0
      | | `-ParenExpr 0x55759c9e4b98 <line:21:30, col:32> 'unsigned long'
      | |   `-UnaryExprOrTypeTraitExpr 0x55759c9e4b78 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
      | `-BinaryOperator 0x55759c9e4cc0 <line:21:35, col:41> 'unsigned long' '*'
      |   |-ImplicitCastExpr 0x55759c9e4ca8 <col:35, col:37> 'unsigned long' <IntegralCast>
      |   | `-ImplicitCastExpr 0x55759c9e4c90 <col:35, col:37> 'int' <LValueToRValue>
      |   |   `-ParenExpr 0x55759c9e4c20 <col:35, col:37> 'int' lvalue
      |   |     `-DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
      |   `-ParenExpr 0x55759c9e4c70 <./lmem.h:21:39, col:41> 'unsigned long'
      |     `-UnaryExprOrTypeTraitExpr 0x55759c9e4c50 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
      `-CallExpr 0x55759c9e4dc8 <line:22:3, col:16> 'void *'
        |-ImplicitCastExpr 0x55759c9e4db0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55759c9e4d60 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
        `-ImplicitCastExpr 0x55759c9e4df8 <luac.c:133:23> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55759c9e4d88 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
(Proto **)(([B5.1])) (CStyleCastExpr, BitCast, Proto **)
   3: DeclRefExpr 0x55759c9e13d0 <luac.c:133:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x55759c9e13f8 <luac.c:133:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e13d0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B5.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x55759c9e1410 <luac.c:133:3, col:6> 'struct Proto **' lvalue ->p 0x55759c98ec80
`-ImplicitCastExpr 0x55759c9e13f8 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e13d0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B5.4]->p
   6: BinaryOperator 0x55759c9e4f38 <luac.c:133:3, ./llimits.h:75:31> 'struct Proto **' '='
|-MemberExpr 0x55759c9e1410 <luac.c:133:3, col:6> 'struct Proto **' lvalue ->p 0x55759c98ec80
| `-ImplicitCastExpr 0x55759c9e13f8 <col:3> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e13d0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-ParenExpr 0x55759c9e4f18 <./llimits.h:75:22, col:31> 'Proto **'
  `-CStyleCastExpr 0x55759c9e4ef0 <col:23, col:30> 'Proto **' <BitCast>
    `-ParenExpr 0x55759c9e4ed0 <col:26, col:30> 'void *'
      `-ParenExpr 0x55759c9e4e40 <./lmem.h:20:2, line:22:17> 'void *'
        `-ConditionalOperator 0x55759c9e4e10 <line:20:3, line:22:16> 'void *'
          |-ParenExpr 0x55759c9e4a18 <line:20:3, col:40> 'int'
          | `-BinaryOperator 0x55759c9e49f0 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
          |   |-ParenExpr 0x55759c9e47d8 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
          |   | `-CStyleCastExpr 0x55759c9e47b0 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
          |   |   `-ParenExpr 0x55759c9e4790 <col:26, col:30> 'int'
          |   |     `-BinaryOperator 0x55759c9e14c8 <./lmem.h:20:17, col:21> 'int' '+'
          |   |       |-ImplicitCastExpr 0x55759c9e14b0 <col:17, col:19> 'int' <LValueToRValue>
          |   |       | `-ParenExpr 0x55759c9e1470 <col:17, col:19> 'int' lvalue
          |   |       |   `-DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
          |   |       `-IntegerLiteral 0x55759c9e1490 <./lmem.h:20:21> 'int' 1
          |   `-BinaryOperator 0x55759c9e49c8 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
          |     |-ParenExpr 0x55759c9e4958 <./llimits.h:30:19, col:42> 'unsigned long'
          |     | `-BinaryOperator 0x55759c9e4930 <col:20, col:41> 'unsigned long' '-'
          |     |   |-CStyleCastExpr 0x55759c9e48d0 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
          |     |   | `-ParenExpr 0x55759c9e48b0 <col:28, col:39> 'size_t':'unsigned long'
          |     |   |   `-UnaryOperator 0x55759c9e4850 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
          |     |   |     `-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
          |     |   |       `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
          |     |   `-ImplicitCastExpr 0x55759c9e4918 <col:41> 'unsigned long' <IntegralCast>
          |     |     `-IntegerLiteral 0x55759c9e48f8 <col:41> 'int' 2
          |     `-ParenExpr 0x55759c9e49a8 <./lmem.h:20:37, col:39> 'unsigned long'
          |       `-UnaryExprOrTypeTraitExpr 0x55759c9e4988 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
          |-CallExpr 0x55759c9e4d00 <line:21:3, col:42> 'void *'
          | |-ImplicitCastExpr 0x55759c9e4ce8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x55759c9e4a38 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
          | |-ImplicitCastExpr 0x55759c9e4d48 <luac.c:133:23> 'lua_State *' <LValueToRValue>
          | | `-DeclRefExpr 0x55759c9e4a60 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
          | |-ParenExpr 0x55759c9e4b08 <./lmem.h:21:20, col:22> 'void *'
          | | `-ParenExpr 0x55759c9e4ae8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
          | |   `-CStyleCastExpr 0x55759c9e4ac0 <col:17, col:24> 'void *' <NullToPointer>
          | |     `-IntegerLiteral 0x55759c9e4a88 <col:24> 'int' 0
          | |-BinaryOperator 0x55759c9e4bd0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
          | | |-ImplicitCastExpr 0x55759c9e4bb8 <col:25, col:28> 'unsigned long' <IntegralCast>
          | | | `-ParenExpr 0x55759c9e4b48 <col:25, col:28> 'int'
          | | |   `-IntegerLiteral 0x55759c9e4b28 <line:31:36> 'int' 0
          | | `-ParenExpr 0x55759c9e4b98 <line:21:30, col:32> 'unsigned long'
          | |   `-UnaryExprOrTypeTraitExpr 0x55759c9e4b78 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
          | `-BinaryOperator 0x55759c9e4cc0 <line:21:35, col:41> 'unsigned long' '*'
          |   |-ImplicitCastExpr 0x55759c9e4ca8 <col:35, col:37> 'unsigned long' <IntegralCast>
          |   | `-ImplicitCastExpr 0x55759c9e4c90 <col:35, col:37> 'int' <LValueToRValue>
          |   |   `-ParenExpr 0x55759c9e4c20 <col:35, col:37> 'int' lvalue
          |   |     `-DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
          |   `-ParenExpr 0x55759c9e4c70 <./lmem.h:21:39, col:41> 'unsigned long'
          |     `-UnaryExprOrTypeTraitExpr 0x55759c9e4c50 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
          `-CallExpr 0x55759c9e4dc8 <line:22:3, col:16> 'void *'
            |-ImplicitCastExpr 0x55759c9e4db0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x55759c9e4d60 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
            `-ImplicitCastExpr 0x55759c9e4df8 <luac.c:133:23> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x55759c9e4d88 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B5.5] = ([B5.2])
   7: DeclRefExpr 0x55759c9e4fd8 <luac.c:134:12> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
n
   8: ImplicitCastExpr 0x55759c9e5000 <luac.c:134:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e4fd8 <col:12> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B5.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x55759c9e4f60 <luac.c:134:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  10: ImplicitCastExpr 0x55759c9e4f88 <luac.c:134:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e4f60 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B5.9] (ImplicitCastExpr, LValueToRValue, Proto *)
  11: MemberExpr 0x55759c9e4fa0 <luac.c:134:3, col:6> 'int' lvalue ->sizep 0x55759c98f208
`-ImplicitCastExpr 0x55759c9e4f88 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e4f60 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B5.10]->sizep
  12: BinaryOperator 0x55759c9e5018 <luac.c:134:3, col:12> 'int' '='
|-MemberExpr 0x55759c9e4fa0 <col:3, col:6> 'int' lvalue ->sizep 0x55759c98f208
| `-ImplicitCastExpr 0x55759c9e4f88 <col:3> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e4f60 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-ImplicitCastExpr 0x55759c9e5000 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e4fd8 <col:12> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B5.11] = [B5.8]
  13: IntegerLiteral 0x55759c9e5068 <luac.c:135:6> 'int' 0
0
  14: DeclRefExpr 0x55759c9e5040 <luac.c:135:3> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
  15: BinaryOperator 0x55759c9e5088 <luac.c:135:3, col:6> 'int' '='
|-DeclRefExpr 0x55759c9e5040 <col:3> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
`-IntegerLiteral 0x55759c9e5068 <col:6> 'int' 0
[B5.14] = [B5.13]
  16: IntegerLiteral 0x55759c9e50d8 <luac.c:136:10> 'int' 0
0
  17: DeclRefExpr 0x55759c9e50b0 <luac.c:136:8> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
i
  18: BinaryOperator 0x55759c9e50f8 <luac.c:136:8, col:10> 'int' '='
|-DeclRefExpr 0x55759c9e50b0 <col:8> 'int' lvalue Var 0x55759c9df5a0 'i' 'int'
`-IntegerLiteral 0x55759c9e50d8 <col:10> 'int' 0
[B5.17] = [B5.16]
   Preds (2): B6 B7
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55759c9e4a38 <./lmem.h:21:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
luaM_realloc_
   2: ImplicitCastExpr 0x55759c9e4ce8 <./lmem.h:21:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e4a38 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, size_t, size_t))
   3: DeclRefExpr 0x55759c9e4a60 <luac.c:133:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9e4d48 <luac.c:133:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e4a60 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55759c9e4a88 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x55759c9e4ac0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9e4a88 <col:24> 'int' 0
(void *)[B6.5] (CStyleCastExpr, NullToPointer, void *)
   7: IntegerLiteral 0x55759c9e4b28 <./lmem.h:31:36> 'int' 0
0
   8: ImplicitCastExpr 0x55759c9e4bb8 <./lmem.h:21:25, col:28> 'unsigned long' <IntegralCast>
`-ParenExpr 0x55759c9e4b48 <col:25, col:28> 'int'
  `-IntegerLiteral 0x55759c9e4b28 <line:31:36> 'int' 0
([B6.7]) (ImplicitCastExpr, IntegralCast, unsigned long)
   9: UnaryExprOrTypeTraitExpr 0x55759c9e4b78 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Proto *'
sizeof(Proto *)
  10: BinaryOperator 0x55759c9e4bd0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
|-ImplicitCastExpr 0x55759c9e4bb8 <col:25, col:28> 'unsigned long' <IntegralCast>
| `-ParenExpr 0x55759c9e4b48 <col:25, col:28> 'int'
|   `-IntegerLiteral 0x55759c9e4b28 <line:31:36> 'int' 0
`-ParenExpr 0x55759c9e4b98 <line:21:30, col:32> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55759c9e4b78 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
[B6.8] * ([B6.9])
  11: DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
n
  12: ImplicitCastExpr 0x55759c9e4c90 <./lmem.h:21:35, col:37> 'int' <LValueToRValue>
`-ParenExpr 0x55759c9e4c20 <col:35, col:37> 'int' lvalue
  `-DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
([B6.11]) (ImplicitCastExpr, LValueToRValue, int)
  13: ImplicitCastExpr 0x55759c9e4ca8 <./lmem.h:21:35, col:37> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55759c9e4c90 <col:35, col:37> 'int' <LValueToRValue>
  `-ParenExpr 0x55759c9e4c20 <col:35, col:37> 'int' lvalue
    `-DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B6.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: UnaryExprOrTypeTraitExpr 0x55759c9e4c50 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Proto *'
sizeof(Proto *)
  15: BinaryOperator 0x55759c9e4cc0 <./lmem.h:21:35, col:41> 'unsigned long' '*'
|-ImplicitCastExpr 0x55759c9e4ca8 <col:35, col:37> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55759c9e4c90 <col:35, col:37> 'int' <LValueToRValue>
|   `-ParenExpr 0x55759c9e4c20 <col:35, col:37> 'int' lvalue
|     `-DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
`-ParenExpr 0x55759c9e4c70 <./lmem.h:21:39, col:41> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55759c9e4c50 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
[B6.13] * ([B6.14])
  16: CallExpr 0x55759c9e4d00 <./lmem.h:21:3, col:42> 'void *'
|-ImplicitCastExpr 0x55759c9e4ce8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e4a38 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
|-ImplicitCastExpr 0x55759c9e4d48 <luac.c:133:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e4a60 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
|-ParenExpr 0x55759c9e4b08 <./lmem.h:21:20, col:22> 'void *'
| `-ParenExpr 0x55759c9e4ae8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
|   `-CStyleCastExpr 0x55759c9e4ac0 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55759c9e4a88 <col:24> 'int' 0
|-BinaryOperator 0x55759c9e4bd0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| |-ImplicitCastExpr 0x55759c9e4bb8 <col:25, col:28> 'unsigned long' <IntegralCast>
| | `-ParenExpr 0x55759c9e4b48 <col:25, col:28> 'int'
| |   `-IntegerLiteral 0x55759c9e4b28 <line:31:36> 'int' 0
| `-ParenExpr 0x55759c9e4b98 <line:21:30, col:32> 'unsigned long'
|   `-UnaryExprOrTypeTraitExpr 0x55759c9e4b78 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
`-BinaryOperator 0x55759c9e4cc0 <line:21:35, col:41> 'unsigned long' '*'
  |-ImplicitCastExpr 0x55759c9e4ca8 <col:35, col:37> 'unsigned long' <IntegralCast>
  | `-ImplicitCastExpr 0x55759c9e4c90 <col:35, col:37> 'int' <LValueToRValue>
  |   `-ParenExpr 0x55759c9e4c20 <col:35, col:37> 'int' lvalue
  |     `-DeclRefExpr 0x55759c9e4bf8 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
  `-ParenExpr 0x55759c9e4c70 <./lmem.h:21:39, col:41> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x55759c9e4c50 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
[B6.2]([B6.4], (([B6.6])), [B6.10], [B6.15])
   Preds (1): B8
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x55759c9e4d60 <./lmem.h:22:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
luaM_toobig
   2: ImplicitCastExpr 0x55759c9e4db0 <./lmem.h:22:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e4d60 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *))
   3: DeclRefExpr 0x55759c9e4d88 <luac.c:133:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9e4df8 <luac.c:133:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e4d88 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x55759c9e4dc8 <./lmem.h:22:3, col:16> 'void *'
|-ImplicitCastExpr 0x55759c9e4db0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e4d60 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
`-ImplicitCastExpr 0x55759c9e4df8 <luac.c:133:23> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e4d88 <col:23> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B7.2]([B7.4])
   Preds (1): B8
   Succs (1): B5

 [B8]
   1: ConditionalOperator 0x55759c9e11d0 <./lmem.h:20:3, line:22:16> 'void *'
|-ParenExpr 0x55759c9e0c60 <line:20:3, col:40> 'int'
| `-BinaryOperator 0x55759c9e0c38 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|   |-ParenExpr 0x55759c9e0a20 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
|   | `-CStyleCastExpr 0x55759c9e09f8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   |   `-ParenExpr 0x55759c9e09d8 <col:26, col:30> 'int'
|   |     `-BinaryOperator 0x55759c9e0970 <./lmem.h:20:17, col:21> 'int' '+'
|   |       |-ImplicitCastExpr 0x55759c9e0958 <col:17, col:19> 'int' <LValueToRValue>
|   |       | `-ParenExpr 0x55759c9e0918 <col:17, col:19> 'int' lvalue
|   |       |   `-DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
|   |       `-IntegerLiteral 0x55759c9e0938 <./lmem.h:20:21> 'int' 1
|   `-BinaryOperator 0x55759c9e0c10 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|     |-ParenExpr 0x55759c9e0ba0 <./llimits.h:30:19, col:42> 'unsigned long'
|     | `-BinaryOperator 0x55759c9e0b78 <col:20, col:41> 'unsigned long' '-'
|     |   |-CStyleCastExpr 0x55759c9e0b18 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|     |   | `-ParenExpr 0x55759c9e0af8 <col:28, col:39> 'size_t':'unsigned long'
|     |   |   `-UnaryOperator 0x55759c9e0a98 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     |   |     `-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|     |   |       `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
|     |   `-ImplicitCastExpr 0x55759c9e0b60 <col:41> 'unsigned long' <IntegralCast>
|     |     `-IntegerLiteral 0x55759c9e0b40 <col:41> 'int' 2
|     `-ParenExpr 0x55759c9e0bf0 <./lmem.h:20:37, col:39> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0x55759c9e0bd0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
|-CallExpr 0x55759c9e0fa0 <line:21:3, col:42> 'void *'
| |-ImplicitCastExpr 0x55759c9e0f88 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55759c9e0c80 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
| |-ImplicitCastExpr 0x55759c9e0fe8 <luac.c:131:26> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55759c9e0ca8 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
| |-ParenExpr 0x55759c9e0d50 <./lmem.h:21:20, col:22> 'void *'
| | `-ParenExpr 0x55759c9e0d30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
| |   `-CStyleCastExpr 0x55759c9e0d08 <col:17, col:24> 'void *' <NullToPointer>
| |     `-IntegerLiteral 0x55759c9e0cd0 <col:24> 'int' 0
| |-BinaryOperator 0x55759c9e0e18 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| | |-ImplicitCastExpr 0x55759c9e0e00 <col:25, col:28> 'unsigned long' <IntegralCast>
| | | `-ParenExpr 0x55759c9e0d90 <col:25, col:28> 'int'
| | |   `-IntegerLiteral 0x55759c9e0d70 <line:31:36> 'int' 0
| | `-ParenExpr 0x55759c9e0de0 <line:21:30, col:32> 'unsigned long'
| |   `-UnaryExprOrTypeTraitExpr 0x55759c9e0dc0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
| `-BinaryOperator 0x55759c9e0f08 <line:21:35, col:41> 'unsigned long' '*'
|   |-ImplicitCastExpr 0x55759c9e0ef0 <col:35, col:37> 'unsigned long' <IntegralCast>
|   | `-ImplicitCastExpr 0x55759c9e0ed8 <col:35, col:37> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x55759c9e0e68 <col:35, col:37> 'int' lvalue
|   |     `-DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
|   `-ParenExpr 0x55759c9e0eb8 <./lmem.h:21:39, col:41> 'unsigned long'
|     `-UnaryExprOrTypeTraitExpr 0x55759c9e0e98 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
`-CallExpr 0x55759c9e10c0 <line:22:3, col:16> 'void *'
  |-ImplicitCastExpr 0x55759c9e10a8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9e1000 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
  `-ImplicitCastExpr 0x55759c9e10f0 <luac.c:131:26> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e1028 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
([B11.51]) ? [B9.16] : [B10.5]
   2: CStyleCastExpr 0x55759c9e1280 <./llimits.h:75:23, col:30> 'Instruction *' <BitCast>
`-ParenExpr 0x55759c9e1260 <col:26, col:30> 'void *'
  `-ParenExpr 0x55759c9e1200 <./lmem.h:20:2, line:22:17> 'void *'
    `-ConditionalOperator 0x55759c9e11d0 <line:20:3, line:22:16> 'void *'
      |-ParenExpr 0x55759c9e0c60 <line:20:3, col:40> 'int'
      | `-BinaryOperator 0x55759c9e0c38 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
      |   |-ParenExpr 0x55759c9e0a20 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
      |   | `-CStyleCastExpr 0x55759c9e09f8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
      |   |   `-ParenExpr 0x55759c9e09d8 <col:26, col:30> 'int'
      |   |     `-BinaryOperator 0x55759c9e0970 <./lmem.h:20:17, col:21> 'int' '+'
      |   |       |-ImplicitCastExpr 0x55759c9e0958 <col:17, col:19> 'int' <LValueToRValue>
      |   |       | `-ParenExpr 0x55759c9e0918 <col:17, col:19> 'int' lvalue
      |   |       |   `-DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
      |   |       `-IntegerLiteral 0x55759c9e0938 <./lmem.h:20:21> 'int' 1
      |   `-BinaryOperator 0x55759c9e0c10 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
      |     |-ParenExpr 0x55759c9e0ba0 <./llimits.h:30:19, col:42> 'unsigned long'
      |     | `-BinaryOperator 0x55759c9e0b78 <col:20, col:41> 'unsigned long' '-'
      |     |   |-CStyleCastExpr 0x55759c9e0b18 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
      |     |   | `-ParenExpr 0x55759c9e0af8 <col:28, col:39> 'size_t':'unsigned long'
      |     |   |   `-UnaryOperator 0x55759c9e0a98 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
      |     |   |     `-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      |     |   |       `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
      |     |   `-ImplicitCastExpr 0x55759c9e0b60 <col:41> 'unsigned long' <IntegralCast>
      |     |     `-IntegerLiteral 0x55759c9e0b40 <col:41> 'int' 2
      |     `-ParenExpr 0x55759c9e0bf0 <./lmem.h:20:37, col:39> 'unsigned long'
      |       `-UnaryExprOrTypeTraitExpr 0x55759c9e0bd0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
      |-CallExpr 0x55759c9e0fa0 <line:21:3, col:42> 'void *'
      | |-ImplicitCastExpr 0x55759c9e0f88 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x55759c9e0c80 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
      | |-ImplicitCastExpr 0x55759c9e0fe8 <luac.c:131:26> 'lua_State *' <LValueToRValue>
      | | `-DeclRefExpr 0x55759c9e0ca8 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
      | |-ParenExpr 0x55759c9e0d50 <./lmem.h:21:20, col:22> 'void *'
      | | `-ParenExpr 0x55759c9e0d30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
      | |   `-CStyleCastExpr 0x55759c9e0d08 <col:17, col:24> 'void *' <NullToPointer>
      | |     `-IntegerLiteral 0x55759c9e0cd0 <col:24> 'int' 0
      | |-BinaryOperator 0x55759c9e0e18 <./lmem.h:21:25, col:32> 'unsigned long' '*'
      | | |-ImplicitCastExpr 0x55759c9e0e00 <col:25, col:28> 'unsigned long' <IntegralCast>
      | | | `-ParenExpr 0x55759c9e0d90 <col:25, col:28> 'int'
      | | |   `-IntegerLiteral 0x55759c9e0d70 <line:31:36> 'int' 0
      | | `-ParenExpr 0x55759c9e0de0 <line:21:30, col:32> 'unsigned long'
      | |   `-UnaryExprOrTypeTraitExpr 0x55759c9e0dc0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
      | `-BinaryOperator 0x55759c9e0f08 <line:21:35, col:41> 'unsigned long' '*'
      |   |-ImplicitCastExpr 0x55759c9e0ef0 <col:35, col:37> 'unsigned long' <IntegralCast>
      |   | `-ImplicitCastExpr 0x55759c9e0ed8 <col:35, col:37> 'int' <LValueToRValue>
      |   |   `-ParenExpr 0x55759c9e0e68 <col:35, col:37> 'int' lvalue
      |   |     `-DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
      |   `-ParenExpr 0x55759c9e0eb8 <./lmem.h:21:39, col:41> 'unsigned long'
      |     `-UnaryExprOrTypeTraitExpr 0x55759c9e0e98 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
      `-CallExpr 0x55759c9e10c0 <line:22:3, col:16> 'void *'
        |-ImplicitCastExpr 0x55759c9e10a8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55759c9e1000 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
        `-ImplicitCastExpr 0x55759c9e10f0 <luac.c:131:26> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55759c9e1028 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
(Instruction *)(([B8.1])) (CStyleCastExpr, BitCast, Instruction *)
   3: DeclRefExpr 0x55759c9e0878 <luac.c:131:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x55759c9e08a0 <luac.c:131:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e0878 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B8.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x55759c9e08b8 <luac.c:131:3, col:6> 'Instruction *' lvalue ->code 0x55759c98eb28
`-ImplicitCastExpr 0x55759c9e08a0 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e0878 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B8.4]->code
   6: BinaryOperator 0x55759c9e12c8 <luac.c:131:3, ./llimits.h:75:31> 'Instruction *' '='
|-MemberExpr 0x55759c9e08b8 <luac.c:131:3, col:6> 'Instruction *' lvalue ->code 0x55759c98eb28
| `-ImplicitCastExpr 0x55759c9e08a0 <col:3> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e0878 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-ParenExpr 0x55759c9e12a8 <./llimits.h:75:22, col:31> 'Instruction *'
  `-CStyleCastExpr 0x55759c9e1280 <col:23, col:30> 'Instruction *' <BitCast>
    `-ParenExpr 0x55759c9e1260 <col:26, col:30> 'void *'
      `-ParenExpr 0x55759c9e1200 <./lmem.h:20:2, line:22:17> 'void *'
        `-ConditionalOperator 0x55759c9e11d0 <line:20:3, line:22:16> 'void *'
          |-ParenExpr 0x55759c9e0c60 <line:20:3, col:40> 'int'
          | `-BinaryOperator 0x55759c9e0c38 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
          |   |-ParenExpr 0x55759c9e0a20 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
          |   | `-CStyleCastExpr 0x55759c9e09f8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
          |   |   `-ParenExpr 0x55759c9e09d8 <col:26, col:30> 'int'
          |   |     `-BinaryOperator 0x55759c9e0970 <./lmem.h:20:17, col:21> 'int' '+'
          |   |       |-ImplicitCastExpr 0x55759c9e0958 <col:17, col:19> 'int' <LValueToRValue>
          |   |       | `-ParenExpr 0x55759c9e0918 <col:17, col:19> 'int' lvalue
          |   |       |   `-DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
          |   |       `-IntegerLiteral 0x55759c9e0938 <./lmem.h:20:21> 'int' 1
          |   `-BinaryOperator 0x55759c9e0c10 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
          |     |-ParenExpr 0x55759c9e0ba0 <./llimits.h:30:19, col:42> 'unsigned long'
          |     | `-BinaryOperator 0x55759c9e0b78 <col:20, col:41> 'unsigned long' '-'
          |     |   |-CStyleCastExpr 0x55759c9e0b18 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
          |     |   | `-ParenExpr 0x55759c9e0af8 <col:28, col:39> 'size_t':'unsigned long'
          |     |   |   `-UnaryOperator 0x55759c9e0a98 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
          |     |   |     `-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
          |     |   |       `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
          |     |   `-ImplicitCastExpr 0x55759c9e0b60 <col:41> 'unsigned long' <IntegralCast>
          |     |     `-IntegerLiteral 0x55759c9e0b40 <col:41> 'int' 2
          |     `-ParenExpr 0x55759c9e0bf0 <./lmem.h:20:37, col:39> 'unsigned long'
          |       `-UnaryExprOrTypeTraitExpr 0x55759c9e0bd0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
          |-CallExpr 0x55759c9e0fa0 <line:21:3, col:42> 'void *'
          | |-ImplicitCastExpr 0x55759c9e0f88 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x55759c9e0c80 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
          | |-ImplicitCastExpr 0x55759c9e0fe8 <luac.c:131:26> 'lua_State *' <LValueToRValue>
          | | `-DeclRefExpr 0x55759c9e0ca8 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
          | |-ParenExpr 0x55759c9e0d50 <./lmem.h:21:20, col:22> 'void *'
          | | `-ParenExpr 0x55759c9e0d30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
          | |   `-CStyleCastExpr 0x55759c9e0d08 <col:17, col:24> 'void *' <NullToPointer>
          | |     `-IntegerLiteral 0x55759c9e0cd0 <col:24> 'int' 0
          | |-BinaryOperator 0x55759c9e0e18 <./lmem.h:21:25, col:32> 'unsigned long' '*'
          | | |-ImplicitCastExpr 0x55759c9e0e00 <col:25, col:28> 'unsigned long' <IntegralCast>
          | | | `-ParenExpr 0x55759c9e0d90 <col:25, col:28> 'int'
          | | |   `-IntegerLiteral 0x55759c9e0d70 <line:31:36> 'int' 0
          | | `-ParenExpr 0x55759c9e0de0 <line:21:30, col:32> 'unsigned long'
          | |   `-UnaryExprOrTypeTraitExpr 0x55759c9e0dc0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
          | `-BinaryOperator 0x55759c9e0f08 <line:21:35, col:41> 'unsigned long' '*'
          |   |-ImplicitCastExpr 0x55759c9e0ef0 <col:35, col:37> 'unsigned long' <IntegralCast>
          |   | `-ImplicitCastExpr 0x55759c9e0ed8 <col:35, col:37> 'int' <LValueToRValue>
          |   |   `-ParenExpr 0x55759c9e0e68 <col:35, col:37> 'int' lvalue
          |   |     `-DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
          |   `-ParenExpr 0x55759c9e0eb8 <./lmem.h:21:39, col:41> 'unsigned long'
          |     `-UnaryExprOrTypeTraitExpr 0x55759c9e0e98 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
          `-CallExpr 0x55759c9e10c0 <line:22:3, col:16> 'void *'
            |-ImplicitCastExpr 0x55759c9e10a8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x55759c9e1000 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
            `-ImplicitCastExpr 0x55759c9e10f0 <luac.c:131:26> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x55759c9e1028 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B8.5] = ([B8.2])
   7: DeclRefExpr 0x55759c9e1368 <luac.c:132:15> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
   8: ImplicitCastExpr 0x55759c9e1390 <luac.c:132:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e1368 <col:15> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B8.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x55759c9e12f0 <luac.c:132:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  10: ImplicitCastExpr 0x55759c9e1318 <luac.c:132:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e12f0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B8.9] (ImplicitCastExpr, LValueToRValue, Proto *)
  11: MemberExpr 0x55759c9e1330 <luac.c:132:3, col:6> 'int' lvalue ->sizecode 0x55759c98f148
`-ImplicitCastExpr 0x55759c9e1318 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e12f0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B8.10]->sizecode
  12: BinaryOperator 0x55759c9e13a8 <luac.c:132:3, col:15> 'int' '='
|-MemberExpr 0x55759c9e1330 <col:3, col:6> 'int' lvalue ->sizecode 0x55759c98f148
| `-ImplicitCastExpr 0x55759c9e1318 <col:3> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e12f0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-ImplicitCastExpr 0x55759c9e1390 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e1368 <col:15> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B8.11] = [B8.8]
  13: DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
n
  14: ImplicitCastExpr 0x55759c9e14b0 <./lmem.h:20:17, col:19> 'int' <LValueToRValue>
`-ParenExpr 0x55759c9e1470 <col:17, col:19> 'int' lvalue
  `-DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
([B8.13]) (ImplicitCastExpr, LValueToRValue, int)
  15: IntegerLiteral 0x55759c9e1490 <./lmem.h:20:21> 'int' 1
1
  16: BinaryOperator 0x55759c9e14c8 <./lmem.h:20:17, col:21> 'int' '+'
|-ImplicitCastExpr 0x55759c9e14b0 <col:17, col:19> 'int' <LValueToRValue>
| `-ParenExpr 0x55759c9e1470 <col:17, col:19> 'int' lvalue
|   `-DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
`-IntegerLiteral 0x55759c9e1490 <./lmem.h:20:21> 'int' 1
[B8.14] + [B8.15]
  17: CStyleCastExpr 0x55759c9e47b0 <./llimits.h:75:23, col:30> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x55759c9e4790 <col:26, col:30> 'int'
  `-BinaryOperator 0x55759c9e14c8 <./lmem.h:20:17, col:21> 'int' '+'
    |-ImplicitCastExpr 0x55759c9e14b0 <col:17, col:19> 'int' <LValueToRValue>
    | `-ParenExpr 0x55759c9e1470 <col:17, col:19> 'int' lvalue
    |   `-DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
    `-IntegerLiteral 0x55759c9e1490 <./lmem.h:20:21> 'int' 1
(size_t)([B8.16]) (CStyleCastExpr, IntegralCast, size_t)
  18: IntegerLiteral 0x55759c9e47f8 <./llimits.h:30:38> 'int' 0
0
  19: CStyleCastExpr 0x55759c9e4828 <./llimits.h:30:30, col:38> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
(size_t)[B8.18] (CStyleCastExpr, IntegralCast, size_t)
  20: UnaryOperator 0x55759c9e4850 <./llimits.h:30:29, col:38> 'size_t':'unsigned long' prefix '~'
`-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
~[B8.19]
  21: CStyleCastExpr 0x55759c9e48d0 <./llimits.h:30:20, col:39> 'size_t':'unsigned long' <NoOp>
`-ParenExpr 0x55759c9e48b0 <col:28, col:39> 'size_t':'unsigned long'
  `-UnaryOperator 0x55759c9e4850 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
    `-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
(size_t)([B8.20]) (CStyleCastExpr, NoOp, size_t)
  22: IntegerLiteral 0x55759c9e48f8 <./llimits.h:30:41> 'int' 2
2
  23: ImplicitCastExpr 0x55759c9e4918 <./llimits.h:30:41> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55759c9e48f8 <col:41> 'int' 2
[B8.22] (ImplicitCastExpr, IntegralCast, unsigned long)
  24: BinaryOperator 0x55759c9e4930 <./llimits.h:30:20, col:41> 'unsigned long' '-'
|-CStyleCastExpr 0x55759c9e48d0 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
| `-ParenExpr 0x55759c9e48b0 <col:28, col:39> 'size_t':'unsigned long'
|   `-UnaryOperator 0x55759c9e4850 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     `-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
`-ImplicitCastExpr 0x55759c9e4918 <col:41> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55759c9e48f8 <col:41> 'int' 2
[B8.21] - [B8.23]
  25: UnaryExprOrTypeTraitExpr 0x55759c9e4988 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Proto *'
sizeof(Proto *)
  26: BinaryOperator 0x55759c9e49c8 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|-ParenExpr 0x55759c9e4958 <./llimits.h:30:19, col:42> 'unsigned long'
| `-BinaryOperator 0x55759c9e4930 <col:20, col:41> 'unsigned long' '-'
|   |-CStyleCastExpr 0x55759c9e48d0 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   | `-ParenExpr 0x55759c9e48b0 <col:28, col:39> 'size_t':'unsigned long'
|   |   `-UnaryOperator 0x55759c9e4850 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |     `-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
|   `-ImplicitCastExpr 0x55759c9e4918 <col:41> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x55759c9e48f8 <col:41> 'int' 2
`-ParenExpr 0x55759c9e49a8 <./lmem.h:20:37, col:39> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55759c9e4988 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
([B8.24]) / ([B8.25])
  27: BinaryOperator 0x55759c9e49f0 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|-ParenExpr 0x55759c9e47d8 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
| `-CStyleCastExpr 0x55759c9e47b0 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   `-ParenExpr 0x55759c9e4790 <col:26, col:30> 'int'
|     `-BinaryOperator 0x55759c9e14c8 <./lmem.h:20:17, col:21> 'int' '+'
|       |-ImplicitCastExpr 0x55759c9e14b0 <col:17, col:19> 'int' <LValueToRValue>
|       | `-ParenExpr 0x55759c9e1470 <col:17, col:19> 'int' lvalue
|       |   `-DeclRefExpr 0x55759c9e1448 <luac.c:133:25> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
|       `-IntegerLiteral 0x55759c9e1490 <./lmem.h:20:21> 'int' 1
`-BinaryOperator 0x55759c9e49c8 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
  |-ParenExpr 0x55759c9e4958 <./llimits.h:30:19, col:42> 'unsigned long'
  | `-BinaryOperator 0x55759c9e4930 <col:20, col:41> 'unsigned long' '-'
  |   |-CStyleCastExpr 0x55759c9e48d0 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
  |   | `-ParenExpr 0x55759c9e48b0 <col:28, col:39> 'size_t':'unsigned long'
  |   |   `-UnaryOperator 0x55759c9e4850 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
  |   |     `-CStyleCastExpr 0x55759c9e4828 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  |   |       `-IntegerLiteral 0x55759c9e47f8 <col:38> 'int' 0
  |   `-ImplicitCastExpr 0x55759c9e4918 <col:41> 'unsigned long' <IntegralCast>
  |     `-IntegerLiteral 0x55759c9e48f8 <col:41> 'int' 2
  `-ParenExpr 0x55759c9e49a8 <./lmem.h:20:37, col:39> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x55759c9e4988 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
([B8.17]) <= [B8.26]
   T: ([B8.27]) ? ... : ...
   Preds (2): B9 B10
   Succs (2): B6 B7

 [B9]
   1: DeclRefExpr 0x55759c9e0c80 <./lmem.h:21:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
luaM_realloc_
   2: ImplicitCastExpr 0x55759c9e0f88 <./lmem.h:21:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e0c80 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, size_t, size_t))
   3: DeclRefExpr 0x55759c9e0ca8 <luac.c:131:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9e0fe8 <luac.c:131:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e0ca8 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55759c9e0cd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x55759c9e0d08 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9e0cd0 <col:24> 'int' 0
(void *)[B9.5] (CStyleCastExpr, NullToPointer, void *)
   7: IntegerLiteral 0x55759c9e0d70 <./lmem.h:31:36> 'int' 0
0
   8: ImplicitCastExpr 0x55759c9e0e00 <./lmem.h:21:25, col:28> 'unsigned long' <IntegralCast>
`-ParenExpr 0x55759c9e0d90 <col:25, col:28> 'int'
  `-IntegerLiteral 0x55759c9e0d70 <line:31:36> 'int' 0
([B9.7]) (ImplicitCastExpr, IntegralCast, unsigned long)
   9: UnaryExprOrTypeTraitExpr 0x55759c9e0dc0 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
sizeof(Instruction)
  10: BinaryOperator 0x55759c9e0e18 <./lmem.h:21:25, col:32> 'unsigned long' '*'
|-ImplicitCastExpr 0x55759c9e0e00 <col:25, col:28> 'unsigned long' <IntegralCast>
| `-ParenExpr 0x55759c9e0d90 <col:25, col:28> 'int'
|   `-IntegerLiteral 0x55759c9e0d70 <line:31:36> 'int' 0
`-ParenExpr 0x55759c9e0de0 <line:21:30, col:32> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55759c9e0dc0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
[B9.8] * ([B9.9])
  11: DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
  12: ImplicitCastExpr 0x55759c9e0ed8 <./lmem.h:21:35, col:37> 'int' <LValueToRValue>
`-ParenExpr 0x55759c9e0e68 <col:35, col:37> 'int' lvalue
  `-DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
([B9.11]) (ImplicitCastExpr, LValueToRValue, int)
  13: ImplicitCastExpr 0x55759c9e0ef0 <./lmem.h:21:35, col:37> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55759c9e0ed8 <col:35, col:37> 'int' <LValueToRValue>
  `-ParenExpr 0x55759c9e0e68 <col:35, col:37> 'int' lvalue
    `-DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
[B9.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: UnaryExprOrTypeTraitExpr 0x55759c9e0e98 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
sizeof(Instruction)
  15: BinaryOperator 0x55759c9e0f08 <./lmem.h:21:35, col:41> 'unsigned long' '*'
|-ImplicitCastExpr 0x55759c9e0ef0 <col:35, col:37> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55759c9e0ed8 <col:35, col:37> 'int' <LValueToRValue>
|   `-ParenExpr 0x55759c9e0e68 <col:35, col:37> 'int' lvalue
|     `-DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
`-ParenExpr 0x55759c9e0eb8 <./lmem.h:21:39, col:41> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55759c9e0e98 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
[B9.13] * ([B9.14])
  16: CallExpr 0x55759c9e0fa0 <./lmem.h:21:3, col:42> 'void *'
|-ImplicitCastExpr 0x55759c9e0f88 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e0c80 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55759c999bc8 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
|-ImplicitCastExpr 0x55759c9e0fe8 <luac.c:131:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e0ca8 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
|-ParenExpr 0x55759c9e0d50 <./lmem.h:21:20, col:22> 'void *'
| `-ParenExpr 0x55759c9e0d30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
|   `-CStyleCastExpr 0x55759c9e0d08 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55759c9e0cd0 <col:24> 'int' 0
|-BinaryOperator 0x55759c9e0e18 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| |-ImplicitCastExpr 0x55759c9e0e00 <col:25, col:28> 'unsigned long' <IntegralCast>
| | `-ParenExpr 0x55759c9e0d90 <col:25, col:28> 'int'
| |   `-IntegerLiteral 0x55759c9e0d70 <line:31:36> 'int' 0
| `-ParenExpr 0x55759c9e0de0 <line:21:30, col:32> 'unsigned long'
|   `-UnaryExprOrTypeTraitExpr 0x55759c9e0dc0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
`-BinaryOperator 0x55759c9e0f08 <line:21:35, col:41> 'unsigned long' '*'
  |-ImplicitCastExpr 0x55759c9e0ef0 <col:35, col:37> 'unsigned long' <IntegralCast>
  | `-ImplicitCastExpr 0x55759c9e0ed8 <col:35, col:37> 'int' <LValueToRValue>
  |   `-ParenExpr 0x55759c9e0e68 <col:35, col:37> 'int' lvalue
  |     `-DeclRefExpr 0x55759c9e0e40 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
  `-ParenExpr 0x55759c9e0eb8 <./lmem.h:21:39, col:41> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x55759c9e0e98 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
[B9.2]([B9.4], (([B9.6])), [B9.10], [B9.15])
   Preds (1): B11
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x55759c9e1000 <./lmem.h:22:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
luaM_toobig
   2: ImplicitCastExpr 0x55759c9e10a8 <./lmem.h:22:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e1000 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *))
   3: DeclRefExpr 0x55759c9e1028 <luac.c:131:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9e10f0 <luac.c:131:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e1028 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x55759c9e10c0 <./lmem.h:22:3, col:16> 'void *'
|-ImplicitCastExpr 0x55759c9e10a8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e1000 <col:3> 'void *(lua_State *)' Function 0x55759c999e18 'luaM_toobig' 'void *(lua_State *)'
`-ImplicitCastExpr 0x55759c9e10f0 <luac.c:131:26> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e1028 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B10.2]([B10.4])
   Preds (1): B11
   Succs (1): B8

 [B11]
   1: DeclRefExpr 0x55759c9e0210 <luac.c:127:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55759c9e0238 <luac.c:127:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e0210 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B11.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55759c9e0250 <luac.c:127:38, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
`-ImplicitCastExpr 0x55759c9e0238 <luac.c:127:38> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e0210 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B11.2]->top
   4: UnaryOperator 0x55759c9e0288 <luac.c:127:38, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x55759c9e0250 <luac.c:127:38, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
  `-ImplicitCastExpr 0x55759c9e0238 <luac.c:127:38> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e0210 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B11.3]++
   5: DeclRefExpr 0x55759c9e0358 <./lstring.h:21:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55759c86db30 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
luaS_newlstr
   6: ImplicitCastExpr 0x55759c9e0598 <./lstring.h:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e0358 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55759c86db30 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
[B11.5] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t))
   7: DeclRefExpr 0x55759c9e0380 <luac.c:128:29> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x55759c9e05f0 <luac.c:128:29> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e0380 <col:29> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B11.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: StringLiteral 0x55759c9e03a8 <./lstring.h:21:48, luac.c:128:45> 'char [8]' lvalue "=(luac)"
"=(luac)"
  10: ImplicitCastExpr 0x55759c9e0608 <./lstring.h:21:48, luac.c:128:45> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9e03a8 <./lstring.h:21:48, luac.c:128:45> 'char [8]' lvalue "=(luac)"
[B11.9] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  11: ImplicitCastExpr 0x55759c9e0620 <./lstring.h:21:48, luac.c:128:45> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e0608 <./lstring.h:21:48, luac.c:128:45> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9e03a8 <./lstring.h:21:48, luac.c:128:45> 'char [8]' lvalue "=(luac)"
[B11.10] (ImplicitCastExpr, BitCast, const char *)
  12: UnaryExprOrTypeTraitExpr 0x55759c9e0440 <./lstring.h:22:35, col:43> 'unsigned long' sizeof
`-ParenExpr 0x55759c9e0420 <col:41, col:43> 'char [8]' lvalue
  `-StringLiteral 0x55759c9e03e8 <luac.c:128:31, col:45> 'char [8]' lvalue "=(luac)"
sizeof ("=(luac)")
  13: UnaryExprOrTypeTraitExpr 0x55759c9e0470 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
sizeof(char)
  14: BinaryOperator 0x55759c9e0490 <./lstring.h:22:35, col:56> 'unsigned long' '/'
|-UnaryExprOrTypeTraitExpr 0x55759c9e0440 <col:35, col:43> 'unsigned long' sizeof
| `-ParenExpr 0x55759c9e0420 <col:41, col:43> 'char [8]' lvalue
|   `-StringLiteral 0x55759c9e03e8 <luac.c:128:31, col:45> 'char [8]' lvalue "=(luac)"
`-UnaryExprOrTypeTraitExpr 0x55759c9e0470 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
[B11.12] / [B11.13]
  15: IntegerLiteral 0x55759c9e04d8 <./lstring.h:22:59> 'int' 1
1
  16: ImplicitCastExpr 0x55759c9e04f8 <./lstring.h:22:59> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55759c9e04d8 <col:59> 'int' 1
[B11.15] (ImplicitCastExpr, IntegralCast, unsigned long)
  17: BinaryOperator 0x55759c9e0510 <./lstring.h:22:34, col:59> 'unsigned long' '-'
|-ParenExpr 0x55759c9e04b8 <col:34, col:57> 'unsigned long'
| `-BinaryOperator 0x55759c9e0490 <col:35, col:56> 'unsigned long' '/'
|   |-UnaryExprOrTypeTraitExpr 0x55759c9e0440 <col:35, col:43> 'unsigned long' sizeof
|   | `-ParenExpr 0x55759c9e0420 <col:41, col:43> 'char [8]' lvalue
|   |   `-StringLiteral 0x55759c9e03e8 <luac.c:128:31, col:45> 'char [8]' lvalue "=(luac)"
|   `-UnaryExprOrTypeTraitExpr 0x55759c9e0470 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
`-ImplicitCastExpr 0x55759c9e04f8 <col:59> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55759c9e04d8 <col:59> 'int' 1
([B11.14]) - [B11.16]
  18: CallExpr 0x55759c9e05b0 <./lstring.h:21:32, line:22:60> 'TString *'
|-ImplicitCastExpr 0x55759c9e0598 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e0358 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55759c86db30 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x55759c9e05f0 <luac.c:128:29> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e0380 <col:29> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
|-ImplicitCastExpr 0x55759c9e0620 <./lstring.h:21:48, luac.c:128:45> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55759c9e0608 <./lstring.h:21:48, luac.c:128:45> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55759c9e03a8 <./lstring.h:21:48, luac.c:128:45> 'char [8]' lvalue "=(luac)"
`-BinaryOperator 0x55759c9e0510 <./lstring.h:22:34, col:59> 'unsigned long' '-'
  |-ParenExpr 0x55759c9e04b8 <col:34, col:57> 'unsigned long'
  | `-BinaryOperator 0x55759c9e0490 <col:35, col:56> 'unsigned long' '/'
  |   |-UnaryExprOrTypeTraitExpr 0x55759c9e0440 <col:35, col:43> 'unsigned long' sizeof
  |   | `-ParenExpr 0x55759c9e0420 <col:41, col:43> 'char [8]' lvalue
  |   |   `-StringLiteral 0x55759c9e03e8 <luac.c:128:31, col:45> 'char [8]' lvalue "=(luac)"
  |   `-UnaryExprOrTypeTraitExpr 0x55759c9e0470 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
  `-ImplicitCastExpr 0x55759c9e04f8 <col:59> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55759c9e04d8 <col:59> 'int' 1
[B11.6]([B11.8], [B11.11], [B11.17])
  19: DeclRefExpr 0x55759c9e02e0 <luac.c:128:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  20: ImplicitCastExpr 0x55759c9e0308 <luac.c:128:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e02e0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B11.19] (ImplicitCastExpr, LValueToRValue, Proto *)
  21: MemberExpr 0x55759c9e0320 <luac.c:128:3, col:6> 'TString *' lvalue ->source 0x55759c98f028
`-ImplicitCastExpr 0x55759c9e0308 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e02e0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B11.20]->source
  22: BinaryOperator 0x55759c9e0658 <luac.c:128:3, ./lstring.h:22:61> 'TString *' '='
|-MemberExpr 0x55759c9e0320 <luac.c:128:3, col:6> 'TString *' lvalue ->source 0x55759c98f028
| `-ImplicitCastExpr 0x55759c9e0308 <col:3> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e02e0 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-ParenExpr 0x55759c9e0638 <./lstring.h:21:31, line:22:61> 'TString *'
  `-CallExpr 0x55759c9e05b0 <line:21:32, line:22:60> 'TString *'
    |-ImplicitCastExpr 0x55759c9e0598 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55759c9e0358 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55759c86db30 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
    |-ImplicitCastExpr 0x55759c9e05f0 <luac.c:128:29> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55759c9e0380 <col:29> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
    |-ImplicitCastExpr 0x55759c9e0620 <./lstring.h:21:48, luac.c:128:45> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55759c9e0608 <./lstring.h:21:48, luac.c:128:45> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55759c9e03a8 <./lstring.h:21:48, luac.c:128:45> 'char [8]' lvalue "=(luac)"
    `-BinaryOperator 0x55759c9e0510 <./lstring.h:22:34, col:59> 'unsigned long' '-'
      |-ParenExpr 0x55759c9e04b8 <col:34, col:57> 'unsigned long'
      | `-BinaryOperator 0x55759c9e0490 <col:35, col:56> 'unsigned long' '/'
      |   |-UnaryExprOrTypeTraitExpr 0x55759c9e0440 <col:35, col:43> 'unsigned long' sizeof
      |   | `-ParenExpr 0x55759c9e0420 <col:41, col:43> 'char [8]' lvalue
      |   |   `-StringLiteral 0x55759c9e03e8 <luac.c:128:31, col:45> 'char [8]' lvalue "=(luac)"
      |   `-UnaryExprOrTypeTraitExpr 0x55759c9e0470 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
      `-ImplicitCastExpr 0x55759c9e04f8 <col:59> 'unsigned long' <IntegralCast>
        `-IntegerLiteral 0x55759c9e04d8 <col:59> 'int' 1
[B11.21] = ([B11.18])
  23: IntegerLiteral 0x55759c9e06f8 <luac.c:129:19> 'int' 1
1
  24: ImplicitCastExpr 0x55759c9e0718 <luac.c:129:19> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x55759c9e06f8 <col:19> 'int' 1
[B11.23] (ImplicitCastExpr, IntegralCast, lu_byte)
  25: DeclRefExpr 0x55759c9e0680 <luac.c:129:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  26: ImplicitCastExpr 0x55759c9e06a8 <luac.c:129:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e0680 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B11.25] (ImplicitCastExpr, LValueToRValue, Proto *)
  27: MemberExpr 0x55759c9e06c0 <luac.c:129:3, col:6> 'lu_byte':'unsigned char' lvalue ->maxstacksize 0x55759c98f4e0
`-ImplicitCastExpr 0x55759c9e06a8 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e0680 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B11.26]->maxstacksize
  28: BinaryOperator 0x55759c9e0730 <luac.c:129:3, col:19> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55759c9e06c0 <col:3, col:6> 'lu_byte':'unsigned char' lvalue ->maxstacksize 0x55759c98f4e0
| `-ImplicitCastExpr 0x55759c9e06a8 <col:3> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e0680 <col:3> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
`-ImplicitCastExpr 0x55759c9e0718 <col:19> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x55759c9e06f8 <col:19> 'int' 1
[B11.27] = [B11.24]
  29: IntegerLiteral 0x55759c9e0780 <luac.c:130:6> 'int' 2
2
  30: DeclRefExpr 0x55759c9e07a0 <luac.c:130:8> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
n
  31: ImplicitCastExpr 0x55759c9e07c8 <luac.c:130:8> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e07a0 <col:8> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B11.30] (ImplicitCastExpr, LValueToRValue, int)
  32: BinaryOperator 0x55759c9e07e0 <luac.c:130:6, col:8> 'int' '*'
|-IntegerLiteral 0x55759c9e0780 <col:6> 'int' 2
`-ImplicitCastExpr 0x55759c9e07c8 <col:8> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e07a0 <col:8> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B11.29] * [B11.31]
  33: IntegerLiteral 0x55759c9e0808 <luac.c:130:10> 'int' 1
1
  34: BinaryOperator 0x55759c9e0828 <luac.c:130:6, col:10> 'int' '+'
|-BinaryOperator 0x55759c9e07e0 <col:6, col:8> 'int' '*'
| |-IntegerLiteral 0x55759c9e0780 <col:6> 'int' 2
| `-ImplicitCastExpr 0x55759c9e07c8 <col:8> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e07a0 <col:8> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
`-IntegerLiteral 0x55759c9e0808 <col:10> 'int' 1
[B11.32] + [B11.33]
  35: DeclRefExpr 0x55759c9e0758 <luac.c:130:3> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
  36: BinaryOperator 0x55759c9e0850 <luac.c:130:3, col:10> 'int' '='
|-DeclRefExpr 0x55759c9e0758 <col:3> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
`-BinaryOperator 0x55759c9e0828 <col:6, col:10> 'int' '+'
  |-BinaryOperator 0x55759c9e07e0 <col:6, col:8> 'int' '*'
  | |-IntegerLiteral 0x55759c9e0780 <col:6> 'int' 2
  | `-ImplicitCastExpr 0x55759c9e07c8 <col:8> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x55759c9e07a0 <col:8> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
  `-IntegerLiteral 0x55759c9e0808 <col:10> 'int' 1
[B11.35] = [B11.34]
  37: DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
pc
  38: ImplicitCastExpr 0x55759c9e0958 <./lmem.h:20:17, col:19> 'int' <LValueToRValue>
`-ParenExpr 0x55759c9e0918 <col:17, col:19> 'int' lvalue
  `-DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
([B11.37]) (ImplicitCastExpr, LValueToRValue, int)
  39: IntegerLiteral 0x55759c9e0938 <./lmem.h:20:21> 'int' 1
1
  40: BinaryOperator 0x55759c9e0970 <./lmem.h:20:17, col:21> 'int' '+'
|-ImplicitCastExpr 0x55759c9e0958 <col:17, col:19> 'int' <LValueToRValue>
| `-ParenExpr 0x55759c9e0918 <col:17, col:19> 'int' lvalue
|   `-DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
`-IntegerLiteral 0x55759c9e0938 <./lmem.h:20:21> 'int' 1
[B11.38] + [B11.39]
  41: CStyleCastExpr 0x55759c9e09f8 <./llimits.h:75:23, col:30> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x55759c9e09d8 <col:26, col:30> 'int'
  `-BinaryOperator 0x55759c9e0970 <./lmem.h:20:17, col:21> 'int' '+'
    |-ImplicitCastExpr 0x55759c9e0958 <col:17, col:19> 'int' <LValueToRValue>
    | `-ParenExpr 0x55759c9e0918 <col:17, col:19> 'int' lvalue
    |   `-DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
    `-IntegerLiteral 0x55759c9e0938 <./lmem.h:20:21> 'int' 1
(size_t)([B11.40]) (CStyleCastExpr, IntegralCast, size_t)
  42: IntegerLiteral 0x55759c9e0a40 <./llimits.h:30:38> 'int' 0
0
  43: CStyleCastExpr 0x55759c9e0a70 <./llimits.h:30:30, col:38> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
(size_t)[B11.42] (CStyleCastExpr, IntegralCast, size_t)
  44: UnaryOperator 0x55759c9e0a98 <./llimits.h:30:29, col:38> 'size_t':'unsigned long' prefix '~'
`-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
~[B11.43]
  45: CStyleCastExpr 0x55759c9e0b18 <./llimits.h:30:20, col:39> 'size_t':'unsigned long' <NoOp>
`-ParenExpr 0x55759c9e0af8 <col:28, col:39> 'size_t':'unsigned long'
  `-UnaryOperator 0x55759c9e0a98 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
    `-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
(size_t)([B11.44]) (CStyleCastExpr, NoOp, size_t)
  46: IntegerLiteral 0x55759c9e0b40 <./llimits.h:30:41> 'int' 2
2
  47: ImplicitCastExpr 0x55759c9e0b60 <./llimits.h:30:41> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55759c9e0b40 <col:41> 'int' 2
[B11.46] (ImplicitCastExpr, IntegralCast, unsigned long)
  48: BinaryOperator 0x55759c9e0b78 <./llimits.h:30:20, col:41> 'unsigned long' '-'
|-CStyleCastExpr 0x55759c9e0b18 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
| `-ParenExpr 0x55759c9e0af8 <col:28, col:39> 'size_t':'unsigned long'
|   `-UnaryOperator 0x55759c9e0a98 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     `-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
`-ImplicitCastExpr 0x55759c9e0b60 <col:41> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55759c9e0b40 <col:41> 'int' 2
[B11.45] - [B11.47]
  49: UnaryExprOrTypeTraitExpr 0x55759c9e0bd0 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
sizeof(Instruction)
  50: BinaryOperator 0x55759c9e0c10 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|-ParenExpr 0x55759c9e0ba0 <./llimits.h:30:19, col:42> 'unsigned long'
| `-BinaryOperator 0x55759c9e0b78 <col:20, col:41> 'unsigned long' '-'
|   |-CStyleCastExpr 0x55759c9e0b18 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   | `-ParenExpr 0x55759c9e0af8 <col:28, col:39> 'size_t':'unsigned long'
|   |   `-UnaryOperator 0x55759c9e0a98 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |     `-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
|   `-ImplicitCastExpr 0x55759c9e0b60 <col:41> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x55759c9e0b40 <col:41> 'int' 2
`-ParenExpr 0x55759c9e0bf0 <./lmem.h:20:37, col:39> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55759c9e0bd0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
([B11.48]) / ([B11.49])
  51: BinaryOperator 0x55759c9e0c38 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|-ParenExpr 0x55759c9e0a20 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
| `-CStyleCastExpr 0x55759c9e09f8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   `-ParenExpr 0x55759c9e09d8 <col:26, col:30> 'int'
|     `-BinaryOperator 0x55759c9e0970 <./lmem.h:20:17, col:21> 'int' '+'
|       |-ImplicitCastExpr 0x55759c9e0958 <col:17, col:19> 'int' <LValueToRValue>
|       | `-ParenExpr 0x55759c9e0918 <col:17, col:19> 'int' lvalue
|       |   `-DeclRefExpr 0x55759c9e08f0 <luac.c:131:28> 'int' lvalue Var 0x55759c9df618 'pc' 'int'
|       `-IntegerLiteral 0x55759c9e0938 <./lmem.h:20:21> 'int' 1
`-BinaryOperator 0x55759c9e0c10 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
  |-ParenExpr 0x55759c9e0ba0 <./llimits.h:30:19, col:42> 'unsigned long'
  | `-BinaryOperator 0x55759c9e0b78 <col:20, col:41> 'unsigned long' '-'
  |   |-CStyleCastExpr 0x55759c9e0b18 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
  |   | `-ParenExpr 0x55759c9e0af8 <col:28, col:39> 'size_t':'unsigned long'
  |   |   `-UnaryOperator 0x55759c9e0a98 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
  |   |     `-CStyleCastExpr 0x55759c9e0a70 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  |   |       `-IntegerLiteral 0x55759c9e0a40 <col:38> 'int' 0
  |   `-ImplicitCastExpr 0x55759c9e0b60 <col:41> 'unsigned long' <IntegralCast>
  |     `-IntegerLiteral 0x55759c9e0b40 <col:41> 'int' 2
  `-ParenExpr 0x55759c9e0bf0 <./lmem.h:20:37, col:39> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x55759c9e0bd0 <line:31:42, col:50> 'unsigned long' sizeof 'Instruction':'unsigned int'
([B11.41]) <= [B11.50]
   T: ([B11.51]) ? ... : ...
   Preds (2): B12 B13
   Succs (2): B9 B10

 [B12]
   1: IntegerLiteral 0x55759c9e0150 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x55759c9e0180 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x55759c9e0150 <col:38> 'int' 0
(void)[B12.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B14
   Succs (1): B11

 [B13]
   1: DeclRefExpr 0x55759c9e0018 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x55759c9ada90 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x55759c9e00e8 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e0018 <col:5> 'void (lua_State *, int)' Function 0x55759c9ada90 'luaD_growstack' 'void (lua_State *, int)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55759c9e0040 <luac.c:127:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9e0138 <luac.c:127:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e0040 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B13.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55759c9e0068 <./ldo.h:22:40> 'int' 1
1
   6: CallExpr 0x55759c9e0100 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x55759c9e00e8 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e0018 <col:5> 'void (lua_State *, int)' Function 0x55759c9ada90 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x55759c9e0138 <luac.c:127:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e0040 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
`-IntegerLiteral 0x55759c9e0068 <./ldo.h:22:40> 'int' 1
[B13.2]([B13.4], [B13.5])
   Preds (1): B14
   Succs (1): B11

 [B14]
   1: DeclStmt 0x55759c9f0638 <luac.c:125:7>col:7
`-VarDecl 0x55759c9df5a0 <col:3, col:7> col:7 used i 'int'
int i;
   2: DeclStmt 0x55759c9f0620 <luac.c:125:9>col:9
`-VarDecl 0x55759c9df618 <col:3, col:9> col:9 used pc 'int'
int pc;
   3: DeclRefExpr 0x55759c9df718 <luac.c:126:12> 'Proto *(lua_State *)' Function 0x55759c9ae610 'luaF_newproto' 'Proto *(lua_State *)'
luaF_newproto
   4: ImplicitCastExpr 0x55759c9df7c8 <luac.c:126:12> 'Proto *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9df718 <col:12> 'Proto *(lua_State *)' Function 0x55759c9ae610 'luaF_newproto' 'Proto *(lua_State *)'
[B14.3] (ImplicitCastExpr, FunctionToPointerDecay, Proto *(*)(lua_State *))
   5: DeclRefExpr 0x55759c9df740 <luac.c:126:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55759c9df810 <luac.c:126:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9df740 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: CallExpr 0x55759c9df7e0 <luac.c:126:12, col:27> 'Proto *'
|-ImplicitCastExpr 0x55759c9df7c8 <col:12> 'Proto *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9df718 <col:12> 'Proto *(lua_State *)' Function 0x55759c9ae610 'luaF_newproto' 'Proto *(lua_State *)'
`-ImplicitCastExpr 0x55759c9df810 <col:26> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9df740 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.4]([B14.6])
   8: DeclStmt 0x55759c9df828 <luac.c:126:3, col:28>col:10
`-VarDecl 0x55759c9df6b8 <col:3, col:27> col:10 used f 'Proto *' cinit
  `-CallExpr 0x55759c9df7e0 <col:12, col:27> 'Proto *'
    |-ImplicitCastExpr 0x55759c9df7c8 <col:12> 'Proto *(*)(lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55759c9df718 <col:12> 'Proto *(lua_State *)' Function 0x55759c9ae610 'luaF_newproto' 'Proto *(lua_State *)'
    `-ImplicitCastExpr 0x55759c9df810 <col:26> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55759c9df740 <col:26> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
Proto *f = luaF_newproto(L);
   9: DeclRefExpr 0x55759c9df8b0 <luac.c:127:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x55759c9df8d8 <luac.c:127:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9df8b0 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: MemberExpr 0x55759c9df8f0 <luac.c:127:18, col:21> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
`-ImplicitCastExpr 0x55759c9df8d8 <col:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9df8b0 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.10]->top
  12: ImplicitCastExpr 0x55759c9df948 <./lobject.h:154:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55759c9df928 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x55759c9df8f0 <luac.c:127:18, col:21> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
    `-ImplicitCastExpr 0x55759c9df8d8 <col:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55759c9df8b0 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
([B14.11]) (ImplicitCastExpr, LValueToRValue, StkId)
  13: DeclStmt 0x55759c9df960 <./lobject.h:154:5, col:22>col:13
`-VarDecl 0x55759c9df850 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x55759c9df948 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x55759c9df928 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x55759c9df8f0 <luac.c:127:18, col:21> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
        `-ImplicitCastExpr 0x55759c9df8d8 <col:18> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55759c9df8b0 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
TValue *i_o = (L->top);
  14: DeclRefExpr 0x55759c9dfa28 <luac.c:127:25> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
f
  15: ImplicitCastExpr 0x55759c9dfad0 <./llimits.h:75:26, col:30> 'Proto *' <LValueToRValue>
`-ParenExpr 0x55759c9dfab0 <col:26, col:30> 'Proto *' lvalue
  `-ParenExpr 0x55759c9dfa50 <./lobject.h:155:36, col:38> 'Proto *' lvalue
    `-DeclRefExpr 0x55759c9dfa28 <luac.c:127:25> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
(([B14.14])) (ImplicitCastExpr, LValueToRValue, Proto *)
  16: CStyleCastExpr 0x55759c9dfae8 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55759c9dfad0 <col:26, col:30> 'Proto *' <LValueToRValue>
  `-ParenExpr 0x55759c9dfab0 <col:26, col:30> 'Proto *' lvalue
    `-ParenExpr 0x55759c9dfa50 <./lobject.h:155:36, col:38> 'Proto *' lvalue
      `-DeclRefExpr 0x55759c9dfa28 <luac.c:127:25> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
(GCObject *)[B14.15] (CStyleCastExpr, BitCast, GCObject *)
  17: DeclRefExpr 0x55759c9df978 <./lobject.h:155:5> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
i_o
  18: ImplicitCastExpr 0x55759c9df9a0 <./lobject.h:155:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55759c9df978 <col:5> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
[B14.17] (ImplicitCastExpr, LValueToRValue, TValue *)
  19: MemberExpr 0x55759c9df9b8 <./lobject.h:155:5, col:10> 'Value':'Value' lvalue ->value 0x55759c97a990
`-ImplicitCastExpr 0x55759c9df9a0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9df978 <col:5> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
[B14.18]->value
  20: MemberExpr 0x55759c9df9f0 <./lobject.h:155:5, col:16> 'GCObject *' lvalue .gc 0x55759c97a690
`-MemberExpr 0x55759c9df9b8 <col:5, col:10> 'Value':'Value' lvalue ->value 0x55759c97a990
  `-ImplicitCastExpr 0x55759c9df9a0 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9df978 <col:5> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
[B14.19].gc
  21: BinaryOperator 0x55759c9dfb30 <./lobject.h:155:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x55759c9df9f0 <./lobject.h:155:5, col:16> 'GCObject *' lvalue .gc 0x55759c97a690
| `-MemberExpr 0x55759c9df9b8 <col:5, col:10> 'Value':'Value' lvalue ->value 0x55759c97a990
|   `-ImplicitCastExpr 0x55759c9df9a0 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x55759c9df978 <col:5> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
`-ParenExpr 0x55759c9dfb10 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x55759c9dfae8 <col:23, col:30> 'GCObject *' <BitCast>
    `-ImplicitCastExpr 0x55759c9dfad0 <col:26, col:30> 'Proto *' <LValueToRValue>
      `-ParenExpr 0x55759c9dfab0 <col:26, col:30> 'Proto *' lvalue
        `-ParenExpr 0x55759c9dfa50 <./lobject.h:155:36, col:38> 'Proto *' lvalue
          `-DeclRefExpr 0x55759c9dfa28 <luac.c:127:25> 'Proto *' lvalue Var 0x55759c9df6b8 'f' 'Proto *'
[B14.20] = ([B14.16])
  22: IntegerLiteral 0x55759c9dfbd0 <./lua.h:82:22> 'int' 8
8
  23: IntegerLiteral 0x55759c9dfbf0 <./lobject.h:28:30> 'int' 1
1
  24: BinaryOperator 0x55759c9dfc10 <./lua.h:82:22, ./lobject.h:28:30> 'int' '+'
|-IntegerLiteral 0x55759c9dfbd0 <./lua.h:82:22> 'int' 8
`-IntegerLiteral 0x55759c9dfbf0 <./lobject.h:28:30> 'int' 1
[B14.22] + [B14.23]
  25: DeclRefExpr 0x55759c9dfb58 <./lobject.h:155:42> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
i_o
  26: ImplicitCastExpr 0x55759c9dfb80 <./lobject.h:155:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55759c9dfb58 <col:42> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
[B14.25] (ImplicitCastExpr, LValueToRValue, TValue *)
  27: MemberExpr 0x55759c9dfb98 <./lobject.h:155:42, col:47> 'int' lvalue ->tt 0x55759c97a9f0
`-ImplicitCastExpr 0x55759c9dfb80 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9dfb58 <col:42> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
[B14.26]->tt
  28: BinaryOperator 0x55759c9dfc58 <./lobject.h:155:42, line:28:31> 'int' '='
|-MemberExpr 0x55759c9dfb98 <line:155:42, col:47> 'int' lvalue ->tt 0x55759c97a9f0
| `-ImplicitCastExpr 0x55759c9dfb80 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9dfb58 <col:42> 'TValue *' lvalue Var 0x55759c9df850 'i_o' 'TValue *'
`-ParenExpr 0x55759c9dfc38 <line:28:20, col:31> 'int'
  `-BinaryOperator 0x55759c9dfc10 <./lua.h:82:22, ./lobject.h:28:30> 'int' '+'
    |-IntegerLiteral 0x55759c9dfbd0 <./lua.h:82:22> 'int' 8
    `-IntegerLiteral 0x55759c9dfbf0 <./lobject.h:28:30> 'int' 1
[B14.27] = ([B14.24])
  29: IntegerLiteral 0x55759c9dfc80 <./llimits.h:62:31> 'int' 0
0
  30: CStyleCastExpr 0x55759c9dfcb0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55759c9dfc80 <col:31> 'int' 0
(void)[B14.29] (CStyleCastExpr, ToVoid, void)
  31: DeclRefExpr 0x55759c9dfd38 <luac.c:127:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
  32: ImplicitCastExpr 0x55759c9dfd60 <luac.c:127:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9dfd38 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.31] (ImplicitCastExpr, LValueToRValue, lua_State *)
  33: MemberExpr 0x55759c9dfd78 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55759c9a4488
`-ImplicitCastExpr 0x55759c9dfd60 <luac.c:127:38> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9dfd38 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.32]->stack_last
  34: ImplicitCastExpr 0x55759c9dfdc8 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55759c9dfd78 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55759c9a4488
  `-ImplicitCastExpr 0x55759c9dfd60 <luac.c:127:38> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9dfd38 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.33] (ImplicitCastExpr, LValueToRValue, StkId)
  35: CStyleCastExpr 0x55759c9dfde0 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x55759c9dfdc8 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55759c9dfd78 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55759c9a4488
    `-ImplicitCastExpr 0x55759c9dfd60 <luac.c:127:38> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55759c9dfd38 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
(char *)[B14.34] (CStyleCastExpr, BitCast, char *)
  36: DeclRefExpr 0x55759c9dfe08 <luac.c:127:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
  37: ImplicitCastExpr 0x55759c9dfe30 <luac.c:127:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9dfe08 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.36] (ImplicitCastExpr, LValueToRValue, lua_State *)
  38: MemberExpr 0x55759c9dfe48 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
`-ImplicitCastExpr 0x55759c9dfe30 <luac.c:127:38> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9dfe08 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.37]->top
  39: ImplicitCastExpr 0x55759c9dfe98 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55759c9dfe48 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
  `-ImplicitCastExpr 0x55759c9dfe30 <luac.c:127:38> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9dfe08 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.38] (ImplicitCastExpr, LValueToRValue, StkId)
  40: CStyleCastExpr 0x55759c9dfeb0 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x55759c9dfe98 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55759c9dfe48 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
    `-ImplicitCastExpr 0x55759c9dfe30 <luac.c:127:38> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55759c9dfe08 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
(char *)[B14.39] (CStyleCastExpr, BitCast, char *)
  41: BinaryOperator 0x55759c9dfed8 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x55759c9dfde0 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55759c9dfdc8 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x55759c9dfd78 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55759c9a4488
|     `-ImplicitCastExpr 0x55759c9dfd60 <luac.c:127:38> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x55759c9dfd38 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
`-CStyleCastExpr 0x55759c9dfeb0 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9dfe98 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x55759c9dfe48 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
      `-ImplicitCastExpr 0x55759c9dfe30 <luac.c:127:38> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55759c9dfe08 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B14.35] - [B14.40]
  42: IntegerLiteral 0x55759c9dff00 <./ldo.h:22:40> 'int' 1
1
  43: UnaryExprOrTypeTraitExpr 0x55759c9dff50 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  44: CStyleCastExpr 0x55759c9dff88 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x55759c9dff50 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B14.43] (CStyleCastExpr, IntegralCast, int)
  45: BinaryOperator 0x55759c9dffb0 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x55759c9dff20 <col:49, col:51> 'int'
| `-IntegerLiteral 0x55759c9dff00 <line:22:40> 'int' 1
`-CStyleCastExpr 0x55759c9dff88 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x55759c9dff50 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B14.42]) * [B14.44]
  46: ImplicitCastExpr 0x55759c9dffd8 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x55759c9dffb0 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x55759c9dff20 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x55759c9dff00 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x55759c9dff88 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x55759c9dff50 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B14.45] (ImplicitCastExpr, IntegralCast, long)
  47: BinaryOperator 0x55759c9dfff0 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x55759c9dfed8 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x55759c9dfde0 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x55759c9dfdc8 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x55759c9dfd78 <luac.c:127:38, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55759c9a4488
| |     `-ImplicitCastExpr 0x55759c9dfd60 <luac.c:127:38> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x55759c9dfd38 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
| `-CStyleCastExpr 0x55759c9dfeb0 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x55759c9dfe98 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x55759c9dfe48 <luac.c:127:38, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
|       `-ImplicitCastExpr 0x55759c9dfe30 <luac.c:127:38> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x55759c9dfe08 <col:38> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
`-ImplicitCastExpr 0x55759c9dffd8 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x55759c9dffb0 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x55759c9dff20 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x55759c9dff00 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x55759c9dff88 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x55759c9dff50 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B14.41] <= [B14.46]
   T: if [B14.47]
   Preds (1): B16
   Succs (2): B13 B12

 [B15]
   1: DeclRefExpr 0x55759c9ddfa8 <luac.c:122:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55759c9ddfd0 <luac.c:122:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B15.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55759c9ddfe8 <luac.c:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
`-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B15.2]->top
   4: ImplicitCastExpr 0x55759c9de080 <luac.c:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
  `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
[B15.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: IntegerLiteral 0x55759c9de020 <luac.c:122:21> 'int' 1
1
   6: UnaryOperator 0x55759c9de040 <luac.c:122:20, col:21> 'int' prefix '-'
`-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
-[B15.5]
   7: BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
|   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
`-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
  `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
    `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
[B15.4] + ([B15.6])
   8: MemberExpr 0x55759c9de0e0 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
`-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
  `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
    |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
    | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
    |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
    |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
    `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
      `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
        `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
([B15.7])->value
   9: MemberExpr 0x55759c9de118 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
`-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
  `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
    `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
      |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
      `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
        `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
          `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
[B15.8].gc
  10: ImplicitCastExpr 0x55759c9de150 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
  `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
    `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
      `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
        |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
        |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
        |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
        `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
          `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
            `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
[B15.9] (ImplicitCastExpr, LValueToRValue, GCObject *)
  11: MemberExpr 0x55759c9de168 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
`-ImplicitCastExpr 0x55759c9de150 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
    `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
      `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
        `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
          |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
          | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
          |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
          |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
          `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
            `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
              `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
[B15.10]->cl
  12: UnaryOperator 0x55759c9de1c8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x55759c9de168 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
  `-ImplicitCastExpr 0x55759c9de150 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
      `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
        `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
          `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
            |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
            | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
            |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
            |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
            `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
              `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
                `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
&[B15.11]
  13: MemberExpr 0x55759c9de208 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
`-ParenExpr 0x55759c9de1e8 <./llimits.h:63:25, col:27> 'union Closure *'
  `-UnaryOperator 0x55759c9de1c8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    `-MemberExpr 0x55759c9de168 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
      `-ImplicitCastExpr 0x55759c9de150 <col:48, col:59> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
          `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
            `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
              `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
                |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
                |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
                  `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
                    `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
([B15.12])->l
  14: MemberExpr 0x55759c9de240 <./llimits.h:63:25, luac.c:117:46> 'struct Proto *' lvalue .p 0x55759c991428
`-MemberExpr 0x55759c9de208 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
  `-ParenExpr 0x55759c9de1e8 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x55759c9de1c8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x55759c9de168 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
        `-ImplicitCastExpr 0x55759c9de150 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
            `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
              `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
                `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
                  |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                  | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                  |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
                  |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                  `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
                    `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
                      `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
[B15.13].p
  15: ImplicitCastExpr 0x55759c9df540 <luac.c:117:22, col:47> 'struct Proto *' <LValueToRValue>
`-ParenExpr 0x55759c9df520 <col:22, col:47> 'struct Proto *' lvalue
  `-MemberExpr 0x55759c9de240 <./llimits.h:63:25, luac.c:117:46> 'struct Proto *' lvalue .p 0x55759c991428
    `-MemberExpr 0x55759c9de208 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
      `-ParenExpr 0x55759c9de1e8 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x55759c9de1c8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x55759c9de168 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
            `-ImplicitCastExpr 0x55759c9de150 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
                `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
                  `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
                    `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
                      |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                      | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                      |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
                      |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                      `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
                        `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
                          `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
([B15.14]) (ImplicitCastExpr, LValueToRValue, struct Proto *)
  16: ImplicitCastExpr 0x55759c9df558 <luac.c:117:22, col:47> 'const Proto *' <BitCast>
`-ImplicitCastExpr 0x55759c9df540 <col:22, col:47> 'struct Proto *' <LValueToRValue>
  `-ParenExpr 0x55759c9df520 <col:22, col:47> 'struct Proto *' lvalue
    `-MemberExpr 0x55759c9de240 <./llimits.h:63:25, luac.c:117:46> 'struct Proto *' lvalue .p 0x55759c991428
      `-MemberExpr 0x55759c9de208 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
        `-ParenExpr 0x55759c9de1e8 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x55759c9de1c8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x55759c9de168 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
              `-ImplicitCastExpr 0x55759c9de150 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
                  `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
                    `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
                      `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
                        |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                        | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                        |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
                        |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                        `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
                          `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
                            `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
[B15.15] (ImplicitCastExpr, BitCast, const Proto *)
  17: ReturnStmt 0x55759c9df570 <luac.c:122:3, line:117:47>
`-ImplicitCastExpr 0x55759c9df558 <col:22, col:47> 'const Proto *' <BitCast>
  `-ImplicitCastExpr 0x55759c9df540 <col:22, col:47> 'struct Proto *' <LValueToRValue>
    `-ParenExpr 0x55759c9df520 <col:22, col:47> 'struct Proto *' lvalue
      `-MemberExpr 0x55759c9de240 <./llimits.h:63:25, luac.c:117:46> 'struct Proto *' lvalue .p 0x55759c991428
        `-MemberExpr 0x55759c9de208 <./llimits.h:63:25, luac.c:117:44> 'LClosure':'struct LClosure' lvalue ->l 0x55759c9917e0
          `-ParenExpr 0x55759c9de1e8 <./llimits.h:63:25, col:27> 'union Closure *'
            `-UnaryOperator 0x55759c9de1c8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
              `-MemberExpr 0x55759c9de168 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55759c9a7618
                `-ImplicitCastExpr 0x55759c9de150 <col:48, col:59> 'GCObject *' <LValueToRValue>
                  `-MemberExpr 0x55759c9de118 <col:48, col:59> 'GCObject *' lvalue .gc 0x55759c97a690
                    `-MemberExpr 0x55759c9de0e0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55759c97a990
                      `-ParenExpr 0x55759c9de0c0 <col:48, col:50> 'StkId':'TValue *'
                        `-BinaryOperator 0x55759c9de098 <luac.c:122:18, line:117:40> 'StkId':'TValue *' '+'
                          |-ImplicitCastExpr 0x55759c9de080 <line:122:18, line:117:34> 'StkId':'TValue *' <LValueToRValue>
                          | `-MemberExpr 0x55759c9ddfe8 <line:122:18, line:117:34> 'StkId':'TValue *' lvalue ->top 0x55759c9a41d8
                          |   `-ImplicitCastExpr 0x55759c9ddfd0 <line:122:18> 'lua_State *' <LValueToRValue>
                          |     `-DeclRefExpr 0x55759c9ddfa8 <col:18> 'lua_State *' lvalue ParmVar 0x55759c9ddce0 'L' 'lua_State *'
                          `-ParenExpr 0x55759c9de060 <line:117:38, col:40> 'int'
                            `-UnaryOperator 0x55759c9de040 <line:122:20, col:21> 'int' prefix '-'
                              `-IntegerLiteral 0x55759c9de020 <col:21> 'int' 1
return [B15.16];
   Preds (1): B16
   Succs (1): B0

 [B16]
   1: DeclRefExpr 0x55759c9ddf20 <luac.c:121:6> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
n
   2: ImplicitCastExpr 0x55759c9ddf68 <luac.c:121:6> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9ddf20 <col:6> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
[B16.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55759c9ddf48 <luac.c:121:9> 'int' 1
1
   4: BinaryOperator 0x55759c9ddf80 <luac.c:121:6, col:9> 'int' '=='
|-ImplicitCastExpr 0x55759c9ddf68 <col:6> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55759c9ddf20 <col:6> 'int' lvalue ParmVar 0x55759c9ddd58 'n' 'int'
`-IntegerLiteral 0x55759c9ddf48 <col:9> 'int' 1
[B16.2] == [B16.3]
   T: if [B16.4]
   Preds (1): B17
   Succs (2): B15 B14

 [B0 (EXIT)]
   Preds (2): B1 B15
