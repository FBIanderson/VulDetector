static int luaB_dofile(lua_State *L)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x562da281f4d8 <lbaselib.c:329:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x562da27f47e0 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_call
   2: ImplicitCastExpr 0x562da281f5a8 <lbaselib.c:329:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281f4d8 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x562da27f47e0 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
   3: DeclRefExpr 0x562da281f500 <lbaselib.c:329:12> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da281f600 <lbaselib.c:329:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281f500 <col:12> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da281f528 <lbaselib.c:329:15> 'int' 0
0
   6: IntegerLiteral 0x562da281f548 <./lua.h:30:23> 'int' 1
1
   7: UnaryOperator 0x562da281f568 <./lua.h:30:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x562da281f548 <col:23> 'int' 1
-[B1.6]
   8: CallExpr 0x562da281f5c0 <lbaselib.c:329:3, col:29> 'void'
|-ImplicitCastExpr 0x562da281f5a8 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281f4d8 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x562da27f47e0 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x562da281f600 <col:12> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281f500 <col:12> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
|-IntegerLiteral 0x562da281f528 <col:15> 'int' 0
`-ParenExpr 0x562da281f588 <./lua.h:30:21, col:24> 'int'
  `-UnaryOperator 0x562da281f568 <col:22, col:23> 'int' prefix '-'
    `-IntegerLiteral 0x562da281f548 <col:23> 'int' 1
[B1.2]([B1.4], [B1.5], ([B1.7]))
   9: DeclRefExpr 0x562da281f618 <lbaselib.c:330:10> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
  10: ImplicitCastExpr 0x562da281f668 <lbaselib.c:330:10> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281f618 <col:10> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B1.9] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
  11: DeclRefExpr 0x562da281f640 <lbaselib.c:330:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x562da281f6b0 <lbaselib.c:330:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281f640 <col:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B1.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: CallExpr 0x562da281f680 <lbaselib.c:330:10, col:22> 'int'
|-ImplicitCastExpr 0x562da281f668 <col:10> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281f618 <col:10> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da281f6b0 <col:21> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da281f640 <col:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B1.10]([B1.12])
  14: DeclRefExpr 0x562da281f6c8 <lbaselib.c:330:26> 'int' lvalue Var 0x562da281f188 'n' 'int'
n
  15: ImplicitCastExpr 0x562da281f6f0 <lbaselib.c:330:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da281f6c8 <col:26> 'int' lvalue Var 0x562da281f188 'n' 'int'
[B1.14] (ImplicitCastExpr, LValueToRValue, int)
  16: BinaryOperator 0x562da281f708 <lbaselib.c:330:10, col:26> 'int' '-'
|-CallExpr 0x562da281f680 <col:10, col:22> 'int'
| |-ImplicitCastExpr 0x562da281f668 <col:10> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da281f618 <col:10> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
| `-ImplicitCastExpr 0x562da281f6b0 <col:21> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x562da281f640 <col:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da281f6f0 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da281f6c8 <col:26> 'int' lvalue Var 0x562da281f188 'n' 'int'
[B1.13] - [B1.15]
  17: ReturnStmt 0x562da281f730 <lbaselib.c:330:3, col:26>
`-BinaryOperator 0x562da281f708 <col:10, col:26> 'int' '-'
  |-CallExpr 0x562da281f680 <col:10, col:22> 'int'
  | |-ImplicitCastExpr 0x562da281f668 <col:10> 'int (*)(lua_State *)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x562da281f618 <col:10> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
  | `-ImplicitCastExpr 0x562da281f6b0 <col:21> 'lua_State *' <LValueToRValue>
  |   `-DeclRefExpr 0x562da281f640 <col:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
  `-ImplicitCastExpr 0x562da281f6f0 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da281f6c8 <col:26> 'int' lvalue Var 0x562da281f188 'n' 'int'
return [B1.16];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x562da281f3f0 <lbaselib.c:328:37> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5f20 'lua_error' 'int (lua_State *)':'int (lua_State *)'
lua_error
   2: ImplicitCastExpr 0x562da281f440 <lbaselib.c:328:37> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281f3f0 <col:37> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5f20 'lua_error' 'int (lua_State *)':'int (lua_State *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   3: DeclRefExpr 0x562da281f418 <lbaselib.c:328:47> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da281f488 <lbaselib.c:328:47> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281f418 <col:47> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da281f458 <lbaselib.c:328:37, col:48> 'int'
|-ImplicitCastExpr 0x562da281f440 <col:37> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281f3f0 <col:37> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5f20 'lua_error' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da281f488 <col:47> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da281f418 <col:47> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B2.2]([B2.4])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x562da281ed50 <./lauxlib.h:103:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x562da28026b8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
luaL_optlstring
   2: ImplicitCastExpr 0x562da281f090 <./lauxlib.h:103:32> 'const char *(*)(lua_State *, int, const char *, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281ed50 <col:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x562da28026b8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, const char *, size_t *))
   3: DeclRefExpr 0x562da281ed78 <lbaselib.c:326:38> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da281f0f0 <lbaselib.c:326:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281ed78 <col:38> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da281eda0 <lbaselib.c:326:41> 'int' 1
1
   6: IntegerLiteral 0x562da281ef70 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x562da281efa8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562da281ef70 <col:24> 'int' 0
(void *)[B3.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x562da281f108 <./lauxlib.h:103:56, col:58> 'const char *' <NullToPointer>
`-ParenExpr 0x562da281eff0 <col:56, col:58> 'void *'
  `-ParenExpr 0x562da281efd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
    `-CStyleCastExpr 0x562da281efa8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562da281ef70 <col:24> 'int' 0
(([B3.7])) (ImplicitCastExpr, NullToPointer, const char *)
   9: IntegerLiteral 0x562da281f010 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  10: CStyleCastExpr 0x562da281f048 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562da281f010 <col:24> 'int' 0
(void *)[B3.9] (CStyleCastExpr, NullToPointer, void *)
  11: ImplicitCastExpr 0x562da281f120 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x562da281f070 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562da281f048 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562da281f010 <col:24> 'int' 0
([B3.10]) (ImplicitCastExpr, NullToPointer, size_t *)
  12: CallExpr 0x562da281f0a8 <./lauxlib.h:103:32, col:65> 'const char *'
|-ImplicitCastExpr 0x562da281f090 <col:32> 'const char *(*)(lua_State *, int, const char *, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281ed50 <col:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x562da28026b8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
|-ImplicitCastExpr 0x562da281f0f0 <lbaselib.c:326:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281ed78 <col:38> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
|-ParenExpr 0x562da281ef50 <./lauxlib.h:103:51, col:53> 'int'
| `-IntegerLiteral 0x562da281eda0 <lbaselib.c:326:41> 'int' 1
|-ImplicitCastExpr 0x562da281f108 <./lauxlib.h:103:56, col:58> 'const char *' <NullToPointer>
| `-ParenExpr 0x562da281eff0 <col:56, col:58> 'void *'
|   `-ParenExpr 0x562da281efd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
|     `-CStyleCastExpr 0x562da281efa8 <col:17, col:24> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x562da281ef70 <col:24> 'int' 0
`-ImplicitCastExpr 0x562da281f120 <col:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x562da281f070 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562da281f048 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562da281f010 <col:24> 'int' 0
[B3.2]([B3.4], ([B3.5]), [B3.8], [B3.11])
  13: DeclStmt 0x562da281f158 <lbaselib.c:326:3, col:49>col:15
`-VarDecl 0x562da281ecf0 <col:3, ./lauxlib.h:103:66> lbaselib.c:326:15 used fname 'const char *' cinit
  `-ParenExpr 0x562da281f138 <./lauxlib.h:103:31, col:66> 'const char *'
    `-CallExpr 0x562da281f0a8 <col:32, col:65> 'const char *'
      |-ImplicitCastExpr 0x562da281f090 <col:32> 'const char *(*)(lua_State *, int, const char *, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da281ed50 <col:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x562da28026b8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
      |-ImplicitCastExpr 0x562da281f0f0 <lbaselib.c:326:38> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x562da281ed78 <col:38> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
      |-ParenExpr 0x562da281ef50 <./lauxlib.h:103:51, col:53> 'int'
      | `-IntegerLiteral 0x562da281eda0 <lbaselib.c:326:41> 'int' 1
      |-ImplicitCastExpr 0x562da281f108 <./lauxlib.h:103:56, col:58> 'const char *' <NullToPointer>
      | `-ParenExpr 0x562da281eff0 <col:56, col:58> 'void *'
      |   `-ParenExpr 0x562da281efd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
      |     `-CStyleCastExpr 0x562da281efa8 <col:17, col:24> 'void *' <NullToPointer>
      |       `-IntegerLiteral 0x562da281ef70 <col:24> 'int' 0
      `-ImplicitCastExpr 0x562da281f120 <col:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x562da281f070 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x562da281f048 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x562da281f010 <col:24> 'int' 0
const char *fname = (luaL_optlstring(L, (1), (((void *)0)), ((void *)0)));
  14: DeclRefExpr 0x562da281f1e8 <lbaselib.c:327:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
  15: ImplicitCastExpr 0x562da281f238 <lbaselib.c:327:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281f1e8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B3.14] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
  16: DeclRefExpr 0x562da281f210 <lbaselib.c:327:22> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x562da281f280 <lbaselib.c:327:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281f210 <col:22> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B3.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: CallExpr 0x562da281f250 <lbaselib.c:327:11, col:23> 'int'
|-ImplicitCastExpr 0x562da281f238 <col:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281f1e8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da281f280 <col:22> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da281f210 <col:22> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B3.15]([B3.17])
  19: DeclStmt 0x562da281f298 <lbaselib.c:327:3, col:24>col:7
`-VarDecl 0x562da281f188 <col:3, col:23> col:7 used n 'int' cinit
  `-CallExpr 0x562da281f250 <col:11, col:23> 'int'
    |-ImplicitCastExpr 0x562da281f238 <col:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da281f1e8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
    `-ImplicitCastExpr 0x562da281f280 <col:22> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x562da281f210 <col:22> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
int n = lua_gettop(L);
  20: DeclRefExpr 0x562da281f2b0 <lbaselib.c:328:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x562da2804b88 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
luaL_loadfile
  21: ImplicitCastExpr 0x562da281f328 <lbaselib.c:328:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281f2b0 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x562da2804b88 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
[B3.20] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *))
  22: DeclRefExpr 0x562da281f2d8 <lbaselib.c:328:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
L
  23: ImplicitCastExpr 0x562da281f378 <lbaselib.c:328:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281f2d8 <col:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
[B3.22] (ImplicitCastExpr, LValueToRValue, lua_State *)
  24: DeclRefExpr 0x562da281f300 <lbaselib.c:328:24> 'const char *' lvalue Var 0x562da281ecf0 'fname' 'const char *'
fname
  25: ImplicitCastExpr 0x562da281f390 <lbaselib.c:328:24> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x562da281f300 <col:24> 'const char *' lvalue Var 0x562da281ecf0 'fname' 'const char *'
[B3.24] (ImplicitCastExpr, LValueToRValue, const char *)
  26: CallExpr 0x562da281f340 <lbaselib.c:328:7, col:29> 'int'
|-ImplicitCastExpr 0x562da281f328 <col:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281f2b0 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x562da2804b88 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
|-ImplicitCastExpr 0x562da281f378 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281f2d8 <col:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da281f390 <col:24> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x562da281f300 <col:24> 'const char *' lvalue Var 0x562da281ecf0 'fname' 'const char *'
[B3.21]([B3.23], [B3.25])
  27: IntegerLiteral 0x562da281f3a8 <lbaselib.c:328:34> 'int' 0
0
  28: BinaryOperator 0x562da281f3c8 <lbaselib.c:328:7, col:34> 'int' '!='
|-CallExpr 0x562da281f340 <col:7, col:29> 'int'
| |-ImplicitCastExpr 0x562da281f328 <col:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da281f2b0 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x562da2804b88 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
| |-ImplicitCastExpr 0x562da281f378 <col:21> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x562da281f2d8 <col:21> 'lua_State *' lvalue ParmVar 0x562da281eba0 'L' 'lua_State *'
| `-ImplicitCastExpr 0x562da281f390 <col:24> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x562da281f300 <col:24> 'const char *' lvalue Var 0x562da281ecf0 'fname' 'const char *'
`-IntegerLiteral 0x562da281f3a8 <col:34> 'int' 0
[B3.26] != [B3.27]
   T: if [B3.28]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1
