static int load_aux(lua_State *L, int status)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x562da281be40 <lbaselib.c:270:5> 'void (lua_State *)':'void (lua_State *)' Function 0x562da27efd38 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
   2: ImplicitCastExpr 0x562da281be90 <lbaselib.c:270:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281be40 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x562da27efd38 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   3: DeclRefExpr 0x562da281be68 <lbaselib.c:270:17> 'lua_State *' lvalue ParmVar 0x562da281bb90 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da281bed8 <lbaselib.c:270:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281be68 <col:17> 'lua_State *' lvalue ParmVar 0x562da281bb90 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da281bea8 <lbaselib.c:270:5, col:18> 'void'
|-ImplicitCastExpr 0x562da281be90 <col:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281be40 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x562da27efd38 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x562da281bed8 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da281be68 <col:17> 'lua_State *' lvalue ParmVar 0x562da281bb90 'L' 'lua_State *'
[B1.2]([B1.4])
   6: DeclRefExpr 0x562da281bef0 <lbaselib.c:271:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ec260 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_insert
   7: ImplicitCastExpr 0x562da281bf80 <lbaselib.c:271:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281bef0 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ec260 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   8: DeclRefExpr 0x562da281bf18 <lbaselib.c:271:16> 'lua_State *' lvalue ParmVar 0x562da281bb90 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x562da281bfd0 <lbaselib.c:271:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281bf18 <col:16> 'lua_State *' lvalue ParmVar 0x562da281bb90 'L' 'lua_State *'
[B1.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: IntegerLiteral 0x562da281bf40 <lbaselib.c:271:20> 'int' 2
2
  11: UnaryOperator 0x562da281bf60 <lbaselib.c:271:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562da281bf40 <col:20> 'int' 2
-[B1.10]
  12: CallExpr 0x562da281bf98 <lbaselib.c:271:5, col:21> 'void'
|-ImplicitCastExpr 0x562da281bf80 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281bef0 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ec260 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da281bfd0 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281bf18 <col:16> 'lua_State *' lvalue ParmVar 0x562da281bb90 'L' 'lua_State *'
`-UnaryOperator 0x562da281bf60 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562da281bf40 <col:20> 'int' 2
[B1.7]([B1.9], [B1.11])
  13: IntegerLiteral 0x562da281bfe8 <lbaselib.c:272:12> 'int' 2
2
  14: ReturnStmt 0x562da281c008 <lbaselib.c:272:5, col:12>
`-IntegerLiteral 0x562da281bfe8 <col:12> 'int' 2
return [B1.13];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x562da281be08 <lbaselib.c:268:12> 'int' 1
1
   2: ReturnStmt 0x562da281be28 <lbaselib.c:268:5, col:12>
`-IntegerLiteral 0x562da281be08 <col:12> 'int' 1
return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x562da281bd80 <lbaselib.c:267:7> 'int' lvalue ParmVar 0x562da281bc08 'status' 'int'
status
   2: ImplicitCastExpr 0x562da281bdc8 <lbaselib.c:267:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da281bd80 <col:7> 'int' lvalue ParmVar 0x562da281bc08 'status' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x562da281bda8 <lbaselib.c:267:17> 'int' 0
0
   4: BinaryOperator 0x562da281bde0 <lbaselib.c:267:7, col:17> 'int' '=='
|-ImplicitCastExpr 0x562da281bdc8 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da281bd80 <col:7> 'int' lvalue ParmVar 0x562da281bc08 'status' 'int'
`-IntegerLiteral 0x562da281bda8 <col:17> 'int' 0
[B3.2] == [B3.3]
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
