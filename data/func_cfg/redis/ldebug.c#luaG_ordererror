int luaG_ordererror(lua_State *L, const TValue *p1, const TValue *p2)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: IntegerLiteral 0x555e97270710 <ldebug.c:603:10> 'int' 0
0
   2: ReturnStmt 0x555e97270730 <ldebug.c:603:3, col:10>
`-IntegerLiteral 0x555e97270710 <col:10> 'int' 0
return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e972704e0 <ldebug.c:602:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x555e97270600 <ldebug.c:602:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e972704e0 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x555e97270508 <ldebug.c:602:19> 'lua_State *' lvalue ParmVar 0x555e9726fb48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e97270660 <ldebug.c:602:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97270508 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726fb48 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x555e97270568 <ldebug.c:602:22> 'char [30]' lvalue "attempt to compare %s with %s"
"attempt to compare %s with %s"
   6: ImplicitCastExpr 0x555e97270678 <ldebug.c:602:22> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e97270568 <col:22> 'char [30]' lvalue "attempt to compare %s with %s"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x555e97270690 <ldebug.c:602:22> 'const char *' <BitCast>
`-ImplicitCastExpr 0x555e97270678 <col:22> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e97270568 <col:22> 'char [30]' lvalue "attempt to compare %s with %s"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x555e972705b0 <ldebug.c:602:55> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
t1
   9: ImplicitCastExpr 0x555e972706a8 <ldebug.c:602:55> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e972705b0 <col:55> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
[B2.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x555e972705d8 <ldebug.c:602:59> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
t2
  11: ImplicitCastExpr 0x555e972706c0 <ldebug.c:602:59> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e972705d8 <col:59> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
[B2.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: CallExpr 0x555e97270618 <ldebug.c:602:5, col:61> 'void'
|-ImplicitCastExpr 0x555e97270600 <col:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e972704e0 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x555e97270660 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e97270508 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726fb48 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e97270690 <col:22> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x555e97270678 <col:22> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x555e97270568 <col:22> 'char [30]' lvalue "attempt to compare %s with %s"
|-ImplicitCastExpr 0x555e972706a8 <col:55> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e972705b0 <col:55> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
`-ImplicitCastExpr 0x555e972706c0 <col:59> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x555e972705d8 <col:59> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
[B2.2]([B2.4], [B2.7], [B2.9], [B2.11])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x555e97270330 <ldebug.c:600:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x555e97270428 <ldebug.c:600:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97270330 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x555e97270358 <ldebug.c:600:19> 'lua_State *' lvalue ParmVar 0x555e9726fb48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e97270480 <ldebug.c:600:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97270358 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726fb48 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x555e972703b8 <ldebug.c:600:22> 'char [33]' lvalue "attempt to compare two %s values"
"attempt to compare two %s values"
   6: ImplicitCastExpr 0x555e97270498 <ldebug.c:600:22> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e972703b8 <col:22> 'char [33]' lvalue "attempt to compare two %s values"
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x555e972704b0 <ldebug.c:600:22> 'const char *' <BitCast>
`-ImplicitCastExpr 0x555e97270498 <col:22> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e972703b8 <col:22> 'char [33]' lvalue "attempt to compare two %s values"
[B3.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x555e97270400 <ldebug.c:600:58> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
t1
   9: ImplicitCastExpr 0x555e972704c8 <ldebug.c:600:58> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e97270400 <col:58> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
[B3.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: CallExpr 0x555e97270440 <ldebug.c:600:5, col:60> 'void'
|-ImplicitCastExpr 0x555e97270428 <col:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97270330 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x555e97270480 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e97270358 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726fb48 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e972704b0 <col:22> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x555e97270498 <col:22> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x555e972703b8 <col:22> 'char [33]' lvalue "attempt to compare two %s values"
`-ImplicitCastExpr 0x555e972704c8 <col:58> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x555e97270400 <col:58> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
[B3.2]([B3.4], [B3.7], [B3.9])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x555e9726fe50 <ldebug.c:597:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
luaT_typenames
   2: ImplicitCastExpr 0x555e9726ff30 <ldebug.c:597:20> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x555e9726fe50 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
[B4.1] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
   3: DeclRefExpr 0x555e9726fe78 <ldebug.c:597:41> 'const TValue *' lvalue ParmVar 0x555e9726fbb8 'p1' 'const TValue *'
p1
   4: ImplicitCastExpr 0x555e9726fec0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x555e9726fea0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x555e9726fe78 <ldebug.c:597:41> 'const TValue *' lvalue ParmVar 0x555e9726fbb8 'p1' 'const TValue *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x555e9726fed8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e9726fec0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x555e9726fea0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x555e9726fe78 <ldebug.c:597:41> 'const TValue *' lvalue ParmVar 0x555e9726fbb8 'p1' 'const TValue *'
[B4.4]->tt
   6: ImplicitCastExpr 0x555e9726ff48 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x555e9726ff10 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x555e9726fed8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
    `-ImplicitCastExpr 0x555e9726fec0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x555e9726fea0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x555e9726fe78 <ldebug.c:597:41> 'const TValue *' lvalue ParmVar 0x555e9726fbb8 'p1' 'const TValue *'
([B4.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x555e9726ff60 <ldebug.c:597:20, col:44> 'const char *const' lvalue
|-ImplicitCastExpr 0x555e9726ff30 <col:20> 'const char *const *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x555e9726fe50 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
`-ImplicitCastExpr 0x555e9726ff48 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
  `-ParenExpr 0x555e9726ff10 <col:18, col:26> 'const int' lvalue
    `-MemberExpr 0x555e9726fed8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
      `-ImplicitCastExpr 0x555e9726fec0 <col:19, col:21> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x555e9726fea0 <col:19, col:21> 'const TValue *' lvalue
          `-DeclRefExpr 0x555e9726fe78 <ldebug.c:597:41> 'const TValue *' lvalue ParmVar 0x555e9726fbb8 'p1' 'const TValue *'
[B4.2][[B4.6]]
   8: ImplicitCastExpr 0x555e9726ff88 <ldebug.c:597:20, col:44> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x555e9726ff60 <col:20, col:44> 'const char *const' lvalue
  |-ImplicitCastExpr 0x555e9726ff30 <col:20> 'const char *const *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x555e9726fe50 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
  `-ImplicitCastExpr 0x555e9726ff48 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    `-ParenExpr 0x555e9726ff10 <col:18, col:26> 'const int' lvalue
      `-MemberExpr 0x555e9726fed8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
        `-ImplicitCastExpr 0x555e9726fec0 <col:19, col:21> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x555e9726fea0 <col:19, col:21> 'const TValue *' lvalue
            `-DeclRefExpr 0x555e9726fe78 <ldebug.c:597:41> 'const TValue *' lvalue ParmVar 0x555e9726fbb8 'p1' 'const TValue *'
[B4.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: DeclStmt 0x555e9726ffa0 <ldebug.c:597:3, col:45>col:15
`-VarDecl 0x555e9726fdf0 <col:3, col:44> col:15 used t1 'const char *' cinit
  `-ImplicitCastExpr 0x555e9726ff88 <col:20, col:44> 'const char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x555e9726ff60 <col:20, col:44> 'const char *const' lvalue
      |-ImplicitCastExpr 0x555e9726ff30 <col:20> 'const char *const *' <ArrayToPointerDecay>
      | `-DeclRefExpr 0x555e9726fe50 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
      `-ImplicitCastExpr 0x555e9726ff48 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
        `-ParenExpr 0x555e9726ff10 <col:18, col:26> 'const int' lvalue
          `-MemberExpr 0x555e9726fed8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
            `-ImplicitCastExpr 0x555e9726fec0 <col:19, col:21> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x555e9726fea0 <col:19, col:21> 'const TValue *' lvalue
                `-DeclRefExpr 0x555e9726fe78 <ldebug.c:597:41> 'const TValue *' lvalue ParmVar 0x555e9726fbb8 'p1' 'const TValue *'
const char *t1 = luaT_typenames[((p1)->tt)];
  10: DeclRefExpr 0x555e97270030 <ldebug.c:598:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
luaT_typenames
  11: ImplicitCastExpr 0x555e97270110 <ldebug.c:598:20> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x555e97270030 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
[B4.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
  12: DeclRefExpr 0x555e97270058 <ldebug.c:598:41> 'const TValue *' lvalue ParmVar 0x555e9726fc28 'p2' 'const TValue *'
p2
  13: ImplicitCastExpr 0x555e972700a0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x555e97270080 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x555e97270058 <ldebug.c:598:41> 'const TValue *' lvalue ParmVar 0x555e9726fc28 'p2' 'const TValue *'
([B4.12]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  14: MemberExpr 0x555e972700b8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e972700a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97270080 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x555e97270058 <ldebug.c:598:41> 'const TValue *' lvalue ParmVar 0x555e9726fc28 'p2' 'const TValue *'
[B4.13]->tt
  15: ImplicitCastExpr 0x555e97270128 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x555e972700f0 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x555e972700b8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
    `-ImplicitCastExpr 0x555e972700a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97270080 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x555e97270058 <ldebug.c:598:41> 'const TValue *' lvalue ParmVar 0x555e9726fc28 'p2' 'const TValue *'
([B4.14]) (ImplicitCastExpr, LValueToRValue, int)
  16: ArraySubscriptExpr 0x555e97270140 <ldebug.c:598:20, col:44> 'const char *const' lvalue
|-ImplicitCastExpr 0x555e97270110 <col:20> 'const char *const *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x555e97270030 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
`-ImplicitCastExpr 0x555e97270128 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
  `-ParenExpr 0x555e972700f0 <col:18, col:26> 'const int' lvalue
    `-MemberExpr 0x555e972700b8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
      `-ImplicitCastExpr 0x555e972700a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x555e97270080 <col:19, col:21> 'const TValue *' lvalue
          `-DeclRefExpr 0x555e97270058 <ldebug.c:598:41> 'const TValue *' lvalue ParmVar 0x555e9726fc28 'p2' 'const TValue *'
[B4.11][[B4.15]]
  17: ImplicitCastExpr 0x555e97270168 <ldebug.c:598:20, col:44> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x555e97270140 <col:20, col:44> 'const char *const' lvalue
  |-ImplicitCastExpr 0x555e97270110 <col:20> 'const char *const *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x555e97270030 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
  `-ImplicitCastExpr 0x555e97270128 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    `-ParenExpr 0x555e972700f0 <col:18, col:26> 'const int' lvalue
      `-MemberExpr 0x555e972700b8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
        `-ImplicitCastExpr 0x555e972700a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x555e97270080 <col:19, col:21> 'const TValue *' lvalue
            `-DeclRefExpr 0x555e97270058 <ldebug.c:598:41> 'const TValue *' lvalue ParmVar 0x555e9726fc28 'p2' 'const TValue *'
[B4.16] (ImplicitCastExpr, LValueToRValue, const char *)
  18: DeclStmt 0x555e97270180 <ldebug.c:598:3, col:45>col:15
`-VarDecl 0x555e9726ffd0 <col:3, col:44> col:15 used t2 'const char *' cinit
  `-ImplicitCastExpr 0x555e97270168 <col:20, col:44> 'const char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x555e97270140 <col:20, col:44> 'const char *const' lvalue
      |-ImplicitCastExpr 0x555e97270110 <col:20> 'const char *const *' <ArrayToPointerDecay>
      | `-DeclRefExpr 0x555e97270030 <col:20> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
      `-ImplicitCastExpr 0x555e97270128 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
        `-ParenExpr 0x555e972700f0 <col:18, col:26> 'const int' lvalue
          `-MemberExpr 0x555e972700b8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
            `-ImplicitCastExpr 0x555e972700a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x555e97270080 <col:19, col:21> 'const TValue *' lvalue
                `-DeclRefExpr 0x555e97270058 <ldebug.c:598:41> 'const TValue *' lvalue ParmVar 0x555e9726fc28 'p2' 'const TValue *'
const char *t2 = luaT_typenames[((p2)->tt)];
  19: DeclRefExpr 0x555e97270198 <ldebug.c:599:7> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
t1
  20: ImplicitCastExpr 0x555e972701e0 <ldebug.c:599:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e97270198 <col:7> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
[B4.19] (ImplicitCastExpr, LValueToRValue, const char *)
  21: IntegerLiteral 0x555e972701c0 <ldebug.c:599:10> 'int' 2
2
  22: ArraySubscriptExpr 0x555e972701f8 <ldebug.c:599:7, col:11> 'const char' lvalue
|-ImplicitCastExpr 0x555e972701e0 <col:7> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e97270198 <col:7> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
`-IntegerLiteral 0x555e972701c0 <col:10> 'int' 2
[B4.20][[B4.21]]
  23: ImplicitCastExpr 0x555e972702a8 <ldebug.c:599:7, col:11> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x555e972701f8 <col:7, col:11> 'const char' lvalue
  |-ImplicitCastExpr 0x555e972701e0 <col:7> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x555e97270198 <col:7> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
  `-IntegerLiteral 0x555e972701c0 <col:10> 'int' 2
[B4.22] (ImplicitCastExpr, LValueToRValue, char)
  24: ImplicitCastExpr 0x555e972702c0 <ldebug.c:599:7, col:11> 'int' <IntegralCast>
`-ImplicitCastExpr 0x555e972702a8 <col:7, col:11> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x555e972701f8 <col:7, col:11> 'const char' lvalue
    |-ImplicitCastExpr 0x555e972701e0 <col:7> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x555e97270198 <col:7> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
    `-IntegerLiteral 0x555e972701c0 <col:10> 'int' 2
[B4.23] (ImplicitCastExpr, IntegralCast, int)
  25: DeclRefExpr 0x555e97270220 <ldebug.c:599:16> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
t2
  26: ImplicitCastExpr 0x555e97270268 <ldebug.c:599:16> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e97270220 <col:16> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
[B4.25] (ImplicitCastExpr, LValueToRValue, const char *)
  27: IntegerLiteral 0x555e97270248 <ldebug.c:599:19> 'int' 2
2
  28: ArraySubscriptExpr 0x555e97270280 <ldebug.c:599:16, col:20> 'const char' lvalue
|-ImplicitCastExpr 0x555e97270268 <col:16> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e97270220 <col:16> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
`-IntegerLiteral 0x555e97270248 <col:19> 'int' 2
[B4.26][[B4.27]]
  29: ImplicitCastExpr 0x555e972702d8 <ldebug.c:599:16, col:20> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x555e97270280 <col:16, col:20> 'const char' lvalue
  |-ImplicitCastExpr 0x555e97270268 <col:16> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x555e97270220 <col:16> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
  `-IntegerLiteral 0x555e97270248 <col:19> 'int' 2
[B4.28] (ImplicitCastExpr, LValueToRValue, char)
  30: ImplicitCastExpr 0x555e972702f0 <ldebug.c:599:16, col:20> 'int' <IntegralCast>
`-ImplicitCastExpr 0x555e972702d8 <col:16, col:20> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x555e97270280 <col:16, col:20> 'const char' lvalue
    |-ImplicitCastExpr 0x555e97270268 <col:16> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x555e97270220 <col:16> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
    `-IntegerLiteral 0x555e97270248 <col:19> 'int' 2
[B4.29] (ImplicitCastExpr, IntegralCast, int)
  31: BinaryOperator 0x555e97270308 <ldebug.c:599:7, col:20> 'int' '=='
|-ImplicitCastExpr 0x555e972702c0 <col:7, col:11> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x555e972702a8 <col:7, col:11> 'char' <LValueToRValue>
|   `-ArraySubscriptExpr 0x555e972701f8 <col:7, col:11> 'const char' lvalue
|     |-ImplicitCastExpr 0x555e972701e0 <col:7> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x555e97270198 <col:7> 'const char *' lvalue Var 0x555e9726fdf0 't1' 'const char *'
|     `-IntegerLiteral 0x555e972701c0 <col:10> 'int' 2
`-ImplicitCastExpr 0x555e972702f0 <col:16, col:20> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x555e972702d8 <col:16, col:20> 'char' <LValueToRValue>
    `-ArraySubscriptExpr 0x555e97270280 <col:16, col:20> 'const char' lvalue
      |-ImplicitCastExpr 0x555e97270268 <col:16> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x555e97270220 <col:16> 'const char *' lvalue Var 0x555e9726ffd0 't2' 'const char *'
      `-IntegerLiteral 0x555e97270248 <col:19> 'int' 2
[B4.24] == [B4.30]
   T: if [B4.31]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1
