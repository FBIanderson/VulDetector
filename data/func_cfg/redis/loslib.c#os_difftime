static int os_difftime(lua_State *L)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x55626ed0a180 <loslib.c:196:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x55626ecb9c50 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   2: ImplicitCastExpr 0x55626ed0a608 <loslib.c:196:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0a180 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x55626ecb9c50 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   3: DeclRefExpr 0x55626ed0a1a8 <loslib.c:196:18> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55626ed0a658 <loslib.c:196:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed0a1a8 <col:18> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55626ed0a1d0 <loslib.c:196:21> 'double (time_t, time_t)' Function 0x55626ec81e08 'difftime' 'double (time_t, time_t)'
difftime
   6: ImplicitCastExpr 0x55626ed0a5b8 <loslib.c:196:21> 'double (*)(time_t, time_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0a1d0 <col:21> 'double (time_t, time_t)' Function 0x55626ec81e08 'difftime' 'double (time_t, time_t)'
[B1.5] (ImplicitCastExpr, FunctionToPointerDecay, double (*)(time_t, time_t))
   7: DeclRefExpr 0x55626ed0a1f8 <loslib.c:196:39> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55626ecf1ab8 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
luaL_checknumber
   8: ImplicitCastExpr 0x55626ed0a268 <loslib.c:196:39> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0a1f8 <col:39> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55626ecf1ab8 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B1.7] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   9: DeclRefExpr 0x55626ed0a220 <loslib.c:196:56> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x55626ed0a2b8 <loslib.c:196:56> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed0a220 <col:56> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
[B1.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: IntegerLiteral 0x55626ed0a248 <loslib.c:196:59> 'int' 1
1
  12: CallExpr 0x55626ed0a280 <loslib.c:196:39, col:60> 'lua_Number':'double'
|-ImplicitCastExpr 0x55626ed0a268 <col:39> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0a1f8 <col:39> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55626ecf1ab8 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x55626ed0a2b8 <col:56> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed0a220 <col:56> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
`-IntegerLiteral 0x55626ed0a248 <col:59> 'int' 1
[B1.8]([B1.10], [B1.11])
  13: CStyleCastExpr 0x55626ed0a330 <loslib.c:196:30, col:61> 'time_t':'long' <FloatingToIntegral>
`-ParenExpr 0x55626ed0a310 <col:38, col:61> 'lua_Number':'double'
  `-CallExpr 0x55626ed0a280 <col:39, col:60> 'lua_Number':'double'
    |-ImplicitCastExpr 0x55626ed0a268 <col:39> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55626ed0a1f8 <col:39> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55626ecf1ab8 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
    |-ImplicitCastExpr 0x55626ed0a2b8 <col:56> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55626ed0a220 <col:56> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
    `-IntegerLiteral 0x55626ed0a248 <col:59> 'int' 1
(time_t)([B1.12]) (CStyleCastExpr, FloatingToIntegral, time_t)
  14: DeclRefExpr 0x55626ed0a358 <loslib.c:197:39> 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)' Function 0x55626ecf1dc8 'luaL_optnumber' 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)'
luaL_optnumber
  15: ImplicitCastExpr 0x55626ed0a448 <loslib.c:197:39> 'lua_Number (*)(lua_State *, int, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0a358 <col:39> 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)' Function 0x55626ecf1dc8 'luaL_optnumber' 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)'
[B1.14] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int, lua_Number))
  16: DeclRefExpr 0x55626ed0a380 <loslib.c:197:54> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x55626ed0a4a0 <loslib.c:197:54> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed0a380 <col:54> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
[B1.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: IntegerLiteral 0x55626ed0a3a8 <loslib.c:197:57> 'int' 2
2
  19: IntegerLiteral 0x55626ed0a3c8 <loslib.c:197:60> 'int' 0
0
  20: ImplicitCastExpr 0x55626ed0a4b8 <loslib.c:197:60> 'lua_Number':'double' <IntegralToFloating>
`-IntegerLiteral 0x55626ed0a3c8 <col:60> 'int' 0
[B1.19] (ImplicitCastExpr, IntegralToFloating, lua_Number)
  21: CallExpr 0x55626ed0a460 <loslib.c:197:39, col:61> 'lua_Number':'double'
|-ImplicitCastExpr 0x55626ed0a448 <col:39> 'lua_Number (*)(lua_State *, int, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0a358 <col:39> 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)' Function 0x55626ecf1dc8 'luaL_optnumber' 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)'
|-ImplicitCastExpr 0x55626ed0a4a0 <col:54> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed0a380 <col:54> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
|-IntegerLiteral 0x55626ed0a3a8 <col:57> 'int' 2
`-ImplicitCastExpr 0x55626ed0a4b8 <col:60> 'lua_Number':'double' <IntegralToFloating>
  `-IntegerLiteral 0x55626ed0a3c8 <col:60> 'int' 0
[B1.15]([B1.17], [B1.18], [B1.20])
  22: CStyleCastExpr 0x55626ed0a530 <loslib.c:197:30, col:62> 'time_t':'long' <FloatingToIntegral>
`-ParenExpr 0x55626ed0a510 <col:38, col:62> 'lua_Number':'double'
  `-CallExpr 0x55626ed0a460 <col:39, col:61> 'lua_Number':'double'
    |-ImplicitCastExpr 0x55626ed0a448 <col:39> 'lua_Number (*)(lua_State *, int, lua_Number)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55626ed0a358 <col:39> 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)' Function 0x55626ecf1dc8 'luaL_optnumber' 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)'
    |-ImplicitCastExpr 0x55626ed0a4a0 <col:54> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55626ed0a380 <col:54> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
    |-IntegerLiteral 0x55626ed0a3a8 <col:57> 'int' 2
    `-ImplicitCastExpr 0x55626ed0a4b8 <col:60> 'lua_Number':'double' <IntegralToFloating>
      `-IntegerLiteral 0x55626ed0a3c8 <col:60> 'int' 0
(time_t)([B1.21]) (CStyleCastExpr, FloatingToIntegral, time_t)
  23: CallExpr 0x55626ed0a5d0 <loslib.c:196:21, line:197:63> 'double'
|-ImplicitCastExpr 0x55626ed0a5b8 <line:196:21> 'double (*)(time_t, time_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0a1d0 <col:21> 'double (time_t, time_t)' Function 0x55626ec81e08 'difftime' 'double (time_t, time_t)'
|-CStyleCastExpr 0x55626ed0a330 <col:30, col:61> 'time_t':'long' <FloatingToIntegral>
| `-ParenExpr 0x55626ed0a310 <col:38, col:61> 'lua_Number':'double'
|   `-CallExpr 0x55626ed0a280 <col:39, col:60> 'lua_Number':'double'
|     |-ImplicitCastExpr 0x55626ed0a268 <col:39> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55626ed0a1f8 <col:39> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55626ecf1ab8 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|     |-ImplicitCastExpr 0x55626ed0a2b8 <col:56> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x55626ed0a220 <col:56> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
|     `-IntegerLiteral 0x55626ed0a248 <col:59> 'int' 1
`-CStyleCastExpr 0x55626ed0a530 <line:197:30, col:62> 'time_t':'long' <FloatingToIntegral>
  `-ParenExpr 0x55626ed0a510 <col:38, col:62> 'lua_Number':'double'
    `-CallExpr 0x55626ed0a460 <col:39, col:61> 'lua_Number':'double'
      |-ImplicitCastExpr 0x55626ed0a448 <col:39> 'lua_Number (*)(lua_State *, int, lua_Number)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55626ed0a358 <col:39> 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)' Function 0x55626ecf1dc8 'luaL_optnumber' 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)'
      |-ImplicitCastExpr 0x55626ed0a4a0 <col:54> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x55626ed0a380 <col:54> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
      |-IntegerLiteral 0x55626ed0a3a8 <col:57> 'int' 2
      `-ImplicitCastExpr 0x55626ed0a4b8 <col:60> 'lua_Number':'double' <IntegralToFloating>
        `-IntegerLiteral 0x55626ed0a3c8 <col:60> 'int' 0
[B1.6]([B1.13], [B1.22])
  24: CallExpr 0x55626ed0a620 <loslib.c:196:3, line:197:64> 'void'
|-ImplicitCastExpr 0x55626ed0a608 <line:196:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0a180 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x55626ecb9c50 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x55626ed0a658 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed0a1a8 <col:18> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
`-CallExpr 0x55626ed0a5d0 <col:21, line:197:63> 'double'
  |-ImplicitCastExpr 0x55626ed0a5b8 <line:196:21> 'double (*)(time_t, time_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55626ed0a1d0 <col:21> 'double (time_t, time_t)' Function 0x55626ec81e08 'difftime' 'double (time_t, time_t)'
  |-CStyleCastExpr 0x55626ed0a330 <col:30, col:61> 'time_t':'long' <FloatingToIntegral>
  | `-ParenExpr 0x55626ed0a310 <col:38, col:61> 'lua_Number':'double'
  |   `-CallExpr 0x55626ed0a280 <col:39, col:60> 'lua_Number':'double'
  |     |-ImplicitCastExpr 0x55626ed0a268 <col:39> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
  |     | `-DeclRefExpr 0x55626ed0a1f8 <col:39> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55626ecf1ab8 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
  |     |-ImplicitCastExpr 0x55626ed0a2b8 <col:56> 'lua_State *' <LValueToRValue>
  |     | `-DeclRefExpr 0x55626ed0a220 <col:56> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
  |     `-IntegerLiteral 0x55626ed0a248 <col:59> 'int' 1
  `-CStyleCastExpr 0x55626ed0a530 <line:197:30, col:62> 'time_t':'long' <FloatingToIntegral>
    `-ParenExpr 0x55626ed0a510 <col:38, col:62> 'lua_Number':'double'
      `-CallExpr 0x55626ed0a460 <col:39, col:61> 'lua_Number':'double'
        |-ImplicitCastExpr 0x55626ed0a448 <col:39> 'lua_Number (*)(lua_State *, int, lua_Number)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55626ed0a358 <col:39> 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)' Function 0x55626ecf1dc8 'luaL_optnumber' 'lua_Number (lua_State *, int, lua_Number)':'lua_Number (lua_State *, int, lua_Number)'
        |-ImplicitCastExpr 0x55626ed0a4a0 <col:54> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x55626ed0a380 <col:54> 'lua_State *' lvalue ParmVar 0x55626ed0a048 'L' 'lua_State *'
        |-IntegerLiteral 0x55626ed0a3a8 <col:57> 'int' 2
        `-ImplicitCastExpr 0x55626ed0a4b8 <col:60> 'lua_Number':'double' <IntegralToFloating>
          `-IntegerLiteral 0x55626ed0a3c8 <col:60> 'int' 0
[B1.2]([B1.4], [B1.23])
  25: IntegerLiteral 0x55626ed0a670 <loslib.c:198:10> 'int' 1
1
  26: ReturnStmt 0x55626ed0a690 <loslib.c:198:3, col:10>
`-IntegerLiteral 0x55626ed0a670 <col:10> 'int' 1
return [B1.25];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
