static void setnodevector(lua_State *L, Table *t, int size)
 [B13 (ENTRY)]
   Succs (1): B12

 [B1]
   1: DeclRefExpr 0x5654000e1988 <ltable.c:292:28> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
lsize
   2: ImplicitCastExpr 0x5654000e1a30 <./llimits.h:75:26, col:30> 'int' <LValueToRValue>
`-ParenExpr 0x5654000e1a10 <col:26, col:30> 'int' lvalue
  `-ParenExpr 0x5654000e19b0 <line:78:36, col:38> 'int' lvalue
    `-DeclRefExpr 0x5654000e1988 <ltable.c:292:28> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
(([B1.1])) (ImplicitCastExpr, LValueToRValue, int)
   3: CStyleCastExpr 0x5654000e1a48 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x5654000e1a30 <col:26, col:30> 'int' <LValueToRValue>
  `-ParenExpr 0x5654000e1a10 <col:26, col:30> 'int' lvalue
    `-ParenExpr 0x5654000e19b0 <line:78:36, col:38> 'int' lvalue
      `-DeclRefExpr 0x5654000e1988 <ltable.c:292:28> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
(lu_byte)[B1.2] (CStyleCastExpr, IntegralCast, lu_byte)
   4: DeclRefExpr 0x5654000e1910 <ltable.c:292:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
t
   5: ImplicitCastExpr 0x5654000e1938 <ltable.c:292:3> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000e1910 <col:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B1.4] (ImplicitCastExpr, LValueToRValue, Table *)
   6: MemberExpr 0x5654000e1950 <ltable.c:292:3, col:6> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
`-ImplicitCastExpr 0x5654000e1938 <col:3> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000e1910 <col:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B1.5]->lsizenode
   7: BinaryOperator 0x5654000e1a90 <ltable.c:292:3, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x5654000e1950 <ltable.c:292:3, col:6> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
| `-ImplicitCastExpr 0x5654000e1938 <col:3> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000e1910 <col:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
`-ParenExpr 0x5654000e1a70 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x5654000e1a48 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x5654000e1a30 <col:26, col:30> 'int' <LValueToRValue>
      `-ParenExpr 0x5654000e1a10 <col:26, col:30> 'int' lvalue
        `-ParenExpr 0x5654000e19b0 <line:78:36, col:38> 'int' lvalue
          `-DeclRefExpr 0x5654000e1988 <ltable.c:292:28> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
[B1.6] = ([B1.3])
   8: DeclRefExpr 0x5654000e1b30 <ltable.c:293:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
t
   9: ImplicitCastExpr 0x5654000e1b78 <./ltable.h:13:22, col:24> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000e1b58 <col:22, col:24> 'Table *' lvalue
  `-DeclRefExpr 0x5654000e1b30 <ltable.c:293:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
([B1.8]) (ImplicitCastExpr, LValueToRValue, Table *)
  10: MemberExpr 0x5654000e1b90 <./ltable.h:13:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000e1b78 <col:22, col:24> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000e1b58 <col:22, col:24> 'Table *' lvalue
    `-DeclRefExpr 0x5654000e1b30 <ltable.c:293:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B1.9]->node
  11: ImplicitCastExpr 0x5654000e1bf0 <./ltable.h:13:22, col:27> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000e1b90 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000e1b78 <col:22, col:24> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5654000e1b58 <col:22, col:24> 'Table *' lvalue
      `-DeclRefExpr 0x5654000e1b30 <ltable.c:293:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B1.10] (ImplicitCastExpr, LValueToRValue, Node *)
  12: DeclRefExpr 0x5654000e1bc8 <ltable.c:293:26> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
size
  13: ImplicitCastExpr 0x5654000e1c08 <ltable.c:293:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000e1bc8 <col:26> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: ArraySubscriptExpr 0x5654000e1c20 <./ltable.h:13:22, col:33> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x5654000e1bf0 <col:22, col:27> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000e1b90 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000e1b78 <col:22, col:24> 'Table *' <LValueToRValue>
|     `-ParenExpr 0x5654000e1b58 <col:22, col:24> 'Table *' lvalue
|       `-DeclRefExpr 0x5654000e1b30 <ltable.c:293:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
`-ImplicitCastExpr 0x5654000e1c08 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000e1bc8 <col:26> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
[B1.11][[B1.13]]
  15: UnaryOperator 0x5654000e1c48 <./ltable.h:13:21, col:33> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x5654000e1c20 <col:22, col:33> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x5654000e1bf0 <col:22, col:27> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x5654000e1b90 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  |   `-ImplicitCastExpr 0x5654000e1b78 <col:22, col:24> 'Table *' <LValueToRValue>
  |     `-ParenExpr 0x5654000e1b58 <col:22, col:24> 'Table *' lvalue
  |       `-DeclRefExpr 0x5654000e1b30 <ltable.c:293:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
  `-ImplicitCastExpr 0x5654000e1c08 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000e1bc8 <col:26> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
&[B1.14]
  16: DeclRefExpr 0x5654000e1ab8 <ltable.c:293:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
t
  17: ImplicitCastExpr 0x5654000e1ae0 <ltable.c:293:3> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000e1ab8 <col:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B1.16] (ImplicitCastExpr, LValueToRValue, Table *)
  18: MemberExpr 0x5654000e1af8 <ltable.c:293:3, col:6> 'Node *' lvalue ->lastfree 0x56540009adb0
`-ImplicitCastExpr 0x5654000e1ae0 <col:3> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000e1ab8 <col:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B1.17]->lastfree
  19: BinaryOperator 0x5654000e1c88 <ltable.c:293:3, ./ltable.h:13:34> 'Node *' '='
|-MemberExpr 0x5654000e1af8 <ltable.c:293:3, col:6> 'Node *' lvalue ->lastfree 0x56540009adb0
| `-ImplicitCastExpr 0x5654000e1ae0 <col:3> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000e1ab8 <col:3> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
`-ParenExpr 0x5654000e1c68 <./ltable.h:13:20, col:34> 'Node *'
  `-UnaryOperator 0x5654000e1c48 <col:21, col:33> 'Node *' prefix '&'
    `-ArraySubscriptExpr 0x5654000e1c20 <col:22, col:33> 'Node':'struct Node' lvalue
      |-ImplicitCastExpr 0x5654000e1bf0 <col:22, col:27> 'Node *' <LValueToRValue>
      | `-MemberExpr 0x5654000e1b90 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
      |   `-ImplicitCastExpr 0x5654000e1b78 <col:22, col:24> 'Table *' <LValueToRValue>
      |     `-ParenExpr 0x5654000e1b58 <col:22, col:24> 'Table *' lvalue
      |       `-DeclRefExpr 0x5654000e1b30 <ltable.c:293:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
      `-ImplicitCastExpr 0x5654000e1c08 <col:26> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5654000e1bc8 <col:26> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
[B1.18] = ([B1.15])
   Preds (2): B4 B11
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5654000e10b8 <ltable.c:285:23> 'int' lvalue Var 0x5654000debc0 'i' 'int'
i
   2: UnaryOperator 0x5654000e10e0 <ltable.c:285:23, col:24> 'int' postfix '++'
`-DeclRefExpr 0x5654000e10b8 <col:23> 'int' lvalue Var 0x5654000debc0 'i' 'int'
[B2.1]++
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: DeclRefExpr 0x5654000e1170 <ltable.c:286:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000e11b8 <./ltable.h:13:22, col:24> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000e1198 <col:22, col:24> 'Table *' lvalue
  `-DeclRefExpr 0x5654000e1170 <ltable.c:286:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000e11d0 <./ltable.h:13:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000e11b8 <col:22, col:24> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000e1198 <col:22, col:24> 'Table *' lvalue
    `-DeclRefExpr 0x5654000e1170 <ltable.c:286:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B3.2]->node
   4: ImplicitCastExpr 0x5654000e1230 <./ltable.h:13:22, col:27> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000e11d0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000e11b8 <col:22, col:24> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5654000e1198 <col:22, col:24> 'Table *' lvalue
      `-DeclRefExpr 0x5654000e1170 <ltable.c:286:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B3.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: DeclRefExpr 0x5654000e1208 <ltable.c:286:26> 'int' lvalue Var 0x5654000debc0 'i' 'int'
i
   6: ImplicitCastExpr 0x5654000e1248 <ltable.c:286:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000e1208 <col:26> 'int' lvalue Var 0x5654000debc0 'i' 'int'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x5654000e1260 <./ltable.h:13:22, col:33> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x5654000e1230 <col:22, col:27> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000e11d0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000e11b8 <col:22, col:24> 'Table *' <LValueToRValue>
|     `-ParenExpr 0x5654000e1198 <col:22, col:24> 'Table *' lvalue
|       `-DeclRefExpr 0x5654000e1170 <ltable.c:286:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
`-ImplicitCastExpr 0x5654000e1248 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000e1208 <col:26> 'int' lvalue Var 0x5654000debc0 'i' 'int'
[B3.4][[B3.6]]
   8: UnaryOperator 0x5654000e1288 <./ltable.h:13:21, col:33> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x5654000e1260 <col:22, col:33> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x5654000e1230 <col:22, col:27> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x5654000e11d0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  |   `-ImplicitCastExpr 0x5654000e11b8 <col:22, col:24> 'Table *' <LValueToRValue>
  |     `-ParenExpr 0x5654000e1198 <col:22, col:24> 'Table *' lvalue
  |       `-DeclRefExpr 0x5654000e1170 <ltable.c:286:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
  `-ImplicitCastExpr 0x5654000e1248 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000e1208 <col:26> 'int' lvalue Var 0x5654000debc0 'i' 'int'
&[B3.7]
   9: DeclStmt 0x5654000e12c8 <ltable.c:286:7, col:28>col:13
`-VarDecl 0x5654000e1110 <col:7, ./ltable.h:13:34> ltable.c:286:13 used n 'Node *' cinit
  `-ParenExpr 0x5654000e12a8 <./ltable.h:13:20, col:34> 'Node *'
    `-UnaryOperator 0x5654000e1288 <col:21, col:33> 'Node *' prefix '&'
      `-ArraySubscriptExpr 0x5654000e1260 <col:22, col:33> 'Node':'struct Node' lvalue
        |-ImplicitCastExpr 0x5654000e1230 <col:22, col:27> 'Node *' <LValueToRValue>
        | `-MemberExpr 0x5654000e11d0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
        |   `-ImplicitCastExpr 0x5654000e11b8 <col:22, col:24> 'Table *' <LValueToRValue>
        |     `-ParenExpr 0x5654000e1198 <col:22, col:24> 'Table *' lvalue
        |       `-DeclRefExpr 0x5654000e1170 <ltable.c:286:23> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
        `-ImplicitCastExpr 0x5654000e1248 <col:26> 'int' <LValueToRValue>
          `-DeclRefExpr 0x5654000e1208 <col:26> 'int' lvalue Var 0x5654000debc0 'i' 'int'
Node *n = (&(t)->node[i]);
  10: IntegerLiteral 0x5654000e1408 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  11: CStyleCastExpr 0x5654000e1440 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5654000e1408 <col:24> 'int' 0
(void *)[B3.10] (CStyleCastExpr, NullToPointer, void *)
  12: ImplicitCastExpr 0x5654000e1488 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Node *' <NullToPointer>
`-ParenExpr 0x5654000e1468 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5654000e1440 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5654000e1408 <col:24> 'int' 0
([B3.11]) (ImplicitCastExpr, NullToPointer, struct Node *)
  13: DeclRefExpr 0x5654000e12e0 <ltable.c:287:13> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
n
  14: ImplicitCastExpr 0x5654000e1328 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000e1308 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000e12e0 <ltable.c:287:13> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
([B3.13]) (ImplicitCastExpr, LValueToRValue, Node *)
  15: MemberExpr 0x5654000e1340 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000e1328 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000e1308 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000e12e0 <ltable.c:287:13> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
[B3.14]->i_key
  16: MemberExpr 0x5654000e1378 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000e1340 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000e1328 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000e1308 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000e12e0 <ltable.c:287:13> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
[B3.15].nk
  17: MemberExpr 0x5654000e13b0 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000e1378 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000e1340 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000e1328 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000e1308 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000e12e0 <ltable.c:287:13> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
[B3.16].next
  18: BinaryOperator 0x5654000e14a0 <./ltable.h:16:18, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'struct Node *' '='
|-ParenExpr 0x5654000e13e8 <./ltable.h:16:18, col:37> 'struct Node *' lvalue
| `-MemberExpr 0x5654000e13b0 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
|   `-MemberExpr 0x5654000e1378 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|     `-MemberExpr 0x5654000e1340 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|       `-ImplicitCastExpr 0x5654000e1328 <col:19, col:21> 'Node *' <LValueToRValue>
|         `-ParenExpr 0x5654000e1308 <col:19, col:21> 'Node *' lvalue
|           `-DeclRefExpr 0x5654000e12e0 <ltable.c:287:13> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
`-ImplicitCastExpr 0x5654000e1488 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Node *' <NullToPointer>
  `-ParenExpr 0x5654000e1468 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5654000e1440 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5654000e1408 <col:24> 'int' 0
([B3.17]) = [B3.12]
  19: IntegerLiteral 0x5654000e1630 <./lua.h:74:19> 'int' 0
0
  20: DeclRefExpr 0x5654000e14c8 <ltable.c:288:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
n
  21: ImplicitCastExpr 0x5654000e1510 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000e14f0 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000e14c8 <ltable.c:288:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
([B3.20]) (ImplicitCastExpr, LValueToRValue, Node *)
  22: MemberExpr 0x5654000e1528 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000e1510 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000e14f0 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000e14c8 <ltable.c:288:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
[B3.21]->i_key
  23: MemberExpr 0x5654000e1560 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000e1528 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000e1510 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000e14f0 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000e14c8 <ltable.c:288:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
[B3.22].nk
  24: UnaryOperator 0x5654000e1598 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x5654000e1560 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000e1528 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000e1510 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000e14f0 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x5654000e14c8 <ltable.c:288:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
&[B3.23]
  25: MemberExpr 0x5654000e15f8 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x565400098ec0
`-ParenExpr 0x5654000e15d8 <col:27, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-ParenExpr 0x5654000e15b8 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-UnaryOperator 0x5654000e1598 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
      `-MemberExpr 0x5654000e1560 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
        `-MemberExpr 0x5654000e1528 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000e1510 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000e14f0 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x5654000e14c8 <ltable.c:288:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
(([B3.24]))->tt
  26: BinaryOperator 0x5654000e1650 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x5654000e15f8 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x565400098ec0
| `-ParenExpr 0x5654000e15d8 <col:27, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *'
|   `-ParenExpr 0x5654000e15b8 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
|     `-UnaryOperator 0x5654000e1598 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
|       `-MemberExpr 0x5654000e1560 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|         `-MemberExpr 0x5654000e1528 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|           `-ImplicitCastExpr 0x5654000e1510 <col:20, col:22> 'Node *' <LValueToRValue>
|             `-ParenExpr 0x5654000e14f0 <col:20, col:22> 'Node *' lvalue
|               `-DeclRefExpr 0x5654000e14c8 <ltable.c:288:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
`-IntegerLiteral 0x5654000e1630 <./lua.h:74:19> 'int' 0
[B3.25] = [B3.19]
  27: IntegerLiteral 0x5654000e17c8 <./lua.h:74:19> 'int' 0
0
  28: DeclRefExpr 0x5654000e1698 <ltable.c:289:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
n
  29: ImplicitCastExpr 0x5654000e16e0 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000e16c0 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000e1698 <ltable.c:289:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
([B3.28]) (ImplicitCastExpr, LValueToRValue, Node *)
  30: MemberExpr 0x5654000e16f8 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ImplicitCastExpr 0x5654000e16e0 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000e16c0 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000e1698 <ltable.c:289:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
[B3.29]->i_val
  31: UnaryOperator 0x5654000e1730 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000e16f8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ImplicitCastExpr 0x5654000e16e0 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000e16c0 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000e1698 <ltable.c:289:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
&[B3.30]
  32: MemberExpr 0x5654000e1790 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000e1770 <col:27, col:31> 'TValue *'
  `-ParenExpr 0x5654000e1750 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x5654000e1730 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000e16f8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
        `-ImplicitCastExpr 0x5654000e16e0 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000e16c0 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x5654000e1698 <ltable.c:289:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
(([B3.31]))->tt
  33: BinaryOperator 0x5654000e17e8 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x5654000e1790 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x5654000899e0
| `-ParenExpr 0x5654000e1770 <col:27, col:31> 'TValue *'
|   `-ParenExpr 0x5654000e1750 <./ltable.h:15:18, col:30> 'TValue *'
|     `-UnaryOperator 0x5654000e1730 <col:19, col:25> 'TValue *' prefix '&'
|       `-MemberExpr 0x5654000e16f8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
|         `-ImplicitCastExpr 0x5654000e16e0 <col:20, col:22> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000e16c0 <col:20, col:22> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000e1698 <ltable.c:289:24> 'Node *' lvalue Var 0x5654000e1110 'n' 'Node *'
`-IntegerLiteral 0x5654000e17c8 <./lua.h:74:19> 'int' 0
[B3.32] = [B3.27]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5654000e1010 <ltable.c:285:15> 'int' lvalue Var 0x5654000debc0 'i' 'int'
i
   2: ImplicitCastExpr 0x5654000e1060 <ltable.c:285:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000e1010 <col:15> 'int' lvalue Var 0x5654000debc0 'i' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5654000e1038 <ltable.c:285:17> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
size
   4: ImplicitCastExpr 0x5654000e1078 <ltable.c:285:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000e1038 <col:17> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5654000e1090 <ltable.c:285:15, col:17> 'int' '<'
|-ImplicitCastExpr 0x5654000e1060 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000e1010 <col:15> 'int' lvalue Var 0x5654000debc0 'i' 'int'
`-ImplicitCastExpr 0x5654000e1078 <col:17> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000e1038 <col:17> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
[B4.2] < [B4.4]
   T: for (...; [B4.5]; ...)
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: ConditionalOperator 0x5654000e0e80 <./lmem.h:20:3, line:22:16> 'void *'
|-ParenExpr 0x5654000e0a88 <line:20:3, col:40> 'int'
| `-BinaryOperator 0x5654000e0a60 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|   |-ParenExpr 0x5654000e0848 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
|   | `-CStyleCastExpr 0x5654000e0820 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   |   `-ParenExpr 0x5654000e0800 <col:26, col:30> 'int'
|   |     `-BinaryOperator 0x5654000e0798 <./lmem.h:20:17, col:21> 'int' '+'
|   |       |-ImplicitCastExpr 0x5654000e0780 <col:17, col:19> 'int' <LValueToRValue>
|   |       | `-ParenExpr 0x5654000e0740 <col:17, col:19> 'int' lvalue
|   |       |   `-DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
|   |       `-IntegerLiteral 0x5654000e0760 <./lmem.h:20:21> 'int' 1
|   `-BinaryOperator 0x5654000e0a38 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|     |-ParenExpr 0x5654000e09c8 <./llimits.h:30:19, col:42> 'unsigned long'
|     | `-BinaryOperator 0x5654000e09a0 <col:20, col:41> 'unsigned long' '-'
|     |   |-CStyleCastExpr 0x5654000e0940 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|     |   | `-ParenExpr 0x5654000e0920 <col:28, col:39> 'size_t':'unsigned long'
|     |   |   `-UnaryOperator 0x5654000e08c0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     |   |     `-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|     |   |       `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
|     |   `-ImplicitCastExpr 0x5654000e0988 <col:41> 'unsigned long' <IntegralCast>
|     |     `-IntegerLiteral 0x5654000e0968 <col:41> 'int' 2
|     `-ParenExpr 0x5654000e0a18 <./lmem.h:20:37, col:39> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0x5654000e09f8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
|-CallExpr 0x5654000e0d70 <line:21:3, col:42> 'void *'
| |-ImplicitCastExpr 0x5654000e0d58 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5654000e0aa8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x5654000a3c28 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
| |-ImplicitCastExpr 0x5654000e0db8 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x5654000e0ad0 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
| |-ParenExpr 0x5654000e0b78 <./lmem.h:21:20, col:22> 'void *'
| | `-ParenExpr 0x5654000e0b58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
| |   `-CStyleCastExpr 0x5654000e0b30 <col:17, col:24> 'void *' <NullToPointer>
| |     `-IntegerLiteral 0x5654000e0af8 <col:24> 'int' 0
| |-BinaryOperator 0x5654000e0c40 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| | |-ImplicitCastExpr 0x5654000e0c28 <col:25, col:28> 'unsigned long' <IntegralCast>
| | | `-ParenExpr 0x5654000e0bb8 <col:25, col:28> 'int'
| | |   `-IntegerLiteral 0x5654000e0b98 <line:31:36> 'int' 0
| | `-ParenExpr 0x5654000e0c08 <line:21:30, col:32> 'unsigned long'
| |   `-UnaryExprOrTypeTraitExpr 0x5654000e0be8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
| `-BinaryOperator 0x5654000e0d30 <line:21:35, col:41> 'unsigned long' '*'
|   |-ImplicitCastExpr 0x5654000e0d18 <col:35, col:37> 'unsigned long' <IntegralCast>
|   | `-ImplicitCastExpr 0x5654000e0d00 <col:35, col:37> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x5654000e0c90 <col:35, col:37> 'int' lvalue
|   |     `-DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
|   `-ParenExpr 0x5654000e0ce0 <./lmem.h:21:39, col:41> 'unsigned long'
|     `-UnaryExprOrTypeTraitExpr 0x5654000e0cc0 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
`-CallExpr 0x5654000e0e38 <line:22:3, col:16> 'void *'
  |-ImplicitCastExpr 0x5654000e0e20 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000e0dd0 <col:3> 'void *(lua_State *)' Function 0x5654000a3e78 'luaM_toobig' 'void *(lua_State *)'
  `-ImplicitCastExpr 0x5654000e0e68 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5654000e0df8 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
([B8.21]) ? [B6.16] : [B7.5]
   2: CStyleCastExpr 0x5654000e0f30 <./llimits.h:75:23, col:30> 'Node *' <BitCast>
`-ParenExpr 0x5654000e0f10 <col:26, col:30> 'void *'
  `-ParenExpr 0x5654000e0eb0 <./lmem.h:20:2, line:22:17> 'void *'
    `-ConditionalOperator 0x5654000e0e80 <line:20:3, line:22:16> 'void *'
      |-ParenExpr 0x5654000e0a88 <line:20:3, col:40> 'int'
      | `-BinaryOperator 0x5654000e0a60 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
      |   |-ParenExpr 0x5654000e0848 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
      |   | `-CStyleCastExpr 0x5654000e0820 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
      |   |   `-ParenExpr 0x5654000e0800 <col:26, col:30> 'int'
      |   |     `-BinaryOperator 0x5654000e0798 <./lmem.h:20:17, col:21> 'int' '+'
      |   |       |-ImplicitCastExpr 0x5654000e0780 <col:17, col:19> 'int' <LValueToRValue>
      |   |       | `-ParenExpr 0x5654000e0740 <col:17, col:19> 'int' lvalue
      |   |       |   `-DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
      |   |       `-IntegerLiteral 0x5654000e0760 <./lmem.h:20:21> 'int' 1
      |   `-BinaryOperator 0x5654000e0a38 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
      |     |-ParenExpr 0x5654000e09c8 <./llimits.h:30:19, col:42> 'unsigned long'
      |     | `-BinaryOperator 0x5654000e09a0 <col:20, col:41> 'unsigned long' '-'
      |     |   |-CStyleCastExpr 0x5654000e0940 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
      |     |   | `-ParenExpr 0x5654000e0920 <col:28, col:39> 'size_t':'unsigned long'
      |     |   |   `-UnaryOperator 0x5654000e08c0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
      |     |   |     `-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      |     |   |       `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
      |     |   `-ImplicitCastExpr 0x5654000e0988 <col:41> 'unsigned long' <IntegralCast>
      |     |     `-IntegerLiteral 0x5654000e0968 <col:41> 'int' 2
      |     `-ParenExpr 0x5654000e0a18 <./lmem.h:20:37, col:39> 'unsigned long'
      |       `-UnaryExprOrTypeTraitExpr 0x5654000e09f8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
      |-CallExpr 0x5654000e0d70 <line:21:3, col:42> 'void *'
      | |-ImplicitCastExpr 0x5654000e0d58 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x5654000e0aa8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x5654000a3c28 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
      | |-ImplicitCastExpr 0x5654000e0db8 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
      | | `-DeclRefExpr 0x5654000e0ad0 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
      | |-ParenExpr 0x5654000e0b78 <./lmem.h:21:20, col:22> 'void *'
      | | `-ParenExpr 0x5654000e0b58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
      | |   `-CStyleCastExpr 0x5654000e0b30 <col:17, col:24> 'void *' <NullToPointer>
      | |     `-IntegerLiteral 0x5654000e0af8 <col:24> 'int' 0
      | |-BinaryOperator 0x5654000e0c40 <./lmem.h:21:25, col:32> 'unsigned long' '*'
      | | |-ImplicitCastExpr 0x5654000e0c28 <col:25, col:28> 'unsigned long' <IntegralCast>
      | | | `-ParenExpr 0x5654000e0bb8 <col:25, col:28> 'int'
      | | |   `-IntegerLiteral 0x5654000e0b98 <line:31:36> 'int' 0
      | | `-ParenExpr 0x5654000e0c08 <line:21:30, col:32> 'unsigned long'
      | |   `-UnaryExprOrTypeTraitExpr 0x5654000e0be8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
      | `-BinaryOperator 0x5654000e0d30 <line:21:35, col:41> 'unsigned long' '*'
      |   |-ImplicitCastExpr 0x5654000e0d18 <col:35, col:37> 'unsigned long' <IntegralCast>
      |   | `-ImplicitCastExpr 0x5654000e0d00 <col:35, col:37> 'int' <LValueToRValue>
      |   |   `-ParenExpr 0x5654000e0c90 <col:35, col:37> 'int' lvalue
      |   |     `-DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
      |   `-ParenExpr 0x5654000e0ce0 <./lmem.h:21:39, col:41> 'unsigned long'
      |     `-UnaryExprOrTypeTraitExpr 0x5654000e0cc0 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
      `-CallExpr 0x5654000e0e38 <line:22:3, col:16> 'void *'
        |-ImplicitCastExpr 0x5654000e0e20 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5654000e0dd0 <col:3> 'void *(lua_State *)' Function 0x5654000a3e78 'luaM_toobig' 'void *(lua_State *)'
        `-ImplicitCastExpr 0x5654000e0e68 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5654000e0df8 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
(Node *)(([B5.1])) (CStyleCastExpr, BitCast, Node *)
   3: DeclRefExpr 0x5654000e06a0 <ltable.c:284:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000e06c8 <ltable.c:284:5> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000e06a0 <col:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B5.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: MemberExpr 0x5654000e06e0 <ltable.c:284:5, col:8> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000e06c8 <col:5> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000e06a0 <col:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B5.4]->node
   6: BinaryOperator 0x5654000e0f78 <ltable.c:284:5, ./llimits.h:75:31> 'Node *' '='
|-MemberExpr 0x5654000e06e0 <ltable.c:284:5, col:8> 'Node *' lvalue ->node 0x56540009ad58
| `-ImplicitCastExpr 0x5654000e06c8 <col:5> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000e06a0 <col:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
`-ParenExpr 0x5654000e0f58 <./llimits.h:75:22, col:31> 'Node *'
  `-CStyleCastExpr 0x5654000e0f30 <col:23, col:30> 'Node *' <BitCast>
    `-ParenExpr 0x5654000e0f10 <col:26, col:30> 'void *'
      `-ParenExpr 0x5654000e0eb0 <./lmem.h:20:2, line:22:17> 'void *'
        `-ConditionalOperator 0x5654000e0e80 <line:20:3, line:22:16> 'void *'
          |-ParenExpr 0x5654000e0a88 <line:20:3, col:40> 'int'
          | `-BinaryOperator 0x5654000e0a60 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
          |   |-ParenExpr 0x5654000e0848 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
          |   | `-CStyleCastExpr 0x5654000e0820 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
          |   |   `-ParenExpr 0x5654000e0800 <col:26, col:30> 'int'
          |   |     `-BinaryOperator 0x5654000e0798 <./lmem.h:20:17, col:21> 'int' '+'
          |   |       |-ImplicitCastExpr 0x5654000e0780 <col:17, col:19> 'int' <LValueToRValue>
          |   |       | `-ParenExpr 0x5654000e0740 <col:17, col:19> 'int' lvalue
          |   |       |   `-DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
          |   |       `-IntegerLiteral 0x5654000e0760 <./lmem.h:20:21> 'int' 1
          |   `-BinaryOperator 0x5654000e0a38 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
          |     |-ParenExpr 0x5654000e09c8 <./llimits.h:30:19, col:42> 'unsigned long'
          |     | `-BinaryOperator 0x5654000e09a0 <col:20, col:41> 'unsigned long' '-'
          |     |   |-CStyleCastExpr 0x5654000e0940 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
          |     |   | `-ParenExpr 0x5654000e0920 <col:28, col:39> 'size_t':'unsigned long'
          |     |   |   `-UnaryOperator 0x5654000e08c0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
          |     |   |     `-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
          |     |   |       `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
          |     |   `-ImplicitCastExpr 0x5654000e0988 <col:41> 'unsigned long' <IntegralCast>
          |     |     `-IntegerLiteral 0x5654000e0968 <col:41> 'int' 2
          |     `-ParenExpr 0x5654000e0a18 <./lmem.h:20:37, col:39> 'unsigned long'
          |       `-UnaryExprOrTypeTraitExpr 0x5654000e09f8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
          |-CallExpr 0x5654000e0d70 <line:21:3, col:42> 'void *'
          | |-ImplicitCastExpr 0x5654000e0d58 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x5654000e0aa8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x5654000a3c28 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
          | |-ImplicitCastExpr 0x5654000e0db8 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
          | | `-DeclRefExpr 0x5654000e0ad0 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
          | |-ParenExpr 0x5654000e0b78 <./lmem.h:21:20, col:22> 'void *'
          | | `-ParenExpr 0x5654000e0b58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
          | |   `-CStyleCastExpr 0x5654000e0b30 <col:17, col:24> 'void *' <NullToPointer>
          | |     `-IntegerLiteral 0x5654000e0af8 <col:24> 'int' 0
          | |-BinaryOperator 0x5654000e0c40 <./lmem.h:21:25, col:32> 'unsigned long' '*'
          | | |-ImplicitCastExpr 0x5654000e0c28 <col:25, col:28> 'unsigned long' <IntegralCast>
          | | | `-ParenExpr 0x5654000e0bb8 <col:25, col:28> 'int'
          | | |   `-IntegerLiteral 0x5654000e0b98 <line:31:36> 'int' 0
          | | `-ParenExpr 0x5654000e0c08 <line:21:30, col:32> 'unsigned long'
          | |   `-UnaryExprOrTypeTraitExpr 0x5654000e0be8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
          | `-BinaryOperator 0x5654000e0d30 <line:21:35, col:41> 'unsigned long' '*'
          |   |-ImplicitCastExpr 0x5654000e0d18 <col:35, col:37> 'unsigned long' <IntegralCast>
          |   | `-ImplicitCastExpr 0x5654000e0d00 <col:35, col:37> 'int' <LValueToRValue>
          |   |   `-ParenExpr 0x5654000e0c90 <col:35, col:37> 'int' lvalue
          |   |     `-DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
          |   `-ParenExpr 0x5654000e0ce0 <./lmem.h:21:39, col:41> 'unsigned long'
          |     `-UnaryExprOrTypeTraitExpr 0x5654000e0cc0 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
          `-CallExpr 0x5654000e0e38 <line:22:3, col:16> 'void *'
            |-ImplicitCastExpr 0x5654000e0e20 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x5654000e0dd0 <col:3> 'void *(lua_State *)' Function 0x5654000a3e78 'luaM_toobig' 'void *(lua_State *)'
            `-ImplicitCastExpr 0x5654000e0e68 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x5654000e0df8 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
[B5.5] = ([B5.2])
   7: IntegerLiteral 0x5654000e0fc8 <ltable.c:285:12> 'int' 0
0
   8: DeclRefExpr 0x5654000e0fa0 <ltable.c:285:10> 'int' lvalue Var 0x5654000debc0 'i' 'int'
i
   9: BinaryOperator 0x5654000e0fe8 <ltable.c:285:10, col:12> 'int' '='
|-DeclRefExpr 0x5654000e0fa0 <col:10> 'int' lvalue Var 0x5654000debc0 'i' 'int'
`-IntegerLiteral 0x5654000e0fc8 <col:12> 'int' 0
[B5.8] = [B5.7]
   Preds (2): B6 B7
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x5654000e0aa8 <./lmem.h:21:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x5654000a3c28 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
luaM_realloc_
   2: ImplicitCastExpr 0x5654000e0d58 <./lmem.h:21:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000e0aa8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x5654000a3c28 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, size_t, size_t))
   3: DeclRefExpr 0x5654000e0ad0 <ltable.c:284:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000e0db8 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000e0ad0 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5654000e0af8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x5654000e0b30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5654000e0af8 <col:24> 'int' 0
(void *)[B6.5] (CStyleCastExpr, NullToPointer, void *)
   7: IntegerLiteral 0x5654000e0b98 <./lmem.h:31:36> 'int' 0
0
   8: ImplicitCastExpr 0x5654000e0c28 <./lmem.h:21:25, col:28> 'unsigned long' <IntegralCast>
`-ParenExpr 0x5654000e0bb8 <col:25, col:28> 'int'
  `-IntegerLiteral 0x5654000e0b98 <line:31:36> 'int' 0
([B6.7]) (ImplicitCastExpr, IntegralCast, unsigned long)
   9: UnaryExprOrTypeTraitExpr 0x5654000e0be8 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
sizeof(Node)
  10: BinaryOperator 0x5654000e0c40 <./lmem.h:21:25, col:32> 'unsigned long' '*'
|-ImplicitCastExpr 0x5654000e0c28 <col:25, col:28> 'unsigned long' <IntegralCast>
| `-ParenExpr 0x5654000e0bb8 <col:25, col:28> 'int'
|   `-IntegerLiteral 0x5654000e0b98 <line:31:36> 'int' 0
`-ParenExpr 0x5654000e0c08 <line:21:30, col:32> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x5654000e0be8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
[B6.8] * ([B6.9])
  11: DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
size
  12: ImplicitCastExpr 0x5654000e0d00 <./lmem.h:21:35, col:37> 'int' <LValueToRValue>
`-ParenExpr 0x5654000e0c90 <col:35, col:37> 'int' lvalue
  `-DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
([B6.11]) (ImplicitCastExpr, LValueToRValue, int)
  13: ImplicitCastExpr 0x5654000e0d18 <./lmem.h:21:35, col:37> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x5654000e0d00 <col:35, col:37> 'int' <LValueToRValue>
  `-ParenExpr 0x5654000e0c90 <col:35, col:37> 'int' lvalue
    `-DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
[B6.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: UnaryExprOrTypeTraitExpr 0x5654000e0cc0 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
sizeof(Node)
  15: BinaryOperator 0x5654000e0d30 <./lmem.h:21:35, col:41> 'unsigned long' '*'
|-ImplicitCastExpr 0x5654000e0d18 <col:35, col:37> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x5654000e0d00 <col:35, col:37> 'int' <LValueToRValue>
|   `-ParenExpr 0x5654000e0c90 <col:35, col:37> 'int' lvalue
|     `-DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
`-ParenExpr 0x5654000e0ce0 <./lmem.h:21:39, col:41> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x5654000e0cc0 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
[B6.13] * ([B6.14])
  16: CallExpr 0x5654000e0d70 <./lmem.h:21:3, col:42> 'void *'
|-ImplicitCastExpr 0x5654000e0d58 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000e0aa8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x5654000a3c28 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
|-ImplicitCastExpr 0x5654000e0db8 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000e0ad0 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
|-ParenExpr 0x5654000e0b78 <./lmem.h:21:20, col:22> 'void *'
| `-ParenExpr 0x5654000e0b58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
|   `-CStyleCastExpr 0x5654000e0b30 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5654000e0af8 <col:24> 'int' 0
|-BinaryOperator 0x5654000e0c40 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| |-ImplicitCastExpr 0x5654000e0c28 <col:25, col:28> 'unsigned long' <IntegralCast>
| | `-ParenExpr 0x5654000e0bb8 <col:25, col:28> 'int'
| |   `-IntegerLiteral 0x5654000e0b98 <line:31:36> 'int' 0
| `-ParenExpr 0x5654000e0c08 <line:21:30, col:32> 'unsigned long'
|   `-UnaryExprOrTypeTraitExpr 0x5654000e0be8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
`-BinaryOperator 0x5654000e0d30 <line:21:35, col:41> 'unsigned long' '*'
  |-ImplicitCastExpr 0x5654000e0d18 <col:35, col:37> 'unsigned long' <IntegralCast>
  | `-ImplicitCastExpr 0x5654000e0d00 <col:35, col:37> 'int' <LValueToRValue>
  |   `-ParenExpr 0x5654000e0c90 <col:35, col:37> 'int' lvalue
  |     `-DeclRefExpr 0x5654000e0c68 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
  `-ParenExpr 0x5654000e0ce0 <./lmem.h:21:39, col:41> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x5654000e0cc0 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
[B6.2]([B6.4], (([B6.6])), [B6.10], [B6.15])
   Preds (1): B8
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5654000e0dd0 <./lmem.h:22:3> 'void *(lua_State *)' Function 0x5654000a3e78 'luaM_toobig' 'void *(lua_State *)'
luaM_toobig
   2: ImplicitCastExpr 0x5654000e0e20 <./lmem.h:22:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000e0dd0 <col:3> 'void *(lua_State *)' Function 0x5654000a3e78 'luaM_toobig' 'void *(lua_State *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *))
   3: DeclRefExpr 0x5654000e0df8 <ltable.c:284:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000e0e68 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000e0df8 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x5654000e0e38 <./lmem.h:22:3, col:16> 'void *'
|-ImplicitCastExpr 0x5654000e0e20 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000e0dd0 <col:3> 'void *(lua_State *)' Function 0x5654000a3e78 'luaM_toobig' 'void *(lua_State *)'
`-ImplicitCastExpr 0x5654000e0e68 <ltable.c:284:30> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5654000e0df8 <col:30> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
[B7.2]([B7.4])
   Preds (1): B8
   Succs (1): B5

 [B8]
   1: IntegerLiteral 0x5654000e05b0 <./lobject.h:359:19> 'int' 1
1
   2: DeclRefExpr 0x5654000e05d0 <ltable.c:283:18> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
lsize
   3: ImplicitCastExpr 0x5654000e0618 <./lobject.h:359:22, col:24> 'int' <LValueToRValue>
`-ParenExpr 0x5654000e05f8 <col:22, col:24> 'int' lvalue
  `-DeclRefExpr 0x5654000e05d0 <ltable.c:283:18> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
([B8.2]) (ImplicitCastExpr, LValueToRValue, int)
   4: BinaryOperator 0x5654000e0630 <./lobject.h:359:19, col:24> 'int' '<<'
|-IntegerLiteral 0x5654000e05b0 <col:19> 'int' 1
`-ImplicitCastExpr 0x5654000e0618 <col:22, col:24> 'int' <LValueToRValue>
  `-ParenExpr 0x5654000e05f8 <col:22, col:24> 'int' lvalue
    `-DeclRefExpr 0x5654000e05d0 <ltable.c:283:18> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
[B8.1] << [B8.3]
   5: DeclRefExpr 0x5654000e0588 <ltable.c:283:5> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
size
   6: BinaryOperator 0x5654000e0678 <ltable.c:283:5, ./lobject.h:359:25> 'int' '='
|-DeclRefExpr 0x5654000e0588 <ltable.c:283:5> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
`-ParenExpr 0x5654000e0658 <./lobject.h:359:18, col:25> 'int'
  `-BinaryOperator 0x5654000e0630 <col:19, col:24> 'int' '<<'
    |-IntegerLiteral 0x5654000e05b0 <col:19> 'int' 1
    `-ImplicitCastExpr 0x5654000e0618 <col:22, col:24> 'int' <LValueToRValue>
      `-ParenExpr 0x5654000e05f8 <col:22, col:24> 'int' lvalue
        `-DeclRefExpr 0x5654000e05d0 <ltable.c:283:18> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
[B8.5] = ([B8.4])
   7: DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
size
   8: ImplicitCastExpr 0x5654000e0780 <./lmem.h:20:17, col:19> 'int' <LValueToRValue>
`-ParenExpr 0x5654000e0740 <col:17, col:19> 'int' lvalue
  `-DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
([B8.7]) (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x5654000e0760 <./lmem.h:20:21> 'int' 1
1
  10: BinaryOperator 0x5654000e0798 <./lmem.h:20:17, col:21> 'int' '+'
|-ImplicitCastExpr 0x5654000e0780 <col:17, col:19> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000e0740 <col:17, col:19> 'int' lvalue
|   `-DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
`-IntegerLiteral 0x5654000e0760 <./lmem.h:20:21> 'int' 1
[B8.8] + [B8.9]
  11: CStyleCastExpr 0x5654000e0820 <./llimits.h:75:23, col:30> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x5654000e0800 <col:26, col:30> 'int'
  `-BinaryOperator 0x5654000e0798 <./lmem.h:20:17, col:21> 'int' '+'
    |-ImplicitCastExpr 0x5654000e0780 <col:17, col:19> 'int' <LValueToRValue>
    | `-ParenExpr 0x5654000e0740 <col:17, col:19> 'int' lvalue
    |   `-DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
    `-IntegerLiteral 0x5654000e0760 <./lmem.h:20:21> 'int' 1
(size_t)([B8.10]) (CStyleCastExpr, IntegralCast, size_t)
  12: IntegerLiteral 0x5654000e0868 <./llimits.h:30:38> 'int' 0
0
  13: CStyleCastExpr 0x5654000e0898 <./llimits.h:30:30, col:38> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
(size_t)[B8.12] (CStyleCastExpr, IntegralCast, size_t)
  14: UnaryOperator 0x5654000e08c0 <./llimits.h:30:29, col:38> 'size_t':'unsigned long' prefix '~'
`-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
~[B8.13]
  15: CStyleCastExpr 0x5654000e0940 <./llimits.h:30:20, col:39> 'size_t':'unsigned long' <NoOp>
`-ParenExpr 0x5654000e0920 <col:28, col:39> 'size_t':'unsigned long'
  `-UnaryOperator 0x5654000e08c0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
    `-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
(size_t)([B8.14]) (CStyleCastExpr, NoOp, size_t)
  16: IntegerLiteral 0x5654000e0968 <./llimits.h:30:41> 'int' 2
2
  17: ImplicitCastExpr 0x5654000e0988 <./llimits.h:30:41> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x5654000e0968 <col:41> 'int' 2
[B8.16] (ImplicitCastExpr, IntegralCast, unsigned long)
  18: BinaryOperator 0x5654000e09a0 <./llimits.h:30:20, col:41> 'unsigned long' '-'
|-CStyleCastExpr 0x5654000e0940 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
| `-ParenExpr 0x5654000e0920 <col:28, col:39> 'size_t':'unsigned long'
|   `-UnaryOperator 0x5654000e08c0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     `-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
`-ImplicitCastExpr 0x5654000e0988 <col:41> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x5654000e0968 <col:41> 'int' 2
[B8.15] - [B8.17]
  19: UnaryExprOrTypeTraitExpr 0x5654000e09f8 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
sizeof(Node)
  20: BinaryOperator 0x5654000e0a38 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|-ParenExpr 0x5654000e09c8 <./llimits.h:30:19, col:42> 'unsigned long'
| `-BinaryOperator 0x5654000e09a0 <col:20, col:41> 'unsigned long' '-'
|   |-CStyleCastExpr 0x5654000e0940 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   | `-ParenExpr 0x5654000e0920 <col:28, col:39> 'size_t':'unsigned long'
|   |   `-UnaryOperator 0x5654000e08c0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |     `-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
|   `-ImplicitCastExpr 0x5654000e0988 <col:41> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x5654000e0968 <col:41> 'int' 2
`-ParenExpr 0x5654000e0a18 <./lmem.h:20:37, col:39> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x5654000e09f8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
([B8.18]) / ([B8.19])
  21: BinaryOperator 0x5654000e0a60 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|-ParenExpr 0x5654000e0848 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
| `-CStyleCastExpr 0x5654000e0820 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   `-ParenExpr 0x5654000e0800 <col:26, col:30> 'int'
|     `-BinaryOperator 0x5654000e0798 <./lmem.h:20:17, col:21> 'int' '+'
|       |-ImplicitCastExpr 0x5654000e0780 <col:17, col:19> 'int' <LValueToRValue>
|       | `-ParenExpr 0x5654000e0740 <col:17, col:19> 'int' lvalue
|       |   `-DeclRefExpr 0x5654000e0718 <ltable.c:284:33> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
|       `-IntegerLiteral 0x5654000e0760 <./lmem.h:20:21> 'int' 1
`-BinaryOperator 0x5654000e0a38 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
  |-ParenExpr 0x5654000e09c8 <./llimits.h:30:19, col:42> 'unsigned long'
  | `-BinaryOperator 0x5654000e09a0 <col:20, col:41> 'unsigned long' '-'
  |   |-CStyleCastExpr 0x5654000e0940 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
  |   | `-ParenExpr 0x5654000e0920 <col:28, col:39> 'size_t':'unsigned long'
  |   |   `-UnaryOperator 0x5654000e08c0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
  |   |     `-CStyleCastExpr 0x5654000e0898 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  |   |       `-IntegerLiteral 0x5654000e0868 <col:38> 'int' 0
  |   `-ImplicitCastExpr 0x5654000e0988 <col:41> 'unsigned long' <IntegralCast>
  |     `-IntegerLiteral 0x5654000e0968 <col:41> 'int' 2
  `-ParenExpr 0x5654000e0a18 <./lmem.h:20:37, col:39> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x5654000e09f8 <line:31:42, col:50> 'unsigned long' sizeof 'Node':'struct Node'
([B8.11]) <= [B8.20]
   T: ([B8.21]) ? ... : ...
   Preds (2): B9 B10
   Succs (2): B6 B7

 [B9]
   1: DeclRefExpr 0x5654000deea8 <ltable.c:282:7> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x5654000def70 <ltable.c:282:7> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000deea8 <col:7> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5654000deed0 <ltable.c:282:21> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000defc0 <ltable.c:282:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000deed0 <col:21> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5654000def38 <ltable.c:282:24> 'char [15]' lvalue "table overflow"
"table overflow"
   6: ImplicitCastExpr 0x5654000e0520 <ltable.c:282:24> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5654000def38 <col:24> 'char [15]' lvalue "table overflow"
[B9.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5654000e0538 <ltable.c:282:24> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5654000e0520 <col:24> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5654000def38 <col:24> 'char [15]' lvalue "table overflow"
[B9.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5654000def88 <ltable.c:282:7, col:40> 'void'
|-ImplicitCastExpr 0x5654000def70 <col:7> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000deea8 <col:7> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5654000defc0 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000deed0 <col:21> 'lua_State *' lvalue ParmVar 0x5654000de5c0 'L' 'lua_State *'
`-ImplicitCastExpr 0x5654000e0538 <col:24> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5654000e0520 <col:24> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5654000def38 <col:24> 'char [15]' lvalue "table overflow"
[B9.2]([B9.4], [B9.7])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclStmt 0x5654000dec20 <ltable.c:279:5, col:10>col:9
`-VarDecl 0x5654000debc0 <col:5, col:9> col:9 used i 'int'
int i;
   2: DeclRefExpr 0x5654000dec60 <./lobject.h:367:22> 'int (unsigned int)' Function 0x56540009b178 'luaO_log2' 'int (unsigned int)'
luaO_log2
   3: ImplicitCastExpr 0x5654000ded30 <./lobject.h:367:22> 'int (*)(unsigned int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000dec60 <col:22> 'int (unsigned int)' Function 0x56540009b178 'luaO_log2' 'int (unsigned int)'
[B10.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(unsigned int))
   4: DeclRefExpr 0x5654000dec88 <ltable.c:280:22> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
size
   5: ImplicitCastExpr 0x5654000decf0 <./lobject.h:367:32, col:34> 'int' <LValueToRValue>
`-ParenExpr 0x5654000decb0 <col:32, col:34> 'int' lvalue
  `-DeclRefExpr 0x5654000dec88 <ltable.c:280:22> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
([B10.4]) (ImplicitCastExpr, LValueToRValue, int)
   6: IntegerLiteral 0x5654000decd0 <./lobject.h:367:36> 'int' 1
1
   7: BinaryOperator 0x5654000ded08 <./lobject.h:367:32, col:36> 'int' '-'
|-ImplicitCastExpr 0x5654000decf0 <col:32, col:34> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000decb0 <col:32, col:34> 'int' lvalue
|   `-DeclRefExpr 0x5654000dec88 <ltable.c:280:22> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
`-IntegerLiteral 0x5654000decd0 <./lobject.h:367:36> 'int' 1
[B10.5] - [B10.6]
   8: ImplicitCastExpr 0x5654000ded78 <./lobject.h:367:32, col:36> 'unsigned int' <IntegralCast>
`-BinaryOperator 0x5654000ded08 <col:32, col:36> 'int' '-'
  |-ImplicitCastExpr 0x5654000decf0 <col:32, col:34> 'int' <LValueToRValue>
  | `-ParenExpr 0x5654000decb0 <col:32, col:34> 'int' lvalue
  |   `-DeclRefExpr 0x5654000dec88 <ltable.c:280:22> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
  `-IntegerLiteral 0x5654000decd0 <./lobject.h:367:36> 'int' 1
[B10.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: CallExpr 0x5654000ded48 <./lobject.h:367:22, col:37> 'int'
|-ImplicitCastExpr 0x5654000ded30 <col:22> 'int (*)(unsigned int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000dec60 <col:22> 'int (unsigned int)' Function 0x56540009b178 'luaO_log2' 'int (unsigned int)'
`-ImplicitCastExpr 0x5654000ded78 <col:32, col:36> 'unsigned int' <IntegralCast>
  `-BinaryOperator 0x5654000ded08 <col:32, col:36> 'int' '-'
    |-ImplicitCastExpr 0x5654000decf0 <col:32, col:34> 'int' <LValueToRValue>
    | `-ParenExpr 0x5654000decb0 <col:32, col:34> 'int' lvalue
    |   `-DeclRefExpr 0x5654000dec88 <ltable.c:280:22> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
    `-IntegerLiteral 0x5654000decd0 <./lobject.h:367:36> 'int' 1
[B10.3]([B10.8])
  10: IntegerLiteral 0x5654000ded90 <./lobject.h:367:41> 'int' 1
1
  11: BinaryOperator 0x5654000dedb0 <./lobject.h:367:22, col:41> 'int' '+'
|-CallExpr 0x5654000ded48 <col:22, col:37> 'int'
| |-ImplicitCastExpr 0x5654000ded30 <col:22> 'int (*)(unsigned int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5654000dec60 <col:22> 'int (unsigned int)' Function 0x56540009b178 'luaO_log2' 'int (unsigned int)'
| `-ImplicitCastExpr 0x5654000ded78 <col:32, col:36> 'unsigned int' <IntegralCast>
|   `-BinaryOperator 0x5654000ded08 <col:32, col:36> 'int' '-'
|     |-ImplicitCastExpr 0x5654000decf0 <col:32, col:34> 'int' <LValueToRValue>
|     | `-ParenExpr 0x5654000decb0 <col:32, col:34> 'int' lvalue
|     |   `-DeclRefExpr 0x5654000dec88 <ltable.c:280:22> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
|     `-IntegerLiteral 0x5654000decd0 <./lobject.h:367:36> 'int' 1
`-IntegerLiteral 0x5654000ded90 <col:41> 'int' 1
[B10.9] + [B10.10]
  12: DeclRefExpr 0x5654000dec38 <ltable.c:280:5> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
lsize
  13: BinaryOperator 0x5654000dedf8 <ltable.c:280:5, ./lobject.h:367:42> 'int' '='
|-DeclRefExpr 0x5654000dec38 <ltable.c:280:5> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
`-ParenExpr 0x5654000dedd8 <./lobject.h:367:21, col:42> 'int'
  `-BinaryOperator 0x5654000dedb0 <col:22, col:41> 'int' '+'
    |-CallExpr 0x5654000ded48 <col:22, col:37> 'int'
    | |-ImplicitCastExpr 0x5654000ded30 <col:22> 'int (*)(unsigned int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654000dec60 <col:22> 'int (unsigned int)' Function 0x56540009b178 'luaO_log2' 'int (unsigned int)'
    | `-ImplicitCastExpr 0x5654000ded78 <col:32, col:36> 'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x5654000ded08 <col:32, col:36> 'int' '-'
    |     |-ImplicitCastExpr 0x5654000decf0 <col:32, col:34> 'int' <LValueToRValue>
    |     | `-ParenExpr 0x5654000decb0 <col:32, col:34> 'int' lvalue
    |     |   `-DeclRefExpr 0x5654000dec88 <ltable.c:280:22> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
    |     `-IntegerLiteral 0x5654000decd0 <./lobject.h:367:36> 'int' 1
    `-IntegerLiteral 0x5654000ded90 <col:41> 'int' 1
[B10.12] = ([B10.11])
  14: DeclRefExpr 0x5654000dee20 <ltable.c:281:9> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
lsize
  15: ImplicitCastExpr 0x5654000dee68 <ltable.c:281:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000dee20 <col:9> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
[B10.14] (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x5654000dee48 <ltable.c:42:18> 'int' 26
26
  17: BinaryOperator 0x5654000dee80 <ltable.c:281:9, line:42:18> 'int' '>'
|-ImplicitCastExpr 0x5654000dee68 <line:281:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000dee20 <col:9> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
`-IntegerLiteral 0x5654000dee48 <line:42:18> 'int' 26
[B10.15] > [B10.16]
   T: if [B10.17]
   Preds (1): B12
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x5654000de988 <ltable.c:73:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
dummynode_
   2: UnaryOperator 0x5654000dea08 <ltable.c:73:21, col:22> 'const Node *' prefix '&'
`-DeclRefExpr 0x5654000de988 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
&[B11.1]
   3: CStyleCastExpr 0x5654000deaa8 <./llimits.h:75:23, col:30> 'Node *' <BitCast>
`-ParenExpr 0x5654000dea88 <col:26, col:30> 'const Node *'
  `-ParenExpr 0x5654000dea28 <ltable.c:73:20, col:32> 'const Node *'
    `-UnaryOperator 0x5654000dea08 <col:21, col:22> 'const Node *' prefix '&'
      `-DeclRefExpr 0x5654000de988 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
(Node *)(([B11.2])) (CStyleCastExpr, BitCast, Node *)
   4: DeclRefExpr 0x5654000de910 <ltable.c:275:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
t
   5: ImplicitCastExpr 0x5654000de938 <ltable.c:275:5> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000de910 <col:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B11.4] (ImplicitCastExpr, LValueToRValue, Table *)
   6: MemberExpr 0x5654000de950 <ltable.c:275:5, col:8> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000de938 <col:5> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000de910 <col:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
[B11.5]->node
   7: BinaryOperator 0x5654000deaf0 <ltable.c:275:5, ./llimits.h:75:31> 'Node *' '='
|-MemberExpr 0x5654000de950 <ltable.c:275:5, col:8> 'Node *' lvalue ->node 0x56540009ad58
| `-ImplicitCastExpr 0x5654000de938 <col:5> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000de910 <col:5> 'Table *' lvalue ParmVar 0x5654000de630 't' 'Table *'
`-ParenExpr 0x5654000dead0 <./llimits.h:75:22, col:31> 'Node *'
  `-CStyleCastExpr 0x5654000deaa8 <col:23, col:30> 'Node *' <BitCast>
    `-ParenExpr 0x5654000dea88 <col:26, col:30> 'const Node *'
      `-ParenExpr 0x5654000dea28 <ltable.c:73:20, col:32> 'const Node *'
        `-UnaryOperator 0x5654000dea08 <col:21, col:22> 'const Node *' prefix '&'
          `-DeclRefExpr 0x5654000de988 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
[B11.6] = ([B11.3])
   8: IntegerLiteral 0x5654000deb40 <ltable.c:276:13> 'int' 0
0
   9: DeclRefExpr 0x5654000deb18 <ltable.c:276:5> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
lsize
  10: BinaryOperator 0x5654000deb60 <ltable.c:276:5, col:13> 'int' '='
|-DeclRefExpr 0x5654000deb18 <col:5> 'int' lvalue Var 0x5654000de810 'lsize' 'int'
`-IntegerLiteral 0x5654000deb40 <col:13> 'int' 0
[B11.9] = [B11.8]
   Preds (1): B12
   Succs (1): B1

 [B12]
   1: DeclStmt 0x5654000de870 <ltable.c:273:3, col:12>col:7
`-VarDecl 0x5654000de810 <col:3, col:7> col:7 used lsize 'int'
int lsize;
   2: DeclRefExpr 0x5654000de888 <ltable.c:274:7> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
size
   3: ImplicitCastExpr 0x5654000de8d0 <ltable.c:274:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000de888 <col:7> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
[B12.2] (ImplicitCastExpr, LValueToRValue, int)
   4: IntegerLiteral 0x5654000de8b0 <ltable.c:274:15> 'int' 0
0
   5: BinaryOperator 0x5654000de8e8 <ltable.c:274:7, col:15> 'int' '=='
|-ImplicitCastExpr 0x5654000de8d0 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000de888 <col:7> 'int' lvalue ParmVar 0x5654000de6a8 'size' 'int'
`-IntegerLiteral 0x5654000de8b0 <col:15> 'int' 0
[B12.3] == [B12.4]
   T: if [B12.5]
   Preds (1): B13
   Succs (2): B11 B10

 [B0 (EXIT)]
   Preds (1): B1
