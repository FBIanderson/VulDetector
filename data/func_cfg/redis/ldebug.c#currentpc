static int currentpc(lua_State *L, CallInfo *ci)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x555e972390d8 <ldebug.c:40:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e97239100 <ldebug.c:40:16> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e972390d8 <col:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.1] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e97239118 <ldebug.c:40:16, col:20> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
`-ImplicitCastExpr 0x555e97239100 <col:16> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e972390d8 <col:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.2]->savedpc
   4: ImplicitCastExpr 0x555e97239440 <./ldebug.h:14:33, col:36> 'const Instruction *' <LValueToRValue>
`-ParenExpr 0x555e97239150 <col:33, col:36> 'const Instruction *' lvalue
  `-MemberExpr 0x555e97239118 <ldebug.c:40:16, col:20> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
    `-ImplicitCastExpr 0x555e97239100 <col:16> 'CallInfo *' <LValueToRValue>
      `-DeclRefExpr 0x555e972390d8 <col:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B1.3]) (ImplicitCastExpr, LValueToRValue, const Instruction *)
   5: DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
ci
   6: ImplicitCastExpr 0x555e972391b8 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B1.5]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   7: MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.6]->func
   8: ImplicitCastExpr 0x555e97239228 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B1.7]) (ImplicitCastExpr, LValueToRValue, StkId)
   9: MemberExpr 0x555e97239240 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.8]->value
  10: MemberExpr 0x555e97239278 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.9].gc
  11: ImplicitCastExpr 0x555e972392b0 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.10] (ImplicitCastExpr, LValueToRValue, GCObject *)
  12: MemberExpr 0x555e972392c8 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.11]->cl
  13: UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
&[B1.12]
  14: MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
(([B1.13]))->l
  15: MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.14].p
  16: ImplicitCastExpr 0x555e972393f0 <./ldebug.h:14:40, col:42> 'struct Proto *' <LValueToRValue>
`-ParenExpr 0x555e972393d0 <col:40, col:42> 'struct Proto *' lvalue
  `-MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
              `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                  `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                    `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                          `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B1.15]) (ImplicitCastExpr, LValueToRValue, struct Proto *)
  17: MemberExpr 0x555e97239408 <./ldebug.h:14:40, col:45> 'Instruction *' lvalue ->code 0x555e971d9508
`-ImplicitCastExpr 0x555e972393f0 <col:40, col:42> 'struct Proto *' <LValueToRValue>
  `-ParenExpr 0x555e972393d0 <col:40, col:42> 'struct Proto *' lvalue
    `-MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
      `-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
          `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
            `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
              `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                  `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                    `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                      `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                        `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
                          `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                            `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                              `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                                `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.16]->code
  18: ImplicitCastExpr 0x555e97239458 <./ldebug.h:14:40, col:45> 'Instruction *' <LValueToRValue>
`-MemberExpr 0x555e97239408 <col:40, col:45> 'Instruction *' lvalue ->code 0x555e971d9508
  `-ImplicitCastExpr 0x555e972393f0 <col:40, col:42> 'struct Proto *' <LValueToRValue>
    `-ParenExpr 0x555e972393d0 <col:40, col:42> 'struct Proto *' lvalue
      `-MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
        `-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
          `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
            `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
              `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                  `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                      `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                        `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                          `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
                            `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                              `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                                  `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.17] (ImplicitCastExpr, LValueToRValue, Instruction *)
  19: BinaryOperator 0x555e97239470 <./ldebug.h:14:33, col:45> 'long' '-'
|-ImplicitCastExpr 0x555e97239440 <col:33, col:36> 'const Instruction *' <LValueToRValue>
| `-ParenExpr 0x555e97239150 <col:33, col:36> 'const Instruction *' lvalue
|   `-MemberExpr 0x555e97239118 <ldebug.c:40:16, col:20> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
|     `-ImplicitCastExpr 0x555e97239100 <col:16> 'CallInfo *' <LValueToRValue>
|       `-DeclRefExpr 0x555e972390d8 <col:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e97239458 <./ldebug.h:14:40, col:45> 'Instruction *' <LValueToRValue>
  `-MemberExpr 0x555e97239408 <col:40, col:45> 'Instruction *' lvalue ->code 0x555e971d9508
    `-ImplicitCastExpr 0x555e972393f0 <col:40, col:42> 'struct Proto *' <LValueToRValue>
      `-ParenExpr 0x555e972393d0 <col:40, col:42> 'struct Proto *' lvalue
        `-MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
          `-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
            `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
              `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
                `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                  `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                    `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                      `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                        `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                          `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                            `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
                              `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                                `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                  `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                                    `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B1.4] - [B1.18]
  20: CStyleCastExpr 0x555e97239500 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x555e972394e0 <col:26, col:30> 'long'
  `-BinaryOperator 0x555e97239470 <./ldebug.h:14:33, col:45> 'long' '-'
    |-ImplicitCastExpr 0x555e97239440 <col:33, col:36> 'const Instruction *' <LValueToRValue>
    | `-ParenExpr 0x555e97239150 <col:33, col:36> 'const Instruction *' lvalue
    |   `-MemberExpr 0x555e97239118 <ldebug.c:40:16, col:20> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
    |     `-ImplicitCastExpr 0x555e97239100 <col:16> 'CallInfo *' <LValueToRValue>
    |       `-DeclRefExpr 0x555e972390d8 <col:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
    `-ImplicitCastExpr 0x555e97239458 <./ldebug.h:14:40, col:45> 'Instruction *' <LValueToRValue>
      `-MemberExpr 0x555e97239408 <col:40, col:45> 'Instruction *' lvalue ->code 0x555e971d9508
        `-ImplicitCastExpr 0x555e972393f0 <col:40, col:42> 'struct Proto *' <LValueToRValue>
          `-ParenExpr 0x555e972393d0 <col:40, col:42> 'struct Proto *' lvalue
            `-MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
              `-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
                `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
                  `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
                    `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                      `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                        `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                          `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                            `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                              `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                                `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
                                  `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                                    `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                      `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
                                        `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
(int)([B1.19]) (CStyleCastExpr, IntegralCast, int)
  21: IntegerLiteral 0x555e97239548 <./ldebug.h:14:53> 'int' 1
1
  22: BinaryOperator 0x555e97239568 <./llimits.h:75:22, ./ldebug.h:14:53> 'int' '-'
|-ParenExpr 0x555e97239528 <./llimits.h:75:22, col:31> 'int'
| `-CStyleCastExpr 0x555e97239500 <col:23, col:30> 'int' <IntegralCast>
|   `-ParenExpr 0x555e972394e0 <col:26, col:30> 'long'
|     `-BinaryOperator 0x555e97239470 <./ldebug.h:14:33, col:45> 'long' '-'
|       |-ImplicitCastExpr 0x555e97239440 <col:33, col:36> 'const Instruction *' <LValueToRValue>
|       | `-ParenExpr 0x555e97239150 <col:33, col:36> 'const Instruction *' lvalue
|       |   `-MemberExpr 0x555e97239118 <ldebug.c:40:16, col:20> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
|       |     `-ImplicitCastExpr 0x555e97239100 <col:16> 'CallInfo *' <LValueToRValue>
|       |       `-DeclRefExpr 0x555e972390d8 <col:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
|       `-ImplicitCastExpr 0x555e97239458 <./ldebug.h:14:40, col:45> 'Instruction *' <LValueToRValue>
|         `-MemberExpr 0x555e97239408 <col:40, col:45> 'Instruction *' lvalue ->code 0x555e971d9508
|           `-ImplicitCastExpr 0x555e972393f0 <col:40, col:42> 'struct Proto *' <LValueToRValue>
|             `-ParenExpr 0x555e972393d0 <col:40, col:42> 'struct Proto *' lvalue
|               `-MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
|                 `-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
|                   `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
|                     `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
|                       `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|                         `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
|                           `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
|                             `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
|                               `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
|                                 `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                                   `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
|                                     `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|                                       `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
|                                         `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
|                                           `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
`-IntegerLiteral 0x555e97239548 <./ldebug.h:14:53> 'int' 1
([B1.20]) - [B1.21]
  23: ReturnStmt 0x555e972395b0 <ldebug.c:40:3, ./ldebug.h:14:54>
`-ParenExpr 0x555e97239590 <col:22, col:54> 'int'
  `-BinaryOperator 0x555e97239568 <./llimits.h:75:22, ./ldebug.h:14:53> 'int' '-'
    |-ParenExpr 0x555e97239528 <./llimits.h:75:22, col:31> 'int'
    | `-CStyleCastExpr 0x555e97239500 <col:23, col:30> 'int' <IntegralCast>
    |   `-ParenExpr 0x555e972394e0 <col:26, col:30> 'long'
    |     `-BinaryOperator 0x555e97239470 <./ldebug.h:14:33, col:45> 'long' '-'
    |       |-ImplicitCastExpr 0x555e97239440 <col:33, col:36> 'const Instruction *' <LValueToRValue>
    |       | `-ParenExpr 0x555e97239150 <col:33, col:36> 'const Instruction *' lvalue
    |       |   `-MemberExpr 0x555e97239118 <ldebug.c:40:16, col:20> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
    |       |     `-ImplicitCastExpr 0x555e97239100 <col:16> 'CallInfo *' <LValueToRValue>
    |       |       `-DeclRefExpr 0x555e972390d8 <col:16> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
    |       `-ImplicitCastExpr 0x555e97239458 <./ldebug.h:14:40, col:45> 'Instruction *' <LValueToRValue>
    |         `-MemberExpr 0x555e97239408 <col:40, col:45> 'Instruction *' lvalue ->code 0x555e971d9508
    |           `-ImplicitCastExpr 0x555e972393f0 <col:40, col:42> 'struct Proto *' <LValueToRValue>
    |             `-ParenExpr 0x555e972393d0 <col:40, col:42> 'struct Proto *' lvalue
    |               `-MemberExpr 0x555e97239398 <./lstate.h:60:21, ldebug.c:40:44> 'struct Proto *' lvalue .p 0x555e971db718
    |                 `-MemberExpr 0x555e97239360 <./lstate.h:60:21, ldebug.c:40:42> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    |                   `-ParenExpr 0x555e97239340 <./lstate.h:60:21, col:41> 'union Closure *'
    |                     `-ParenExpr 0x555e97239320 <./llimits.h:63:25, col:27> 'union Closure *'
    |                       `-UnaryOperator 0x555e97239300 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    |                         `-MemberExpr 0x555e972392c8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
    |                           `-ImplicitCastExpr 0x555e972392b0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    |                             `-MemberExpr 0x555e97239278 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    |                               `-MemberExpr 0x555e97239240 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    |                                 `-ImplicitCastExpr 0x555e97239228 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    |                                   `-ParenExpr 0x555e97239208 <col:48, col:50> 'StkId':'TValue *' lvalue
    |                                     `-MemberExpr 0x555e972391d0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    |                                       `-ImplicitCastExpr 0x555e972391b8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
    |                                         `-ParenExpr 0x555e97239198 <col:30, col:33> 'CallInfo *' lvalue
    |                                           `-DeclRefExpr 0x555e97239170 <ldebug.c:40:37> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
    `-IntegerLiteral 0x555e97239548 <./ldebug.h:14:53> 'int' 1
return ([B1.22]);
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e97238fe8 <ldebug.c:39:19> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e97239010 <ldebug.c:39:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97238fe8 <col:19> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B2.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e97239028 <ldebug.c:39:19, col:22> 'const Instruction *' lvalue ->savedpc 0x555e972135c0
`-ImplicitCastExpr 0x555e97239010 <col:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97238fe8 <col:19> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B2.2]->savedpc
   4: ImplicitCastExpr 0x555e97239060 <ldebug.c:39:19, col:22> 'const Instruction *' <LValueToRValue>
`-MemberExpr 0x555e97239028 <col:19, col:22> 'const Instruction *' lvalue ->savedpc 0x555e972135c0
  `-ImplicitCastExpr 0x555e97239010 <col:19> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e97238fe8 <col:19> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, const Instruction *)
   5: DeclRefExpr 0x555e97238f70 <ldebug.c:39:5> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
ci
   6: ImplicitCastExpr 0x555e97238f98 <ldebug.c:39:5> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e97238f70 <col:5> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B2.5] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   7: MemberExpr 0x555e97238fb0 <ldebug.c:39:5, col:9> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
`-ImplicitCastExpr 0x555e97238f98 <col:5> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e97238f70 <col:5> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B2.6]->savedpc
   8: BinaryOperator 0x555e97239078 <ldebug.c:39:5, col:22> 'const Instruction *' '='
|-MemberExpr 0x555e97238fb0 <col:5, col:9> 'const Instruction *' lvalue ->savedpc 0x555e9720fa88
| `-ImplicitCastExpr 0x555e97238f98 <col:5> 'CallInfo *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97238f70 <col:5> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e97239060 <col:19, col:22> 'const Instruction *' <LValueToRValue>
  `-MemberExpr 0x555e97239028 <col:19, col:22> 'const Instruction *' lvalue ->savedpc 0x555e972135c0
    `-ImplicitCastExpr 0x555e97239010 <col:19> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e97238fe8 <col:19> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B2.7] = [B2.4]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x555e97238e78 <ldebug.c:38:7> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e97238f18 <ldebug.c:38:7> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e97238e78 <col:7> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B3.1] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: DeclRefExpr 0x555e97238ea0 <ldebug.c:38:13> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e97238ec8 <ldebug.c:38:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97238ea0 <col:13> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x555e97238ee0 <ldebug.c:38:13, col:16> 'CallInfo *' lvalue ->ci 0x555e97213568
`-ImplicitCastExpr 0x555e97238ec8 <col:13> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97238ea0 <col:13> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B3.4]->ci
   6: ImplicitCastExpr 0x555e97238f30 <ldebug.c:38:13, col:16> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e97238ee0 <col:13, col:16> 'CallInfo *' lvalue ->ci 0x555e97213568
  `-ImplicitCastExpr 0x555e97238ec8 <col:13> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e97238ea0 <col:13> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B3.5] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   7: BinaryOperator 0x555e97238f48 <ldebug.c:38:7, col:16> 'int' '=='
|-ImplicitCastExpr 0x555e97238f18 <col:7> 'CallInfo *' <LValueToRValue>
| `-DeclRefExpr 0x555e97238e78 <col:7> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e97238f30 <col:13, col:16> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x555e97238ee0 <col:13, col:16> 'CallInfo *' lvalue ->ci 0x555e97213568
    `-ImplicitCastExpr 0x555e97238ec8 <col:13> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e97238ea0 <col:13> 'lua_State *' lvalue ParmVar 0x555e972376c0 'L' 'lua_State *'
[B3.2] == [B3.6]
   T: if [B3.7]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x555e97238de8 <ldebug.c:37:27> 'int' 1
1
   2: UnaryOperator 0x555e97238e08 <ldebug.c:37:26, col:27> 'int' prefix '-'
`-IntegerLiteral 0x555e97238de8 <col:27> 'int' 1
-[B4.1]
   3: ReturnStmt 0x555e97238e28 <ldebug.c:37:19, col:27>
`-UnaryOperator 0x555e97238e08 <col:26, col:27> 'int' prefix '-'
  `-IntegerLiteral 0x555e97238de8 <col:27> 'int' 1
return [B4.2];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: BinaryOperator 0x555e97238d80 <./lobject.h:83:25, ./lstate.h:61:41> 'int' '&&'
|-ParenExpr 0x555e97238a80 <./lobject.h:83:25, col:51> 'int'
| `-BinaryOperator 0x555e97237a58 <line:90:18, ./lua.h:80:24> 'int' '=='
|   |-ImplicitCastExpr 0x555e97237a40 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
|   | `-ParenExpr 0x555e97237a00 <col:18, col:26> 'int' lvalue
|   |   `-MemberExpr 0x555e972379c8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
|   |     `-ImplicitCastExpr 0x555e972379b0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|   |       `-ParenExpr 0x555e97237990 <col:19, col:21> 'StkId':'TValue *' lvalue
|   |         `-MemberExpr 0x555e97237958 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|   |           `-ImplicitCastExpr 0x555e97237940 <col:33, col:36> 'CallInfo *' <LValueToRValue>
|   |             `-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
|   |               `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
|   `-IntegerLiteral 0x555e97237a20 <./lua.h:80:24> 'int' 6
`-ParenExpr 0x555e97238d60 <./lstate.h:61:21, col:41> 'int'
  `-UnaryOperator 0x555e97238d40 <col:22, col:38> 'int' prefix '!'
    `-ImplicitCastExpr 0x555e97238d28 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
      `-MemberExpr 0x555e97238cf0 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
        `-MemberExpr 0x555e97238cb8 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
          `-ParenExpr 0x555e97238c98 <line:60:21, col:41> 'union Closure *'
            `-ParenExpr 0x555e97238c78 <./llimits.h:63:25, col:27> 'union Closure *'
              `-UnaryOperator 0x555e97238c58 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                `-MemberExpr 0x555e97238bf8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                  `-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                      `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                        `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                          `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
                            `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                              `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                                  `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B7.8]) && ([B6.13])
   2: UnaryOperator 0x555e97238dc8 <ldebug.c:37:7, ./lstate.h:62:59> 'int' prefix '!'
`-ParenExpr 0x555e97238da8 <col:19, col:59> 'int'
  `-BinaryOperator 0x555e97238d80 <./lobject.h:83:25, ./lstate.h:61:41> 'int' '&&'
    |-ParenExpr 0x555e97238a80 <./lobject.h:83:25, col:51> 'int'
    | `-BinaryOperator 0x555e97237a58 <line:90:18, ./lua.h:80:24> 'int' '=='
    |   |-ImplicitCastExpr 0x555e97237a40 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   | `-ParenExpr 0x555e97237a00 <col:18, col:26> 'int' lvalue
    |   |   `-MemberExpr 0x555e972379c8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
    |   |     `-ImplicitCastExpr 0x555e972379b0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
    |   |       `-ParenExpr 0x555e97237990 <col:19, col:21> 'StkId':'TValue *' lvalue
    |   |         `-MemberExpr 0x555e97237958 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    |   |           `-ImplicitCastExpr 0x555e97237940 <col:33, col:36> 'CallInfo *' <LValueToRValue>
    |   |             `-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
    |   |               `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
    |   `-IntegerLiteral 0x555e97237a20 <./lua.h:80:24> 'int' 6
    `-ParenExpr 0x555e97238d60 <./lstate.h:61:21, col:41> 'int'
      `-UnaryOperator 0x555e97238d40 <col:22, col:38> 'int' prefix '!'
        `-ImplicitCastExpr 0x555e97238d28 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
          `-MemberExpr 0x555e97238cf0 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
            `-MemberExpr 0x555e97238cb8 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
              `-ParenExpr 0x555e97238c98 <line:60:21, col:41> 'union Closure *'
                `-ParenExpr 0x555e97238c78 <./llimits.h:63:25, col:27> 'union Closure *'
                  `-UnaryOperator 0x555e97238c58 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                    `-MemberExpr 0x555e97238bf8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                      `-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                        `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                          `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                            `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                              `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
                                `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                                  `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                    `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                                      `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
!([B5.1])
   T: if [B5.2]
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e97238ae8 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B6.2]->func
   4: ImplicitCastExpr 0x555e97238b58 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B6.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e97238b70 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B6.4]->value
   6: MemberExpr 0x555e97238ba8 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B6.5].gc
   7: ImplicitCastExpr 0x555e97238be0 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B6.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x555e97238bf8 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B6.7]->cl
   9: UnaryOperator 0x555e97238c58 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e97238bf8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
&[B6.8]
  10: MemberExpr 0x555e97238cb8 <./lstate.h:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
`-ParenExpr 0x555e97238c98 <line:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e97238c78 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e97238c58 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e97238bf8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
(([B6.9]))->c
  11: MemberExpr 0x555e97238cf0 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
`-MemberExpr 0x555e97238cb8 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
  `-ParenExpr 0x555e97238c98 <line:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e97238c78 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e97238c58 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e97238bf8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B6.10].isC
  12: ImplicitCastExpr 0x555e97238d28 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x555e97238cf0 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
  `-MemberExpr 0x555e97238cb8 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
    `-ParenExpr 0x555e97238c98 <line:60:21, col:41> 'union Closure *'
      `-ParenExpr 0x555e97238c78 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x555e97238c58 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x555e97238bf8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
            `-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                  `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                        `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                          `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                            `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B6.11] (ImplicitCastExpr, LValueToRValue, lu_byte)
  13: UnaryOperator 0x555e97238d40 <./lstate.h:61:22, col:38> 'int' prefix '!'
`-ImplicitCastExpr 0x555e97238d28 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x555e97238cf0 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
    `-MemberExpr 0x555e97238cb8 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
      `-ParenExpr 0x555e97238c98 <line:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x555e97238c78 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x555e97238c58 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x555e97238bf8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
              `-ImplicitCastExpr 0x555e97238be0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x555e97238ba8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                  `-MemberExpr 0x555e97238b70 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                    `-ImplicitCastExpr 0x555e97238b58 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x555e97238b38 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x555e97238b00 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                          `-ImplicitCastExpr 0x555e97238ae8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x555e97238ac8 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x555e97238aa0 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
![B6.12]
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e97237940 <./lstate.h:62:33, col:36> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e97237958 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e97237940 <col:33, col:36> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B7.2]->func
   4: ImplicitCastExpr 0x555e972379b0 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97237990 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97237958 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e97237940 <col:33, col:36> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B7.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e972379c8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e972379b0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97237990 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97237958 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e97237940 <col:33, col:36> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
[B7.4]->tt
   6: ImplicitCastExpr 0x555e97237a40 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x555e97237a00 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x555e972379c8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
    `-ImplicitCastExpr 0x555e972379b0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97237990 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e97237958 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e97237940 <col:33, col:36> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
([B7.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x555e97237a20 <./lua.h:80:24> 'int' 6
6
   8: BinaryOperator 0x555e97237a58 <./lobject.h:90:18, ./lua.h:80:24> 'int' '=='
|-ImplicitCastExpr 0x555e97237a40 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x555e97237a00 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x555e972379c8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
|     `-ImplicitCastExpr 0x555e972379b0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x555e97237990 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-MemberExpr 0x555e97237958 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|           `-ImplicitCastExpr 0x555e97237940 <col:33, col:36> 'CallInfo *' <LValueToRValue>
|             `-ParenExpr 0x555e97237920 <col:33, col:36> 'CallInfo *' lvalue
|               `-DeclRefExpr 0x555e972378f8 <ldebug.c:37:14> 'CallInfo *' lvalue ParmVar 0x555e97237730 'ci' 'CallInfo *'
`-IntegerLiteral 0x555e97237a20 <./lua.h:80:24> 'int' 6
[B7.6] == [B7.7]
   T: ([B7.8]) && ...
   Preds (1): B8
   Succs (2): B6 B5

 [B0 (EXIT)]
   Preds (2): B1 B4
