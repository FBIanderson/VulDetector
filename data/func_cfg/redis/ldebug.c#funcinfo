static void funcinfo(lua_Debug *ar, Closure *cl)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x555e97243e30 <ldebug.c:163:3> 'void (char *, const char *, size_t)' Function 0x555e971e0b90 'luaO_chunkid' 'void (char *, const char *, size_t)'
luaO_chunkid
   2: ImplicitCastExpr 0x555e97243fc8 <ldebug.c:163:3> 'void (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97243e30 <col:3> 'void (char *, const char *, size_t)' Function 0x555e971e0b90 'luaO_chunkid' 'void (char *, const char *, size_t)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char *, const char *, size_t))
   3: DeclRefExpr 0x555e97243e58 <ldebug.c:163:16> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
   4: ImplicitCastExpr 0x555e97243e80 <ldebug.c:163:16> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97243e58 <col:16> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   5: MemberExpr 0x555e97243e98 <ldebug.c:163:16, col:20> 'char [60]' lvalue ->short_src 0x555e971c48e8
`-ImplicitCastExpr 0x555e97243e80 <col:16> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97243e58 <col:16> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B1.4]->short_src
   6: ImplicitCastExpr 0x555e97244020 <ldebug.c:163:16, col:20> 'char *' <ArrayToPointerDecay>
`-MemberExpr 0x555e97243e98 <col:16, col:20> 'char [60]' lvalue ->short_src 0x555e971c48e8
  `-ImplicitCastExpr 0x555e97243e80 <col:16> 'lua_Debug *' <LValueToRValue>
    `-DeclRefExpr 0x555e97243e58 <col:16> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: DeclRefExpr 0x555e97243ed0 <ldebug.c:163:31> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
   8: ImplicitCastExpr 0x555e97243ef8 <ldebug.c:163:31> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97243ed0 <col:31> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B1.7] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   9: MemberExpr 0x555e97243f10 <ldebug.c:163:31, col:35> 'const char *' lvalue ->source 0x555e971c46a8
`-ImplicitCastExpr 0x555e97243ef8 <col:31> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97243ed0 <col:31> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B1.8]->source
  10: ImplicitCastExpr 0x555e97244038 <ldebug.c:163:31, col:35> 'const char *' <LValueToRValue>
`-MemberExpr 0x555e97243f10 <col:31, col:35> 'const char *' lvalue ->source 0x555e971c46a8
  `-ImplicitCastExpr 0x555e97243ef8 <col:31> 'lua_Debug *' <LValueToRValue>
    `-DeclRefExpr 0x555e97243ed0 <col:31> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B1.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: IntegerLiteral 0x555e97243f48 <./luaconf.h:210:20> 'int' 60
60
  12: ImplicitCastExpr 0x555e97244050 <./luaconf.h:210:20> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x555e97243f48 <col:20> 'int' 60
[B1.11] (ImplicitCastExpr, IntegralCast, size_t)
  13: CallExpr 0x555e97243fe0 <ldebug.c:163:3, col:53> 'void'
|-ImplicitCastExpr 0x555e97243fc8 <col:3> 'void (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97243e30 <col:3> 'void (char *, const char *, size_t)' Function 0x555e971e0b90 'luaO_chunkid' 'void (char *, const char *, size_t)'
|-ImplicitCastExpr 0x555e97244020 <col:16, col:20> 'char *' <ArrayToPointerDecay>
| `-MemberExpr 0x555e97243e98 <col:16, col:20> 'char [60]' lvalue ->short_src 0x555e971c48e8
|   `-ImplicitCastExpr 0x555e97243e80 <col:16> 'lua_Debug *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97243e58 <col:16> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
|-ImplicitCastExpr 0x555e97244038 <col:31, col:35> 'const char *' <LValueToRValue>
| `-MemberExpr 0x555e97243f10 <col:31, col:35> 'const char *' lvalue ->source 0x555e971c46a8
|   `-ImplicitCastExpr 0x555e97243ef8 <col:31> 'lua_Debug *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97243ed0 <col:31> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-ImplicitCastExpr 0x555e97244050 <./luaconf.h:210:20> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x555e97243f48 <col:20> 'int' 60
[B1.2]([B1.6], [B1.10], [B1.12])
   Preds (2): B2 B6
   Succs (1): B0

 [B2]
   1: ConditionalOperator 0x555e97243d58 <ldebug.c:161:16, col:50> 'char *'
|-ParenExpr 0x555e97243c68 <col:16, col:37> 'int'
| `-BinaryOperator 0x555e97243c40 <col:17, col:36> 'int' '=='
|   |-ImplicitCastExpr 0x555e97243c28 <col:17, col:21> 'int' <LValueToRValue>
|   | `-MemberExpr 0x555e97243bd0 <col:17, col:21> 'int' lvalue ->linedefined 0x555e971c47c8
|   |   `-ImplicitCastExpr 0x555e97243bb8 <col:17> 'lua_Debug *' <LValueToRValue>
|   |     `-DeclRefExpr 0x555e97243b90 <col:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
|   `-IntegerLiteral 0x555e97243c08 <col:36> 'int' 0
|-ImplicitCastExpr 0x555e97243d28 <col:41> 'char *' <ArrayToPointerDecay>
| `-StringLiteral 0x555e97243c88 <col:41> 'char [5]' lvalue "main"
`-ImplicitCastExpr 0x555e97243d40 <col:50> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e97243cf8 <col:50> 'char [4]' lvalue "Lua"
([B5.42]) ? [B3.2] : [B4.2]
   2: ImplicitCastExpr 0x555e97243d88 <ldebug.c:161:16, col:50> 'const char *' <BitCast>
`-ConditionalOperator 0x555e97243d58 <col:16, col:50> 'char *'
  |-ParenExpr 0x555e97243c68 <col:16, col:37> 'int'
  | `-BinaryOperator 0x555e97243c40 <col:17, col:36> 'int' '=='
  |   |-ImplicitCastExpr 0x555e97243c28 <col:17, col:21> 'int' <LValueToRValue>
  |   | `-MemberExpr 0x555e97243bd0 <col:17, col:21> 'int' lvalue ->linedefined 0x555e971c47c8
  |   |   `-ImplicitCastExpr 0x555e97243bb8 <col:17> 'lua_Debug *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x555e97243b90 <col:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
  |   `-IntegerLiteral 0x555e97243c08 <col:36> 'int' 0
  |-ImplicitCastExpr 0x555e97243d28 <col:41> 'char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x555e97243c88 <col:41> 'char [5]' lvalue "main"
  `-ImplicitCastExpr 0x555e97243d40 <col:50> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x555e97243cf8 <col:50> 'char [4]' lvalue "Lua"
[B2.1] (ImplicitCastExpr, BitCast, const char *)
   3: DeclRefExpr 0x555e97243b18 <ldebug.c:161:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
   4: ImplicitCastExpr 0x555e97243b40 <ldebug.c:161:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97243b18 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   5: MemberExpr 0x555e97243b58 <ldebug.c:161:5, col:9> 'const char *' lvalue ->what 0x555e971c4648
`-ImplicitCastExpr 0x555e97243b40 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97243b18 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B2.4]->what
   6: BinaryOperator 0x555e97243da0 <ldebug.c:161:5, col:50> 'const char *' '='
|-MemberExpr 0x555e97243b58 <col:5, col:9> 'const char *' lvalue ->what 0x555e971c4648
| `-ImplicitCastExpr 0x555e97243b40 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97243b18 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-ImplicitCastExpr 0x555e97243d88 <col:16, col:50> 'const char *' <BitCast>
  `-ConditionalOperator 0x555e97243d58 <col:16, col:50> 'char *'
    |-ParenExpr 0x555e97243c68 <col:16, col:37> 'int'
    | `-BinaryOperator 0x555e97243c40 <col:17, col:36> 'int' '=='
    |   |-ImplicitCastExpr 0x555e97243c28 <col:17, col:21> 'int' <LValueToRValue>
    |   | `-MemberExpr 0x555e97243bd0 <col:17, col:21> 'int' lvalue ->linedefined 0x555e971c47c8
    |   |   `-ImplicitCastExpr 0x555e97243bb8 <col:17> 'lua_Debug *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555e97243b90 <col:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
    |   `-IntegerLiteral 0x555e97243c08 <col:36> 'int' 0
    |-ImplicitCastExpr 0x555e97243d28 <col:41> 'char *' <ArrayToPointerDecay>
    | `-StringLiteral 0x555e97243c88 <col:41> 'char [5]' lvalue "main"
    `-ImplicitCastExpr 0x555e97243d40 <col:50> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x555e97243cf8 <col:50> 'char [4]' lvalue "Lua"
[B2.5] = [B2.2]
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   1: StringLiteral 0x555e97243c88 <ldebug.c:161:41> 'char [5]' lvalue "main"
"main"
   2: ImplicitCastExpr 0x555e97243d28 <ldebug.c:161:41> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e97243c88 <col:41> 'char [5]' lvalue "main"
[B3.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: StringLiteral 0x555e97243cf8 <ldebug.c:161:50> 'char [4]' lvalue "Lua"
"Lua"
   2: ImplicitCastExpr 0x555e97243d40 <ldebug.c:161:50> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e97243cf8 <col:50> 'char [4]' lvalue "Lua"
[B4.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   Preds (1): B5
   Succs (1): B2

 [B5]
   1: DeclRefExpr 0x555e97243048 <ldebug.c:158:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
cl
   2: ImplicitCastExpr 0x555e97243070 <ldebug.c:158:25> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.1] (ImplicitCastExpr, LValueToRValue, Closure *)
   3: MemberExpr 0x555e97243088 <ldebug.c:158:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.2]->l
   4: MemberExpr 0x555e972430c0 <ldebug.c:158:25, col:31> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e97243088 <col:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.3].p
   5: ImplicitCastExpr 0x555e972430f8 <ldebug.c:158:25, col:31> 'struct Proto *' <LValueToRValue>
`-MemberExpr 0x555e972430c0 <col:25, col:31> 'struct Proto *' lvalue .p 0x555e971db718
  `-MemberExpr 0x555e97243088 <col:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    `-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.4] (ImplicitCastExpr, LValueToRValue, struct Proto *)
   6: MemberExpr 0x555e97243110 <ldebug.c:158:25, col:34> 'TString *' lvalue ->source 0x555e971d9a08
`-ImplicitCastExpr 0x555e972430f8 <col:25, col:31> 'struct Proto *' <LValueToRValue>
  `-MemberExpr 0x555e972430c0 <col:25, col:31> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e97243088 <col:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
        `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.5]->source
   7: ImplicitCastExpr 0x555e97243188 <./lobject.h:210:39, col:42> 'TString *' <LValueToRValue>
`-ParenExpr 0x555e97243148 <col:39, col:42> 'TString *' lvalue
  `-MemberExpr 0x555e97243110 <ldebug.c:158:25, col:34> 'TString *' lvalue ->source 0x555e971d9a08
    `-ImplicitCastExpr 0x555e972430f8 <col:25, col:31> 'struct Proto *' <LValueToRValue>
      `-MemberExpr 0x555e972430c0 <col:25, col:31> 'struct Proto *' lvalue .p 0x555e971db718
        `-MemberExpr 0x555e97243088 <col:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
          `-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
            `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
([B5.6]) (ImplicitCastExpr, LValueToRValue, TString *)
   8: IntegerLiteral 0x555e97243168 <./lobject.h:210:46> 'int' 1
1
   9: BinaryOperator 0x555e972431a0 <./lobject.h:210:39, col:46> 'TString *' '+'
|-ImplicitCastExpr 0x555e97243188 <col:39, col:42> 'TString *' <LValueToRValue>
| `-ParenExpr 0x555e97243148 <col:39, col:42> 'TString *' lvalue
|   `-MemberExpr 0x555e97243110 <ldebug.c:158:25, col:34> 'TString *' lvalue ->source 0x555e971d9a08
|     `-ImplicitCastExpr 0x555e972430f8 <col:25, col:31> 'struct Proto *' <LValueToRValue>
|       `-MemberExpr 0x555e972430c0 <col:25, col:31> 'struct Proto *' lvalue .p 0x555e971db718
|         `-MemberExpr 0x555e97243088 <col:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
|           `-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
|             `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
`-IntegerLiteral 0x555e97243168 <./lobject.h:210:46> 'int' 1
[B5.7] + [B5.8]
  10: CStyleCastExpr 0x555e97243230 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x555e97243210 <col:26, col:30> 'TString *'
  `-BinaryOperator 0x555e972431a0 <./lobject.h:210:39, col:46> 'TString *' '+'
    |-ImplicitCastExpr 0x555e97243188 <col:39, col:42> 'TString *' <LValueToRValue>
    | `-ParenExpr 0x555e97243148 <col:39, col:42> 'TString *' lvalue
    |   `-MemberExpr 0x555e97243110 <ldebug.c:158:25, col:34> 'TString *' lvalue ->source 0x555e971d9a08
    |     `-ImplicitCastExpr 0x555e972430f8 <col:25, col:31> 'struct Proto *' <LValueToRValue>
    |       `-MemberExpr 0x555e972430c0 <col:25, col:31> 'struct Proto *' lvalue .p 0x555e971db718
    |         `-MemberExpr 0x555e97243088 <col:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    |           `-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
    |             `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
    `-IntegerLiteral 0x555e97243168 <./lobject.h:210:46> 'int' 1
(const char *)([B5.9]) (CStyleCastExpr, BitCast, const char *)
  11: DeclRefExpr 0x555e97242fd0 <ldebug.c:158:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
  12: ImplicitCastExpr 0x555e97242ff8 <ldebug.c:158:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97242fd0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.11] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  13: MemberExpr 0x555e97243010 <ldebug.c:158:5, col:9> 'const char *' lvalue ->source 0x555e971c46a8
`-ImplicitCastExpr 0x555e97242ff8 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97242fd0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.12]->source
  14: BinaryOperator 0x555e97243278 <ldebug.c:158:5, ./llimits.h:75:31> 'const char *' '='
|-MemberExpr 0x555e97243010 <ldebug.c:158:5, col:9> 'const char *' lvalue ->source 0x555e971c46a8
| `-ImplicitCastExpr 0x555e97242ff8 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97242fd0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-ParenExpr 0x555e97243258 <./llimits.h:75:22, col:31> 'const char *'
  `-CStyleCastExpr 0x555e97243230 <col:23, col:30> 'const char *' <BitCast>
    `-ParenExpr 0x555e97243210 <col:26, col:30> 'TString *'
      `-BinaryOperator 0x555e972431a0 <./lobject.h:210:39, col:46> 'TString *' '+'
        |-ImplicitCastExpr 0x555e97243188 <col:39, col:42> 'TString *' <LValueToRValue>
        | `-ParenExpr 0x555e97243148 <col:39, col:42> 'TString *' lvalue
        |   `-MemberExpr 0x555e97243110 <ldebug.c:158:25, col:34> 'TString *' lvalue ->source 0x555e971d9a08
        |     `-ImplicitCastExpr 0x555e972430f8 <col:25, col:31> 'struct Proto *' <LValueToRValue>
        |       `-MemberExpr 0x555e972430c0 <col:25, col:31> 'struct Proto *' lvalue .p 0x555e971db718
        |         `-MemberExpr 0x555e97243088 <col:25, col:29> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        |           `-ImplicitCastExpr 0x555e97243070 <col:25> 'Closure *' <LValueToRValue>
        |             `-DeclRefExpr 0x555e97243048 <col:25> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
        `-IntegerLiteral 0x555e97243168 <./lobject.h:210:46> 'int' 1
[B5.13] = ([B5.10])
  15: DeclRefExpr 0x555e97243318 <ldebug.c:159:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
cl
  16: ImplicitCastExpr 0x555e97243340 <ldebug.c:159:23> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97243318 <col:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.15] (ImplicitCastExpr, LValueToRValue, Closure *)
  17: MemberExpr 0x555e97243358 <ldebug.c:159:23, col:27> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ImplicitCastExpr 0x555e97243340 <col:23> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e97243318 <col:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.16]->l
  18: MemberExpr 0x555e97243390 <ldebug.c:159:23, col:29> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e97243358 <col:23, col:27> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ImplicitCastExpr 0x555e97243340 <col:23> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x555e97243318 <col:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.17].p
  19: ImplicitCastExpr 0x555e972433c8 <ldebug.c:159:23, col:29> 'struct Proto *' <LValueToRValue>
`-MemberExpr 0x555e97243390 <col:23, col:29> 'struct Proto *' lvalue .p 0x555e971db718
  `-MemberExpr 0x555e97243358 <col:23, col:27> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    `-ImplicitCastExpr 0x555e97243340 <col:23> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x555e97243318 <col:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.18] (ImplicitCastExpr, LValueToRValue, struct Proto *)
  20: MemberExpr 0x555e972433e0 <ldebug.c:159:23, col:32> 'int' lvalue ->linedefined 0x555e971d9e68
`-ImplicitCastExpr 0x555e972433c8 <col:23, col:29> 'struct Proto *' <LValueToRValue>
  `-MemberExpr 0x555e97243390 <col:23, col:29> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e97243358 <col:23, col:27> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ImplicitCastExpr 0x555e97243340 <col:23> 'Closure *' <LValueToRValue>
        `-DeclRefExpr 0x555e97243318 <col:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.19]->linedefined
  21: ImplicitCastExpr 0x555e97243418 <ldebug.c:159:23, col:32> 'int' <LValueToRValue>
`-MemberExpr 0x555e972433e0 <col:23, col:32> 'int' lvalue ->linedefined 0x555e971d9e68
  `-ImplicitCastExpr 0x555e972433c8 <col:23, col:29> 'struct Proto *' <LValueToRValue>
    `-MemberExpr 0x555e97243390 <col:23, col:29> 'struct Proto *' lvalue .p 0x555e971db718
      `-MemberExpr 0x555e97243358 <col:23, col:27> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        `-ImplicitCastExpr 0x555e97243340 <col:23> 'Closure *' <LValueToRValue>
          `-DeclRefExpr 0x555e97243318 <col:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.20] (ImplicitCastExpr, LValueToRValue, int)
  22: DeclRefExpr 0x555e972432a0 <ldebug.c:159:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
  23: ImplicitCastExpr 0x555e972432c8 <ldebug.c:159:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e972432a0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.22] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  24: MemberExpr 0x555e972432e0 <ldebug.c:159:5, col:9> 'int' lvalue ->linedefined 0x555e971c47c8
`-ImplicitCastExpr 0x555e972432c8 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e972432a0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.23]->linedefined
  25: BinaryOperator 0x555e97243430 <ldebug.c:159:5, col:32> 'int' '='
|-MemberExpr 0x555e972432e0 <col:5, col:9> 'int' lvalue ->linedefined 0x555e971c47c8
| `-ImplicitCastExpr 0x555e972432c8 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e972432a0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-ImplicitCastExpr 0x555e97243418 <col:23, col:32> 'int' <LValueToRValue>
  `-MemberExpr 0x555e972433e0 <col:23, col:32> 'int' lvalue ->linedefined 0x555e971d9e68
    `-ImplicitCastExpr 0x555e972433c8 <col:23, col:29> 'struct Proto *' <LValueToRValue>
      `-MemberExpr 0x555e97243390 <col:23, col:29> 'struct Proto *' lvalue .p 0x555e971db718
        `-MemberExpr 0x555e97243358 <col:23, col:27> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
          `-ImplicitCastExpr 0x555e97243340 <col:23> 'Closure *' <LValueToRValue>
            `-DeclRefExpr 0x555e97243318 <col:23> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.24] = [B5.21]
  26: DeclRefExpr 0x555e972434d0 <ldebug.c:160:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
cl
  27: ImplicitCastExpr 0x555e972434f8 <ldebug.c:160:27> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e972434d0 <col:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.26] (ImplicitCastExpr, LValueToRValue, Closure *)
  28: MemberExpr 0x555e97243510 <ldebug.c:160:27, col:31> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ImplicitCastExpr 0x555e972434f8 <col:27> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e972434d0 <col:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.27]->l
  29: MemberExpr 0x555e97243a50 <ldebug.c:160:27, col:33> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e97243510 <col:27, col:31> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ImplicitCastExpr 0x555e972434f8 <col:27> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x555e972434d0 <col:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.28].p
  30: ImplicitCastExpr 0x555e97243a88 <ldebug.c:160:27, col:33> 'struct Proto *' <LValueToRValue>
`-MemberExpr 0x555e97243a50 <col:27, col:33> 'struct Proto *' lvalue .p 0x555e971db718
  `-MemberExpr 0x555e97243510 <col:27, col:31> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    `-ImplicitCastExpr 0x555e972434f8 <col:27> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x555e972434d0 <col:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.29] (ImplicitCastExpr, LValueToRValue, struct Proto *)
  31: MemberExpr 0x555e97243aa0 <ldebug.c:160:27, col:36> 'int' lvalue ->lastlinedefined 0x555e971d9ec8
`-ImplicitCastExpr 0x555e97243a88 <col:27, col:33> 'struct Proto *' <LValueToRValue>
  `-MemberExpr 0x555e97243a50 <col:27, col:33> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e97243510 <col:27, col:31> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ImplicitCastExpr 0x555e972434f8 <col:27> 'Closure *' <LValueToRValue>
        `-DeclRefExpr 0x555e972434d0 <col:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.30]->lastlinedefined
  32: ImplicitCastExpr 0x555e97243ad8 <ldebug.c:160:27, col:36> 'int' <LValueToRValue>
`-MemberExpr 0x555e97243aa0 <col:27, col:36> 'int' lvalue ->lastlinedefined 0x555e971d9ec8
  `-ImplicitCastExpr 0x555e97243a88 <col:27, col:33> 'struct Proto *' <LValueToRValue>
    `-MemberExpr 0x555e97243a50 <col:27, col:33> 'struct Proto *' lvalue .p 0x555e971db718
      `-MemberExpr 0x555e97243510 <col:27, col:31> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        `-ImplicitCastExpr 0x555e972434f8 <col:27> 'Closure *' <LValueToRValue>
          `-DeclRefExpr 0x555e972434d0 <col:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.31] (ImplicitCastExpr, LValueToRValue, int)
  33: DeclRefExpr 0x555e97243458 <ldebug.c:160:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
  34: ImplicitCastExpr 0x555e97243480 <ldebug.c:160:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97243458 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.33] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  35: MemberExpr 0x555e97243498 <ldebug.c:160:5, col:9> 'int' lvalue ->lastlinedefined 0x555e971c4828
`-ImplicitCastExpr 0x555e97243480 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97243458 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.34]->lastlinedefined
  36: BinaryOperator 0x555e97243af0 <ldebug.c:160:5, col:36> 'int' '='
|-MemberExpr 0x555e97243498 <col:5, col:9> 'int' lvalue ->lastlinedefined 0x555e971c4828
| `-ImplicitCastExpr 0x555e97243480 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97243458 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-ImplicitCastExpr 0x555e97243ad8 <col:27, col:36> 'int' <LValueToRValue>
  `-MemberExpr 0x555e97243aa0 <col:27, col:36> 'int' lvalue ->lastlinedefined 0x555e971d9ec8
    `-ImplicitCastExpr 0x555e97243a88 <col:27, col:33> 'struct Proto *' <LValueToRValue>
      `-MemberExpr 0x555e97243a50 <col:27, col:33> 'struct Proto *' lvalue .p 0x555e971db718
        `-MemberExpr 0x555e97243510 <col:27, col:31> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
          `-ImplicitCastExpr 0x555e972434f8 <col:27> 'Closure *' <LValueToRValue>
            `-DeclRefExpr 0x555e972434d0 <col:27> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B5.35] = [B5.32]
  37: DeclRefExpr 0x555e97243b90 <ldebug.c:161:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
  38: ImplicitCastExpr 0x555e97243bb8 <ldebug.c:161:17> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97243b90 <col:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.37] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  39: MemberExpr 0x555e97243bd0 <ldebug.c:161:17, col:21> 'int' lvalue ->linedefined 0x555e971c47c8
`-ImplicitCastExpr 0x555e97243bb8 <col:17> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97243b90 <col:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.38]->linedefined
  40: ImplicitCastExpr 0x555e97243c28 <ldebug.c:161:17, col:21> 'int' <LValueToRValue>
`-MemberExpr 0x555e97243bd0 <col:17, col:21> 'int' lvalue ->linedefined 0x555e971c47c8
  `-ImplicitCastExpr 0x555e97243bb8 <col:17> 'lua_Debug *' <LValueToRValue>
    `-DeclRefExpr 0x555e97243b90 <col:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B5.39] (ImplicitCastExpr, LValueToRValue, int)
  41: IntegerLiteral 0x555e97243c08 <ldebug.c:161:36> 'int' 0
0
  42: BinaryOperator 0x555e97243c40 <ldebug.c:161:17, col:36> 'int' '=='
|-ImplicitCastExpr 0x555e97243c28 <col:17, col:21> 'int' <LValueToRValue>
| `-MemberExpr 0x555e97243bd0 <col:17, col:21> 'int' lvalue ->linedefined 0x555e971c47c8
|   `-ImplicitCastExpr 0x555e97243bb8 <col:17> 'lua_Debug *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97243b90 <col:17> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-IntegerLiteral 0x555e97243c08 <col:36> 'int' 0
[B5.40] == [B5.41]
   T: ([B5.42]) ? ... : ...
   Preds (1): B7
   Succs (2): B3 B4

 [B6]
   1: StringLiteral 0x555e97242c18 <ldebug.c:152:18> 'char [5]' lvalue "=[C]"
"=[C]"
   2: ImplicitCastExpr 0x555e97242c48 <ldebug.c:152:18> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e97242c18 <col:18> 'char [5]' lvalue "=[C]"
[B6.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x555e97242c60 <ldebug.c:152:18> 'const char *' <BitCast>
`-ImplicitCastExpr 0x555e97242c48 <col:18> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e97242c18 <col:18> 'char [5]' lvalue "=[C]"
[B6.2] (ImplicitCastExpr, BitCast, const char *)
   4: DeclRefExpr 0x555e97242b68 <ldebug.c:152:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
   5: ImplicitCastExpr 0x555e97242b90 <ldebug.c:152:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97242b68 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.4] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   6: MemberExpr 0x555e97242ba8 <ldebug.c:152:5, col:9> 'const char *' lvalue ->source 0x555e971c46a8
`-ImplicitCastExpr 0x555e97242b90 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97242b68 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.5]->source
   7: BinaryOperator 0x555e97242c78 <ldebug.c:152:5, col:18> 'const char *' '='
|-MemberExpr 0x555e97242ba8 <col:5, col:9> 'const char *' lvalue ->source 0x555e971c46a8
| `-ImplicitCastExpr 0x555e97242b90 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97242b68 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-ImplicitCastExpr 0x555e97242c60 <col:18> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x555e97242c48 <col:18> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x555e97242c18 <col:18> 'char [5]' lvalue "=[C]"
[B6.6] = [B6.3]
   8: IntegerLiteral 0x555e97242d18 <ldebug.c:153:24> 'int' 1
1
   9: UnaryOperator 0x555e97242d38 <ldebug.c:153:23, col:24> 'int' prefix '-'
`-IntegerLiteral 0x555e97242d18 <col:24> 'int' 1
-[B6.8]
  10: DeclRefExpr 0x555e97242ca0 <ldebug.c:153:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
  11: ImplicitCastExpr 0x555e97242cc8 <ldebug.c:153:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97242ca0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.10] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  12: MemberExpr 0x555e97242ce0 <ldebug.c:153:5, col:9> 'int' lvalue ->linedefined 0x555e971c47c8
`-ImplicitCastExpr 0x555e97242cc8 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97242ca0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.11]->linedefined
  13: BinaryOperator 0x555e97242d58 <ldebug.c:153:5, col:24> 'int' '='
|-MemberExpr 0x555e97242ce0 <col:5, col:9> 'int' lvalue ->linedefined 0x555e971c47c8
| `-ImplicitCastExpr 0x555e97242cc8 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97242ca0 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-UnaryOperator 0x555e97242d38 <col:23, col:24> 'int' prefix '-'
  `-IntegerLiteral 0x555e97242d18 <col:24> 'int' 1
[B6.12] = [B6.9]
  14: IntegerLiteral 0x555e97242df8 <ldebug.c:154:28> 'int' 1
1
  15: UnaryOperator 0x555e97242e18 <ldebug.c:154:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x555e97242df8 <col:28> 'int' 1
-[B6.14]
  16: DeclRefExpr 0x555e97242d80 <ldebug.c:154:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
  17: ImplicitCastExpr 0x555e97242da8 <ldebug.c:154:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97242d80 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.16] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  18: MemberExpr 0x555e97242dc0 <ldebug.c:154:5, col:9> 'int' lvalue ->lastlinedefined 0x555e971c4828
`-ImplicitCastExpr 0x555e97242da8 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97242d80 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.17]->lastlinedefined
  19: BinaryOperator 0x555e97242e38 <ldebug.c:154:5, col:28> 'int' '='
|-MemberExpr 0x555e97242dc0 <col:5, col:9> 'int' lvalue ->lastlinedefined 0x555e971c4828
| `-ImplicitCastExpr 0x555e97242da8 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97242d80 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-UnaryOperator 0x555e97242e18 <col:27, col:28> 'int' prefix '-'
  `-IntegerLiteral 0x555e97242df8 <col:28> 'int' 1
[B6.18] = [B6.15]
  20: StringLiteral 0x555e97242f18 <ldebug.c:155:16> 'char [2]' lvalue "C"
"C"
  21: ImplicitCastExpr 0x555e97242f48 <ldebug.c:155:16> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e97242f18 <col:16> 'char [2]' lvalue "C"
[B6.20] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  22: ImplicitCastExpr 0x555e97242f60 <ldebug.c:155:16> 'const char *' <BitCast>
`-ImplicitCastExpr 0x555e97242f48 <col:16> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e97242f18 <col:16> 'char [2]' lvalue "C"
[B6.21] (ImplicitCastExpr, BitCast, const char *)
  23: DeclRefExpr 0x555e97242e60 <ldebug.c:155:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
ar
  24: ImplicitCastExpr 0x555e97242e88 <ldebug.c:155:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97242e60 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.23] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  25: MemberExpr 0x555e97242ea0 <ldebug.c:155:5, col:9> 'const char *' lvalue ->what 0x555e971c4648
`-ImplicitCastExpr 0x555e97242e88 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97242e60 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
[B6.24]->what
  26: BinaryOperator 0x555e97242f78 <ldebug.c:155:5, col:16> 'const char *' '='
|-MemberExpr 0x555e97242ea0 <col:5, col:9> 'const char *' lvalue ->what 0x555e971c4648
| `-ImplicitCastExpr 0x555e97242e88 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97242e60 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e97242868 'ar' 'lua_Debug *'
`-ImplicitCastExpr 0x555e97242f60 <col:16> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x555e97242f48 <col:16> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x555e97242f18 <col:16> 'char [2]' lvalue "C"
[B6.25] = [B6.22]
   Preds (1): B7
   Succs (1): B1

 [B7]
   1: DeclRefExpr 0x555e97242aa0 <ldebug.c:151:7> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
cl
   2: ImplicitCastExpr 0x555e97242ac8 <ldebug.c:151:7> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97242aa0 <col:7> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B7.1] (ImplicitCastExpr, LValueToRValue, Closure *)
   3: MemberExpr 0x555e97242ae0 <ldebug.c:151:7, col:11> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
`-ImplicitCastExpr 0x555e97242ac8 <col:7> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e97242aa0 <col:7> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B7.2]->c
   4: MemberExpr 0x555e97242b18 <ldebug.c:151:7, col:13> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
`-MemberExpr 0x555e97242ae0 <col:7, col:11> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
  `-ImplicitCastExpr 0x555e97242ac8 <col:7> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x555e97242aa0 <col:7> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B7.3].isC
   5: ImplicitCastExpr 0x555e97242b50 <ldebug.c:151:7, col:13> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x555e97242b18 <col:7, col:13> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
  `-MemberExpr 0x555e97242ae0 <col:7, col:11> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
    `-ImplicitCastExpr 0x555e97242ac8 <col:7> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x555e97242aa0 <col:7> 'Closure *' lvalue ParmVar 0x555e972428d8 'cl' 'Closure *'
[B7.4] (ImplicitCastExpr, LValueToRValue, lu_byte)
   T: if [B7.5]
   Preds (1): B8
   Succs (2): B6 B5

 [B0 (EXIT)]
   Preds (1): B1
