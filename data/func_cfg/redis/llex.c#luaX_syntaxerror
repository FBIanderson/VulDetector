void luaX_syntaxerror(LexState *ls, const char *msg)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x561ce7448588 <llex.c:113:3> 'void (LexState *, const char *, int)' Function 0x561ce7447618 'luaX_lexerror' 'void (LexState *, const char *, int)'
luaX_lexerror
   2: ImplicitCastExpr 0x561ce74486b0 <llex.c:113:3> 'void (*)(LexState *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7448588 <col:3> 'void (LexState *, const char *, int)' Function 0x561ce7447618 'luaX_lexerror' 'void (LexState *, const char *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LexState *, const char *, int))
   3: DeclRefExpr 0x561ce74485b0 <llex.c:113:17> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x561ce7448708 <llex.c:113:17> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce74485b0 <col:17> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: DeclRefExpr 0x561ce74485d8 <llex.c:113:21> 'const char *' lvalue ParmVar 0x561ce7448400 'msg' 'const char *'
msg
   6: ImplicitCastExpr 0x561ce7448720 <llex.c:113:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x561ce74485d8 <col:21> 'const char *' lvalue ParmVar 0x561ce7448400 'msg' 'const char *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x561ce7448600 <llex.c:113:26> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
ls
   8: ImplicitCastExpr 0x561ce7448628 <llex.c:113:26> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7448600 <col:26> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
[B1.7] (ImplicitCastExpr, LValueToRValue, LexState *)
   9: MemberExpr 0x561ce7448640 <llex.c:113:26, col:30> 'Token':'struct Token' lvalue ->t 0x561ce7426930
`-ImplicitCastExpr 0x561ce7448628 <col:26> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7448600 <col:26> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
[B1.8]->t
  10: MemberExpr 0x561ce7448678 <llex.c:113:26, col:32> 'int' lvalue .token 0x561ce74253a8
`-MemberExpr 0x561ce7448640 <col:26, col:30> 'Token':'struct Token' lvalue ->t 0x561ce7426930
  `-ImplicitCastExpr 0x561ce7448628 <col:26> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x561ce7448600 <col:26> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
[B1.9].token
  11: ImplicitCastExpr 0x561ce7448738 <llex.c:113:26, col:32> 'int' <LValueToRValue>
`-MemberExpr 0x561ce7448678 <col:26, col:32> 'int' lvalue .token 0x561ce74253a8
  `-MemberExpr 0x561ce7448640 <col:26, col:30> 'Token':'struct Token' lvalue ->t 0x561ce7426930
    `-ImplicitCastExpr 0x561ce7448628 <col:26> 'LexState *' <LValueToRValue>
      `-DeclRefExpr 0x561ce7448600 <col:26> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
[B1.10] (ImplicitCastExpr, LValueToRValue, int)
  12: CallExpr 0x561ce74486c8 <llex.c:113:3, col:37> 'void'
|-ImplicitCastExpr 0x561ce74486b0 <col:3> 'void (*)(LexState *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7448588 <col:3> 'void (LexState *, const char *, int)' Function 0x561ce7447618 'luaX_lexerror' 'void (LexState *, const char *, int)'
|-ImplicitCastExpr 0x561ce7448708 <col:17> 'LexState *' <LValueToRValue>
| `-DeclRefExpr 0x561ce74485b0 <col:17> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
|-ImplicitCastExpr 0x561ce7448720 <col:21> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x561ce74485d8 <col:21> 'const char *' lvalue ParmVar 0x561ce7448400 'msg' 'const char *'
`-ImplicitCastExpr 0x561ce7448738 <col:26, col:32> 'int' <LValueToRValue>
  `-MemberExpr 0x561ce7448678 <col:26, col:32> 'int' lvalue .token 0x561ce74253a8
    `-MemberExpr 0x561ce7448640 <col:26, col:30> 'Token':'struct Token' lvalue ->t 0x561ce7426930
      `-ImplicitCastExpr 0x561ce7448628 <col:26> 'LexState *' <LValueToRValue>
        `-DeclRefExpr 0x561ce7448600 <col:26> 'LexState *' lvalue ParmVar 0x561ce7448388 'ls' 'LexState *'
[B1.2]([B1.4], [B1.6], [B1.11])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
