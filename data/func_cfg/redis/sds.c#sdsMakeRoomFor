sds sdsMakeRoomFor(sds s, size_t addlen)
 [B16 (ENTRY)]
   Succs (1): B15

 [B1]
   1: DeclRefExpr 0x55e83d0febd8 <sds.c:238:5> 'void (sds, size_t)' Function 0x55e83d0ea860 'sdssetalloc' 'void (sds, size_t)'
sdssetalloc
   2: ImplicitCastExpr 0x55e83d0fec50 <sds.c:238:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0febd8 <col:5> 'void (sds, size_t)' Function 0x55e83d0ea860 'sdssetalloc' 'void (sds, size_t)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds, size_t))
   3: DeclRefExpr 0x55e83d0fec00 <sds.c:238:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d0feca0 <sds.c:238:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fec00 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d0fec28 <sds.c:238:20> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
   6: ImplicitCastExpr 0x55e83d0fecb8 <sds.c:238:20> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fec28 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B1.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: CallExpr 0x55e83d0fec68 <sds.c:238:5, col:26> 'void'
|-ImplicitCastExpr 0x55e83d0fec50 <col:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0febd8 <col:5> 'void (sds, size_t)' Function 0x55e83d0ea860 'sdssetalloc' 'void (sds, size_t)'
|-ImplicitCastExpr 0x55e83d0feca0 <col:17> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fec00 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d0fecb8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fec28 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x55e83d0fecd0 <sds.c:239:12> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
   9: ImplicitCastExpr 0x55e83d0fecf8 <sds.c:239:12> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fecd0 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B1.8] (ImplicitCastExpr, LValueToRValue, sds)
  10: ReturnStmt 0x55e83d0fed10 <sds.c:239:5, col:12>
`-ImplicitCastExpr 0x55e83d0fecf8 <col:12> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fecd0 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
return [B1.9];
   Preds (2): B2 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d0fe4d8 <sds.c:232:9> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a7d00 'memcpy' 'void *(void *, const void *, unsigned long)'
memcpy
   2: ImplicitCastExpr 0x55e83d0fe6c8 <sds.c:232:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fe4d8 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a7d00 'memcpy' 'void *(void *, const void *, unsigned long)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
   3: DeclRefExpr 0x55e83d0fe500 <sds.c:232:23> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
newsh
   4: ImplicitCastExpr 0x55e83d0fe540 <sds.c:232:23> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe500 <col:23> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
[B2.3] (ImplicitCastExpr, LValueToRValue, void *)
   5: CStyleCastExpr 0x55e83d0fe558 <sds.c:232:16, col:23> 'char *' <BitCast>
`-ImplicitCastExpr 0x55e83d0fe540 <col:23> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe500 <col:23> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
(char *)[B2.4] (CStyleCastExpr, BitCast, char *)
   6: DeclRefExpr 0x55e83d0fe580 <sds.c:232:29> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
hdrlen
   7: ImplicitCastExpr 0x55e83d0fe5a8 <sds.c:232:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe580 <col:29> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B2.6] (ImplicitCastExpr, LValueToRValue, int)
   8: BinaryOperator 0x55e83d0fe5c0 <sds.c:232:16, col:29> 'char *' '+'
|-CStyleCastExpr 0x55e83d0fe558 <col:16, col:23> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55e83d0fe540 <col:23> 'void *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fe500 <col:23> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
`-ImplicitCastExpr 0x55e83d0fe5a8 <col:29> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe580 <col:29> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B2.5] + [B2.7]
   9: ImplicitCastExpr 0x55e83d0fe720 <sds.c:232:16, col:29> 'void *' <BitCast>
`-BinaryOperator 0x55e83d0fe5c0 <col:16, col:29> 'char *' '+'
  |-CStyleCastExpr 0x55e83d0fe558 <col:16, col:23> 'char *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d0fe540 <col:23> 'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0fe500 <col:23> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
  `-ImplicitCastExpr 0x55e83d0fe5a8 <col:29> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fe580 <col:29> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B2.8] (ImplicitCastExpr, BitCast, void *)
  10: DeclRefExpr 0x55e83d0fe5e8 <sds.c:232:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
  11: ImplicitCastExpr 0x55e83d0fe738 <sds.c:232:37> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe5e8 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B2.10] (ImplicitCastExpr, LValueToRValue, sds)
  12: ImplicitCastExpr 0x55e83d0fe750 <sds.c:232:37> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d0fe738 <col:37> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe5e8 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B2.11] (ImplicitCastExpr, BitCast, const void *)
  13: DeclRefExpr 0x55e83d0fe610 <sds.c:232:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
len
  14: ImplicitCastExpr 0x55e83d0fe658 <sds.c:232:40> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe610 <col:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
[B2.13] (ImplicitCastExpr, LValueToRValue, size_t)
  15: IntegerLiteral 0x55e83d0fe638 <sds.c:232:44> 'int' 1
1
  16: ImplicitCastExpr 0x55e83d0fe670 <sds.c:232:44> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0fe638 <col:44> 'int' 1
[B2.15] (ImplicitCastExpr, IntegralCast, unsigned long)
  17: BinaryOperator 0x55e83d0fe688 <sds.c:232:40, col:44> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d0fe658 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fe610 <col:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fe670 <col:44> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0fe638 <col:44> 'int' 1
[B2.14] + [B2.16]
  18: CallExpr 0x55e83d0fe6e0 <sds.c:232:9, col:45> 'void *'
|-ImplicitCastExpr 0x55e83d0fe6c8 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fe4d8 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a7d00 'memcpy' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d0fe720 <col:16, col:29> 'void *' <BitCast>
| `-BinaryOperator 0x55e83d0fe5c0 <col:16, col:29> 'char *' '+'
|   |-CStyleCastExpr 0x55e83d0fe558 <col:16, col:23> 'char *' <BitCast>
|   | `-ImplicitCastExpr 0x55e83d0fe540 <col:23> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e83d0fe500 <col:23> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
|   `-ImplicitCastExpr 0x55e83d0fe5a8 <col:29> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d0fe580 <col:29> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
|-ImplicitCastExpr 0x55e83d0fe750 <col:37> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d0fe738 <col:37> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fe5e8 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-BinaryOperator 0x55e83d0fe688 <col:40, col:44> 'unsigned long' '+'
  |-ImplicitCastExpr 0x55e83d0fe658 <col:40> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d0fe610 <col:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d0fe670 <col:44> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d0fe638 <col:44> 'int' 1
[B2.2]([B2.9], [B2.12], [B2.17])
  19: DeclRefExpr 0x55e83d0fe768 <./sdsalloc.h:42:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
free
  20: ImplicitCastExpr 0x55e83d0fe7b8 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fe768 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
[B2.19] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *))
  21: DeclRefExpr 0x55e83d0fe790 <sds.c:233:16> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
sh
  22: ImplicitCastExpr 0x55e83d0fe800 <sds.c:233:16> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe790 <col:16> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
[B2.21] (ImplicitCastExpr, LValueToRValue, void *)
  23: CallExpr 0x55e83d0fe7d0 <./sdsalloc.h:42:16, sds.c:233:18> 'void'
|-ImplicitCastExpr 0x55e83d0fe7b8 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fe768 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
`-ImplicitCastExpr 0x55e83d0fe800 <sds.c:233:16> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe790 <col:16> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
[B2.20]([B2.22])
  24: DeclRefExpr 0x55e83d0fe840 <sds.c:234:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
newsh
  25: ImplicitCastExpr 0x55e83d0fe880 <sds.c:234:20> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe840 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
[B2.24] (ImplicitCastExpr, LValueToRValue, void *)
  26: CStyleCastExpr 0x55e83d0fe898 <sds.c:234:13, col:20> 'char *' <BitCast>
`-ImplicitCastExpr 0x55e83d0fe880 <col:20> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe840 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
(char *)[B2.25] (CStyleCastExpr, BitCast, char *)
  27: DeclRefExpr 0x55e83d0fe8c0 <sds.c:234:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
hdrlen
  28: ImplicitCastExpr 0x55e83d0fe8e8 <sds.c:234:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe8c0 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B2.27] (ImplicitCastExpr, LValueToRValue, int)
  29: BinaryOperator 0x55e83d0fe900 <sds.c:234:13, col:26> 'char *' '+'
|-CStyleCastExpr 0x55e83d0fe898 <col:13, col:20> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55e83d0fe880 <col:20> 'void *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fe840 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
`-ImplicitCastExpr 0x55e83d0fe8e8 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe8c0 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B2.26] + [B2.28]
  30: DeclRefExpr 0x55e83d0fe818 <sds.c:234:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
  31: BinaryOperator 0x55e83d0fe928 <sds.c:234:9, col:26> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d0fe818 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-BinaryOperator 0x55e83d0fe900 <col:13, col:26> 'char *' '+'
  |-CStyleCastExpr 0x55e83d0fe898 <col:13, col:20> 'char *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d0fe880 <col:20> 'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0fe840 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
  `-ImplicitCastExpr 0x55e83d0fe8e8 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fe8c0 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B2.30] = [B2.29]
  32: DeclRefExpr 0x55e83d0fe9f8 <sds.c:235:17> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
type
  33: ImplicitCastExpr 0x55e83d0fea20 <sds.c:235:17> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe9f8 <col:17> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B2.32] (ImplicitCastExpr, LValueToRValue, char)
  34: DeclRefExpr 0x55e83d0fe950 <sds.c:235:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
  35: ImplicitCastExpr 0x55e83d0fe9b8 <sds.c:235:9> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe950 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B2.34] (ImplicitCastExpr, LValueToRValue, sds)
  36: IntegerLiteral 0x55e83d0fe978 <sds.c:235:12> 'int' 1
1
  37: UnaryOperator 0x55e83d0fe998 <sds.c:235:11, col:12> 'int' prefix '-'
`-IntegerLiteral 0x55e83d0fe978 <col:12> 'int' 1
-[B2.36]
  38: ArraySubscriptExpr 0x55e83d0fe9d0 <sds.c:235:9, col:13> 'char' lvalue
|-ImplicitCastExpr 0x55e83d0fe9b8 <col:9> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fe950 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-UnaryOperator 0x55e83d0fe998 <col:11, col:12> 'int' prefix '-'
  `-IntegerLiteral 0x55e83d0fe978 <col:12> 'int' 1
[B2.35][[B2.37]]
  39: BinaryOperator 0x55e83d0fea38 <sds.c:235:9, col:17> 'char' '='
|-ArraySubscriptExpr 0x55e83d0fe9d0 <col:9, col:13> 'char' lvalue
| |-ImplicitCastExpr 0x55e83d0fe9b8 <col:9> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d0fe950 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
| `-UnaryOperator 0x55e83d0fe998 <col:11, col:12> 'int' prefix '-'
|   `-IntegerLiteral 0x55e83d0fe978 <col:12> 'int' 1
`-ImplicitCastExpr 0x55e83d0fea20 <col:17> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe9f8 <col:17> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B2.38] = [B2.33]
  40: DeclRefExpr 0x55e83d0fea60 <sds.c:236:9> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
sdssetlen
  41: ImplicitCastExpr 0x55e83d0fead8 <sds.c:236:9> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fea60 <col:9> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
[B2.40] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds, size_t))
  42: DeclRefExpr 0x55e83d0fea88 <sds.c:236:19> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
  43: ImplicitCastExpr 0x55e83d0feb28 <sds.c:236:19> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fea88 <col:19> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B2.42] (ImplicitCastExpr, LValueToRValue, sds)
  44: DeclRefExpr 0x55e83d0feab0 <sds.c:236:22> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
len
  45: ImplicitCastExpr 0x55e83d0feb40 <sds.c:236:22> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0feab0 <col:22> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
[B2.44] (ImplicitCastExpr, LValueToRValue, size_t)
  46: CallExpr 0x55e83d0feaf0 <sds.c:236:9, col:25> 'void'
|-ImplicitCastExpr 0x55e83d0fead8 <col:9> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fea60 <col:9> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
|-ImplicitCastExpr 0x55e83d0feb28 <col:19> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fea88 <col:19> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d0feb40 <col:22> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0feab0 <col:22> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
[B2.41]([B2.43], [B2.45])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x55e83d0fe3f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55e83d0fe428 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d0fe3f0 <col:24> 'int' 0
(void *)[B3.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55e83d0fe470 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <NullToPointer>
`-ParenExpr 0x55e83d0fe450 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d0fe428 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d0fe3f0 <col:24> 'int' 0
([B3.2]) (ImplicitCastExpr, NullToPointer, sds)
   4: ReturnStmt 0x55e83d0fe488 <sds.c:231:28, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55e83d0fe470 <col:16, col:25> 'sds':'char *' <NullToPointer>
  `-ParenExpr 0x55e83d0fe450 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d0fe428 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d0fe3f0 <col:24> 'int' 0
return [B3.3];
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x55e83d0fe150 <./sdsalloc.h:40:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
malloc
   2: ImplicitCastExpr 0x55e83d0fe298 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fe150 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(unsigned long))
   3: DeclRefExpr 0x55e83d0fe178 <sds.c:230:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
hdrlen
   4: ImplicitCastExpr 0x55e83d0fe1c8 <sds.c:230:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe178 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ImplicitCastExpr 0x55e83d0fe1f8 <sds.c:230:26> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0fe1c8 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe178 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B4.4] (ImplicitCastExpr, IntegralCast, unsigned long)
   6: DeclRefExpr 0x55e83d0fe1a0 <sds.c:230:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
   7: ImplicitCastExpr 0x55e83d0fe1e0 <sds.c:230:33> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe1a0 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B4.6] (ImplicitCastExpr, LValueToRValue, size_t)
   8: BinaryOperator 0x55e83d0fe210 <sds.c:230:26, col:33> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d0fe1f8 <col:26> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0fe1c8 <col:26> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fe178 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
`-ImplicitCastExpr 0x55e83d0fe1e0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe1a0 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B4.5] + [B4.7]
   9: IntegerLiteral 0x55e83d0fe238 <sds.c:230:40> 'int' 1
1
  10: ImplicitCastExpr 0x55e83d0fe258 <sds.c:230:40> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0fe238 <col:40> 'int' 1
[B4.9] (ImplicitCastExpr, IntegralCast, unsigned long)
  11: BinaryOperator 0x55e83d0fe270 <sds.c:230:26, col:40> 'unsigned long' '+'
|-BinaryOperator 0x55e83d0fe210 <col:26, col:33> 'unsigned long' '+'
| |-ImplicitCastExpr 0x55e83d0fe1f8 <col:26> 'unsigned long' <IntegralCast>
| | `-ImplicitCastExpr 0x55e83d0fe1c8 <col:26> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55e83d0fe178 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
| `-ImplicitCastExpr 0x55e83d0fe1e0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fe1a0 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fe258 <col:40> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0fe238 <col:40> 'int' 1
[B4.8] + [B4.10]
  12: CallExpr 0x55e83d0fe2b0 <./sdsalloc.h:40:18, sds.c:230:41> 'void *'
|-ImplicitCastExpr 0x55e83d0fe298 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fe150 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
`-BinaryOperator 0x55e83d0fe270 <sds.c:230:26, col:40> 'unsigned long' '+'
  |-BinaryOperator 0x55e83d0fe210 <col:26, col:33> 'unsigned long' '+'
  | |-ImplicitCastExpr 0x55e83d0fe1f8 <col:26> 'unsigned long' <IntegralCast>
  | | `-ImplicitCastExpr 0x55e83d0fe1c8 <col:26> 'int' <LValueToRValue>
  | |   `-DeclRefExpr 0x55e83d0fe178 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
  | `-ImplicitCastExpr 0x55e83d0fe1e0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0fe1a0 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d0fe258 <col:40> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d0fe238 <col:40> 'int' 1
[B4.2]([B4.11])
  13: DeclRefExpr 0x55e83d0fe128 <sds.c:230:9> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
newsh
  14: BinaryOperator 0x55e83d0fe2e0 <sds.c:230:9, col:41> 'void *' '='
|-DeclRefExpr 0x55e83d0fe128 <col:9> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
`-CallExpr 0x55e83d0fe2b0 <./sdsalloc.h:40:18, sds.c:230:41> 'void *'
  |-ImplicitCastExpr 0x55e83d0fe298 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0fe150 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
  `-BinaryOperator 0x55e83d0fe270 <sds.c:230:26, col:40> 'unsigned long' '+'
    |-BinaryOperator 0x55e83d0fe210 <col:26, col:33> 'unsigned long' '+'
    | |-ImplicitCastExpr 0x55e83d0fe1f8 <col:26> 'unsigned long' <IntegralCast>
    | | `-ImplicitCastExpr 0x55e83d0fe1c8 <col:26> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x55e83d0fe178 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
    | `-ImplicitCastExpr 0x55e83d0fe1e0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d0fe1a0 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d0fe258 <col:40> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55e83d0fe238 <col:40> 'int' 1
[B4.13] = [B4.12]
  15: DeclRefExpr 0x55e83d0fe308 <sds.c:231:13> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
newsh
  16: ImplicitCastExpr 0x55e83d0fe3b0 <sds.c:231:13> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe308 <col:13> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
[B4.15] (ImplicitCastExpr, LValueToRValue, void *)
  17: IntegerLiteral 0x55e83d0fe330 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  18: CStyleCastExpr 0x55e83d0fe368 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d0fe330 <col:24> 'int' 0
(void *)[B4.17] (CStyleCastExpr, NullToPointer, void *)
  19: BinaryOperator 0x55e83d0fe3c8 <sds.c:231:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55e83d0fe3b0 <sds.c:231:13> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fe308 <col:13> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
`-ParenExpr 0x55e83d0fe390 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d0fe368 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d0fe330 <col:24> 'int' 0
[B4.16] == ([B4.18])
   T: if [B4.19]
   Preds (1): B8
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55e83d0fdff0 <sds.c:226:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
newsh
   2: ImplicitCastExpr 0x55e83d0fe030 <sds.c:226:20> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fdff0 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
[B5.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: CStyleCastExpr 0x55e83d0fe048 <sds.c:226:13, col:20> 'char *' <BitCast>
`-ImplicitCastExpr 0x55e83d0fe030 <col:20> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fdff0 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
(char *)[B5.2] (CStyleCastExpr, BitCast, char *)
   4: DeclRefExpr 0x55e83d0fe070 <sds.c:226:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
hdrlen
   5: ImplicitCastExpr 0x55e83d0fe098 <sds.c:226:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fe070 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B5.4] (ImplicitCastExpr, LValueToRValue, int)
   6: BinaryOperator 0x55e83d0fe0b0 <sds.c:226:13, col:26> 'char *' '+'
|-CStyleCastExpr 0x55e83d0fe048 <col:13, col:20> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55e83d0fe030 <col:20> 'void *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fdff0 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
`-ImplicitCastExpr 0x55e83d0fe098 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fe070 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B5.3] + [B5.5]
   7: DeclRefExpr 0x55e83d0fdfc8 <sds.c:226:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
   8: BinaryOperator 0x55e83d0fe0d8 <sds.c:226:9, col:26> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d0fdfc8 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-BinaryOperator 0x55e83d0fe0b0 <col:13, col:26> 'char *' '+'
  |-CStyleCastExpr 0x55e83d0fe048 <col:13, col:20> 'char *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d0fe030 <col:20> 'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0fdff0 <col:20> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
  `-ImplicitCastExpr 0x55e83d0fe098 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fe070 <col:26> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B5.7] = [B5.6]
   Preds (1): B7
   Succs (1): B1

 [B6]
   1: DeclRefExpr 0x55e83d0fde10 <./sdsalloc.h:42:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
free
   2: ImplicitCastExpr 0x55e83d0fde60 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fde10 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *))
   3: DeclRefExpr 0x55e83d0fde38 <sds.c:223:20> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
sh
   4: ImplicitCastExpr 0x55e83d0fdea8 <sds.c:223:20> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fde38 <col:20> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
[B6.3] (ImplicitCastExpr, LValueToRValue, void *)
   5: CallExpr 0x55e83d0fde78 <./sdsalloc.h:42:16, sds.c:223:22> 'void'
|-ImplicitCastExpr 0x55e83d0fde60 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fde10 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
`-ImplicitCastExpr 0x55e83d0fdea8 <sds.c:223:20> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fde38 <col:20> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
[B6.2]([B6.4])
   6: IntegerLiteral 0x55e83d0fdec0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x55e83d0fdef8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d0fdec0 <col:24> 'int' 0
(void *)[B6.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x55e83d0fdf40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <NullToPointer>
`-ParenExpr 0x55e83d0fdf20 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d0fdef8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d0fdec0 <col:24> 'int' 0
([B6.7]) (ImplicitCastExpr, NullToPointer, sds)
   9: ReturnStmt 0x55e83d0fdf58 <sds.c:224:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55e83d0fdf40 <col:16, col:25> 'sds':'char *' <NullToPointer>
  `-ParenExpr 0x55e83d0fdf20 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d0fdef8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d0fdec0 <col:24> 'int' 0
return [B6.8];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x55e83d0fdad8 <./sdsalloc.h:41:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
realloc
   2: ImplicitCastExpr 0x55e83d0fdc88 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fdad8 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, unsigned long))
   3: DeclRefExpr 0x55e83d0fdb00 <sds.c:221:27> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
sh
   4: ImplicitCastExpr 0x55e83d0fdcd8 <sds.c:221:27> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fdb00 <col:27> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
[B7.3] (ImplicitCastExpr, LValueToRValue, void *)
   5: DeclRefExpr 0x55e83d0fdb28 <sds.c:221:31> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
hdrlen
   6: ImplicitCastExpr 0x55e83d0fdb78 <sds.c:221:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fdb28 <col:31> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ImplicitCastExpr 0x55e83d0fdba8 <sds.c:221:31> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0fdb78 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fdb28 <col:31> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
[B7.6] (ImplicitCastExpr, IntegralCast, unsigned long)
   8: DeclRefExpr 0x55e83d0fdb50 <sds.c:221:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
   9: ImplicitCastExpr 0x55e83d0fdb90 <sds.c:221:38> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fdb50 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B7.8] (ImplicitCastExpr, LValueToRValue, size_t)
  10: BinaryOperator 0x55e83d0fdbc0 <sds.c:221:31, col:38> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d0fdba8 <col:31> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0fdb78 <col:31> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fdb28 <col:31> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
`-ImplicitCastExpr 0x55e83d0fdb90 <col:38> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fdb50 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B7.7] + [B7.9]
  11: IntegerLiteral 0x55e83d0fdbe8 <sds.c:221:45> 'int' 1
1
  12: ImplicitCastExpr 0x55e83d0fdc08 <sds.c:221:45> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0fdbe8 <col:45> 'int' 1
[B7.11] (ImplicitCastExpr, IntegralCast, unsigned long)
  13: BinaryOperator 0x55e83d0fdc20 <sds.c:221:31, col:45> 'unsigned long' '+'
|-BinaryOperator 0x55e83d0fdbc0 <col:31, col:38> 'unsigned long' '+'
| |-ImplicitCastExpr 0x55e83d0fdba8 <col:31> 'unsigned long' <IntegralCast>
| | `-ImplicitCastExpr 0x55e83d0fdb78 <col:31> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55e83d0fdb28 <col:31> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
| `-ImplicitCastExpr 0x55e83d0fdb90 <col:38> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fdb50 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fdc08 <col:45> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0fdbe8 <col:45> 'int' 1
[B7.10] + [B7.12]
  14: CallExpr 0x55e83d0fdca0 <./sdsalloc.h:41:19, sds.c:221:46> 'void *'
|-ImplicitCastExpr 0x55e83d0fdc88 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fdad8 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d0fdcd8 <sds.c:221:27> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fdb00 <col:27> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
`-BinaryOperator 0x55e83d0fdc20 <col:31, col:45> 'unsigned long' '+'
  |-BinaryOperator 0x55e83d0fdbc0 <col:31, col:38> 'unsigned long' '+'
  | |-ImplicitCastExpr 0x55e83d0fdba8 <col:31> 'unsigned long' <IntegralCast>
  | | `-ImplicitCastExpr 0x55e83d0fdb78 <col:31> 'int' <LValueToRValue>
  | |   `-DeclRefExpr 0x55e83d0fdb28 <col:31> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
  | `-ImplicitCastExpr 0x55e83d0fdb90 <col:38> 'size_t':'unsigned long' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0fdb50 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d0fdc08 <col:45> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d0fdbe8 <col:45> 'int' 1
[B7.2]([B7.4], [B7.13])
  15: DeclRefExpr 0x55e83d0fdab0 <sds.c:221:9> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
newsh
  16: BinaryOperator 0x55e83d0fdcf0 <sds.c:221:9, col:46> 'void *' '='
|-DeclRefExpr 0x55e83d0fdab0 <col:9> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
`-CallExpr 0x55e83d0fdca0 <./sdsalloc.h:41:19, sds.c:221:46> 'void *'
  |-ImplicitCastExpr 0x55e83d0fdc88 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0fdad8 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
  |-ImplicitCastExpr 0x55e83d0fdcd8 <sds.c:221:27> 'void *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d0fdb00 <col:27> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
  `-BinaryOperator 0x55e83d0fdc20 <col:31, col:45> 'unsigned long' '+'
    |-BinaryOperator 0x55e83d0fdbc0 <col:31, col:38> 'unsigned long' '+'
    | |-ImplicitCastExpr 0x55e83d0fdba8 <col:31> 'unsigned long' <IntegralCast>
    | | `-ImplicitCastExpr 0x55e83d0fdb78 <col:31> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x55e83d0fdb28 <col:31> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
    | `-ImplicitCastExpr 0x55e83d0fdb90 <col:38> 'size_t':'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d0fdb50 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d0fdc08 <col:45> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55e83d0fdbe8 <col:45> 'int' 1
[B7.15] = [B7.14]
  17: DeclRefExpr 0x55e83d0fdd18 <sds.c:222:13> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
newsh
  18: ImplicitCastExpr 0x55e83d0fddd0 <sds.c:222:13> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fdd18 <col:13> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
[B7.17] (ImplicitCastExpr, LValueToRValue, void *)
  19: IntegerLiteral 0x55e83d0fdd40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  20: CStyleCastExpr 0x55e83d0fdd88 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d0fdd40 <col:24> 'int' 0
(void *)[B7.19] (CStyleCastExpr, NullToPointer, void *)
  21: BinaryOperator 0x55e83d0fdde8 <sds.c:222:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55e83d0fddd0 <sds.c:222:13> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fdd18 <col:13> 'void *' lvalue Var 0x55e83d0fc8c0 'newsh' 'void *'
`-ParenExpr 0x55e83d0fddb0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d0fdd88 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d0fdd40 <col:24> 'int' 0
[B7.18] == ([B7.20])
   T: if [B7.21]
   Preds (1): B8
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x55e83d0fd900 <sds.c:219:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
sdsHdrSize
   2: ImplicitCastExpr 0x55e83d0fd950 <sds.c:219:14> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fd900 <col:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
   3: DeclRefExpr 0x55e83d0fd928 <sds.c:219:25> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
type
   4: ImplicitCastExpr 0x55e83d0fd998 <sds.c:219:25> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd928 <col:25> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B8.3] (ImplicitCastExpr, LValueToRValue, char)
   5: CallExpr 0x55e83d0fd968 <sds.c:219:14, col:29> 'int'
|-ImplicitCastExpr 0x55e83d0fd950 <col:14> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fd900 <col:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
`-ImplicitCastExpr 0x55e83d0fd998 <col:25> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd928 <col:25> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B8.2]([B8.4])
   6: DeclRefExpr 0x55e83d0fd8d8 <sds.c:219:5> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
hdrlen
   7: BinaryOperator 0x55e83d0fd9b0 <sds.c:219:5, col:29> 'int' '='
|-DeclRefExpr 0x55e83d0fd8d8 <col:5> 'int' lvalue Var 0x55e83d0fce18 'hdrlen' 'int'
`-CallExpr 0x55e83d0fd968 <col:14, col:29> 'int'
  |-ImplicitCastExpr 0x55e83d0fd950 <col:14> 'int (*)(char)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0fd900 <col:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
  `-ImplicitCastExpr 0x55e83d0fd998 <col:25> 'char' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fd928 <col:25> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B8.6] = [B8.5]
   8: DeclRefExpr 0x55e83d0fd9d8 <sds.c:220:9> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
oldtype
   9: ImplicitCastExpr 0x55e83d0fda28 <sds.c:220:9> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd9d8 <col:9> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
[B8.8] (ImplicitCastExpr, LValueToRValue, char)
  10: ImplicitCastExpr 0x55e83d0fda40 <sds.c:220:9> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0fda28 <col:9> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd9d8 <col:9> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
[B8.9] (ImplicitCastExpr, IntegralCast, int)
  11: DeclRefExpr 0x55e83d0fda00 <sds.c:220:18> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
type
  12: ImplicitCastExpr 0x55e83d0fda58 <sds.c:220:18> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fda00 <col:18> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B8.11] (ImplicitCastExpr, LValueToRValue, char)
  13: ImplicitCastExpr 0x55e83d0fda70 <sds.c:220:18> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0fda58 <col:18> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fda00 <col:18> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B8.12] (ImplicitCastExpr, IntegralCast, int)
  14: BinaryOperator 0x55e83d0fda88 <sds.c:220:9, col:18> 'int' '=='
|-ImplicitCastExpr 0x55e83d0fda40 <col:9> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0fda28 <col:9> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fd9d8 <col:9> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
`-ImplicitCastExpr 0x55e83d0fda70 <col:18> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d0fda58 <col:18> 'char' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fda00 <col:18> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B8.10] == [B8.13]
   T: if [B8.14]
   Preds (2): B9 B10
   Succs (2): B7 B4

 [B9]
   1: IntegerLiteral 0x55e83d0fd840 <./sds.h:79:21> 'int' 1
1
   2: ImplicitCastExpr 0x55e83d0fd860 <./sds.h:79:21> 'char' <IntegralCast>
`-IntegerLiteral 0x55e83d0fd840 <col:21> 'int' 1
[B9.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d0fd818 <sds.c:217:29> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
type
   4: BinaryOperator 0x55e83d0fd878 <sds.c:217:29, ./sds.h:79:21> 'char' '='
|-DeclRefExpr 0x55e83d0fd818 <sds.c:217:29> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
`-ImplicitCastExpr 0x55e83d0fd860 <./sds.h:79:21> 'char' <IntegralCast>
  `-IntegerLiteral 0x55e83d0fd840 <col:21> 'int' 1
[B9.3] = [B9.2]
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x55e83d0fd6a0 <sds.c:212:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
sdsReqType
   2: ImplicitCastExpr 0x55e83d0fd6f0 <sds.c:212:12> 'char (*)(size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fd6a0 <col:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, char (*)(size_t))
   3: DeclRefExpr 0x55e83d0fd6c8 <sds.c:212:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
   4: ImplicitCastExpr 0x55e83d0fd738 <sds.c:212:23> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd6c8 <col:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B10.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: CallExpr 0x55e83d0fd708 <sds.c:212:12, col:29> 'char'
|-ImplicitCastExpr 0x55e83d0fd6f0 <col:12> 'char (*)(size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fd6a0 <col:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
`-ImplicitCastExpr 0x55e83d0fd738 <col:23> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd6c8 <col:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B10.2]([B10.4])
   6: DeclRefExpr 0x55e83d0fd678 <sds.c:212:5> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
type
   7: BinaryOperator 0x55e83d0fd750 <sds.c:212:5, col:29> 'char' '='
|-DeclRefExpr 0x55e83d0fd678 <col:5> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
`-CallExpr 0x55e83d0fd708 <col:12, col:29> 'char'
  |-ImplicitCastExpr 0x55e83d0fd6f0 <col:12> 'char (*)(size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0fd6a0 <col:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
  `-ImplicitCastExpr 0x55e83d0fd738 <col:23> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fd6c8 <col:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B10.6] = [B10.5]
   8: DeclRefExpr 0x55e83d0fd778 <sds.c:217:9> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
type
   9: ImplicitCastExpr 0x55e83d0fd7c0 <sds.c:217:9> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd778 <col:9> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B10.8] (ImplicitCastExpr, LValueToRValue, char)
  10: ImplicitCastExpr 0x55e83d0fd7d8 <sds.c:217:9> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0fd7c0 <col:9> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd778 <col:9> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
[B10.9] (ImplicitCastExpr, IntegralCast, int)
  11: IntegerLiteral 0x55e83d0fd7a0 <./sds.h:78:21> 'int' 0
0
  12: BinaryOperator 0x55e83d0fd7f0 <sds.c:217:9, ./sds.h:78:21> 'int' '=='
|-ImplicitCastExpr 0x55e83d0fd7d8 <sds.c:217:9> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0fd7c0 <col:9> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fd778 <col:9> 'char' lvalue Var 0x55e83d0fcba8 'type' 'char'
`-IntegerLiteral 0x55e83d0fd7a0 <./sds.h:78:21> 'int' 0
[B10.10] == [B10.11]
   T: if [B10.12]
   Preds (2): B11 B12
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x55e83d0fd540 <sds.c:210:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
   2: IntegerLiteral 0x55e83d0fd568 <./sds.h:36:27> 'int' 1024
1024
   3: IntegerLiteral 0x55e83d0fd588 <./sds.h:36:32> 'int' 1024
1024
   4: BinaryOperator 0x55e83d0fd5a8 <./sds.h:36:27, col:32> 'int' '*'
|-IntegerLiteral 0x55e83d0fd568 <col:27> 'int' 1024
`-IntegerLiteral 0x55e83d0fd588 <col:32> 'int' 1024
[B11.2] * [B11.3]
   5: ImplicitCastExpr 0x55e83d0fd5f0 <./sds.h:36:26, col:36> 'unsigned long' <IntegralCast>
`-ParenExpr 0x55e83d0fd5d0 <col:26, col:36> 'int'
  `-BinaryOperator 0x55e83d0fd5a8 <col:27, col:32> 'int' '*'
    |-IntegerLiteral 0x55e83d0fd568 <col:27> 'int' 1024
    `-IntegerLiteral 0x55e83d0fd588 <col:32> 'int' 1024
([B11.4]) (ImplicitCastExpr, IntegralCast, unsigned long)
   6: CompoundAssignOperator 0x55e83d0fd608 <sds.c:210:9, ./sds.h:36:36> 'size_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x55e83d0fd540 <sds.c:210:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fd5f0 <./sds.h:36:26, col:36> 'unsigned long' <IntegralCast>
  `-ParenExpr 0x55e83d0fd5d0 <col:26, col:36> 'int'
    `-BinaryOperator 0x55e83d0fd5a8 <col:27, col:32> 'int' '*'
      |-IntegerLiteral 0x55e83d0fd568 <col:27> 'int' 1024
      `-IntegerLiteral 0x55e83d0fd588 <col:32> 'int' 1024
[B11.1] += [B11.5]
   Preds (1): B13
   Succs (1): B10

 [B12]
   1: DeclRefExpr 0x55e83d0fd4a8 <sds.c:208:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
   2: IntegerLiteral 0x55e83d0fd4d0 <sds.c:208:19> 'int' 2
2
   3: ImplicitCastExpr 0x55e83d0fd4f0 <sds.c:208:19> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0fd4d0 <col:19> 'int' 2
[B12.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: CompoundAssignOperator 0x55e83d0fd508 <sds.c:208:9, col:19> 'size_t':'unsigned long' '*=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x55e83d0fd4a8 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fd4f0 <col:19> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0fd4d0 <col:19> 'int' 2
[B12.1] *= [B12.3]
   Preds (1): B13
   Succs (1): B10

 [B13]
   1: DeclRefExpr 0x55e83d0fcff0 <sds.c:204:11> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
   2: ImplicitCastExpr 0x55e83d0fd040 <sds.c:204:11> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fcff0 <col:11> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   3: DeclRefExpr 0x55e83d0fd018 <sds.c:204:18> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d0fd088 <sds.c:204:18> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd018 <col:18> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B13.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: CallExpr 0x55e83d0fd058 <sds.c:204:11, col:19> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d0fd040 <col:11> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fcff0 <col:11> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d0fd088 <col:18> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd018 <col:18> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B13.2]([B13.4])
   6: DeclRefExpr 0x55e83d0fcfc8 <sds.c:204:5> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
len
   7: BinaryOperator 0x55e83d0fd0a0 <sds.c:204:5, col:19> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d0fcfc8 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
`-CallExpr 0x55e83d0fd058 <col:11, col:19> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55e83d0fd040 <col:11> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0fcff0 <col:11> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
  `-ImplicitCastExpr 0x55e83d0fd088 <col:18> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fd018 <col:18> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B13.6] = [B13.5]
   8: DeclRefExpr 0x55e83d0fd0f0 <sds.c:205:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
   9: ImplicitCastExpr 0x55e83d0fd130 <sds.c:205:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd0f0 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B13.8] (ImplicitCastExpr, LValueToRValue, sds)
  10: CStyleCastExpr 0x55e83d0fd148 <sds.c:205:10, col:17> 'char *' <NoOp>
`-ImplicitCastExpr 0x55e83d0fd130 <col:17> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd0f0 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
(char *)[B13.9] (CStyleCastExpr, NoOp, char *)
  11: DeclRefExpr 0x55e83d0fd170 <sds.c:205:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
sdsHdrSize
  12: ImplicitCastExpr 0x55e83d0fd1c0 <sds.c:205:19> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fd170 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
[B13.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
  13: DeclRefExpr 0x55e83d0fd198 <sds.c:205:30> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
oldtype
  14: ImplicitCastExpr 0x55e83d0fd208 <sds.c:205:30> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd198 <col:30> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
[B13.13] (ImplicitCastExpr, LValueToRValue, char)
  15: CallExpr 0x55e83d0fd1d8 <sds.c:205:19, col:37> 'int'
|-ImplicitCastExpr 0x55e83d0fd1c0 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fd170 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
`-ImplicitCastExpr 0x55e83d0fd208 <col:30> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd198 <col:30> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
[B13.12]([B13.14])
  16: BinaryOperator 0x55e83d0fd220 <sds.c:205:10, col:37> 'char *' '-'
|-CStyleCastExpr 0x55e83d0fd148 <col:10, col:17> 'char *' <NoOp>
| `-ImplicitCastExpr 0x55e83d0fd130 <col:17> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fd0f0 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-CallExpr 0x55e83d0fd1d8 <col:19, col:37> 'int'
  |-ImplicitCastExpr 0x55e83d0fd1c0 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0fd170 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
  `-ImplicitCastExpr 0x55e83d0fd208 <col:30> 'char' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0fd198 <col:30> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
[B13.10] - [B13.15]
  17: ImplicitCastExpr 0x55e83d0fd248 <sds.c:205:10, col:37> 'void *' <BitCast>
`-BinaryOperator 0x55e83d0fd220 <col:10, col:37> 'char *' '-'
  |-CStyleCastExpr 0x55e83d0fd148 <col:10, col:17> 'char *' <NoOp>
  | `-ImplicitCastExpr 0x55e83d0fd130 <col:17> 'sds':'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0fd0f0 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
  `-CallExpr 0x55e83d0fd1d8 <col:19, col:37> 'int'
    |-ImplicitCastExpr 0x55e83d0fd1c0 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d0fd170 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
    `-ImplicitCastExpr 0x55e83d0fd208 <col:30> 'char' <LValueToRValue>
      `-DeclRefExpr 0x55e83d0fd198 <col:30> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
[B13.16] (ImplicitCastExpr, BitCast, void *)
  18: DeclRefExpr 0x55e83d0fd0c8 <sds.c:205:5> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
sh
  19: BinaryOperator 0x55e83d0fd260 <sds.c:205:5, col:37> 'void *' '='
|-DeclRefExpr 0x55e83d0fd0c8 <col:5> 'void *' lvalue Var 0x55e83d0fc848 'sh' 'void *'
`-ImplicitCastExpr 0x55e83d0fd248 <col:10, col:37> 'void *' <BitCast>
  `-BinaryOperator 0x55e83d0fd220 <col:10, col:37> 'char *' '-'
    |-CStyleCastExpr 0x55e83d0fd148 <col:10, col:17> 'char *' <NoOp>
    | `-ImplicitCastExpr 0x55e83d0fd130 <col:17> 'sds':'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d0fd0f0 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
    `-CallExpr 0x55e83d0fd1d8 <col:19, col:37> 'int'
      |-ImplicitCastExpr 0x55e83d0fd1c0 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55e83d0fd170 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
      `-ImplicitCastExpr 0x55e83d0fd208 <col:30> 'char' <LValueToRValue>
        `-DeclRefExpr 0x55e83d0fd198 <col:30> 'char' lvalue Var 0x55e83d0fcc18 'oldtype' 'char'
[B13.18] = [B13.17]
  20: DeclRefExpr 0x55e83d0fd2b0 <sds.c:206:15> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
len
  21: ImplicitCastExpr 0x55e83d0fd300 <sds.c:206:15> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd2b0 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
[B13.20] (ImplicitCastExpr, LValueToRValue, size_t)
  22: DeclRefExpr 0x55e83d0fd2d8 <sds.c:206:19> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0fc6f0 'addlen' 'size_t':'unsigned long'
addlen
  23: ImplicitCastExpr 0x55e83d0fd318 <sds.c:206:19> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd2d8 <col:19> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0fc6f0 'addlen' 'size_t':'unsigned long'
[B13.22] (ImplicitCastExpr, LValueToRValue, size_t)
  24: BinaryOperator 0x55e83d0fd330 <sds.c:206:15, col:19> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d0fd300 <col:15> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fd2b0 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fd318 <col:19> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fd2d8 <col:19> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0fc6f0 'addlen' 'size_t':'unsigned long'
[B13.21] + [B13.23]
  25: DeclRefExpr 0x55e83d0fd288 <sds.c:206:5> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
  26: BinaryOperator 0x55e83d0fd378 <sds.c:206:5, col:25> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d0fd288 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
`-ParenExpr 0x55e83d0fd358 <col:14, col:25> 'unsigned long'
  `-BinaryOperator 0x55e83d0fd330 <col:15, col:19> 'unsigned long' '+'
    |-ImplicitCastExpr 0x55e83d0fd300 <col:15> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d0fd2b0 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d0fca98 'len' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d0fd318 <col:19> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55e83d0fd2d8 <col:19> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0fc6f0 'addlen' 'size_t':'unsigned long'
[B13.25] = ([B13.24])
  27: DeclRefExpr 0x55e83d0fd3a0 <sds.c:207:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
newlen
  28: ImplicitCastExpr 0x55e83d0fd450 <sds.c:207:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fd3a0 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
[B13.27] (ImplicitCastExpr, LValueToRValue, size_t)
  29: IntegerLiteral 0x55e83d0fd3c8 <./sds.h:36:27> 'int' 1024
1024
  30: IntegerLiteral 0x55e83d0fd3e8 <./sds.h:36:32> 'int' 1024
1024
  31: BinaryOperator 0x55e83d0fd408 <./sds.h:36:27, col:32> 'int' '*'
|-IntegerLiteral 0x55e83d0fd3c8 <col:27> 'int' 1024
`-IntegerLiteral 0x55e83d0fd3e8 <col:32> 'int' 1024
[B13.29] * [B13.30]
  32: ImplicitCastExpr 0x55e83d0fd468 <./sds.h:36:26, col:36> 'unsigned long' <IntegralCast>
`-ParenExpr 0x55e83d0fd430 <col:26, col:36> 'int'
  `-BinaryOperator 0x55e83d0fd408 <col:27, col:32> 'int' '*'
    |-IntegerLiteral 0x55e83d0fd3c8 <col:27> 'int' 1024
    `-IntegerLiteral 0x55e83d0fd3e8 <col:32> 'int' 1024
([B13.31]) (ImplicitCastExpr, IntegralCast, unsigned long)
  33: BinaryOperator 0x55e83d0fd480 <sds.c:207:9, ./sds.h:36:36> 'int' '<'
|-ImplicitCastExpr 0x55e83d0fd450 <sds.c:207:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fd3a0 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fcb08 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fd468 <./sds.h:36:26, col:36> 'unsigned long' <IntegralCast>
  `-ParenExpr 0x55e83d0fd430 <col:26, col:36> 'int'
    `-BinaryOperator 0x55e83d0fd408 <col:27, col:32> 'int' '*'
      |-IntegerLiteral 0x55e83d0fd3c8 <col:27> 'int' 1024
      `-IntegerLiteral 0x55e83d0fd3e8 <col:32> 'int' 1024
[B13.28] < [B13.32]
   T: if [B13.33]
   Preds (1): B15
   Succs (2): B12 B11

 [B14]
   1: DeclRefExpr 0x55e83d0fcf38 <sds.c:202:33> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d0fcf60 <sds.c:202:33> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fcf38 <col:33> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B14.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: ReturnStmt 0x55e83d0fcf78 <sds.c:202:26, col:33>
`-ImplicitCastExpr 0x55e83d0fcf60 <col:33> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fcf38 <col:33> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
return [B14.2];
   Preds (1): B15
   Succs (1): B0

 [B15]
   1: DeclStmt 0x55e83d12f050 <sds.c:195:11>col:11
`-VarDecl 0x55e83d0fc848 <col:5, col:11> col:11 used sh 'void *'
void *sh;
   2: DeclStmt 0x55e83d12f038 <sds.c:195:16>col:16
`-VarDecl 0x55e83d0fc8c0 <col:5, col:16> col:16 used newsh 'void *'
void *newsh;
   3: DeclRefExpr 0x55e83d0fc9c0 <sds.c:196:20> 'size_t (const sds)' Function 0x55e83d0543c0 'sdsavail' 'size_t (const sds)'
sdsavail
   4: ImplicitCastExpr 0x55e83d0fca10 <sds.c:196:20> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0fc9c0 <col:20> 'size_t (const sds)' Function 0x55e83d0543c0 'sdsavail' 'size_t (const sds)'
[B15.3] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   5: DeclRefExpr 0x55e83d0fc9e8 <sds.c:196:29> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
   6: ImplicitCastExpr 0x55e83d0fca58 <sds.c:196:29> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fc9e8 <col:29> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B15.5] (ImplicitCastExpr, LValueToRValue, sds)
   7: CallExpr 0x55e83d0fca28 <sds.c:196:20, col:30> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d0fca10 <col:20> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0fc9c0 <col:20> 'size_t (const sds)' Function 0x55e83d0543c0 'sdsavail' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d0fca58 <col:29> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fc9e8 <col:29> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B15.4]([B15.6])
   8: DeclStmt 0x55e83d0fca70 <sds.c:196:5, col:31>col:12
`-VarDecl 0x55e83d0fc960 <col:5, col:30> col:12 used avail 'size_t':'unsigned long' cinit
  `-CallExpr 0x55e83d0fca28 <col:20, col:30> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55e83d0fca10 <col:20> 'size_t (*)(const sds)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d0fc9c0 <col:20> 'size_t (const sds)' Function 0x55e83d0543c0 'sdsavail' 'size_t (const sds)'
    `-ImplicitCastExpr 0x55e83d0fca58 <col:29> 'sds':'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d0fc9e8 <col:29> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
size_t avail = sdsavail(s);
   9: DeclStmt 0x55e83d12f020 <sds.c:197:12>col:12
`-VarDecl 0x55e83d0fca98 <col:5, col:12> col:12 used len 'size_t':'unsigned long'
size_t len;
  10: DeclStmt 0x55e83d12f008 <sds.c:197:17>col:17
`-VarDecl 0x55e83d0fcb08 <col:5, col:17> col:17 used newlen 'size_t':'unsigned long'
size_t newlen;
  11: DeclStmt 0x55e83d12eff0 <sds.c:198:10>col:10
`-VarDecl 0x55e83d0fcba8 <col:5, col:10> col:10 used type 'char'
char type;
  12: DeclRefExpr 0x55e83d0fcc78 <sds.c:198:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
s
  13: ImplicitCastExpr 0x55e83d0fcce0 <sds.c:198:26> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fcc78 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
[B15.12] (ImplicitCastExpr, LValueToRValue, sds)
  14: IntegerLiteral 0x55e83d0fcca0 <sds.c:198:29> 'int' 1
1
  15: UnaryOperator 0x55e83d0fccc0 <sds.c:198:28, col:29> 'int' prefix '-'
`-IntegerLiteral 0x55e83d0fcca0 <col:29> 'int' 1
-[B15.14]
  16: ArraySubscriptExpr 0x55e83d0fccf8 <sds.c:198:26, col:30> 'char' lvalue
|-ImplicitCastExpr 0x55e83d0fcce0 <col:26> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fcc78 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
`-UnaryOperator 0x55e83d0fccc0 <col:28, col:29> 'int' prefix '-'
  `-IntegerLiteral 0x55e83d0fcca0 <col:29> 'int' 1
[B15.13][[B15.15]]
  17: ImplicitCastExpr 0x55e83d0fcd60 <sds.c:198:26, col:30> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d0fccf8 <col:26, col:30> 'char' lvalue
  |-ImplicitCastExpr 0x55e83d0fcce0 <col:26> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d0fcc78 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
  `-UnaryOperator 0x55e83d0fccc0 <col:28, col:29> 'int' prefix '-'
    `-IntegerLiteral 0x55e83d0fcca0 <col:29> 'int' 1
[B15.16] (ImplicitCastExpr, LValueToRValue, char)
  18: ImplicitCastExpr 0x55e83d0fcd78 <sds.c:198:26, col:30> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0fcd60 <col:26, col:30> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d0fccf8 <col:26, col:30> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d0fcce0 <col:26> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d0fcc78 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
    `-UnaryOperator 0x55e83d0fccc0 <col:28, col:29> 'int' prefix '-'
      `-IntegerLiteral 0x55e83d0fcca0 <col:29> 'int' 1
[B15.17] (ImplicitCastExpr, IntegralCast, int)
  19: IntegerLiteral 0x55e83d0fcd20 <./sds.h:83:23> 'int' 7
7
  20: BinaryOperator 0x55e83d0fcd90 <sds.c:198:26, ./sds.h:83:23> 'int' '&'
|-ImplicitCastExpr 0x55e83d0fcd78 <sds.c:198:26, col:30> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0fcd60 <col:26, col:30> 'char' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55e83d0fccf8 <col:26, col:30> 'char' lvalue
|     |-ImplicitCastExpr 0x55e83d0fcce0 <col:26> 'sds':'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55e83d0fcc78 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
|     `-UnaryOperator 0x55e83d0fccc0 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55e83d0fcca0 <col:29> 'int' 1
`-IntegerLiteral 0x55e83d0fcd20 <./sds.h:83:23> 'int' 7
[B15.18] & [B15.19]
  21: ImplicitCastExpr 0x55e83d0fcdb8 <sds.c:198:26, ./sds.h:83:23> 'char' <IntegralCast>
`-BinaryOperator 0x55e83d0fcd90 <sds.c:198:26, ./sds.h:83:23> 'int' '&'
  |-ImplicitCastExpr 0x55e83d0fcd78 <sds.c:198:26, col:30> 'int' <IntegralCast>
  | `-ImplicitCastExpr 0x55e83d0fcd60 <col:26, col:30> 'char' <LValueToRValue>
  |   `-ArraySubscriptExpr 0x55e83d0fccf8 <col:26, col:30> 'char' lvalue
  |     |-ImplicitCastExpr 0x55e83d0fcce0 <col:26> 'sds':'char *' <LValueToRValue>
  |     | `-DeclRefExpr 0x55e83d0fcc78 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
  |     `-UnaryOperator 0x55e83d0fccc0 <col:28, col:29> 'int' prefix '-'
  |       `-IntegerLiteral 0x55e83d0fcca0 <col:29> 'int' 1
  `-IntegerLiteral 0x55e83d0fcd20 <./sds.h:83:23> 'int' 7
[B15.20] (ImplicitCastExpr, IntegralCast, char)
  22: DeclStmt 0x55e83d134a58 <sds.c:198:16, ./sds.h:83:23>sds.c:198:16
`-VarDecl 0x55e83d0fcc18 <col:5, ./sds.h:83:23> sds.c:198:16 used oldtype 'char' cinit
  `-ImplicitCastExpr 0x55e83d0fcdb8 <col:26, ./sds.h:83:23> 'char' <IntegralCast>
    `-BinaryOperator 0x55e83d0fcd90 <sds.c:198:26, ./sds.h:83:23> 'int' '&'
      |-ImplicitCastExpr 0x55e83d0fcd78 <sds.c:198:26, col:30> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x55e83d0fcd60 <col:26, col:30> 'char' <LValueToRValue>
      |   `-ArraySubscriptExpr 0x55e83d0fccf8 <col:26, col:30> 'char' lvalue
      |     |-ImplicitCastExpr 0x55e83d0fcce0 <col:26> 'sds':'char *' <LValueToRValue>
      |     | `-DeclRefExpr 0x55e83d0fcc78 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fc680 's' 'sds':'char *'
      |     `-UnaryOperator 0x55e83d0fccc0 <col:28, col:29> 'int' prefix '-'
      |       `-IntegerLiteral 0x55e83d0fcca0 <col:29> 'int' 1
      `-IntegerLiteral 0x55e83d0fcd20 <./sds.h:83:23> 'int' 7
char oldtype = s[-1] & 7;
  23: DeclStmt 0x55e83d0fce78 <sds.c:199:5, col:15>col:9
`-VarDecl 0x55e83d0fce18 <col:5, col:9> col:9 used hdrlen 'int'
int hdrlen;
  24: DeclRefExpr 0x55e83d0fce90 <sds.c:202:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fc960 'avail' 'size_t':'unsigned long'
avail
  25: ImplicitCastExpr 0x55e83d0fcee0 <sds.c:202:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fce90 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fc960 'avail' 'size_t':'unsigned long'
[B15.24] (ImplicitCastExpr, LValueToRValue, size_t)
  26: DeclRefExpr 0x55e83d0fceb8 <sds.c:202:18> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0fc6f0 'addlen' 'size_t':'unsigned long'
addlen
  27: ImplicitCastExpr 0x55e83d0fcef8 <sds.c:202:18> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fceb8 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0fc6f0 'addlen' 'size_t':'unsigned long'
[B15.26] (ImplicitCastExpr, LValueToRValue, size_t)
  28: BinaryOperator 0x55e83d0fcf10 <sds.c:202:9, col:18> 'int' '>='
|-ImplicitCastExpr 0x55e83d0fcee0 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0fce90 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d0fc960 'avail' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fcef8 <col:18> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fceb8 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0fc6f0 'addlen' 'size_t':'unsigned long'
[B15.25] >= [B15.27]
   T: if [B15.28]
   Preds (1): B16
   Succs (2): B14 B13

 [B0 (EXIT)]
   Preds (4): B1 B3 B6 B14
