sds sdsjoinsds(sds *argv, int argc, const char *sep, size_t seplen)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x55e83d12b6b8 <sds.c:1105:12> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
join
   2: ImplicitCastExpr 0x55e83d12b6e0 <sds.c:1105:12> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b6b8 <col:12> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
[B1.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: ReturnStmt 0x55e83d12b6f8 <sds.c:1105:5, col:12>
`-ImplicitCastExpr 0x55e83d12b6e0 <col:12> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12b6b8 <col:12> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
return [B1.2];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d12b120 <sds.c:1101:27> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
j
   2: UnaryOperator 0x55e83d12b148 <sds.c:1101:27, col:28> 'int' postfix '++'
`-DeclRefExpr 0x55e83d12b120 <col:27> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B2.1]++
   Preds (2): B3 B4
   Succs (1): B5

 [B3]
   1: DeclRefExpr 0x55e83d12b4a8 <sds.c:1103:33> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
   2: ImplicitCastExpr 0x55e83d12b548 <sds.c:1103:33> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d12b4a8 <col:33> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
   3: DeclRefExpr 0x55e83d12b4d0 <sds.c:1103:43> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
join
   4: ImplicitCastExpr 0x55e83d12b5a0 <sds.c:1103:43> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b4d0 <col:43> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d12b4f8 <sds.c:1103:48> 'const char *' lvalue ParmVar 0x55e83d12acb8 'sep' 'const char *'
sep
   6: ImplicitCastExpr 0x55e83d12b5b8 <sds.c:1103:48> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b4f8 <col:48> 'const char *' lvalue ParmVar 0x55e83d12acb8 'sep' 'const char *'
[B3.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: ImplicitCastExpr 0x55e83d12b5d0 <sds.c:1103:48> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d12b5b8 <col:48> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12b4f8 <col:48> 'const char *' lvalue ParmVar 0x55e83d12acb8 'sep' 'const char *'
[B3.6] (ImplicitCastExpr, BitCast, const void *)
   8: DeclRefExpr 0x55e83d12b520 <sds.c:1103:52> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d12ad28 'seplen' 'size_t':'unsigned long'
seplen
   9: ImplicitCastExpr 0x55e83d12b5e8 <sds.c:1103:52> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b520 <col:52> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d12ad28 'seplen' 'size_t':'unsigned long'
[B3.8] (ImplicitCastExpr, LValueToRValue, size_t)
  10: CallExpr 0x55e83d12b560 <sds.c:1103:33, col:58> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d12b548 <col:33> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d12b4a8 <col:33> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x55e83d12b5a0 <col:43> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12b4d0 <col:43> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
|-ImplicitCastExpr 0x55e83d12b5d0 <col:48> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d12b5b8 <col:48> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d12b4f8 <col:48> 'const char *' lvalue ParmVar 0x55e83d12acb8 'sep' 'const char *'
`-ImplicitCastExpr 0x55e83d12b5e8 <col:52> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12b520 <col:52> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d12ad28 'seplen' 'size_t':'unsigned long'
[B3.2]([B3.4], [B3.7], [B3.9])
  11: DeclRefExpr 0x55e83d12b480 <sds.c:1103:26> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
join
  12: BinaryOperator 0x55e83d12b600 <sds.c:1103:26, col:58> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d12b480 <col:26> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
`-CallExpr 0x55e83d12b560 <col:33, col:58> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d12b548 <col:33> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d12b4a8 <col:33> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d12b5a0 <col:43> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12b4d0 <col:43> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d12b5d0 <col:48> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d12b5b8 <col:48> 'const char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d12b4f8 <col:48> 'const char *' lvalue ParmVar 0x55e83d12acb8 'sep' 'const char *'
  `-ImplicitCastExpr 0x55e83d12b5e8 <col:52> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d12b520 <col:52> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d12ad28 'seplen' 'size_t':'unsigned long'
[B3.11] = [B3.10]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55e83d12b190 <sds.c:1102:16> 'sds (sds, const sds)' Function 0x55e83d10b310 'sdscatsds' 'sds (sds, const sds)'
sdscatsds
   2: ImplicitCastExpr 0x55e83d12b2e8 <sds.c:1102:16> 'sds (*)(sds, const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d12b190 <col:16> 'sds (sds, const sds)' Function 0x55e83d10b310 'sdscatsds' 'sds (sds, const sds)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const sds))
   3: DeclRefExpr 0x55e83d12b1b8 <sds.c:1102:26> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
join
   4: ImplicitCastExpr 0x55e83d12b338 <sds.c:1102:26> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b1b8 <col:26> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d12b1e0 <sds.c:1102:32> 'sds *' lvalue ParmVar 0x55e83d12abc8 'argv' 'sds *'
argv
   6: ImplicitCastExpr 0x55e83d12b230 <sds.c:1102:32> 'sds *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b1e0 <col:32> 'sds *' lvalue ParmVar 0x55e83d12abc8 'argv' 'sds *'
[B4.5] (ImplicitCastExpr, LValueToRValue, sds *)
   7: DeclRefExpr 0x55e83d12b208 <sds.c:1102:37> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
j
   8: ImplicitCastExpr 0x55e83d12b248 <sds.c:1102:37> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b208 <col:37> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B4.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55e83d12b260 <sds.c:1102:32, col:38> 'sds':'char *' lvalue
|-ImplicitCastExpr 0x55e83d12b230 <col:32> 'sds *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12b1e0 <col:32> 'sds *' lvalue ParmVar 0x55e83d12abc8 'argv' 'sds *'
`-ImplicitCastExpr 0x55e83d12b248 <col:37> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12b208 <col:37> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B4.6][[B4.8]]
  10: ImplicitCastExpr 0x55e83d12b350 <sds.c:1102:32, col:38> 'sds':'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d12b260 <col:32, col:38> 'sds':'char *' lvalue
  |-ImplicitCastExpr 0x55e83d12b230 <col:32> 'sds *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12b1e0 <col:32> 'sds *' lvalue ParmVar 0x55e83d12abc8 'argv' 'sds *'
  `-ImplicitCastExpr 0x55e83d12b248 <col:37> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d12b208 <col:37> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B4.9] (ImplicitCastExpr, LValueToRValue, sds)
  11: CallExpr 0x55e83d12b300 <sds.c:1102:16, col:39> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d12b2e8 <col:16> 'sds (*)(sds, const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d12b190 <col:16> 'sds (sds, const sds)' Function 0x55e83d10b310 'sdscatsds' 'sds (sds, const sds)'
|-ImplicitCastExpr 0x55e83d12b338 <col:26> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12b1b8 <col:26> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d12b350 <col:32, col:38> 'sds':'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d12b260 <col:32, col:38> 'sds':'char *' lvalue
    |-ImplicitCastExpr 0x55e83d12b230 <col:32> 'sds *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d12b1e0 <col:32> 'sds *' lvalue ParmVar 0x55e83d12abc8 'argv' 'sds *'
    `-ImplicitCastExpr 0x55e83d12b248 <col:37> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d12b208 <col:37> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B4.2]([B4.4], [B4.10])
  12: DeclRefExpr 0x55e83d12b168 <sds.c:1102:9> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
join
  13: BinaryOperator 0x55e83d12b368 <sds.c:1102:9, col:39> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d12b168 <col:9> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
`-CallExpr 0x55e83d12b300 <col:16, col:39> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d12b2e8 <col:16> 'sds (*)(sds, const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d12b190 <col:16> 'sds (sds, const sds)' Function 0x55e83d10b310 'sdscatsds' 'sds (sds, const sds)'
  |-ImplicitCastExpr 0x55e83d12b338 <col:26> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12b1b8 <col:26> 'sds':'char *' lvalue Var 0x55e83d12ae98 'join' 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d12b350 <col:32, col:38> 'sds':'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55e83d12b260 <col:32, col:38> 'sds':'char *' lvalue
      |-ImplicitCastExpr 0x55e83d12b230 <col:32> 'sds *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d12b1e0 <col:32> 'sds *' lvalue ParmVar 0x55e83d12abc8 'argv' 'sds *'
      `-ImplicitCastExpr 0x55e83d12b248 <col:37> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d12b208 <col:37> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B4.12] = [B4.11]
  14: DeclRefExpr 0x55e83d12b390 <sds.c:1103:13> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
j
  15: ImplicitCastExpr 0x55e83d12b440 <sds.c:1103:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b390 <col:13> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B4.14] (ImplicitCastExpr, LValueToRValue, int)
  16: DeclRefExpr 0x55e83d12b3b8 <sds.c:1103:18> 'int' lvalue ParmVar 0x55e83d12ac40 'argc' 'int'
argc
  17: ImplicitCastExpr 0x55e83d12b400 <sds.c:1103:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b3b8 <col:18> 'int' lvalue ParmVar 0x55e83d12ac40 'argc' 'int'
[B4.16] (ImplicitCastExpr, LValueToRValue, int)
  18: IntegerLiteral 0x55e83d12b3e0 <sds.c:1103:23> 'int' 1
1
  19: BinaryOperator 0x55e83d12b418 <sds.c:1103:18, col:23> 'int' '-'
|-ImplicitCastExpr 0x55e83d12b400 <col:18> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12b3b8 <col:18> 'int' lvalue ParmVar 0x55e83d12ac40 'argc' 'int'
`-IntegerLiteral 0x55e83d12b3e0 <col:23> 'int' 1
[B4.17] - [B4.18]
  20: BinaryOperator 0x55e83d12b458 <sds.c:1103:13, col:23> 'int' '!='
|-ImplicitCastExpr 0x55e83d12b440 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12b390 <col:13> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
`-BinaryOperator 0x55e83d12b418 <col:18, col:23> 'int' '-'
  |-ImplicitCastExpr 0x55e83d12b400 <col:18> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12b3b8 <col:18> 'int' lvalue ParmVar 0x55e83d12ac40 'argc' 'int'
  `-IntegerLiteral 0x55e83d12b3e0 <col:23> 'int' 1
[B4.15] != [B4.19]
   T: if [B4.20]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55e83d12b078 <sds.c:1101:17> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
j
   2: ImplicitCastExpr 0x55e83d12b0c8 <sds.c:1101:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b078 <col:17> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d12b0a0 <sds.c:1101:21> 'int' lvalue ParmVar 0x55e83d12ac40 'argc' 'int'
argc
   4: ImplicitCastExpr 0x55e83d12b0e0 <sds.c:1101:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12b0a0 <col:21> 'int' lvalue ParmVar 0x55e83d12ac40 'argc' 'int'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55e83d12b0f8 <sds.c:1101:17, col:21> 'int' '<'
|-ImplicitCastExpr 0x55e83d12b0c8 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12b078 <col:17> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
`-ImplicitCastExpr 0x55e83d12b0e0 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12b0a0 <col:21> 'int' lvalue ParmVar 0x55e83d12ac40 'argc' 'int'
[B5.2] < [B5.4]
   T: for (...; [B5.5]; ...)
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x55e83d12aef8 <sds.c:1098:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
sdsempty
   2: ImplicitCastExpr 0x55e83d12af20 <sds.c:1098:16> 'sds (*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d12aef8 <col:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(void))
   3: CallExpr 0x55e83d12af38 <sds.c:1098:16, col:25> 'sds':'char *'
`-ImplicitCastExpr 0x55e83d12af20 <col:16> 'sds (*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d12aef8 <col:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
[B6.2]()
   4: DeclStmt 0x55e83d12af60 <sds.c:1098:5, col:26>col:9
`-VarDecl 0x55e83d12ae98 <col:5, col:25> col:9 used join 'sds':'char *' cinit
  `-CallExpr 0x55e83d12af38 <col:16, col:25> 'sds':'char *'
    `-ImplicitCastExpr 0x55e83d12af20 <col:16> 'sds (*)(void)' <FunctionToPointerDecay>
      `-DeclRefExpr 0x55e83d12aef8 <col:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
sds join = sdsempty();
   5: DeclStmt 0x55e83d12aff0 <sds.c:1099:5, col:10>col:9
`-VarDecl 0x55e83d12af90 <col:5, col:9> col:9 used j 'int'
int j;
   6: IntegerLiteral 0x55e83d12b030 <sds.c:1101:14> 'int' 0
0
   7: DeclRefExpr 0x55e83d12b008 <sds.c:1101:10> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
j
   8: BinaryOperator 0x55e83d12b050 <sds.c:1101:10, col:14> 'int' '='
|-DeclRefExpr 0x55e83d12b008 <col:10> 'int' lvalue Var 0x55e83d12af90 'j' 'int'
`-IntegerLiteral 0x55e83d12b030 <col:14> 'int' 0
[B6.7] = [B6.6]
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (1): B1
