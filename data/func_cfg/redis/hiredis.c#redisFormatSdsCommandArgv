int redisFormatSdsCommandArgv(sds *target, int argc, const char **argv, const size_t *argvlen)
 [B25 (ENTRY)]
   Succs (1): B24

 [B1]
   1: ConditionalOperator 0x562807060018 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x56280705fc48 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x56280705fc20 <hiredis.c:597:12, col:25> 'int' '=='
|   |-ImplicitCastExpr 0x56280705fc08 <col:12, col:22> 'unsigned long long' <IntegralCast>
|   | `-CallExpr 0x56280705fb80 <col:12, col:22> 'size_t':'unsigned long'
|   |   |-ImplicitCastExpr 0x56280705fb68 <col:12> 'size_t (*)(const sds)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56280705fb18 <col:12> 'size_t (const sds)' Function 0x562807019500 'sdslen' 'size_t (const sds)'
|   |   `-ImplicitCastExpr 0x56280705fbb0 <col:19> 'sds':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56280705fb40 <col:19> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
|   `-ImplicitCastExpr 0x56280705fbf0 <col:25> 'unsigned long long' <LValueToRValue>
|     `-DeclRefExpr 0x56280705fbc8 <col:25> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
|-CStyleCastExpr 0x56280705fce8 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x56280705fcc8 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x56280705fc68 <col:28> 'int' 0
`-CallExpr 0x56280705ff70 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x56280705ff58 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705fd10 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x56280705ffb8 <<scratch space>:145:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x56280705fd78 <col:1> 'const char [20]' lvalue "sdslen(cmd)==totlen"
  |-ImplicitCastExpr 0x56280705ffd0 <line:146:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x56280705fdb8 <col:1> 'const char [10]' lvalue "hiredis.c"
  |-ImplicitCastExpr 0x56280705ffe8 <line:147:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x56280705fdf0 <col:1> 'int' 597
  `-ImplicitCastExpr 0x562807060000 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x56280705ff38 <col:30, col:44> 'const char [73]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x56280705ff18 <col:44> 'const char [73]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x56280705fe88 <col:44> 'const char [73]' lvalue "int redisFormatSdsCommandArgv(sds *, int, const char **, const size_t *)"
([B4.9]) ? [B2.2] : [B3.12]
   2: DeclRefExpr 0x5628070600c8 <hiredis.c:599:15> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
   3: ImplicitCastExpr 0x5628070600f0 <hiredis.c:599:15> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x5628070600c8 <col:15> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B1.2] (ImplicitCastExpr, LValueToRValue, sds)
   4: DeclRefExpr 0x562807060068 <hiredis.c:599:6> 'sds *' lvalue ParmVar 0x56280705d9e0 'target' 'sds *'
target
   5: ImplicitCastExpr 0x562807060090 <hiredis.c:599:6> 'sds *' <LValueToRValue>
`-DeclRefExpr 0x562807060068 <col:6> 'sds *' lvalue ParmVar 0x56280705d9e0 'target' 'sds *'
[B1.4] (ImplicitCastExpr, LValueToRValue, sds *)
   6: UnaryOperator 0x5628070600a8 <hiredis.c:599:5, col:6> 'sds':'char *' lvalue prefix '*'
`-ImplicitCastExpr 0x562807060090 <col:6> 'sds *' <LValueToRValue>
  `-DeclRefExpr 0x562807060068 <col:6> 'sds *' lvalue ParmVar 0x56280705d9e0 'target' 'sds *'
*[B1.5]
   7: BinaryOperator 0x562807060108 <hiredis.c:599:5, col:15> 'sds':'char *' '='
|-UnaryOperator 0x5628070600a8 <col:5, col:6> 'sds':'char *' lvalue prefix '*'
| `-ImplicitCastExpr 0x562807060090 <col:6> 'sds *' <LValueToRValue>
|   `-DeclRefExpr 0x562807060068 <col:6> 'sds *' lvalue ParmVar 0x56280705d9e0 'target' 'sds *'
`-ImplicitCastExpr 0x5628070600f0 <col:15> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x5628070600c8 <col:15> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B1.6] = [B1.3]
   8: DeclRefExpr 0x562807060130 <hiredis.c:600:12> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
totlen
   9: ImplicitCastExpr 0x562807060158 <hiredis.c:600:12> 'unsigned long long' <LValueToRValue>
`-DeclRefExpr 0x562807060130 <col:12> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B1.8] (ImplicitCastExpr, LValueToRValue, unsigned long long)
  10: ImplicitCastExpr 0x562807060170 <hiredis.c:600:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x562807060158 <col:12> 'unsigned long long' <LValueToRValue>
  `-DeclRefExpr 0x562807060130 <col:12> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B1.9] (ImplicitCastExpr, IntegralCast, int)
  11: ReturnStmt 0x562807060188 <hiredis.c:600:5, col:12>
`-ImplicitCastExpr 0x562807060170 <col:12> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x562807060158 <col:12> 'unsigned long long' <LValueToRValue>
    `-DeclRefExpr 0x562807060130 <col:12> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
return [B1.10];
   Preds (2): B2 B3(Unreachable)
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x56280705fc68 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x56280705fce8 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x56280705fcc8 <col:27, col:29> 'int'
  `-IntegerLiteral 0x56280705fc68 <col:28> 'int' 0
(void)([B2.1]) (CStyleCastExpr, ToVoid, void)
   Preds (1): B4
   Succs (1): B1

 [B3 (NORETURN)]
   1: DeclRefExpr 0x56280705fd10 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x56280705ff58 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705fd10 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x56280705fd78 <<scratch space>:145:1> 'const char [20]' lvalue "sdslen(cmd)==totlen"
"sdslen(cmd)==totlen"
   4: ImplicitCastExpr 0x56280705ffb8 <<scratch space>:145:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x56280705fd78 <col:1> 'const char [20]' lvalue "sdslen(cmd)==totlen"
[B3.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x56280705fdb8 <<scratch space>:146:1> 'const char [10]' lvalue "hiredis.c"
"hiredis.c"
   6: ImplicitCastExpr 0x56280705ffd0 <<scratch space>:146:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x56280705fdb8 <col:1> 'const char [10]' lvalue "hiredis.c"
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x56280705fdf0 <<scratch space>:147:1> 'int' 597
597
   8: ImplicitCastExpr 0x56280705ffe8 <<scratch space>:147:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x56280705fdf0 <col:1> 'int' 597
[B3.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x56280705fe88 </usr/include/assert.h:129:44> 'const char [73]' lvalue "int redisFormatSdsCommandArgv(sds *, int, const char **, const size_t *)"
"int redisFormatSdsCommandArgv(sds *, int, const char **, const size_t *)"
  10: PredefinedExpr 0x56280705ff18 </usr/include/assert.h:129:44> 'const char [73]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x56280705fe88 <col:44> 'const char [73]' lvalue "int redisFormatSdsCommandArgv(sds *, int, const char **, const size_t *)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x562807060000 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x56280705ff38 <col:30, col:44> 'const char [73]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x56280705ff18 <col:44> 'const char [73]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x56280705fe88 <col:44> 'const char [73]' lvalue "int redisFormatSdsCommandArgv(sds *, int, const char **, const size_t *)"
__extension__ [B3.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x56280705ff70 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x56280705ff58 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705fd10 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x56280705ffb8 <<scratch space>:145:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x56280705fd78 <col:1> 'const char [20]' lvalue "sdslen(cmd)==totlen"
|-ImplicitCastExpr 0x56280705ffd0 <line:146:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x56280705fdb8 <col:1> 'const char [10]' lvalue "hiredis.c"
|-ImplicitCastExpr 0x56280705ffe8 <line:147:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x56280705fdf0 <col:1> 'int' 597
`-ImplicitCastExpr 0x562807060000 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x56280705ff38 <col:30, col:44> 'const char [73]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x56280705ff18 <col:44> 'const char [73]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x56280705fe88 <col:44> 'const char [73]' lvalue "int redisFormatSdsCommandArgv(sds *, int, const char **, const size_t *)"
[B3.2]([B3.4], [B3.6], [B3.8], [B3.11])
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x56280705fb18 <hiredis.c:597:12> 'size_t (const sds)' Function 0x562807019500 'sdslen' 'size_t (const sds)'
sdslen
   2: ImplicitCastExpr 0x56280705fb68 <hiredis.c:597:12> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705fb18 <col:12> 'size_t (const sds)' Function 0x562807019500 'sdslen' 'size_t (const sds)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   3: DeclRefExpr 0x56280705fb40 <hiredis.c:597:19> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
   4: ImplicitCastExpr 0x56280705fbb0 <hiredis.c:597:19> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705fb40 <col:19> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: CallExpr 0x56280705fb80 <hiredis.c:597:12, col:22> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x56280705fb68 <col:12> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705fb18 <col:12> 'size_t (const sds)' Function 0x562807019500 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x56280705fbb0 <col:19> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x56280705fb40 <col:19> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B4.2]([B4.4])
   6: ImplicitCastExpr 0x56280705fc08 <hiredis.c:597:12, col:22> 'unsigned long long' <IntegralCast>
`-CallExpr 0x56280705fb80 <col:12, col:22> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x56280705fb68 <col:12> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705fb18 <col:12> 'size_t (const sds)' Function 0x562807019500 'sdslen' 'size_t (const sds)'
  `-ImplicitCastExpr 0x56280705fbb0 <col:19> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x56280705fb40 <col:19> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B4.5] (ImplicitCastExpr, IntegralCast, unsigned long long)
   7: DeclRefExpr 0x56280705fbc8 <hiredis.c:597:25> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
totlen
   8: ImplicitCastExpr 0x56280705fbf0 <hiredis.c:597:25> 'unsigned long long' <LValueToRValue>
`-DeclRefExpr 0x56280705fbc8 <col:25> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B4.7] (ImplicitCastExpr, LValueToRValue, unsigned long long)
   9: BinaryOperator 0x56280705fc20 <hiredis.c:597:12, col:25> 'int' '=='
|-ImplicitCastExpr 0x56280705fc08 <col:12, col:22> 'unsigned long long' <IntegralCast>
| `-CallExpr 0x56280705fb80 <col:12, col:22> 'size_t':'unsigned long'
|   |-ImplicitCastExpr 0x56280705fb68 <col:12> 'size_t (*)(const sds)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x56280705fb18 <col:12> 'size_t (const sds)' Function 0x562807019500 'sdslen' 'size_t (const sds)'
|   `-ImplicitCastExpr 0x56280705fbb0 <col:19> 'sds':'char *' <LValueToRValue>
|     `-DeclRefExpr 0x56280705fb40 <col:19> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-ImplicitCastExpr 0x56280705fbf0 <col:25> 'unsigned long long' <LValueToRValue>
  `-DeclRefExpr 0x56280705fbc8 <col:25> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B4.6] == [B4.8]
   T: ([B4.9]) ? ... : ...
   Preds (1): B10
   Succs (2): B2 B3

 [B5]
   1: DeclRefExpr 0x56280705f128 <hiredis.c:590:25> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   2: UnaryOperator 0x56280705f150 <hiredis.c:590:25, col:26> 'int' postfix '++'
`-DeclRefExpr 0x56280705f128 <col:25> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B5.1]++
   Preds (1): B6
   Succs (1): B10

 [B6]
   1: ConditionalOperator 0x56280705f3e0 <hiredis.c:591:15, col:52> 'unsigned long'
|-ImplicitCastExpr 0x56280705f3b0 <col:15> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x56280705f198 <col:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
|-ImplicitCastExpr 0x56280705f3c8 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
| `-ArraySubscriptExpr 0x56280705f240 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
|   |-ImplicitCastExpr 0x56280705f210 <col:25> 'const size_t *' <LValueToRValue>
|   | `-DeclRefExpr 0x56280705f1c0 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
|   `-ImplicitCastExpr 0x56280705f228 <col:33> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x56280705f1e8 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
`-CallExpr 0x56280705f368 <col:38, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x56280705f350 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705f268 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
  `-ImplicitCastExpr 0x56280705f398 <col:45, col:51> 'const char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x56280705f310 <col:45, col:51> 'const char *' lvalue
      |-ImplicitCastExpr 0x56280705f2e0 <col:45> 'const char **' <LValueToRValue>
      | `-DeclRefExpr 0x56280705f290 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
      `-ImplicitCastExpr 0x56280705f2f8 <col:50> 'int' <LValueToRValue>
        `-DeclRefExpr 0x56280705f2b8 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B9.2] ? [B7.6] : [B8.9]
   2: DeclRefExpr 0x56280705f170 <hiredis.c:591:9> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
len
   3: BinaryOperator 0x56280705f410 <hiredis.c:591:9, col:52> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x56280705f170 <col:9> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
`-ConditionalOperator 0x56280705f3e0 <col:15, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x56280705f3b0 <col:15> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705f198 <col:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
  |-ImplicitCastExpr 0x56280705f3c8 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
  | `-ArraySubscriptExpr 0x56280705f240 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |   |-ImplicitCastExpr 0x56280705f210 <col:25> 'const size_t *' <LValueToRValue>
  |   | `-DeclRefExpr 0x56280705f1c0 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
  |   `-ImplicitCastExpr 0x56280705f228 <col:33> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x56280705f1e8 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
  `-CallExpr 0x56280705f368 <col:38, col:52> 'unsigned long'
    |-ImplicitCastExpr 0x56280705f350 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56280705f268 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
    `-ImplicitCastExpr 0x56280705f398 <col:45, col:51> 'const char *' <LValueToRValue>
      `-ArraySubscriptExpr 0x56280705f310 <col:45, col:51> 'const char *' lvalue
        |-ImplicitCastExpr 0x56280705f2e0 <col:45> 'const char **' <LValueToRValue>
        | `-DeclRefExpr 0x56280705f290 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
        `-ImplicitCastExpr 0x56280705f2f8 <col:50> 'int' <LValueToRValue>
          `-DeclRefExpr 0x56280705f2b8 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B6.2] = [B6.1]
   4: DeclRefExpr 0x56280705f460 <hiredis.c:592:15> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
sdscatfmt
   5: ImplicitCastExpr 0x56280705f508 <hiredis.c:592:15> 'sds (*)(sds, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705f460 <col:15> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
[B6.4] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const char *, ...))
   6: DeclRefExpr 0x56280705f488 <hiredis.c:592:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
   7: ImplicitCastExpr 0x56280705f560 <hiredis.c:592:25> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705f488 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B6.6] (ImplicitCastExpr, LValueToRValue, sds)
   8: StringLiteral 0x56280705f4b0 <hiredis.c:592:30> 'const char [6]' lvalue "$%u\r\n"
"$%u\r\n"
   9: ImplicitCastExpr 0x56280705f578 <hiredis.c:592:30> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x56280705f4b0 <col:30> 'const char [6]' lvalue "$%u\r\n"
[B6.8] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  10: DeclRefExpr 0x56280705f4e0 <hiredis.c:592:41> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
len
  11: ImplicitCastExpr 0x56280705f590 <hiredis.c:592:41> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x56280705f4e0 <col:41> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B6.10] (ImplicitCastExpr, LValueToRValue, size_t)
  12: CallExpr 0x56280705f520 <hiredis.c:592:15, col:44> 'sds':'char *'
|-ImplicitCastExpr 0x56280705f508 <col:15> 'sds (*)(sds, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705f460 <col:15> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
|-ImplicitCastExpr 0x56280705f560 <col:25> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x56280705f488 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
|-ImplicitCastExpr 0x56280705f578 <col:30> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x56280705f4b0 <col:30> 'const char [6]' lvalue "$%u\r\n"
`-ImplicitCastExpr 0x56280705f590 <col:41> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x56280705f4e0 <col:41> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B6.5]([B6.7], [B6.9], [B6.11])
  13: DeclRefExpr 0x56280705f438 <hiredis.c:592:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  14: BinaryOperator 0x56280705f5a8 <hiredis.c:592:9, col:44> 'sds':'char *' '='
|-DeclRefExpr 0x56280705f438 <col:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-CallExpr 0x56280705f520 <col:15, col:44> 'sds':'char *'
  |-ImplicitCastExpr 0x56280705f508 <col:15> 'sds (*)(sds, const char *, ...)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705f460 <col:15> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
  |-ImplicitCastExpr 0x56280705f560 <col:25> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705f488 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
  |-ImplicitCastExpr 0x56280705f578 <col:30> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x56280705f4b0 <col:30> 'const char [6]' lvalue "$%u\r\n"
  `-ImplicitCastExpr 0x56280705f590 <col:41> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x56280705f4e0 <col:41> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B6.13] = [B6.12]
  15: DeclRefExpr 0x56280705f5f8 <hiredis.c:593:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
  16: ImplicitCastExpr 0x56280705f718 <hiredis.c:593:15> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705f5f8 <col:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
[B6.15] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
  17: DeclRefExpr 0x56280705f620 <hiredis.c:593:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  18: ImplicitCastExpr 0x56280705f770 <hiredis.c:593:25> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705f620 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B6.17] (ImplicitCastExpr, LValueToRValue, sds)
  19: DeclRefExpr 0x56280705f648 <hiredis.c:593:30> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
argv
  20: ImplicitCastExpr 0x56280705f698 <hiredis.c:593:30> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x56280705f648 <col:30> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
[B6.19] (ImplicitCastExpr, LValueToRValue, const char **)
  21: DeclRefExpr 0x56280705f670 <hiredis.c:593:35> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
  22: ImplicitCastExpr 0x56280705f6b0 <hiredis.c:593:35> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705f670 <col:35> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B6.21] (ImplicitCastExpr, LValueToRValue, int)
  23: ArraySubscriptExpr 0x56280705f6c8 <hiredis.c:593:30, col:36> 'const char *' lvalue
|-ImplicitCastExpr 0x56280705f698 <col:30> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x56280705f648 <col:30> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
`-ImplicitCastExpr 0x56280705f6b0 <col:35> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705f670 <col:35> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B6.20][[B6.22]]
  24: ImplicitCastExpr 0x56280705f788 <hiredis.c:593:30, col:36> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x56280705f6c8 <col:30, col:36> 'const char *' lvalue
  |-ImplicitCastExpr 0x56280705f698 <col:30> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x56280705f648 <col:30> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
  `-ImplicitCastExpr 0x56280705f6b0 <col:35> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56280705f670 <col:35> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B6.23] (ImplicitCastExpr, LValueToRValue, const char *)
  25: ImplicitCastExpr 0x56280705f7a0 <hiredis.c:593:30, col:36> 'const void *' <BitCast>
`-ImplicitCastExpr 0x56280705f788 <col:30, col:36> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x56280705f6c8 <col:30, col:36> 'const char *' lvalue
    |-ImplicitCastExpr 0x56280705f698 <col:30> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x56280705f648 <col:30> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
    `-ImplicitCastExpr 0x56280705f6b0 <col:35> 'int' <LValueToRValue>
      `-DeclRefExpr 0x56280705f670 <col:35> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B6.24] (ImplicitCastExpr, BitCast, const void *)
  26: DeclRefExpr 0x56280705f6f0 <hiredis.c:593:39> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
len
  27: ImplicitCastExpr 0x56280705f7b8 <hiredis.c:593:39> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x56280705f6f0 <col:39> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B6.26] (ImplicitCastExpr, LValueToRValue, size_t)
  28: CallExpr 0x56280705f730 <hiredis.c:593:15, col:42> 'sds':'char *'
|-ImplicitCastExpr 0x56280705f718 <col:15> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705f5f8 <col:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x56280705f770 <col:25> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x56280705f620 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
|-ImplicitCastExpr 0x56280705f7a0 <col:30, col:36> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x56280705f788 <col:30, col:36> 'const char *' <LValueToRValue>
|   `-ArraySubscriptExpr 0x56280705f6c8 <col:30, col:36> 'const char *' lvalue
|     |-ImplicitCastExpr 0x56280705f698 <col:30> 'const char **' <LValueToRValue>
|     | `-DeclRefExpr 0x56280705f648 <col:30> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
|     `-ImplicitCastExpr 0x56280705f6b0 <col:35> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56280705f670 <col:35> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
`-ImplicitCastExpr 0x56280705f7b8 <col:39> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x56280705f6f0 <col:39> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B6.16]([B6.18], [B6.25], [B6.27])
  29: DeclRefExpr 0x56280705f5d0 <hiredis.c:593:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  30: BinaryOperator 0x56280705f7d0 <hiredis.c:593:9, col:42> 'sds':'char *' '='
|-DeclRefExpr 0x56280705f5d0 <col:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-CallExpr 0x56280705f730 <col:15, col:42> 'sds':'char *'
  |-ImplicitCastExpr 0x56280705f718 <col:15> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705f5f8 <col:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x56280705f770 <col:25> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705f620 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
  |-ImplicitCastExpr 0x56280705f7a0 <col:30, col:36> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x56280705f788 <col:30, col:36> 'const char *' <LValueToRValue>
  |   `-ArraySubscriptExpr 0x56280705f6c8 <col:30, col:36> 'const char *' lvalue
  |     |-ImplicitCastExpr 0x56280705f698 <col:30> 'const char **' <LValueToRValue>
  |     | `-DeclRefExpr 0x56280705f648 <col:30> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
  |     `-ImplicitCastExpr 0x56280705f6b0 <col:35> 'int' <LValueToRValue>
  |       `-DeclRefExpr 0x56280705f670 <col:35> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
  `-ImplicitCastExpr 0x56280705f7b8 <col:39> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x56280705f6f0 <col:39> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B6.29] = [B6.28]
  31: DeclRefExpr 0x56280705f820 <hiredis.c:594:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
  32: ImplicitCastExpr 0x56280705f9e8 <hiredis.c:594:15> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705f820 <col:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
[B6.31] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
  33: DeclRefExpr 0x56280705f848 <hiredis.c:594:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  34: ImplicitCastExpr 0x56280705fa40 <hiredis.c:594:25> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705f848 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B6.33] (ImplicitCastExpr, LValueToRValue, sds)
  35: StringLiteral 0x56280705f8e8 <hiredis.c:594:30> 'const char [3]' lvalue "\r\n"
"\r\n"
  36: ImplicitCastExpr 0x56280705fa58 <hiredis.c:594:30> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x56280705f8e8 <col:30> 'const char [3]' lvalue "\r\n"
[B6.35] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  37: ImplicitCastExpr 0x56280705fa70 <hiredis.c:594:30> 'const void *' <BitCast>
`-ImplicitCastExpr 0x56280705fa58 <col:30> 'const char *' <ArrayToPointerDecay>
  `-StringLiteral 0x56280705f8e8 <col:30> 'const char [3]' lvalue "\r\n"
[B6.36] (ImplicitCastExpr, BitCast, const void *)
  38: UnaryExprOrTypeTraitExpr 0x56280705f968 <hiredis.c:594:38, col:51> 'unsigned long' sizeof
`-ParenExpr 0x56280705f948 <col:44, col:51> 'const char [3]' lvalue
  `-StringLiteral 0x56280705f918 <col:45> 'const char [3]' lvalue "\r\n"
sizeof ("\r\n")
  39: IntegerLiteral 0x56280705f988 <hiredis.c:594:53> 'int' 1
1
  40: ImplicitCastExpr 0x56280705f9a8 <hiredis.c:594:53> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x56280705f988 <col:53> 'int' 1
[B6.39] (ImplicitCastExpr, IntegralCast, unsigned long)
  41: BinaryOperator 0x56280705f9c0 <hiredis.c:594:38, col:53> 'unsigned long' '-'
|-UnaryExprOrTypeTraitExpr 0x56280705f968 <col:38, col:51> 'unsigned long' sizeof
| `-ParenExpr 0x56280705f948 <col:44, col:51> 'const char [3]' lvalue
|   `-StringLiteral 0x56280705f918 <col:45> 'const char [3]' lvalue "\r\n"
`-ImplicitCastExpr 0x56280705f9a8 <col:53> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x56280705f988 <col:53> 'int' 1
[B6.38] - [B6.40]
  42: CallExpr 0x56280705fa00 <hiredis.c:594:15, col:54> 'sds':'char *'
|-ImplicitCastExpr 0x56280705f9e8 <col:15> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705f820 <col:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x56280705fa40 <col:25> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x56280705f848 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
|-ImplicitCastExpr 0x56280705fa70 <col:30> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x56280705fa58 <col:30> 'const char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x56280705f8e8 <col:30> 'const char [3]' lvalue "\r\n"
`-BinaryOperator 0x56280705f9c0 <col:38, col:53> 'unsigned long' '-'
  |-UnaryExprOrTypeTraitExpr 0x56280705f968 <col:38, col:51> 'unsigned long' sizeof
  | `-ParenExpr 0x56280705f948 <col:44, col:51> 'const char [3]' lvalue
  |   `-StringLiteral 0x56280705f918 <col:45> 'const char [3]' lvalue "\r\n"
  `-ImplicitCastExpr 0x56280705f9a8 <col:53> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x56280705f988 <col:53> 'int' 1
[B6.32]([B6.34], [B6.37], [B6.41])
  43: DeclRefExpr 0x56280705f7f8 <hiredis.c:594:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  44: BinaryOperator 0x56280705fa88 <hiredis.c:594:9, col:54> 'sds':'char *' '='
|-DeclRefExpr 0x56280705f7f8 <col:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-CallExpr 0x56280705fa00 <col:15, col:54> 'sds':'char *'
  |-ImplicitCastExpr 0x56280705f9e8 <col:15> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705f820 <col:15> 'sds (sds, const void *, size_t)' Function 0x562807024210 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x56280705fa40 <col:25> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705f848 <col:25> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
  |-ImplicitCastExpr 0x56280705fa70 <col:30> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x56280705fa58 <col:30> 'const char *' <ArrayToPointerDecay>
  |   `-StringLiteral 0x56280705f8e8 <col:30> 'const char [3]' lvalue "\r\n"
  `-BinaryOperator 0x56280705f9c0 <col:38, col:53> 'unsigned long' '-'
    |-UnaryExprOrTypeTraitExpr 0x56280705f968 <col:38, col:51> 'unsigned long' sizeof
    | `-ParenExpr 0x56280705f948 <col:44, col:51> 'const char [3]' lvalue
    |   `-StringLiteral 0x56280705f918 <col:45> 'const char [3]' lvalue "\r\n"
    `-ImplicitCastExpr 0x56280705f9a8 <col:53> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x56280705f988 <col:53> 'int' 1
[B6.43] = [B6.42]
   Preds (2): B7 B8
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x56280705f1c0 <hiredis.c:591:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x56280705f210 <hiredis.c:591:25> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x56280705f1c0 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
[B7.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   3: DeclRefExpr 0x56280705f1e8 <hiredis.c:591:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   4: ImplicitCastExpr 0x56280705f228 <hiredis.c:591:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705f1e8 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B7.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x56280705f240 <hiredis.c:591:25, col:34> 'const size_t':'const unsigned long' lvalue
|-ImplicitCastExpr 0x56280705f210 <col:25> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x56280705f1c0 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
`-ImplicitCastExpr 0x56280705f228 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705f1e8 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B7.2][[B7.4]]
   6: ImplicitCastExpr 0x56280705f3c8 <hiredis.c:591:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
`-ArraySubscriptExpr 0x56280705f240 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |-ImplicitCastExpr 0x56280705f210 <col:25> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705f1c0 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
  `-ImplicitCastExpr 0x56280705f228 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56280705f1e8 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, size_t)
   Preds (1): B9
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x56280705f268 <hiredis.c:591:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
strlen
   2: ImplicitCastExpr 0x56280705f350 <hiredis.c:591:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705f268 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
   3: DeclRefExpr 0x56280705f290 <hiredis.c:591:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
argv
   4: ImplicitCastExpr 0x56280705f2e0 <hiredis.c:591:45> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x56280705f290 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
[B8.3] (ImplicitCastExpr, LValueToRValue, const char **)
   5: DeclRefExpr 0x56280705f2b8 <hiredis.c:591:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   6: ImplicitCastExpr 0x56280705f2f8 <hiredis.c:591:50> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705f2b8 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B8.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x56280705f310 <hiredis.c:591:45, col:51> 'const char *' lvalue
|-ImplicitCastExpr 0x56280705f2e0 <col:45> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x56280705f290 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
`-ImplicitCastExpr 0x56280705f2f8 <col:50> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705f2b8 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B8.4][[B8.6]]
   8: ImplicitCastExpr 0x56280705f398 <hiredis.c:591:45, col:51> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x56280705f310 <col:45, col:51> 'const char *' lvalue
  |-ImplicitCastExpr 0x56280705f2e0 <col:45> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x56280705f290 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
  `-ImplicitCastExpr 0x56280705f2f8 <col:50> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56280705f2b8 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B8.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: CallExpr 0x56280705f368 <hiredis.c:591:38, col:52> 'unsigned long'
|-ImplicitCastExpr 0x56280705f350 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705f268 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x56280705f398 <col:45, col:51> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x56280705f310 <col:45, col:51> 'const char *' lvalue
    |-ImplicitCastExpr 0x56280705f2e0 <col:45> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x56280705f290 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
    `-ImplicitCastExpr 0x56280705f2f8 <col:50> 'int' <LValueToRValue>
      `-DeclRefExpr 0x56280705f2b8 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B8.2]([B8.8])
   Preds (1): B9
   Succs (1): B6

 [B9]
   1: DeclRefExpr 0x56280705f198 <hiredis.c:591:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x56280705f3b0 <hiredis.c:591:15> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x56280705f198 <col:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
[B9.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   T: [B9.2] ? ... : ...
   Preds (1): B10
   Succs (2): B7 B8

 [B10]
   1: DeclRefExpr 0x56280705f080 <hiredis.c:590:15> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   2: ImplicitCastExpr 0x56280705f0d0 <hiredis.c:590:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705f080 <col:15> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x56280705f0a8 <hiredis.c:590:19> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
argc
   4: ImplicitCastExpr 0x56280705f0e8 <hiredis.c:590:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705f0a8 <col:19> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B10.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x56280705f100 <hiredis.c:590:15, col:19> 'int' '<'
|-ImplicitCastExpr 0x56280705f0d0 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56280705f080 <col:15> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
`-ImplicitCastExpr 0x56280705f0e8 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705f0a8 <col:19> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B10.2] < [B10.4]
   T: for (...; [B10.5]; ...)
   Preds (2): B5 B11
   Succs (2): B9 B4

 [B11]
   1: DeclRefExpr 0x56280705ee10 <hiredis.c:589:11> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
sdscatfmt
   2: ImplicitCastExpr 0x56280705ef48 <hiredis.c:589:11> 'sds (*)(sds, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705ee10 <col:11> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const char *, ...))
   3: DeclRefExpr 0x56280705ee38 <hiredis.c:589:21> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
   4: ImplicitCastExpr 0x56280705efa0 <hiredis.c:589:21> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705ee38 <col:21> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B11.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: StringLiteral 0x56280705ee60 <hiredis.c:589:26> 'const char [6]' lvalue "*%i\r\n"
"*%i\r\n"
   6: ImplicitCastExpr 0x56280705efb8 <hiredis.c:589:26> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x56280705ee60 <col:26> 'const char [6]' lvalue "*%i\r\n"
[B11.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: DeclRefExpr 0x56280705eec0 <hiredis.c:589:37> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
argc
   8: ImplicitCastExpr 0x56280705efd0 <hiredis.c:589:37> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705eec0 <col:37> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B11.7] (ImplicitCastExpr, LValueToRValue, int)
   9: CallExpr 0x56280705ef60 <hiredis.c:589:11, col:41> 'sds':'char *'
|-ImplicitCastExpr 0x56280705ef48 <col:11> 'sds (*)(sds, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705ee10 <col:11> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
|-ImplicitCastExpr 0x56280705efa0 <col:21> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x56280705ee38 <col:21> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
|-ImplicitCastExpr 0x56280705efb8 <col:26> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x56280705ee60 <col:26> 'const char [6]' lvalue "*%i\r\n"
`-ImplicitCastExpr 0x56280705efd0 <col:37> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705eec0 <col:37> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B11.2]([B11.4], [B11.6], [B11.8])
  10: DeclRefExpr 0x56280705ede8 <hiredis.c:589:5> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  11: BinaryOperator 0x56280705efe8 <hiredis.c:589:5, col:41> 'sds':'char *' '='
|-DeclRefExpr 0x56280705ede8 <col:5> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-CallExpr 0x56280705ef60 <col:11, col:41> 'sds':'char *'
  |-ImplicitCastExpr 0x56280705ef48 <col:11> 'sds (*)(sds, const char *, ...)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705ee10 <col:11> 'sds (sds, const char *, ...)' Function 0x5628070252c0 'sdscatfmt' 'sds (sds, const char *, ...)'
  |-ImplicitCastExpr 0x56280705efa0 <col:21> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705ee38 <col:21> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
  |-ImplicitCastExpr 0x56280705efb8 <col:26> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x56280705ee60 <col:26> 'const char [6]' lvalue "*%i\r\n"
  `-ImplicitCastExpr 0x56280705efd0 <col:37> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56280705eec0 <col:37> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B11.10] = [B11.9]
  12: IntegerLiteral 0x56280705f038 <hiredis.c:590:12> 'int' 0
0
  13: DeclRefExpr 0x56280705f010 <hiredis.c:590:10> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
  14: BinaryOperator 0x56280705f058 <hiredis.c:590:10, col:12> 'int' '='
|-DeclRefExpr 0x56280705f010 <col:10> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
`-IntegerLiteral 0x56280705f038 <col:12> 'int' 0
[B11.13] = [B11.12]
   Preds (1): B13
   Succs (1): B10

 [B12]
   1: IntegerLiteral 0x56280705ed58 <hiredis.c:586:17> 'int' 1
1
   2: UnaryOperator 0x56280705ed78 <hiredis.c:586:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x56280705ed58 <col:17> 'int' 1
-[B12.1]
   3: ReturnStmt 0x56280705ed98 <hiredis.c:586:9, col:17>
`-UnaryOperator 0x56280705ed78 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x56280705ed58 <col:17> 'int' 1
return [B12.2];
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclRefExpr 0x56280705eac0 <hiredis.c:584:11> 'sds (sds, size_t)' Function 0x562807029200 'sdsMakeRoomFor' 'sds (sds, size_t)'
sdsMakeRoomFor
   2: ImplicitCastExpr 0x56280705eb98 <hiredis.c:584:11> 'sds (*)(sds, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705eac0 <col:11> 'sds (sds, size_t)' Function 0x562807029200 'sdsMakeRoomFor' 'sds (sds, size_t)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, size_t))
   3: DeclRefExpr 0x56280705eae8 <hiredis.c:584:26> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
   4: ImplicitCastExpr 0x56280705ebe8 <hiredis.c:584:26> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705eae8 <col:26> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B13.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x56280705eb10 <hiredis.c:584:31> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
totlen
   6: ImplicitCastExpr 0x56280705ec00 <hiredis.c:584:31> 'unsigned long long' <LValueToRValue>
`-DeclRefExpr 0x56280705eb10 <col:31> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B13.5] (ImplicitCastExpr, LValueToRValue, unsigned long long)
   7: ImplicitCastExpr 0x56280705ec18 <hiredis.c:584:31> 'size_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x56280705ec00 <col:31> 'unsigned long long' <LValueToRValue>
  `-DeclRefExpr 0x56280705eb10 <col:31> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B13.6] (ImplicitCastExpr, IntegralCast, size_t)
   8: CallExpr 0x56280705ebb0 <hiredis.c:584:11, col:37> 'sds':'char *'
|-ImplicitCastExpr 0x56280705eb98 <col:11> 'sds (*)(sds, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705eac0 <col:11> 'sds (sds, size_t)' Function 0x562807029200 'sdsMakeRoomFor' 'sds (sds, size_t)'
|-ImplicitCastExpr 0x56280705ebe8 <col:26> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x56280705eae8 <col:26> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-ImplicitCastExpr 0x56280705ec18 <col:31> 'size_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x56280705ec00 <col:31> 'unsigned long long' <LValueToRValue>
    `-DeclRefExpr 0x56280705eb10 <col:31> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B13.2]([B13.4], [B13.7])
   9: DeclRefExpr 0x56280705ea98 <hiredis.c:584:5> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  10: BinaryOperator 0x56280705ec30 <hiredis.c:584:5, col:37> 'sds':'char *' '='
|-DeclRefExpr 0x56280705ea98 <col:5> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-CallExpr 0x56280705ebb0 <col:11, col:37> 'sds':'char *'
  |-ImplicitCastExpr 0x56280705eb98 <col:11> 'sds (*)(sds, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705eac0 <col:11> 'sds (sds, size_t)' Function 0x562807029200 'sdsMakeRoomFor' 'sds (sds, size_t)'
  |-ImplicitCastExpr 0x56280705ebe8 <col:26> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705eae8 <col:26> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
  `-ImplicitCastExpr 0x56280705ec18 <col:31> 'size_t':'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x56280705ec00 <col:31> 'unsigned long long' <LValueToRValue>
      `-DeclRefExpr 0x56280705eb10 <col:31> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
[B13.9] = [B13.8]
  11: DeclRefExpr 0x56280705ec58 <hiredis.c:585:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
  12: ImplicitCastExpr 0x56280705ed00 <hiredis.c:585:9> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705ec58 <col:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B13.11] (ImplicitCastExpr, LValueToRValue, sds)
  13: IntegerLiteral 0x56280705ec80 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  14: CStyleCastExpr 0x56280705ecb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56280705ec80 <col:24> 'int' 0
(void *)[B13.13] (CStyleCastExpr, NullToPointer, void *)
  15: ImplicitCastExpr 0x56280705ed18 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <BitCast>
`-ParenExpr 0x56280705ece0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56280705ecb8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56280705ec80 <col:24> 'int' 0
([B13.14]) (ImplicitCastExpr, BitCast, sds)
  16: BinaryOperator 0x56280705ed30 <hiredis.c:585:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x56280705ed00 <hiredis.c:585:9> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x56280705ec58 <col:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-ImplicitCastExpr 0x56280705ed18 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <BitCast>
  `-ParenExpr 0x56280705ece0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56280705ecb8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56280705ec80 <col:24> 'int' 0
[B13.12] == [B13.15]
   T: if [B13.16]
   Preds (1): B15
   Succs (2): B12 B11

 [B14]
   1: IntegerLiteral 0x56280705ea08 <hiredis.c:581:17> 'int' 1
1
   2: UnaryOperator 0x56280705ea28 <hiredis.c:581:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x56280705ea08 <col:17> 'int' 1
-[B14.1]
   3: ReturnStmt 0x56280705ea48 <hiredis.c:581:9, col:17>
`-UnaryOperator 0x56280705ea28 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x56280705ea08 <col:17> 'int' 1
return [B14.2];
   Preds (1): B15
   Succs (1): B0

 [B15]
   1: DeclRefExpr 0x56280705e878 <hiredis.c:579:11> 'sds (void)' Function 0x5628070239c0 'sdsempty' 'sds (void)'
sdsempty
   2: ImplicitCastExpr 0x56280705e8a0 <hiredis.c:579:11> 'sds (*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705e878 <col:11> 'sds (void)' Function 0x5628070239c0 'sdsempty' 'sds (void)'
[B15.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(void))
   3: CallExpr 0x56280705e8b8 <hiredis.c:579:11, col:20> 'sds':'char *'
`-ImplicitCastExpr 0x56280705e8a0 <col:11> 'sds (*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x56280705e878 <col:11> 'sds (void)' Function 0x5628070239c0 'sdsempty' 'sds (void)'
[B15.2]()
   4: DeclRefExpr 0x56280705e850 <hiredis.c:579:5> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
   5: BinaryOperator 0x56280705e8e0 <hiredis.c:579:5, col:20> 'sds':'char *' '='
|-DeclRefExpr 0x56280705e850 <col:5> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-CallExpr 0x56280705e8b8 <col:11, col:20> 'sds':'char *'
  `-ImplicitCastExpr 0x56280705e8a0 <col:11> 'sds (*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x56280705e878 <col:11> 'sds (void)' Function 0x5628070239c0 'sdsempty' 'sds (void)'
[B15.4] = [B15.3]
   6: DeclRefExpr 0x56280705e908 <hiredis.c:580:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
cmd
   7: ImplicitCastExpr 0x56280705e9b0 <hiredis.c:580:9> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x56280705e908 <col:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
[B15.6] (ImplicitCastExpr, LValueToRValue, sds)
   8: IntegerLiteral 0x56280705e930 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   9: CStyleCastExpr 0x56280705e968 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56280705e930 <col:24> 'int' 0
(void *)[B15.8] (CStyleCastExpr, NullToPointer, void *)
  10: ImplicitCastExpr 0x56280705e9c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <BitCast>
`-ParenExpr 0x56280705e990 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56280705e968 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56280705e930 <col:24> 'int' 0
([B15.9]) (ImplicitCastExpr, BitCast, sds)
  11: BinaryOperator 0x56280705e9e0 <hiredis.c:580:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x56280705e9b0 <hiredis.c:580:9> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x56280705e908 <col:9> 'sds':'char *' lvalue Var 0x56280705dcb8 'cmd' 'sds':'char *'
`-ImplicitCastExpr 0x56280705e9c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <BitCast>
  `-ParenExpr 0x56280705e990 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56280705e968 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56280705e930 <col:24> 'int' 0
[B15.7] == [B15.10]
   T: if [B15.11]
   Preds (1): B21
   Succs (2): B14 B13

 [B16]
   1: DeclRefExpr 0x56280705e3c0 <hiredis.c:573:27> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   2: UnaryOperator 0x56280705e3e8 <hiredis.c:573:27, col:28> 'int' postfix '++'
`-DeclRefExpr 0x56280705e3c0 <col:27> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B16.1]++
   Preds (1): B17
   Succs (1): B21

 [B17]
   1: ConditionalOperator 0x56280705e678 <hiredis.c:574:15, col:52> 'unsigned long'
|-ImplicitCastExpr 0x56280705e648 <col:15> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x56280705e430 <col:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
|-ImplicitCastExpr 0x56280705e660 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
| `-ArraySubscriptExpr 0x56280705e4d8 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
|   |-ImplicitCastExpr 0x56280705e4a8 <col:25> 'const size_t *' <LValueToRValue>
|   | `-DeclRefExpr 0x56280705e458 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
|   `-ImplicitCastExpr 0x56280705e4c0 <col:33> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x56280705e480 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
`-CallExpr 0x56280705e600 <col:38, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x56280705e5e8 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705e500 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
  `-ImplicitCastExpr 0x56280705e630 <col:45, col:51> 'const char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x56280705e5a8 <col:45, col:51> 'const char *' lvalue
      |-ImplicitCastExpr 0x56280705e578 <col:45> 'const char **' <LValueToRValue>
      | `-DeclRefExpr 0x56280705e528 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
      `-ImplicitCastExpr 0x56280705e590 <col:50> 'int' <LValueToRValue>
        `-DeclRefExpr 0x56280705e550 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B20.2] ? [B18.6] : [B19.9]
   2: DeclRefExpr 0x56280705e408 <hiredis.c:574:9> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
len
   3: BinaryOperator 0x56280705e6a8 <hiredis.c:574:9, col:52> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x56280705e408 <col:9> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
`-ConditionalOperator 0x56280705e678 <col:15, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x56280705e648 <col:15> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705e430 <col:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
  |-ImplicitCastExpr 0x56280705e660 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
  | `-ArraySubscriptExpr 0x56280705e4d8 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |   |-ImplicitCastExpr 0x56280705e4a8 <col:25> 'const size_t *' <LValueToRValue>
  |   | `-DeclRefExpr 0x56280705e458 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
  |   `-ImplicitCastExpr 0x56280705e4c0 <col:33> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x56280705e480 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
  `-CallExpr 0x56280705e600 <col:38, col:52> 'unsigned long'
    |-ImplicitCastExpr 0x56280705e5e8 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56280705e500 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
    `-ImplicitCastExpr 0x56280705e630 <col:45, col:51> 'const char *' <LValueToRValue>
      `-ArraySubscriptExpr 0x56280705e5a8 <col:45, col:51> 'const char *' lvalue
        |-ImplicitCastExpr 0x56280705e578 <col:45> 'const char **' <LValueToRValue>
        | `-DeclRefExpr 0x56280705e528 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
        `-ImplicitCastExpr 0x56280705e590 <col:50> 'int' <LValueToRValue>
          `-DeclRefExpr 0x56280705e550 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B17.2] = [B17.1]
   4: DeclRefExpr 0x56280705e6d0 <hiredis.c:575:9> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
totlen
   5: DeclRefExpr 0x56280705e6f8 <hiredis.c:575:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
bulklen
   6: ImplicitCastExpr 0x56280705e748 <hiredis.c:575:19> 'size_t (*)(size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705e6f8 <col:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
[B17.5] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(size_t))
   7: DeclRefExpr 0x56280705e720 <hiredis.c:575:27> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
len
   8: ImplicitCastExpr 0x56280705e790 <hiredis.c:575:27> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x56280705e720 <col:27> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B17.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: CallExpr 0x56280705e760 <hiredis.c:575:19, col:30> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x56280705e748 <col:19> 'size_t (*)(size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705e6f8 <col:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
`-ImplicitCastExpr 0x56280705e790 <col:27> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x56280705e720 <col:27> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B17.6]([B17.8])
  10: ImplicitCastExpr 0x56280705e7a8 <hiredis.c:575:19, col:30> 'unsigned long long' <IntegralCast>
`-CallExpr 0x56280705e760 <col:19, col:30> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x56280705e748 <col:19> 'size_t (*)(size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705e6f8 <col:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
  `-ImplicitCastExpr 0x56280705e790 <col:27> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x56280705e720 <col:27> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B17.9] (ImplicitCastExpr, IntegralCast, unsigned long long)
  11: CompoundAssignOperator 0x56280705e7c0 <hiredis.c:575:9, col:30> 'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|-DeclRefExpr 0x56280705e6d0 <col:9> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
`-ImplicitCastExpr 0x56280705e7a8 <col:19, col:30> 'unsigned long long' <IntegralCast>
  `-CallExpr 0x56280705e760 <col:19, col:30> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x56280705e748 <col:19> 'size_t (*)(size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56280705e6f8 <col:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
    `-ImplicitCastExpr 0x56280705e790 <col:27> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x56280705e720 <col:27> 'size_t':'unsigned long' lvalue Var 0x56280705deb0 'len' 'size_t':'unsigned long'
[B17.4] += [B17.10]
   Preds (2): B18 B19
   Succs (1): B16

 [B18]
   1: DeclRefExpr 0x56280705e458 <hiredis.c:574:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x56280705e4a8 <hiredis.c:574:25> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x56280705e458 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
[B18.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   3: DeclRefExpr 0x56280705e480 <hiredis.c:574:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   4: ImplicitCastExpr 0x56280705e4c0 <hiredis.c:574:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705e480 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B18.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x56280705e4d8 <hiredis.c:574:25, col:34> 'const size_t':'const unsigned long' lvalue
|-ImplicitCastExpr 0x56280705e4a8 <col:25> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x56280705e458 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
`-ImplicitCastExpr 0x56280705e4c0 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705e480 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B18.2][[B18.4]]
   6: ImplicitCastExpr 0x56280705e660 <hiredis.c:574:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
`-ArraySubscriptExpr 0x56280705e4d8 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |-ImplicitCastExpr 0x56280705e4a8 <col:25> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x56280705e458 <col:25> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
  `-ImplicitCastExpr 0x56280705e4c0 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56280705e480 <col:33> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B18.5] (ImplicitCastExpr, LValueToRValue, size_t)
   Preds (1): B20
   Succs (1): B17

 [B19]
   1: DeclRefExpr 0x56280705e500 <hiredis.c:574:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
strlen
   2: ImplicitCastExpr 0x56280705e5e8 <hiredis.c:574:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705e500 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
[B19.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
   3: DeclRefExpr 0x56280705e528 <hiredis.c:574:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
argv
   4: ImplicitCastExpr 0x56280705e578 <hiredis.c:574:45> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x56280705e528 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
[B19.3] (ImplicitCastExpr, LValueToRValue, const char **)
   5: DeclRefExpr 0x56280705e550 <hiredis.c:574:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   6: ImplicitCastExpr 0x56280705e590 <hiredis.c:574:50> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705e550 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B19.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x56280705e5a8 <hiredis.c:574:45, col:51> 'const char *' lvalue
|-ImplicitCastExpr 0x56280705e578 <col:45> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x56280705e528 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
`-ImplicitCastExpr 0x56280705e590 <col:50> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705e550 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B19.4][[B19.6]]
   8: ImplicitCastExpr 0x56280705e630 <hiredis.c:574:45, col:51> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x56280705e5a8 <col:45, col:51> 'const char *' lvalue
  |-ImplicitCastExpr 0x56280705e578 <col:45> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x56280705e528 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
  `-ImplicitCastExpr 0x56280705e590 <col:50> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56280705e550 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B19.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: CallExpr 0x56280705e600 <hiredis.c:574:38, col:52> 'unsigned long'
|-ImplicitCastExpr 0x56280705e5e8 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705e500 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x56280705e630 <col:45, col:51> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x56280705e5a8 <col:45, col:51> 'const char *' lvalue
    |-ImplicitCastExpr 0x56280705e578 <col:45> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x56280705e528 <col:45> 'const char **' lvalue ParmVar 0x56280705dad0 'argv' 'const char **'
    `-ImplicitCastExpr 0x56280705e590 <col:50> 'int' <LValueToRValue>
      `-DeclRefExpr 0x56280705e550 <col:50> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B19.2]([B19.8])
   Preds (1): B20
   Succs (1): B17

 [B20]
   1: DeclRefExpr 0x56280705e430 <hiredis.c:574:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x56280705e648 <hiredis.c:574:15> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x56280705e430 <col:15> 'const size_t *' lvalue ParmVar 0x56280705db40 'argvlen' 'const size_t *'
[B20.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   T: [B20.2] ? ... : ...
   Preds (1): B21
   Succs (2): B18 B19

 [B21]
   1: DeclRefExpr 0x56280705e318 <hiredis.c:573:17> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
   2: ImplicitCastExpr 0x56280705e368 <hiredis.c:573:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705e318 <col:17> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
[B21.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x56280705e340 <hiredis.c:573:21> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
argc
   4: ImplicitCastExpr 0x56280705e380 <hiredis.c:573:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705e340 <col:21> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B21.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x56280705e398 <hiredis.c:573:17, col:21> 'int' '<'
|-ImplicitCastExpr 0x56280705e368 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56280705e318 <col:17> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
`-ImplicitCastExpr 0x56280705e380 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705e340 <col:21> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B21.2] < [B21.4]
   T: for (...; [B21.5]; ...)
   Preds (2): B16 B22
   Succs (2): B20 B15

 [B22]
   1: IntegerLiteral 0x56280705e0e0 <hiredis.c:572:14> 'int' 1
1
   2: ImplicitCastExpr 0x56280705e1c8 <hiredis.c:572:14> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x56280705e0e0 <col:14> 'int' 1
[B22.1] (ImplicitCastExpr, IntegralCast, unsigned int)
   3: DeclRefExpr 0x56280705e100 <hiredis.c:572:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
countDigits
   4: ImplicitCastExpr 0x56280705e150 <hiredis.c:572:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56280705e100 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
[B22.3] (ImplicitCastExpr, FunctionToPointerDecay, uint32_t (*)(uint64_t))
   5: DeclRefExpr 0x56280705e128 <hiredis.c:572:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
argc
   6: ImplicitCastExpr 0x56280705e198 <hiredis.c:572:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x56280705e128 <col:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B22.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ImplicitCastExpr 0x56280705e1b0 <hiredis.c:572:28> 'uint64_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x56280705e198 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56280705e128 <col:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B22.6] (ImplicitCastExpr, IntegralCast, uint64_t)
   8: CallExpr 0x56280705e168 <hiredis.c:572:16, col:32> 'uint32_t':'unsigned int'
|-ImplicitCastExpr 0x56280705e150 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56280705e100 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
`-ImplicitCastExpr 0x56280705e1b0 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x56280705e198 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56280705e128 <col:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B22.4]([B22.7])
   9: BinaryOperator 0x56280705e1e0 <hiredis.c:572:14, col:32> 'unsigned int' '+'
|-ImplicitCastExpr 0x56280705e1c8 <col:14> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x56280705e0e0 <col:14> 'int' 1
`-CallExpr 0x56280705e168 <col:16, col:32> 'uint32_t':'unsigned int'
  |-ImplicitCastExpr 0x56280705e150 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56280705e100 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
  `-ImplicitCastExpr 0x56280705e1b0 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x56280705e198 <col:28> 'int' <LValueToRValue>
      `-DeclRefExpr 0x56280705e128 <col:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
[B22.2] + [B22.8]
  10: IntegerLiteral 0x56280705e208 <hiredis.c:572:34> 'int' 2
2
  11: ImplicitCastExpr 0x56280705e228 <hiredis.c:572:34> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x56280705e208 <col:34> 'int' 2
[B22.10] (ImplicitCastExpr, IntegralCast, unsigned int)
  12: BinaryOperator 0x56280705e240 <hiredis.c:572:14, col:34> 'unsigned int' '+'
|-BinaryOperator 0x56280705e1e0 <col:14, col:32> 'unsigned int' '+'
| |-ImplicitCastExpr 0x56280705e1c8 <col:14> 'unsigned int' <IntegralCast>
| | `-IntegerLiteral 0x56280705e0e0 <col:14> 'int' 1
| `-CallExpr 0x56280705e168 <col:16, col:32> 'uint32_t':'unsigned int'
|   |-ImplicitCastExpr 0x56280705e150 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x56280705e100 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
|   `-ImplicitCastExpr 0x56280705e1b0 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
|     `-ImplicitCastExpr 0x56280705e198 <col:28> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56280705e128 <col:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
`-ImplicitCastExpr 0x56280705e228 <col:34> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x56280705e208 <col:34> 'int' 2
[B22.9] + [B22.11]
  13: ImplicitCastExpr 0x56280705e268 <hiredis.c:572:14, col:34> 'unsigned long long' <IntegralCast>
`-BinaryOperator 0x56280705e240 <col:14, col:34> 'unsigned int' '+'
  |-BinaryOperator 0x56280705e1e0 <col:14, col:32> 'unsigned int' '+'
  | |-ImplicitCastExpr 0x56280705e1c8 <col:14> 'unsigned int' <IntegralCast>
  | | `-IntegerLiteral 0x56280705e0e0 <col:14> 'int' 1
  | `-CallExpr 0x56280705e168 <col:16, col:32> 'uint32_t':'unsigned int'
  |   |-ImplicitCastExpr 0x56280705e150 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
  |   | `-DeclRefExpr 0x56280705e100 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
  |   `-ImplicitCastExpr 0x56280705e1b0 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
  |     `-ImplicitCastExpr 0x56280705e198 <col:28> 'int' <LValueToRValue>
  |       `-DeclRefExpr 0x56280705e128 <col:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
  `-ImplicitCastExpr 0x56280705e228 <col:34> 'unsigned int' <IntegralCast>
    `-IntegerLiteral 0x56280705e208 <col:34> 'int' 2
[B22.12] (ImplicitCastExpr, IntegralCast, unsigned long long)
  14: DeclRefExpr 0x56280705e0b8 <hiredis.c:572:5> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
totlen
  15: BinaryOperator 0x56280705e280 <hiredis.c:572:5, col:34> 'unsigned long long' '='
|-DeclRefExpr 0x56280705e0b8 <col:5> 'unsigned long long' lvalue Var 0x56280705dd48 'totlen' 'unsigned long long'
`-ImplicitCastExpr 0x56280705e268 <col:14, col:34> 'unsigned long long' <IntegralCast>
  `-BinaryOperator 0x56280705e240 <col:14, col:34> 'unsigned int' '+'
    |-BinaryOperator 0x56280705e1e0 <col:14, col:32> 'unsigned int' '+'
    | |-ImplicitCastExpr 0x56280705e1c8 <col:14> 'unsigned int' <IntegralCast>
    | | `-IntegerLiteral 0x56280705e0e0 <col:14> 'int' 1
    | `-CallExpr 0x56280705e168 <col:16, col:32> 'uint32_t':'unsigned int'
    |   |-ImplicitCastExpr 0x56280705e150 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x56280705e100 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
    |   `-ImplicitCastExpr 0x56280705e1b0 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
    |     `-ImplicitCastExpr 0x56280705e198 <col:28> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x56280705e128 <col:28> 'int' lvalue ParmVar 0x56280705da58 'argc' 'int'
    `-ImplicitCastExpr 0x56280705e228 <col:34> 'unsigned int' <IntegralCast>
      `-IntegerLiteral 0x56280705e208 <col:34> 'int' 2
[B22.14] = [B22.13]
  16: IntegerLiteral 0x56280705e2d0 <hiredis.c:573:14> 'int' 0
0
  17: DeclRefExpr 0x56280705e2a8 <hiredis.c:573:10> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
j
  18: BinaryOperator 0x56280705e2f0 <hiredis.c:573:10, col:14> 'int' '='
|-DeclRefExpr 0x56280705e2a8 <col:10> 'int' lvalue Var 0x56280705ddd8 'j' 'int'
`-IntegerLiteral 0x56280705e2d0 <col:14> 'int' 0
[B22.17] = [B22.16]
   Preds (1): B24
   Succs (1): B21

 [B23]
   1: IntegerLiteral 0x56280705e028 <hiredis.c:569:17> 'int' 1
1
   2: UnaryOperator 0x56280705e048 <hiredis.c:569:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x56280705e028 <col:17> 'int' 1
-[B23.1]
   3: ReturnStmt 0x56280705e068 <hiredis.c:569:9, col:17>
`-UnaryOperator 0x56280705e048 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x56280705e028 <col:17> 'int' 1
return [B23.2];
   Preds (1): B24
   Succs (1): B0

 [B24]
   1: DeclStmt 0x56280705dd18 <hiredis.c:562:5, col:12>col:9
`-VarDecl 0x56280705dcb8 <col:5, col:9> col:9 used cmd 'sds':'char *'
sds cmd;
   2: DeclStmt 0x56280705dda8 <hiredis.c:563:5, col:30>col:24
`-VarDecl 0x56280705dd48 <col:5, col:24> col:24 used totlen 'unsigned long long'
unsigned long long totlen;
   3: DeclStmt 0x56280705de38 <hiredis.c:564:5, col:10>col:9
`-VarDecl 0x56280705ddd8 <col:5, col:9> col:9 used j 'int'
int j;
   4: DeclStmt 0x56280705df10 <hiredis.c:565:5, col:15>col:12
`-VarDecl 0x56280705deb0 <col:5, col:12> col:12 used len 'size_t':'unsigned long'
size_t len;
   5: DeclRefExpr 0x56280705df28 <hiredis.c:568:9> 'sds *' lvalue ParmVar 0x56280705d9e0 'target' 'sds *'
target
   6: ImplicitCastExpr 0x56280705dfd0 <hiredis.c:568:9> 'sds *' <LValueToRValue>
`-DeclRefExpr 0x56280705df28 <col:9> 'sds *' lvalue ParmVar 0x56280705d9e0 'target' 'sds *'
[B24.5] (ImplicitCastExpr, LValueToRValue, sds *)
   7: IntegerLiteral 0x56280705df50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x56280705df88 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56280705df50 <col:24> 'int' 0
(void *)[B24.7] (CStyleCastExpr, NullToPointer, void *)
   9: ImplicitCastExpr 0x56280705dfe8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds *' <BitCast>
`-ParenExpr 0x56280705dfb0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56280705df88 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56280705df50 <col:24> 'int' 0
([B24.8]) (ImplicitCastExpr, BitCast, sds *)
  10: BinaryOperator 0x56280705e000 <hiredis.c:568:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x56280705dfd0 <hiredis.c:568:9> 'sds *' <LValueToRValue>
| `-DeclRefExpr 0x56280705df28 <col:9> 'sds *' lvalue ParmVar 0x56280705d9e0 'target' 'sds *'
`-ImplicitCastExpr 0x56280705dfe8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds *' <BitCast>
  `-ParenExpr 0x56280705dfb0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56280705df88 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56280705df50 <col:24> 'int' 0
[B24.6] == [B24.9]
   T: if [B24.10]
   Preds (1): B25
   Succs (2): B23 B22

 [B0 (EXIT)]
   Preds (5): B1 B3 B12 B14 B23
