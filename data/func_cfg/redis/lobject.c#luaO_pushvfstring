const char *luaO_pushvfstring(lua_State *L, const char *fmt, va_list argp)
 [B27 (ENTRY)]
   Succs (1): B26

 [B1]
   1: DeclRefExpr 0x5569011f46f8 <lobject.c:165:3> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
pushstr
   2: ImplicitCastExpr 0x5569011f4770 <lobject.c:165:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f46f8 <col:3> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x5569011f4720 <lobject.c:165:11> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5569011f47c0 <lobject.c:165:11> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f4720 <col:11> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5569011f4748 <lobject.c:165:14> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
fmt
   6: ImplicitCastExpr 0x5569011f47d8 <lobject.c:165:14> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f4748 <col:14> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x5569011f4788 <lobject.c:165:3, col:17> 'void'
|-ImplicitCastExpr 0x5569011f4770 <col:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f46f8 <col:3> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5569011f47c0 <col:11> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f4720 <col:11> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f47d8 <col:14> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f4748 <col:14> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x5569011f47f0 <lobject.c:166:3> 'void (lua_State *, int, int)' Function 0x5569011e5b78 'luaV_concat' 'void (lua_State *, int, int)'
luaV_concat
   9: ImplicitCastExpr 0x5569011f4b88 <lobject.c:166:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f47f0 <col:3> 'void (lua_State *, int, int)' Function 0x5569011e5b78 'luaV_concat' 'void (lua_State *, int, int)'
[B1.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  10: DeclRefExpr 0x5569011f4818 <lobject.c:166:15> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x5569011f4be0 <lobject.c:166:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f4818 <col:15> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: DeclRefExpr 0x5569011f4840 <lobject.c:166:18> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
n
  13: ImplicitCastExpr 0x5569011f4888 <lobject.c:166:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x5569011f4840 <col:18> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x5569011f4868 <lobject.c:166:20> 'int' 1
1
  15: BinaryOperator 0x5569011f48a0 <lobject.c:166:18, col:20> 'int' '+'
|-ImplicitCastExpr 0x5569011f4888 <col:18> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5569011f4840 <col:18> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
`-IntegerLiteral 0x5569011f4868 <col:20> 'int' 1
[B1.13] + [B1.14]
  16: DeclRefExpr 0x5569011f48c8 <lobject.c:166:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x5569011f48f0 <lobject.c:166:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f48c8 <col:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: MemberExpr 0x5569011f4908 <lobject.c:166:32, col:35> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f48f0 <col:32> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f48c8 <col:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.17]->top
  19: ImplicitCastExpr 0x5569011f49b8 <lobject.c:166:32, col:35> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f4908 <col:32, col:35> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f48f0 <col:32> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f48c8 <col:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.18] (ImplicitCastExpr, LValueToRValue, StkId)
  20: DeclRefExpr 0x5569011f4940 <lobject.c:166:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  21: ImplicitCastExpr 0x5569011f4968 <lobject.c:166:41> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f4940 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.20] (ImplicitCastExpr, LValueToRValue, lua_State *)
  22: MemberExpr 0x5569011f4980 <lobject.c:166:41, col:44> 'StkId':'TValue *' lvalue ->base 0x5569011ce060
`-ImplicitCastExpr 0x5569011f4968 <col:41> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f4940 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.21]->base
  23: ImplicitCastExpr 0x5569011f49d0 <lobject.c:166:41, col:44> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f4980 <col:41, col:44> 'StkId':'TValue *' lvalue ->base 0x5569011ce060
  `-ImplicitCastExpr 0x5569011f4968 <col:41> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f4940 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.22] (ImplicitCastExpr, LValueToRValue, StkId)
  24: BinaryOperator 0x5569011f49e8 <lobject.c:166:32, col:44> 'long' '-'
|-ImplicitCastExpr 0x5569011f49b8 <col:32, col:35> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5569011f4908 <col:32, col:35> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
|   `-ImplicitCastExpr 0x5569011f48f0 <col:32> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5569011f48c8 <col:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f49d0 <col:41, col:44> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5569011f4980 <col:41, col:44> 'StkId':'TValue *' lvalue ->base 0x5569011ce060
    `-ImplicitCastExpr 0x5569011f4968 <col:41> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f4940 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.19] - [B1.23]
  25: CStyleCastExpr 0x5569011f4a98 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x5569011f4a78 <col:26, col:30> 'long'
  `-ParenExpr 0x5569011f4a10 <line:80:31, col:33> 'long'
    `-BinaryOperator 0x5569011f49e8 <lobject.c:166:32, col:44> 'long' '-'
      |-ImplicitCastExpr 0x5569011f49b8 <col:32, col:35> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5569011f4908 <col:32, col:35> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
      |   `-ImplicitCastExpr 0x5569011f48f0 <col:32> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x5569011f48c8 <col:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
      `-ImplicitCastExpr 0x5569011f49d0 <col:41, col:44> 'StkId':'TValue *' <LValueToRValue>
        `-MemberExpr 0x5569011f4980 <col:41, col:44> 'StkId':'TValue *' lvalue ->base 0x5569011ce060
          `-ImplicitCastExpr 0x5569011f4968 <col:41> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x5569011f4940 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
(int)(([B1.24])) (CStyleCastExpr, IntegralCast, int)
  26: IntegerLiteral 0x5569011f4ae0 <lobject.c:166:52> 'int' 1
1
  27: BinaryOperator 0x5569011f4b00 <./llimits.h:75:22, lobject.c:166:52> 'int' '-'
|-ParenExpr 0x5569011f4ac0 <./llimits.h:75:22, col:31> 'int'
| `-CStyleCastExpr 0x5569011f4a98 <col:23, col:30> 'int' <IntegralCast>
|   `-ParenExpr 0x5569011f4a78 <col:26, col:30> 'long'
|     `-ParenExpr 0x5569011f4a10 <line:80:31, col:33> 'long'
|       `-BinaryOperator 0x5569011f49e8 <lobject.c:166:32, col:44> 'long' '-'
|         |-ImplicitCastExpr 0x5569011f49b8 <col:32, col:35> 'StkId':'TValue *' <LValueToRValue>
|         | `-MemberExpr 0x5569011f4908 <col:32, col:35> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
|         |   `-ImplicitCastExpr 0x5569011f48f0 <col:32> 'lua_State *' <LValueToRValue>
|         |     `-DeclRefExpr 0x5569011f48c8 <col:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
|         `-ImplicitCastExpr 0x5569011f49d0 <col:41, col:44> 'StkId':'TValue *' <LValueToRValue>
|           `-MemberExpr 0x5569011f4980 <col:41, col:44> 'StkId':'TValue *' lvalue ->base 0x5569011ce060
|             `-ImplicitCastExpr 0x5569011f4968 <col:41> 'lua_State *' <LValueToRValue>
|               `-DeclRefExpr 0x5569011f4940 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-IntegerLiteral 0x5569011f4ae0 <col:52> 'int' 1
([B1.25]) - [B1.26]
  28: CallExpr 0x5569011f4ba0 <lobject.c:166:3, col:53> 'void'
|-ImplicitCastExpr 0x5569011f4b88 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f47f0 <col:3> 'void (lua_State *, int, int)' Function 0x5569011e5b78 'luaV_concat' 'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5569011f4be0 <col:15> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f4818 <col:15> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
|-BinaryOperator 0x5569011f48a0 <col:18, col:20> 'int' '+'
| |-ImplicitCastExpr 0x5569011f4888 <col:18> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x5569011f4840 <col:18> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
| `-IntegerLiteral 0x5569011f4868 <col:20> 'int' 1
`-BinaryOperator 0x5569011f4b00 <./llimits.h:75:22, lobject.c:166:52> 'int' '-'
  |-ParenExpr 0x5569011f4ac0 <./llimits.h:75:22, col:31> 'int'
  | `-CStyleCastExpr 0x5569011f4a98 <col:23, col:30> 'int' <IntegralCast>
  |   `-ParenExpr 0x5569011f4a78 <col:26, col:30> 'long'
  |     `-ParenExpr 0x5569011f4a10 <line:80:31, col:33> 'long'
  |       `-BinaryOperator 0x5569011f49e8 <lobject.c:166:32, col:44> 'long' '-'
  |         |-ImplicitCastExpr 0x5569011f49b8 <col:32, col:35> 'StkId':'TValue *' <LValueToRValue>
  |         | `-MemberExpr 0x5569011f4908 <col:32, col:35> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  |         |   `-ImplicitCastExpr 0x5569011f48f0 <col:32> 'lua_State *' <LValueToRValue>
  |         |     `-DeclRefExpr 0x5569011f48c8 <col:32> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
  |         `-ImplicitCastExpr 0x5569011f49d0 <col:41, col:44> 'StkId':'TValue *' <LValueToRValue>
  |           `-MemberExpr 0x5569011f4980 <col:41, col:44> 'StkId':'TValue *' lvalue ->base 0x5569011ce060
  |             `-ImplicitCastExpr 0x5569011f4968 <col:41> 'lua_State *' <LValueToRValue>
  |               `-DeclRefExpr 0x5569011f4940 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
  `-IntegerLiteral 0x5569011f4ae0 <col:52> 'int' 1
[B1.9]([B1.11], [B1.15], [B1.27])
  29: DeclRefExpr 0x5569011f4bf8 <lobject.c:167:3> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x5569011f4c20 <lobject.c:167:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f4bf8 <col:3> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: MemberExpr 0x5569011f4c38 <lobject.c:167:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f4c20 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f4bf8 <col:3> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.30]->top
  32: DeclRefExpr 0x5569011f4c70 <lobject.c:167:13> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
n
  33: ImplicitCastExpr 0x5569011f4c98 <lobject.c:167:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x5569011f4c70 <col:13> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
[B1.32] (ImplicitCastExpr, LValueToRValue, int)
  34: CompoundAssignOperator 0x5569011f4cb0 <lobject.c:167:3, col:13> 'StkId':'TValue *' '-=' ComputeLHSTy='StkId':'TValue *' ComputeResultTy='StkId':'TValue *'
|-MemberExpr 0x5569011f4c38 <col:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
| `-ImplicitCastExpr 0x5569011f4c20 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x5569011f4bf8 <col:3> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f4c98 <col:13> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5569011f4c70 <col:13> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
[B1.31] -= [B1.33]
  35: DeclRefExpr 0x5569011f4ce8 <lobject.c:168:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  36: ImplicitCastExpr 0x5569011f4d10 <lobject.c:168:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.35] (ImplicitCastExpr, LValueToRValue, lua_State *)
  37: MemberExpr 0x5569011f4d28 <lobject.c:168:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.36]->top
  38: ImplicitCastExpr 0x5569011f4d80 <lobject.c:168:17, col:20> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B1.37] (ImplicitCastExpr, LValueToRValue, StkId)
  39: IntegerLiteral 0x5569011f4d60 <lobject.c:168:26> 'int' 1
1
  40: BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
|   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
[B1.38] - [B1.39]
  41: MemberExpr 0x5569011f4de0 <./lobject.h:94:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
`-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
  `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
    | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
    |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
    `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
([B1.40])->value
  42: MemberExpr 0x5569011f4e18 <./lobject.h:94:49, col:60> 'GCObject *' lvalue .gc 0x5569011a38f0
`-MemberExpr 0x5569011f4de0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
  `-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
    `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
      |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
      `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
[B1.41].gc
  43: ImplicitCastExpr 0x5569011f4e50 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5569011f4e18 <col:49, col:60> 'GCObject *' lvalue .gc 0x5569011a38f0
  `-MemberExpr 0x5569011f4de0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
    `-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
      `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
        | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
        |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
        |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
        `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
[B1.42] (ImplicitCastExpr, LValueToRValue, GCObject *)
  44: MemberExpr 0x5569011f4e68 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5569011ceb28
`-ImplicitCastExpr 0x5569011f4e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5569011f4e18 <col:49, col:60> 'GCObject *' lvalue .gc 0x5569011a38f0
    `-MemberExpr 0x5569011f4de0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
      `-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
        `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
          |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
          | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
          |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
          |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
          `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
[B1.43]->ts
  45: UnaryOperator 0x5569011f4ec8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5569011f4e68 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5569011ceb28
  `-ImplicitCastExpr 0x5569011f4e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5569011f4e18 <col:49, col:60> 'GCObject *' lvalue .gc 0x5569011a38f0
      `-MemberExpr 0x5569011f4de0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
        `-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
          `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
            |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
            | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
            |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
            |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
            `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
&[B1.44]
  46: IntegerLiteral 0x5569011f4f28 <./lobject.h:210:46> 'int' 1
1
  47: BinaryOperator 0x5569011f4f48 <./lobject.h:210:39, col:46> 'union TString *' '+'
|-ParenExpr 0x5569011f4f08 <col:39, col:42> 'union TString *'
| `-ParenExpr 0x5569011f4ee8 <./llimits.h:63:25, col:27> 'union TString *'
|   `-UnaryOperator 0x5569011f4ec8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|     `-MemberExpr 0x5569011f4e68 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5569011ceb28
|       `-ImplicitCastExpr 0x5569011f4e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         `-MemberExpr 0x5569011f4e18 <col:49, col:60> 'GCObject *' lvalue .gc 0x5569011a38f0
|           `-MemberExpr 0x5569011f4de0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
|             `-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
|               `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
|                 |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
|                 | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
|                 |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
|                 |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
|                 `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
`-IntegerLiteral 0x5569011f4f28 <./lobject.h:210:46> 'int' 1
(([B1.45])) + [B1.46]
  48: CStyleCastExpr 0x5569011f4fd8 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x5569011f4fb8 <col:26, col:30> 'union TString *'
  `-BinaryOperator 0x5569011f4f48 <./lobject.h:210:39, col:46> 'union TString *' '+'
    |-ParenExpr 0x5569011f4f08 <col:39, col:42> 'union TString *'
    | `-ParenExpr 0x5569011f4ee8 <./llimits.h:63:25, col:27> 'union TString *'
    |   `-UnaryOperator 0x5569011f4ec8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    |     `-MemberExpr 0x5569011f4e68 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5569011ceb28
    |       `-ImplicitCastExpr 0x5569011f4e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
    |         `-MemberExpr 0x5569011f4e18 <col:49, col:60> 'GCObject *' lvalue .gc 0x5569011a38f0
    |           `-MemberExpr 0x5569011f4de0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
    |             `-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
    |               `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
    |                 |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
    |                 | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    |                 |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
    |                 |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
    |                 `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
    `-IntegerLiteral 0x5569011f4f28 <./lobject.h:210:46> 'int' 1
(const char *)([B1.47]) (CStyleCastExpr, BitCast, const char *)
  49: ReturnStmt 0x5569011f5020 <lobject.c:168:3, ./llimits.h:75:31>
`-ParenExpr 0x5569011f5000 <col:22, col:31> 'const char *'
  `-CStyleCastExpr 0x5569011f4fd8 <col:23, col:30> 'const char *' <BitCast>
    `-ParenExpr 0x5569011f4fb8 <col:26, col:30> 'union TString *'
      `-BinaryOperator 0x5569011f4f48 <./lobject.h:210:39, col:46> 'union TString *' '+'
        |-ParenExpr 0x5569011f4f08 <col:39, col:42> 'union TString *'
        | `-ParenExpr 0x5569011f4ee8 <./llimits.h:63:25, col:27> 'union TString *'
        |   `-UnaryOperator 0x5569011f4ec8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
        |     `-MemberExpr 0x5569011f4e68 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5569011ceb28
        |       `-ImplicitCastExpr 0x5569011f4e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
        |         `-MemberExpr 0x5569011f4e18 <col:49, col:60> 'GCObject *' lvalue .gc 0x5569011a38f0
        |           `-MemberExpr 0x5569011f4de0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5569011abc30
        |             `-ParenExpr 0x5569011f4dc0 <col:49, col:51> 'StkId':'TValue *'
        |               `-BinaryOperator 0x5569011f4d98 <lobject.c:168:17, col:26> 'StkId':'TValue *' '-'
        |                 |-ImplicitCastExpr 0x5569011f4d80 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
        |                 | `-MemberExpr 0x5569011f4d28 <col:17, col:20> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
        |                 |   `-ImplicitCastExpr 0x5569011f4d10 <col:17> 'lua_State *' <LValueToRValue>
        |                 |     `-DeclRefExpr 0x5569011f4ce8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
        |                 `-IntegerLiteral 0x5569011f4d60 <col:26> 'int' 1
        `-IntegerLiteral 0x5569011f4f28 <./lobject.h:210:46> 'int' 1
return ([B1.48]);
   Preds (1): B23
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B25

 [B3]
   1: DeclRefExpr 0x5569011f4510 <lobject.c:162:5> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
n
   2: IntegerLiteral 0x5569011f4538 <lobject.c:162:10> 'int' 2
2
   3: CompoundAssignOperator 0x5569011f4558 <lobject.c:162:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x5569011f4510 <col:5> 'int' lvalue Var 0x5569011f04d0 'n' 'int'
`-IntegerLiteral 0x5569011f4538 <col:10> 'int' 2
[B3.1] += [B3.2]
   4: DeclRefExpr 0x5569011f45b8 <lobject.c:163:11> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
e
   5: ImplicitCastExpr 0x5569011f4600 <lobject.c:163:11> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f45b8 <col:11> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
[B3.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: IntegerLiteral 0x5569011f45e0 <lobject.c:163:13> 'int' 2
2
   7: BinaryOperator 0x5569011f4618 <lobject.c:163:11, col:13> 'const char *' '+'
|-ImplicitCastExpr 0x5569011f4600 <col:11> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f45b8 <col:11> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
`-IntegerLiteral 0x5569011f45e0 <col:13> 'int' 2
[B3.5] + [B3.6]
   8: DeclRefExpr 0x5569011f4590 <lobject.c:163:5> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
fmt
   9: BinaryOperator 0x5569011f4640 <lobject.c:163:5, col:13> 'const char *' '='
|-DeclRefExpr 0x5569011f4590 <col:5> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
`-BinaryOperator 0x5569011f4618 <col:11, col:13> 'const char *' '+'
  |-ImplicitCastExpr 0x5569011f4600 <col:11> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x5569011f45b8 <col:11> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
  `-IntegerLiteral 0x5569011f45e0 <col:13> 'int' 2
[B3.8] = [B3.7]
   Preds (7): B5 B6 B7 B8 B12 B16 B17
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5569011f1458 <lobject.c:118:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5569011f1480 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f1458 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5569011f1498 <lobject.c:118:14, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f1480 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f1458 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B4.2]->top
   4: UnaryOperator 0x5569011f14d0 <lobject.c:118:14, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x5569011f1498 <lobject.c:118:14, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f1480 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f1458 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B4.3]++
   5: DeclRefExpr 0x5569011f1528 <lobject.c:119:15> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
e
   6: ImplicitCastExpr 0x5569011f1570 <lobject.c:119:15> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f1528 <col:15> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
[B4.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: IntegerLiteral 0x5569011f1550 <lobject.c:119:17> 'int' 1
1
   8: BinaryOperator 0x5569011f1588 <lobject.c:119:15, col:17> 'const char *' '+'
|-ImplicitCastExpr 0x5569011f1570 <col:15> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f1528 <col:15> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
`-IntegerLiteral 0x5569011f1550 <col:17> 'int' 1
[B4.6] + [B4.7]
   9: UnaryOperator 0x5569011f15d0 <lobject.c:119:13, col:18> 'const char' lvalue prefix '*'
`-ParenExpr 0x5569011f15b0 <col:14, col:18> 'const char *'
  `-BinaryOperator 0x5569011f1588 <col:15, col:17> 'const char *' '+'
    |-ImplicitCastExpr 0x5569011f1570 <col:15> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x5569011f1528 <col:15> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
    `-IntegerLiteral 0x5569011f1550 <col:17> 'int' 1
*([B4.8])
  10: ImplicitCastExpr 0x5569011f15f0 <lobject.c:119:13, col:18> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011f15d0 <col:13, col:18> 'const char' lvalue prefix '*'
  `-ParenExpr 0x5569011f15b0 <col:14, col:18> 'const char *'
    `-BinaryOperator 0x5569011f1588 <col:15, col:17> 'const char *' '+'
      |-ImplicitCastExpr 0x5569011f1570 <col:15> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x5569011f1528 <col:15> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
      `-IntegerLiteral 0x5569011f1550 <col:17> 'int' 1
[B4.9] (ImplicitCastExpr, LValueToRValue, char)
  11: ImplicitCastExpr 0x5569011f1608 <lobject.c:119:13, col:18> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011f15f0 <col:13, col:18> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011f15d0 <col:13, col:18> 'const char' lvalue prefix '*'
    `-ParenExpr 0x5569011f15b0 <col:14, col:18> 'const char *'
      `-BinaryOperator 0x5569011f1588 <col:15, col:17> 'const char *' '+'
        |-ImplicitCastExpr 0x5569011f1570 <col:15> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x5569011f1528 <col:15> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
        `-IntegerLiteral 0x5569011f1550 <col:17> 'int' 1
[B4.10] (ImplicitCastExpr, IntegralCast, int)
   T: switch [B4.11]
   Preds (2): B20 B21
   Succs (7): B6 B7 B11 B15 B16 B19 B5

 [B5]
  default:
   1: DeclStmt 0x5569011f3c80 <lobject.c:154:9, col:21>col:14
`-VarDecl 0x5569011f3c20 <col:9, col:20> col:14 used buff 'char [3]'
char buff[3];
   2: CharacterLiteral 0x5569011f3d20 <lobject.c:155:19> 'int' 37
'%'
   3: ImplicitCastExpr 0x5569011f3d38 <lobject.c:155:19> 'char' <IntegralCast>
`-CharacterLiteral 0x5569011f3d20 <col:19> 'int' 37
[B5.2] (ImplicitCastExpr, IntegralCast, char)
   4: DeclRefExpr 0x5569011f3c98 <lobject.c:155:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
buff
   5: ImplicitCastExpr 0x5569011f3ce0 <lobject.c:155:9> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f3c98 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
[B5.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: IntegerLiteral 0x5569011f3cc0 <lobject.c:155:14> 'int' 0
0
   7: ArraySubscriptExpr 0x5569011f3cf8 <lobject.c:155:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x5569011f3ce0 <col:9> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5569011f3c98 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
`-IntegerLiteral 0x5569011f3cc0 <col:14> 'int' 0
[B5.5][[B5.6]]
   8: BinaryOperator 0x5569011f3d50 <lobject.c:155:9, col:19> 'char' '='
|-ArraySubscriptExpr 0x5569011f3cf8 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x5569011f3ce0 <col:9> 'char *' <ArrayToPointerDecay>
| | `-DeclRefExpr 0x5569011f3c98 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
| `-IntegerLiteral 0x5569011f3cc0 <col:14> 'int' 0
`-ImplicitCastExpr 0x5569011f3d38 <col:19> 'char' <IntegralCast>
  `-CharacterLiteral 0x5569011f3d20 <col:19> 'int' 37
[B5.7] = [B5.3]
   9: DeclRefExpr 0x5569011f3e00 <lobject.c:156:21> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
e
  10: ImplicitCastExpr 0x5569011f3e48 <lobject.c:156:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f3e00 <col:21> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
[B5.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: IntegerLiteral 0x5569011f3e28 <lobject.c:156:23> 'int' 1
1
  12: BinaryOperator 0x5569011f3e60 <lobject.c:156:21, col:23> 'const char *' '+'
|-ImplicitCastExpr 0x5569011f3e48 <col:21> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f3e00 <col:21> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
`-IntegerLiteral 0x5569011f3e28 <col:23> 'int' 1
[B5.10] + [B5.11]
  13: UnaryOperator 0x5569011f3ea8 <lobject.c:156:19, col:24> 'const char' lvalue prefix '*'
`-ParenExpr 0x5569011f3e88 <col:20, col:24> 'const char *'
  `-BinaryOperator 0x5569011f3e60 <col:21, col:23> 'const char *' '+'
    |-ImplicitCastExpr 0x5569011f3e48 <col:21> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x5569011f3e00 <col:21> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
    `-IntegerLiteral 0x5569011f3e28 <col:23> 'int' 1
*([B5.12])
  14: ImplicitCastExpr 0x5569011f3ec8 <lobject.c:156:19, col:24> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011f3ea8 <col:19, col:24> 'const char' lvalue prefix '*'
  `-ParenExpr 0x5569011f3e88 <col:20, col:24> 'const char *'
    `-BinaryOperator 0x5569011f3e60 <col:21, col:23> 'const char *' '+'
      |-ImplicitCastExpr 0x5569011f3e48 <col:21> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x5569011f3e00 <col:21> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
      `-IntegerLiteral 0x5569011f3e28 <col:23> 'int' 1
[B5.13] (ImplicitCastExpr, LValueToRValue, char)
  15: DeclRefExpr 0x5569011f3d78 <lobject.c:156:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
buff
  16: ImplicitCastExpr 0x5569011f3dc0 <lobject.c:156:9> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f3d78 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
[B5.15] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  17: IntegerLiteral 0x5569011f3da0 <lobject.c:156:14> 'int' 1
1
  18: ArraySubscriptExpr 0x5569011f3dd8 <lobject.c:156:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x5569011f3dc0 <col:9> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5569011f3d78 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
`-IntegerLiteral 0x5569011f3da0 <col:14> 'int' 1
[B5.16][[B5.17]]
  19: BinaryOperator 0x5569011f3ee0 <lobject.c:156:9, col:24> 'char' '='
|-ArraySubscriptExpr 0x5569011f3dd8 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x5569011f3dc0 <col:9> 'char *' <ArrayToPointerDecay>
| | `-DeclRefExpr 0x5569011f3d78 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
| `-IntegerLiteral 0x5569011f3da0 <col:14> 'int' 1
`-ImplicitCastExpr 0x5569011f3ec8 <col:19, col:24> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011f3ea8 <col:19, col:24> 'const char' lvalue prefix '*'
    `-ParenExpr 0x5569011f3e88 <col:20, col:24> 'const char *'
      `-BinaryOperator 0x5569011f3e60 <col:21, col:23> 'const char *' '+'
        |-ImplicitCastExpr 0x5569011f3e48 <col:21> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x5569011f3e00 <col:21> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
        `-IntegerLiteral 0x5569011f3e28 <col:23> 'int' 1
[B5.18] = [B5.14]
  20: CharacterLiteral 0x5569011f3f90 <lobject.c:157:19> 'int' 0
'\x00'
  21: ImplicitCastExpr 0x5569011f4310 <lobject.c:157:19> 'char' <IntegralCast>
`-CharacterLiteral 0x5569011f3f90 <col:19> 'int' 0
[B5.20] (ImplicitCastExpr, IntegralCast, char)
  22: DeclRefExpr 0x5569011f3f08 <lobject.c:157:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
buff
  23: ImplicitCastExpr 0x5569011f3f50 <lobject.c:157:9> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f3f08 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
[B5.22] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  24: IntegerLiteral 0x5569011f3f30 <lobject.c:157:14> 'int' 2
2
  25: ArraySubscriptExpr 0x5569011f3f68 <lobject.c:157:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x5569011f3f50 <col:9> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5569011f3f08 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
`-IntegerLiteral 0x5569011f3f30 <col:14> 'int' 2
[B5.23][[B5.24]]
  26: BinaryOperator 0x5569011f4328 <lobject.c:157:9, col:19> 'char' '='
|-ArraySubscriptExpr 0x5569011f3f68 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x5569011f3f50 <col:9> 'char *' <ArrayToPointerDecay>
| | `-DeclRefExpr 0x5569011f3f08 <col:9> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
| `-IntegerLiteral 0x5569011f3f30 <col:14> 'int' 2
`-ImplicitCastExpr 0x5569011f4310 <col:19> 'char' <IntegralCast>
  `-CharacterLiteral 0x5569011f3f90 <col:19> 'int' 0
[B5.25] = [B5.21]
  27: DeclRefExpr 0x5569011f4350 <lobject.c:158:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
pushstr
  28: ImplicitCastExpr 0x5569011f43c8 <lobject.c:158:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f4350 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
[B5.27] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
  29: DeclRefExpr 0x5569011f4378 <lobject.c:158:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x5569011f4418 <lobject.c:158:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f4378 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B5.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: DeclRefExpr 0x5569011f43a0 <lobject.c:158:20> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
buff
  32: ImplicitCastExpr 0x5569011f4430 <lobject.c:158:20> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f43a0 <col:20> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
[B5.31] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  33: ImplicitCastExpr 0x5569011f4448 <lobject.c:158:20> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f4430 <col:20> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x5569011f43a0 <col:20> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
[B5.32] (ImplicitCastExpr, BitCast, const char *)
  34: CallExpr 0x5569011f43e0 <lobject.c:158:9, col:24> 'void'
|-ImplicitCastExpr 0x5569011f43c8 <col:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f4350 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5569011f4418 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f4378 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f4448 <col:20> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f4430 <col:20> 'char *' <ArrayToPointerDecay>
    `-DeclRefExpr 0x5569011f43a0 <col:20> 'char [3]' lvalue Var 0x5569011f3c20 'buff' 'char [3]'
[B5.28]([B5.30], [B5.33])
   T: break;
   Preds (1): B4
   Succs (1): B3

 [B6]
  case '%':
   1: DeclRefExpr 0x5569011f3aa0 <lobject.c:150:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
pushstr
   2: ImplicitCastExpr 0x5569011f3b20 <lobject.c:150:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f3aa0 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x5569011f3ac8 <lobject.c:150:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5569011f3b70 <lobject.c:150:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f3ac8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5569011f3af0 <lobject.c:150:20> 'char [2]' lvalue "%"
"%"
   6: ImplicitCastExpr 0x5569011f3b88 <lobject.c:150:20> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f3af0 <col:20> 'char [2]' lvalue "%"
[B6.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5569011f3ba0 <lobject.c:150:20> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f3b88 <col:20> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f3af0 <col:20> 'char [2]' lvalue "%"
[B6.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5569011f3b38 <lobject.c:150:9, col:23> 'void'
|-ImplicitCastExpr 0x5569011f3b20 <col:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f3aa0 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5569011f3b70 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f3ac8 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f3ba0 <col:20> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f3b88 <col:20> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f3af0 <col:20> 'char [2]' lvalue "%"
[B6.2]([B6.4], [B6.7])
   T: break;
   Preds (1): B4
   Succs (1): B3

 [B7]
  case 'p':
   1: DeclStmt 0x5569011f36e8 <lobject.c:144:9, col:40>col:14
`-VarDecl 0x5569011f3688 <col:9, col:39> col:14 used buff 'char [40]'
char buff[40];
   2: DeclRefExpr 0x5569011f3700 <lobject.c:145:9> 'int (char *, const char *, ...)' Function 0x556901052c00 'sprintf' 'int (char *, const char *, ...)'
sprintf
   3: ImplicitCastExpr 0x5569011f3868 <lobject.c:145:9> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f3700 <col:9> 'int (char *, const char *, ...)' Function 0x556901052c00 'sprintf' 'int (char *, const char *, ...)'
[B7.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, const char *, ...))
   4: DeclRefExpr 0x5569011f3728 <lobject.c:145:17> 'char [40]' lvalue Var 0x5569011f3688 'buff' 'char [40]'
buff
   5: ImplicitCastExpr 0x5569011f38c0 <lobject.c:145:17> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f3728 <col:17> 'char [40]' lvalue Var 0x5569011f3688 'buff' 'char [40]'
[B7.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: StringLiteral 0x5569011f3788 <lobject.c:145:23> 'char [3]' lvalue "%p"
"%p"
   7: ImplicitCastExpr 0x5569011f38d8 <lobject.c:145:23> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f3788 <col:23> 'char [3]' lvalue "%p"
[B7.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x5569011f38f0 <lobject.c:145:23> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f38d8 <col:23> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f3788 <col:23> 'char [3]' lvalue "%p"
[B7.7] (ImplicitCastExpr, BitCast, const char *)
   9: DeclRefExpr 0x5569011f37b8 <lobject.c:145:36> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
argp
  10: ImplicitCastExpr 0x5569011f37f8 <lobject.c:145:36> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
`-DeclRefExpr 0x5569011f37b8 <col:36> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B7.9] (ImplicitCastExpr, LValueToRValue, struct __va_list_tag *)
  11: VAArgExpr 0x5569011f3810 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'void *'
`-ImplicitCastExpr 0x5569011f37f8 <lobject.c:145:36> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f37b8 <col:36> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
__builtin_va_arg([B7.10], void *)
  12: CallExpr 0x5569011f3880 <lobject.c:145:9, col:49> 'int'
|-ImplicitCastExpr 0x5569011f3868 <col:9> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f3700 <col:9> 'int (char *, const char *, ...)' Function 0x556901052c00 'sprintf' 'int (char *, const char *, ...)'
|-ImplicitCastExpr 0x5569011f38c0 <col:17> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5569011f3728 <col:17> 'char [40]' lvalue Var 0x5569011f3688 'buff' 'char [40]'
|-ImplicitCastExpr 0x5569011f38f0 <col:23> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5569011f38d8 <col:23> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5569011f3788 <col:23> 'char [3]' lvalue "%p"
`-VAArgExpr 0x5569011f3810 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'void *'
  `-ImplicitCastExpr 0x5569011f37f8 <lobject.c:145:36> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f37b8 <col:36> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B7.3]([B7.5], [B7.8], [B7.11])
  13: DeclRefExpr 0x5569011f3908 <lobject.c:146:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
pushstr
  14: ImplicitCastExpr 0x5569011f3980 <lobject.c:146:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f3908 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
[B7.13] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
  15: DeclRefExpr 0x5569011f3930 <lobject.c:146:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x5569011f39d0 <lobject.c:146:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f3930 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B7.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: DeclRefExpr 0x5569011f3958 <lobject.c:146:20> 'char [40]' lvalue Var 0x5569011f3688 'buff' 'char [40]'
buff
  18: ImplicitCastExpr 0x5569011f39e8 <lobject.c:146:20> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f3958 <col:20> 'char [40]' lvalue Var 0x5569011f3688 'buff' 'char [40]'
[B7.17] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  19: ImplicitCastExpr 0x5569011f3a00 <lobject.c:146:20> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f39e8 <col:20> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x5569011f3958 <col:20> 'char [40]' lvalue Var 0x5569011f3688 'buff' 'char [40]'
[B7.18] (ImplicitCastExpr, BitCast, const char *)
  20: CallExpr 0x5569011f3998 <lobject.c:146:9, col:24> 'void'
|-ImplicitCastExpr 0x5569011f3980 <col:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f3908 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5569011f39d0 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f3930 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f3a00 <col:20> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f39e8 <col:20> 'char *' <ArrayToPointerDecay>
    `-DeclRefExpr 0x5569011f3958 <col:20> 'char [40]' lvalue Var 0x5569011f3688 'buff' 'char [40]'
[B7.14]([B7.16], [B7.19])
   T: break;
   Preds (1): B4
   Succs (1): B3

 [B8]
   1: DeclRefExpr 0x5569011f3410 <lobject.c:140:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5569011f3438 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f3410 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B8.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5569011f3450 <lobject.c:140:18, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f3438 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f3410 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B8.2]->top
   4: UnaryOperator 0x5569011f3488 <lobject.c:140:18, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x5569011f3450 <lobject.c:140:18, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f3438 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f3410 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B8.3]++
   T: break;
   Preds (2): B9 B10
   Succs (1): B3

 [B9]
   1: IntegerLiteral 0x5569011f3350 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x5569011f3380 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x5569011f3350 <col:38> 'int' 0
(void)[B9.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B11
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x5569011f3278 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x5569011f32e8 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f3278 <col:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5569011f32a0 <lobject.c:140:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5569011f3338 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f32a0 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5569011f32c8 <./ldo.h:22:40> 'int' 1
1
   6: CallExpr 0x5569011f3300 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x5569011f32e8 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f3278 <col:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x5569011f3338 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f32a0 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-IntegerLiteral 0x5569011f32c8 <./ldo.h:22:40> 'int' 1
[B10.2]([B10.4], [B10.5])
   Preds (1): B11
   Succs (1): B8

 [B11]
  case 'f':
   1: DeclRefExpr 0x5569011f2b78 <lobject.c:139:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5569011f2ba0 <lobject.c:139:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2b78 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5569011f2bb8 <lobject.c:139:19, col:22> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f2ba0 <col:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2b78 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.2]->top
   4: ImplicitCastExpr 0x5569011f2c10 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5569011f2bf0 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5569011f2bb8 <lobject.c:139:19, col:22> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    `-ImplicitCastExpr 0x5569011f2ba0 <col:19> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f2b78 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
([B11.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclStmt 0x5569011f2c28 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5569011f2b18 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5569011f2c10 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5569011f2bf0 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x5569011f2bb8 <lobject.c:139:19, col:22> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
        `-ImplicitCastExpr 0x5569011f2ba0 <col:19> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5569011f2b78 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
TValue *i_o = (L->top);
   6: DeclRefExpr 0x5569011f2cf0 <lobject.c:139:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
argp
   7: ImplicitCastExpr 0x5569011f2d50 <lobject.c:139:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2cf0 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B11.6] (ImplicitCastExpr, LValueToRValue, struct __va_list_tag *)
   8: VAArgExpr 0x5569011f2d68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'l_uacNumber':'double'
`-ImplicitCastExpr 0x5569011f2d50 <lobject.c:139:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2cf0 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
__builtin_va_arg([B11.7], l_uacNumber)
   9: CStyleCastExpr 0x5569011f2e10 <./llimits.h:75:23, col:30> 'lua_Number':'double' <NoOp>
`-ParenExpr 0x5569011f2df0 <col:26, col:30> 'l_uacNumber':'double'
  `-ParenExpr 0x5569011f2d90 <line:79:38, col:40> 'l_uacNumber':'double'
    `-VAArgExpr 0x5569011f2d68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'l_uacNumber':'double'
      `-ImplicitCastExpr 0x5569011f2d50 <lobject.c:139:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
        `-DeclRefExpr 0x5569011f2cf0 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
(lua_Number)(([B11.8])) (CStyleCastExpr, NoOp, lua_Number)
  10: DeclRefExpr 0x5569011f2c40 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
i_o
  11: ImplicitCastExpr 0x5569011f2c68 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2c40 <col:24> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
[B11.10] (ImplicitCastExpr, LValueToRValue, TValue *)
  12: MemberExpr 0x5569011f2c80 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5569011abc30
`-ImplicitCastExpr 0x5569011f2c68 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2c40 <col:24> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
[B11.11]->value
  13: MemberExpr 0x5569011f2cb8 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5569011ab9e0
`-MemberExpr 0x5569011f2c80 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5569011abc30
  `-ImplicitCastExpr 0x5569011f2c68 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f2c40 <col:24> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
[B11.12].n
  14: BinaryOperator 0x5569011f2e78 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5569011f2cb8 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5569011ab9e0
| `-MemberExpr 0x5569011f2c80 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5569011abc30
|   `-ImplicitCastExpr 0x5569011f2c68 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5569011f2c40 <col:24> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
`-ParenExpr 0x5569011f2e58 <col:37, col:39> 'lua_Number':'double'
  `-ParenExpr 0x5569011f2e38 <./llimits.h:75:22, col:31> 'lua_Number':'double'
    `-CStyleCastExpr 0x5569011f2e10 <col:23, col:30> 'lua_Number':'double' <NoOp>
      `-ParenExpr 0x5569011f2df0 <col:26, col:30> 'l_uacNumber':'double'
        `-ParenExpr 0x5569011f2d90 <line:79:38, col:40> 'l_uacNumber':'double'
          `-VAArgExpr 0x5569011f2d68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'l_uacNumber':'double'
            `-ImplicitCastExpr 0x5569011f2d50 <lobject.c:139:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
              `-DeclRefExpr 0x5569011f2cf0 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B11.13] = (([B11.9]))
  15: IntegerLiteral 0x5569011f2f18 <./lua.h:77:22> 'int' 3
3
  16: DeclRefExpr 0x5569011f2ea0 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
i_o
  17: ImplicitCastExpr 0x5569011f2ec8 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2ea0 <col:42> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
[B11.16] (ImplicitCastExpr, LValueToRValue, TValue *)
  18: MemberExpr 0x5569011f2ee0 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5569011abc90
`-ImplicitCastExpr 0x5569011f2ec8 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2ea0 <col:42> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
[B11.17]->tt
  19: BinaryOperator 0x5569011f2f38 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5569011f2ee0 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5569011abc90
| `-ImplicitCastExpr 0x5569011f2ec8 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5569011f2ea0 <col:42> 'TValue *' lvalue Var 0x5569011f2b18 'i_o' 'TValue *'
`-IntegerLiteral 0x5569011f2f18 <./lua.h:77:22> 'int' 3
[B11.18] = [B11.15]
  20: DeclRefExpr 0x5569011f2f98 <lobject.c:140:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  21: ImplicitCastExpr 0x5569011f2fc0 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2f98 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.20] (ImplicitCastExpr, LValueToRValue, lua_State *)
  22: MemberExpr 0x5569011f2fd8 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
`-ImplicitCastExpr 0x5569011f2fc0 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2f98 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.21]->stack_last
  23: ImplicitCastExpr 0x5569011f3028 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f2fd8 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
  `-ImplicitCastExpr 0x5569011f2fc0 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f2f98 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.22] (ImplicitCastExpr, LValueToRValue, StkId)
  24: CStyleCastExpr 0x5569011f3040 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x5569011f3028 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5569011f2fd8 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
    `-ImplicitCastExpr 0x5569011f2fc0 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f2f98 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
(char *)[B11.23] (CStyleCastExpr, BitCast, char *)
  25: DeclRefExpr 0x5569011f3068 <lobject.c:140:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  26: ImplicitCastExpr 0x5569011f3090 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f3068 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.25] (ImplicitCastExpr, LValueToRValue, lua_State *)
  27: MemberExpr 0x5569011f30a8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f3090 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f3068 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.26]->top
  28: ImplicitCastExpr 0x5569011f30f8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f30a8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f3090 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f3068 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.27] (ImplicitCastExpr, LValueToRValue, StkId)
  29: CStyleCastExpr 0x5569011f3110 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x5569011f30f8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5569011f30a8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    `-ImplicitCastExpr 0x5569011f3090 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f3068 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
(char *)[B11.28] (CStyleCastExpr, BitCast, char *)
  30: BinaryOperator 0x5569011f3138 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x5569011f3040 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x5569011f3028 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x5569011f2fd8 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
|     `-ImplicitCastExpr 0x5569011f2fc0 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011f2f98 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-CStyleCastExpr 0x5569011f3110 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f30f8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x5569011f30a8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
      `-ImplicitCastExpr 0x5569011f3090 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5569011f3068 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B11.24] - [B11.29]
  31: IntegerLiteral 0x5569011f3160 <./ldo.h:22:40> 'int' 1
1
  32: UnaryExprOrTypeTraitExpr 0x5569011f31b0 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  33: CStyleCastExpr 0x5569011f31e8 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x5569011f31b0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B11.32] (CStyleCastExpr, IntegralCast, int)
  34: BinaryOperator 0x5569011f3210 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x5569011f3180 <col:49, col:51> 'int'
| `-IntegerLiteral 0x5569011f3160 <line:22:40> 'int' 1
`-CStyleCastExpr 0x5569011f31e8 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x5569011f31b0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B11.31]) * [B11.33]
  35: ImplicitCastExpr 0x5569011f3238 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x5569011f3210 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x5569011f3180 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x5569011f3160 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x5569011f31e8 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x5569011f31b0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B11.34] (ImplicitCastExpr, IntegralCast, long)
  36: BinaryOperator 0x5569011f3250 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x5569011f3138 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x5569011f3040 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x5569011f3028 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x5569011f2fd8 <lobject.c:140:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
| |     `-ImplicitCastExpr 0x5569011f2fc0 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x5569011f2f98 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
| `-CStyleCastExpr 0x5569011f3110 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x5569011f30f8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x5569011f30a8 <lobject.c:140:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
|       `-ImplicitCastExpr 0x5569011f3090 <lobject.c:140:18> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x5569011f3068 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f3238 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x5569011f3210 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x5569011f3180 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x5569011f3160 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x5569011f31e8 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x5569011f31b0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B11.30] <= [B11.35]
   T: if [B11.36]
   Preds (1): B4
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x5569011f29a8 <lobject.c:135:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5569011f29d0 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f29a8 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B12.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5569011f29e8 <lobject.c:135:18, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f29d0 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f29a8 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B12.2]->top
   4: UnaryOperator 0x5569011f2a20 <lobject.c:135:18, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x5569011f29e8 <lobject.c:135:18, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f29d0 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f29a8 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B12.3]++
   T: break;
   Preds (2): B13 B14
   Succs (1): B3

 [B13]
   1: IntegerLiteral 0x5569011f28e8 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x5569011f2918 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x5569011f28e8 <col:38> 'int' 0
(void)[B13.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B15
   Succs (1): B12

 [B14]
   1: DeclRefExpr 0x5569011f2810 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x5569011f2880 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f2810 <col:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
[B14.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5569011f2838 <lobject.c:135:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5569011f28d0 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2838 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B14.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5569011f2860 <./ldo.h:22:40> 'int' 1
1
   6: CallExpr 0x5569011f2898 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x5569011f2880 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f2810 <col:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x5569011f28d0 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f2838 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-IntegerLiteral 0x5569011f2860 <./ldo.h:22:40> 'int' 1
[B14.2]([B14.4], [B14.5])
   Preds (1): B15
   Succs (1): B12

 [B15]
  case 'd':
   1: DeclRefExpr 0x5569011f2130 <lobject.c:134:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5569011f2158 <lobject.c:134:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2130 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5569011f2170 <lobject.c:134:19, col:22> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f2158 <col:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2130 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.2]->top
   4: ImplicitCastExpr 0x5569011f21c8 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5569011f21a8 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5569011f2170 <lobject.c:134:19, col:22> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    `-ImplicitCastExpr 0x5569011f2158 <col:19> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f2130 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
([B15.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclStmt 0x5569011f21e0 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5569011f20d0 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5569011f21c8 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5569011f21a8 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x5569011f2170 <lobject.c:134:19, col:22> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
        `-ImplicitCastExpr 0x5569011f2158 <col:19> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5569011f2130 <col:19> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
TValue *i_o = (L->top);
   6: DeclRefExpr 0x5569011f22a8 <lobject.c:134:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
argp
   7: ImplicitCastExpr 0x5569011f22e8 <lobject.c:134:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
`-DeclRefExpr 0x5569011f22a8 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B15.6] (ImplicitCastExpr, LValueToRValue, struct __va_list_tag *)
   8: VAArgExpr 0x5569011f2300 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'int'
`-ImplicitCastExpr 0x5569011f22e8 <lobject.c:134:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f22a8 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
__builtin_va_arg([B15.7], int)
   9: CStyleCastExpr 0x5569011f23a8 <./llimits.h:75:23, col:30> 'lua_Number':'double' <IntegralToFloating>
`-ParenExpr 0x5569011f2388 <col:26, col:30> 'int'
  `-ParenExpr 0x5569011f2328 <line:79:38, col:40> 'int'
    `-VAArgExpr 0x5569011f2300 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'int'
      `-ImplicitCastExpr 0x5569011f22e8 <lobject.c:134:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
        `-DeclRefExpr 0x5569011f22a8 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
(lua_Number)(([B15.8])) (CStyleCastExpr, IntegralToFloating, lua_Number)
  10: DeclRefExpr 0x5569011f21f8 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
i_o
  11: ImplicitCastExpr 0x5569011f2220 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5569011f21f8 <col:24> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
[B15.10] (ImplicitCastExpr, LValueToRValue, TValue *)
  12: MemberExpr 0x5569011f2238 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5569011abc30
`-ImplicitCastExpr 0x5569011f2220 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f21f8 <col:24> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
[B15.11]->value
  13: MemberExpr 0x5569011f2270 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5569011ab9e0
`-MemberExpr 0x5569011f2238 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5569011abc30
  `-ImplicitCastExpr 0x5569011f2220 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f21f8 <col:24> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
[B15.12].n
  14: BinaryOperator 0x5569011f2410 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5569011f2270 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5569011ab9e0
| `-MemberExpr 0x5569011f2238 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5569011abc30
|   `-ImplicitCastExpr 0x5569011f2220 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5569011f21f8 <col:24> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
`-ParenExpr 0x5569011f23f0 <col:37, col:39> 'lua_Number':'double'
  `-ParenExpr 0x5569011f23d0 <./llimits.h:75:22, col:31> 'lua_Number':'double'
    `-CStyleCastExpr 0x5569011f23a8 <col:23, col:30> 'lua_Number':'double' <IntegralToFloating>
      `-ParenExpr 0x5569011f2388 <col:26, col:30> 'int'
        `-ParenExpr 0x5569011f2328 <line:79:38, col:40> 'int'
          `-VAArgExpr 0x5569011f2300 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'int'
            `-ImplicitCastExpr 0x5569011f22e8 <lobject.c:134:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
              `-DeclRefExpr 0x5569011f22a8 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B15.13] = (([B15.9]))
  15: IntegerLiteral 0x5569011f24b0 <./lua.h:77:22> 'int' 3
3
  16: DeclRefExpr 0x5569011f2438 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
i_o
  17: ImplicitCastExpr 0x5569011f2460 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2438 <col:42> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
[B15.16] (ImplicitCastExpr, LValueToRValue, TValue *)
  18: MemberExpr 0x5569011f2478 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5569011abc90
`-ImplicitCastExpr 0x5569011f2460 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2438 <col:42> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
[B15.17]->tt
  19: BinaryOperator 0x5569011f24d0 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5569011f2478 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5569011abc90
| `-ImplicitCastExpr 0x5569011f2460 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5569011f2438 <col:42> 'TValue *' lvalue Var 0x5569011f20d0 'i_o' 'TValue *'
`-IntegerLiteral 0x5569011f24b0 <./lua.h:77:22> 'int' 3
[B15.18] = [B15.15]
  20: DeclRefExpr 0x5569011f2530 <lobject.c:135:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  21: ImplicitCastExpr 0x5569011f2558 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2530 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.20] (ImplicitCastExpr, LValueToRValue, lua_State *)
  22: MemberExpr 0x5569011f2570 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
`-ImplicitCastExpr 0x5569011f2558 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2530 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.21]->stack_last
  23: ImplicitCastExpr 0x5569011f25c0 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f2570 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
  `-ImplicitCastExpr 0x5569011f2558 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f2530 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.22] (ImplicitCastExpr, LValueToRValue, StkId)
  24: CStyleCastExpr 0x5569011f25d8 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x5569011f25c0 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5569011f2570 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
    `-ImplicitCastExpr 0x5569011f2558 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f2530 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
(char *)[B15.23] (CStyleCastExpr, BitCast, char *)
  25: DeclRefExpr 0x5569011f2600 <lobject.c:135:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  26: ImplicitCastExpr 0x5569011f2628 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f2600 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.25] (ImplicitCastExpr, LValueToRValue, lua_State *)
  27: MemberExpr 0x5569011f2640 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f2628 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f2600 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.26]->top
  28: ImplicitCastExpr 0x5569011f2690 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f2640 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f2628 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f2600 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.27] (ImplicitCastExpr, LValueToRValue, StkId)
  29: CStyleCastExpr 0x5569011f26a8 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x5569011f2690 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5569011f2640 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    `-ImplicitCastExpr 0x5569011f2628 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f2600 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
(char *)[B15.28] (CStyleCastExpr, BitCast, char *)
  30: BinaryOperator 0x5569011f26d0 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x5569011f25d8 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x5569011f25c0 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x5569011f2570 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
|     `-ImplicitCastExpr 0x5569011f2558 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011f2530 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-CStyleCastExpr 0x5569011f26a8 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f2690 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x5569011f2640 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
      `-ImplicitCastExpr 0x5569011f2628 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5569011f2600 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B15.24] - [B15.29]
  31: IntegerLiteral 0x5569011f26f8 <./ldo.h:22:40> 'int' 1
1
  32: UnaryExprOrTypeTraitExpr 0x5569011f2748 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  33: CStyleCastExpr 0x5569011f2780 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x5569011f2748 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B15.32] (CStyleCastExpr, IntegralCast, int)
  34: BinaryOperator 0x5569011f27a8 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x5569011f2718 <col:49, col:51> 'int'
| `-IntegerLiteral 0x5569011f26f8 <line:22:40> 'int' 1
`-CStyleCastExpr 0x5569011f2780 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x5569011f2748 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B15.31]) * [B15.33]
  35: ImplicitCastExpr 0x5569011f27d0 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x5569011f27a8 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x5569011f2718 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x5569011f26f8 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x5569011f2780 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x5569011f2748 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B15.34] (ImplicitCastExpr, IntegralCast, long)
  36: BinaryOperator 0x5569011f27e8 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x5569011f26d0 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x5569011f25d8 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x5569011f25c0 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x5569011f2570 <lobject.c:135:18, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
| |     `-ImplicitCastExpr 0x5569011f2558 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x5569011f2530 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
| `-CStyleCastExpr 0x5569011f26a8 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x5569011f2690 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x5569011f2640 <lobject.c:135:18, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
|       `-ImplicitCastExpr 0x5569011f2628 <lobject.c:135:18> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x5569011f2600 <col:18> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f27d0 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x5569011f27a8 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x5569011f2718 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x5569011f26f8 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x5569011f2780 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x5569011f2748 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B15.30] <= [B15.35]
   T: if [B15.36]
   Preds (1): B4
   Succs (2): B14 B13

 [B16]
  case 'c':
   1: DeclStmt 0x5569011f1c38 <lobject.c:127:9, col:21>col:14
`-VarDecl 0x5569011f1bd8 <col:9, col:20> col:14 used buff 'char [2]'
char buff[2];
   2: DeclRefExpr 0x5569011f1cd8 <lobject.c:128:37> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
argp
   3: ImplicitCastExpr 0x5569011f1d18 <lobject.c:128:37> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
`-DeclRefExpr 0x5569011f1cd8 <col:37> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B16.2] (ImplicitCastExpr, LValueToRValue, struct __va_list_tag *)
   4: VAArgExpr 0x5569011f1d30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'int'
`-ImplicitCastExpr 0x5569011f1d18 <lobject.c:128:37> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f1cd8 <col:37> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
__builtin_va_arg([B16.3], int)
   5: CStyleCastExpr 0x5569011f1db8 <./llimits.h:75:23, col:30> 'char' <IntegralCast>
`-ParenExpr 0x5569011f1d98 <col:26, col:30> 'int'
  `-VAArgExpr 0x5569011f1d30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'int'
    `-ImplicitCastExpr 0x5569011f1d18 <lobject.c:128:37> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f1cd8 <col:37> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
(char)([B16.4]) (CStyleCastExpr, IntegralCast, char)
   6: DeclRefExpr 0x5569011f1c50 <lobject.c:128:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
buff
   7: ImplicitCastExpr 0x5569011f1c98 <lobject.c:128:9> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f1c50 <col:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
[B16.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: IntegerLiteral 0x5569011f1c78 <lobject.c:128:14> 'int' 0
0
   9: ArraySubscriptExpr 0x5569011f1cb0 <lobject.c:128:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x5569011f1c98 <col:9> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5569011f1c50 <col:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
`-IntegerLiteral 0x5569011f1c78 <col:14> 'int' 0
[B16.7][[B16.8]]
  10: BinaryOperator 0x5569011f1e00 <lobject.c:128:9, ./llimits.h:75:31> 'char' '='
|-ArraySubscriptExpr 0x5569011f1cb0 <lobject.c:128:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x5569011f1c98 <col:9> 'char *' <ArrayToPointerDecay>
| | `-DeclRefExpr 0x5569011f1c50 <col:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
| `-IntegerLiteral 0x5569011f1c78 <col:14> 'int' 0
`-ParenExpr 0x5569011f1de0 <./llimits.h:75:22, col:31> 'char'
  `-CStyleCastExpr 0x5569011f1db8 <col:23, col:30> 'char' <IntegralCast>
    `-ParenExpr 0x5569011f1d98 <col:26, col:30> 'int'
      `-VAArgExpr 0x5569011f1d30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'int'
        `-ImplicitCastExpr 0x5569011f1d18 <lobject.c:128:37> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
          `-DeclRefExpr 0x5569011f1cd8 <col:37> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B16.9] = ([B16.5])
  11: CharacterLiteral 0x5569011f1eb0 <lobject.c:129:19> 'int' 0
'\x00'
  12: ImplicitCastExpr 0x5569011f1ec8 <lobject.c:129:19> 'char' <IntegralCast>
`-CharacterLiteral 0x5569011f1eb0 <col:19> 'int' 0
[B16.11] (ImplicitCastExpr, IntegralCast, char)
  13: DeclRefExpr 0x5569011f1e28 <lobject.c:129:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
buff
  14: ImplicitCastExpr 0x5569011f1e70 <lobject.c:129:9> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f1e28 <col:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
[B16.13] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  15: IntegerLiteral 0x5569011f1e50 <lobject.c:129:14> 'int' 1
1
  16: ArraySubscriptExpr 0x5569011f1e88 <lobject.c:129:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x5569011f1e70 <col:9> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5569011f1e28 <col:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
`-IntegerLiteral 0x5569011f1e50 <col:14> 'int' 1
[B16.14][[B16.15]]
  17: BinaryOperator 0x5569011f1ee0 <lobject.c:129:9, col:19> 'char' '='
|-ArraySubscriptExpr 0x5569011f1e88 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x5569011f1e70 <col:9> 'char *' <ArrayToPointerDecay>
| | `-DeclRefExpr 0x5569011f1e28 <col:9> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
| `-IntegerLiteral 0x5569011f1e50 <col:14> 'int' 1
`-ImplicitCastExpr 0x5569011f1ec8 <col:19> 'char' <IntegralCast>
  `-CharacterLiteral 0x5569011f1eb0 <col:19> 'int' 0
[B16.16] = [B16.12]
  18: DeclRefExpr 0x5569011f1f08 <lobject.c:130:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
pushstr
  19: ImplicitCastExpr 0x5569011f1f80 <lobject.c:130:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f1f08 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
[B16.18] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
  20: DeclRefExpr 0x5569011f1f30 <lobject.c:130:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  21: ImplicitCastExpr 0x5569011f1fe8 <lobject.c:130:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f1f30 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B16.20] (ImplicitCastExpr, LValueToRValue, lua_State *)
  22: DeclRefExpr 0x5569011f1f58 <lobject.c:130:20> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
buff
  23: ImplicitCastExpr 0x5569011f2000 <lobject.c:130:20> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5569011f1f58 <col:20> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
[B16.22] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  24: ImplicitCastExpr 0x5569011f2018 <lobject.c:130:20> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f2000 <col:20> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x5569011f1f58 <col:20> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
[B16.23] (ImplicitCastExpr, BitCast, const char *)
  25: CallExpr 0x5569011f1fb0 <lobject.c:130:9, col:24> 'void'
|-ImplicitCastExpr 0x5569011f1f80 <col:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f1f08 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5569011f1fe8 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f1f30 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f2018 <col:20> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f2000 <col:20> 'char *' <ArrayToPointerDecay>
    `-DeclRefExpr 0x5569011f1f58 <col:20> 'char [2]' lvalue Var 0x5569011f1bd8 'buff' 'char [2]'
[B16.19]([B16.21], [B16.24])
   T: break;
   Preds (1): B4
   Succs (1): B3

 [B17]
   1: DeclRefExpr 0x5569011f19d8 <lobject.c:123:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
pushstr
   2: ImplicitCastExpr 0x5569011f1a50 <lobject.c:123:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f19d8 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
[B17.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x5569011f1a00 <lobject.c:123:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5569011f1aa0 <lobject.c:123:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f1a00 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B17.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5569011f1a28 <lobject.c:123:20> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
s
   6: ImplicitCastExpr 0x5569011f1ab8 <lobject.c:123:20> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f1a28 <col:20> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
[B17.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x5569011f1a68 <lobject.c:123:9, col:21> 'void'
|-ImplicitCastExpr 0x5569011f1a50 <col:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f19d8 <col:9> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5569011f1aa0 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f1a00 <col:17> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f1ab8 <col:20> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f1a28 <col:20> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
[B17.2]([B17.4], [B17.6])
   T: break;
   Preds (2): B18 B19
   Succs (1): B3

 [B18]
   1: StringLiteral 0x5569011f1918 <lobject.c:122:28> 'char [7]' lvalue "(null)"
"(null)"
   2: ImplicitCastExpr 0x5569011f1948 <lobject.c:122:28> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f1918 <col:28> 'char [7]' lvalue "(null)"
[B18.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x5569011f1960 <lobject.c:122:28> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f1948 <col:28> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f1918 <col:28> 'char [7]' lvalue "(null)"
[B18.2] (ImplicitCastExpr, BitCast, const char *)
   4: DeclRefExpr 0x5569011f18f0 <lobject.c:122:24> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
s
   5: BinaryOperator 0x5569011f1978 <lobject.c:122:24, col:28> 'const char *' '='
|-DeclRefExpr 0x5569011f18f0 <col:24> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
`-ImplicitCastExpr 0x5569011f1960 <col:28> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f1948 <col:28> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f1918 <col:28> 'char [7]' lvalue "(null)"
[B18.4] = [B18.3]
   Preds (1): B19
   Succs (1): B17

 [B19]
  case 's':
   1: DeclRefExpr 0x5569011f1718 <lobject.c:121:32> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
argp
   2: ImplicitCastExpr 0x5569011f1780 <lobject.c:121:32> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
`-DeclRefExpr 0x5569011f1718 <col:32> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B19.1] (ImplicitCastExpr, LValueToRValue, struct __va_list_tag *)
   3: VAArgExpr 0x5569011f1798 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'char *'
`-ImplicitCastExpr 0x5569011f1780 <lobject.c:121:32> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f1718 <col:32> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
__builtin_va_arg([B19.2], char *)
   4: ImplicitCastExpr 0x5569011f17c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'const char *' <BitCast>
`-VAArgExpr 0x5569011f1798 <col:29, col:54> 'char *'
  `-ImplicitCastExpr 0x5569011f1780 <lobject.c:121:32> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f1718 <col:32> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
[B19.3] (ImplicitCastExpr, BitCast, const char *)
   5: DeclStmt 0x5569011f17d8 <lobject.c:121:9, col:45>col:21
`-VarDecl 0x5569011f16b8 <col:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:54> lobject.c:121:21 used s 'const char *' cinit
  `-ImplicitCastExpr 0x5569011f17c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stdarg.h:35:29, col:54> 'const char *' <BitCast>
    `-VAArgExpr 0x5569011f1798 <col:29, col:54> 'char *'
      `-ImplicitCastExpr 0x5569011f1780 <lobject.c:121:32> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
        `-DeclRefExpr 0x5569011f1718 <col:32> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x5569011f0318 'argp' 'struct __va_list_tag *':'struct __va_list_tag *'
const char *s = __builtin_va_arg(argp, char *);
   6: DeclRefExpr 0x5569011f17f0 <lobject.c:122:13> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
s
   7: ImplicitCastExpr 0x5569011f1898 <lobject.c:122:13> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f17f0 <col:13> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
[B19.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: IntegerLiteral 0x5569011f1818 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   9: CStyleCastExpr 0x5569011f1850 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5569011f1818 <col:24> 'int' 0
(void *)[B19.8] (CStyleCastExpr, NullToPointer, void *)
  10: ImplicitCastExpr 0x5569011f18b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x5569011f1878 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5569011f1850 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5569011f1818 <col:24> 'int' 0
([B19.9]) (ImplicitCastExpr, BitCast, const char *)
  11: BinaryOperator 0x5569011f18c8 <lobject.c:122:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5569011f1898 <lobject.c:122:13> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f17f0 <col:13> 'const char *' lvalue Var 0x5569011f16b8 's' 'const char *'
`-ImplicitCastExpr 0x5569011f18b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x5569011f1878 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5569011f1850 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5569011f1818 <col:24> 'int' 0
[B19.7] == [B19.10]
   T: if [B19.11]
   Preds (1): B4
   Succs (2): B18 B17

 [B20]
   1: IntegerLiteral 0x5569011f1398 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x5569011f13c8 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x5569011f1398 <col:38> 'int' 0
(void)[B20.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B22
   Succs (1): B4

 [B21]
   1: DeclRefExpr 0x5569011f12c0 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x5569011f1330 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f12c0 <col:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
[B21.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5569011f12e8 <lobject.c:118:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5569011f1380 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f12e8 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B21.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5569011f1310 <./ldo.h:22:40> 'int' 1
1
   6: CallExpr 0x5569011f1348 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x5569011f1330 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f12c0 <col:5> 'void (lua_State *, int)' Function 0x5569011d7038 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x5569011f1380 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f12e8 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-IntegerLiteral 0x5569011f1310 <./ldo.h:22:40> 'int' 1
[B21.2]([B21.4], [B21.5])
   Preds (1): B22
   Succs (1): B4

 [B22]
   1: DeclRefExpr 0x5569011f0a40 <lobject.c:117:20> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5569011f0a68 <lobject.c:117:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0a40 <col:20> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5569011f0a80 <lobject.c:117:20, col:23> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f0a68 <col:20> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f0a40 <col:20> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.2]->top
   4: ImplicitCastExpr 0x5569011f0ad8 <./lobject.h:129:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5569011f0ab8 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5569011f0a80 <lobject.c:117:20, col:23> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    `-ImplicitCastExpr 0x5569011f0a68 <col:20> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f0a40 <col:20> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
([B22.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclStmt 0x5569011f0af0 <./lobject.h:129:5, col:22>col:13
`-VarDecl 0x5569011f09e0 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5569011f0ad8 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5569011f0ab8 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x5569011f0a80 <lobject.c:117:20, col:23> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
        `-ImplicitCastExpr 0x5569011f0a68 <col:20> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5569011f0a40 <col:20> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
TValue *i_o = (L->top);
   6: DeclRefExpr 0x5569011f0bb8 <lobject.c:117:28> 'TString *(lua_State *, const char *, size_t)' Function 0x5569011e18b0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
luaS_newlstr
   7: ImplicitCastExpr 0x5569011f0cd8 <lobject.c:117:28> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f0bb8 <col:28> 'TString *(lua_State *, const char *, size_t)' Function 0x5569011e18b0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
[B22.6] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t))
   8: DeclRefExpr 0x5569011f0be0 <lobject.c:117:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x5569011f0d30 <lobject.c:117:41> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0be0 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: DeclRefExpr 0x5569011f0c08 <lobject.c:117:44> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
fmt
  11: ImplicitCastExpr 0x5569011f0d48 <lobject.c:117:44> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0c08 <col:44> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B22.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: DeclRefExpr 0x5569011f0c30 <lobject.c:117:49> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
e
  13: ImplicitCastExpr 0x5569011f0c80 <lobject.c:117:49> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0c30 <col:49> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
[B22.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: DeclRefExpr 0x5569011f0c58 <lobject.c:117:51> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
fmt
  15: ImplicitCastExpr 0x5569011f0c98 <lobject.c:117:51> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0c58 <col:51> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B22.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: BinaryOperator 0x5569011f0cb0 <lobject.c:117:49, col:51> 'long' '-'
|-ImplicitCastExpr 0x5569011f0c80 <col:49> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f0c30 <col:49> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
`-ImplicitCastExpr 0x5569011f0c98 <col:51> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f0c58 <col:51> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B22.13] - [B22.15]
  17: ImplicitCastExpr 0x5569011f0d60 <lobject.c:117:49, col:51> 'size_t':'unsigned long' <IntegralCast>
`-BinaryOperator 0x5569011f0cb0 <col:49, col:51> 'long' '-'
  |-ImplicitCastExpr 0x5569011f0c80 <col:49> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x5569011f0c30 <col:49> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
  `-ImplicitCastExpr 0x5569011f0c98 <col:51> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f0c58 <col:51> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B22.16] (ImplicitCastExpr, IntegralCast, size_t)
  18: CallExpr 0x5569011f0cf0 <lobject.c:117:28, col:54> 'TString *'
|-ImplicitCastExpr 0x5569011f0cd8 <col:28> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f0bb8 <col:28> 'TString *(lua_State *, const char *, size_t)' Function 0x5569011e18b0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x5569011f0d30 <col:41> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f0be0 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
|-ImplicitCastExpr 0x5569011f0d48 <col:44> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f0c08 <col:44> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
`-ImplicitCastExpr 0x5569011f0d60 <col:49, col:51> 'size_t':'unsigned long' <IntegralCast>
  `-BinaryOperator 0x5569011f0cb0 <col:49, col:51> 'long' '-'
    |-ImplicitCastExpr 0x5569011f0c80 <col:49> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x5569011f0c30 <col:49> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
    `-ImplicitCastExpr 0x5569011f0c98 <col:51> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f0c58 <col:51> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B22.7]([B22.9], [B22.11], [B22.17])
  19: CStyleCastExpr 0x5569011f0df8 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ParenExpr 0x5569011f0dd8 <col:26, col:30> 'TString *'
  `-ParenExpr 0x5569011f0d78 <./lobject.h:130:36, col:38> 'TString *'
    `-CallExpr 0x5569011f0cf0 <lobject.c:117:28, col:54> 'TString *'
      |-ImplicitCastExpr 0x5569011f0cd8 <col:28> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5569011f0bb8 <col:28> 'TString *(lua_State *, const char *, size_t)' Function 0x5569011e18b0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
      |-ImplicitCastExpr 0x5569011f0d30 <col:41> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x5569011f0be0 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
      |-ImplicitCastExpr 0x5569011f0d48 <col:44> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x5569011f0c08 <col:44> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
      `-ImplicitCastExpr 0x5569011f0d60 <col:49, col:51> 'size_t':'unsigned long' <IntegralCast>
        `-BinaryOperator 0x5569011f0cb0 <col:49, col:51> 'long' '-'
          |-ImplicitCastExpr 0x5569011f0c80 <col:49> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x5569011f0c30 <col:49> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
          `-ImplicitCastExpr 0x5569011f0c98 <col:51> 'const char *' <LValueToRValue>
            `-DeclRefExpr 0x5569011f0c58 <col:51> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
(GCObject *)(([B22.18])) (CStyleCastExpr, BitCast, GCObject *)
  20: DeclRefExpr 0x5569011f0b08 <./lobject.h:130:5> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
i_o
  21: ImplicitCastExpr 0x5569011f0b30 <./lobject.h:130:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0b08 <col:5> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
[B22.20] (ImplicitCastExpr, LValueToRValue, TValue *)
  22: MemberExpr 0x5569011f0b48 <./lobject.h:130:5, col:10> 'Value':'Value' lvalue ->value 0x5569011abc30
`-ImplicitCastExpr 0x5569011f0b30 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f0b08 <col:5> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
[B22.21]->value
  23: MemberExpr 0x5569011f0b80 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x5569011a38f0
`-MemberExpr 0x5569011f0b48 <col:5, col:10> 'Value':'Value' lvalue ->value 0x5569011abc30
  `-ImplicitCastExpr 0x5569011f0b30 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f0b08 <col:5> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
[B22.22].gc
  24: BinaryOperator 0x5569011f0e40 <./lobject.h:130:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x5569011f0b80 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x5569011a38f0
| `-MemberExpr 0x5569011f0b48 <col:5, col:10> 'Value':'Value' lvalue ->value 0x5569011abc30
|   `-ImplicitCastExpr 0x5569011f0b30 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5569011f0b08 <col:5> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
`-ParenExpr 0x5569011f0e20 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x5569011f0df8 <col:23, col:30> 'GCObject *' <BitCast>
    `-ParenExpr 0x5569011f0dd8 <col:26, col:30> 'TString *'
      `-ParenExpr 0x5569011f0d78 <./lobject.h:130:36, col:38> 'TString *'
        `-CallExpr 0x5569011f0cf0 <lobject.c:117:28, col:54> 'TString *'
          |-ImplicitCastExpr 0x5569011f0cd8 <col:28> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x5569011f0bb8 <col:28> 'TString *(lua_State *, const char *, size_t)' Function 0x5569011e18b0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
          |-ImplicitCastExpr 0x5569011f0d30 <col:41> 'lua_State *' <LValueToRValue>
          | `-DeclRefExpr 0x5569011f0be0 <col:41> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
          |-ImplicitCastExpr 0x5569011f0d48 <col:44> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x5569011f0c08 <col:44> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
          `-ImplicitCastExpr 0x5569011f0d60 <col:49, col:51> 'size_t':'unsigned long' <IntegralCast>
            `-BinaryOperator 0x5569011f0cb0 <col:49, col:51> 'long' '-'
              |-ImplicitCastExpr 0x5569011f0c80 <col:49> 'const char *' <LValueToRValue>
              | `-DeclRefExpr 0x5569011f0c30 <col:49> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
              `-ImplicitCastExpr 0x5569011f0c98 <col:51> 'const char *' <LValueToRValue>
                `-DeclRefExpr 0x5569011f0c58 <col:51> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B22.23] = ([B22.19])
  25: IntegerLiteral 0x5569011f0ee0 <./lua.h:78:22> 'int' 4
4
  26: DeclRefExpr 0x5569011f0e68 <./lobject.h:130:42> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
i_o
  27: ImplicitCastExpr 0x5569011f0e90 <./lobject.h:130:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0e68 <col:42> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
[B22.26] (ImplicitCastExpr, LValueToRValue, TValue *)
  28: MemberExpr 0x5569011f0ea8 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x5569011abc90
`-ImplicitCastExpr 0x5569011f0e90 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f0e68 <col:42> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
[B22.27]->tt
  29: BinaryOperator 0x5569011f0f00 <./lobject.h:130:42, ./lua.h:78:22> 'int' '='
|-MemberExpr 0x5569011f0ea8 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x5569011abc90
| `-ImplicitCastExpr 0x5569011f0e90 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5569011f0e68 <col:42> 'TValue *' lvalue Var 0x5569011f09e0 'i_o' 'TValue *'
`-IntegerLiteral 0x5569011f0ee0 <./lua.h:78:22> 'int' 4
[B22.28] = [B22.25]
  30: IntegerLiteral 0x5569011f0f28 <./llimits.h:62:31> 'int' 0
0
  31: CStyleCastExpr 0x5569011f0f58 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5569011f0f28 <col:31> 'int' 0
(void)[B22.30] (CStyleCastExpr, ToVoid, void)
  32: DeclRefExpr 0x5569011f0fe0 <lobject.c:118:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  33: ImplicitCastExpr 0x5569011f1008 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0fe0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.32] (ImplicitCastExpr, LValueToRValue, lua_State *)
  34: MemberExpr 0x5569011f1020 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
`-ImplicitCastExpr 0x5569011f1008 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f0fe0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.33]->stack_last
  35: ImplicitCastExpr 0x5569011f1070 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f1020 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
  `-ImplicitCastExpr 0x5569011f1008 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f0fe0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.34] (ImplicitCastExpr, LValueToRValue, StkId)
  36: CStyleCastExpr 0x5569011f1088 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x5569011f1070 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5569011f1020 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
    `-ImplicitCastExpr 0x5569011f1008 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f0fe0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
(char *)[B22.35] (CStyleCastExpr, BitCast, char *)
  37: DeclRefExpr 0x5569011f10b0 <lobject.c:118:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
  38: ImplicitCastExpr 0x5569011f10d8 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f10b0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.37] (ImplicitCastExpr, LValueToRValue, lua_State *)
  39: MemberExpr 0x5569011f10f0 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
`-ImplicitCastExpr 0x5569011f10d8 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f10b0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.38]->top
  40: ImplicitCastExpr 0x5569011f1140 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5569011f10f0 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
  `-ImplicitCastExpr 0x5569011f10d8 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f10b0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.39] (ImplicitCastExpr, LValueToRValue, StkId)
  41: CStyleCastExpr 0x5569011f1158 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x5569011f1140 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5569011f10f0 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
    `-ImplicitCastExpr 0x5569011f10d8 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f10b0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
(char *)[B22.40] (CStyleCastExpr, BitCast, char *)
  42: BinaryOperator 0x5569011f1180 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x5569011f1088 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x5569011f1070 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x5569011f1020 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
|     `-ImplicitCastExpr 0x5569011f1008 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011f0fe0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-CStyleCastExpr 0x5569011f1158 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f1140 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x5569011f10f0 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
      `-ImplicitCastExpr 0x5569011f10d8 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5569011f10b0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B22.36] - [B22.41]
  43: IntegerLiteral 0x5569011f11a8 <./ldo.h:22:40> 'int' 1
1
  44: UnaryExprOrTypeTraitExpr 0x5569011f11f8 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  45: CStyleCastExpr 0x5569011f1230 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x5569011f11f8 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B22.44] (CStyleCastExpr, IntegralCast, int)
  46: BinaryOperator 0x5569011f1258 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x5569011f11c8 <col:49, col:51> 'int'
| `-IntegerLiteral 0x5569011f11a8 <line:22:40> 'int' 1
`-CStyleCastExpr 0x5569011f1230 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x5569011f11f8 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B22.43]) * [B22.45]
  47: ImplicitCastExpr 0x5569011f1280 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x5569011f1258 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x5569011f11c8 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x5569011f11a8 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x5569011f1230 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x5569011f11f8 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B22.46] (ImplicitCastExpr, IntegralCast, long)
  48: BinaryOperator 0x5569011f1298 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x5569011f1180 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x5569011f1088 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x5569011f1070 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x5569011f1020 <lobject.c:118:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5569011ce2b8
| |     `-ImplicitCastExpr 0x5569011f1008 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x5569011f0fe0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
| `-CStyleCastExpr 0x5569011f1158 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x5569011f1140 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x5569011f10f0 <lobject.c:118:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5569011ce008
|       `-ImplicitCastExpr 0x5569011f10d8 <lobject.c:118:14> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x5569011f10b0 <col:14> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f1280 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x5569011f1258 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x5569011f11c8 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x5569011f11a8 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x5569011f1230 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x5569011f11f8 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B22.42] <= [B22.47]
   T: if [B22.48]
   Preds (1): B24
   Succs (2): B21 B20

 [B23]
   T: break;
   Preds (1): B24
   Succs (1): B1

 [B24]
   1: DeclRefExpr 0x5569011f0748 <lobject.c:115:21> 'char *(const char *, int)' Function 0x556901101080 'strchr' 'char *(const char *, int)'
strchr
   2: ImplicitCastExpr 0x5569011f07f8 <lobject.c:115:21> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f0748 <col:21> 'char *(const char *, int)' Function 0x556901101080 'strchr' 'char *(const char *, int)'
[B24.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, int))
   3: DeclRefExpr 0x5569011f0770 <lobject.c:115:28> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
fmt
   4: ImplicitCastExpr 0x5569011f0848 <lobject.c:115:28> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0770 <col:28> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
[B24.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: CharacterLiteral 0x5569011f0798 <lobject.c:115:33> 'int' 37
'%'
   6: CallExpr 0x5569011f0810 <lobject.c:115:21, col:36> 'char *'
|-ImplicitCastExpr 0x5569011f07f8 <col:21> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f0748 <col:21> 'char *(const char *, int)' Function 0x556901101080 'strchr' 'char *(const char *, int)'
|-ImplicitCastExpr 0x5569011f0848 <col:28> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f0770 <col:28> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
`-CharacterLiteral 0x5569011f0798 <col:33> 'int' 37
[B24.2]([B24.4], [B24.5])
   7: ImplicitCastExpr 0x5569011f0860 <lobject.c:115:21, col:36> 'const char *' <BitCast>
`-CallExpr 0x5569011f0810 <col:21, col:36> 'char *'
  |-ImplicitCastExpr 0x5569011f07f8 <col:21> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5569011f0748 <col:21> 'char *(const char *, int)' Function 0x556901101080 'strchr' 'char *(const char *, int)'
  |-ImplicitCastExpr 0x5569011f0848 <col:28> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x5569011f0770 <col:28> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
  `-CharacterLiteral 0x5569011f0798 <col:33> 'int' 37
[B24.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclStmt 0x5569011f0878 <lobject.c:115:5, col:37>col:17
`-VarDecl 0x5569011f06e8 <col:5, col:36> col:17 used e 'const char *' cinit
  `-ImplicitCastExpr 0x5569011f0860 <col:21, col:36> 'const char *' <BitCast>
    `-CallExpr 0x5569011f0810 <col:21, col:36> 'char *'
      |-ImplicitCastExpr 0x5569011f07f8 <col:21> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5569011f0748 <col:21> 'char *(const char *, int)' Function 0x556901101080 'strchr' 'char *(const char *, int)'
      |-ImplicitCastExpr 0x5569011f0848 <col:28> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x5569011f0770 <col:28> 'const char *' lvalue ParmVar 0x5569011f02a8 'fmt' 'const char *'
      `-CharacterLiteral 0x5569011f0798 <col:33> 'int' 37
const char *e = strchr(fmt, '%');
   9: DeclRefExpr 0x5569011f0890 <lobject.c:116:9> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
e
  10: ImplicitCastExpr 0x5569011f0938 <lobject.c:116:9> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0890 <col:9> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
[B24.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: IntegerLiteral 0x5569011f08b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  12: CStyleCastExpr 0x5569011f08f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5569011f08b8 <col:24> 'int' 0
(void *)[B24.11] (CStyleCastExpr, NullToPointer, void *)
  13: ImplicitCastExpr 0x5569011f0950 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x5569011f0918 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5569011f08f0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5569011f08b8 <col:24> 'int' 0
([B24.12]) (ImplicitCastExpr, BitCast, const char *)
  14: BinaryOperator 0x5569011f0968 <lobject.c:116:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5569011f0938 <lobject.c:116:9> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f0890 <col:9> 'const char *' lvalue Var 0x5569011f06e8 'e' 'const char *'
`-ImplicitCastExpr 0x5569011f0950 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x5569011f0918 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5569011f08f0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5569011f08b8 <col:24> 'int' 0
[B24.10] == [B24.13]
   T: if [B24.14]
   Preds (1): B25
   Succs (2): B23 B22

 [B25]
   T: for (; ; )
   Preds (2): B2 B26
   Succs (2): B24 NULL

 [B26]
   1: IntegerLiteral 0x5569011f0530 <lobject.c:112:11> 'int' 1
1
   2: DeclStmt 0x5569011f0550 <lobject.c:112:3, col:12>col:7
`-VarDecl 0x5569011f04d0 <col:3, col:11> col:7 used n 'int' cinit
  `-IntegerLiteral 0x5569011f0530 <col:11> 'int' 1
int n = 1;
   3: DeclRefExpr 0x5569011f0568 <lobject.c:113:3> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
pushstr
   4: ImplicitCastExpr 0x5569011f0638 <lobject.c:113:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f0568 <col:3> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
[B26.3] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   5: DeclRefExpr 0x5569011f0590 <lobject.c:113:11> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x5569011f0688 <lobject.c:113:11> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5569011f0590 <col:11> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
[B26.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: StringLiteral 0x5569011f05b8 <lobject.c:113:14> 'char [1]' lvalue ""
""
   8: ImplicitCastExpr 0x5569011f06a0 <lobject.c:113:14> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f05b8 <col:14> 'char [1]' lvalue ""
[B26.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x5569011f06b8 <lobject.c:113:14> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f06a0 <col:14> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f05b8 <col:14> 'char [1]' lvalue ""
[B26.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x5569011f0650 <lobject.c:113:3, col:16> 'void'
|-ImplicitCastExpr 0x5569011f0638 <col:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f0568 <col:3> 'void (lua_State *, const char *)' Function 0x5569011ef030 'pushstr' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5569011f0688 <col:11> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f0590 <col:11> 'lua_State *' lvalue ParmVar 0x5569011f0230 'L' 'lua_State *'
`-ImplicitCastExpr 0x5569011f06b8 <col:14> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f06a0 <col:14> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f05b8 <col:14> 'char [1]' lvalue ""
[B26.4]([B26.6], [B26.9])
   Preds (1): B27
   Succs (1): B25

 [B0 (EXIT)]
   Preds (1): B1
