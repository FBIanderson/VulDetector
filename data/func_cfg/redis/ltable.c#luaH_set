TValue *luaH_set(lua_State *L, Table *t, const TValue *key)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x5654000f5920 <ltable.c:503:12> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000ec3a0 'newkey' 'TValue *(lua_State *, Table *, const TValue *)'
newkey
   2: ImplicitCastExpr 0x5654000f59c0 <ltable.c:503:12> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f5920 <col:12> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000ec3a0 'newkey' 'TValue *(lua_State *, Table *, const TValue *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, TValue *(*)(lua_State *, Table *, const TValue *))
   3: DeclRefExpr 0x5654000f5948 <ltable.c:503:19> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000f5a18 <ltable.c:503:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000f5948 <col:19> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5654000f5970 <ltable.c:503:22> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
t
   6: ImplicitCastExpr 0x5654000f5a30 <ltable.c:503:22> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f5970 <col:22> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
[B1.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: DeclRefExpr 0x5654000f5998 <ltable.c:503:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
key
   8: ImplicitCastExpr 0x5654000f5a48 <ltable.c:503:25> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000f5998 <col:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B1.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: CallExpr 0x5654000f59d8 <ltable.c:503:12, col:28> 'TValue *'
|-ImplicitCastExpr 0x5654000f59c0 <col:12> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f5920 <col:12> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000ec3a0 'newkey' 'TValue *(lua_State *, Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000f5a18 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f5948 <col:19> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
|-ImplicitCastExpr 0x5654000f5a30 <col:22> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f5970 <col:22> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
`-ImplicitCastExpr 0x5654000f5a48 <col:25> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f5998 <col:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B1.2]([B1.4], [B1.6], [B1.8])
  10: ReturnStmt 0x5654000f5a60 <ltable.c:503:5, col:28>
`-CallExpr 0x5654000f59d8 <col:12, col:28> 'TValue *'
  |-ImplicitCastExpr 0x5654000f59c0 <col:12> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000f5920 <col:12> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000ec3a0 'newkey' 'TValue *(lua_State *, Table *, const TValue *)'
  |-ImplicitCastExpr 0x5654000f5a18 <col:19> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5654000f5948 <col:19> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5654000f5a30 <col:22> 'Table *' <LValueToRValue>
  | `-DeclRefExpr 0x5654000f5970 <col:22> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
  `-ImplicitCastExpr 0x5654000f5a48 <col:25> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000f5998 <col:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
return [B1.9];
   Preds (4): B2 B3 B4 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5654000f5788 <ltable.c:502:7> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x5654000f5818 <ltable.c:502:7> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f5788 <col:7> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5654000f57b0 <ltable.c:502:21> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000f5868 <ltable.c:502:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000f57b0 <col:21> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5654000f57d8 <ltable.c:502:24> 'char [19]' lvalue "table index is NaN"
"table index is NaN"
   6: ImplicitCastExpr 0x5654000f5880 <ltable.c:502:24> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5654000f57d8 <col:24> 'char [19]' lvalue "table index is NaN"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5654000f5898 <ltable.c:502:24> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5654000f5880 <col:24> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5654000f57d8 <col:24> 'char [19]' lvalue "table index is NaN"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5654000f5830 <ltable.c:502:7, col:44> 'void'
|-ImplicitCastExpr 0x5654000f5818 <col:7> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f5788 <col:7> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5654000f5868 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f57b0 <col:21> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
`-ImplicitCastExpr 0x5654000f5898 <col:24> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5654000f5880 <col:24> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5654000f57d8 <col:24> 'char [19]' lvalue "table index is NaN"
[B2.2]([B2.4], [B2.7])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5654000f5448 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
key
   2: ImplicitCastExpr 0x5654000f5490 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f5470 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f5448 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5654000f54a8 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000f5490 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f5470 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f5448 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B3.2]->value
   4: MemberExpr 0x5654000f54e0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
`-MemberExpr 0x5654000f54a8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000f5490 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000f5470 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5654000f5448 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B3.3].n
   5: ImplicitCastExpr 0x5654000f56a8 <./luaconf.h:540:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5654000f5558 <col:27, col:29> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5654000f5538 <line:543:39, col:41> 'const lua_Number':'const double' lvalue
    `-ParenExpr 0x5654000f5518 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5654000f54e0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
        `-MemberExpr 0x5654000f54a8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
          `-ImplicitCastExpr 0x5654000f5490 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5654000f5470 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5654000f5448 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
((([B3.4]))) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5654000f5578 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
key
   7: ImplicitCastExpr 0x5654000f55c0 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f55a0 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f5578 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
([B3.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5654000f55d8 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000f55c0 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f55a0 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f5578 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B3.7]->value
   9: MemberExpr 0x5654000f5610 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
`-MemberExpr 0x5654000f55d8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000f55c0 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000f55a0 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5654000f5578 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B3.8].n
  10: ImplicitCastExpr 0x5654000f56c0 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5654000f5688 <col:32, col:34> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5654000f5668 <line:543:44, col:46> 'const lua_Number':'const double' lvalue
    `-ParenExpr 0x5654000f5648 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5654000f5610 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
        `-MemberExpr 0x5654000f55d8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
          `-ImplicitCastExpr 0x5654000f55c0 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5654000f55a0 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5654000f5578 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
((([B3.9]))) (ImplicitCastExpr, LValueToRValue, lua_Number)
  11: BinaryOperator 0x5654000f56d8 <./luaconf.h:540:27, col:34> 'int' '=='
|-ImplicitCastExpr 0x5654000f56a8 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5654000f5558 <col:27, col:29> 'const lua_Number':'const double' lvalue
|   `-ParenExpr 0x5654000f5538 <line:543:39, col:41> 'const lua_Number':'const double' lvalue
|     `-ParenExpr 0x5654000f5518 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
|       `-MemberExpr 0x5654000f54e0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
|         `-MemberExpr 0x5654000f54a8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
|           `-ImplicitCastExpr 0x5654000f5490 <col:44, col:46> 'const TValue *' <LValueToRValue>
|             `-ParenExpr 0x5654000f5470 <col:44, col:46> 'const TValue *' lvalue
|               `-DeclRefExpr 0x5654000f5448 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
`-ImplicitCastExpr 0x5654000f56c0 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5654000f5688 <col:32, col:34> 'const lua_Number':'const double' lvalue
    `-ParenExpr 0x5654000f5668 <line:543:44, col:46> 'const lua_Number':'const double' lvalue
      `-ParenExpr 0x5654000f5648 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
        `-MemberExpr 0x5654000f5610 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
          `-MemberExpr 0x5654000f55d8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
            `-ImplicitCastExpr 0x5654000f55c0 <col:44, col:46> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5654000f55a0 <col:44, col:46> 'const TValue *' lvalue
                `-DeclRefExpr 0x5654000f5578 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B3.5] == [B3.10]
  12: UnaryOperator 0x5654000f5720 <./luaconf.h:543:27, line:540:35> 'int' prefix '!'
`-ParenExpr 0x5654000f5700 <col:26, col:35> 'int'
  `-BinaryOperator 0x5654000f56d8 <col:27, col:34> 'int' '=='
    |-ImplicitCastExpr 0x5654000f56a8 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
    | `-ParenExpr 0x5654000f5558 <col:27, col:29> 'const lua_Number':'const double' lvalue
    |   `-ParenExpr 0x5654000f5538 <line:543:39, col:41> 'const lua_Number':'const double' lvalue
    |     `-ParenExpr 0x5654000f5518 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    |       `-MemberExpr 0x5654000f54e0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
    |         `-MemberExpr 0x5654000f54a8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
    |           `-ImplicitCastExpr 0x5654000f5490 <col:44, col:46> 'const TValue *' <LValueToRValue>
    |             `-ParenExpr 0x5654000f5470 <col:44, col:46> 'const TValue *' lvalue
    |               `-DeclRefExpr 0x5654000f5448 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
    `-ImplicitCastExpr 0x5654000f56c0 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
      `-ParenExpr 0x5654000f5688 <col:32, col:34> 'const lua_Number':'const double' lvalue
        `-ParenExpr 0x5654000f5668 <line:543:44, col:46> 'const lua_Number':'const double' lvalue
          `-ParenExpr 0x5654000f5648 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
            `-MemberExpr 0x5654000f5610 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
              `-MemberExpr 0x5654000f55d8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
                `-ImplicitCastExpr 0x5654000f55c0 <col:44, col:46> 'const TValue *' <LValueToRValue>
                  `-ParenExpr 0x5654000f55a0 <col:44, col:46> 'const TValue *' lvalue
                    `-DeclRefExpr 0x5654000f5578 <ltable.c:501:54> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
!([B3.11])
   T: if ([B4.6]) && ([B3.12])
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5654000f5310 <ltable.c:501:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
key
   2: ImplicitCastExpr 0x5654000f5358 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f5338 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f5310 <ltable.c:501:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5654000f5370 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000f5358 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f5338 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f5310 <ltable.c:501:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B4.2]->tt
   4: ImplicitCastExpr 0x5654000f53e8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000f53a8 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5654000f5370 <col:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000f5358 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000f5338 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5654000f5310 <ltable.c:501:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5654000f53c8 <./lua.h:77:22> 'int' 3
3
   6: BinaryOperator 0x5654000f5400 <./lobject.h:90:18, ./lua.h:77:22> 'int' '=='
|-ImplicitCastExpr 0x5654000f53e8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000f53a8 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5654000f5370 <col:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
|     `-ImplicitCastExpr 0x5654000f5358 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5654000f5338 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5654000f5310 <ltable.c:501:25> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
`-IntegerLiteral 0x5654000f53c8 <./lua.h:77:22> 'int' 3
[B4.4] == [B4.5]
   T: ([B4.6]) && ...
   Preds (1): B6
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x5654000f51b0 <ltable.c:500:23> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x5654000f5278 <ltable.c:500:23> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f51b0 <col:23> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5654000f51d8 <ltable.c:500:37> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000f52c8 <ltable.c:500:37> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000f51d8 <col:37> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5654000f5238 <ltable.c:500:40> 'char [19]' lvalue "table index is nil"
"table index is nil"
   6: ImplicitCastExpr 0x5654000f52e0 <ltable.c:500:40> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5654000f5238 <col:40> 'char [19]' lvalue "table index is nil"
[B5.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5654000f52f8 <ltable.c:500:40> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5654000f52e0 <col:40> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5654000f5238 <col:40> 'char [19]' lvalue "table index is nil"
[B5.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5654000f5290 <ltable.c:500:23, col:60> 'void'
|-ImplicitCastExpr 0x5654000f5278 <col:23> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f51b0 <col:23> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5654000f52c8 <col:37> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f51d8 <col:37> 'lua_State *' lvalue ParmVar 0x5654000f4978 'L' 'lua_State *'
`-ImplicitCastExpr 0x5654000f52f8 <col:40> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5654000f52e0 <col:40> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5654000f5238 <col:40> 'char [19]' lvalue "table index is nil"
[B5.2]([B5.4], [B5.7])
   Preds (1): B6
   Succs (1): B1

 [B6]
   1: DeclRefExpr 0x5654000f5078 <ltable.c:500:17> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
key
   2: ImplicitCastExpr 0x5654000f50c0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f50a0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f5078 <ltable.c:500:17> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5654000f50d8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000f50c0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f50a0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f5078 <ltable.c:500:17> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B6.2]->tt
   4: ImplicitCastExpr 0x5654000f5150 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000f5110 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5654000f50d8 <col:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000f50c0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000f50a0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5654000f5078 <ltable.c:500:17> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
([B6.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5654000f5130 <./lua.h:74:19> 'int' 0
0
   6: BinaryOperator 0x5654000f5168 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000f5150 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000f5110 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5654000f50d8 <col:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
|     `-ImplicitCastExpr 0x5654000f50c0 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5654000f50a0 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5654000f5078 <ltable.c:500:17> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
`-IntegerLiteral 0x5654000f5130 <./lua.h:74:19> 'int' 0
[B6.4] == [B6.5]
   T: if ([B6.6])
   Preds (1): B8
   Succs (2): B5 B4

 [B7]
   1: DeclRefExpr 0x5654000f4f78 <ltable.c:498:27> 'const TValue *' lvalue Var 0x5654000f4c00 'p' 'const TValue *'
p
   2: ImplicitCastExpr 0x5654000f5000 <./llimits.h:75:26, col:30> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f4fe0 <col:26, col:30> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f4f78 <ltable.c:498:27> 'const TValue *' lvalue Var 0x5654000f4c00 'p' 'const TValue *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: CStyleCastExpr 0x5654000f5018 <./llimits.h:75:23, col:30> 'TValue *' <BitCast>
`-ImplicitCastExpr 0x5654000f5000 <col:26, col:30> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f4fe0 <col:26, col:30> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f4f78 <ltable.c:498:27> 'const TValue *' lvalue Var 0x5654000f4c00 'p' 'const TValue *'
(TValue *)[B7.2] (CStyleCastExpr, BitCast, TValue *)
   4: ReturnStmt 0x5654000f5060 <ltable.c:498:5, ./llimits.h:75:31>
`-ParenExpr 0x5654000f5040 <col:22, col:31> 'TValue *'
  `-CStyleCastExpr 0x5654000f5018 <col:23, col:30> 'TValue *' <BitCast>
    `-ImplicitCastExpr 0x5654000f5000 <col:26, col:30> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000f4fe0 <col:26, col:30> 'const TValue *' lvalue
        `-DeclRefExpr 0x5654000f4f78 <ltable.c:498:27> 'const TValue *' lvalue Var 0x5654000f4c00 'p' 'const TValue *'
return ([B7.3]);
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x5654000f4c60 <ltable.c:495:21> 'const TValue *(Table *, const TValue *)' Function 0x5654000f1a08 'luaH_get' 'const TValue *(Table *, const TValue *)'
luaH_get
   2: ImplicitCastExpr 0x5654000f4d38 <ltable.c:495:21> 'const TValue *(*)(Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f4c60 <col:21> 'const TValue *(Table *, const TValue *)' Function 0x5654000f1a08 'luaH_get' 'const TValue *(Table *, const TValue *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, const TValue *))
   3: DeclRefExpr 0x5654000f4c88 <ltable.c:495:30> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000f4d88 <ltable.c:495:30> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f4c88 <col:30> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
[B8.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: DeclRefExpr 0x5654000f4cb0 <ltable.c:495:33> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
key
   6: ImplicitCastExpr 0x5654000f4da0 <ltable.c:495:33> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000f4cb0 <col:33> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B8.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: CallExpr 0x5654000f4d50 <ltable.c:495:21, col:36> 'const TValue *'
|-ImplicitCastExpr 0x5654000f4d38 <col:21> 'const TValue *(*)(Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f4c60 <col:21> 'const TValue *(Table *, const TValue *)' Function 0x5654000f1a08 'luaH_get' 'const TValue *(Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000f4d88 <col:30> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f4c88 <col:30> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
`-ImplicitCastExpr 0x5654000f4da0 <col:33> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f4cb0 <col:33> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
[B8.2]([B8.4], [B8.6])
   8: DeclStmt 0x5654000f4db8 <ltable.c:495:3, col:37>col:17
`-VarDecl 0x5654000f4c00 <col:3, col:36> col:17 used p 'const TValue *' cinit
  `-CallExpr 0x5654000f4d50 <col:21, col:36> 'const TValue *'
    |-ImplicitCastExpr 0x5654000f4d38 <col:21> 'const TValue *(*)(Table *, const TValue *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5654000f4c60 <col:21> 'const TValue *(Table *, const TValue *)' Function 0x5654000f1a08 'luaH_get' 'const TValue *(Table *, const TValue *)'
    |-ImplicitCastExpr 0x5654000f4d88 <col:30> 'Table *' <LValueToRValue>
    | `-DeclRefExpr 0x5654000f4c88 <col:30> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
    `-ImplicitCastExpr 0x5654000f4da0 <col:33> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000f4cb0 <col:33> 'const TValue *' lvalue ParmVar 0x5654000f4a58 'key' 'const TValue *'
const TValue *p = luaH_get(t, key);
   9: IntegerLiteral 0x5654000f4e48 <ltable.c:496:14> 'int' 0
0
  10: ImplicitCastExpr 0x5654000f4e68 <ltable.c:496:14> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x5654000f4e48 <col:14> 'int' 0
[B8.9] (ImplicitCastExpr, IntegralCast, lu_byte)
  11: DeclRefExpr 0x5654000f4dd0 <ltable.c:496:3> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
t
  12: ImplicitCastExpr 0x5654000f4df8 <ltable.c:496:3> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f4dd0 <col:3> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
[B8.11] (ImplicitCastExpr, LValueToRValue, Table *)
  13: MemberExpr 0x5654000f4e10 <ltable.c:496:3, col:6> 'lu_byte':'unsigned char' lvalue ->flags 0x56540009ab98
`-ImplicitCastExpr 0x5654000f4df8 <col:3> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f4dd0 <col:3> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
[B8.12]->flags
  14: BinaryOperator 0x5654000f4e80 <ltable.c:496:3, col:14> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x5654000f4e10 <col:3, col:6> 'lu_byte':'unsigned char' lvalue ->flags 0x56540009ab98
| `-ImplicitCastExpr 0x5654000f4df8 <col:3> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000f4dd0 <col:3> 'Table *' lvalue ParmVar 0x5654000f49e8 't' 'Table *'
`-ImplicitCastExpr 0x5654000f4e68 <col:14> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x5654000f4e48 <col:14> 'int' 0
[B8.13] = [B8.10]
  15: DeclRefExpr 0x5654000f4ea8 <ltable.c:497:7> 'const TValue *' lvalue Var 0x5654000f4c00 'p' 'const TValue *'
p
  16: ImplicitCastExpr 0x5654000f4f38 <ltable.c:497:7> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000f4ea8 <col:7> 'const TValue *' lvalue Var 0x5654000f4c00 'p' 'const TValue *'
[B8.15] (ImplicitCastExpr, LValueToRValue, const TValue *)
  17: DeclRefExpr 0x5654000f4ed0 <./lobject.h:363:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
luaO_nilobject_
  18: UnaryOperator 0x5654000f4ef8 <./lobject.h:363:26, col:27> 'const TValue *' prefix '&'
`-DeclRefExpr 0x5654000f4ed0 <col:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
&[B8.17]
  19: BinaryOperator 0x5654000f4f50 <ltable.c:497:7, ./lobject.h:363:42> 'int' '!='
|-ImplicitCastExpr 0x5654000f4f38 <ltable.c:497:7> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f4ea8 <col:7> 'const TValue *' lvalue Var 0x5654000f4c00 'p' 'const TValue *'
`-ParenExpr 0x5654000f4f18 <./lobject.h:363:25, col:42> 'const TValue *'
  `-UnaryOperator 0x5654000f4ef8 <col:26, col:27> 'const TValue *' prefix '&'
    `-DeclRefExpr 0x5654000f4ed0 <col:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
[B8.16] != ([B8.18])
   T: if [B8.19]
   Preds (1): B9
   Succs (2): B7 B6

 [B0 (EXIT)]
   Preds (2): B1 B7
