void luaK_ret(FuncState *fs, int first, int nret)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768ae170 <lcode.c:70:3> 'int (FuncState *, OpCode, int, int, int)' Function 0x56377687fb68 'luaK_codeABC' 'int (FuncState *, OpCode, int, int, int)'
luaK_codeABC
   2: ImplicitCastExpr 0x5637768ae808 <lcode.c:70:3> 'int (*)(FuncState *, OpCode, int, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768ae170 <col:3> 'int (FuncState *, OpCode, int, int, int)' Function 0x56377687fb68 'luaK_codeABC' 'int (FuncState *, OpCode, int, int, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FuncState *, OpCode, int, int, int))
   3: DeclRefExpr 0x5637768ae198 <lcode.c:70:16> 'FuncState *' lvalue ParmVar 0x5637768adee8 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768ae870 <lcode.c:70:16> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768ae198 <col:16> 'FuncState *' lvalue ParmVar 0x5637768adee8 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768ae1c0 <lcode.c:70:20> 'int' EnumConstant 0x5637768772b8 'OP_RETURN' 'int'
OP_RETURN
   6: ImplicitCastExpr 0x5637768ae888 <lcode.c:70:20> 'OpCode':'OpCode' <IntegralCast>
`-DeclRefExpr 0x5637768ae1c0 <col:20> 'int' EnumConstant 0x5637768772b8 'OP_RETURN' 'int'
[B1.5] (ImplicitCastExpr, IntegralCast, OpCode)
   7: DeclRefExpr 0x5637768ae1e8 <lcode.c:70:31> 'int' lvalue ParmVar 0x5637768adf60 'first' 'int'
first
   8: ImplicitCastExpr 0x5637768ae8a0 <lcode.c:70:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768ae1e8 <col:31> 'int' lvalue ParmVar 0x5637768adf60 'first' 'int'
[B1.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x5637768ae760 <lcode.c:70:38> 'int' lvalue ParmVar 0x5637768adfd8 'nret' 'int'
nret
  10: ImplicitCastExpr 0x5637768ae7a8 <lcode.c:70:38> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768ae760 <col:38> 'int' lvalue ParmVar 0x5637768adfd8 'nret' 'int'
[B1.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x5637768ae788 <lcode.c:70:43> 'int' 1
1
  12: BinaryOperator 0x5637768ae7c0 <lcode.c:70:38, col:43> 'int' '+'
|-ImplicitCastExpr 0x5637768ae7a8 <col:38> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5637768ae760 <col:38> 'int' lvalue ParmVar 0x5637768adfd8 'nret' 'int'
`-IntegerLiteral 0x5637768ae788 <col:43> 'int' 1
[B1.10] + [B1.11]
  13: IntegerLiteral 0x5637768ae7e8 <lcode.c:70:46> 'int' 0
0
  14: CallExpr 0x5637768ae820 <lcode.c:70:3, col:47> 'int'
|-ImplicitCastExpr 0x5637768ae808 <col:3> 'int (*)(FuncState *, OpCode, int, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768ae170 <col:3> 'int (FuncState *, OpCode, int, int, int)' Function 0x56377687fb68 'luaK_codeABC' 'int (FuncState *, OpCode, int, int, int)'
|-ImplicitCastExpr 0x5637768ae870 <col:16> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768ae198 <col:16> 'FuncState *' lvalue ParmVar 0x5637768adee8 'fs' 'FuncState *'
|-ImplicitCastExpr 0x5637768ae888 <col:20> 'OpCode':'OpCode' <IntegralCast>
| `-DeclRefExpr 0x5637768ae1c0 <col:20> 'int' EnumConstant 0x5637768772b8 'OP_RETURN' 'int'
|-ImplicitCastExpr 0x5637768ae8a0 <col:31> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5637768ae1e8 <col:31> 'int' lvalue ParmVar 0x5637768adf60 'first' 'int'
|-BinaryOperator 0x5637768ae7c0 <col:38, col:43> 'int' '+'
| |-ImplicitCastExpr 0x5637768ae7a8 <col:38> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x5637768ae760 <col:38> 'int' lvalue ParmVar 0x5637768adfd8 'nret' 'int'
| `-IntegerLiteral 0x5637768ae788 <col:43> 'int' 1
`-IntegerLiteral 0x5637768ae7e8 <col:46> 'int' 0
[B1.2]([B1.4], [B1.6], [B1.8], [B1.12], [B1.13])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
