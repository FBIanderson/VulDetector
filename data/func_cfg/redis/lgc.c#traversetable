static int traversetable(global_State *g, Table *h)
 [B41 (ENTRY)]
   Succs (1): B40

 [B1]
   1: BinaryOperator 0x55ef1b1dea50 <lgc.c:195:10, col:21> 'int' '||'
|-ImplicitCastExpr 0x55ef1b1ddc30 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1ddbe0 <col:10> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
`-ImplicitCastExpr 0x55ef1b1ddc48 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1ddc08 <col:21> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
[B3.2] || [B2.2]
   2: ReturnStmt 0x55ef1b1dea78 <lgc.c:195:3, col:21>
`-BinaryOperator 0x55ef1b1dea50 <col:10, col:21> 'int' '||'
  |-ImplicitCastExpr 0x55ef1b1ddc30 <col:10> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55ef1b1ddbe0 <col:10> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
  `-ImplicitCastExpr 0x55ef1b1ddc48 <col:21> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1ddc08 <col:21> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55ef1b1ddc08 <lgc.c:195:21> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
weakvalue
   2: ImplicitCastExpr 0x55ef1b1ddc48 <lgc.c:195:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1ddc08 <col:21> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55ef1b1ddbe0 <lgc.c:195:10> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
weakkey
   2: ImplicitCastExpr 0x55ef1b1ddc30 <lgc.c:195:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1ddbe0 <col:10> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B3.2] || ...
   Preds (1): B15
   Succs (2): B1 B2

 [B4]
   Preds (5): B5 B6 B7 B8 B13
   Succs (1): B15

 [B5]
   1: DeclRefExpr 0x55ef1b1dd830 <lgc.c:53:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
   2: ImplicitCastExpr 0x55ef1b1dda08 <lgc.c:53:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1dd830 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
   3: DeclRefExpr 0x55ef1b1dd858 <lgc.c:192:33> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b1dda58 <lgc.c:192:33> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dd858 <col:33> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
   6: ImplicitCastExpr 0x55ef1b1dd8c8 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dd8a8 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B5.5]) (ImplicitCastExpr, LValueToRValue, Node *)
   7: MemberExpr 0x55ef1b1dd8e0 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
`-ImplicitCastExpr 0x55ef1b1dd8c8 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dd8a8 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B5.6]->i_val
   8: UnaryOperator 0x55ef1b1dd918 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x55ef1b1dd8e0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
  `-ImplicitCastExpr 0x55ef1b1dd8c8 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dd8a8 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
&[B5.7]
   9: MemberExpr 0x55ef1b1dd978 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ParenExpr 0x55ef1b1dd958 <col:48, col:50> 'TValue *'
  `-ParenExpr 0x55ef1b1dd938 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x55ef1b1dd918 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x55ef1b1dd8e0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
        `-ImplicitCastExpr 0x55ef1b1dd8c8 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dd8a8 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B5.8]))->value
  10: MemberExpr 0x55ef1b1dd9b0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1dd978 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ParenExpr 0x55ef1b1dd958 <col:48, col:50> 'TValue *'
    `-ParenExpr 0x55ef1b1dd938 <./ltable.h:15:18, col:30> 'TValue *'
      `-UnaryOperator 0x55ef1b1dd918 <col:19, col:25> 'TValue *' prefix '&'
        `-MemberExpr 0x55ef1b1dd8e0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
          `-ImplicitCastExpr 0x55ef1b1dd8c8 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1dd8a8 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B5.9].gc
  11: ImplicitCastExpr 0x55ef1b1dda70 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dd9e8 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x55ef1b1dd9b0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1dd978 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
      `-ParenExpr 0x55ef1b1dd958 <col:48, col:50> 'TValue *'
        `-ParenExpr 0x55ef1b1dd938 <./ltable.h:15:18, col:30> 'TValue *'
          `-UnaryOperator 0x55ef1b1dd918 <col:19, col:25> 'TValue *' prefix '&'
            `-MemberExpr 0x55ef1b1dd8e0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
              `-ImplicitCastExpr 0x55ef1b1dd8c8 <col:20, col:22> 'Node *' <LValueToRValue>
                `-ParenExpr 0x55ef1b1dd8a8 <col:20, col:22> 'Node *' lvalue
                  `-DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B5.10]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  12: CallExpr 0x55ef1b1dda20 <lgc.c:53:48, col:77> 'void'
|-ImplicitCastExpr 0x55ef1b1dda08 <col:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1dd830 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b1dda58 <line:192:33> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1dd858 <col:33> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
`-ImplicitCastExpr 0x55ef1b1dda70 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dd9e8 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1dd9b0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1dd978 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ParenExpr 0x55ef1b1dd958 <col:48, col:50> 'TValue *'
          `-ParenExpr 0x55ef1b1dd938 <./ltable.h:15:18, col:30> 'TValue *'
            `-UnaryOperator 0x55ef1b1dd918 <col:19, col:25> 'TValue *' prefix '&'
              `-MemberExpr 0x55ef1b1dd8e0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
                `-ImplicitCastExpr 0x55ef1b1dd8c8 <col:20, col:22> 'Node *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b1dd8a8 <col:20, col:22> 'Node *' lvalue
                    `-DeclRefExpr 0x55ef1b1dd880 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B5.2]([B5.4], [B5.11])
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
   2: ImplicitCastExpr 0x55ef1b1dd3b0 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x55ef1b1dd3c8 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
`-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B6.2]->i_val
   4: UnaryOperator 0x55ef1b1dd400 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
  `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
&[B6.3]
   5: MemberExpr 0x55ef1b1dd460 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
  `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
        `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B6.4]))->value
   6: MemberExpr 0x55ef1b1dd498 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1dd460 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
    `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
      `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
        `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
          `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B6.5].gc
   7: ImplicitCastExpr 0x55ef1b1dd510 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dd4f0 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x55ef1b1dd4d0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1dd498 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1dd460 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
          `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
            `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
              `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
                `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
                    `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B6.6])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x55ef1b1dd528 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1dd510 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dd4f0 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x55ef1b1dd4d0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x55ef1b1dd498 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
        `-MemberExpr 0x55ef1b1dd460 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
          `-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
            `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
              `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
                `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
                  `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
                    `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
                      `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B6.7]->gch
   9: MemberExpr 0x55ef1b1dd560 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1dd528 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1dd510 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dd4f0 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x55ef1b1dd4d0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x55ef1b1dd498 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b1dd460 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
            `-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
              `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
                `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
                  `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
                    `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
                      `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
                        `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B6.8].marked
  10: ImplicitCastExpr 0x55ef1b1dd790 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1dd598 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1dd560 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1dd528 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b1dd510 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1dd4f0 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x55ef1b1dd4d0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x55ef1b1dd498 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b1dd460 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                `-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
                  `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
                    `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
                      `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
                        `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
                          `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
                            `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B6.9]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  11: ImplicitCastExpr 0x55ef1b1dd7a8 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1dd790 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dd598 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1dd560 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b1dd528 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b1dd510 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dd4f0 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x55ef1b1dd4d0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x55ef1b1dd498 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
                `-MemberExpr 0x55ef1b1dd460 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                  `-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
                    `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
                      `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
                        `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
                          `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
                            `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
                              `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B6.10] (ImplicitCastExpr, IntegralCast, int)
  12: IntegerLiteral 0x55ef1b1dd5b8 <./lgc.h:30:21> 'int' 1
1
  13: IntegerLiteral 0x55ef1b1dd5d8 <./lgc.h:54:19> 'int' 0
0
  14: BinaryOperator 0x55ef1b1dd618 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1dd5b8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1dd5f8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1dd5d8 <line:54:19> 'int' 0
[B6.12] << ([B6.13])
  15: IntegerLiteral 0x55ef1b1dd660 <./lgc.h:30:21> 'int' 1
1
  16: IntegerLiteral 0x55ef1b1dd680 <./lgc.h:55:19> 'int' 1
1
  17: BinaryOperator 0x55ef1b1dd6c0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1dd660 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1dd6a0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1dd680 <line:55:19> 'int' 1
[B6.15] << ([B6.16])
  18: BinaryOperator 0x55ef1b1dd708 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1dd640 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1dd618 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1dd5b8 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1dd5f8 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1dd5d8 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1dd6e8 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1dd6c0 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1dd660 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1dd6a0 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1dd680 <line:55:19> 'int' 1
([B6.14]) | ([B6.17])
  19: BinaryOperator 0x55ef1b1dd7c0 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1dd7a8 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1dd790 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1dd598 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1dd560 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b1dd528 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b1dd510 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b1dd4f0 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x55ef1b1dd4d0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x55ef1b1dd498 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b1dd460 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
|                   `-ParenExpr 0x55ef1b1dd440 <col:48, col:50> 'TValue *'
|                     `-ParenExpr 0x55ef1b1dd420 <./ltable.h:15:18, col:30> 'TValue *'
|                       `-UnaryOperator 0x55ef1b1dd400 <col:19, col:25> 'TValue *' prefix '&'
|                         `-MemberExpr 0x55ef1b1dd3c8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
|                           `-ImplicitCastExpr 0x55ef1b1dd3b0 <col:20, col:22> 'Node *' <LValueToRValue>
|                             `-ParenExpr 0x55ef1b1dd390 <col:20, col:22> 'Node *' lvalue
|                               `-DeclRefExpr 0x55ef1b1dd368 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
`-ParenExpr 0x55ef1b1dd770 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1dd750 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b1dd730 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1dd708 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1dd640 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1dd618 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1dd5b8 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1dd5f8 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1dd5d8 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1dd6e8 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1dd6c0 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1dd660 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1dd6a0 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1dd680 <line:55:19> 'int' 1
[B6.11] & ((([B6.18])))
   T: if ([B7.10]) && ([B6.19])
   Preds (1): B7
   Succs (2): B5 B4

 [B7]
   1: IntegerLiteral 0x55ef1b1dd120 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b1dd150 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b1dd120 <col:31> 'int' 0
(void)[B7.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55ef1b1dd198 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
   4: ImplicitCastExpr 0x55ef1b1dd1e0 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dd1c0 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x55ef1b1dd198 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B7.3]) (ImplicitCastExpr, LValueToRValue, Node *)
   5: MemberExpr 0x55ef1b1dd1f8 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
`-ImplicitCastExpr 0x55ef1b1dd1e0 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dd1c0 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x55ef1b1dd198 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B7.4]->i_val
   6: UnaryOperator 0x55ef1b1dd230 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x55ef1b1dd1f8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
  `-ImplicitCastExpr 0x55ef1b1dd1e0 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dd1c0 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x55ef1b1dd198 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
&[B7.5]
   7: MemberExpr 0x55ef1b1dd290 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
`-ParenExpr 0x55ef1b1dd270 <col:19, col:21> 'TValue *'
  `-ParenExpr 0x55ef1b1dd250 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x55ef1b1dd230 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x55ef1b1dd1f8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
        `-ImplicitCastExpr 0x55ef1b1dd1e0 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dd1c0 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x55ef1b1dd198 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B7.6]))->tt
   8: ImplicitCastExpr 0x55ef1b1dd308 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1dd2c8 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x55ef1b1dd290 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
    `-ParenExpr 0x55ef1b1dd270 <col:19, col:21> 'TValue *'
      `-ParenExpr 0x55ef1b1dd250 <./ltable.h:15:18, col:30> 'TValue *'
        `-UnaryOperator 0x55ef1b1dd230 <col:19, col:25> 'TValue *' prefix '&'
          `-MemberExpr 0x55ef1b1dd1f8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
            `-ImplicitCastExpr 0x55ef1b1dd1e0 <col:20, col:22> 'Node *' <LValueToRValue>
              `-ParenExpr 0x55ef1b1dd1c0 <col:20, col:22> 'Node *' lvalue
                `-DeclRefExpr 0x55ef1b1dd198 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B7.7]) (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55ef1b1dd2e8 <./lua.h:78:22> 'int' 4
4
  10: BinaryOperator 0x55ef1b1dd320 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x55ef1b1dd308 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1dd2c8 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x55ef1b1dd290 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
|     `-ParenExpr 0x55ef1b1dd270 <col:19, col:21> 'TValue *'
|       `-ParenExpr 0x55ef1b1dd250 <./ltable.h:15:18, col:30> 'TValue *'
|         `-UnaryOperator 0x55ef1b1dd230 <col:19, col:25> 'TValue *' prefix '&'
|           `-MemberExpr 0x55ef1b1dd1f8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
|             `-ImplicitCastExpr 0x55ef1b1dd1e0 <col:20, col:22> 'Node *' <LValueToRValue>
|               `-ParenExpr 0x55ef1b1dd1c0 <col:20, col:22> 'Node *' lvalue
|                 `-DeclRefExpr 0x55ef1b1dd198 <lgc.c:192:41> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
`-IntegerLiteral 0x55ef1b1dd2e8 <./lua.h:78:22> 'int' 4
[B7.8] >= [B7.9]
   T: ([B7.10]) && ...
   Preds (1): B8
   Succs (2): B6 B4

 [B8]
   1: DeclRefExpr 0x55ef1b1dd0c0 <lgc.c:192:12> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
weakvalue
   2: ImplicitCastExpr 0x55ef1b1dd0e8 <lgc.c:192:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dd0c0 <col:12> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x55ef1b1dd100 <lgc.c:192:11, col:12> 'int' prefix '!'
`-ImplicitCastExpr 0x55ef1b1dd0e8 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dd0c0 <col:12> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
![B8.2]
   T: if [B8.3]
   Preds (4): B9 B10 B11 B12
   Succs (2): B7 B4

 [B9]
   1: DeclRefExpr 0x55ef1b1dcd90 <lgc.c:53:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
   2: ImplicitCastExpr 0x55ef1b1dcfa0 <lgc.c:53:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1dcd90 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
   3: DeclRefExpr 0x55ef1b1dcdb8 <lgc.c:191:31> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b1dcff0 <lgc.c:191:31> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dcdb8 <col:31> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
   6: ImplicitCastExpr 0x55ef1b1dce28 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B9.5]) (ImplicitCastExpr, LValueToRValue, Node *)
   7: MemberExpr 0x55ef1b1dce40 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
`-ImplicitCastExpr 0x55ef1b1dce28 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B9.6]->i_key
   8: MemberExpr 0x55ef1b1dce78 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
`-MemberExpr 0x55ef1b1dce40 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
  `-ImplicitCastExpr 0x55ef1b1dce28 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B9.7].nk
   9: UnaryOperator 0x55ef1b1dceb0 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x55ef1b1dce78 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
  `-MemberExpr 0x55ef1b1dce40 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
    `-ImplicitCastExpr 0x55ef1b1dce28 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
&[B9.8]
  10: MemberExpr 0x55ef1b1dcf10 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
`-ParenExpr 0x55ef1b1dcef0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-ParenExpr 0x55ef1b1dced0 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-UnaryOperator 0x55ef1b1dceb0 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
      `-MemberExpr 0x55ef1b1dce78 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
        `-MemberExpr 0x55ef1b1dce40 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
          `-ImplicitCastExpr 0x55ef1b1dce28 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B9.9]))->value
  11: MemberExpr 0x55ef1b1dcf48 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1dcf10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
  `-ParenExpr 0x55ef1b1dcef0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-ParenExpr 0x55ef1b1dced0 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
      `-UnaryOperator 0x55ef1b1dceb0 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
        `-MemberExpr 0x55ef1b1dce78 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
          `-MemberExpr 0x55ef1b1dce40 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
            `-ImplicitCastExpr 0x55ef1b1dce28 <col:20, col:22> 'Node *' <LValueToRValue>
              `-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
                `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B9.10].gc
  12: ImplicitCastExpr 0x55ef1b1dd008 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dcf80 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x55ef1b1dcf48 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1dcf10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
      `-ParenExpr 0x55ef1b1dcef0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
        `-ParenExpr 0x55ef1b1dced0 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
          `-UnaryOperator 0x55ef1b1dceb0 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
            `-MemberExpr 0x55ef1b1dce78 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
              `-MemberExpr 0x55ef1b1dce40 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
                `-ImplicitCastExpr 0x55ef1b1dce28 <col:20, col:22> 'Node *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
                    `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B9.11]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  13: CallExpr 0x55ef1b1dcfb8 <lgc.c:53:48, col:77> 'void'
|-ImplicitCastExpr 0x55ef1b1dcfa0 <col:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1dcd90 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b1dcff0 <line:191:31> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1dcdb8 <col:31> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
`-ImplicitCastExpr 0x55ef1b1dd008 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dcf80 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1dcf48 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1dcf10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
        `-ParenExpr 0x55ef1b1dcef0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
          `-ParenExpr 0x55ef1b1dced0 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
            `-UnaryOperator 0x55ef1b1dceb0 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
              `-MemberExpr 0x55ef1b1dce78 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
                `-MemberExpr 0x55ef1b1dce40 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
                  `-ImplicitCastExpr 0x55ef1b1dce28 <col:20, col:22> 'Node *' <LValueToRValue>
                    `-ParenExpr 0x55ef1b1dce08 <col:20, col:22> 'Node *' lvalue
                      `-DeclRefExpr 0x55ef1b1dcde0 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B9.2]([B9.4], [B9.12])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
   2: ImplicitCastExpr 0x55ef1b1dc8d8 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B10.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x55ef1b1dc8f0 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
`-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B10.2]->i_key
   4: MemberExpr 0x55ef1b1dc928 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
`-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
  `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B10.3].nk
   5: UnaryOperator 0x55ef1b1dc960 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
  `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
    `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
&[B10.4]
   6: MemberExpr 0x55ef1b1dc9c0 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
`-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
      `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
        `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
          `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B10.5]))->value
   7: MemberExpr 0x55ef1b1dc9f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1dc9c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
  `-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
      `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
        `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
          `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
            `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
              `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
                `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B10.6].gc
   8: ImplicitCastExpr 0x55ef1b1dca70 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dca50 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x55ef1b1dca30 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1dc9f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1dc9c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
        `-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
          `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
            `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
              `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
                `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
                  `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
                    `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
                      `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B10.7])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   9: MemberExpr 0x55ef1b1dca88 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1dca70 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dca50 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x55ef1b1dca30 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x55ef1b1dc9f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
        `-MemberExpr 0x55ef1b1dc9c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
          `-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
            `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
              `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
                `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
                  `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
                    `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
                      `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
                        `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B10.8]->gch
  10: MemberExpr 0x55ef1b1dcac0 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1dca88 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1dca70 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dca50 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x55ef1b1dca30 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x55ef1b1dc9f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b1dc9c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
            `-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
              `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
                `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
                  `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
                    `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
                      `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
                        `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
                          `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B10.9].marked
  11: ImplicitCastExpr 0x55ef1b1dccf0 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1dcaf8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1dcac0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1dca88 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b1dca70 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1dca50 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x55ef1b1dca30 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x55ef1b1dc9f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b1dc9c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
                `-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
                  `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
                    `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
                      `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
                        `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
                          `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
                            `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
                              `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B10.10]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  12: ImplicitCastExpr 0x55ef1b1dcd08 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1dccf0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dcaf8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1dcac0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b1dca88 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b1dca70 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dca50 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x55ef1b1dca30 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x55ef1b1dc9f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
                `-MemberExpr 0x55ef1b1dc9c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
                  `-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
                    `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
                      `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
                        `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
                          `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
                            `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
                              `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
                                `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B10.11] (ImplicitCastExpr, IntegralCast, int)
  13: IntegerLiteral 0x55ef1b1dcb18 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x55ef1b1dcb38 <./lgc.h:54:19> 'int' 0
0
  15: BinaryOperator 0x55ef1b1dcb78 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1dcb18 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1dcb58 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1dcb38 <line:54:19> 'int' 0
[B10.13] << ([B10.14])
  16: IntegerLiteral 0x55ef1b1dcbc0 <./lgc.h:30:21> 'int' 1
1
  17: IntegerLiteral 0x55ef1b1dcbe0 <./lgc.h:55:19> 'int' 1
1
  18: BinaryOperator 0x55ef1b1dcc20 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1dcbc0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1dcc00 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1dcbe0 <line:55:19> 'int' 1
[B10.16] << ([B10.17])
  19: BinaryOperator 0x55ef1b1dcc68 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1dcba0 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1dcb78 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1dcb18 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1dcb58 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1dcb38 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1dcc48 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1dcc20 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1dcbc0 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1dcc00 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1dcbe0 <line:55:19> 'int' 1
([B10.15]) | ([B10.18])
  20: BinaryOperator 0x55ef1b1dcd20 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1dcd08 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1dccf0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1dcaf8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1dcac0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b1dca88 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b1dca70 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b1dca50 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x55ef1b1dca30 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x55ef1b1dc9f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b1dc9c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b18faa0
|                   `-ParenExpr 0x55ef1b1dc9a0 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
|                     `-ParenExpr 0x55ef1b1dc980 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
|                       `-UnaryOperator 0x55ef1b1dc960 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
|                         `-MemberExpr 0x55ef1b1dc928 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
|                           `-MemberExpr 0x55ef1b1dc8f0 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
|                             `-ImplicitCastExpr 0x55ef1b1dc8d8 <col:20, col:22> 'Node *' <LValueToRValue>
|                               `-ParenExpr 0x55ef1b1dc8b8 <col:20, col:22> 'Node *' lvalue
|                                 `-DeclRefExpr 0x55ef1b1dc890 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
`-ParenExpr 0x55ef1b1dccd0 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1dccb0 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b1dcc90 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1dcc68 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1dcba0 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1dcb78 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1dcb18 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1dcb58 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1dcb38 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1dcc48 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1dcc20 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1dcbc0 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1dcc00 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1dcbe0 <line:55:19> 'int' 1
[B10.12] & ((([B10.19])))
   T: if ([B11.11]) && ([B10.20])
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: IntegerLiteral 0x55ef1b1dc610 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b1dc640 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b1dc610 <col:31> 'int' 0
(void)[B11.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
   4: ImplicitCastExpr 0x55ef1b1dc6d0 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dc6b0 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B11.3]) (ImplicitCastExpr, LValueToRValue, Node *)
   5: MemberExpr 0x55ef1b1dc6e8 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
`-ImplicitCastExpr 0x55ef1b1dc6d0 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dc6b0 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B11.4]->i_key
   6: MemberExpr 0x55ef1b1dc720 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
`-MemberExpr 0x55ef1b1dc6e8 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
  `-ImplicitCastExpr 0x55ef1b1dc6d0 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dc6b0 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B11.5].nk
   7: UnaryOperator 0x55ef1b1dc758 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x55ef1b1dc720 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
  `-MemberExpr 0x55ef1b1dc6e8 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
    `-ImplicitCastExpr 0x55ef1b1dc6d0 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1dc6b0 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
&[B11.6]
   8: MemberExpr 0x55ef1b1dc7b8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x55ef1b18fb00
`-ParenExpr 0x55ef1b1dc798 <col:19, col:21> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-ParenExpr 0x55ef1b1dc778 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-UnaryOperator 0x55ef1b1dc758 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
      `-MemberExpr 0x55ef1b1dc720 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
        `-MemberExpr 0x55ef1b1dc6e8 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
          `-ImplicitCastExpr 0x55ef1b1dc6d0 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1dc6b0 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B11.7]))->tt
   9: ImplicitCastExpr 0x55ef1b1dc830 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1dc7f0 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x55ef1b1dc7b8 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b18fb00
    `-ParenExpr 0x55ef1b1dc798 <col:19, col:21> 'struct (anonymous struct at ./lobject.h:324:3) *'
      `-ParenExpr 0x55ef1b1dc778 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
        `-UnaryOperator 0x55ef1b1dc758 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
          `-MemberExpr 0x55ef1b1dc720 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
            `-MemberExpr 0x55ef1b1dc6e8 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
              `-ImplicitCastExpr 0x55ef1b1dc6d0 <col:20, col:22> 'Node *' <LValueToRValue>
                `-ParenExpr 0x55ef1b1dc6b0 <col:20, col:22> 'Node *' lvalue
                  `-DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B11.8]) (ImplicitCastExpr, LValueToRValue, int)
  10: IntegerLiteral 0x55ef1b1dc810 <./lua.h:78:22> 'int' 4
4
  11: BinaryOperator 0x55ef1b1dc848 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x55ef1b1dc830 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1dc7f0 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x55ef1b1dc7b8 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b18fb00
|     `-ParenExpr 0x55ef1b1dc798 <col:19, col:21> 'struct (anonymous struct at ./lobject.h:324:3) *'
|       `-ParenExpr 0x55ef1b1dc778 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
|         `-UnaryOperator 0x55ef1b1dc758 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
|           `-MemberExpr 0x55ef1b1dc720 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x55ef1b191260
|             `-MemberExpr 0x55ef1b1dc6e8 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x55ef1b191530
|               `-ImplicitCastExpr 0x55ef1b1dc6d0 <col:20, col:22> 'Node *' <LValueToRValue>
|                 `-ParenExpr 0x55ef1b1dc6b0 <col:20, col:22> 'Node *' lvalue
|                   `-DeclRefExpr 0x55ef1b1dc688 <lgc.c:191:39> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
`-IntegerLiteral 0x55ef1b1dc810 <./lua.h:78:22> 'int' 4
[B11.9] >= [B11.10]
   T: ([B11.11]) && ...
   Preds (1): B12
   Succs (2): B10 B8

 [B12]
   1: IntegerLiteral 0x55ef1b1dc538 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b1dc568 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b1dc538 <col:31> 'int' 0
(void)[B12.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55ef1b1dc5b0 <lgc.c:191:12> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
weakkey
   4: ImplicitCastExpr 0x55ef1b1dc5d8 <lgc.c:191:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dc5b0 <col:12> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
[B12.3] (ImplicitCastExpr, LValueToRValue, int)
   5: UnaryOperator 0x55ef1b1dc5f0 <lgc.c:191:11, col:12> 'int' prefix '!'
`-ImplicitCastExpr 0x55ef1b1dc5d8 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dc5b0 <col:12> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
![B12.4]
   T: if [B12.5]
   Preds (1): B14
   Succs (2): B11 B8

 [B13]
   1: DeclRefExpr 0x55ef1b1dc428 <lgc.c:188:7> 'void (Node *)' Function 0x55ef1b1c48b0 'removeentry' 'void (Node *)'
removeentry
   2: ImplicitCastExpr 0x55ef1b1dc4d8 <lgc.c:188:7> 'void (*)(Node *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1dc428 <col:7> 'void (Node *)' Function 0x55ef1b1c48b0 'removeentry' 'void (Node *)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(Node *))
   3: DeclRefExpr 0x55ef1b1dc450 <lgc.c:188:19> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
   4: ImplicitCastExpr 0x55ef1b1dc520 <lgc.c:188:19> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dc450 <col:19> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B13.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: CallExpr 0x55ef1b1dc4f0 <lgc.c:188:7, col:20> 'void'
|-ImplicitCastExpr 0x55ef1b1dc4d8 <col:7> 'void (*)(Node *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1dc428 <col:7> 'void (Node *)' Function 0x55ef1b1c48b0 'removeentry' 'void (Node *)'
`-ImplicitCastExpr 0x55ef1b1dc520 <col:19> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dc450 <col:19> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B13.2]([B13.4])
   Preds (1): B14
   Succs (1): B4

 [B14]
   1: DeclRefExpr 0x55ef1b1dc070 <lgc.c:185:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   2: ImplicitCastExpr 0x55ef1b1dc0b8 <./ltable.h:13:22, col:24> 'Table *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dc098 <col:22, col:24> 'Table *' lvalue
  `-DeclRefExpr 0x55ef1b1dc070 <lgc.c:185:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
([B14.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x55ef1b1dc0d0 <./ltable.h:13:22, col:27> 'Node *' lvalue ->node 0x55ef1b191968
`-ImplicitCastExpr 0x55ef1b1dc0b8 <col:22, col:24> 'Table *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dc098 <col:22, col:24> 'Table *' lvalue
    `-DeclRefExpr 0x55ef1b1dc070 <lgc.c:185:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B14.2]->node
   4: ImplicitCastExpr 0x55ef1b1dc130 <./ltable.h:13:22, col:27> 'Node *' <LValueToRValue>
`-MemberExpr 0x55ef1b1dc0d0 <col:22, col:27> 'Node *' lvalue ->node 0x55ef1b191968
  `-ImplicitCastExpr 0x55ef1b1dc0b8 <col:22, col:24> 'Table *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dc098 <col:22, col:24> 'Table *' lvalue
      `-DeclRefExpr 0x55ef1b1dc070 <lgc.c:185:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B14.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: DeclRefExpr 0x55ef1b1dc108 <lgc.c:185:24> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1dc148 <lgc.c:185:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dc108 <col:24> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B14.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1dc160 <./ltable.h:13:22, col:33> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x55ef1b1dc130 <col:22, col:27> 'Node *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1dc0d0 <col:22, col:27> 'Node *' lvalue ->node 0x55ef1b191968
|   `-ImplicitCastExpr 0x55ef1b1dc0b8 <col:22, col:24> 'Table *' <LValueToRValue>
|     `-ParenExpr 0x55ef1b1dc098 <col:22, col:24> 'Table *' lvalue
|       `-DeclRefExpr 0x55ef1b1dc070 <lgc.c:185:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ImplicitCastExpr 0x55ef1b1dc148 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dc108 <col:24> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B14.4][[B14.6]]
   8: UnaryOperator 0x55ef1b1dc188 <./ltable.h:13:21, col:33> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x55ef1b1dc160 <col:22, col:33> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x55ef1b1dc130 <col:22, col:27> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1dc0d0 <col:22, col:27> 'Node *' lvalue ->node 0x55ef1b191968
  |   `-ImplicitCastExpr 0x55ef1b1dc0b8 <col:22, col:24> 'Table *' <LValueToRValue>
  |     `-ParenExpr 0x55ef1b1dc098 <col:22, col:24> 'Table *' lvalue
  |       `-DeclRefExpr 0x55ef1b1dc070 <lgc.c:185:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
  `-ImplicitCastExpr 0x55ef1b1dc148 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1dc108 <col:24> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
&[B14.7]
   9: DeclStmt 0x55ef1b1dc1c8 <lgc.c:185:5, col:26>col:11
`-VarDecl 0x55ef1b1dc010 <col:5, ./ltable.h:13:34> lgc.c:185:11 used n 'Node *' cinit
  `-ParenExpr 0x55ef1b1dc1a8 <./ltable.h:13:20, col:34> 'Node *'
    `-UnaryOperator 0x55ef1b1dc188 <col:21, col:33> 'Node *' prefix '&'
      `-ArraySubscriptExpr 0x55ef1b1dc160 <col:22, col:33> 'Node':'struct Node' lvalue
        |-ImplicitCastExpr 0x55ef1b1dc130 <col:22, col:27> 'Node *' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1dc0d0 <col:22, col:27> 'Node *' lvalue ->node 0x55ef1b191968
        |   `-ImplicitCastExpr 0x55ef1b1dc0b8 <col:22, col:24> 'Table *' <LValueToRValue>
        |     `-ParenExpr 0x55ef1b1dc098 <col:22, col:24> 'Table *' lvalue
        |       `-DeclRefExpr 0x55ef1b1dc070 <lgc.c:185:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
        `-ImplicitCastExpr 0x55ef1b1dc148 <col:24> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1dc108 <col:24> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
Node *n = (&(h)->node[i]);
  10: IntegerLiteral 0x55ef1b1dc1e0 <./llimits.h:62:31> 'int' 0
0
  11: CStyleCastExpr 0x55ef1b1dc210 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b1dc1e0 <col:31> 'int' 0
(void)[B14.10] (CStyleCastExpr, ToVoid, void)
  12: DeclRefExpr 0x55ef1b1dc258 <lgc.c:187:22> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
n
  13: ImplicitCastExpr 0x55ef1b1dc2a0 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dc280 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x55ef1b1dc258 <lgc.c:187:22> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B14.12]) (ImplicitCastExpr, LValueToRValue, Node *)
  14: MemberExpr 0x55ef1b1dc2b8 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
`-ImplicitCastExpr 0x55ef1b1dc2a0 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dc280 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x55ef1b1dc258 <lgc.c:187:22> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
[B14.13]->i_val
  15: UnaryOperator 0x55ef1b1dc2f0 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x55ef1b1dc2b8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
  `-ImplicitCastExpr 0x55ef1b1dc2a0 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dc280 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x55ef1b1dc258 <lgc.c:187:22> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
&[B14.14]
  16: MemberExpr 0x55ef1b1dc350 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
`-ParenExpr 0x55ef1b1dc330 <col:19, col:21> 'TValue *'
  `-ParenExpr 0x55ef1b1dc310 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x55ef1b1dc2f0 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x55ef1b1dc2b8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
        `-ImplicitCastExpr 0x55ef1b1dc2a0 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dc280 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x55ef1b1dc258 <lgc.c:187:22> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
(([B14.15]))->tt
  17: ImplicitCastExpr 0x55ef1b1dc3c8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1dc388 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x55ef1b1dc350 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
    `-ParenExpr 0x55ef1b1dc330 <col:19, col:21> 'TValue *'
      `-ParenExpr 0x55ef1b1dc310 <./ltable.h:15:18, col:30> 'TValue *'
        `-UnaryOperator 0x55ef1b1dc2f0 <col:19, col:25> 'TValue *' prefix '&'
          `-MemberExpr 0x55ef1b1dc2b8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
            `-ImplicitCastExpr 0x55ef1b1dc2a0 <col:20, col:22> 'Node *' <LValueToRValue>
              `-ParenExpr 0x55ef1b1dc280 <col:20, col:22> 'Node *' lvalue
                `-DeclRefExpr 0x55ef1b1dc258 <lgc.c:187:22> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
([B14.16]) (ImplicitCastExpr, LValueToRValue, int)
  18: IntegerLiteral 0x55ef1b1dc3a8 <./lua.h:74:19> 'int' 0
0
  19: BinaryOperator 0x55ef1b1dc3e0 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x55ef1b1dc3c8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1dc388 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x55ef1b1dc350 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
|     `-ParenExpr 0x55ef1b1dc330 <col:19, col:21> 'TValue *'
|       `-ParenExpr 0x55ef1b1dc310 <./ltable.h:15:18, col:30> 'TValue *'
|         `-UnaryOperator 0x55ef1b1dc2f0 <col:19, col:25> 'TValue *' prefix '&'
|           `-MemberExpr 0x55ef1b1dc2b8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x55ef1b1914b8
|             `-ImplicitCastExpr 0x55ef1b1dc2a0 <col:20, col:22> 'Node *' <LValueToRValue>
|               `-ParenExpr 0x55ef1b1dc280 <col:20, col:22> 'Node *' lvalue
|                 `-DeclRefExpr 0x55ef1b1dc258 <lgc.c:187:22> 'Node *' lvalue Var 0x55ef1b1dc010 'n' 'Node *'
`-IntegerLiteral 0x55ef1b1dc3a8 <./lua.h:74:19> 'int' 0
[B14.17] == [B14.18]
   T: if ([B14.19])
   Preds (1): B15
   Succs (2): B13 B12

 [B15]
   1: DeclRefExpr 0x55ef1b1dbfb8 <lgc.c:184:10> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
   2: UnaryOperator 0x55ef1b1dbfe0 <lgc.c:184:10, col:11> 'int' postfix '--'
`-DeclRefExpr 0x55ef1b1dbfb8 <col:10> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B15.1]--
   T: while [B15.2]
   Preds (2): B4 B16
   Succs (2): B14 B3

 [B16]
   1: IntegerLiteral 0x55ef1b1dbe20 <./lobject.h:359:19> 'int' 1
1
   2: DeclRefExpr 0x55ef1b1dbe40 <lgc.c:183:16> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   3: ImplicitCastExpr 0x55ef1b1dbe88 <./lobject.h:360:28, col:30> 'Table *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dbe68 <col:28, col:30> 'Table *' lvalue
  `-DeclRefExpr 0x55ef1b1dbe40 <lgc.c:183:16> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
([B16.2]) (ImplicitCastExpr, LValueToRValue, Table *)
   4: MemberExpr 0x55ef1b1dbea0 <./lobject.h:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x55ef1b191800
`-ImplicitCastExpr 0x55ef1b1dbe88 <col:28, col:30> 'Table *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dbe68 <col:28, col:30> 'Table *' lvalue
    `-DeclRefExpr 0x55ef1b1dbe40 <lgc.c:183:16> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B16.3]->lsizenode
   5: ImplicitCastExpr 0x55ef1b1dbef8 <./lobject.h:359:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1dbed8 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1dbea0 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x55ef1b191800
    `-ImplicitCastExpr 0x55ef1b1dbe88 <col:28, col:30> 'Table *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1dbe68 <col:28, col:30> 'Table *' lvalue
        `-DeclRefExpr 0x55ef1b1dbe40 <lgc.c:183:16> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
([B16.4]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   6: ImplicitCastExpr 0x55ef1b1dbf10 <./lobject.h:359:22, col:24> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1dbef8 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dbed8 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1dbea0 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x55ef1b191800
      `-ImplicitCastExpr 0x55ef1b1dbe88 <col:28, col:30> 'Table *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1dbe68 <col:28, col:30> 'Table *' lvalue
          `-DeclRefExpr 0x55ef1b1dbe40 <lgc.c:183:16> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B16.5] (ImplicitCastExpr, IntegralCast, int)
   7: BinaryOperator 0x55ef1b1dbf28 <./lobject.h:359:19, col:24> 'int' '<<'
|-IntegerLiteral 0x55ef1b1dbe20 <col:19> 'int' 1
`-ImplicitCastExpr 0x55ef1b1dbf10 <col:22, col:24> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55ef1b1dbef8 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
    `-ParenExpr 0x55ef1b1dbed8 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
      `-MemberExpr 0x55ef1b1dbea0 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x55ef1b191800
        `-ImplicitCastExpr 0x55ef1b1dbe88 <col:28, col:30> 'Table *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dbe68 <col:28, col:30> 'Table *' lvalue
            `-DeclRefExpr 0x55ef1b1dbe40 <lgc.c:183:16> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B16.1] << [B16.6]
   8: DeclRefExpr 0x55ef1b1dbdf8 <lgc.c:183:3> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
   9: BinaryOperator 0x55ef1b1dbf90 <lgc.c:183:3, ./lobject.h:360:43> 'int' '='
|-DeclRefExpr 0x55ef1b1dbdf8 <lgc.c:183:3> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
`-ParenExpr 0x55ef1b1dbf70 <./lobject.h:360:21, col:43> 'int'
  `-ParenExpr 0x55ef1b1dbf50 <line:359:18, col:25> 'int'
    `-BinaryOperator 0x55ef1b1dbf28 <col:19, col:24> 'int' '<<'
      |-IntegerLiteral 0x55ef1b1dbe20 <col:19> 'int' 1
      `-ImplicitCastExpr 0x55ef1b1dbf10 <col:22, col:24> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x55ef1b1dbef8 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
          `-ParenExpr 0x55ef1b1dbed8 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
            `-MemberExpr 0x55ef1b1dbea0 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x55ef1b191800
              `-ImplicitCastExpr 0x55ef1b1dbe88 <col:28, col:30> 'Table *' <LValueToRValue>
                `-ParenExpr 0x55ef1b1dbe68 <col:28, col:30> 'Table *' lvalue
                  `-DeclRefExpr 0x55ef1b1dbe40 <lgc.c:183:16> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B16.8] = (([B16.7]))
   Preds (2): B21 B23
   Succs (1): B15

 [B17]
   Preds (3): B18 B19 B20
   Succs (1): B21

 [B18]
   1: DeclRefExpr 0x55ef1b1dba50 <lgc.c:53:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
   2: ImplicitCastExpr 0x55ef1b1dbc90 <lgc.c:53:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1dba50 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B18.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
   3: DeclRefExpr 0x55ef1b1dba78 <lgc.c:181:17> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b1dbce0 <lgc.c:181:17> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dba78 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B18.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclRefExpr 0x55ef1b1dbaa0 <lgc.c:181:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   6: ImplicitCastExpr 0x55ef1b1dbac8 <lgc.c:181:21> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B18.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: MemberExpr 0x55ef1b1dbae0 <lgc.c:181:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
`-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B18.6]->array
   8: ImplicitCastExpr 0x55ef1b1dbb40 <lgc.c:181:21, col:24> 'TValue *' <LValueToRValue>
`-MemberExpr 0x55ef1b1dbae0 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
  `-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B18.7] (ImplicitCastExpr, LValueToRValue, TValue *)
   9: DeclRefExpr 0x55ef1b1dbb18 <lgc.c:181:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
  10: ImplicitCastExpr 0x55ef1b1dbb58 <lgc.c:181:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dbb18 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B18.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x55ef1b1dbb70 <lgc.c:181:21, col:31> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x55ef1b1dbb40 <col:21, col:24> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1dbae0 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
|   `-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ImplicitCastExpr 0x55ef1b1dbb58 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dbb18 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B18.8][[B18.10]]
  12: UnaryOperator 0x55ef1b1dbb98 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x55ef1b1dbb70 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x55ef1b1dbb40 <col:21, col:24> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1dbae0 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
  |   `-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
  `-ImplicitCastExpr 0x55ef1b1dbb58 <col:30> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1dbb18 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
&[B18.11]
  13: MemberExpr 0x55ef1b1dbbd8 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ParenExpr 0x55ef1b1dbbb8 <col:48, col:50> 'TValue *'
  `-UnaryOperator 0x55ef1b1dbb98 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x55ef1b1dbb70 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x55ef1b1dbb40 <col:21, col:24> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1dbae0 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
      |   `-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
      `-ImplicitCastExpr 0x55ef1b1dbb58 <col:30> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1dbb18 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
([B18.12])->value
  14: MemberExpr 0x55ef1b1dbc10 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1dbbd8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ParenExpr 0x55ef1b1dbbb8 <col:48, col:50> 'TValue *'
    `-UnaryOperator 0x55ef1b1dbb98 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
      `-ArraySubscriptExpr 0x55ef1b1dbb70 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
        |-ImplicitCastExpr 0x55ef1b1dbb40 <col:21, col:24> 'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1dbae0 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
        |   `-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
        `-ImplicitCastExpr 0x55ef1b1dbb58 <col:30> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1dbb18 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B18.13].gc
  15: ImplicitCastExpr 0x55ef1b1dbcf8 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dbc70 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x55ef1b1dbc10 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1dbbd8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
      `-ParenExpr 0x55ef1b1dbbb8 <col:48, col:50> 'TValue *'
        `-UnaryOperator 0x55ef1b1dbb98 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
          `-ArraySubscriptExpr 0x55ef1b1dbb70 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
            |-ImplicitCastExpr 0x55ef1b1dbb40 <col:21, col:24> 'TValue *' <LValueToRValue>
            | `-MemberExpr 0x55ef1b1dbae0 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
            |   `-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
            |     `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
            `-ImplicitCastExpr 0x55ef1b1dbb58 <col:30> 'int' <LValueToRValue>
              `-DeclRefExpr 0x55ef1b1dbb18 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
([B18.14]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  16: CallExpr 0x55ef1b1dbca8 <lgc.c:53:48, col:77> 'void'
|-ImplicitCastExpr 0x55ef1b1dbc90 <col:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1dba50 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b1dbce0 <line:181:17> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1dba78 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
`-ImplicitCastExpr 0x55ef1b1dbcf8 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dbc70 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1dbc10 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1dbbd8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ParenExpr 0x55ef1b1dbbb8 <col:48, col:50> 'TValue *'
          `-UnaryOperator 0x55ef1b1dbb98 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
            `-ArraySubscriptExpr 0x55ef1b1dbb70 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
              |-ImplicitCastExpr 0x55ef1b1dbb40 <col:21, col:24> 'TValue *' <LValueToRValue>
              | `-MemberExpr 0x55ef1b1dbae0 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
              |   `-ImplicitCastExpr 0x55ef1b1dbac8 <col:21> 'Table *' <LValueToRValue>
              |     `-DeclRefExpr 0x55ef1b1dbaa0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
              `-ImplicitCastExpr 0x55ef1b1dbb58 <col:30> 'int' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b1dbb18 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B18.2]([B18.4], [B18.15])
   Preds (1): B19
   Succs (1): B17

 [B19]
   1: DeclRefExpr 0x55ef1b1db548 <lgc.c:181:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   2: ImplicitCastExpr 0x55ef1b1db570 <lgc.c:181:21> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B19.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x55ef1b1db588 <lgc.c:181:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
`-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B19.2]->array
   4: ImplicitCastExpr 0x55ef1b1db5e8 <lgc.c:181:21, col:24> 'TValue *' <LValueToRValue>
`-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
  `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B19.3] (ImplicitCastExpr, LValueToRValue, TValue *)
   5: DeclRefExpr 0x55ef1b1db5c0 <lgc.c:181:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1db600 <lgc.c:181:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B19.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1db618 <lgc.c:181:21, col:31> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
|   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B19.4][[B19.6]]
   8: UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
  |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
  `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
&[B19.7]
   9: MemberExpr 0x55ef1b1db680 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
  `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
      |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
      `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
([B19.8])->value
  10: MemberExpr 0x55ef1b1db6b8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1db680 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
    `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
      `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
        |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
        |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
        `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B19.9].gc
  11: ImplicitCastExpr 0x55ef1b1db730 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1db710 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x55ef1b1db6f0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1db6b8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1db680 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
          `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
            `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
              |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
              | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
              |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
              |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
              `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
(([B19.10])) (ImplicitCastExpr, LValueToRValue, GCObject *)
  12: MemberExpr 0x55ef1b1db748 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1db730 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1db710 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x55ef1b1db6f0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x55ef1b1db6b8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
        `-MemberExpr 0x55ef1b1db680 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
          `-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
            `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
              `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
                |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
                | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
                |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
                |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
                `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B19.11]->gch
  13: MemberExpr 0x55ef1b1db780 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1db748 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1db730 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1db710 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x55ef1b1db6f0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x55ef1b1db6b8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b1db680 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
            `-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
              `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
                `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
                  |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
                  | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
                  |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
                  |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
                  `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B19.12].marked
  14: ImplicitCastExpr 0x55ef1b1db9b0 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1db7b8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1db780 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1db748 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b1db730 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1db710 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x55ef1b1db6f0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x55ef1b1db6b8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b1db680 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                `-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
                  `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
                    `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
                      |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
                      | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
                      |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
                      |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
                      `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
                        `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
([B19.13]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  15: ImplicitCastExpr 0x55ef1b1db9c8 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1db9b0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1db7b8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1db780 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b1db748 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b1db730 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1db710 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x55ef1b1db6f0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x55ef1b1db6b8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
                `-MemberExpr 0x55ef1b1db680 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                  `-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
                    `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
                      `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
                        |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
                        | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
                        |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
                        |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
                        `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B19.14] (ImplicitCastExpr, IntegralCast, int)
  16: IntegerLiteral 0x55ef1b1db7d8 <./lgc.h:30:21> 'int' 1
1
  17: IntegerLiteral 0x55ef1b1db7f8 <./lgc.h:54:19> 'int' 0
0
  18: BinaryOperator 0x55ef1b1db838 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1db7d8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1db818 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1db7f8 <line:54:19> 'int' 0
[B19.16] << ([B19.17])
  19: IntegerLiteral 0x55ef1b1db880 <./lgc.h:30:21> 'int' 1
1
  20: IntegerLiteral 0x55ef1b1db8a0 <./lgc.h:55:19> 'int' 1
1
  21: BinaryOperator 0x55ef1b1db8e0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1db880 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1db8c0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1db8a0 <line:55:19> 'int' 1
[B19.19] << ([B19.20])
  22: BinaryOperator 0x55ef1b1db928 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1db860 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1db838 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1db7d8 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1db818 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1db7f8 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1db908 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1db8e0 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1db880 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1db8c0 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1db8a0 <line:55:19> 'int' 1
([B19.18]) | ([B19.21])
  23: BinaryOperator 0x55ef1b1db9e0 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1db9c8 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1db9b0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1db7b8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1db780 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b1db748 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b1db730 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b1db710 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x55ef1b1db6f0 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x55ef1b1db6b8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b1db680 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
|                   `-ParenExpr 0x55ef1b1db660 <col:48, col:50> 'TValue *'
|                     `-UnaryOperator 0x55ef1b1db640 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
|                       `-ArraySubscriptExpr 0x55ef1b1db618 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
|                         |-ImplicitCastExpr 0x55ef1b1db5e8 <col:21, col:24> 'TValue *' <LValueToRValue>
|                         | `-MemberExpr 0x55ef1b1db588 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
|                         |   `-ImplicitCastExpr 0x55ef1b1db570 <col:21> 'Table *' <LValueToRValue>
|                         |     `-DeclRefExpr 0x55ef1b1db548 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
|                         `-ImplicitCastExpr 0x55ef1b1db600 <col:30> 'int' <LValueToRValue>
|                           `-DeclRefExpr 0x55ef1b1db5c0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
`-ParenExpr 0x55ef1b1db990 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1db970 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b1db950 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1db928 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1db860 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1db838 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1db7d8 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1db818 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1db7f8 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1db908 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1db8e0 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1db880 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1db8c0 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1db8a0 <line:55:19> 'int' 1
[B19.15] & ((([B19.22])))
   T: if ([B20.14]) && ([B19.23])
   Preds (1): B20
   Succs (2): B18 B17

 [B20]
   1: IntegerLiteral 0x55ef1b1db2c0 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b1db2f0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b1db2c0 <col:31> 'int' 0
(void)[B20.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55ef1b1db338 <lgc.c:181:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   4: ImplicitCastExpr 0x55ef1b1db360 <lgc.c:181:21> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B20.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: MemberExpr 0x55ef1b1db378 <lgc.c:181:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
`-ImplicitCastExpr 0x55ef1b1db360 <col:21> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B20.4]->array
   6: ImplicitCastExpr 0x55ef1b1db3d8 <lgc.c:181:21, col:24> 'TValue *' <LValueToRValue>
`-MemberExpr 0x55ef1b1db378 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
  `-ImplicitCastExpr 0x55ef1b1db360 <col:21> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B20.5] (ImplicitCastExpr, LValueToRValue, TValue *)
   7: DeclRefExpr 0x55ef1b1db3b0 <lgc.c:181:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
   8: ImplicitCastExpr 0x55ef1b1db3f0 <lgc.c:181:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db3b0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B20.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55ef1b1db408 <lgc.c:181:21, col:31> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x55ef1b1db3d8 <col:21, col:24> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1db378 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
|   `-ImplicitCastExpr 0x55ef1b1db360 <col:21> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ImplicitCastExpr 0x55ef1b1db3f0 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1db3b0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B20.6][[B20.8]]
  10: UnaryOperator 0x55ef1b1db430 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x55ef1b1db408 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x55ef1b1db3d8 <col:21, col:24> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1db378 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
  |   `-ImplicitCastExpr 0x55ef1b1db360 <col:21> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
  `-ImplicitCastExpr 0x55ef1b1db3f0 <col:30> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1db3b0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
&[B20.9]
  11: MemberExpr 0x55ef1b1db470 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
`-ParenExpr 0x55ef1b1db450 <col:19, col:21> 'TValue *'
  `-UnaryOperator 0x55ef1b1db430 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x55ef1b1db408 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x55ef1b1db3d8 <col:21, col:24> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1db378 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
      |   `-ImplicitCastExpr 0x55ef1b1db360 <col:21> 'Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
      `-ImplicitCastExpr 0x55ef1b1db3f0 <col:30> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1db3b0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
([B20.10])->tt
  12: ImplicitCastExpr 0x55ef1b1db4e8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1db4a8 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x55ef1b1db470 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
    `-ParenExpr 0x55ef1b1db450 <col:19, col:21> 'TValue *'
      `-UnaryOperator 0x55ef1b1db430 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
        `-ArraySubscriptExpr 0x55ef1b1db408 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
          |-ImplicitCastExpr 0x55ef1b1db3d8 <col:21, col:24> 'TValue *' <LValueToRValue>
          | `-MemberExpr 0x55ef1b1db378 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
          |   `-ImplicitCastExpr 0x55ef1b1db360 <col:21> 'Table *' <LValueToRValue>
          |     `-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
          `-ImplicitCastExpr 0x55ef1b1db3f0 <col:30> 'int' <LValueToRValue>
            `-DeclRefExpr 0x55ef1b1db3b0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
([B20.11]) (ImplicitCastExpr, LValueToRValue, int)
  13: IntegerLiteral 0x55ef1b1db4c8 <./lua.h:78:22> 'int' 4
4
  14: BinaryOperator 0x55ef1b1db500 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x55ef1b1db4e8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1db4a8 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x55ef1b1db470 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
|     `-ParenExpr 0x55ef1b1db450 <col:19, col:21> 'TValue *'
|       `-UnaryOperator 0x55ef1b1db430 <lgc.c:181:20, col:31> 'TValue *' prefix '&'
|         `-ArraySubscriptExpr 0x55ef1b1db408 <col:21, col:31> 'TValue':'struct lua_TValue' lvalue
|           |-ImplicitCastExpr 0x55ef1b1db3d8 <col:21, col:24> 'TValue *' <LValueToRValue>
|           | `-MemberExpr 0x55ef1b1db378 <col:21, col:24> 'TValue *' lvalue ->array 0x55ef1b1918c8
|           |   `-ImplicitCastExpr 0x55ef1b1db360 <col:21> 'Table *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55ef1b1db338 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
|           `-ImplicitCastExpr 0x55ef1b1db3f0 <col:30> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55ef1b1db3b0 <col:30> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
`-IntegerLiteral 0x55ef1b1db4c8 <./lua.h:78:22> 'int' 4
[B20.12] >= [B20.13]
   T: ([B20.14]) && ...
   Preds (1): B21
   Succs (2): B19 B17

 [B21]
   1: DeclRefExpr 0x55ef1b1db278 <lgc.c:180:12> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
   2: UnaryOperator 0x55ef1b1db2a0 <lgc.c:180:12, col:13> 'int' postfix '--'
`-DeclRefExpr 0x55ef1b1db278 <col:12> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
[B21.1]--
   T: while [B21.2]
   Preds (2): B17 B22
   Succs (2): B20 B16

 [B22]
   1: DeclRefExpr 0x55ef1b1db1c0 <lgc.c:179:9> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   2: ImplicitCastExpr 0x55ef1b1db1e8 <lgc.c:179:9> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db1c0 <col:9> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B22.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x55ef1b1db200 <lgc.c:179:9, col:12> 'int' lvalue ->sizearray 0x55ef1b191a78
`-ImplicitCastExpr 0x55ef1b1db1e8 <col:9> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1db1c0 <col:9> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B22.2]->sizearray
   4: ImplicitCastExpr 0x55ef1b1db238 <lgc.c:179:9, col:12> 'int' <LValueToRValue>
`-MemberExpr 0x55ef1b1db200 <col:9, col:12> 'int' lvalue ->sizearray 0x55ef1b191a78
  `-ImplicitCastExpr 0x55ef1b1db1e8 <col:9> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1db1c0 <col:9> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B22.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x55ef1b1db198 <lgc.c:179:5> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
i
   6: BinaryOperator 0x55ef1b1db250 <lgc.c:179:5, col:12> 'int' '='
|-DeclRefExpr 0x55ef1b1db198 <col:5> 'int' lvalue Var 0x55ef1b1d89a0 'i' 'int'
`-ImplicitCastExpr 0x55ef1b1db238 <col:9, col:12> 'int' <LValueToRValue>
  `-MemberExpr 0x55ef1b1db200 <col:9, col:12> 'int' lvalue ->sizearray 0x55ef1b191a78
    `-ImplicitCastExpr 0x55ef1b1db1e8 <col:9> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1db1c0 <col:9> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B22.5] = [B22.4]
   Preds (1): B23
   Succs (1): B21

 [B23]
   1: DeclRefExpr 0x55ef1b1db138 <lgc.c:178:8> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
weakvalue
   2: ImplicitCastExpr 0x55ef1b1db160 <lgc.c:178:8> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db138 <col:8> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
[B23.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x55ef1b1db178 <lgc.c:178:7, col:8> 'int' prefix '!'
`-ImplicitCastExpr 0x55ef1b1db160 <col:8> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1db138 <col:8> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
![B23.2]
   T: if [B23.3]
   Preds (2): B25 B26
   Succs (2): B22 B16

 [B24]
   1: IntegerLiteral 0x55ef1b1db0c8 <lgc.c:177:36> 'int' 1
1
   2: ReturnStmt 0x55ef1b1db0e8 <lgc.c:177:29, col:36>
`-IntegerLiteral 0x55ef1b1db0c8 <col:36> 'int' 1
return [B24.1];
   Preds (1): B25
   Succs (1): B0

 [B25]
   1: DeclRefExpr 0x55ef1b1db048 <lgc.c:177:18> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
weakvalue
   2: ImplicitCastExpr 0x55ef1b1db088 <lgc.c:177:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db048 <col:18> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
[B25.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B26.2] && [B25.2]
   Preds (1): B26
   Succs (2): B24 B23

 [B26]
   1: DeclRefExpr 0x55ef1b1db020 <lgc.c:177:7> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
weakkey
   2: ImplicitCastExpr 0x55ef1b1db070 <lgc.c:177:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1db020 <col:7> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
[B26.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B26.2] && ...
   Preds (4): B27 B28 B30 B31
   Succs (2): B25 B23

 [B27]
   1: DeclRefExpr 0x55ef1b1da6f0 <lgc.c:170:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   2: ImplicitCastExpr 0x55ef1b1da718 <lgc.c:170:7> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1da6f0 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B27.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x55ef1b1da730 <lgc.c:170:7, col:10> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b191750
`-ImplicitCastExpr 0x55ef1b1da718 <col:7> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1da6f0 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B27.2]->marked
   4: IntegerLiteral 0x55ef1b1da768 <./lgc.h:30:21> 'int' 1
1
   5: IntegerLiteral 0x55ef1b1da788 <./lgc.h:58:20> 'int' 3
3
   6: BinaryOperator 0x55ef1b1da7c8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1da768 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1da7a8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1da788 <line:58:20> 'int' 3
[B27.4] << ([B27.5])
   7: IntegerLiteral 0x55ef1b1da810 <./lgc.h:30:21> 'int' 1
1
   8: IntegerLiteral 0x55ef1b1da830 <./lgc.h:59:22> 'int' 4
4
   9: BinaryOperator 0x55ef1b1da870 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1da810 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1da850 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1da830 <line:59:22> 'int' 4
[B27.7] << ([B27.8])
  10: BinaryOperator 0x55ef1b1da8b8 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1da7f0 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1da7c8 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1da768 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1da7a8 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1da788 <line:58:20> 'int' 3
`-ParenExpr 0x55ef1b1da898 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1da870 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1da810 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1da850 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1da830 <line:59:22> 'int' 4
([B27.6]) | ([B27.9])
  11: UnaryOperator 0x55ef1b1da900 <lgc.c:170:20, col:41> 'int' prefix '~'
`-ParenExpr 0x55ef1b1da8e0 <col:21, col:41> 'int'
  `-BinaryOperator 0x55ef1b1da8b8 <./lgc.h:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55ef1b1da7f0 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55ef1b1da7c8 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55ef1b1da768 <col:21> 'int' 1
    |   `-ParenExpr 0x55ef1b1da7a8 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55ef1b1da788 <line:58:20> 'int' 3
    `-ParenExpr 0x55ef1b1da898 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55ef1b1da870 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55ef1b1da810 <col:21> 'int' 1
        `-ParenExpr 0x55ef1b1da850 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55ef1b1da830 <line:59:22> 'int' 4
~([B27.10])
  12: CompoundAssignOperator 0x55ef1b1da920 <lgc.c:170:7, col:41> 'lu_byte':'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x55ef1b1da730 <col:7, col:10> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b191750
| `-ImplicitCastExpr 0x55ef1b1da718 <col:7> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x55ef1b1da6f0 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-UnaryOperator 0x55ef1b1da900 <col:20, col:41> 'int' prefix '~'
  `-ParenExpr 0x55ef1b1da8e0 <col:21, col:41> 'int'
    `-BinaryOperator 0x55ef1b1da8b8 <./lgc.h:30:20, col:27> 'int' '|'
      |-ParenExpr 0x55ef1b1da7f0 <col:20, col:27> 'int'
      | `-BinaryOperator 0x55ef1b1da7c8 <col:21, col:26> 'int' '<<'
      |   |-IntegerLiteral 0x55ef1b1da768 <col:21> 'int' 1
      |   `-ParenExpr 0x55ef1b1da7a8 <col:24, col:26> 'int'
      |     `-IntegerLiteral 0x55ef1b1da788 <line:58:20> 'int' 3
      `-ParenExpr 0x55ef1b1da898 <line:30:20, col:27> 'int'
        `-BinaryOperator 0x55ef1b1da870 <col:21, col:26> 'int' '<<'
          |-IntegerLiteral 0x55ef1b1da810 <col:21> 'int' 1
          `-ParenExpr 0x55ef1b1da850 <col:24, col:26> 'int'
            `-IntegerLiteral 0x55ef1b1da830 <line:59:22> 'int' 4
[B27.3] &= [B27.11]
  13: DeclRefExpr 0x55ef1b1da958 <lgc.c:171:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
  14: ImplicitCastExpr 0x55ef1b1da980 <lgc.c:171:7> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1da958 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B27.13] (ImplicitCastExpr, LValueToRValue, Table *)
  15: MemberExpr 0x55ef1b1da998 <lgc.c:171:7, col:10> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b191750
`-ImplicitCastExpr 0x55ef1b1da980 <col:7> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1da958 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B27.14]->marked
  16: DeclRefExpr 0x55ef1b1da9d0 <lgc.c:171:31> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
weakkey
  17: ImplicitCastExpr 0x55ef1b1daa18 <lgc.c:171:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1da9d0 <col:31> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
[B27.16] (ImplicitCastExpr, LValueToRValue, int)
  18: IntegerLiteral 0x55ef1b1da9f8 <./lgc.h:58:20> 'int' 3
3
  19: BinaryOperator 0x55ef1b1daa30 <lgc.c:171:31, ./lgc.h:58:20> 'int' '<<'
|-ImplicitCastExpr 0x55ef1b1daa18 <lgc.c:171:31> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1da9d0 <col:31> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
`-IntegerLiteral 0x55ef1b1da9f8 <./lgc.h:58:20> 'int' 3
[B27.17] << [B27.18]
  20: DeclRefExpr 0x55ef1b1daa78 <lgc.c:172:31> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
weakvalue
  21: ImplicitCastExpr 0x55ef1b1daac0 <lgc.c:172:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1daa78 <col:31> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
[B27.20] (ImplicitCastExpr, LValueToRValue, int)
  22: IntegerLiteral 0x55ef1b1daaa0 <./lgc.h:59:22> 'int' 4
4
  23: BinaryOperator 0x55ef1b1daad8 <lgc.c:172:31, ./lgc.h:59:22> 'int' '<<'
|-ImplicitCastExpr 0x55ef1b1daac0 <lgc.c:172:31> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1daa78 <col:31> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
`-IntegerLiteral 0x55ef1b1daaa0 <./lgc.h:59:22> 'int' 4
[B27.21] << [B27.22]
  24: BinaryOperator 0x55ef1b1dab20 <lgc.c:171:30, line:172:56> 'int' '|'
|-ParenExpr 0x55ef1b1daa58 <line:171:30, col:52> 'int'
| `-BinaryOperator 0x55ef1b1daa30 <col:31, ./lgc.h:58:20> 'int' '<<'
|   |-ImplicitCastExpr 0x55ef1b1daa18 <lgc.c:171:31> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55ef1b1da9d0 <col:31> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
|   `-IntegerLiteral 0x55ef1b1da9f8 <./lgc.h:58:20> 'int' 3
`-ParenExpr 0x55ef1b1dab00 <lgc.c:172:30, col:56> 'int'
  `-BinaryOperator 0x55ef1b1daad8 <col:31, ./lgc.h:59:22> 'int' '<<'
    |-ImplicitCastExpr 0x55ef1b1daac0 <lgc.c:172:31> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x55ef1b1daa78 <col:31> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
    `-IntegerLiteral 0x55ef1b1daaa0 <./lgc.h:59:22> 'int' 4
([B27.19]) | ([B27.23])
  25: CStyleCastExpr 0x55ef1b1dabc8 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1daba8 <col:26, col:30> 'int'
  `-ParenExpr 0x55ef1b1dab48 <line:78:36, col:38> 'int'
    `-BinaryOperator 0x55ef1b1dab20 <lgc.c:171:30, line:172:56> 'int' '|'
      |-ParenExpr 0x55ef1b1daa58 <line:171:30, col:52> 'int'
      | `-BinaryOperator 0x55ef1b1daa30 <col:31, ./lgc.h:58:20> 'int' '<<'
      |   |-ImplicitCastExpr 0x55ef1b1daa18 <lgc.c:171:31> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x55ef1b1da9d0 <col:31> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
      |   `-IntegerLiteral 0x55ef1b1da9f8 <./lgc.h:58:20> 'int' 3
      `-ParenExpr 0x55ef1b1dab00 <lgc.c:172:30, col:56> 'int'
        `-BinaryOperator 0x55ef1b1daad8 <col:31, ./lgc.h:59:22> 'int' '<<'
          |-ImplicitCastExpr 0x55ef1b1daac0 <lgc.c:172:31> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x55ef1b1daa78 <col:31> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
          `-IntegerLiteral 0x55ef1b1daaa0 <./lgc.h:59:22> 'int' 4
(lu_byte)(([B27.24])) (CStyleCastExpr, IntegralCast, lu_byte)
  26: ImplicitCastExpr 0x55ef1b1dac10 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b1dabf0 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1dabc8 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1daba8 <col:26, col:30> 'int'
      `-ParenExpr 0x55ef1b1dab48 <line:78:36, col:38> 'int'
        `-BinaryOperator 0x55ef1b1dab20 <lgc.c:171:30, line:172:56> 'int' '|'
          |-ParenExpr 0x55ef1b1daa58 <line:171:30, col:52> 'int'
          | `-BinaryOperator 0x55ef1b1daa30 <col:31, ./lgc.h:58:20> 'int' '<<'
          |   |-ImplicitCastExpr 0x55ef1b1daa18 <lgc.c:171:31> 'int' <LValueToRValue>
          |   | `-DeclRefExpr 0x55ef1b1da9d0 <col:31> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
          |   `-IntegerLiteral 0x55ef1b1da9f8 <./lgc.h:58:20> 'int' 3
          `-ParenExpr 0x55ef1b1dab00 <lgc.c:172:30, col:56> 'int'
            `-BinaryOperator 0x55ef1b1daad8 <col:31, ./lgc.h:59:22> 'int' '<<'
              |-ImplicitCastExpr 0x55ef1b1daac0 <lgc.c:172:31> 'int' <LValueToRValue>
              | `-DeclRefExpr 0x55ef1b1daa78 <col:31> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
              `-IntegerLiteral 0x55ef1b1daaa0 <./lgc.h:59:22> 'int' 4
([B27.25]) (ImplicitCastExpr, IntegralCast, int)
  27: CompoundAssignOperator 0x55ef1b1dac28 <lgc.c:171:7, ./llimits.h:75:31> 'lu_byte':'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x55ef1b1da998 <lgc.c:171:7, col:10> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b191750
| `-ImplicitCastExpr 0x55ef1b1da980 <col:7> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x55ef1b1da958 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ImplicitCastExpr 0x55ef1b1dac10 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b1dabf0 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b1dabc8 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b1daba8 <col:26, col:30> 'int'
        `-ParenExpr 0x55ef1b1dab48 <line:78:36, col:38> 'int'
          `-BinaryOperator 0x55ef1b1dab20 <lgc.c:171:30, line:172:56> 'int' '|'
            |-ParenExpr 0x55ef1b1daa58 <line:171:30, col:52> 'int'
            | `-BinaryOperator 0x55ef1b1daa30 <col:31, ./lgc.h:58:20> 'int' '<<'
            |   |-ImplicitCastExpr 0x55ef1b1daa18 <lgc.c:171:31> 'int' <LValueToRValue>
            |   | `-DeclRefExpr 0x55ef1b1da9d0 <col:31> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
            |   `-IntegerLiteral 0x55ef1b1da9f8 <./lgc.h:58:20> 'int' 3
            `-ParenExpr 0x55ef1b1dab00 <lgc.c:172:30, col:56> 'int'
              `-BinaryOperator 0x55ef1b1daad8 <col:31, ./lgc.h:59:22> 'int' '<<'
                |-ImplicitCastExpr 0x55ef1b1daac0 <lgc.c:172:31> 'int' <LValueToRValue>
                | `-DeclRefExpr 0x55ef1b1daa78 <col:31> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
                `-IntegerLiteral 0x55ef1b1daaa0 <./lgc.h:59:22> 'int' 4
[B27.15] |= [B27.26]
  28: DeclRefExpr 0x55ef1b1dacd8 <lgc.c:173:19> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
g
  29: ImplicitCastExpr 0x55ef1b1dad00 <lgc.c:173:19> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dacd8 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B27.28] (ImplicitCastExpr, LValueToRValue, global_State *)
  30: MemberExpr 0x55ef1b1dad18 <lgc.c:173:19, col:22> 'GCObject *' lvalue ->weak 0x55ef1b19ee08
`-ImplicitCastExpr 0x55ef1b1dad00 <col:19> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dacd8 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B27.29]->weak
  31: ImplicitCastExpr 0x55ef1b1dad50 <lgc.c:173:19, col:22> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1dad18 <col:19, col:22> 'GCObject *' lvalue ->weak 0x55ef1b19ee08
  `-ImplicitCastExpr 0x55ef1b1dad00 <col:19> 'global_State *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1dacd8 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B27.30] (ImplicitCastExpr, LValueToRValue, GCObject *)
  32: DeclRefExpr 0x55ef1b1dac60 <lgc.c:173:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
  33: ImplicitCastExpr 0x55ef1b1dac88 <lgc.c:173:7> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dac60 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B27.32] (ImplicitCastExpr, LValueToRValue, Table *)
  34: MemberExpr 0x55ef1b1daca0 <lgc.c:173:7, col:10> 'GCObject *' lvalue ->gclist 0x55ef1b191a18
`-ImplicitCastExpr 0x55ef1b1dac88 <col:7> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dac60 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B27.33]->gclist
  35: BinaryOperator 0x55ef1b1dad68 <lgc.c:173:7, col:22> 'GCObject *' '='
|-MemberExpr 0x55ef1b1daca0 <col:7, col:10> 'GCObject *' lvalue ->gclist 0x55ef1b191a18
| `-ImplicitCastExpr 0x55ef1b1dac88 <col:7> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x55ef1b1dac60 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ImplicitCastExpr 0x55ef1b1dad50 <col:19, col:22> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b1dad18 <col:19, col:22> 'GCObject *' lvalue ->weak 0x55ef1b19ee08
    `-ImplicitCastExpr 0x55ef1b1dad00 <col:19> 'global_State *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1dacd8 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B27.34] = [B27.31]
  36: DeclRefExpr 0x55ef1b1dae08 <lgc.c:174:25> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
  37: ImplicitCastExpr 0x55ef1b1daeb0 <./llimits.h:75:26, col:30> 'Table *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dae90 <col:26, col:30> 'Table *' lvalue
  `-ParenExpr 0x55ef1b1dae30 <./lstate.h:162:38, col:40> 'Table *' lvalue
    `-DeclRefExpr 0x55ef1b1dae08 <lgc.c:174:25> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
(([B27.36])) (ImplicitCastExpr, LValueToRValue, Table *)
  38: CStyleCastExpr 0x55ef1b1daec8 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b1daeb0 <col:26, col:30> 'Table *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dae90 <col:26, col:30> 'Table *' lvalue
    `-ParenExpr 0x55ef1b1dae30 <./lstate.h:162:38, col:40> 'Table *' lvalue
      `-DeclRefExpr 0x55ef1b1dae08 <lgc.c:174:25> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
(GCObject *)[B27.37] (CStyleCastExpr, BitCast, GCObject *)
  39: DeclRefExpr 0x55ef1b1dad90 <lgc.c:174:7> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
g
  40: ImplicitCastExpr 0x55ef1b1dadb8 <lgc.c:174:7> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dad90 <col:7> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B27.39] (ImplicitCastExpr, LValueToRValue, global_State *)
  41: MemberExpr 0x55ef1b1dadd0 <lgc.c:174:7, col:10> 'GCObject *' lvalue ->weak 0x55ef1b19ee08
`-ImplicitCastExpr 0x55ef1b1dadb8 <col:7> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dad90 <col:7> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B27.40]->weak
  42: BinaryOperator 0x55ef1b1daf30 <lgc.c:174:7, ./lstate.h:162:42> 'GCObject *' '='
|-MemberExpr 0x55ef1b1dadd0 <lgc.c:174:7, col:10> 'GCObject *' lvalue ->weak 0x55ef1b19ee08
| `-ImplicitCastExpr 0x55ef1b1dadb8 <col:7> 'global_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55ef1b1dad90 <col:7> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
`-ParenExpr 0x55ef1b1daf10 <./lstate.h:162:20, col:42> 'GCObject *'
  `-ParenExpr 0x55ef1b1daef0 <./llimits.h:75:22, col:31> 'GCObject *'
    `-CStyleCastExpr 0x55ef1b1daec8 <col:23, col:30> 'GCObject *' <BitCast>
      `-ImplicitCastExpr 0x55ef1b1daeb0 <col:26, col:30> 'Table *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1dae90 <col:26, col:30> 'Table *' lvalue
          `-ParenExpr 0x55ef1b1dae30 <./lstate.h:162:38, col:40> 'Table *' lvalue
            `-DeclRefExpr 0x55ef1b1dae08 <lgc.c:174:25> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B27.41] = (([B27.38]))
   Preds (2): B28 B29
   Succs (1): B26

 [B28]
   1: DeclRefExpr 0x55ef1b1da670 <lgc.c:169:20> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
weakvalue
   2: ImplicitCastExpr 0x55ef1b1da6b0 <lgc.c:169:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1da670 <col:20> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
[B28.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B29.42] || [B28.2]
   Preds (1): B29
   Succs (2): B27 B26

 [B29]
   1: DeclRefExpr 0x55ef1b1d9da0 <lgc.c:167:16> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
strchr
   2: ImplicitCastExpr 0x55ef1b1da0b8 <lgc.c:167:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1d9da0 <col:16> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
[B29.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, int))
   3: DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
mode
   4: ImplicitCastExpr 0x55ef1b1d9e10 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
([B29.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x55ef1b1d9e28 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.4]->value
   6: MemberExpr 0x55ef1b1d9e60 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.5].gc
   7: ImplicitCastExpr 0x55ef1b1d9e98 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
  `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x55ef1b1d9eb0 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
`-ImplicitCastExpr 0x55ef1b1d9e98 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
      `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.7]->ts
   9: UnaryOperator 0x55ef1b1d9f18 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x55ef1b1d9eb0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
  `-ImplicitCastExpr 0x55ef1b1d9e98 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
&[B29.8]
  10: IntegerLiteral 0x55ef1b1d9f78 <./lobject.h:210:46> 'int' 1
1
  11: BinaryOperator 0x55ef1b1d9f98 <./lobject.h:210:39, col:46> 'union TString *' '+'
|-ParenExpr 0x55ef1b1d9f58 <col:39, col:42> 'union TString *'
| `-ParenExpr 0x55ef1b1d9f38 <./llimits.h:63:25, col:27> 'union TString *'
|   `-UnaryOperator 0x55ef1b1d9f18 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|     `-MemberExpr 0x55ef1b1d9eb0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
|       `-ImplicitCastExpr 0x55ef1b1d9e98 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         `-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|           `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|             `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
|               `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
|                 `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
`-IntegerLiteral 0x55ef1b1d9f78 <./lobject.h:210:46> 'int' 1
(([B29.9])) + [B29.10]
  12: CStyleCastExpr 0x55ef1b1da028 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x55ef1b1da008 <col:26, col:30> 'union TString *'
  `-BinaryOperator 0x55ef1b1d9f98 <./lobject.h:210:39, col:46> 'union TString *' '+'
    |-ParenExpr 0x55ef1b1d9f58 <col:39, col:42> 'union TString *'
    | `-ParenExpr 0x55ef1b1d9f38 <./llimits.h:63:25, col:27> 'union TString *'
    |   `-UnaryOperator 0x55ef1b1d9f18 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    |     `-MemberExpr 0x55ef1b1d9eb0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
    |       `-ImplicitCastExpr 0x55ef1b1d9e98 <col:49, col:60> 'GCObject *' <LValueToRValue>
    |         `-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    |           `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    |             `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
    |               `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
    |                 `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
    `-IntegerLiteral 0x55ef1b1d9f78 <./lobject.h:210:46> 'int' 1
(const char *)([B29.11]) (CStyleCastExpr, BitCast, const char *)
  13: CharacterLiteral 0x55ef1b1da070 <lgc.c:167:37> 'int' 107
'k'
  14: CallExpr 0x55ef1b1da0d0 <lgc.c:167:16, col:40> 'char *'
|-ImplicitCastExpr 0x55ef1b1da0b8 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1d9da0 <col:16> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
|-ParenExpr 0x55ef1b1da050 <./llimits.h:75:22, col:31> 'const char *'
| `-CStyleCastExpr 0x55ef1b1da028 <col:23, col:30> 'const char *' <BitCast>
|   `-ParenExpr 0x55ef1b1da008 <col:26, col:30> 'union TString *'
|     `-BinaryOperator 0x55ef1b1d9f98 <./lobject.h:210:39, col:46> 'union TString *' '+'
|       |-ParenExpr 0x55ef1b1d9f58 <col:39, col:42> 'union TString *'
|       | `-ParenExpr 0x55ef1b1d9f38 <./llimits.h:63:25, col:27> 'union TString *'
|       |   `-UnaryOperator 0x55ef1b1d9f18 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|       |     `-MemberExpr 0x55ef1b1d9eb0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
|       |       `-ImplicitCastExpr 0x55ef1b1d9e98 <col:49, col:60> 'GCObject *' <LValueToRValue>
|       |         `-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|       |           `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|       |             `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
|       |               `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
|       |                 `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
|       `-IntegerLiteral 0x55ef1b1d9f78 <./lobject.h:210:46> 'int' 1
`-CharacterLiteral 0x55ef1b1da070 <lgc.c:167:37> 'int' 107
[B29.2](([B29.12]), [B29.13])
  15: IntegerLiteral 0x55ef1b1da108 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  16: CStyleCastExpr 0x55ef1b1da140 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55ef1b1da108 <col:24> 'int' 0
(void *)[B29.15] (CStyleCastExpr, NullToPointer, void *)
  17: ImplicitCastExpr 0x55ef1b1da188 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
`-ParenExpr 0x55ef1b1da168 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55ef1b1da140 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55ef1b1da108 <col:24> 'int' 0
([B29.16]) (ImplicitCastExpr, BitCast, char *)
  18: BinaryOperator 0x55ef1b1da1a0 <lgc.c:167:16, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-CallExpr 0x55ef1b1da0d0 <lgc.c:167:16, col:40> 'char *'
| |-ImplicitCastExpr 0x55ef1b1da0b8 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55ef1b1d9da0 <col:16> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
| |-ParenExpr 0x55ef1b1da050 <./llimits.h:75:22, col:31> 'const char *'
| | `-CStyleCastExpr 0x55ef1b1da028 <col:23, col:30> 'const char *' <BitCast>
| |   `-ParenExpr 0x55ef1b1da008 <col:26, col:30> 'union TString *'
| |     `-BinaryOperator 0x55ef1b1d9f98 <./lobject.h:210:39, col:46> 'union TString *' '+'
| |       |-ParenExpr 0x55ef1b1d9f58 <col:39, col:42> 'union TString *'
| |       | `-ParenExpr 0x55ef1b1d9f38 <./llimits.h:63:25, col:27> 'union TString *'
| |       |   `-UnaryOperator 0x55ef1b1d9f18 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
| |       |     `-MemberExpr 0x55ef1b1d9eb0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
| |       |       `-ImplicitCastExpr 0x55ef1b1d9e98 <col:49, col:60> 'GCObject *' <LValueToRValue>
| |       |         `-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
| |       |           `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
| |       |             `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
| |       |               `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
| |       |                 `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
| |       `-IntegerLiteral 0x55ef1b1d9f78 <./lobject.h:210:46> 'int' 1
| `-CharacterLiteral 0x55ef1b1da070 <lgc.c:167:37> 'int' 107
`-ImplicitCastExpr 0x55ef1b1da188 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
  `-ParenExpr 0x55ef1b1da168 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55ef1b1da140 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55ef1b1da108 <col:24> 'int' 0
[B29.14] != [B29.17]
  19: DeclRefExpr 0x55ef1b1d9d78 <lgc.c:167:5> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
weakkey
  20: BinaryOperator 0x55ef1b1da1e8 <lgc.c:167:5, col:49> 'int' '='
|-DeclRefExpr 0x55ef1b1d9d78 <col:5> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
`-ParenExpr 0x55ef1b1da1c8 <col:15, col:49> 'int'
  `-BinaryOperator 0x55ef1b1da1a0 <col:16, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
    |-CallExpr 0x55ef1b1da0d0 <lgc.c:167:16, col:40> 'char *'
    | |-ImplicitCastExpr 0x55ef1b1da0b8 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef1b1d9da0 <col:16> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
    | |-ParenExpr 0x55ef1b1da050 <./llimits.h:75:22, col:31> 'const char *'
    | | `-CStyleCastExpr 0x55ef1b1da028 <col:23, col:30> 'const char *' <BitCast>
    | |   `-ParenExpr 0x55ef1b1da008 <col:26, col:30> 'union TString *'
    | |     `-BinaryOperator 0x55ef1b1d9f98 <./lobject.h:210:39, col:46> 'union TString *' '+'
    | |       |-ParenExpr 0x55ef1b1d9f58 <col:39, col:42> 'union TString *'
    | |       | `-ParenExpr 0x55ef1b1d9f38 <./llimits.h:63:25, col:27> 'union TString *'
    | |       |   `-UnaryOperator 0x55ef1b1d9f18 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    | |       |     `-MemberExpr 0x55ef1b1d9eb0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
    | |       |       `-ImplicitCastExpr 0x55ef1b1d9e98 <col:49, col:60> 'GCObject *' <LValueToRValue>
    | |       |         `-MemberExpr 0x55ef1b1d9e60 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    | |       |           `-MemberExpr 0x55ef1b1d9e28 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    | |       |             `-ImplicitCastExpr 0x55ef1b1d9e10 <col:49, col:51> 'const TValue *' <LValueToRValue>
    | |       |               `-ParenExpr 0x55ef1b1d9df0 <col:49, col:51> 'const TValue *' lvalue
    | |       |                 `-DeclRefExpr 0x55ef1b1d9dc8 <lgc.c:167:30> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
    | |       `-IntegerLiteral 0x55ef1b1d9f78 <./lobject.h:210:46> 'int' 1
    | `-CharacterLiteral 0x55ef1b1da070 <lgc.c:167:37> 'int' 107
    `-ImplicitCastExpr 0x55ef1b1da188 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
      `-ParenExpr 0x55ef1b1da168 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x55ef1b1da140 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x55ef1b1da108 <col:24> 'int' 0
[B29.19] = ([B29.18])
  21: DeclRefExpr 0x55ef1b1da238 <lgc.c:168:18> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
strchr
  22: ImplicitCastExpr 0x55ef1b1da4f0 <lgc.c:168:18> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1da238 <col:18> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
[B29.21] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, int))
  23: DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
mode
  24: ImplicitCastExpr 0x55ef1b1da2a8 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
([B29.23]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  25: MemberExpr 0x55ef1b1da2c0 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.24]->value
  26: MemberExpr 0x55ef1b1da2f8 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.25].gc
  27: ImplicitCastExpr 0x55ef1b1da330 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
  `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.26] (ImplicitCastExpr, LValueToRValue, GCObject *)
  28: MemberExpr 0x55ef1b1da348 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
`-ImplicitCastExpr 0x55ef1b1da330 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
      `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B29.27]->ts
  29: UnaryOperator 0x55ef1b1da380 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x55ef1b1da348 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
  `-ImplicitCastExpr 0x55ef1b1da330 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
&[B29.28]
  30: IntegerLiteral 0x55ef1b1da3e0 <./lobject.h:210:46> 'int' 1
1
  31: BinaryOperator 0x55ef1b1da400 <./lobject.h:210:39, col:46> 'union TString *' '+'
|-ParenExpr 0x55ef1b1da3c0 <col:39, col:42> 'union TString *'
| `-ParenExpr 0x55ef1b1da3a0 <./llimits.h:63:25, col:27> 'union TString *'
|   `-UnaryOperator 0x55ef1b1da380 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|     `-MemberExpr 0x55ef1b1da348 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
|       `-ImplicitCastExpr 0x55ef1b1da330 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         `-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|           `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|             `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
|               `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
|                 `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
`-IntegerLiteral 0x55ef1b1da3e0 <./lobject.h:210:46> 'int' 1
(([B29.29])) + [B29.30]
  32: CStyleCastExpr 0x55ef1b1da490 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x55ef1b1da470 <col:26, col:30> 'union TString *'
  `-BinaryOperator 0x55ef1b1da400 <./lobject.h:210:39, col:46> 'union TString *' '+'
    |-ParenExpr 0x55ef1b1da3c0 <col:39, col:42> 'union TString *'
    | `-ParenExpr 0x55ef1b1da3a0 <./llimits.h:63:25, col:27> 'union TString *'
    |   `-UnaryOperator 0x55ef1b1da380 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    |     `-MemberExpr 0x55ef1b1da348 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
    |       `-ImplicitCastExpr 0x55ef1b1da330 <col:49, col:60> 'GCObject *' <LValueToRValue>
    |         `-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    |           `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    |             `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
    |               `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
    |                 `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
    `-IntegerLiteral 0x55ef1b1da3e0 <./lobject.h:210:46> 'int' 1
(const char *)([B29.31]) (CStyleCastExpr, BitCast, const char *)
  33: CharacterLiteral 0x55ef1b1da4d8 <lgc.c:168:39> 'int' 118
'v'
  34: CallExpr 0x55ef1b1da508 <lgc.c:168:18, col:42> 'char *'
|-ImplicitCastExpr 0x55ef1b1da4f0 <col:18> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1da238 <col:18> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
|-ParenExpr 0x55ef1b1da4b8 <./llimits.h:75:22, col:31> 'const char *'
| `-CStyleCastExpr 0x55ef1b1da490 <col:23, col:30> 'const char *' <BitCast>
|   `-ParenExpr 0x55ef1b1da470 <col:26, col:30> 'union TString *'
|     `-BinaryOperator 0x55ef1b1da400 <./lobject.h:210:39, col:46> 'union TString *' '+'
|       |-ParenExpr 0x55ef1b1da3c0 <col:39, col:42> 'union TString *'
|       | `-ParenExpr 0x55ef1b1da3a0 <./llimits.h:63:25, col:27> 'union TString *'
|       |   `-UnaryOperator 0x55ef1b1da380 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|       |     `-MemberExpr 0x55ef1b1da348 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
|       |       `-ImplicitCastExpr 0x55ef1b1da330 <col:49, col:60> 'GCObject *' <LValueToRValue>
|       |         `-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|       |           `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|       |             `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
|       |               `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
|       |                 `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
|       `-IntegerLiteral 0x55ef1b1da3e0 <./lobject.h:210:46> 'int' 1
`-CharacterLiteral 0x55ef1b1da4d8 <lgc.c:168:39> 'int' 118
[B29.22](([B29.32]), [B29.33])
  35: IntegerLiteral 0x55ef1b1da540 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  36: CStyleCastExpr 0x55ef1b1da578 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55ef1b1da540 <col:24> 'int' 0
(void *)[B29.35] (CStyleCastExpr, NullToPointer, void *)
  37: ImplicitCastExpr 0x55ef1b1da5c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
`-ParenExpr 0x55ef1b1da5a0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55ef1b1da578 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55ef1b1da540 <col:24> 'int' 0
([B29.36]) (ImplicitCastExpr, BitCast, char *)
  38: BinaryOperator 0x55ef1b1da5d8 <lgc.c:168:18, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-CallExpr 0x55ef1b1da508 <lgc.c:168:18, col:42> 'char *'
| |-ImplicitCastExpr 0x55ef1b1da4f0 <col:18> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55ef1b1da238 <col:18> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
| |-ParenExpr 0x55ef1b1da4b8 <./llimits.h:75:22, col:31> 'const char *'
| | `-CStyleCastExpr 0x55ef1b1da490 <col:23, col:30> 'const char *' <BitCast>
| |   `-ParenExpr 0x55ef1b1da470 <col:26, col:30> 'union TString *'
| |     `-BinaryOperator 0x55ef1b1da400 <./lobject.h:210:39, col:46> 'union TString *' '+'
| |       |-ParenExpr 0x55ef1b1da3c0 <col:39, col:42> 'union TString *'
| |       | `-ParenExpr 0x55ef1b1da3a0 <./llimits.h:63:25, col:27> 'union TString *'
| |       |   `-UnaryOperator 0x55ef1b1da380 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
| |       |     `-MemberExpr 0x55ef1b1da348 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
| |       |       `-ImplicitCastExpr 0x55ef1b1da330 <col:49, col:60> 'GCObject *' <LValueToRValue>
| |       |         `-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
| |       |           `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
| |       |             `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
| |       |               `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
| |       |                 `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
| |       `-IntegerLiteral 0x55ef1b1da3e0 <./lobject.h:210:46> 'int' 1
| `-CharacterLiteral 0x55ef1b1da4d8 <lgc.c:168:39> 'int' 118
`-ImplicitCastExpr 0x55ef1b1da5c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
  `-ParenExpr 0x55ef1b1da5a0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55ef1b1da578 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55ef1b1da540 <col:24> 'int' 0
[B29.34] != [B29.37]
  39: DeclRefExpr 0x55ef1b1da210 <lgc.c:168:5> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
weakvalue
  40: BinaryOperator 0x55ef1b1da620 <lgc.c:168:5, col:51> 'int' '='
|-DeclRefExpr 0x55ef1b1da210 <col:5> 'int' lvalue Var 0x55ef1b1d8ae0 'weakvalue' 'int'
`-ParenExpr 0x55ef1b1da600 <col:17, col:51> 'int'
  `-BinaryOperator 0x55ef1b1da5d8 <col:18, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
    |-CallExpr 0x55ef1b1da508 <lgc.c:168:18, col:42> 'char *'
    | |-ImplicitCastExpr 0x55ef1b1da4f0 <col:18> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef1b1da238 <col:18> 'char *(const char *, int)' Function 0x55ef1b0ab088 'strchr' 'char *(const char *, int)'
    | |-ParenExpr 0x55ef1b1da4b8 <./llimits.h:75:22, col:31> 'const char *'
    | | `-CStyleCastExpr 0x55ef1b1da490 <col:23, col:30> 'const char *' <BitCast>
    | |   `-ParenExpr 0x55ef1b1da470 <col:26, col:30> 'union TString *'
    | |     `-BinaryOperator 0x55ef1b1da400 <./lobject.h:210:39, col:46> 'union TString *' '+'
    | |       |-ParenExpr 0x55ef1b1da3c0 <col:39, col:42> 'union TString *'
    | |       | `-ParenExpr 0x55ef1b1da3a0 <./llimits.h:63:25, col:27> 'union TString *'
    | |       |   `-UnaryOperator 0x55ef1b1da380 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    | |       |     `-MemberExpr 0x55ef1b1da348 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
    | |       |       `-ImplicitCastExpr 0x55ef1b1da330 <col:49, col:60> 'GCObject *' <LValueToRValue>
    | |       |         `-MemberExpr 0x55ef1b1da2f8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    | |       |           `-MemberExpr 0x55ef1b1da2c0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    | |       |             `-ImplicitCastExpr 0x55ef1b1da2a8 <col:49, col:51> 'const TValue *' <LValueToRValue>
    | |       |               `-ParenExpr 0x55ef1b1da288 <col:49, col:51> 'const TValue *' lvalue
    | |       |                 `-DeclRefExpr 0x55ef1b1da260 <lgc.c:168:32> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
    | |       `-IntegerLiteral 0x55ef1b1da3e0 <./lobject.h:210:46> 'int' 1
    | `-CharacterLiteral 0x55ef1b1da4d8 <lgc.c:168:39> 'int' 118
    `-ImplicitCastExpr 0x55ef1b1da5c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
      `-ParenExpr 0x55ef1b1da5a0 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x55ef1b1da578 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x55ef1b1da540 <col:24> 'int' 0
[B29.39] = ([B29.38])
  41: DeclRefExpr 0x55ef1b1da648 <lgc.c:169:9> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
weakkey
  42: ImplicitCastExpr 0x55ef1b1da698 <lgc.c:169:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1da648 <col:9> 'int' lvalue Var 0x55ef1b1d8a30 'weakkey' 'int'
[B29.41] (ImplicitCastExpr, LValueToRValue, int)
   T: [B29.42] || ...
   Preds (1): B30
   Succs (2): B27 B28

 [B30]
   1: DeclRefExpr 0x55ef1b1d9bf0 <lgc.c:166:26> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
mode
   2: ImplicitCastExpr 0x55ef1b1d9c38 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d9c18 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1d9bf0 <lgc.c:166:26> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
([B30.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x55ef1b1d9c60 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
`-ImplicitCastExpr 0x55ef1b1d9c38 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d9c18 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1d9bf0 <lgc.c:166:26> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B30.2]->tt
   4: ImplicitCastExpr 0x55ef1b1d9cd8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1d9c98 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x55ef1b1d9c60 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
    `-ImplicitCastExpr 0x55ef1b1d9c38 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1d9c18 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1d9bf0 <lgc.c:166:26> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
([B30.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55ef1b1d9cb8 <./lua.h:78:22> 'int' 4
4
   6: BinaryOperator 0x55ef1b1d9cf0 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x55ef1b1d9cd8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1d9c98 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x55ef1b1d9c60 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
|     `-ImplicitCastExpr 0x55ef1b1d9c38 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1d9c18 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x55ef1b1d9bf0 <lgc.c:166:26> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
`-IntegerLiteral 0x55ef1b1d9cb8 <./lua.h:78:22> 'int' 4
[B30.4] == [B30.5]
   T: if [B31.5] && ([B30.6])
   Preds (1): B31
   Succs (2): B29 B26

 [B31]
   1: ConditionalOperator 0x55ef1b1d9b50 <./ltm.h:41:26, line:42:70> 'const TValue *'
|-BinaryOperator 0x55ef1b1d9550 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
| |-ImplicitCastExpr 0x55ef1b1d9520 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
| | `-ParenExpr 0x55ef1b1d9480 <col:26, col:29> 'struct Table *' lvalue
| |   `-MemberExpr 0x55ef1b1d9448 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
| |     `-ImplicitCastExpr 0x55ef1b1d9430 <col:21> 'Table *' <LValueToRValue>
| |       `-DeclRefExpr 0x55ef1b1d9408 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
| `-ImplicitCastExpr 0x55ef1b1d9538 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
|   `-ParenExpr 0x55ef1b1d9500 <col:16, col:25> 'void *'
|     `-CStyleCastExpr 0x55ef1b1d94d8 <col:17, col:24> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x55ef1b1d94a0 <col:24> 'int' 0
|-ImplicitCastExpr 0x55ef1b1d9b38 <col:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x55ef1b1d95d8 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x55ef1b1d95b0 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55ef1b1d9578 <col:24> 'int' 0
`-ConditionalOperator 0x55ef1b1d9b08 <./ltm.h:42:3, col:70> 'const TValue *'
  |-ParenExpr 0x55ef1b1d97e8 <col:3, col:27> 'unsigned int'
  | `-BinaryOperator 0x55ef1b1d97c0 <col:4, col:26> 'unsigned int' '&'
  |   |-ImplicitCastExpr 0x55ef1b1d97a8 <col:4, col:10> 'unsigned int' <IntegralCast>
  |   | `-ImplicitCastExpr 0x55ef1b1d9790 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  |   |   `-MemberExpr 0x55ef1b1d96a8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x55ef1b1917a8
  |   |     `-ImplicitCastExpr 0x55ef1b1d9690 <col:4, col:7> 'struct Table *' <LValueToRValue>
  |   |       `-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
  |   |         `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
  |   |           `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
  |   |             `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
  |   `-ParenExpr 0x55ef1b1d9770 <./ltm.h:42:18, col:26> 'unsigned int'
  |     `-BinaryOperator 0x55ef1b1d9748 <col:19, col:25> 'unsigned int' '<<'
  |       |-IntegerLiteral 0x55ef1b1d96e0 <col:19> 'unsigned int' 1
  |       `-ParenExpr 0x55ef1b1d9728 <col:23, col:25> 'int'
  |         `-DeclRefExpr 0x55ef1b1d9700 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
  |-ImplicitCastExpr 0x55ef1b1d9af0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
  | `-ParenExpr 0x55ef1b1d9868 <col:16, col:25> 'void *'
  |   `-CStyleCastExpr 0x55ef1b1d9840 <col:17, col:24> 'void *' <NullToPointer>
  |     `-IntegerLiteral 0x55ef1b1d9808 <col:24> 'int' 0
  `-CallExpr 0x55ef1b1d9a68 <./ltm.h:42:38, col:70> 'const TValue *'
    |-ImplicitCastExpr 0x55ef1b1d9a50 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55ef1b1d9888 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x55ef1b1949b0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
    |-ImplicitCastExpr 0x55ef1b1d9aa8 <lgc.c:165:21, col:24> 'struct Table *' <LValueToRValue>
    | `-MemberExpr 0x55ef1b1d98f0 <col:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
    |   `-ImplicitCastExpr 0x55ef1b1d98d8 <col:21> 'Table *' <LValueToRValue>
    |     `-DeclRefExpr 0x55ef1b1d98b0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
    |-ImplicitCastExpr 0x55ef1b1d9ac0 <col:35> 'TMS':'TMS' <IntegralCast>
    | `-DeclRefExpr 0x55ef1b1d9928 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
    `-ImplicitCastExpr 0x55ef1b1d9ad8 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
      `-ArraySubscriptExpr 0x55ef1b1d9a28 <col:56, col:69> 'TString *' lvalue
        |-ImplicitCastExpr 0x55ef1b1d9a10 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
        | `-MemberExpr 0x55ef1b1d99b0 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
        |   `-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
        |     `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
        |       `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
        `-DeclRefExpr 0x55ef1b1d99e8 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B37.8] ? [B32.3] : [B33.1]
   2: DeclRefExpr 0x55ef1b1d93e0 <lgc.c:165:3> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
mode
   3: BinaryOperator 0x55ef1b1d9ba0 <lgc.c:165:3, ./ltm.h:42:71> 'const TValue *' '='
|-DeclRefExpr 0x55ef1b1d93e0 <lgc.c:165:3> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
`-ParenExpr 0x55ef1b1d9b80 <./ltm.h:41:25, line:42:71> 'const TValue *'
  `-ConditionalOperator 0x55ef1b1d9b50 <line:41:26, line:42:70> 'const TValue *'
    |-BinaryOperator 0x55ef1b1d9550 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
    | |-ImplicitCastExpr 0x55ef1b1d9520 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
    | | `-ParenExpr 0x55ef1b1d9480 <col:26, col:29> 'struct Table *' lvalue
    | |   `-MemberExpr 0x55ef1b1d9448 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
    | |     `-ImplicitCastExpr 0x55ef1b1d9430 <col:21> 'Table *' <LValueToRValue>
    | |       `-DeclRefExpr 0x55ef1b1d9408 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
    | `-ImplicitCastExpr 0x55ef1b1d9538 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
    |   `-ParenExpr 0x55ef1b1d9500 <col:16, col:25> 'void *'
    |     `-CStyleCastExpr 0x55ef1b1d94d8 <col:17, col:24> 'void *' <NullToPointer>
    |       `-IntegerLiteral 0x55ef1b1d94a0 <col:24> 'int' 0
    |-ImplicitCastExpr 0x55ef1b1d9b38 <col:16, col:25> 'const TValue *' <NullToPointer>
    | `-ParenExpr 0x55ef1b1d95d8 <col:16, col:25> 'void *'
    |   `-CStyleCastExpr 0x55ef1b1d95b0 <col:17, col:24> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ef1b1d9578 <col:24> 'int' 0
    `-ConditionalOperator 0x55ef1b1d9b08 <./ltm.h:42:3, col:70> 'const TValue *'
      |-ParenExpr 0x55ef1b1d97e8 <col:3, col:27> 'unsigned int'
      | `-BinaryOperator 0x55ef1b1d97c0 <col:4, col:26> 'unsigned int' '&'
      |   |-ImplicitCastExpr 0x55ef1b1d97a8 <col:4, col:10> 'unsigned int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x55ef1b1d9790 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
      |   |   `-MemberExpr 0x55ef1b1d96a8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x55ef1b1917a8
      |   |     `-ImplicitCastExpr 0x55ef1b1d9690 <col:4, col:7> 'struct Table *' <LValueToRValue>
      |   |       `-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
      |   |         `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
      |   |           `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
      |   |             `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
      |   `-ParenExpr 0x55ef1b1d9770 <./ltm.h:42:18, col:26> 'unsigned int'
      |     `-BinaryOperator 0x55ef1b1d9748 <col:19, col:25> 'unsigned int' '<<'
      |       |-IntegerLiteral 0x55ef1b1d96e0 <col:19> 'unsigned int' 1
      |       `-ParenExpr 0x55ef1b1d9728 <col:23, col:25> 'int'
      |         `-DeclRefExpr 0x55ef1b1d9700 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
      |-ImplicitCastExpr 0x55ef1b1d9af0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
      | `-ParenExpr 0x55ef1b1d9868 <col:16, col:25> 'void *'
      |   `-CStyleCastExpr 0x55ef1b1d9840 <col:17, col:24> 'void *' <NullToPointer>
      |     `-IntegerLiteral 0x55ef1b1d9808 <col:24> 'int' 0
      `-CallExpr 0x55ef1b1d9a68 <./ltm.h:42:38, col:70> 'const TValue *'
        |-ImplicitCastExpr 0x55ef1b1d9a50 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55ef1b1d9888 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x55ef1b1949b0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
        |-ImplicitCastExpr 0x55ef1b1d9aa8 <lgc.c:165:21, col:24> 'struct Table *' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1d98f0 <col:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
        |   `-ImplicitCastExpr 0x55ef1b1d98d8 <col:21> 'Table *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1d98b0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
        |-ImplicitCastExpr 0x55ef1b1d9ac0 <col:35> 'TMS':'TMS' <IntegralCast>
        | `-DeclRefExpr 0x55ef1b1d9928 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
        `-ImplicitCastExpr 0x55ef1b1d9ad8 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
          `-ArraySubscriptExpr 0x55ef1b1d9a28 <col:56, col:69> 'TString *' lvalue
            |-ImplicitCastExpr 0x55ef1b1d9a10 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
            | `-MemberExpr 0x55ef1b1d99b0 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
            |   `-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
            |     `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
            |       `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
            `-DeclRefExpr 0x55ef1b1d99e8 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B31.2] = ([B31.1])
   4: DeclRefExpr 0x55ef1b1d9bc8 <lgc.c:166:7> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
mode
   5: ImplicitCastExpr 0x55ef1b1d9d38 <lgc.c:166:7> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d9bc8 <col:7> 'const TValue *' lvalue Var 0x55ef1b1d8b88 'mode' 'const TValue *'
[B31.4] (ImplicitCastExpr, LValueToRValue, const TValue *)
   T: [B31.5] && ...
   Preds (2): B32 B33
   Succs (2): B30 B26

 [B32]
   1: IntegerLiteral 0x55ef1b1d9578 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b1d95b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55ef1b1d9578 <col:24> 'int' 0
(void *)[B32.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55ef1b1d9b38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x55ef1b1d95d8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55ef1b1d95b0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55ef1b1d9578 <col:24> 'int' 0
([B32.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B37
   Succs (1): B31

 [B33]
   1: ConditionalOperator 0x55ef1b1d9b08 <./ltm.h:42:3, col:70> 'const TValue *'
|-ParenExpr 0x55ef1b1d97e8 <col:3, col:27> 'unsigned int'
| `-BinaryOperator 0x55ef1b1d97c0 <col:4, col:26> 'unsigned int' '&'
|   |-ImplicitCastExpr 0x55ef1b1d97a8 <col:4, col:10> 'unsigned int' <IntegralCast>
|   | `-ImplicitCastExpr 0x55ef1b1d9790 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-MemberExpr 0x55ef1b1d96a8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x55ef1b1917a8
|   |     `-ImplicitCastExpr 0x55ef1b1d9690 <col:4, col:7> 'struct Table *' <LValueToRValue>
|   |       `-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
|   |         `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
|   |           `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
|   `-ParenExpr 0x55ef1b1d9770 <./ltm.h:42:18, col:26> 'unsigned int'
|     `-BinaryOperator 0x55ef1b1d9748 <col:19, col:25> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55ef1b1d96e0 <col:19> 'unsigned int' 1
|       `-ParenExpr 0x55ef1b1d9728 <col:23, col:25> 'int'
|         `-DeclRefExpr 0x55ef1b1d9700 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
|-ImplicitCastExpr 0x55ef1b1d9af0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x55ef1b1d9868 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x55ef1b1d9840 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55ef1b1d9808 <col:24> 'int' 0
`-CallExpr 0x55ef1b1d9a68 <./ltm.h:42:38, col:70> 'const TValue *'
  |-ImplicitCastExpr 0x55ef1b1d9a50 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55ef1b1d9888 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x55ef1b1949b0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
  |-ImplicitCastExpr 0x55ef1b1d9aa8 <lgc.c:165:21, col:24> 'struct Table *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1d98f0 <col:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
  |   `-ImplicitCastExpr 0x55ef1b1d98d8 <col:21> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1d98b0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
  |-ImplicitCastExpr 0x55ef1b1d9ac0 <col:35> 'TMS':'TMS' <IntegralCast>
  | `-DeclRefExpr 0x55ef1b1d9928 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
  `-ImplicitCastExpr 0x55ef1b1d9ad8 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55ef1b1d9a28 <col:56, col:69> 'TString *' lvalue
      |-ImplicitCastExpr 0x55ef1b1d9a10 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
      | `-MemberExpr 0x55ef1b1d99b0 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
      |   `-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
      |     `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
      |       `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
      `-DeclRefExpr 0x55ef1b1d99e8 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
([B36.11]) ? [B34.3] : [B35.16]
   Preds (2): B34 B35
   Succs (1): B31

 [B34]
   1: IntegerLiteral 0x55ef1b1d9808 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b1d9840 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55ef1b1d9808 <col:24> 'int' 0
(void *)[B34.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55ef1b1d9af0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x55ef1b1d9868 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55ef1b1d9840 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55ef1b1d9808 <col:24> 'int' 0
([B34.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B36
   Succs (1): B33

 [B35]
   1: DeclRefExpr 0x55ef1b1d9888 <./ltm.h:42:38> 'const TValue *(Table *, TMS, TString *)' Function 0x55ef1b1949b0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
luaT_gettm
   2: ImplicitCastExpr 0x55ef1b1d9a50 <./ltm.h:42:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1d9888 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x55ef1b1949b0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
[B35.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, TMS, TString *))
   3: DeclRefExpr 0x55ef1b1d98b0 <lgc.c:165:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   4: ImplicitCastExpr 0x55ef1b1d98d8 <lgc.c:165:21> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d98b0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B35.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: MemberExpr 0x55ef1b1d98f0 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
`-ImplicitCastExpr 0x55ef1b1d98d8 <col:21> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d98b0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B35.4]->metatable
   6: ImplicitCastExpr 0x55ef1b1d9aa8 <lgc.c:165:21, col:24> 'struct Table *' <LValueToRValue>
`-MemberExpr 0x55ef1b1d98f0 <col:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
  `-ImplicitCastExpr 0x55ef1b1d98d8 <col:21> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1d98b0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B35.5] (ImplicitCastExpr, LValueToRValue, struct Table *)
   7: DeclRefExpr 0x55ef1b1d9928 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
TM_MODE
   8: ImplicitCastExpr 0x55ef1b1d9ac0 <lgc.c:165:35> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x55ef1b1d9928 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B35.7] (ImplicitCastExpr, IntegralCast, TMS)
   9: DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
g
  10: ImplicitCastExpr 0x55ef1b1d9998 <./ltm.h:42:56, col:58> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
  `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
([B35.9]) (ImplicitCastExpr, LValueToRValue, global_State *)
  11: MemberExpr 0x55ef1b1d99b0 <./ltm.h:42:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
`-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
    `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B35.10]->tmname
  12: ImplicitCastExpr 0x55ef1b1d9a10 <./ltm.h:42:56, col:61> 'TString **' <ArrayToPointerDecay>
`-MemberExpr 0x55ef1b1d99b0 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
  `-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
      `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B35.11] (ImplicitCastExpr, ArrayToPointerDecay, TString **)
  13: DeclRefExpr 0x55ef1b1d99e8 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
TM_MODE
  14: ArraySubscriptExpr 0x55ef1b1d9a28 <./ltm.h:42:56, col:69> 'TString *' lvalue
|-ImplicitCastExpr 0x55ef1b1d9a10 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
| `-MemberExpr 0x55ef1b1d99b0 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
|   `-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
|     `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
|       `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
`-DeclRefExpr 0x55ef1b1d99e8 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B35.12][[B35.13]]
  15: ImplicitCastExpr 0x55ef1b1d9ad8 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
`-ArraySubscriptExpr 0x55ef1b1d9a28 <col:56, col:69> 'TString *' lvalue
  |-ImplicitCastExpr 0x55ef1b1d9a10 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
  | `-MemberExpr 0x55ef1b1d99b0 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
  |   `-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
  |     `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
  |       `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
  `-DeclRefExpr 0x55ef1b1d99e8 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B35.14] (ImplicitCastExpr, LValueToRValue, TString *)
  16: CallExpr 0x55ef1b1d9a68 <./ltm.h:42:38, col:70> 'const TValue *'
|-ImplicitCastExpr 0x55ef1b1d9a50 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1d9888 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x55ef1b1949b0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
|-ImplicitCastExpr 0x55ef1b1d9aa8 <lgc.c:165:21, col:24> 'struct Table *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1d98f0 <col:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
|   `-ImplicitCastExpr 0x55ef1b1d98d8 <col:21> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1d98b0 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
|-ImplicitCastExpr 0x55ef1b1d9ac0 <col:35> 'TMS':'TMS' <IntegralCast>
| `-DeclRefExpr 0x55ef1b1d9928 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
`-ImplicitCastExpr 0x55ef1b1d9ad8 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55ef1b1d9a28 <col:56, col:69> 'TString *' lvalue
    |-ImplicitCastExpr 0x55ef1b1d9a10 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
    | `-MemberExpr 0x55ef1b1d99b0 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x55ef1b1a0d88
    |   `-ImplicitCastExpr 0x55ef1b1d9998 <col:56, col:58> 'global_State *' <LValueToRValue>
    |     `-ParenExpr 0x55ef1b1d9978 <col:56, col:58> 'global_State *' lvalue
    |       `-DeclRefExpr 0x55ef1b1d9950 <lgc.c:165:18> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
    `-DeclRefExpr 0x55ef1b1d99e8 <col:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B35.2]([B35.6], [B35.8], [B35.15])
   Preds (1): B36
   Succs (1): B33

 [B36]
   1: DeclRefExpr 0x55ef1b1d95f8 <lgc.c:165:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   2: ImplicitCastExpr 0x55ef1b1d9620 <lgc.c:165:21> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B36.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
`-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B36.2]->metatable
   4: ImplicitCastExpr 0x55ef1b1d9690 <./ltm.h:42:4, col:7> 'struct Table *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
  `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
    `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
([B36.3]) (ImplicitCastExpr, LValueToRValue, struct Table *)
   5: MemberExpr 0x55ef1b1d96a8 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x55ef1b1917a8
`-ImplicitCastExpr 0x55ef1b1d9690 <col:4, col:7> 'struct Table *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
    `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
      `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B36.4]->flags
   6: ImplicitCastExpr 0x55ef1b1d9790 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55ef1b1d96a8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x55ef1b1917a8
  `-ImplicitCastExpr 0x55ef1b1d9690 <col:4, col:7> 'struct Table *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
      `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
        `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B36.5] (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x55ef1b1d97a8 <./ltm.h:42:4, col:10> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1d9790 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55ef1b1d96a8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x55ef1b1917a8
    `-ImplicitCastExpr 0x55ef1b1d9690 <col:4, col:7> 'struct Table *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
        `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
          `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
            `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B36.6] (ImplicitCastExpr, IntegralCast, unsigned int)
   8: IntegerLiteral 0x55ef1b1d96e0 <./ltm.h:42:19> 'unsigned int' 1
1U
   9: DeclRefExpr 0x55ef1b1d9700 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
TM_MODE
  10: BinaryOperator 0x55ef1b1d9748 <./ltm.h:42:19, col:25> 'unsigned int' '<<'
|-IntegerLiteral 0x55ef1b1d96e0 <col:19> 'unsigned int' 1
`-ParenExpr 0x55ef1b1d9728 <col:23, col:25> 'int'
  `-DeclRefExpr 0x55ef1b1d9700 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B36.8] << ([B36.9])
  11: BinaryOperator 0x55ef1b1d97c0 <./ltm.h:42:4, col:26> 'unsigned int' '&'
|-ImplicitCastExpr 0x55ef1b1d97a8 <col:4, col:10> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1d9790 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55ef1b1d96a8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x55ef1b1917a8
|     `-ImplicitCastExpr 0x55ef1b1d9690 <col:4, col:7> 'struct Table *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1d9670 <col:4, col:7> 'struct Table *' lvalue
|         `-MemberExpr 0x55ef1b1d9638 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
|           `-ImplicitCastExpr 0x55ef1b1d9620 <col:21> 'Table *' <LValueToRValue>
|             `-DeclRefExpr 0x55ef1b1d95f8 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ParenExpr 0x55ef1b1d9770 <./ltm.h:42:18, col:26> 'unsigned int'
  `-BinaryOperator 0x55ef1b1d9748 <col:19, col:25> 'unsigned int' '<<'
    |-IntegerLiteral 0x55ef1b1d96e0 <col:19> 'unsigned int' 1
    `-ParenExpr 0x55ef1b1d9728 <col:23, col:25> 'int'
      `-DeclRefExpr 0x55ef1b1d9700 <lgc.c:165:35> 'int' EnumConstant 0x55ef1b194090 'TM_MODE' 'int'
[B36.7] & ([B36.10])
   T: ([B36.11]) ? ... : ...
   Preds (1): B37
   Succs (2): B34 B35

 [B37]
   1: DeclRefExpr 0x55ef1b1d9408 <lgc.c:165:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   2: ImplicitCastExpr 0x55ef1b1d9430 <lgc.c:165:21> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d9408 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B37.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x55ef1b1d9448 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
`-ImplicitCastExpr 0x55ef1b1d9430 <col:21> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d9408 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B37.2]->metatable
   4: ImplicitCastExpr 0x55ef1b1d9520 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d9480 <col:26, col:29> 'struct Table *' lvalue
  `-MemberExpr 0x55ef1b1d9448 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
    `-ImplicitCastExpr 0x55ef1b1d9430 <col:21> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1d9408 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
([B37.3]) (ImplicitCastExpr, LValueToRValue, struct Table *)
   5: IntegerLiteral 0x55ef1b1d94a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x55ef1b1d94d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55ef1b1d94a0 <col:24> 'int' 0
(void *)[B37.5] (CStyleCastExpr, NullToPointer, void *)
   7: ImplicitCastExpr 0x55ef1b1d9538 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
`-ParenExpr 0x55ef1b1d9500 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55ef1b1d94d8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55ef1b1d94a0 <col:24> 'int' 0
([B37.6]) (ImplicitCastExpr, BitCast, struct Table *)
   8: BinaryOperator 0x55ef1b1d9550 <./ltm.h:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55ef1b1d9520 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
| `-ParenExpr 0x55ef1b1d9480 <col:26, col:29> 'struct Table *' lvalue
|   `-MemberExpr 0x55ef1b1d9448 <lgc.c:165:21, col:24> 'struct Table *' lvalue ->metatable 0x55ef1b191870
|     `-ImplicitCastExpr 0x55ef1b1d9430 <col:21> 'Table *' <LValueToRValue>
|       `-DeclRefExpr 0x55ef1b1d9408 <col:21> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ImplicitCastExpr 0x55ef1b1d9538 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
  `-ParenExpr 0x55ef1b1d9500 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55ef1b1d94d8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55ef1b1d94a0 <col:24> 'int' 0
[B37.4] == [B37.7]
   T: [B37.8] ? ... : ...
   Preds (3): B38 B39 B40
   Succs (2): B32 B36

 [B38]
   1: DeclRefExpr 0x55ef1b1d9118 <lgc.c:56:3> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
   2: ImplicitCastExpr 0x55ef1b1d92e0 <lgc.c:56:3> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1d9118 <col:3> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B38.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
   3: DeclRefExpr 0x55ef1b1d9140 <lgc.c:164:16> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b1d9330 <lgc.c:164:16> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d9140 <col:16> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
[B38.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclRefExpr 0x55ef1b1d9168 <lgc.c:164:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   6: ImplicitCastExpr 0x55ef1b1d9190 <lgc.c:164:19> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d9168 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B38.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: MemberExpr 0x55ef1b1d91a8 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
`-ImplicitCastExpr 0x55ef1b1d9190 <col:19> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d9168 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B38.6]->metatable
   8: ImplicitCastExpr 0x55ef1b1d9260 <./llimits.h:75:26, col:30> 'struct Table *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d9240 <col:26, col:30> 'struct Table *' lvalue
  `-ParenExpr 0x55ef1b1d91e0 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
    `-MemberExpr 0x55ef1b1d91a8 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
      `-ImplicitCastExpr 0x55ef1b1d9190 <col:19> 'Table *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1d9168 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
(([B38.7])) (ImplicitCastExpr, LValueToRValue, struct Table *)
   9: CStyleCastExpr 0x55ef1b1d9278 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b1d9260 <col:26, col:30> 'struct Table *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d9240 <col:26, col:30> 'struct Table *' lvalue
    `-ParenExpr 0x55ef1b1d91e0 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
      `-MemberExpr 0x55ef1b1d91a8 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
        `-ImplicitCastExpr 0x55ef1b1d9190 <col:19> 'Table *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1d9168 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
(GCObject *)[B38.8] (CStyleCastExpr, BitCast, GCObject *)
  10: CallExpr 0x55ef1b1d92f8 <lgc.c:56:3, col:33> 'void'
|-ImplicitCastExpr 0x55ef1b1d92e0 <col:3> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1d9118 <col:3> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b1d9330 <line:164:16> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1d9140 <col:16> 'global_State *' lvalue ParmVar 0x55ef1b1d8748 'g' 'global_State *'
`-ParenExpr 0x55ef1b1d92c0 <./lstate.h:162:20, col:42> 'GCObject *'
  `-ParenExpr 0x55ef1b1d92a0 <./llimits.h:75:22, col:31> 'GCObject *'
    `-CStyleCastExpr 0x55ef1b1d9278 <col:23, col:30> 'GCObject *' <BitCast>
      `-ImplicitCastExpr 0x55ef1b1d9260 <col:26, col:30> 'struct Table *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1d9240 <col:26, col:30> 'struct Table *' lvalue
          `-ParenExpr 0x55ef1b1d91e0 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
            `-MemberExpr 0x55ef1b1d91a8 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
              `-ImplicitCastExpr 0x55ef1b1d9190 <col:19> 'Table *' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b1d9168 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B38.2]([B38.4], (([B38.9])))
   Preds (1): B39
   Succs (1): B37

 [B39]
   1: DeclRefExpr 0x55ef1b1d8ca0 <lgc.c:164:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   2: ImplicitCastExpr 0x55ef1b1d8cc8 <lgc.c:164:19> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B39.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
`-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B39.2]->metatable
   4: ImplicitCastExpr 0x55ef1b1d8d98 <./llimits.h:75:26, col:30> 'struct Table *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d8d78 <col:26, col:30> 'struct Table *' lvalue
  `-ParenExpr 0x55ef1b1d8d18 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
    `-MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
      `-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
(([B39.3])) (ImplicitCastExpr, LValueToRValue, struct Table *)
   5: CStyleCastExpr 0x55ef1b1d8db0 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b1d8d98 <col:26, col:30> 'struct Table *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d8d78 <col:26, col:30> 'struct Table *' lvalue
    `-ParenExpr 0x55ef1b1d8d18 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
      `-MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
        `-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
(GCObject *)[B39.4] (CStyleCastExpr, BitCast, GCObject *)
   6: MemberExpr 0x55ef1b1d8e38 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ParenExpr 0x55ef1b1d8e18 <col:35, col:37> 'GCObject *'
  `-ParenExpr 0x55ef1b1d8df8 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x55ef1b1d8dd8 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x55ef1b1d8db0 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x55ef1b1d8d98 <col:26, col:30> 'struct Table *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1d8d78 <col:26, col:30> 'struct Table *' lvalue
            `-ParenExpr 0x55ef1b1d8d18 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
              `-MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
                `-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
                  `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
((([B39.5])))->gch
   7: MemberExpr 0x55ef1b1d8e70 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1d8e38 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ParenExpr 0x55ef1b1d8e18 <col:35, col:37> 'GCObject *'
    `-ParenExpr 0x55ef1b1d8df8 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x55ef1b1d8dd8 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x55ef1b1d8db0 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x55ef1b1d8d98 <col:26, col:30> 'struct Table *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1d8d78 <col:26, col:30> 'struct Table *' lvalue
              `-ParenExpr 0x55ef1b1d8d18 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
                `-MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
                  `-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
                    `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B39.6].marked
   8: ImplicitCastExpr 0x55ef1b1d90a0 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1d8ea8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1d8e70 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1d8e38 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ParenExpr 0x55ef1b1d8e18 <col:35, col:37> 'GCObject *'
        `-ParenExpr 0x55ef1b1d8df8 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x55ef1b1d8dd8 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x55ef1b1d8db0 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x55ef1b1d8d98 <col:26, col:30> 'struct Table *' <LValueToRValue>
                `-ParenExpr 0x55ef1b1d8d78 <col:26, col:30> 'struct Table *' lvalue
                  `-ParenExpr 0x55ef1b1d8d18 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
                    `-MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
                      `-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
                        `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
([B39.7]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   9: ImplicitCastExpr 0x55ef1b1d90b8 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1d90a0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d8ea8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1d8e70 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b1d8e38 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ParenExpr 0x55ef1b1d8e18 <col:35, col:37> 'GCObject *'
          `-ParenExpr 0x55ef1b1d8df8 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x55ef1b1d8dd8 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x55ef1b1d8db0 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x55ef1b1d8d98 <col:26, col:30> 'struct Table *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b1d8d78 <col:26, col:30> 'struct Table *' lvalue
                    `-ParenExpr 0x55ef1b1d8d18 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
                      `-MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
                        `-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
                          `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B39.8] (ImplicitCastExpr, IntegralCast, int)
  10: IntegerLiteral 0x55ef1b1d8ec8 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x55ef1b1d8ee8 <./lgc.h:54:19> 'int' 0
0
  12: BinaryOperator 0x55ef1b1d8f28 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1d8ec8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1d8f08 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1d8ee8 <line:54:19> 'int' 0
[B39.10] << ([B39.11])
  13: IntegerLiteral 0x55ef1b1d8f70 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x55ef1b1d8f90 <./lgc.h:55:19> 'int' 1
1
  15: BinaryOperator 0x55ef1b1d8fd0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1d8f70 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1d8fb0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1d8f90 <line:55:19> 'int' 1
[B39.13] << ([B39.14])
  16: BinaryOperator 0x55ef1b1d9018 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1d8f50 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1d8f28 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1d8ec8 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1d8f08 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1d8ee8 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1d8ff8 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1d8fd0 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1d8f70 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1d8fb0 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1d8f90 <line:55:19> 'int' 1
([B39.12]) | ([B39.15])
  17: BinaryOperator 0x55ef1b1d90d0 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1d90b8 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1d90a0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1d8ea8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1d8e70 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b1d8e38 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ParenExpr 0x55ef1b1d8e18 <col:35, col:37> 'GCObject *'
|           `-ParenExpr 0x55ef1b1d8df8 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x55ef1b1d8dd8 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x55ef1b1d8db0 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x55ef1b1d8d98 <col:26, col:30> 'struct Table *' <LValueToRValue>
|                   `-ParenExpr 0x55ef1b1d8d78 <col:26, col:30> 'struct Table *' lvalue
|                     `-ParenExpr 0x55ef1b1d8d18 <./lstate.h:162:38, col:40> 'struct Table *' lvalue
|                       `-MemberExpr 0x55ef1b1d8ce0 <lgc.c:164:19, col:22> 'struct Table *' lvalue ->metatable 0x55ef1b191870
|                         `-ImplicitCastExpr 0x55ef1b1d8cc8 <col:19> 'Table *' <LValueToRValue>
|                           `-DeclRefExpr 0x55ef1b1d8ca0 <col:19> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
`-ParenExpr 0x55ef1b1d9080 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1d9060 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b1d9040 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1d9018 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1d8f50 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1d8f28 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1d8ec8 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1d8f08 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1d8ee8 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1d8ff8 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1d8fd0 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1d8f70 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1d8fb0 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1d8f90 <line:55:19> 'int' 1
[B39.9] & ((([B39.16])))
   T: if ([B39.17])
   Preds (1): B40
   Succs (2): B38 B37

 [B40]
   1: DeclStmt 0x55ef1b1d8a00 <lgc.c:159:3, col:8>col:7
`-VarDecl 0x55ef1b1d89a0 <col:3, col:7> col:7 used i 'int'
int i;
   2: IntegerLiteral 0x55ef1b1d8a90 <lgc.c:160:17> 'int' 0
0
   3: DeclStmt 0x55ef1b1d8ab0 <lgc.c:160:3, col:18>col:7
`-VarDecl 0x55ef1b1d8a30 <col:3, col:17> col:7 used weakkey 'int' cinit
  `-IntegerLiteral 0x55ef1b1d8a90 <col:17> 'int' 0
int weakkey = 0;
   4: IntegerLiteral 0x55ef1b1d8b40 <lgc.c:161:19> 'int' 0
0
   5: DeclStmt 0x55ef1b1d8b60 <lgc.c:161:3, col:20>col:7
`-VarDecl 0x55ef1b1d8ae0 <col:3, col:19> col:7 used weakvalue 'int' cinit
  `-IntegerLiteral 0x55ef1b1d8b40 <col:19> 'int' 0
int weakvalue = 0;
   6: DeclStmt 0x55ef1b1d8be8 <lgc.c:162:3, col:21>col:17
`-VarDecl 0x55ef1b1d8b88 <col:3, col:17> col:17 used mode 'const TValue *'
const TValue *mode;
   7: DeclRefExpr 0x55ef1b1d8c00 <lgc.c:163:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
h
   8: ImplicitCastExpr 0x55ef1b1d8c28 <lgc.c:163:7> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d8c00 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B40.7] (ImplicitCastExpr, LValueToRValue, Table *)
   9: MemberExpr 0x55ef1b1d8c50 <lgc.c:163:7, col:10> 'struct Table *' lvalue ->metatable 0x55ef1b191870
`-ImplicitCastExpr 0x55ef1b1d8c28 <col:7> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d8c00 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B40.8]->metatable
  10: ImplicitCastExpr 0x55ef1b1d8c88 <lgc.c:163:7, col:10> 'struct Table *' <LValueToRValue>
`-MemberExpr 0x55ef1b1d8c50 <col:7, col:10> 'struct Table *' lvalue ->metatable 0x55ef1b191870
  `-ImplicitCastExpr 0x55ef1b1d8c28 <col:7> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1d8c00 <col:7> 'Table *' lvalue ParmVar 0x55ef1b1d87b8 'h' 'Table *'
[B40.9] (ImplicitCastExpr, LValueToRValue, struct Table *)
   T: if [B40.10]
   Preds (1): B41
   Succs (2): B39 B37

 [B0 (EXIT)]
   Preds (2): B1 B24
