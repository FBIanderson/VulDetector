static int costatus(lua_State *L, lua_State *co)
 [B11 (ENTRY)]
   Succs (1): B10

 [B1]
   1: DeclRefExpr 0x562da282a4c8 <lbaselib.c:492:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5b70 'lua_status' 'int (lua_State *)':'int (lua_State *)'
lua_status
   2: ImplicitCastExpr 0x562da282a518 <lbaselib.c:492:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282a4c8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5b70 'lua_status' 'int (lua_State *)':'int (lua_State *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   3: DeclRefExpr 0x562da282a4f0 <lbaselib.c:492:22> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
co
   4: ImplicitCastExpr 0x562da282a560 <lbaselib.c:492:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282a4f0 <col:22> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da282a530 <lbaselib.c:492:11, col:24> 'int'
|-ImplicitCastExpr 0x562da282a518 <col:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282a4c8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5b70 'lua_status' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da282a560 <col:22> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da282a4f0 <col:22> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
[B1.2]([B1.4])
   T: switch [B1.5]
   Preds (1): B10
   Succs (3): B7 B8 B2

 [B2]
  default:
   1: IntegerLiteral 0x562da282aab8 <lbaselib.c:485:17> 'int' 3
3
   2: ReturnStmt 0x562da282aad8 <lbaselib.c:505:7, line:485:17>
`-IntegerLiteral 0x562da282aab8 <col:17> 'int' 3
return [B2.1];
   Preds (1): B1
   Succs (1): B0

 [B3]
   1: IntegerLiteral 0x562da282a9f0 <lbaselib.c:483:16> 'int' 1
1
   2: ReturnStmt 0x562da282aa10 <lbaselib.c:502:9, line:483:16>
`-IntegerLiteral 0x562da282a9f0 <col:16> 'int' 1
return [B3.1];
   Preds (1): B5
   Succs (1): B0

 [B4]
   1: IntegerLiteral 0x562da282a9b8 <lbaselib.c:485:17> 'int' 3
3
   2: ReturnStmt 0x562da282a9d8 <lbaselib.c:500:11, line:485:17>
`-IntegerLiteral 0x562da282a9b8 <col:17> 'int' 3
return [B4.1];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x562da282a8c0 <lbaselib.c:499:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
   2: ImplicitCastExpr 0x562da282a910 <lbaselib.c:499:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282a8c0 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   3: DeclRefExpr 0x562da282a8e8 <lbaselib.c:499:27> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
co
   4: ImplicitCastExpr 0x562da282a958 <lbaselib.c:499:27> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282a8e8 <col:27> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da282a928 <lbaselib.c:499:16, col:29> 'int'
|-ImplicitCastExpr 0x562da282a910 <col:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282a8c0 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da282a958 <col:27> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da282a8e8 <col:27> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
[B5.2]([B5.4])
   6: IntegerLiteral 0x562da282a970 <lbaselib.c:499:34> 'int' 0
0
   7: BinaryOperator 0x562da282a990 <lbaselib.c:499:16, col:34> 'int' '=='
|-CallExpr 0x562da282a928 <col:16, col:29> 'int'
| |-ImplicitCastExpr 0x562da282a910 <col:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da282a8c0 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
| `-ImplicitCastExpr 0x562da282a958 <col:27> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x562da282a8e8 <col:27> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
`-IntegerLiteral 0x562da282a970 <col:34> 'int' 0
[B5.5] == [B5.6]
   T: if [B5.7]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: IntegerLiteral 0x562da282a888 <lbaselib.c:484:16> 'int' 2
2
   2: ReturnStmt 0x562da282a8a8 <lbaselib.c:498:9, line:484:16>
`-IntegerLiteral 0x562da282a888 <col:16> 'int' 2
return [B6.1];
   Preds (1): B7
   Succs (1): B0

 [B7]
  case 0:
   1: DeclStmt 0x562da282a700 <lbaselib.c:496:7, col:19>col:17
`-VarDecl 0x562da282a6a0 <col:7, col:17> col:17 used ar 'lua_Debug':'struct lua_Debug'
lua_Debug ar;
   2: DeclRefExpr 0x562da282a718 <lbaselib.c:497:11> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
lua_getstack
   3: ImplicitCastExpr 0x562da282a7d0 <lbaselib.c:497:11> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282a718 <col:11> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
[B7.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, lua_Debug *))
   4: DeclRefExpr 0x562da282a740 <lbaselib.c:497:24> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
co
   5: ImplicitCastExpr 0x562da282a828 <lbaselib.c:497:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282a740 <col:24> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
[B7.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x562da282a768 <lbaselib.c:497:28> 'int' 0
0
   7: DeclRefExpr 0x562da282a788 <lbaselib.c:497:32> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da282a6a0 'ar' 'lua_Debug':'struct lua_Debug'
ar
   8: UnaryOperator 0x562da282a7b0 <lbaselib.c:497:31, col:32> 'lua_Debug *' prefix '&'
`-DeclRefExpr 0x562da282a788 <col:32> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da282a6a0 'ar' 'lua_Debug':'struct lua_Debug'
&[B7.7]
   9: CallExpr 0x562da282a7e8 <lbaselib.c:497:11, col:34> 'int'
|-ImplicitCastExpr 0x562da282a7d0 <col:11> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282a718 <col:11> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
|-ImplicitCastExpr 0x562da282a828 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282a740 <col:24> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
|-IntegerLiteral 0x562da282a768 <col:28> 'int' 0
`-UnaryOperator 0x562da282a7b0 <col:31, col:32> 'lua_Debug *' prefix '&'
  `-DeclRefExpr 0x562da282a788 <col:32> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da282a6a0 'ar' 'lua_Debug':'struct lua_Debug'
[B7.3]([B7.5], [B7.6], [B7.8])
  10: IntegerLiteral 0x562da282a840 <lbaselib.c:497:38> 'int' 0
0
  11: BinaryOperator 0x562da282a860 <lbaselib.c:497:11, col:38> 'int' '>'
|-CallExpr 0x562da282a7e8 <col:11, col:34> 'int'
| |-ImplicitCastExpr 0x562da282a7d0 <col:11> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da282a718 <col:11> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
| |-ImplicitCastExpr 0x562da282a828 <col:24> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x562da282a740 <col:24> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
| |-IntegerLiteral 0x562da282a768 <col:28> 'int' 0
| `-UnaryOperator 0x562da282a7b0 <col:31, col:32> 'lua_Debug *' prefix '&'
|   `-DeclRefExpr 0x562da282a788 <col:32> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da282a6a0 'ar' 'lua_Debug':'struct lua_Debug'
`-IntegerLiteral 0x562da282a840 <col:38> 'int' 0
[B7.9] > [B7.10]
   T: if [B7.11]
   Preds (1): B1
   Succs (2): B6 B5

 [B8]
  case 1:
   1: IntegerLiteral 0x562da282a600 <lbaselib.c:483:16> 'int' 1
1
   2: ReturnStmt 0x562da282a620 <lbaselib.c:494:7, line:483:16>
`-IntegerLiteral 0x562da282a600 <col:16> 'int' 1
return [B8.1];
   Preds (1): B1
   Succs (1): B0

 [B9]
   1: IntegerLiteral 0x562da282a458 <lbaselib.c:482:16> 'int' 0
0
   2: ReturnStmt 0x562da282a478 <lbaselib.c:491:16, line:482:16>
`-IntegerLiteral 0x562da282a458 <col:16> 'int' 0
return [B9.1];
   Preds (1): B10
   Succs (1): B0

 [B10]
   1: DeclRefExpr 0x562da28291e8 <lbaselib.c:491:7> 'lua_State *' lvalue ParmVar 0x562da2828fa8 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x562da282a400 <lbaselib.c:491:7> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da28291e8 <col:7> 'lua_State *' lvalue ParmVar 0x562da2828fa8 'L' 'lua_State *'
[B10.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: DeclRefExpr 0x562da2829210 <lbaselib.c:491:12> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
co
   4: ImplicitCastExpr 0x562da282a418 <lbaselib.c:491:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2829210 <col:12> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: BinaryOperator 0x562da282a430 <lbaselib.c:491:7, col:12> 'int' '=='
|-ImplicitCastExpr 0x562da282a400 <col:7> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da28291e8 <col:7> 'lua_State *' lvalue ParmVar 0x562da2828fa8 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da282a418 <col:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da2829210 <col:12> 'lua_State *' lvalue ParmVar 0x562da2829018 'co' 'lua_State *'
[B10.2] == [B10.4]
   T: if [B10.5]
   Preds (1): B11
   Succs (2): B9 B1

 [B0 (EXIT)]
   Preds (6): B2 B3 B4 B6 B8 B9
