static int math_rad(lua_State *L)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x563b15770158 <lmathlib.c:135:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   2: ImplicitCastExpr 0x563b15771880 <lmathlib.c:135:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b15770158 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   3: DeclRefExpr 0x563b15770180 <lmathlib.c:135:18> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x563b157718d0 <lmathlib.c:135:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15770180 <col:18> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563b157701a8 <lmathlib.c:135:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
luaL_checknumber
   6: ImplicitCastExpr 0x563b15771748 <lmathlib.c:135:21> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b157701a8 <col:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B1.5] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   7: DeclRefExpr 0x563b15771700 <lmathlib.c:135:38> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x563b15771798 <lmathlib.c:135:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15771700 <col:38> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
[B1.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: IntegerLiteral 0x563b15771728 <lmathlib.c:135:41> 'int' 1
1
  10: CallExpr 0x563b15771760 <lmathlib.c:135:21, col:42> 'lua_Number':'double'
|-ImplicitCastExpr 0x563b15771748 <col:21> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b157701a8 <col:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x563b15771798 <col:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15771700 <col:38> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
`-IntegerLiteral 0x563b15771728 <col:41> 'int' 1
[B1.6]([B1.8], [B1.9])
  11: FloatingLiteral 0x563b157717b0 <lmathlib.c:21:13> 'double' 3.141593e+00
3.1415926535897931
  12: FloatingLiteral 0x563b157717f0 <lmathlib.c:22:32> 'double' 1.800000e+02
180.
  13: BinaryOperator 0x563b15771810 <lmathlib.c:21:12, line:22:32> 'double' '/'
|-ParenExpr 0x563b157717d0 <line:21:12, col:35> 'double'
| `-FloatingLiteral 0x563b157717b0 <col:13> 'double' 3.141593e+00
`-FloatingLiteral 0x563b157717f0 <line:22:32> 'double' 1.800000e+02
([B1.11]) / [B1.12]
  14: BinaryOperator 0x563b15771858 <lmathlib.c:135:21, line:22:37> 'double' '*'
|-CallExpr 0x563b15771760 <line:135:21, col:42> 'lua_Number':'double'
| |-ImplicitCastExpr 0x563b15771748 <col:21> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563b157701a8 <col:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
| |-ImplicitCastExpr 0x563b15771798 <col:38> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563b15771700 <col:38> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
| `-IntegerLiteral 0x563b15771728 <col:41> 'int' 1
`-ParenExpr 0x563b15771838 <line:22:28, col:37> 'double'
  `-BinaryOperator 0x563b15771810 <line:21:12, line:22:32> 'double' '/'
    |-ParenExpr 0x563b157717d0 <line:21:12, col:35> 'double'
    | `-FloatingLiteral 0x563b157717b0 <col:13> 'double' 3.141593e+00
    `-FloatingLiteral 0x563b157717f0 <line:22:32> 'double' 1.800000e+02
[B1.10] * ([B1.13])
  15: CallExpr 0x563b15771898 <lmathlib.c:135:3, col:62> 'void'
|-ImplicitCastExpr 0x563b15771880 <col:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b15770158 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x563b157718d0 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15770180 <col:18> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
`-BinaryOperator 0x563b15771858 <col:21, line:22:37> 'double' '*'
  |-CallExpr 0x563b15771760 <line:135:21, col:42> 'lua_Number':'double'
  | |-ImplicitCastExpr 0x563b15771748 <col:21> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x563b157701a8 <col:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
  | |-ImplicitCastExpr 0x563b15771798 <col:38> 'lua_State *' <LValueToRValue>
  | | `-DeclRefExpr 0x563b15771700 <col:38> 'lua_State *' lvalue ParmVar 0x563b15770020 'L' 'lua_State *'
  | `-IntegerLiteral 0x563b15771728 <col:41> 'int' 1
  `-ParenExpr 0x563b15771838 <line:22:28, col:37> 'double'
    `-BinaryOperator 0x563b15771810 <line:21:12, line:22:32> 'double' '/'
      |-ParenExpr 0x563b157717d0 <line:21:12, col:35> 'double'
      | `-FloatingLiteral 0x563b157717b0 <col:13> 'double' 3.141593e+00
      `-FloatingLiteral 0x563b157717f0 <line:22:32> 'double' 1.800000e+02
[B1.2]([B1.4], [B1.14])
  16: IntegerLiteral 0x563b157718e8 <lmathlib.c:136:10> 'int' 1
1
  17: ReturnStmt 0x563b15771908 <lmathlib.c:136:3, col:10>
`-IntegerLiteral 0x563b157718e8 <col:10> 'int' 1
return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
