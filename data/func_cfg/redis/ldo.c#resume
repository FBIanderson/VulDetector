static void resume(lua_State *L, void *ud)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x55f42eede240 <ldo.c:405:3> 'void (lua_State *, int)' Function 0x55f42eebb1c8 'luaV_execute' 'void (lua_State *, int)'
luaV_execute
   2: ImplicitCastExpr 0x55f42eede4a8 <ldo.c:405:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eede240 <col:3> 'void (lua_State *, int)' Function 0x55f42eebb1c8 'luaV_execute' 'void (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55f42eede268 <ldo.c:405:16> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f42eede4f8 <ldo.c:405:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eede268 <col:16> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55f42eede290 <ldo.c:405:28> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eede2b8 <ldo.c:405:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eede290 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x55f42eede2d0 <ldo.c:405:28, col:31> 'CallInfo *' lvalue ->ci 0x55f42ee88928
`-ImplicitCastExpr 0x55f42eede2b8 <col:28> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eede290 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.6]->ci
   8: ImplicitCastExpr 0x55f42eede380 <ldo.c:405:28, col:31> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x55f42eede2d0 <col:28, col:31> 'CallInfo *' lvalue ->ci 0x55f42ee88928
  `-ImplicitCastExpr 0x55f42eede2b8 <col:28> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eede290 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.7] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   9: DeclRefExpr 0x55f42eede308 <ldo.c:405:36> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x55f42eede330 <ldo.c:405:36> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eede308 <col:36> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: MemberExpr 0x55f42eede348 <ldo.c:405:36, col:39> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
`-ImplicitCastExpr 0x55f42eede330 <col:36> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eede308 <col:36> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.10]->base_ci
  12: ImplicitCastExpr 0x55f42eede398 <ldo.c:405:36, col:39> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x55f42eede348 <col:36, col:39> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
  `-ImplicitCastExpr 0x55f42eede330 <col:36> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eede308 <col:36> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.11] (ImplicitCastExpr, LValueToRValue, CallInfo *)
  13: BinaryOperator 0x55f42eede3b0 <ldo.c:405:28, col:39> 'long' '-'
|-ImplicitCastExpr 0x55f42eede380 <col:28, col:31> 'CallInfo *' <LValueToRValue>
| `-MemberExpr 0x55f42eede2d0 <col:28, col:31> 'CallInfo *' lvalue ->ci 0x55f42ee88928
|   `-ImplicitCastExpr 0x55f42eede2b8 <col:28> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x55f42eede290 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eede398 <col:36, col:39> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x55f42eede348 <col:36, col:39> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
    `-ImplicitCastExpr 0x55f42eede330 <col:36> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eede308 <col:36> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.8] - [B1.12]
  14: CStyleCastExpr 0x55f42eede460 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x55f42eede440 <col:26, col:30> 'long'
  `-ParenExpr 0x55f42eede3d8 <line:80:31, col:33> 'long'
    `-BinaryOperator 0x55f42eede3b0 <ldo.c:405:28, col:39> 'long' '-'
      |-ImplicitCastExpr 0x55f42eede380 <col:28, col:31> 'CallInfo *' <LValueToRValue>
      | `-MemberExpr 0x55f42eede2d0 <col:28, col:31> 'CallInfo *' lvalue ->ci 0x55f42ee88928
      |   `-ImplicitCastExpr 0x55f42eede2b8 <col:28> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x55f42eede290 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
      `-ImplicitCastExpr 0x55f42eede398 <col:36, col:39> 'CallInfo *' <LValueToRValue>
        `-MemberExpr 0x55f42eede348 <col:36, col:39> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
          `-ImplicitCastExpr 0x55f42eede330 <col:36> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x55f42eede308 <col:36> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
(int)(([B1.13])) (CStyleCastExpr, IntegralCast, int)
  15: CallExpr 0x55f42eede4c0 <ldo.c:405:3, col:47> 'void'
|-ImplicitCastExpr 0x55f42eede4a8 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eede240 <col:3> 'void (lua_State *, int)' Function 0x55f42eebb1c8 'luaV_execute' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x55f42eede4f8 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eede268 <col:16> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
`-ParenExpr 0x55f42eede488 <./llimits.h:75:22, col:31> 'int'
  `-CStyleCastExpr 0x55f42eede460 <col:23, col:30> 'int' <IntegralCast>
    `-ParenExpr 0x55f42eede440 <col:26, col:30> 'long'
      `-ParenExpr 0x55f42eede3d8 <line:80:31, col:33> 'long'
        `-BinaryOperator 0x55f42eede3b0 <ldo.c:405:28, col:39> 'long' '-'
          |-ImplicitCastExpr 0x55f42eede380 <col:28, col:31> 'CallInfo *' <LValueToRValue>
          | `-MemberExpr 0x55f42eede2d0 <col:28, col:31> 'CallInfo *' lvalue ->ci 0x55f42ee88928
          |   `-ImplicitCastExpr 0x55f42eede2b8 <col:28> 'lua_State *' <LValueToRValue>
          |     `-DeclRefExpr 0x55f42eede290 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
          `-ImplicitCastExpr 0x55f42eede398 <col:36, col:39> 'CallInfo *' <LValueToRValue>
            `-MemberExpr 0x55f42eede348 <col:36, col:39> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
              `-ImplicitCastExpr 0x55f42eede330 <col:36> 'lua_State *' <LValueToRValue>
                `-DeclRefExpr 0x55f42eede308 <col:36> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B1.2]([B1.4], ([B1.14]))
   Preds (4): B2 B3 B4 B7
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55f42eede0a0 <ldo.c:403:17> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eede0c8 <ldo.c:403:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eede0a0 <col:17> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eede0e0 <ldo.c:403:17, col:20> 'CallInfo *' lvalue ->ci 0x55f42ee88928
`-ImplicitCastExpr 0x55f42eede0c8 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eede0a0 <col:17> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.2]->ci
   4: ImplicitCastExpr 0x55f42eede118 <ldo.c:403:17, col:20> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x55f42eede0e0 <col:17, col:20> 'CallInfo *' lvalue ->ci 0x55f42ee88928
  `-ImplicitCastExpr 0x55f42eede0c8 <col:17> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eede0a0 <col:17> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   5: MemberExpr 0x55f42eede130 <ldo.c:403:17, col:24> 'StkId':'TValue *' lvalue ->base 0x55f42ee82c20
`-ImplicitCastExpr 0x55f42eede118 <col:17, col:20> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x55f42eede0e0 <col:17, col:20> 'CallInfo *' lvalue ->ci 0x55f42ee88928
    `-ImplicitCastExpr 0x55f42eede0c8 <col:17> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eede0a0 <col:17> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.4]->base
   6: ImplicitCastExpr 0x55f42eede168 <ldo.c:403:17, col:24> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eede130 <col:17, col:24> 'StkId':'TValue *' lvalue ->base 0x55f42ee82c20
  `-ImplicitCastExpr 0x55f42eede118 <col:17, col:20> 'CallInfo *' <LValueToRValue>
    `-MemberExpr 0x55f42eede0e0 <col:17, col:20> 'CallInfo *' lvalue ->ci 0x55f42ee88928
      `-ImplicitCastExpr 0x55f42eede0c8 <col:17> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55f42eede0a0 <col:17> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: DeclRefExpr 0x55f42eede028 <ldo.c:403:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x55f42eede050 <ldo.c:403:7> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eede028 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: MemberExpr 0x55f42eede068 <ldo.c:403:7, col:10> 'StkId':'TValue *' lvalue ->base 0x55f42ee88780
`-ImplicitCastExpr 0x55f42eede050 <col:7> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eede028 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.8]->base
  10: BinaryOperator 0x55f42eede180 <ldo.c:403:7, col:24> 'StkId':'TValue *' '='
|-MemberExpr 0x55f42eede068 <col:7, col:10> 'StkId':'TValue *' lvalue ->base 0x55f42ee88780
| `-ImplicitCastExpr 0x55f42eede050 <col:7> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eede028 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eede168 <col:17, col:24> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55f42eede130 <col:17, col:24> 'StkId':'TValue *' lvalue ->base 0x55f42ee82c20
    `-ImplicitCastExpr 0x55f42eede118 <col:17, col:20> 'CallInfo *' <LValueToRValue>
      `-MemberExpr 0x55f42eede0e0 <col:17, col:20> 'CallInfo *' lvalue ->ci 0x55f42ee88928
        `-ImplicitCastExpr 0x55f42eede0c8 <col:17> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55f42eede0a0 <col:17> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B2.9] = [B2.6]
   Preds (1): B5
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55f42eeddec8 <ldo.c:400:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eeddef0 <ldo.c:400:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eeddec8 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eeddf08 <ldo.c:400:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
`-ImplicitCastExpr 0x55f42eeddef0 <col:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eeddec8 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.2]->ci
   4: ImplicitCastExpr 0x55f42eeddf40 <ldo.c:400:18, col:21> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x55f42eeddf08 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
  `-ImplicitCastExpr 0x55f42eeddef0 <col:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eeddec8 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   5: MemberExpr 0x55f42eeddf58 <ldo.c:400:18, col:25> 'StkId':'TValue *' lvalue ->top 0x55f42ee82cd0
`-ImplicitCastExpr 0x55f42eeddf40 <col:18, col:21> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x55f42eeddf08 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
    `-ImplicitCastExpr 0x55f42eeddef0 <col:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eeddec8 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.4]->top
   6: ImplicitCastExpr 0x55f42eeddf90 <ldo.c:400:18, col:25> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eeddf58 <col:18, col:25> 'StkId':'TValue *' lvalue ->top 0x55f42ee82cd0
  `-ImplicitCastExpr 0x55f42eeddf40 <col:18, col:21> 'CallInfo *' <LValueToRValue>
    `-MemberExpr 0x55f42eeddf08 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
      `-ImplicitCastExpr 0x55f42eeddef0 <col:18> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55f42eeddec8 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: DeclRefExpr 0x55f42eedde50 <ldo.c:400:9> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x55f42eedde78 <ldo.c:400:9> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eedde50 <col:9> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: MemberExpr 0x55f42eedde90 <ldo.c:400:9, col:12> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
`-ImplicitCastExpr 0x55f42eedde78 <col:9> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eedde50 <col:9> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.8]->top
  10: BinaryOperator 0x55f42eeddfa8 <ldo.c:400:9, col:25> 'StkId':'TValue *' '='
|-MemberExpr 0x55f42eedde90 <col:9, col:12> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
| `-ImplicitCastExpr 0x55f42eedde78 <col:9> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eedde50 <col:9> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eeddf90 <col:18, col:25> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55f42eeddf58 <col:18, col:25> 'StkId':'TValue *' lvalue ->top 0x55f42ee82cd0
    `-ImplicitCastExpr 0x55f42eeddf40 <col:18, col:21> 'CallInfo *' <LValueToRValue>
      `-MemberExpr 0x55f42eeddf08 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
        `-ImplicitCastExpr 0x55f42eeddef0 <col:18> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55f42eeddec8 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B3.9] = [B3.6]
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: IntegerLiteral 0x55f42eeddcc8 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55f42eeddd10 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eeddcc8 <col:31> 'int' 0
(void)[B4.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55f42eeddd58 <ldo.c:399:11> 'int (lua_State *, StkId)' Function 0x55f42eeda390 'luaD_poscall' 'int (lua_State *, StkId)'
luaD_poscall
   4: ImplicitCastExpr 0x55f42eedddd0 <ldo.c:399:11> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eeddd58 <col:11> 'int (lua_State *, StkId)' Function 0x55f42eeda390 'luaD_poscall' 'int (lua_State *, StkId)'
[B4.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, StkId))
   5: DeclRefExpr 0x55f42eeddd80 <ldo.c:399:24> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eedde20 <ldo.c:399:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eeddd80 <col:24> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B4.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x55f42eeddda8 <ldo.c:399:27> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
firstArg
   8: ImplicitCastExpr 0x55f42eedde38 <ldo.c:399:27> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eeddda8 <col:27> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
[B4.7] (ImplicitCastExpr, LValueToRValue, StkId)
   9: CallExpr 0x55f42eeddde8 <ldo.c:399:11, col:35> 'int'
|-ImplicitCastExpr 0x55f42eedddd0 <col:11> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eeddd58 <col:11> 'int (lua_State *, StkId)' Function 0x55f42eeda390 'luaD_poscall' 'int (lua_State *, StkId)'
|-ImplicitCastExpr 0x55f42eedde20 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eeddd80 <col:24> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eedde38 <col:27> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eeddda8 <col:27> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
[B4.4]([B4.6], [B4.8])
   T: if [B4.9]
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: IntegerLiteral 0x55f42eedd8a0 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55f42eedd8d0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eedd8a0 <col:31> 'int' 0
(void)[B5.1] (CStyleCastExpr, ToVoid, void)
   3: IntegerLiteral 0x55f42eedd990 <ldo.c:394:17> 'int' 0
0
   4: ImplicitCastExpr 0x55f42eedd9b0 <ldo.c:394:17> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x55f42eedd990 <col:17> 'int' 0
[B5.3] (ImplicitCastExpr, IntegralCast, lu_byte)
   5: DeclRefExpr 0x55f42eedd918 <ldo.c:394:5> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eedd940 <ldo.c:394:5> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eedd918 <col:5> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B5.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x55f42eedd958 <ldo.c:394:5, col:8> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
`-ImplicitCastExpr 0x55f42eedd940 <col:5> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eedd918 <col:5> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B5.6]->status
   8: BinaryOperator 0x55f42eedd9c8 <ldo.c:394:5, col:17> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55f42eedd958 <col:5, col:8> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
| `-ImplicitCastExpr 0x55f42eedd940 <col:5> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eedd918 <col:5> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eedd9b0 <col:17> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x55f42eedd990 <col:17> 'int' 0
[B5.7] = [B5.4]
   9: DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
ci
  10: ImplicitCastExpr 0x55f42eedda38 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
([B5.9]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
  11: MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
`-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
[B5.10]->func
  12: ImplicitCastExpr 0x55f42eeddaa8 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
    `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
([B5.11]) (ImplicitCastExpr, LValueToRValue, StkId)
  13: MemberExpr 0x55f42eeddac0 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
      `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
[B5.12]->value
  14: MemberExpr 0x55f42eeddaf8 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
`-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
  `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
        `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
[B5.13].gc
  15: ImplicitCastExpr 0x55f42eeddb30 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
  `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
    `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
          `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
[B5.14] (ImplicitCastExpr, LValueToRValue, GCObject *)
  16: MemberExpr 0x55f42eeddb48 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55f42ee89318
`-ImplicitCastExpr 0x55f42eeddb30 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
    `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
      `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
            `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
[B5.15]->cl
  17: UnaryOperator 0x55f42eeddb80 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x55f42eeddb48 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55f42ee89318
  `-ImplicitCastExpr 0x55f42eeddb30 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
      `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
        `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
              `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
&[B5.16]
  18: MemberExpr 0x55f42eeddbe0 <./lstate.h:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x55f42ee76b90
`-ParenExpr 0x55f42eeddbc0 <line:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x55f42eeddba0 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x55f42eeddb80 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x55f42eeddb48 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55f42ee89318
        `-ImplicitCastExpr 0x55f42eeddb30 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
            `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
              `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
                    `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
(([B5.17]))->c
  19: MemberExpr 0x55f42eeddc18 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x55f42ee74d88
`-MemberExpr 0x55f42eeddbe0 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x55f42ee76b90
  `-ParenExpr 0x55f42eeddbc0 <line:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x55f42eeddba0 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x55f42eeddb80 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x55f42eeddb48 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55f42ee89318
          `-ImplicitCastExpr 0x55f42eeddb30 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
              `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
                `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
                      `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
[B5.18].isC
  20: ImplicitCastExpr 0x55f42eeddc50 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55f42eeddc18 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x55f42ee74d88
  `-MemberExpr 0x55f42eeddbe0 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x55f42ee76b90
    `-ParenExpr 0x55f42eeddbc0 <line:60:21, col:41> 'union Closure *'
      `-ParenExpr 0x55f42eeddba0 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x55f42eeddb80 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x55f42eeddb48 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55f42ee89318
            `-ImplicitCastExpr 0x55f42eeddb30 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
                `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
                  `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
                        `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                          `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
                            `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
[B5.19] (ImplicitCastExpr, LValueToRValue, lu_byte)
  21: UnaryOperator 0x55f42eeddc68 <./lstate.h:61:22, col:38> 'int' prefix '!'
`-ImplicitCastExpr 0x55f42eeddc50 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55f42eeddc18 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x55f42ee74d88
    `-MemberExpr 0x55f42eeddbe0 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x55f42ee76b90
      `-ParenExpr 0x55f42eeddbc0 <line:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x55f42eeddba0 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x55f42eeddb80 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x55f42eeddb48 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55f42ee89318
              `-ImplicitCastExpr 0x55f42eeddb30 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
                  `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
                    `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
                          `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
![B5.20]
  22: UnaryOperator 0x55f42eeddca8 <ldo.c:395:9, ./lstate.h:61:41> 'int' prefix '!'
`-ParenExpr 0x55f42eeddc88 <col:21, col:41> 'int'
  `-UnaryOperator 0x55f42eeddc68 <col:22, col:38> 'int' prefix '!'
    `-ImplicitCastExpr 0x55f42eeddc50 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
      `-MemberExpr 0x55f42eeddc18 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x55f42ee74d88
        `-MemberExpr 0x55f42eeddbe0 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x55f42ee76b90
          `-ParenExpr 0x55f42eeddbc0 <line:60:21, col:41> 'union Closure *'
            `-ParenExpr 0x55f42eeddba0 <./llimits.h:63:25, col:27> 'union Closure *'
              `-UnaryOperator 0x55f42eeddb80 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                `-MemberExpr 0x55f42eeddb48 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x55f42ee89318
                  `-ImplicitCastExpr 0x55f42eeddb30 <col:48, col:59> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x55f42eeddaf8 <col:48, col:59> 'GCObject *' lvalue .gc 0x55f42ee5e620
                      `-MemberExpr 0x55f42eeddac0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55f42ee5e920
                        `-ImplicitCastExpr 0x55f42eeddaa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                          `-ParenExpr 0x55f42eedda88 <col:48, col:50> 'StkId':'TValue *' lvalue
                            `-MemberExpr 0x55f42eedda50 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x55f42ee82c78
                              `-ImplicitCastExpr 0x55f42eedda38 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                `-ParenExpr 0x55f42eedda18 <col:30, col:33> 'CallInfo *' lvalue
                                  `-DeclRefExpr 0x55f42eedd9f0 <ldo.c:395:18> 'CallInfo *' lvalue Var 0x55f42eedd3d0 'ci' 'CallInfo *'
!([B5.21])
   T: if [B5.22]
   Preds (1): B8
   Succs (2): B4 B2

 [B6]
   1: ReturnStmt 0x55f42eedd830 <ldo.c:390:7>
return;
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: IntegerLiteral 0x55f42eedd5c8 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55f42eedd5f8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eedd5c8 <col:31> 'int' 0
(void)[B7.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55f42eedd640 <ldo.c:389:9> 'int (lua_State *, StkId, int)' Function 0x55f42eed3108 'luaD_precall' 'int (lua_State *, StkId, int)'
luaD_precall
   4: ImplicitCastExpr 0x55f42eedd778 <ldo.c:389:9> 'int (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eedd640 <col:9> 'int (lua_State *, StkId, int)' Function 0x55f42eed3108 'luaD_precall' 'int (lua_State *, StkId, int)'
[B7.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, StkId, int))
   5: DeclRefExpr 0x55f42eedd668 <ldo.c:389:22> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eedd7d0 <ldo.c:389:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eedd668 <col:22> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B7.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x55f42eedd690 <ldo.c:389:25> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
firstArg
   8: ImplicitCastExpr 0x55f42eedd6d8 <ldo.c:389:25> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eedd690 <col:25> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
[B7.7] (ImplicitCastExpr, LValueToRValue, StkId)
   9: IntegerLiteral 0x55f42eedd6b8 <ldo.c:389:36> 'int' 1
1
  10: BinaryOperator 0x55f42eedd6f0 <ldo.c:389:25, col:36> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x55f42eedd6d8 <col:25> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eedd690 <col:25> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
`-IntegerLiteral 0x55f42eedd6b8 <col:36> 'int' 1
[B7.8] - [B7.9]
  11: IntegerLiteral 0x55f42eedd718 <./lua.h:30:23> 'int' 1
1
  12: UnaryOperator 0x55f42eedd738 <./lua.h:30:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x55f42eedd718 <col:23> 'int' 1
-[B7.11]
  13: CallExpr 0x55f42eedd790 <ldo.c:389:9, col:50> 'int'
|-ImplicitCastExpr 0x55f42eedd778 <col:9> 'int (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eedd640 <col:9> 'int (lua_State *, StkId, int)' Function 0x55f42eed3108 'luaD_precall' 'int (lua_State *, StkId, int)'
|-ImplicitCastExpr 0x55f42eedd7d0 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eedd668 <col:22> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
|-BinaryOperator 0x55f42eedd6f0 <col:25, col:36> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x55f42eedd6d8 <col:25> 'StkId':'TValue *' <LValueToRValue>
| | `-DeclRefExpr 0x55f42eedd690 <col:25> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
| `-IntegerLiteral 0x55f42eedd6b8 <col:36> 'int' 1
`-ParenExpr 0x55f42eedd758 <./lua.h:30:21, col:24> 'int'
  `-UnaryOperator 0x55f42eedd738 <col:22, col:23> 'int' prefix '-'
    `-IntegerLiteral 0x55f42eedd718 <col:23> 'int' 1
[B7.4]([B7.6], [B7.10], ([B7.12]))
  14: IntegerLiteral 0x55f42eedd7e8 <./ldo.h:32:17> 'int' 0
0
  15: BinaryOperator 0x55f42eedd808 <ldo.c:389:9, ./ldo.h:32:17> 'int' '!='
|-CallExpr 0x55f42eedd790 <ldo.c:389:9, col:50> 'int'
| |-ImplicitCastExpr 0x55f42eedd778 <col:9> 'int (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55f42eedd640 <col:9> 'int (lua_State *, StkId, int)' Function 0x55f42eed3108 'luaD_precall' 'int (lua_State *, StkId, int)'
| |-ImplicitCastExpr 0x55f42eedd7d0 <col:22> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55f42eedd668 <col:22> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
| |-BinaryOperator 0x55f42eedd6f0 <col:25, col:36> 'StkId':'TValue *' '-'
| | |-ImplicitCastExpr 0x55f42eedd6d8 <col:25> 'StkId':'TValue *' <LValueToRValue>
| | | `-DeclRefExpr 0x55f42eedd690 <col:25> 'StkId':'TValue *' lvalue Var 0x55f42eedd260 'firstArg' 'StkId':'TValue *'
| | `-IntegerLiteral 0x55f42eedd6b8 <col:36> 'int' 1
| `-ParenExpr 0x55f42eedd758 <./lua.h:30:21, col:24> 'int'
|   `-UnaryOperator 0x55f42eedd738 <col:22, col:23> 'int' prefix '-'
|     `-IntegerLiteral 0x55f42eedd718 <col:23> 'int' 1
`-IntegerLiteral 0x55f42eedd7e8 <./ldo.h:32:17> 'int' 0
[B7.13] != [B7.14]
   T: if [B7.15]
   Preds (1): B8
   Succs (2): B6 B1

 [B8]
   1: DeclRefExpr 0x55f42eedd2c0 <ldo.c:385:32> 'void *' lvalue ParmVar 0x55f42eedd110 'ud' 'void *'
ud
   2: ImplicitCastExpr 0x55f42eedd348 <./llimits.h:75:26, col:30> 'void *' <LValueToRValue>
`-ParenExpr 0x55f42eedd328 <col:26, col:30> 'void *' lvalue
  `-DeclRefExpr 0x55f42eedd2c0 <ldo.c:385:32> 'void *' lvalue ParmVar 0x55f42eedd110 'ud' 'void *'
([B8.1]) (ImplicitCastExpr, LValueToRValue, void *)
   3: CStyleCastExpr 0x55f42eedd360 <./llimits.h:75:23, col:30> 'StkId':'TValue *' <BitCast>
`-ImplicitCastExpr 0x55f42eedd348 <col:26, col:30> 'void *' <LValueToRValue>
  `-ParenExpr 0x55f42eedd328 <col:26, col:30> 'void *' lvalue
    `-DeclRefExpr 0x55f42eedd2c0 <ldo.c:385:32> 'void *' lvalue ParmVar 0x55f42eedd110 'ud' 'void *'
(StkId)[B8.2] (CStyleCastExpr, BitCast, StkId)
   4: DeclStmt 0x55f42eedd3a8 <ldo.c:385:3, col:35>col:9
`-VarDecl 0x55f42eedd260 <col:3, ./llimits.h:75:31> ldo.c:385:9 used firstArg 'StkId':'TValue *' cinit
  `-ParenExpr 0x55f42eedd388 <./llimits.h:75:22, col:31> 'StkId':'TValue *'
    `-CStyleCastExpr 0x55f42eedd360 <col:23, col:30> 'StkId':'TValue *' <BitCast>
      `-ImplicitCastExpr 0x55f42eedd348 <col:26, col:30> 'void *' <LValueToRValue>
        `-ParenExpr 0x55f42eedd328 <col:26, col:30> 'void *' lvalue
          `-DeclRefExpr 0x55f42eedd2c0 <ldo.c:385:32> 'void *' lvalue ParmVar 0x55f42eedd110 'ud' 'void *'
StkId firstArg = ((StkId)(ud));
   5: DeclRefExpr 0x55f42eedd430 <ldo.c:386:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eedd458 <ldo.c:386:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eedd430 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B8.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x55f42eedd470 <ldo.c:386:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
`-ImplicitCastExpr 0x55f42eedd458 <col:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eedd430 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B8.6]->ci
   8: ImplicitCastExpr 0x55f42eedd4a8 <ldo.c:386:18, col:21> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x55f42eedd470 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
  `-ImplicitCastExpr 0x55f42eedd458 <col:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eedd430 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B8.7] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   9: DeclStmt 0x55f42eedd4c0 <ldo.c:386:3, col:23>col:13
`-VarDecl 0x55f42eedd3d0 <col:3, col:21> col:13 used ci 'CallInfo *' cinit
  `-ImplicitCastExpr 0x55f42eedd4a8 <col:18, col:21> 'CallInfo *' <LValueToRValue>
    `-MemberExpr 0x55f42eedd470 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x55f42ee88928
      `-ImplicitCastExpr 0x55f42eedd458 <col:18> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55f42eedd430 <col:18> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
CallInfo *ci = L->ci;
  10: DeclRefExpr 0x55f42eedd4d8 <ldo.c:387:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x55f42eedd500 <ldo.c:387:7> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eedd4d8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B8.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: MemberExpr 0x55f42eedd518 <ldo.c:387:7, col:10> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
`-ImplicitCastExpr 0x55f42eedd500 <col:7> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eedd4d8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B8.11]->status
  13: ImplicitCastExpr 0x55f42eedd570 <ldo.c:387:7, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55f42eedd518 <col:7, col:10> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
  `-ImplicitCastExpr 0x55f42eedd500 <col:7> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eedd4d8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B8.12] (ImplicitCastExpr, LValueToRValue, lu_byte)
  14: ImplicitCastExpr 0x55f42eedd588 <ldo.c:387:7, col:10> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55f42eedd570 <col:7, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55f42eedd518 <col:7, col:10> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
    `-ImplicitCastExpr 0x55f42eedd500 <col:7> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eedd4d8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
[B8.13] (ImplicitCastExpr, IntegralCast, int)
  15: IntegerLiteral 0x55f42eedd550 <ldo.c:387:20> 'int' 0
0
  16: BinaryOperator 0x55f42eedd5a0 <ldo.c:387:7, col:20> 'int' '=='
|-ImplicitCastExpr 0x55f42eedd588 <col:7, col:10> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55f42eedd570 <col:7, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55f42eedd518 <col:7, col:10> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
|     `-ImplicitCastExpr 0x55f42eedd500 <col:7> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x55f42eedd4d8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eedd098 'L' 'lua_State *'
`-IntegerLiteral 0x55f42eedd550 <col:20> 'int' 0
[B8.14] == [B8.15]
   T: if [B8.16]
   Preds (1): B9
   Succs (2): B7 B5

 [B0 (EXIT)]
   Preds (2): B1 B6
