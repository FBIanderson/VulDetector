static const TValue *get_compTM(lua_State *L, Table *mt1, Table *mt2, TMS event)
 [B22 (ENTRY)]
   Succs (1): B21

 [B1]
   1: IntegerLiteral 0x5590ecee6b38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee6b70 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee6b38 <col:24> 'int' 0
(void *)[B1.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee6bb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee6b98 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee6b70 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee6b38 <col:24> 'int' 0
([B1.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   4: ReturnStmt 0x5590ecee6bd0 <lvm.c:186:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x5590ecee6bb8 <col:16, col:25> 'const TValue *' <NullToPointer>
  `-ParenExpr 0x5590ecee6b98 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee6b70 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee6b38 <col:24> 'int' 0
return [B1.3];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5590ecee6aa8 <lvm.c:185:12> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
tm1
   2: ImplicitCastExpr 0x5590ecee6ad0 <lvm.c:185:12> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee6aa8 <col:12> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
[B2.1] (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: ReturnStmt 0x5590ecee6ae8 <lvm.c:185:5, col:12>
`-ImplicitCastExpr 0x5590ecee6ad0 <col:12> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee6aa8 <col:12> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5590ecee6958 <lvm.c:184:7> 'int (const TValue *, const TValue *)' Function 0x5590ece93618 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
luaO_rawequalObj
   2: ImplicitCastExpr 0x5590ecee6a28 <lvm.c:184:7> 'int (*)(const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee6958 <col:7> 'int (const TValue *, const TValue *)' Function 0x5590ece93618 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const TValue *, const TValue *))
   3: DeclRefExpr 0x5590ecee6980 <lvm.c:184:24> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
tm1
   4: ImplicitCastExpr 0x5590ecee6a78 <lvm.c:184:24> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee6980 <col:24> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
[B3.3] (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: DeclRefExpr 0x5590ecee69a8 <lvm.c:184:29> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
tm2
   6: ImplicitCastExpr 0x5590ecee6a90 <lvm.c:184:29> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee69a8 <col:29> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
[B3.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: CallExpr 0x5590ecee6a40 <lvm.c:184:7, col:32> 'int'
|-ImplicitCastExpr 0x5590ecee6a28 <col:7> 'int (*)(const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee6958 <col:7> 'int (const TValue *, const TValue *)' Function 0x5590ece93618 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590ecee6a78 <col:24> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee6980 <col:24> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
`-ImplicitCastExpr 0x5590ecee6a90 <col:29> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee69a8 <col:29> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
[B3.2]([B3.4], [B3.6])
   T: if [B3.7]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x5590ecee6870 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee68a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee6870 <col:24> 'int' 0
(void *)[B4.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee68f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee68d0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee68a8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee6870 <col:24> 'int' 0
([B4.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   4: ReturnStmt 0x5590ecee6908 <lvm.c:183:20, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x5590ecee68f0 <col:16, col:25> 'const TValue *' <NullToPointer>
  `-ParenExpr 0x5590ecee68d0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee68a8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee6870 <col:24> 'int' 0
return [B4.3];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: ConditionalOperator 0x5590ecee66f8 <./ltm.h:41:26, line:42:70> 'const TValue *'
|-BinaryOperator 0x5590ecee60e0 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
| |-ImplicitCastExpr 0x5590ecee60b0 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
| | `-ParenExpr 0x5590ecee6010 <col:26, col:29> 'Table *' lvalue
| |   `-DeclRefExpr 0x5590ecee5fe8 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
| `-ImplicitCastExpr 0x5590ecee60c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
|   `-ParenExpr 0x5590ecee6090 <col:16, col:25> 'void *'
|     `-CStyleCastExpr 0x5590ecee6068 <col:17, col:24> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x5590ecee6030 <col:24> 'int' 0
|-ImplicitCastExpr 0x5590ecee66e0 <col:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x5590ecee6168 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x5590ecee6140 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5590ecee6108 <col:24> 'int' 0
`-ConditionalOperator 0x5590ecee66b0 <./ltm.h:42:3, col:70> 'const TValue *'
  |-ParenExpr 0x5590ecee6358 <col:3, col:27> 'unsigned int'
  | `-BinaryOperator 0x5590ecee6330 <col:4, col:26> 'unsigned int' '&'
  |   |-ImplicitCastExpr 0x5590ecee6318 <col:4, col:10> 'unsigned int' <IntegralCast>
  |   | `-ImplicitCastExpr 0x5590ecee6300 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  |   |   `-MemberExpr 0x5590ecee61e8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
  |   |     `-ImplicitCastExpr 0x5590ecee61d0 <col:4, col:7> 'Table *' <LValueToRValue>
  |   |       `-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
  |   |         `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
  |   `-ParenExpr 0x5590ecee62e0 <./ltm.h:42:18, col:26> 'unsigned int'
  |     `-BinaryOperator 0x5590ecee62b8 <col:19, col:25> 'unsigned int' '<<'
  |       |-IntegerLiteral 0x5590ecee6220 <col:19> 'unsigned int' 1
  |       `-ImplicitCastExpr 0x5590ecee62a0 <col:23, col:25> 'unsigned int' <IntegralCast>
  |         `-ImplicitCastExpr 0x5590ecee6288 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
  |           `-ParenExpr 0x5590ecee6268 <col:23, col:25> 'TMS':'TMS' lvalue
  |             `-DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
  |-ImplicitCastExpr 0x5590ecee6698 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
  | `-ParenExpr 0x5590ecee63d8 <col:16, col:25> 'void *'
  |   `-CStyleCastExpr 0x5590ecee63b0 <col:17, col:24> 'void *' <NullToPointer>
  |     `-IntegerLiteral 0x5590ecee6378 <col:24> 'int' 0
  `-CallExpr 0x5590ecee6610 <./ltm.h:42:38, col:70> 'const TValue *'
    |-ImplicitCastExpr 0x5590ecee65f8 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590ecee63f8 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
    |-ImplicitCastExpr 0x5590ecee6650 <lvm.c:182:19> 'Table *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecee6420 <col:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
    |-ImplicitCastExpr 0x5590ecee6668 <col:24> 'TMS':'TMS' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecee6448 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
    `-ImplicitCastExpr 0x5590ecee6680 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
      `-ArraySubscriptExpr 0x5590ecee65d0 <col:56, col:69> 'TString *' lvalue
        |-ImplicitCastExpr 0x5590ecee65a0 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
        | `-MemberExpr 0x5590ecee6540 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
        |   `-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
        |     `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
        |       `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        |         `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
        |           `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
        |             `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
        `-ImplicitCastExpr 0x5590ecee65b8 <col:24> 'TMS':'TMS' <LValueToRValue>
          `-DeclRefExpr 0x5590ecee6578 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B11.6] ? [B6.3] : [B7.1]
   2: DeclRefExpr 0x5590ecee5fc0 <lvm.c:182:3> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
tm2
   3: BinaryOperator 0x5590ecee6748 <lvm.c:182:3, ./ltm.h:42:71> 'const TValue *' '='
|-DeclRefExpr 0x5590ecee5fc0 <lvm.c:182:3> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
`-ParenExpr 0x5590ecee6728 <./ltm.h:41:25, line:42:71> 'const TValue *'
  `-ConditionalOperator 0x5590ecee66f8 <line:41:26, line:42:70> 'const TValue *'
    |-BinaryOperator 0x5590ecee60e0 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
    | |-ImplicitCastExpr 0x5590ecee60b0 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
    | | `-ParenExpr 0x5590ecee6010 <col:26, col:29> 'Table *' lvalue
    | |   `-DeclRefExpr 0x5590ecee5fe8 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
    | `-ImplicitCastExpr 0x5590ecee60c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
    |   `-ParenExpr 0x5590ecee6090 <col:16, col:25> 'void *'
    |     `-CStyleCastExpr 0x5590ecee6068 <col:17, col:24> 'void *' <NullToPointer>
    |       `-IntegerLiteral 0x5590ecee6030 <col:24> 'int' 0
    |-ImplicitCastExpr 0x5590ecee66e0 <col:16, col:25> 'const TValue *' <NullToPointer>
    | `-ParenExpr 0x5590ecee6168 <col:16, col:25> 'void *'
    |   `-CStyleCastExpr 0x5590ecee6140 <col:17, col:24> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5590ecee6108 <col:24> 'int' 0
    `-ConditionalOperator 0x5590ecee66b0 <./ltm.h:42:3, col:70> 'const TValue *'
      |-ParenExpr 0x5590ecee6358 <col:3, col:27> 'unsigned int'
      | `-BinaryOperator 0x5590ecee6330 <col:4, col:26> 'unsigned int' '&'
      |   |-ImplicitCastExpr 0x5590ecee6318 <col:4, col:10> 'unsigned int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x5590ecee6300 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
      |   |   `-MemberExpr 0x5590ecee61e8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
      |   |     `-ImplicitCastExpr 0x5590ecee61d0 <col:4, col:7> 'Table *' <LValueToRValue>
      |   |       `-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
      |   |         `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
      |   `-ParenExpr 0x5590ecee62e0 <./ltm.h:42:18, col:26> 'unsigned int'
      |     `-BinaryOperator 0x5590ecee62b8 <col:19, col:25> 'unsigned int' '<<'
      |       |-IntegerLiteral 0x5590ecee6220 <col:19> 'unsigned int' 1
      |       `-ImplicitCastExpr 0x5590ecee62a0 <col:23, col:25> 'unsigned int' <IntegralCast>
      |         `-ImplicitCastExpr 0x5590ecee6288 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
      |           `-ParenExpr 0x5590ecee6268 <col:23, col:25> 'TMS':'TMS' lvalue
      |             `-DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
      |-ImplicitCastExpr 0x5590ecee6698 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
      | `-ParenExpr 0x5590ecee63d8 <col:16, col:25> 'void *'
      |   `-CStyleCastExpr 0x5590ecee63b0 <col:17, col:24> 'void *' <NullToPointer>
      |     `-IntegerLiteral 0x5590ecee6378 <col:24> 'int' 0
      `-CallExpr 0x5590ecee6610 <./ltm.h:42:38, col:70> 'const TValue *'
        |-ImplicitCastExpr 0x5590ecee65f8 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5590ecee63f8 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
        |-ImplicitCastExpr 0x5590ecee6650 <lvm.c:182:19> 'Table *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecee6420 <col:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
        |-ImplicitCastExpr 0x5590ecee6668 <col:24> 'TMS':'TMS' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecee6448 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
        `-ImplicitCastExpr 0x5590ecee6680 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
          `-ArraySubscriptExpr 0x5590ecee65d0 <col:56, col:69> 'TString *' lvalue
            |-ImplicitCastExpr 0x5590ecee65a0 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
            | `-MemberExpr 0x5590ecee6540 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
            |   `-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
            |     `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
            |       `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
            |         `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
            |           `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
            |             `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
            `-ImplicitCastExpr 0x5590ecee65b8 <col:24> 'TMS':'TMS' <LValueToRValue>
              `-DeclRefExpr 0x5590ecee6578 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B5.2] = ([B5.1])
   4: DeclRefExpr 0x5590ecee6770 <lvm.c:183:7> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
tm2
   5: ImplicitCastExpr 0x5590ecee6818 <lvm.c:183:7> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee6770 <col:7> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
[B5.4] (ImplicitCastExpr, LValueToRValue, const TValue *)
   6: IntegerLiteral 0x5590ecee6798 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x5590ecee67d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee6798 <col:24> 'int' 0
(void *)[B5.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x5590ecee6830 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
`-ParenExpr 0x5590ecee67f8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee67d0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee6798 <col:24> 'int' 0
([B5.7]) (ImplicitCastExpr, BitCast, const TValue *)
   9: BinaryOperator 0x5590ecee6848 <lvm.c:183:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5590ecee6818 <lvm.c:183:7> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee6770 <col:7> 'const TValue *' lvalue Var 0x5590ecee5c28 'tm2' 'const TValue *'
`-ImplicitCastExpr 0x5590ecee6830 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
  `-ParenExpr 0x5590ecee67f8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee67d0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee6798 <col:24> 'int' 0
[B5.5] == [B5.8]
   T: if [B5.9]
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: IntegerLiteral 0x5590ecee6108 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee6140 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee6108 <col:24> 'int' 0
(void *)[B6.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee66e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee6168 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee6140 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee6108 <col:24> 'int' 0
([B6.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B11
   Succs (1): B5

 [B7]
   1: ConditionalOperator 0x5590ecee66b0 <./ltm.h:42:3, col:70> 'const TValue *'
|-ParenExpr 0x5590ecee6358 <col:3, col:27> 'unsigned int'
| `-BinaryOperator 0x5590ecee6330 <col:4, col:26> 'unsigned int' '&'
|   |-ImplicitCastExpr 0x5590ecee6318 <col:4, col:10> 'unsigned int' <IntegralCast>
|   | `-ImplicitCastExpr 0x5590ecee6300 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-MemberExpr 0x5590ecee61e8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
|   |     `-ImplicitCastExpr 0x5590ecee61d0 <col:4, col:7> 'Table *' <LValueToRValue>
|   |       `-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
|   |         `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
|   `-ParenExpr 0x5590ecee62e0 <./ltm.h:42:18, col:26> 'unsigned int'
|     `-BinaryOperator 0x5590ecee62b8 <col:19, col:25> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5590ecee6220 <col:19> 'unsigned int' 1
|       `-ImplicitCastExpr 0x5590ecee62a0 <col:23, col:25> 'unsigned int' <IntegralCast>
|         `-ImplicitCastExpr 0x5590ecee6288 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
|           `-ParenExpr 0x5590ecee6268 <col:23, col:25> 'TMS':'TMS' lvalue
|             `-DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
|-ImplicitCastExpr 0x5590ecee6698 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x5590ecee63d8 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x5590ecee63b0 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5590ecee6378 <col:24> 'int' 0
`-CallExpr 0x5590ecee6610 <./ltm.h:42:38, col:70> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecee65f8 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecee63f8 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
  |-ImplicitCastExpr 0x5590ecee6650 <lvm.c:182:19> 'Table *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecee6420 <col:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
  |-ImplicitCastExpr 0x5590ecee6668 <col:24> 'TMS':'TMS' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecee6448 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
  `-ImplicitCastExpr 0x5590ecee6680 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
    `-ArraySubscriptExpr 0x5590ecee65d0 <col:56, col:69> 'TString *' lvalue
      |-ImplicitCastExpr 0x5590ecee65a0 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
      | `-MemberExpr 0x5590ecee6540 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
      |   `-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
      |     `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
      |       `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
      |         `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
      |           `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
      |             `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
      `-ImplicitCastExpr 0x5590ecee65b8 <col:24> 'TMS':'TMS' <LValueToRValue>
        `-DeclRefExpr 0x5590ecee6578 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
([B10.11]) ? [B8.3] : [B9.17]
   Preds (2): B8 B9
   Succs (1): B5

 [B8]
   1: IntegerLiteral 0x5590ecee6378 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee63b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee6378 <col:24> 'int' 0
(void *)[B8.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee6698 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee63d8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee63b0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee6378 <col:24> 'int' 0
([B8.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B10
   Succs (1): B7

 [B9]
   1: DeclRefExpr 0x5590ecee63f8 <./ltm.h:42:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
luaT_gettm
   2: ImplicitCastExpr 0x5590ecee65f8 <./ltm.h:42:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee63f8 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, TMS, TString *))
   3: DeclRefExpr 0x5590ecee6420 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
mt2
   4: ImplicitCastExpr 0x5590ecee6650 <lvm.c:182:19> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee6420 <col:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
[B9.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: DeclRefExpr 0x5590ecee6448 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
event
   6: ImplicitCastExpr 0x5590ecee6668 <lvm.c:182:24> 'TMS':'TMS' <LValueToRValue>
`-DeclRefExpr 0x5590ecee6448 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B9.5] (ImplicitCastExpr, LValueToRValue, TMS)
   7: DeclRefExpr 0x5590ecee6470 <lvm.c:182:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B9.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
`-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B9.8]->l_G
  10: ImplicitCastExpr 0x5590ecee6528 <./ltm.h:42:56, col:58> 'global_State *' <LValueToRValue>
`-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
  `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
      `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
(([B9.9])) (ImplicitCastExpr, LValueToRValue, global_State *)
  11: MemberExpr 0x5590ecee6540 <./ltm.h:42:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
`-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
    `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
        `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B9.10]->tmname
  12: ImplicitCastExpr 0x5590ecee65a0 <./ltm.h:42:56, col:61> 'TString **' <ArrayToPointerDecay>
`-MemberExpr 0x5590ecee6540 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
  `-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
      `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
          `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B9.11] (ImplicitCastExpr, ArrayToPointerDecay, TString **)
  13: DeclRefExpr 0x5590ecee6578 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
event
  14: ImplicitCastExpr 0x5590ecee65b8 <lvm.c:182:24> 'TMS':'TMS' <LValueToRValue>
`-DeclRefExpr 0x5590ecee6578 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B9.13] (ImplicitCastExpr, LValueToRValue, TMS)
  15: ArraySubscriptExpr 0x5590ecee65d0 <./ltm.h:42:56, col:69> 'TString *' lvalue
|-ImplicitCastExpr 0x5590ecee65a0 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
| `-MemberExpr 0x5590ecee6540 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
|   `-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
|     `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
|       `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
|         `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
|           `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecee65b8 <col:24> 'TMS':'TMS' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee6578 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B9.12][[B9.14]]
  16: ImplicitCastExpr 0x5590ecee6680 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
`-ArraySubscriptExpr 0x5590ecee65d0 <col:56, col:69> 'TString *' lvalue
  |-ImplicitCastExpr 0x5590ecee65a0 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
  | `-MemberExpr 0x5590ecee6540 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
  |   `-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
  |     `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
  |       `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
  |         `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
  |           `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
  |             `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
  `-ImplicitCastExpr 0x5590ecee65b8 <col:24> 'TMS':'TMS' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee6578 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B9.15] (ImplicitCastExpr, LValueToRValue, TString *)
  17: CallExpr 0x5590ecee6610 <./ltm.h:42:38, col:70> 'const TValue *'
|-ImplicitCastExpr 0x5590ecee65f8 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee63f8 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
|-ImplicitCastExpr 0x5590ecee6650 <lvm.c:182:19> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee6420 <col:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
|-ImplicitCastExpr 0x5590ecee6668 <col:24> 'TMS':'TMS' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee6448 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
`-ImplicitCastExpr 0x5590ecee6680 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
  `-ArraySubscriptExpr 0x5590ecee65d0 <col:56, col:69> 'TString *' lvalue
    |-ImplicitCastExpr 0x5590ecee65a0 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
    | `-MemberExpr 0x5590ecee6540 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
    |   `-ImplicitCastExpr 0x5590ecee6528 <col:56, col:58> 'global_State *' <LValueToRValue>
    |     `-ParenExpr 0x5590ecee6508 <col:56, col:58> 'global_State *' lvalue
    |       `-ParenExpr 0x5590ecee64e8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    |         `-MemberExpr 0x5590ecee64b0 <lvm.c:182:16, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
    |           `-ImplicitCastExpr 0x5590ecee6498 <lvm.c:182:16> 'lua_State *' <LValueToRValue>
    |             `-DeclRefExpr 0x5590ecee6470 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
    `-ImplicitCastExpr 0x5590ecee65b8 <col:24> 'TMS':'TMS' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee6578 <col:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B9.2]([B9.4], [B9.6], [B9.16])
   Preds (1): B10
   Succs (1): B7

 [B10]
   1: DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
mt2
   2: ImplicitCastExpr 0x5590ecee61d0 <./ltm.h:42:4, col:7> 'Table *' <LValueToRValue>
`-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
  `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
([B10.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5590ecee61e8 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
`-ImplicitCastExpr 0x5590ecee61d0 <col:4, col:7> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
    `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
[B10.2]->flags
   4: ImplicitCastExpr 0x5590ecee6300 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x5590ecee61e8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
  `-ImplicitCastExpr 0x5590ecee61d0 <col:4, col:7> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
      `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lu_byte)
   5: ImplicitCastExpr 0x5590ecee6318 <./ltm.h:42:4, col:10> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecee6300 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x5590ecee61e8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
    `-ImplicitCastExpr 0x5590ecee61d0 <col:4, col:7> 'Table *' <LValueToRValue>
      `-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
        `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
[B10.4] (ImplicitCastExpr, IntegralCast, unsigned int)
   6: IntegerLiteral 0x5590ecee6220 <./ltm.h:42:19> 'unsigned int' 1
1U
   7: DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
event
   8: ImplicitCastExpr 0x5590ecee6288 <./ltm.h:42:23, col:25> 'TMS':'TMS' <LValueToRValue>
`-ParenExpr 0x5590ecee6268 <col:23, col:25> 'TMS':'TMS' lvalue
  `-DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
([B10.7]) (ImplicitCastExpr, LValueToRValue, TMS)
   9: ImplicitCastExpr 0x5590ecee62a0 <./ltm.h:42:23, col:25> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecee6288 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
  `-ParenExpr 0x5590ecee6268 <col:23, col:25> 'TMS':'TMS' lvalue
    `-DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B10.8] (ImplicitCastExpr, IntegralCast, unsigned int)
  10: BinaryOperator 0x5590ecee62b8 <./ltm.h:42:19, col:25> 'unsigned int' '<<'
|-IntegerLiteral 0x5590ecee6220 <col:19> 'unsigned int' 1
`-ImplicitCastExpr 0x5590ecee62a0 <col:23, col:25> 'unsigned int' <IntegralCast>
  `-ImplicitCastExpr 0x5590ecee6288 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
    `-ParenExpr 0x5590ecee6268 <col:23, col:25> 'TMS':'TMS' lvalue
      `-DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B10.6] << [B10.9]
  11: BinaryOperator 0x5590ecee6330 <./ltm.h:42:4, col:26> 'unsigned int' '&'
|-ImplicitCastExpr 0x5590ecee6318 <col:4, col:10> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x5590ecee6300 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x5590ecee61e8 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
|     `-ImplicitCastExpr 0x5590ecee61d0 <col:4, col:7> 'Table *' <LValueToRValue>
|       `-ParenExpr 0x5590ecee61b0 <col:4, col:7> 'Table *' lvalue
|         `-DeclRefExpr 0x5590ecee6188 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
`-ParenExpr 0x5590ecee62e0 <./ltm.h:42:18, col:26> 'unsigned int'
  `-BinaryOperator 0x5590ecee62b8 <col:19, col:25> 'unsigned int' '<<'
    |-IntegerLiteral 0x5590ecee6220 <col:19> 'unsigned int' 1
    `-ImplicitCastExpr 0x5590ecee62a0 <col:23, col:25> 'unsigned int' <IntegralCast>
      `-ImplicitCastExpr 0x5590ecee6288 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
        `-ParenExpr 0x5590ecee6268 <col:23, col:25> 'TMS':'TMS' lvalue
          `-DeclRefExpr 0x5590ecee6240 <lvm.c:182:24> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B10.5] & ([B10.10])
   T: ([B10.11]) ? ... : ...
   Preds (1): B11
   Succs (2): B8 B9

 [B11]
   1: DeclRefExpr 0x5590ecee5fe8 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
mt2
   2: ImplicitCastExpr 0x5590ecee60b0 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
`-ParenExpr 0x5590ecee6010 <col:26, col:29> 'Table *' lvalue
  `-DeclRefExpr 0x5590ecee5fe8 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
([B11.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: IntegerLiteral 0x5590ecee6030 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x5590ecee6068 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee6030 <col:24> 'int' 0
(void *)[B11.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x5590ecee60c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
`-ParenExpr 0x5590ecee6090 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee6068 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee6030 <col:24> 'int' 0
([B11.4]) (ImplicitCastExpr, BitCast, Table *)
   6: BinaryOperator 0x5590ecee60e0 <./ltm.h:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5590ecee60b0 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
| `-ParenExpr 0x5590ecee6010 <col:26, col:29> 'Table *' lvalue
|   `-DeclRefExpr 0x5590ecee5fe8 <lvm.c:182:19> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
`-ImplicitCastExpr 0x5590ecee60c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
  `-ParenExpr 0x5590ecee6090 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee6068 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee6030 <col:24> 'int' 0
[B11.2] == [B11.5]
   T: [B11.6] ? ... : ...
   Preds (1): B13
   Succs (2): B6 B10

 [B12]
   1: DeclRefExpr 0x5590ecee5f30 <lvm.c:181:26> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
tm1
   2: ImplicitCastExpr 0x5590ecee5f58 <lvm.c:181:26> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee5f30 <col:26> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
[B12.1] (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: ReturnStmt 0x5590ecee5f70 <lvm.c:181:19, col:26>
`-ImplicitCastExpr 0x5590ecee5f58 <col:26> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee5f30 <col:26> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
return [B12.2];
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclRefExpr 0x5590ecee5e88 <lvm.c:181:7> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
mt1
   2: ImplicitCastExpr 0x5590ecee5ed8 <lvm.c:181:7> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee5e88 <col:7> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
[B13.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: DeclRefExpr 0x5590ecee5eb0 <lvm.c:181:14> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
mt2
   4: ImplicitCastExpr 0x5590ecee5ef0 <lvm.c:181:14> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee5eb0 <col:14> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
[B13.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: BinaryOperator 0x5590ecee5f08 <lvm.c:181:7, col:14> 'int' '=='
|-ImplicitCastExpr 0x5590ecee5ed8 <col:7> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee5e88 <col:7> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
`-ImplicitCastExpr 0x5590ecee5ef0 <col:14> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee5eb0 <col:14> 'Table *' lvalue ParmVar 0x5590ecee51b0 'mt2' 'Table *'
[B13.2] == [B13.4]
   T: if [B13.5]
   Preds (1): B15
   Succs (2): B12 B11

 [B14]
   1: IntegerLiteral 0x5590ecee5da0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee5dd8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee5da0 <col:24> 'int' 0
(void *)[B14.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee5e20 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee5e00 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee5dd8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee5da0 <col:24> 'int' 0
([B14.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   4: ReturnStmt 0x5590ecee5e38 <lvm.c:180:20, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x5590ecee5e20 <col:16, col:25> 'const TValue *' <NullToPointer>
  `-ParenExpr 0x5590ecee5e00 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee5dd8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee5da0 <col:24> 'int' 0
return [B14.3];
   Preds (1): B15
   Succs (1): B0

 [B15]
   1: ConditionalOperator 0x5590ecee5bb0 <./ltm.h:41:26, line:42:70> 'const TValue *'
|-BinaryOperator 0x5590ecee5598 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
| |-ImplicitCastExpr 0x5590ecee5568 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
| | `-ParenExpr 0x5590ecee54c8 <col:26, col:29> 'Table *' lvalue
| |   `-DeclRefExpr 0x5590ecee54a0 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
| `-ImplicitCastExpr 0x5590ecee5580 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
|   `-ParenExpr 0x5590ecee5548 <col:16, col:25> 'void *'
|     `-CStyleCastExpr 0x5590ecee5520 <col:17, col:24> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x5590ecee54e8 <col:24> 'int' 0
|-ImplicitCastExpr 0x5590ecee5b98 <col:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x5590ecee5620 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x5590ecee55f8 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5590ecee55c0 <col:24> 'int' 0
`-ConditionalOperator 0x5590ecee5b68 <./ltm.h:42:3, col:70> 'const TValue *'
  |-ParenExpr 0x5590ecee5810 <col:3, col:27> 'unsigned int'
  | `-BinaryOperator 0x5590ecee57e8 <col:4, col:26> 'unsigned int' '&'
  |   |-ImplicitCastExpr 0x5590ecee57d0 <col:4, col:10> 'unsigned int' <IntegralCast>
  |   | `-ImplicitCastExpr 0x5590ecee57b8 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  |   |   `-MemberExpr 0x5590ecee56a0 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
  |   |     `-ImplicitCastExpr 0x5590ecee5688 <col:4, col:7> 'Table *' <LValueToRValue>
  |   |       `-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
  |   |         `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
  |   `-ParenExpr 0x5590ecee5798 <./ltm.h:42:18, col:26> 'unsigned int'
  |     `-BinaryOperator 0x5590ecee5770 <col:19, col:25> 'unsigned int' '<<'
  |       |-IntegerLiteral 0x5590ecee56d8 <col:19> 'unsigned int' 1
  |       `-ImplicitCastExpr 0x5590ecee5758 <col:23, col:25> 'unsigned int' <IntegralCast>
  |         `-ImplicitCastExpr 0x5590ecee5740 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
  |           `-ParenExpr 0x5590ecee5720 <col:23, col:25> 'TMS':'TMS' lvalue
  |             `-DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
  |-ImplicitCastExpr 0x5590ecee5b50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
  | `-ParenExpr 0x5590ecee5890 <col:16, col:25> 'void *'
  |   `-CStyleCastExpr 0x5590ecee5868 <col:17, col:24> 'void *' <NullToPointer>
  |     `-IntegerLiteral 0x5590ecee5830 <col:24> 'int' 0
  `-CallExpr 0x5590ecee5ac8 <./ltm.h:42:38, col:70> 'const TValue *'
    |-ImplicitCastExpr 0x5590ecee5ab0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590ecee58b0 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
    |-ImplicitCastExpr 0x5590ecee5b08 <lvm.c:178:33> 'Table *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecee58d8 <col:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
    |-ImplicitCastExpr 0x5590ecee5b20 <col:38> 'TMS':'TMS' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecee5900 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
    `-ImplicitCastExpr 0x5590ecee5b38 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
      `-ArraySubscriptExpr 0x5590ecee5a88 <col:56, col:69> 'TString *' lvalue
        |-ImplicitCastExpr 0x5590ecee5a58 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
        | `-MemberExpr 0x5590ecee59f8 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
        |   `-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
        |     `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
        |       `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        |         `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
        |           `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
        |             `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
        `-ImplicitCastExpr 0x5590ecee5a70 <col:38> 'TMS':'TMS' <LValueToRValue>
          `-DeclRefExpr 0x5590ecee5a30 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B21.6] ? [B16.3] : [B17.1]
   2: DeclStmt 0x5590ecee5c00 <lvm.c:178:3, col:44>col:17
`-VarDecl 0x5590ecee5440 <col:3, ./ltm.h:42:71> lvm.c:178:17 used tm1 'const TValue *' cinit
  `-ParenExpr 0x5590ecee5be0 <./ltm.h:41:25, line:42:71> 'const TValue *'
    `-ConditionalOperator 0x5590ecee5bb0 <line:41:26, line:42:70> 'const TValue *'
      |-BinaryOperator 0x5590ecee5598 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
      | |-ImplicitCastExpr 0x5590ecee5568 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
      | | `-ParenExpr 0x5590ecee54c8 <col:26, col:29> 'Table *' lvalue
      | |   `-DeclRefExpr 0x5590ecee54a0 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
      | `-ImplicitCastExpr 0x5590ecee5580 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
      |   `-ParenExpr 0x5590ecee5548 <col:16, col:25> 'void *'
      |     `-CStyleCastExpr 0x5590ecee5520 <col:17, col:24> 'void *' <NullToPointer>
      |       `-IntegerLiteral 0x5590ecee54e8 <col:24> 'int' 0
      |-ImplicitCastExpr 0x5590ecee5b98 <col:16, col:25> 'const TValue *' <NullToPointer>
      | `-ParenExpr 0x5590ecee5620 <col:16, col:25> 'void *'
      |   `-CStyleCastExpr 0x5590ecee55f8 <col:17, col:24> 'void *' <NullToPointer>
      |     `-IntegerLiteral 0x5590ecee55c0 <col:24> 'int' 0
      `-ConditionalOperator 0x5590ecee5b68 <./ltm.h:42:3, col:70> 'const TValue *'
        |-ParenExpr 0x5590ecee5810 <col:3, col:27> 'unsigned int'
        | `-BinaryOperator 0x5590ecee57e8 <col:4, col:26> 'unsigned int' '&'
        |   |-ImplicitCastExpr 0x5590ecee57d0 <col:4, col:10> 'unsigned int' <IntegralCast>
        |   | `-ImplicitCastExpr 0x5590ecee57b8 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
        |   |   `-MemberExpr 0x5590ecee56a0 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
        |   |     `-ImplicitCastExpr 0x5590ecee5688 <col:4, col:7> 'Table *' <LValueToRValue>
        |   |       `-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
        |   |         `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
        |   `-ParenExpr 0x5590ecee5798 <./ltm.h:42:18, col:26> 'unsigned int'
        |     `-BinaryOperator 0x5590ecee5770 <col:19, col:25> 'unsigned int' '<<'
        |       |-IntegerLiteral 0x5590ecee56d8 <col:19> 'unsigned int' 1
        |       `-ImplicitCastExpr 0x5590ecee5758 <col:23, col:25> 'unsigned int' <IntegralCast>
        |         `-ImplicitCastExpr 0x5590ecee5740 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
        |           `-ParenExpr 0x5590ecee5720 <col:23, col:25> 'TMS':'TMS' lvalue
        |             `-DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
        |-ImplicitCastExpr 0x5590ecee5b50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
        | `-ParenExpr 0x5590ecee5890 <col:16, col:25> 'void *'
        |   `-CStyleCastExpr 0x5590ecee5868 <col:17, col:24> 'void *' <NullToPointer>
        |     `-IntegerLiteral 0x5590ecee5830 <col:24> 'int' 0
        `-CallExpr 0x5590ecee5ac8 <./ltm.h:42:38, col:70> 'const TValue *'
          |-ImplicitCastExpr 0x5590ecee5ab0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x5590ecee58b0 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
          |-ImplicitCastExpr 0x5590ecee5b08 <lvm.c:178:33> 'Table *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecee58d8 <col:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
          |-ImplicitCastExpr 0x5590ecee5b20 <col:38> 'TMS':'TMS' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecee5900 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
          `-ImplicitCastExpr 0x5590ecee5b38 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
            `-ArraySubscriptExpr 0x5590ecee5a88 <col:56, col:69> 'TString *' lvalue
              |-ImplicitCastExpr 0x5590ecee5a58 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
              | `-MemberExpr 0x5590ecee59f8 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
              |   `-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
              |     `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
              |       `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
              |         `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
              |           `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
              |             `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
              `-ImplicitCastExpr 0x5590ecee5a70 <col:38> 'TMS':'TMS' <LValueToRValue>
                `-DeclRefExpr 0x5590ecee5a30 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
const TValue *tm1 = ((mt1) == ((void *)0) ? ((void *)0) : ((mt1)->flags & (1U << (event))) ? ((void *)0) : luaT_gettm(mt1, event, ((L->l_G))->tmname[event]));
   3: DeclStmt 0x5590ecee5c88 <lvm.c:179:3, col:20>col:17
`-VarDecl 0x5590ecee5c28 <col:3, col:17> col:17 used tm2 'const TValue *'
const TValue *tm2;
   4: DeclRefExpr 0x5590ecee5ca0 <lvm.c:180:7> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
tm1
   5: ImplicitCastExpr 0x5590ecee5d48 <lvm.c:180:7> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee5ca0 <col:7> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
[B15.4] (ImplicitCastExpr, LValueToRValue, const TValue *)
   6: IntegerLiteral 0x5590ecee5cc8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x5590ecee5d00 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee5cc8 <col:24> 'int' 0
(void *)[B15.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x5590ecee5d60 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
`-ParenExpr 0x5590ecee5d28 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee5d00 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee5cc8 <col:24> 'int' 0
([B15.7]) (ImplicitCastExpr, BitCast, const TValue *)
   9: BinaryOperator 0x5590ecee5d78 <lvm.c:180:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5590ecee5d48 <lvm.c:180:7> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee5ca0 <col:7> 'const TValue *' lvalue Var 0x5590ecee5440 'tm1' 'const TValue *'
`-ImplicitCastExpr 0x5590ecee5d60 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
  `-ParenExpr 0x5590ecee5d28 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee5d00 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee5cc8 <col:24> 'int' 0
[B15.5] == [B15.8]
   T: if [B15.9]
   Preds (2): B16 B17
   Succs (2): B14 B13

 [B16]
   1: IntegerLiteral 0x5590ecee55c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee55f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee55c0 <col:24> 'int' 0
(void *)[B16.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee5b98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee5620 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee55f8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee55c0 <col:24> 'int' 0
([B16.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B21
   Succs (1): B15

 [B17]
   1: ConditionalOperator 0x5590ecee5b68 <./ltm.h:42:3, col:70> 'const TValue *'
|-ParenExpr 0x5590ecee5810 <col:3, col:27> 'unsigned int'
| `-BinaryOperator 0x5590ecee57e8 <col:4, col:26> 'unsigned int' '&'
|   |-ImplicitCastExpr 0x5590ecee57d0 <col:4, col:10> 'unsigned int' <IntegralCast>
|   | `-ImplicitCastExpr 0x5590ecee57b8 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-MemberExpr 0x5590ecee56a0 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
|   |     `-ImplicitCastExpr 0x5590ecee5688 <col:4, col:7> 'Table *' <LValueToRValue>
|   |       `-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
|   |         `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
|   `-ParenExpr 0x5590ecee5798 <./ltm.h:42:18, col:26> 'unsigned int'
|     `-BinaryOperator 0x5590ecee5770 <col:19, col:25> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5590ecee56d8 <col:19> 'unsigned int' 1
|       `-ImplicitCastExpr 0x5590ecee5758 <col:23, col:25> 'unsigned int' <IntegralCast>
|         `-ImplicitCastExpr 0x5590ecee5740 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
|           `-ParenExpr 0x5590ecee5720 <col:23, col:25> 'TMS':'TMS' lvalue
|             `-DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
|-ImplicitCastExpr 0x5590ecee5b50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x5590ecee5890 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x5590ecee5868 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5590ecee5830 <col:24> 'int' 0
`-CallExpr 0x5590ecee5ac8 <./ltm.h:42:38, col:70> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecee5ab0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecee58b0 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
  |-ImplicitCastExpr 0x5590ecee5b08 <lvm.c:178:33> 'Table *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecee58d8 <col:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
  |-ImplicitCastExpr 0x5590ecee5b20 <col:38> 'TMS':'TMS' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecee5900 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
  `-ImplicitCastExpr 0x5590ecee5b38 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
    `-ArraySubscriptExpr 0x5590ecee5a88 <col:56, col:69> 'TString *' lvalue
      |-ImplicitCastExpr 0x5590ecee5a58 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
      | `-MemberExpr 0x5590ecee59f8 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
      |   `-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
      |     `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
      |       `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
      |         `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
      |           `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
      |             `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
      `-ImplicitCastExpr 0x5590ecee5a70 <col:38> 'TMS':'TMS' <LValueToRValue>
        `-DeclRefExpr 0x5590ecee5a30 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
([B20.11]) ? [B18.3] : [B19.17]
   Preds (2): B18 B19
   Succs (1): B15

 [B18]
   1: IntegerLiteral 0x5590ecee5830 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee5868 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee5830 <col:24> 'int' 0
(void *)[B18.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee5b50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee5890 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee5868 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee5830 <col:24> 'int' 0
([B18.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B20
   Succs (1): B17

 [B19]
   1: DeclRefExpr 0x5590ecee58b0 <./ltm.h:42:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
luaT_gettm
   2: ImplicitCastExpr 0x5590ecee5ab0 <./ltm.h:42:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee58b0 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
[B19.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, TMS, TString *))
   3: DeclRefExpr 0x5590ecee58d8 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
mt1
   4: ImplicitCastExpr 0x5590ecee5b08 <lvm.c:178:33> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee58d8 <col:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
[B19.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: DeclRefExpr 0x5590ecee5900 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
event
   6: ImplicitCastExpr 0x5590ecee5b20 <lvm.c:178:38> 'TMS':'TMS' <LValueToRValue>
`-DeclRefExpr 0x5590ecee5900 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B19.5] (ImplicitCastExpr, LValueToRValue, TMS)
   7: DeclRefExpr 0x5590ecee5928 <lvm.c:178:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B19.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
`-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B19.8]->l_G
  10: ImplicitCastExpr 0x5590ecee59e0 <./ltm.h:42:56, col:58> 'global_State *' <LValueToRValue>
`-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
  `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
      `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
(([B19.9])) (ImplicitCastExpr, LValueToRValue, global_State *)
  11: MemberExpr 0x5590ecee59f8 <./ltm.h:42:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
`-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
    `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
        `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B19.10]->tmname
  12: ImplicitCastExpr 0x5590ecee5a58 <./ltm.h:42:56, col:61> 'TString **' <ArrayToPointerDecay>
`-MemberExpr 0x5590ecee59f8 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
  `-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
      `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
          `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
[B19.11] (ImplicitCastExpr, ArrayToPointerDecay, TString **)
  13: DeclRefExpr 0x5590ecee5a30 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
event
  14: ImplicitCastExpr 0x5590ecee5a70 <lvm.c:178:38> 'TMS':'TMS' <LValueToRValue>
`-DeclRefExpr 0x5590ecee5a30 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B19.13] (ImplicitCastExpr, LValueToRValue, TMS)
  15: ArraySubscriptExpr 0x5590ecee5a88 <./ltm.h:42:56, col:69> 'TString *' lvalue
|-ImplicitCastExpr 0x5590ecee5a58 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
| `-MemberExpr 0x5590ecee59f8 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
|   `-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
|     `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
|       `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
|         `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
|           `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecee5a70 <col:38> 'TMS':'TMS' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee5a30 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B19.12][[B19.14]]
  16: ImplicitCastExpr 0x5590ecee5b38 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
`-ArraySubscriptExpr 0x5590ecee5a88 <col:56, col:69> 'TString *' lvalue
  |-ImplicitCastExpr 0x5590ecee5a58 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
  | `-MemberExpr 0x5590ecee59f8 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
  |   `-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
  |     `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
  |       `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
  |         `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
  |           `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
  |             `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
  `-ImplicitCastExpr 0x5590ecee5a70 <col:38> 'TMS':'TMS' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee5a30 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B19.15] (ImplicitCastExpr, LValueToRValue, TString *)
  17: CallExpr 0x5590ecee5ac8 <./ltm.h:42:38, col:70> 'const TValue *'
|-ImplicitCastExpr 0x5590ecee5ab0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee58b0 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
|-ImplicitCastExpr 0x5590ecee5b08 <lvm.c:178:33> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee58d8 <col:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
|-ImplicitCastExpr 0x5590ecee5b20 <col:38> 'TMS':'TMS' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee5900 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
`-ImplicitCastExpr 0x5590ecee5b38 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
  `-ArraySubscriptExpr 0x5590ecee5a88 <col:56, col:69> 'TString *' lvalue
    |-ImplicitCastExpr 0x5590ecee5a58 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
    | `-MemberExpr 0x5590ecee59f8 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
    |   `-ImplicitCastExpr 0x5590ecee59e0 <col:56, col:58> 'global_State *' <LValueToRValue>
    |     `-ParenExpr 0x5590ecee59c0 <col:56, col:58> 'global_State *' lvalue
    |       `-ParenExpr 0x5590ecee59a0 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    |         `-MemberExpr 0x5590ecee5968 <lvm.c:178:30, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
    |           `-ImplicitCastExpr 0x5590ecee5950 <lvm.c:178:30> 'lua_State *' <LValueToRValue>
    |             `-DeclRefExpr 0x5590ecee5928 <col:30> 'lua_State *' lvalue ParmVar 0x5590ecee50d0 'L' 'lua_State *'
    `-ImplicitCastExpr 0x5590ecee5a70 <col:38> 'TMS':'TMS' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee5a30 <col:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B19.2]([B19.4], [B19.6], [B19.16])
   Preds (1): B20
   Succs (1): B17

 [B20]
   1: DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
mt1
   2: ImplicitCastExpr 0x5590ecee5688 <./ltm.h:42:4, col:7> 'Table *' <LValueToRValue>
`-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
  `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
([B20.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5590ecee56a0 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
`-ImplicitCastExpr 0x5590ecee5688 <col:4, col:7> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
    `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
[B20.2]->flags
   4: ImplicitCastExpr 0x5590ecee57b8 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x5590ecee56a0 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
  `-ImplicitCastExpr 0x5590ecee5688 <col:4, col:7> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
      `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
[B20.3] (ImplicitCastExpr, LValueToRValue, lu_byte)
   5: ImplicitCastExpr 0x5590ecee57d0 <./ltm.h:42:4, col:10> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecee57b8 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x5590ecee56a0 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
    `-ImplicitCastExpr 0x5590ecee5688 <col:4, col:7> 'Table *' <LValueToRValue>
      `-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
        `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
[B20.4] (ImplicitCastExpr, IntegralCast, unsigned int)
   6: IntegerLiteral 0x5590ecee56d8 <./ltm.h:42:19> 'unsigned int' 1
1U
   7: DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
event
   8: ImplicitCastExpr 0x5590ecee5740 <./ltm.h:42:23, col:25> 'TMS':'TMS' <LValueToRValue>
`-ParenExpr 0x5590ecee5720 <col:23, col:25> 'TMS':'TMS' lvalue
  `-DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
([B20.7]) (ImplicitCastExpr, LValueToRValue, TMS)
   9: ImplicitCastExpr 0x5590ecee5758 <./ltm.h:42:23, col:25> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecee5740 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
  `-ParenExpr 0x5590ecee5720 <col:23, col:25> 'TMS':'TMS' lvalue
    `-DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B20.8] (ImplicitCastExpr, IntegralCast, unsigned int)
  10: BinaryOperator 0x5590ecee5770 <./ltm.h:42:19, col:25> 'unsigned int' '<<'
|-IntegerLiteral 0x5590ecee56d8 <col:19> 'unsigned int' 1
`-ImplicitCastExpr 0x5590ecee5758 <col:23, col:25> 'unsigned int' <IntegralCast>
  `-ImplicitCastExpr 0x5590ecee5740 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
    `-ParenExpr 0x5590ecee5720 <col:23, col:25> 'TMS':'TMS' lvalue
      `-DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B20.6] << [B20.9]
  11: BinaryOperator 0x5590ecee57e8 <./ltm.h:42:4, col:26> 'unsigned int' '&'
|-ImplicitCastExpr 0x5590ecee57d0 <col:4, col:10> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x5590ecee57b8 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x5590ecee56a0 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
|     `-ImplicitCastExpr 0x5590ecee5688 <col:4, col:7> 'Table *' <LValueToRValue>
|       `-ParenExpr 0x5590ecee5668 <col:4, col:7> 'Table *' lvalue
|         `-DeclRefExpr 0x5590ecee5640 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
`-ParenExpr 0x5590ecee5798 <./ltm.h:42:18, col:26> 'unsigned int'
  `-BinaryOperator 0x5590ecee5770 <col:19, col:25> 'unsigned int' '<<'
    |-IntegerLiteral 0x5590ecee56d8 <col:19> 'unsigned int' 1
    `-ImplicitCastExpr 0x5590ecee5758 <col:23, col:25> 'unsigned int' <IntegralCast>
      `-ImplicitCastExpr 0x5590ecee5740 <col:23, col:25> 'TMS':'TMS' <LValueToRValue>
        `-ParenExpr 0x5590ecee5720 <col:23, col:25> 'TMS':'TMS' lvalue
          `-DeclRefExpr 0x5590ecee56f8 <lvm.c:178:38> 'TMS':'TMS' lvalue ParmVar 0x5590ecee5220 'event' 'TMS':'TMS'
[B20.5] & ([B20.10])
   T: ([B20.11]) ? ... : ...
   Preds (1): B21
   Succs (2): B18 B19

 [B21]
   1: DeclRefExpr 0x5590ecee54a0 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
mt1
   2: ImplicitCastExpr 0x5590ecee5568 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
`-ParenExpr 0x5590ecee54c8 <col:26, col:29> 'Table *' lvalue
  `-DeclRefExpr 0x5590ecee54a0 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
([B21.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: IntegerLiteral 0x5590ecee54e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x5590ecee5520 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee54e8 <col:24> 'int' 0
(void *)[B21.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x5590ecee5580 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
`-ParenExpr 0x5590ecee5548 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee5520 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee54e8 <col:24> 'int' 0
([B21.4]) (ImplicitCastExpr, BitCast, Table *)
   6: BinaryOperator 0x5590ecee5598 <./ltm.h:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5590ecee5568 <./ltm.h:41:26, col:29> 'Table *' <LValueToRValue>
| `-ParenExpr 0x5590ecee54c8 <col:26, col:29> 'Table *' lvalue
|   `-DeclRefExpr 0x5590ecee54a0 <lvm.c:178:33> 'Table *' lvalue ParmVar 0x5590ecee5140 'mt1' 'Table *'
`-ImplicitCastExpr 0x5590ecee5580 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Table *' <BitCast>
  `-ParenExpr 0x5590ecee5548 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee5520 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee54e8 <col:24> 'int' 0
[B21.2] == [B21.5]
   T: [B21.6] ? ... : ...
   Preds (1): B22
   Succs (2): B16 B20

 [B0 (EXIT)]
   Preds (5): B1 B2 B4 B12 B14
