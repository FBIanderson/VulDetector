int luaO_str2d(const char *s, lua_Number *result)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: IntegerLiteral 0x5569011eee90 <lobject.c:99:10> 'int' 1
1
   2: ReturnStmt 0x5569011eeeb0 <lobject.c:99:3, col:10>
`-IntegerLiteral 0x5569011eee90 <col:10> 'int' 1
return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x5569011eee20 <lobject.c:98:31> 'int' 0
0
   2: ReturnStmt 0x5569011eee40 <lobject.c:98:24, col:31>
`-IntegerLiteral 0x5569011eee20 <col:31> 'int' 0
return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5569011eed50 <lobject.c:98:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   2: ImplicitCastExpr 0x5569011eed78 <lobject.c:98:8> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011eed50 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B3.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: UnaryOperator 0x5569011eed90 <lobject.c:98:7, col:8> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011eed78 <col:8> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011eed50 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
*[B3.2]
   4: ImplicitCastExpr 0x5569011eedc8 <lobject.c:98:7, col:8> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011eed90 <col:7, col:8> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x5569011eed78 <col:8> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011eed50 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x5569011eede0 <lobject.c:98:7, col:8> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011eedc8 <col:7, col:8> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011eed90 <col:7, col:8> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x5569011eed78 <col:8> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011eed50 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B3.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x5569011eedb0 <lobject.c:98:18> 'int' 0
'\x00'
   7: BinaryOperator 0x5569011eedf8 <lobject.c:98:7, col:18> 'int' '!='
|-ImplicitCastExpr 0x5569011eede0 <col:7, col:8> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011eedc8 <col:7, col:8> 'char' <LValueToRValue>
|   `-UnaryOperator 0x5569011eed90 <col:7, col:8> 'char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5569011eed78 <col:8> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011eed50 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
`-CharacterLiteral 0x5569011eedb0 <col:18> 'int' 0
[B3.5] != [B3.6]
   T: if [B3.7]
   Preds (1): B6
   Succs (2): B2 B1

 [B4]
   Preds (1): B5
   Succs (1): B6

 [B5]
   1: DeclRefExpr 0x5569011eece8 <lobject.c:97:49> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   2: UnaryOperator 0x5569011eed10 <lobject.c:97:49, col:55> 'char *' postfix '++'
`-DeclRefExpr 0x5569011eece8 <col:49> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B5.1]++
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x5569011ee900 </usr/include/ctype.h:89:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
__ctype_b_loc
   2: ImplicitCastExpr 0x5569011ee958 </usr/include/ctype.h:89:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned short **(*)(void))
   3: CallExpr 0x5569011ee970 </usr/include/ctype.h:89:6, col:21> 'const unsigned short **'
`-ImplicitCastExpr 0x5569011ee958 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
[B6.2]()
   4: UnaryOperator 0x5569011ee998 </usr/include/ctype.h:89:5, col:21> 'const unsigned short *' lvalue prefix '*'
`-CallExpr 0x5569011ee970 <col:6, col:21> 'const unsigned short **'
  `-ImplicitCastExpr 0x5569011ee958 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
*[B6.3]
   5: ImplicitCastExpr 0x5569011eebb0 </usr/include/ctype.h:89:4, col:22> 'const unsigned short *' <LValueToRValue>
`-ParenExpr 0x5569011ee9b8 <col:4, col:22> 'const unsigned short *' lvalue
  `-UnaryOperator 0x5569011ee998 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    `-CallExpr 0x5569011ee970 <col:6, col:21> 'const unsigned short **'
      `-ImplicitCastExpr 0x5569011ee958 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
([B6.4]) (ImplicitCastExpr, LValueToRValue, const unsigned short *)
   6: DeclRefExpr 0x5569011ee9d8 <lobject.c:97:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   7: ImplicitCastExpr 0x5569011eea00 <lobject.c:97:39> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B6.6] (ImplicitCastExpr, LValueToRValue, char *)
   8: UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
*[B6.7]
   9: ImplicitCastExpr 0x5569011eeaa0 <./llimits.h:75:26, col:30> 'char' <LValueToRValue>
`-ParenExpr 0x5569011eea80 <col:26, col:30> 'char' lvalue
  `-UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
([B6.8]) (ImplicitCastExpr, LValueToRValue, char)
  10: CStyleCastExpr 0x5569011eeab8 <./llimits.h:75:23, col:30> 'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x5569011eeaa0 <col:26, col:30> 'char' <LValueToRValue>
  `-ParenExpr 0x5569011eea80 <col:26, col:30> 'char' lvalue
    `-UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
      `-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
(unsigned char)[B6.9] (CStyleCastExpr, IntegralCast, unsigned char)
  11: CStyleCastExpr 0x5569011eeb88 </usr/include/ctype.h:89:24, col:32> 'int' <IntegralCast>
`-ParenExpr 0x5569011eeb68 <col:30, col:32> 'unsigned char'
  `-ParenExpr 0x5569011eeb00 <line:197:31, col:33> 'unsigned char'
    `-ParenExpr 0x5569011eeae0 <./llimits.h:75:22, col:31> 'unsigned char'
      `-CStyleCastExpr 0x5569011eeab8 <col:23, col:30> 'unsigned char' <IntegralCast>
        `-ImplicitCastExpr 0x5569011eeaa0 <col:26, col:30> 'char' <LValueToRValue>
          `-ParenExpr 0x5569011eea80 <col:26, col:30> 'char' lvalue
            `-UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
              `-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
                `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
(int)((([B6.10]))) (CStyleCastExpr, IntegralCast, int)
  12: ArraySubscriptExpr 0x5569011eebc8 </usr/include/ctype.h:89:4, col:33> 'const unsigned short' lvalue
|-ImplicitCastExpr 0x5569011eebb0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
| `-ParenExpr 0x5569011ee9b8 <col:4, col:22> 'const unsigned short *' lvalue
|   `-UnaryOperator 0x5569011ee998 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     `-CallExpr 0x5569011ee970 <col:6, col:21> 'const unsigned short **'
|       `-ImplicitCastExpr 0x5569011ee958 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
`-CStyleCastExpr 0x5569011eeb88 <col:24, col:32> 'int' <IntegralCast>
  `-ParenExpr 0x5569011eeb68 <col:30, col:32> 'unsigned char'
    `-ParenExpr 0x5569011eeb00 <line:197:31, col:33> 'unsigned char'
      `-ParenExpr 0x5569011eeae0 <./llimits.h:75:22, col:31> 'unsigned char'
        `-CStyleCastExpr 0x5569011eeab8 <col:23, col:30> 'unsigned char' <IntegralCast>
          `-ImplicitCastExpr 0x5569011eeaa0 <col:26, col:30> 'char' <LValueToRValue>
            `-ParenExpr 0x5569011eea80 <col:26, col:30> 'char' lvalue
              `-UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
                `-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
                  `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B6.5][[B6.11]]
  13: ImplicitCastExpr 0x5569011eec58 </usr/include/ctype.h:89:4, col:33> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x5569011eebc8 <col:4, col:33> 'const unsigned short' lvalue
  |-ImplicitCastExpr 0x5569011eebb0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  | `-ParenExpr 0x5569011ee9b8 <col:4, col:22> 'const unsigned short *' lvalue
  |   `-UnaryOperator 0x5569011ee998 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     `-CallExpr 0x5569011ee970 <col:6, col:21> 'const unsigned short **'
  |       `-ImplicitCastExpr 0x5569011ee958 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
  `-CStyleCastExpr 0x5569011eeb88 <col:24, col:32> 'int' <IntegralCast>
    `-ParenExpr 0x5569011eeb68 <col:30, col:32> 'unsigned char'
      `-ParenExpr 0x5569011eeb00 <line:197:31, col:33> 'unsigned char'
        `-ParenExpr 0x5569011eeae0 <./llimits.h:75:22, col:31> 'unsigned char'
          `-CStyleCastExpr 0x5569011eeab8 <col:23, col:30> 'unsigned char' <IntegralCast>
            `-ImplicitCastExpr 0x5569011eeaa0 <col:26, col:30> 'char' <LValueToRValue>
              `-ParenExpr 0x5569011eea80 <col:26, col:30> 'char' lvalue
                `-UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
                  `-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
                    `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B6.12] (ImplicitCastExpr, LValueToRValue, unsigned short)
  14: ImplicitCastExpr 0x5569011eec70 </usr/include/ctype.h:89:4, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011eec58 <col:4, col:33> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x5569011eebc8 <col:4, col:33> 'const unsigned short' lvalue
    |-ImplicitCastExpr 0x5569011eebb0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    | `-ParenExpr 0x5569011ee9b8 <col:4, col:22> 'const unsigned short *' lvalue
    |   `-UnaryOperator 0x5569011ee998 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     `-CallExpr 0x5569011ee970 <col:6, col:21> 'const unsigned short **'
    |       `-ImplicitCastExpr 0x5569011ee958 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
    `-CStyleCastExpr 0x5569011eeb88 <col:24, col:32> 'int' <IntegralCast>
      `-ParenExpr 0x5569011eeb68 <col:30, col:32> 'unsigned char'
        `-ParenExpr 0x5569011eeb00 <line:197:31, col:33> 'unsigned char'
          `-ParenExpr 0x5569011eeae0 <./llimits.h:75:22, col:31> 'unsigned char'
            `-CStyleCastExpr 0x5569011eeab8 <col:23, col:30> 'unsigned char' <IntegralCast>
              `-ImplicitCastExpr 0x5569011eeaa0 <col:26, col:30> 'char' <LValueToRValue>
                `-ParenExpr 0x5569011eea80 <col:26, col:30> 'char' lvalue
                  `-UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
                    `-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
                      `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B6.13] (ImplicitCastExpr, IntegralCast, int)
  15: DeclRefExpr 0x5569011eebf0 </usr/include/ctype.h:197:36> 'int' EnumConstant 0x556901055f50 '_ISspace' 'int'
_ISspace
  16: CStyleCastExpr 0x5569011eec30 </usr/include/ctype.h:89:37, line:197:36> 'unsigned short' <IntegralCast>
`-DeclRefExpr 0x5569011eebf0 <col:36> 'int' EnumConstant 0x556901055f50 '_ISspace' 'int'
(unsigned short)[B6.15] (CStyleCastExpr, IntegralCast, unsigned short)
  17: ImplicitCastExpr 0x5569011eec88 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
`-CStyleCastExpr 0x5569011eec30 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
  `-DeclRefExpr 0x5569011eebf0 <col:36> 'int' EnumConstant 0x556901055f50 '_ISspace' 'int'
[B6.16] (ImplicitCastExpr, IntegralCast, int)
  18: BinaryOperator 0x5569011eeca0 </usr/include/ctype.h:89:4, line:197:36> 'int' '&'
|-ImplicitCastExpr 0x5569011eec70 <line:89:4, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011eec58 <col:4, col:33> 'unsigned short' <LValueToRValue>
|   `-ArraySubscriptExpr 0x5569011eebc8 <col:4, col:33> 'const unsigned short' lvalue
|     |-ImplicitCastExpr 0x5569011eebb0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     | `-ParenExpr 0x5569011ee9b8 <col:4, col:22> 'const unsigned short *' lvalue
|     |   `-UnaryOperator 0x5569011ee998 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     `-CallExpr 0x5569011ee970 <col:6, col:21> 'const unsigned short **'
|     |       `-ImplicitCastExpr 0x5569011ee958 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |         `-DeclRefExpr 0x5569011ee900 <col:6> 'const unsigned short **(void)' Function 0x5569010574b0 '__ctype_b_loc' 'const unsigned short **(void)'
|     `-CStyleCastExpr 0x5569011eeb88 <col:24, col:32> 'int' <IntegralCast>
|       `-ParenExpr 0x5569011eeb68 <col:30, col:32> 'unsigned char'
|         `-ParenExpr 0x5569011eeb00 <line:197:31, col:33> 'unsigned char'
|           `-ParenExpr 0x5569011eeae0 <./llimits.h:75:22, col:31> 'unsigned char'
|             `-CStyleCastExpr 0x5569011eeab8 <col:23, col:30> 'unsigned char' <IntegralCast>
|               `-ImplicitCastExpr 0x5569011eeaa0 <col:26, col:30> 'char' <LValueToRValue>
|                 `-ParenExpr 0x5569011eea80 <col:26, col:30> 'char' lvalue
|                   `-UnaryOperator 0x5569011eea18 <lobject.c:97:38, col:39> 'char' lvalue prefix '*'
|                     `-ImplicitCastExpr 0x5569011eea00 <col:39> 'char *' <LValueToRValue>
|                       `-DeclRefExpr 0x5569011ee9d8 <col:39> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
`-ImplicitCastExpr 0x5569011eec88 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
  `-CStyleCastExpr 0x5569011eec30 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
    `-DeclRefExpr 0x5569011eebf0 <col:36> 'int' EnumConstant 0x556901055f50 '_ISspace' 'int'
[B6.14] & [B6.17]
   T: while ([B6.18])
   Preds (2): B4 B8
   Succs (2): B5 B3

 [B7]
   1: IntegerLiteral 0x5569011ee890 <lobject.c:96:31> 'int' 1
1
   2: ReturnStmt 0x5569011ee8b0 <lobject.c:96:24, col:31>
`-IntegerLiteral 0x5569011ee890 <col:31> 'int' 1
return [B7.1];
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x5569011ee7c0 <lobject.c:96:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   2: ImplicitCastExpr 0x5569011ee7e8 <lobject.c:96:8> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee7c0 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B8.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: UnaryOperator 0x5569011ee800 <lobject.c:96:7, col:8> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011ee7e8 <col:8> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011ee7c0 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
*[B8.2]
   4: ImplicitCastExpr 0x5569011ee838 <lobject.c:96:7, col:8> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011ee800 <col:7, col:8> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x5569011ee7e8 <col:8> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011ee7c0 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B8.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x5569011ee850 <lobject.c:96:7, col:8> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011ee838 <col:7, col:8> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011ee800 <col:7, col:8> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x5569011ee7e8 <col:8> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011ee7c0 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B8.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x5569011ee820 <lobject.c:96:18> 'int' 0
'\x00'
   7: BinaryOperator 0x5569011ee868 <lobject.c:96:7, col:18> 'int' '=='
|-ImplicitCastExpr 0x5569011ee850 <col:7, col:8> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011ee838 <col:7, col:8> 'char' <LValueToRValue>
|   `-UnaryOperator 0x5569011ee800 <col:7, col:8> 'char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5569011ee7e8 <col:8> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011ee7c0 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
`-CharacterLiteral 0x5569011ee820 <col:18> 'int' 0
[B8.5] == [B8.6]
   T: if [B8.7]
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x5569011ee510 <lobject.c:95:24> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x5569010ac9a8 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
strtoul
   2: ImplicitCastExpr 0x5569011ee628 <lobject.c:95:24> 'unsigned long (*)(const char *__restrict, char **__restrict, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011ee510 <col:24> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x5569010ac9a8 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *__restrict, char **__restrict, int))
   3: DeclRefExpr 0x5569011ee538 <lobject.c:95:32> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
s
   4: ImplicitCastExpr 0x5569011ee680 <lobject.c:95:32> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee538 <col:32> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
[B9.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x5569011ee560 <lobject.c:95:36> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   6: UnaryOperator 0x5569011ee588 <lobject.c:95:35, col:36> 'char **' prefix '&'
`-DeclRefExpr 0x5569011ee560 <col:36> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
&[B9.5]
   7: IntegerLiteral 0x5569011ee5a8 <lobject.c:95:44> 'int' 16
16
   8: CallExpr 0x5569011ee640 <lobject.c:95:24, col:46> 'unsigned long'
|-ImplicitCastExpr 0x5569011ee628 <col:24> 'unsigned long (*)(const char *__restrict, char **__restrict, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011ee510 <col:24> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x5569010ac9a8 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
|-ImplicitCastExpr 0x5569011ee680 <col:32> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011ee538 <col:32> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
|-UnaryOperator 0x5569011ee588 <col:35, col:36> 'char **' prefix '&'
| `-DeclRefExpr 0x5569011ee560 <col:36> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
`-IntegerLiteral 0x5569011ee5a8 <col:44> 'int' 16
[B9.2]([B9.4], [B9.6], [B9.7])
   9: CStyleCastExpr 0x5569011ee718 <./llimits.h:75:23, col:30> 'lua_Number':'double' <IntegralToFloating>
`-ParenExpr 0x5569011ee6f8 <col:26, col:30> 'unsigned long'
  `-ParenExpr 0x5569011ee698 <line:79:38, col:40> 'unsigned long'
    `-CallExpr 0x5569011ee640 <lobject.c:95:24, col:46> 'unsigned long'
      |-ImplicitCastExpr 0x5569011ee628 <col:24> 'unsigned long (*)(const char *__restrict, char **__restrict, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5569011ee510 <col:24> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x5569010ac9a8 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
      |-ImplicitCastExpr 0x5569011ee680 <col:32> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x5569011ee538 <col:32> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
      |-UnaryOperator 0x5569011ee588 <col:35, col:36> 'char **' prefix '&'
      | `-DeclRefExpr 0x5569011ee560 <col:36> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
      `-IntegerLiteral 0x5569011ee5a8 <col:44> 'int' 16
(lua_Number)(([B9.8])) (CStyleCastExpr, IntegralToFloating, lua_Number)
  10: DeclRefExpr 0x5569011ee4b0 <lobject.c:95:6> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
result
  11: ImplicitCastExpr 0x5569011ee4d8 <lobject.c:95:6> 'lua_Number *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee4b0 <col:6> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
[B9.10] (ImplicitCastExpr, LValueToRValue, lua_Number *)
  12: UnaryOperator 0x5569011ee4f0 <lobject.c:95:5, col:6> 'lua_Number':'double' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011ee4d8 <col:6> 'lua_Number *' <LValueToRValue>
  `-DeclRefExpr 0x5569011ee4b0 <col:6> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
*[B9.11]
  13: BinaryOperator 0x5569011ee760 <lobject.c:95:5, ./llimits.h:75:31> 'lua_Number':'double' '='
|-UnaryOperator 0x5569011ee4f0 <lobject.c:95:5, col:6> 'lua_Number':'double' lvalue prefix '*'
| `-ImplicitCastExpr 0x5569011ee4d8 <col:6> 'lua_Number *' <LValueToRValue>
|   `-DeclRefExpr 0x5569011ee4b0 <col:6> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
`-ParenExpr 0x5569011ee740 <./llimits.h:75:22, col:31> 'lua_Number':'double'
  `-CStyleCastExpr 0x5569011ee718 <col:23, col:30> 'lua_Number':'double' <IntegralToFloating>
    `-ParenExpr 0x5569011ee6f8 <col:26, col:30> 'unsigned long'
      `-ParenExpr 0x5569011ee698 <line:79:38, col:40> 'unsigned long'
        `-CallExpr 0x5569011ee640 <lobject.c:95:24, col:46> 'unsigned long'
          |-ImplicitCastExpr 0x5569011ee628 <col:24> 'unsigned long (*)(const char *__restrict, char **__restrict, int)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x5569011ee510 <col:24> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x5569010ac9a8 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
          |-ImplicitCastExpr 0x5569011ee680 <col:32> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x5569011ee538 <col:32> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
          |-UnaryOperator 0x5569011ee588 <col:35, col:36> 'char **' prefix '&'
          | `-DeclRefExpr 0x5569011ee560 <col:36> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
          `-IntegerLiteral 0x5569011ee5a8 <col:44> 'int' 16
[B9.12] = ([B9.9])
   Preds (2): B10 B11
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x5569011ee3b8 <lobject.c:94:26> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   2: ImplicitCastExpr 0x5569011ee3e0 <lobject.c:94:26> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee3b8 <col:26> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B10.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: UnaryOperator 0x5569011ee3f8 <lobject.c:94:25, col:26> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011ee3e0 <col:26> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011ee3b8 <col:26> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
*[B10.2]
   4: ImplicitCastExpr 0x5569011ee430 <lobject.c:94:25, col:26> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011ee3f8 <col:25, col:26> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x5569011ee3e0 <col:26> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011ee3b8 <col:26> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B10.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x5569011ee448 <lobject.c:94:25, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011ee430 <col:25, col:26> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011ee3f8 <col:25, col:26> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x5569011ee3e0 <col:26> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011ee3b8 <col:26> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B10.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x5569011ee418 <lobject.c:94:36> 'int' 88
'X'
   7: BinaryOperator 0x5569011ee460 <lobject.c:94:25, col:36> 'int' '=='
|-ImplicitCastExpr 0x5569011ee448 <col:25, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011ee430 <col:25, col:26> 'char' <LValueToRValue>
|   `-UnaryOperator 0x5569011ee3f8 <col:25, col:26> 'char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5569011ee3e0 <col:26> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011ee3b8 <col:26> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
`-CharacterLiteral 0x5569011ee418 <col:36> 'int' 88
[B10.5] == [B10.6]
   T: if [B11.7] || [B10.7]
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x5569011ee2e8 <lobject.c:94:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   2: ImplicitCastExpr 0x5569011ee310 <lobject.c:94:8> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee2e8 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B11.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: UnaryOperator 0x5569011ee328 <lobject.c:94:7, col:8> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011ee310 <col:8> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011ee2e8 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
*[B11.2]
   4: ImplicitCastExpr 0x5569011ee360 <lobject.c:94:7, col:8> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011ee328 <col:7, col:8> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x5569011ee310 <col:8> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011ee2e8 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B11.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x5569011ee378 <lobject.c:94:7, col:8> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011ee360 <col:7, col:8> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011ee328 <col:7, col:8> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x5569011ee310 <col:8> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011ee2e8 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B11.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x5569011ee348 <lobject.c:94:18> 'int' 120
'x'
   7: BinaryOperator 0x5569011ee390 <lobject.c:94:7, col:18> 'int' '=='
|-ImplicitCastExpr 0x5569011ee378 <col:7, col:8> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011ee360 <col:7, col:8> 'char' <LValueToRValue>
|   `-UnaryOperator 0x5569011ee328 <col:7, col:8> 'char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5569011ee310 <col:8> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011ee2e8 <col:8> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
`-CharacterLiteral 0x5569011ee348 <col:18> 'int' 120
[B11.5] == [B11.6]
   T: [B11.7] || ...
   Preds (1): B13
   Succs (2): B9 B10

 [B12]
   1: IntegerLiteral 0x5569011ee278 <lobject.c:93:27> 'int' 0
0
   2: ReturnStmt 0x5569011ee298 <lobject.c:93:20, col:27>
`-IntegerLiteral 0x5569011ee278 <col:27> 'int' 0
return [B12.1];
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclStmt 0x5569011edfd8 <lobject.c:91:3, col:15>col:9
`-VarDecl 0x5569011edf78 <col:3, col:9> col:9 used endptr 'char *'
char *endptr;
   2: DeclRefExpr 0x5569011ee050 <./luaconf.h:525:29> 'double (const char *__restrict, char **__restrict)' Function 0x5569010abcc8 'strtod' 'double (const char *__restrict, char **__restrict)'
strtod
   3: ImplicitCastExpr 0x5569011ee128 <./luaconf.h:525:29> 'double (*)(const char *__restrict, char **__restrict)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011ee050 <col:29> 'double (const char *__restrict, char **__restrict)' Function 0x5569010abcc8 'strtod' 'double (const char *__restrict, char **__restrict)'
[B13.2] (ImplicitCastExpr, FunctionToPointerDecay, double (*)(const char *__restrict, char **__restrict))
   4: DeclRefExpr 0x5569011ee078 <lobject.c:92:28> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
s
   5: ImplicitCastExpr 0x5569011ee178 <./luaconf.h:525:36, col:38> 'const char *' <LValueToRValue>
`-ParenExpr 0x5569011ee0a0 <col:36, col:38> 'const char *' lvalue
  `-DeclRefExpr 0x5569011ee078 <lobject.c:92:28> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
([B13.4]) (ImplicitCastExpr, LValueToRValue, const char *)
   6: DeclRefExpr 0x5569011ee0c0 <lobject.c:92:32> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
   7: UnaryOperator 0x5569011ee0e8 <lobject.c:92:31, col:32> 'char **' prefix '&'
`-DeclRefExpr 0x5569011ee0c0 <col:32> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
&[B13.6]
   8: CallExpr 0x5569011ee140 <./luaconf.h:525:29, col:44> 'double'
|-ImplicitCastExpr 0x5569011ee128 <col:29> 'double (*)(const char *__restrict, char **__restrict)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011ee050 <col:29> 'double (const char *__restrict, char **__restrict)' Function 0x5569010abcc8 'strtod' 'double (const char *__restrict, char **__restrict)'
|-ImplicitCastExpr 0x5569011ee178 <col:36, col:38> 'const char *' <LValueToRValue>
| `-ParenExpr 0x5569011ee0a0 <col:36, col:38> 'const char *' lvalue
|   `-DeclRefExpr 0x5569011ee078 <lobject.c:92:28> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
`-ParenExpr 0x5569011ee108 <./luaconf.h:525:41, col:43> 'char **'
  `-UnaryOperator 0x5569011ee0e8 <lobject.c:92:31, col:32> 'char **' prefix '&'
    `-DeclRefExpr 0x5569011ee0c0 <col:32> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B13.3]([B13.5], ([B13.7]))
   9: DeclRefExpr 0x5569011edff0 <lobject.c:92:4> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
result
  10: ImplicitCastExpr 0x5569011ee018 <lobject.c:92:4> 'lua_Number *' <LValueToRValue>
`-DeclRefExpr 0x5569011edff0 <col:4> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
[B13.9] (ImplicitCastExpr, LValueToRValue, lua_Number *)
  11: UnaryOperator 0x5569011ee030 <lobject.c:92:3, col:4> 'lua_Number':'double' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011ee018 <col:4> 'lua_Number *' <LValueToRValue>
  `-DeclRefExpr 0x5569011edff0 <col:4> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
*[B13.10]
  12: BinaryOperator 0x5569011ee190 <lobject.c:92:3, ./luaconf.h:525:44> 'lua_Number':'double' '='
|-UnaryOperator 0x5569011ee030 <lobject.c:92:3, col:4> 'lua_Number':'double' lvalue prefix '*'
| `-ImplicitCastExpr 0x5569011ee018 <col:4> 'lua_Number *' <LValueToRValue>
|   `-DeclRefExpr 0x5569011edff0 <col:4> 'lua_Number *' lvalue ParmVar 0x5569011eddd0 'result' 'lua_Number *'
`-CallExpr 0x5569011ee140 <./luaconf.h:525:29, col:44> 'double'
  |-ImplicitCastExpr 0x5569011ee128 <col:29> 'double (*)(const char *__restrict, char **__restrict)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5569011ee050 <col:29> 'double (const char *__restrict, char **__restrict)' Function 0x5569010abcc8 'strtod' 'double (const char *__restrict, char **__restrict)'
  |-ImplicitCastExpr 0x5569011ee178 <col:36, col:38> 'const char *' <LValueToRValue>
  | `-ParenExpr 0x5569011ee0a0 <col:36, col:38> 'const char *' lvalue
  |   `-DeclRefExpr 0x5569011ee078 <lobject.c:92:28> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
  `-ParenExpr 0x5569011ee108 <./luaconf.h:525:41, col:43> 'char **'
    `-UnaryOperator 0x5569011ee0e8 <lobject.c:92:31, col:32> 'char **' prefix '&'
      `-DeclRefExpr 0x5569011ee0c0 <col:32> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B13.11] = [B13.8]
  13: DeclRefExpr 0x5569011ee1b8 <lobject.c:93:7> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
endptr
  14: ImplicitCastExpr 0x5569011ee208 <lobject.c:93:7> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee1b8 <col:7> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
[B13.13] (ImplicitCastExpr, LValueToRValue, char *)
  15: DeclRefExpr 0x5569011ee1e0 <lobject.c:93:17> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
s
  16: ImplicitCastExpr 0x5569011ee220 <lobject.c:93:17> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011ee1e0 <col:17> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
[B13.15] (ImplicitCastExpr, LValueToRValue, const char *)
  17: ImplicitCastExpr 0x5569011ee238 <lobject.c:93:17> 'char *' <BitCast>
`-ImplicitCastExpr 0x5569011ee220 <col:17> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011ee1e0 <col:17> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
[B13.16] (ImplicitCastExpr, BitCast, char *)
  18: BinaryOperator 0x5569011ee250 <lobject.c:93:7, col:17> 'int' '=='
|-ImplicitCastExpr 0x5569011ee208 <col:7> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011ee1b8 <col:7> 'char *' lvalue Var 0x5569011edf78 'endptr' 'char *'
`-ImplicitCastExpr 0x5569011ee238 <col:17> 'char *' <BitCast>
  `-ImplicitCastExpr 0x5569011ee220 <col:17> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011ee1e0 <col:17> 'const char *' lvalue ParmVar 0x5569011edd60 's' 'const char *'
[B13.14] == [B13.17]
   T: if [B13.18]
   Preds (1): B14
   Succs (2): B12 B11

 [B0 (EXIT)]
   Preds (4): B1 B2 B7 B12
