int luaZ_lookahead(ZIO *z)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: DeclRefExpr 0x55936bccc370 <lzio.c:44:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
z
   2: ImplicitCastExpr 0x55936bccc398 <lzio.c:44:20> 'ZIO *' <LValueToRValue>
`-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B1.1] (ImplicitCastExpr, LValueToRValue, ZIO *)
   3: MemberExpr 0x55936bccc3b0 <lzio.c:44:20, col:23> 'const char *' lvalue ->p 0x55936bcc1de0
`-ImplicitCastExpr 0x55936bccc398 <col:20> 'ZIO *' <LValueToRValue>
  `-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B1.2]->p
   4: ImplicitCastExpr 0x55936bccc3e8 <lzio.c:44:20, col:23> 'const char *' <LValueToRValue>
`-MemberExpr 0x55936bccc3b0 <col:20, col:23> 'const char *' lvalue ->p 0x55936bcc1de0
  `-ImplicitCastExpr 0x55936bccc398 <col:20> 'ZIO *' <LValueToRValue>
    `-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: UnaryOperator 0x55936bccc400 <lzio.c:44:19, col:23> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55936bccc3e8 <col:20, col:23> 'const char *' <LValueToRValue>
  `-MemberExpr 0x55936bccc3b0 <col:20, col:23> 'const char *' lvalue ->p 0x55936bcc1de0
    `-ImplicitCastExpr 0x55936bccc398 <col:20> 'ZIO *' <LValueToRValue>
      `-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
*[B1.4]
   6: ImplicitCastExpr 0x55936bcccdb8 <./llimits.h:75:26, col:30> 'char' <LValueToRValue>
`-ParenExpr 0x55936bcccd98 <col:26, col:30> 'const char' lvalue
  `-ParenExpr 0x55936bccc420 <./lzio.h:20:51, col:53> 'const char' lvalue
    `-UnaryOperator 0x55936bccc400 <lzio.c:44:19, col:23> 'const char' lvalue prefix '*'
      `-ImplicitCastExpr 0x55936bccc3e8 <col:20, col:23> 'const char *' <LValueToRValue>
        `-MemberExpr 0x55936bccc3b0 <col:20, col:23> 'const char *' lvalue ->p 0x55936bcc1de0
          `-ImplicitCastExpr 0x55936bccc398 <col:20> 'ZIO *' <LValueToRValue>
            `-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
(([B1.5])) (ImplicitCastExpr, LValueToRValue, char)
   7: CStyleCastExpr 0x55936bcccdd0 <./llimits.h:75:23, col:30> 'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x55936bcccdb8 <col:26, col:30> 'char' <LValueToRValue>
  `-ParenExpr 0x55936bcccd98 <col:26, col:30> 'const char' lvalue
    `-ParenExpr 0x55936bccc420 <./lzio.h:20:51, col:53> 'const char' lvalue
      `-UnaryOperator 0x55936bccc400 <lzio.c:44:19, col:23> 'const char' lvalue prefix '*'
        `-ImplicitCastExpr 0x55936bccc3e8 <col:20, col:23> 'const char *' <LValueToRValue>
          `-MemberExpr 0x55936bccc3b0 <col:20, col:23> 'const char *' lvalue ->p 0x55936bcc1de0
            `-ImplicitCastExpr 0x55936bccc398 <col:20> 'ZIO *' <LValueToRValue>
              `-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
(unsigned char)[B1.6] (CStyleCastExpr, IntegralCast, unsigned char)
   8: CStyleCastExpr 0x55936bccce80 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x55936bccce60 <col:26, col:30> 'unsigned char'
  `-ParenExpr 0x55936bcccdf8 <col:22, col:31> 'unsigned char'
    `-CStyleCastExpr 0x55936bcccdd0 <col:23, col:30> 'unsigned char' <IntegralCast>
      `-ImplicitCastExpr 0x55936bcccdb8 <col:26, col:30> 'char' <LValueToRValue>
        `-ParenExpr 0x55936bcccd98 <col:26, col:30> 'const char' lvalue
          `-ParenExpr 0x55936bccc420 <./lzio.h:20:51, col:53> 'const char' lvalue
            `-UnaryOperator 0x55936bccc400 <lzio.c:44:19, col:23> 'const char' lvalue prefix '*'
              `-ImplicitCastExpr 0x55936bccc3e8 <col:20, col:23> 'const char *' <LValueToRValue>
                `-MemberExpr 0x55936bccc3b0 <col:20, col:23> 'const char *' lvalue ->p 0x55936bcc1de0
                  `-ImplicitCastExpr 0x55936bccc398 <col:20> 'ZIO *' <LValueToRValue>
                    `-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
(int)(([B1.7])) (CStyleCastExpr, IntegralCast, int)
   9: ReturnStmt 0x55936bcccec8 <lzio.c:44:3, ./llimits.h:75:31>
`-ParenExpr 0x55936bcccea8 <col:22, col:31> 'int'
  `-CStyleCastExpr 0x55936bccce80 <col:23, col:30> 'int' <IntegralCast>
    `-ParenExpr 0x55936bccce60 <col:26, col:30> 'unsigned char'
      `-ParenExpr 0x55936bcccdf8 <col:22, col:31> 'unsigned char'
        `-CStyleCastExpr 0x55936bcccdd0 <col:23, col:30> 'unsigned char' <IntegralCast>
          `-ImplicitCastExpr 0x55936bcccdb8 <col:26, col:30> 'char' <LValueToRValue>
            `-ParenExpr 0x55936bcccd98 <col:26, col:30> 'const char' lvalue
              `-ParenExpr 0x55936bccc420 <./lzio.h:20:51, col:53> 'const char' lvalue
                `-UnaryOperator 0x55936bccc400 <lzio.c:44:19, col:23> 'const char' lvalue prefix '*'
                  `-ImplicitCastExpr 0x55936bccc3e8 <col:20, col:23> 'const char *' <LValueToRValue>
                    `-MemberExpr 0x55936bccc3b0 <col:20, col:23> 'const char *' lvalue ->p 0x55936bcc1de0
                      `-ImplicitCastExpr 0x55936bccc398 <col:20> 'ZIO *' <LValueToRValue>
                        `-DeclRefExpr 0x55936bccc370 <col:20> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
return ([B1.8]);
   Preds (2): B2 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55936bccc198 <lzio.c:40:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
z
   2: ImplicitCastExpr 0x55936bccc1c0 <lzio.c:40:7> 'ZIO *' <LValueToRValue>
`-DeclRefExpr 0x55936bccc198 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B2.1] (ImplicitCastExpr, LValueToRValue, ZIO *)
   3: MemberExpr 0x55936bccc1d8 <lzio.c:40:7, col:10> 'size_t':'unsigned long' lvalue ->n 0x55936bcc1d80
`-ImplicitCastExpr 0x55936bccc1c0 <col:7> 'ZIO *' <LValueToRValue>
  `-DeclRefExpr 0x55936bccc198 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B2.2]->n
   4: UnaryOperator 0x55936bccc210 <lzio.c:40:7, col:11> 'size_t':'unsigned long' postfix '++'
`-MemberExpr 0x55936bccc1d8 <col:7, col:10> 'size_t':'unsigned long' lvalue ->n 0x55936bcc1d80
  `-ImplicitCastExpr 0x55936bccc1c0 <col:7> 'ZIO *' <LValueToRValue>
    `-DeclRefExpr 0x55936bccc198 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B2.3]++
   5: DeclRefExpr 0x55936bccc230 <lzio.c:41:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
z
   6: ImplicitCastExpr 0x55936bccc258 <lzio.c:41:7> 'ZIO *' <LValueToRValue>
`-DeclRefExpr 0x55936bccc230 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B2.5] (ImplicitCastExpr, LValueToRValue, ZIO *)
   7: MemberExpr 0x55936bccc270 <lzio.c:41:7, col:10> 'const char *' lvalue ->p 0x55936bcc1de0
`-ImplicitCastExpr 0x55936bccc258 <col:7> 'ZIO *' <LValueToRValue>
  `-DeclRefExpr 0x55936bccc230 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B2.6]->p
   8: UnaryOperator 0x55936bccc2a8 <lzio.c:41:7, col:11> 'const char *' postfix '--'
`-MemberExpr 0x55936bccc270 <col:7, col:10> 'const char *' lvalue ->p 0x55936bcc1de0
  `-ImplicitCastExpr 0x55936bccc258 <col:7> 'ZIO *' <LValueToRValue>
    `-DeclRefExpr 0x55936bccc230 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B2.7]--
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x55936bccc120 <./lzio.h:16:15> 'int' 1
1
   2: UnaryOperator 0x55936bccc140 <./lzio.h:16:14, col:15> 'int' prefix '-'
`-IntegerLiteral 0x55936bccc120 <col:15> 'int' 1
-[B3.1]
   3: ReturnStmt 0x55936bccc180 <lzio.c:38:7, ./lzio.h:16:16>
`-ParenExpr 0x55936bccc160 <col:13, col:16> 'int'
  `-UnaryOperator 0x55936bccc140 <col:14, col:15> 'int' prefix '-'
    `-IntegerLiteral 0x55936bccc120 <col:15> 'int' 1
return ([B3.2]);
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x55936bccbf90 <lzio.c:37:9> 'int (ZIO *)' Function 0x55936bcc72f8 'luaZ_fill' 'int (ZIO *)'
luaZ_fill
   2: ImplicitCastExpr 0x55936bccc038 <lzio.c:37:9> 'int (*)(ZIO *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936bccbf90 <col:9> 'int (ZIO *)' Function 0x55936bcc72f8 'luaZ_fill' 'int (ZIO *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(ZIO *))
   3: DeclRefExpr 0x55936bccbfb8 <lzio.c:37:19> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
z
   4: ImplicitCastExpr 0x55936bccc080 <lzio.c:37:19> 'ZIO *' <LValueToRValue>
`-DeclRefExpr 0x55936bccbfb8 <col:19> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B4.3] (ImplicitCastExpr, LValueToRValue, ZIO *)
   5: CallExpr 0x55936bccc050 <lzio.c:37:9, col:20> 'int'
|-ImplicitCastExpr 0x55936bccc038 <col:9> 'int (*)(ZIO *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936bccbf90 <col:9> 'int (ZIO *)' Function 0x55936bcc72f8 'luaZ_fill' 'int (ZIO *)'
`-ImplicitCastExpr 0x55936bccc080 <col:19> 'ZIO *' <LValueToRValue>
  `-DeclRefExpr 0x55936bccbfb8 <col:19> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B4.2]([B4.4])
   6: IntegerLiteral 0x55936bccc098 <./lzio.h:16:15> 'int' 1
1
   7: UnaryOperator 0x55936bccc0b8 <./lzio.h:16:14, col:15> 'int' prefix '-'
`-IntegerLiteral 0x55936bccc098 <col:15> 'int' 1
-[B4.6]
   8: BinaryOperator 0x55936bccc0f8 <lzio.c:37:9, ./lzio.h:16:16> 'int' '=='
|-CallExpr 0x55936bccc050 <lzio.c:37:9, col:20> 'int'
| |-ImplicitCastExpr 0x55936bccc038 <col:9> 'int (*)(ZIO *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55936bccbf90 <col:9> 'int (ZIO *)' Function 0x55936bcc72f8 'luaZ_fill' 'int (ZIO *)'
| `-ImplicitCastExpr 0x55936bccc080 <col:19> 'ZIO *' <LValueToRValue>
|   `-DeclRefExpr 0x55936bccbfb8 <col:19> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
`-ParenExpr 0x55936bccc0d8 <./lzio.h:16:13, col:16> 'int'
  `-UnaryOperator 0x55936bccc0b8 <col:14, col:15> 'int' prefix '-'
    `-IntegerLiteral 0x55936bccc098 <col:15> 'int' 1
[B4.5] == ([B4.7])
   T: if [B4.8]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55936bccbea0 <lzio.c:36:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
z
   2: ImplicitCastExpr 0x55936bccbec8 <lzio.c:36:7> 'ZIO *' <LValueToRValue>
`-DeclRefExpr 0x55936bccbea0 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B5.1] (ImplicitCastExpr, LValueToRValue, ZIO *)
   3: MemberExpr 0x55936bccbee0 <lzio.c:36:7, col:10> 'size_t':'unsigned long' lvalue ->n 0x55936bcc1d80
`-ImplicitCastExpr 0x55936bccbec8 <col:7> 'ZIO *' <LValueToRValue>
  `-DeclRefExpr 0x55936bccbea0 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B5.2]->n
   4: ImplicitCastExpr 0x55936bccbf38 <lzio.c:36:7, col:10> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x55936bccbee0 <col:7, col:10> 'size_t':'unsigned long' lvalue ->n 0x55936bcc1d80
  `-ImplicitCastExpr 0x55936bccbec8 <col:7> 'ZIO *' <LValueToRValue>
    `-DeclRefExpr 0x55936bccbea0 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
[B5.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: IntegerLiteral 0x55936bccbf18 <lzio.c:36:15> 'int' 0
0
   6: ImplicitCastExpr 0x55936bccbf50 <lzio.c:36:15> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55936bccbf18 <col:15> 'int' 0
[B5.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: BinaryOperator 0x55936bccbf68 <lzio.c:36:7, col:15> 'int' '=='
|-ImplicitCastExpr 0x55936bccbf38 <col:7, col:10> 'size_t':'unsigned long' <LValueToRValue>
| `-MemberExpr 0x55936bccbee0 <col:7, col:10> 'size_t':'unsigned long' lvalue ->n 0x55936bcc1d80
|   `-ImplicitCastExpr 0x55936bccbec8 <col:7> 'ZIO *' <LValueToRValue>
|     `-DeclRefExpr 0x55936bccbea0 <col:7> 'ZIO *' lvalue ParmVar 0x55936bccbd20 'z' 'ZIO *'
`-ImplicitCastExpr 0x55936bccbf50 <col:15> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55936bccbf18 <col:15> 'int' 0
[B5.4] == [B5.6]
   T: if [B5.7]
   Preds (1): B6
   Succs (2): B4 B1

 [B0 (EXIT)]
   Preds (2): B1 B3
