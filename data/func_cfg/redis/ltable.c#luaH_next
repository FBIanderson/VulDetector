int luaH_next(lua_State *L, Table *t, StkId key)
 [B12 (ENTRY)]
   Succs (1): B11

 [B1]
   1: IntegerLiteral 0x5654000d9590 <ltable.c:178:10> 'int' 0
0
   2: ReturnStmt 0x5654000d95b0 <ltable.c:178:3, col:10>
`-IntegerLiteral 0x5654000d9590 <col:10> 'int' 0
return [B1.1];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5654000d79f8 <ltable.c:171:44> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   2: UnaryOperator 0x5654000d7a20 <ltable.c:171:44, col:45> 'int' postfix '++'
`-DeclRefExpr 0x5654000d79f8 <col:44> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B2.1]++
   Preds (1): B4
   Succs (1): B5

 [B3]
   1: DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000d7e00 <./ltable.h:13:22, col:24> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
  `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000d7e18 <./ltable.h:13:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
    `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B3.2]->node
   4: ImplicitCastExpr 0x5654000d7e78 <./ltable.h:13:22, col:27> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
      `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B3.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: DeclRefExpr 0x5654000d7e50 <ltable.c:173:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   6: ImplicitCastExpr 0x5654000d7e90 <ltable.c:173:42> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x5654000d7ea8 <./ltable.h:13:22, col:33> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x5654000d7e78 <col:22, col:27> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
|     `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
|       `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
`-ImplicitCastExpr 0x5654000d7e90 <col:42> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B3.4][[B3.6]]
   8: UnaryOperator 0x5654000d7ed0 <./ltable.h:13:21, col:33> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x5654000d7ea8 <col:22, col:33> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x5654000d7e78 <col:22, col:27> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  |   `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
  |     `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
  |       `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
  `-ImplicitCastExpr 0x5654000d7e90 <col:42> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B3.7]
   9: MemberExpr 0x5654000d7f30 <./ltable.h:18:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ParenExpr 0x5654000d7f10 <col:23, col:25> 'Node *'
  `-ParenExpr 0x5654000d7ef0 <line:13:20, col:34> 'Node *'
    `-UnaryOperator 0x5654000d7ed0 <col:21, col:33> 'Node *' prefix '&'
      `-ArraySubscriptExpr 0x5654000d7ea8 <col:22, col:33> 'Node':'struct Node' lvalue
        |-ImplicitCastExpr 0x5654000d7e78 <col:22, col:27> 'Node *' <LValueToRValue>
        | `-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
        |   `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
        |     `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
        |       `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
        `-ImplicitCastExpr 0x5654000d7e90 <col:42> 'int' <LValueToRValue>
          `-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
(([B3.8]))->i_key
  10: MemberExpr 0x5654000d7f68 <./ltable.h:18:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
`-MemberExpr 0x5654000d7f30 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ParenExpr 0x5654000d7f10 <col:23, col:25> 'Node *'
    `-ParenExpr 0x5654000d7ef0 <line:13:20, col:34> 'Node *'
      `-UnaryOperator 0x5654000d7ed0 <col:21, col:33> 'Node *' prefix '&'
        `-ArraySubscriptExpr 0x5654000d7ea8 <col:22, col:33> 'Node':'struct Node' lvalue
          |-ImplicitCastExpr 0x5654000d7e78 <col:22, col:27> 'Node *' <LValueToRValue>
          | `-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
          |   `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
          |     `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
          |       `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
          `-ImplicitCastExpr 0x5654000d7e90 <col:42> 'int' <LValueToRValue>
            `-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B3.9].tvk
  11: UnaryOperator 0x5654000d7fa0 <./ltable.h:18:22, col:34> 'TValue *' prefix '&'
`-MemberExpr 0x5654000d7f68 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
  `-MemberExpr 0x5654000d7f30 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ParenExpr 0x5654000d7f10 <col:23, col:25> 'Node *'
      `-ParenExpr 0x5654000d7ef0 <line:13:20, col:34> 'Node *'
        `-UnaryOperator 0x5654000d7ed0 <col:21, col:33> 'Node *' prefix '&'
          `-ArraySubscriptExpr 0x5654000d7ea8 <col:22, col:33> 'Node':'struct Node' lvalue
            |-ImplicitCastExpr 0x5654000d7e78 <col:22, col:27> 'Node *' <LValueToRValue>
            | `-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
            |   `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
            |     `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
            |       `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
            `-ImplicitCastExpr 0x5654000d7e90 <col:42> 'int' <LValueToRValue>
              `-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B3.10]
  12: ImplicitCastExpr 0x5654000d8000 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000d7fe0 <col:22, col:27> 'TValue *'
  `-ParenExpr 0x5654000d7fc0 <./ltable.h:18:21, col:37> 'TValue *'
    `-UnaryOperator 0x5654000d7fa0 <col:22, col:34> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000d7f68 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
        `-MemberExpr 0x5654000d7f30 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ParenExpr 0x5654000d7f10 <col:23, col:25> 'Node *'
            `-ParenExpr 0x5654000d7ef0 <line:13:20, col:34> 'Node *'
              `-UnaryOperator 0x5654000d7ed0 <col:21, col:33> 'Node *' prefix '&'
                `-ArraySubscriptExpr 0x5654000d7ea8 <col:22, col:33> 'Node':'struct Node' lvalue
                  |-ImplicitCastExpr 0x5654000d7e78 <col:22, col:27> 'Node *' <LValueToRValue>
                  | `-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
                  |   `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
                  |     `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
                  |       `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
                  `-ImplicitCastExpr 0x5654000d7e90 <col:42> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
(([B3.11])) (ImplicitCastExpr, BitCast, const TValue *)
  13: DeclStmt 0x5654000d8018 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5654000d7d58 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5654000d8000 <col:22, col:27> 'const TValue *' <BitCast>
    `-ParenExpr 0x5654000d7fe0 <col:22, col:27> 'TValue *'
      `-ParenExpr 0x5654000d7fc0 <./ltable.h:18:21, col:37> 'TValue *'
        `-UnaryOperator 0x5654000d7fa0 <col:22, col:34> 'TValue *' prefix '&'
          `-MemberExpr 0x5654000d7f68 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
            `-MemberExpr 0x5654000d7f30 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
              `-ParenExpr 0x5654000d7f10 <col:23, col:25> 'Node *'
                `-ParenExpr 0x5654000d7ef0 <line:13:20, col:34> 'Node *'
                  `-UnaryOperator 0x5654000d7ed0 <col:21, col:33> 'Node *' prefix '&'
                    `-ArraySubscriptExpr 0x5654000d7ea8 <col:22, col:33> 'Node':'struct Node' lvalue
                      |-ImplicitCastExpr 0x5654000d7e78 <col:22, col:27> 'Node *' <LValueToRValue>
                      | `-MemberExpr 0x5654000d7e18 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
                      |   `-ImplicitCastExpr 0x5654000d7e00 <col:22, col:24> 'Table *' <LValueToRValue>
                      |     `-ParenExpr 0x5654000d7de0 <col:22, col:24> 'Table *' lvalue
                      |       `-DeclRefExpr 0x5654000d7db8 <ltable.c:173:39> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
                      `-ImplicitCastExpr 0x5654000d7e90 <col:42> 'int' <LValueToRValue>
                        `-DeclRefExpr 0x5654000d7e50 <col:42> 'int' lvalue Var 0x5654000d6450 'i' 'int'
const TValue *o2 = ((&((&(t)->node[i]))->i_key.tvk));
  14: DeclRefExpr 0x5654000d80a0 <ltable.c:173:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
key
  15: ImplicitCastExpr 0x5654000d80e8 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5654000d80c8 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5654000d80a0 <ltable.c:173:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
([B3.14]) (ImplicitCastExpr, LValueToRValue, StkId)
  16: DeclStmt 0x5654000d8100 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5654000d8040 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x5654000d80e8 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000d80c8 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5654000d80a0 <ltable.c:173:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
TValue *o1 = (key);
  17: DeclRefExpr 0x5654000d8190 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
o2
  18: ImplicitCastExpr 0x5654000d81b8 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d8190 <col:17> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.17] (ImplicitCastExpr, LValueToRValue, const TValue *)
  19: MemberExpr 0x5654000d81d0 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d81b8 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d8190 <col:17> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.18]->value
  20: ImplicitCastExpr 0x5654000d8208 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5654000d81d0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000d81b8 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d8190 <col:17> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.19] (ImplicitCastExpr, LValueToRValue, Value)
  21: DeclRefExpr 0x5654000d8118 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
o1
  22: ImplicitCastExpr 0x5654000d8140 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d8118 <col:5> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
[B3.21] (ImplicitCastExpr, LValueToRValue, TValue *)
  23: MemberExpr 0x5654000d8158 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d8140 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d8118 <col:5> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
[B3.22]->value
  24: BinaryOperator 0x5654000d8220 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5654000d8158 <col:5, col:9> 'Value':'Value' lvalue ->value 0x565400089980
| `-ImplicitCastExpr 0x5654000d8140 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d8118 <col:5> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
`-ImplicitCastExpr 0x5654000d8208 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5654000d81d0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
    `-ImplicitCastExpr 0x5654000d81b8 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d8190 <col:17> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.23] = [B3.20]
  25: DeclRefExpr 0x5654000d82c0 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
o2
  26: ImplicitCastExpr 0x5654000d82e8 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d82c0 <col:35> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.25] (ImplicitCastExpr, LValueToRValue, const TValue *)
  27: MemberExpr 0x5654000d8300 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d82e8 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d82c0 <col:35> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.26]->tt
  28: ImplicitCastExpr 0x5654000d8338 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5654000d8300 <col:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
  `-ImplicitCastExpr 0x5654000d82e8 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d82c0 <col:35> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.27] (ImplicitCastExpr, LValueToRValue, int)
  29: DeclRefExpr 0x5654000d8248 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
o1
  30: ImplicitCastExpr 0x5654000d8270 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d8248 <col:28> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
[B3.29] (ImplicitCastExpr, LValueToRValue, TValue *)
  31: MemberExpr 0x5654000d8288 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d8270 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d8248 <col:28> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
[B3.30]->tt
  32: BinaryOperator 0x5654000d8350 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5654000d8288 <col:28, col:32> 'int' lvalue ->tt 0x5654000899e0
| `-ImplicitCastExpr 0x5654000d8270 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d8248 <col:28> 'TValue *' lvalue Var 0x5654000d8040 'o1' 'TValue *'
`-ImplicitCastExpr 0x5654000d8338 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000d8300 <col:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000d82e8 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d82c0 <col:35> 'const TValue *' lvalue Var 0x5654000d7d58 'o2' 'const TValue *'
[B3.31] = [B3.28]
  33: IntegerLiteral 0x5654000d8378 <./llimits.h:62:31> 'int' 0
0
  34: CStyleCastExpr 0x5654000d83a8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5654000d8378 <col:31> 'int' 0
(void)[B3.33] (CStyleCastExpr, ToVoid, void)
  35: DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
  36: ImplicitCastExpr 0x5654000d84f0 <./ltable.h:13:22, col:24> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
  `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
([B3.35]) (ImplicitCastExpr, LValueToRValue, Table *)
  37: MemberExpr 0x5654000d8508 <./ltable.h:13:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
    `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B3.36]->node
  38: ImplicitCastExpr 0x5654000d8568 <./ltable.h:13:22, col:27> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000d8508 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
      `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B3.37] (ImplicitCastExpr, LValueToRValue, Node *)
  39: DeclRefExpr 0x5654000d8540 <ltable.c:174:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
  40: ImplicitCastExpr 0x5654000d8580 <ltable.c:174:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d8540 <col:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B3.39] (ImplicitCastExpr, LValueToRValue, int)
  41: ArraySubscriptExpr 0x5654000d8598 <./ltable.h:13:22, col:33> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x5654000d8568 <col:22, col:27> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000d8508 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
|     `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
|       `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
`-ImplicitCastExpr 0x5654000d8580 <col:40> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000d8540 <col:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B3.38][[B3.40]]
  42: UnaryOperator 0x5654000d85c0 <./ltable.h:13:21, col:33> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x5654000d8598 <col:22, col:33> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x5654000d8568 <col:22, col:27> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x5654000d8508 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  |   `-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
  |     `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
  |       `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
  `-ImplicitCastExpr 0x5654000d8580 <col:40> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000d8540 <col:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B3.41]
  43: MemberExpr 0x5654000d8f80 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ParenExpr 0x5654000d8f60 <col:20, col:22> 'Node *'
  `-ParenExpr 0x5654000d8f40 <line:13:20, col:34> 'Node *'
    `-UnaryOperator 0x5654000d85c0 <col:21, col:33> 'Node *' prefix '&'
      `-ArraySubscriptExpr 0x5654000d8598 <col:22, col:33> 'Node':'struct Node' lvalue
        |-ImplicitCastExpr 0x5654000d8568 <col:22, col:27> 'Node *' <LValueToRValue>
        | `-MemberExpr 0x5654000d8508 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
        |   `-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
        |     `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
        |       `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
        `-ImplicitCastExpr 0x5654000d8580 <col:40> 'int' <LValueToRValue>
          `-DeclRefExpr 0x5654000d8540 <col:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
(([B3.42]))->i_val
  44: UnaryOperator 0x5654000d8fb8 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000d8f80 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ParenExpr 0x5654000d8f60 <col:20, col:22> 'Node *'
    `-ParenExpr 0x5654000d8f40 <line:13:20, col:34> 'Node *'
      `-UnaryOperator 0x5654000d85c0 <col:21, col:33> 'Node *' prefix '&'
        `-ArraySubscriptExpr 0x5654000d8598 <col:22, col:33> 'Node':'struct Node' lvalue
          |-ImplicitCastExpr 0x5654000d8568 <col:22, col:27> 'Node *' <LValueToRValue>
          | `-MemberExpr 0x5654000d8508 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
          |   `-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
          |     `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
          |       `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
          `-ImplicitCastExpr 0x5654000d8580 <col:40> 'int' <LValueToRValue>
            `-DeclRefExpr 0x5654000d8540 <col:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B3.43]
  45: ImplicitCastExpr 0x5654000d9018 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000d8ff8 <col:22, col:27> 'TValue *'
  `-ParenExpr 0x5654000d8fd8 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x5654000d8fb8 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000d8f80 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
        `-ParenExpr 0x5654000d8f60 <col:20, col:22> 'Node *'
          `-ParenExpr 0x5654000d8f40 <line:13:20, col:34> 'Node *'
            `-UnaryOperator 0x5654000d85c0 <col:21, col:33> 'Node *' prefix '&'
              `-ArraySubscriptExpr 0x5654000d8598 <col:22, col:33> 'Node':'struct Node' lvalue
                |-ImplicitCastExpr 0x5654000d8568 <col:22, col:27> 'Node *' <LValueToRValue>
                | `-MemberExpr 0x5654000d8508 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
                |   `-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
                |     `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
                |       `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
                `-ImplicitCastExpr 0x5654000d8580 <col:40> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x5654000d8540 <col:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
(([B3.44])) (ImplicitCastExpr, BitCast, const TValue *)
  46: DeclStmt 0x5654000d9030 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5654000d8448 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5654000d9018 <col:22, col:27> 'const TValue *' <BitCast>
    `-ParenExpr 0x5654000d8ff8 <col:22, col:27> 'TValue *'
      `-ParenExpr 0x5654000d8fd8 <./ltable.h:15:18, col:30> 'TValue *'
        `-UnaryOperator 0x5654000d8fb8 <col:19, col:25> 'TValue *' prefix '&'
          `-MemberExpr 0x5654000d8f80 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
            `-ParenExpr 0x5654000d8f60 <col:20, col:22> 'Node *'
              `-ParenExpr 0x5654000d8f40 <line:13:20, col:34> 'Node *'
                `-UnaryOperator 0x5654000d85c0 <col:21, col:33> 'Node *' prefix '&'
                  `-ArraySubscriptExpr 0x5654000d8598 <col:22, col:33> 'Node':'struct Node' lvalue
                    |-ImplicitCastExpr 0x5654000d8568 <col:22, col:27> 'Node *' <LValueToRValue>
                    | `-MemberExpr 0x5654000d8508 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
                    |   `-ImplicitCastExpr 0x5654000d84f0 <col:22, col:24> 'Table *' <LValueToRValue>
                    |     `-ParenExpr 0x5654000d84d0 <col:22, col:24> 'Table *' lvalue
                    |       `-DeclRefExpr 0x5654000d84a8 <ltable.c:174:37> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
                    `-ImplicitCastExpr 0x5654000d8580 <col:40> 'int' <LValueToRValue>
                      `-DeclRefExpr 0x5654000d8540 <col:40> 'int' lvalue Var 0x5654000d6450 'i' 'int'
const TValue *o2 = ((&((&(t)->node[i]))->i_val));
  47: DeclRefExpr 0x5654000d90b8 <ltable.c:174:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
key
  48: ImplicitCastExpr 0x5654000d9100 <ltable.c:174:19> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d90b8 <col:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
[B3.47] (ImplicitCastExpr, LValueToRValue, StkId)
  49: IntegerLiteral 0x5654000d90e0 <ltable.c:174:23> 'int' 1
1
  50: BinaryOperator 0x5654000d9118 <ltable.c:174:19, col:23> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5654000d9100 <col:19> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5654000d90b8 <col:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
`-IntegerLiteral 0x5654000d90e0 <col:23> 'int' 1
[B3.48] + [B3.49]
  51: DeclStmt 0x5654000d9160 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5654000d9058 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5654000d9140 <col:41, col:46> 'StkId':'TValue *'
    `-BinaryOperator 0x5654000d9118 <ltable.c:174:19, col:23> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x5654000d9100 <col:19> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5654000d90b8 <col:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
      `-IntegerLiteral 0x5654000d90e0 <col:23> 'int' 1
TValue *o1 = (key + 1);
  52: DeclRefExpr 0x5654000d91f0 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
o2
  53: ImplicitCastExpr 0x5654000d9218 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d91f0 <col:17> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.52] (ImplicitCastExpr, LValueToRValue, const TValue *)
  54: MemberExpr 0x5654000d9230 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d9218 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d91f0 <col:17> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.53]->value
  55: ImplicitCastExpr 0x5654000d9268 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5654000d9230 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000d9218 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d91f0 <col:17> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.54] (ImplicitCastExpr, LValueToRValue, Value)
  56: DeclRefExpr 0x5654000d9178 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
o1
  57: ImplicitCastExpr 0x5654000d91a0 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d9178 <col:5> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
[B3.56] (ImplicitCastExpr, LValueToRValue, TValue *)
  58: MemberExpr 0x5654000d91b8 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d91a0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d9178 <col:5> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
[B3.57]->value
  59: BinaryOperator 0x5654000d9280 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5654000d91b8 <col:5, col:9> 'Value':'Value' lvalue ->value 0x565400089980
| `-ImplicitCastExpr 0x5654000d91a0 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d9178 <col:5> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
`-ImplicitCastExpr 0x5654000d9268 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5654000d9230 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
    `-ImplicitCastExpr 0x5654000d9218 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d91f0 <col:17> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.58] = [B3.55]
  60: DeclRefExpr 0x5654000d9320 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
o2
  61: ImplicitCastExpr 0x5654000d9348 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d9320 <col:35> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.60] (ImplicitCastExpr, LValueToRValue, const TValue *)
  62: MemberExpr 0x5654000d9360 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d9348 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d9320 <col:35> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.61]->tt
  63: ImplicitCastExpr 0x5654000d9398 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5654000d9360 <col:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
  `-ImplicitCastExpr 0x5654000d9348 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d9320 <col:35> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.62] (ImplicitCastExpr, LValueToRValue, int)
  64: DeclRefExpr 0x5654000d92a8 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
o1
  65: ImplicitCastExpr 0x5654000d92d0 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d92a8 <col:28> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
[B3.64] (ImplicitCastExpr, LValueToRValue, TValue *)
  66: MemberExpr 0x5654000d92e8 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d92d0 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d92a8 <col:28> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
[B3.65]->tt
  67: BinaryOperator 0x5654000d93b0 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5654000d92e8 <col:28, col:32> 'int' lvalue ->tt 0x5654000899e0
| `-ImplicitCastExpr 0x5654000d92d0 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d92a8 <col:28> 'TValue *' lvalue Var 0x5654000d9058 'o1' 'TValue *'
`-ImplicitCastExpr 0x5654000d9398 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000d9360 <col:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000d9348 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d9320 <col:35> 'const TValue *' lvalue Var 0x5654000d8448 'o2' 'const TValue *'
[B3.66] = [B3.63]
  68: IntegerLiteral 0x5654000d93d8 <./llimits.h:62:31> 'int' 0
0
  69: CStyleCastExpr 0x5654000d9408 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5654000d93d8 <col:31> 'int' 0
(void)[B3.68] (CStyleCastExpr, ToVoid, void)
  70: IntegerLiteral 0x5654000d9498 <ltable.c:175:14> 'int' 1
1
  71: ReturnStmt 0x5654000d94b8 <ltable.c:175:7, col:14>
`-IntegerLiteral 0x5654000d9498 <col:14> 'int' 1
return [B3.70];
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000d7a88 <./ltable.h:13:22, col:24> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
  `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000d7aa0 <./ltable.h:13:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
    `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B4.2]->node
   4: ImplicitCastExpr 0x5654000d7b00 <./ltable.h:13:22, col:27> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
      `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B4.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: DeclRefExpr 0x5654000d7ad8 <ltable.c:172:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   6: ImplicitCastExpr 0x5654000d7b18 <ltable.c:172:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x5654000d7b30 <./ltable.h:13:22, col:33> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
|     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
|       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
`-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B4.4][[B4.6]]
   8: UnaryOperator 0x5654000d7b58 <./ltable.h:13:21, col:33> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x5654000d7b30 <col:22, col:33> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  |   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
  |     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
  |       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
  `-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B4.7]
   9: MemberExpr 0x5654000d7bb8 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ParenExpr 0x5654000d7b98 <col:20, col:22> 'Node *'
  `-ParenExpr 0x5654000d7b78 <line:13:20, col:34> 'Node *'
    `-UnaryOperator 0x5654000d7b58 <col:21, col:33> 'Node *' prefix '&'
      `-ArraySubscriptExpr 0x5654000d7b30 <col:22, col:33> 'Node':'struct Node' lvalue
        |-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
        | `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
        |   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
        |     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
        |       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
        `-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
          `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
(([B4.8]))->i_val
  10: UnaryOperator 0x5654000d7bf0 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000d7bb8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ParenExpr 0x5654000d7b98 <col:20, col:22> 'Node *'
    `-ParenExpr 0x5654000d7b78 <line:13:20, col:34> 'Node *'
      `-UnaryOperator 0x5654000d7b58 <col:21, col:33> 'Node *' prefix '&'
        `-ArraySubscriptExpr 0x5654000d7b30 <col:22, col:33> 'Node':'struct Node' lvalue
          |-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
          | `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
          |   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
          |     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
          |       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
          `-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
            `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B4.9]
  11: MemberExpr 0x5654000d7c50 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000d7c30 <col:19, col:21> 'TValue *'
  `-ParenExpr 0x5654000d7c10 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x5654000d7bf0 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000d7bb8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
        `-ParenExpr 0x5654000d7b98 <col:20, col:22> 'Node *'
          `-ParenExpr 0x5654000d7b78 <line:13:20, col:34> 'Node *'
            `-UnaryOperator 0x5654000d7b58 <col:21, col:33> 'Node *' prefix '&'
              `-ArraySubscriptExpr 0x5654000d7b30 <col:22, col:33> 'Node':'struct Node' lvalue
                |-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
                | `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
                |   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
                |     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
                |       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
                `-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
(([B4.10]))->tt
  12: ImplicitCastExpr 0x5654000d7cc8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000d7c88 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000d7c50 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ParenExpr 0x5654000d7c30 <col:19, col:21> 'TValue *'
      `-ParenExpr 0x5654000d7c10 <./ltable.h:15:18, col:30> 'TValue *'
        `-UnaryOperator 0x5654000d7bf0 <col:19, col:25> 'TValue *' prefix '&'
          `-MemberExpr 0x5654000d7bb8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
            `-ParenExpr 0x5654000d7b98 <col:20, col:22> 'Node *'
              `-ParenExpr 0x5654000d7b78 <line:13:20, col:34> 'Node *'
                `-UnaryOperator 0x5654000d7b58 <col:21, col:33> 'Node *' prefix '&'
                  `-ArraySubscriptExpr 0x5654000d7b30 <col:22, col:33> 'Node':'struct Node' lvalue
                    |-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
                    | `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
                    |   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
                    |     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
                    |       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
                    `-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
                      `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
([B4.11]) (ImplicitCastExpr, LValueToRValue, int)
  13: IntegerLiteral 0x5654000d7ca8 <./lua.h:74:19> 'int' 0
0
  14: BinaryOperator 0x5654000d7ce0 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000d7cc8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000d7c88 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000d7c50 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ParenExpr 0x5654000d7c30 <col:19, col:21> 'TValue *'
|       `-ParenExpr 0x5654000d7c10 <./ltable.h:15:18, col:30> 'TValue *'
|         `-UnaryOperator 0x5654000d7bf0 <col:19, col:25> 'TValue *' prefix '&'
|           `-MemberExpr 0x5654000d7bb8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
|             `-ParenExpr 0x5654000d7b98 <col:20, col:22> 'Node *'
|               `-ParenExpr 0x5654000d7b78 <line:13:20, col:34> 'Node *'
|                 `-UnaryOperator 0x5654000d7b58 <col:21, col:33> 'Node *' prefix '&'
|                   `-ArraySubscriptExpr 0x5654000d7b30 <col:22, col:33> 'Node':'struct Node' lvalue
|                     |-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
|                     | `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
|                     |   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
|                     |     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
|                     |       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
|                     `-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
|                       `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
`-IntegerLiteral 0x5654000d7ca8 <./lua.h:74:19> 'int' 0
[B4.12] == [B4.13]
  15: UnaryOperator 0x5654000d7d28 <ltable.c:172:9, ./lobject.h:79:41> 'int' prefix '!'
`-ParenExpr 0x5654000d7d08 <col:20, col:41> 'int'
  `-BinaryOperator 0x5654000d7ce0 <line:90:18, ./lua.h:74:19> 'int' '=='
    |-ImplicitCastExpr 0x5654000d7cc8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x5654000d7c88 <col:18, col:26> 'int' lvalue
    |   `-MemberExpr 0x5654000d7c50 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    |     `-ParenExpr 0x5654000d7c30 <col:19, col:21> 'TValue *'
    |       `-ParenExpr 0x5654000d7c10 <./ltable.h:15:18, col:30> 'TValue *'
    |         `-UnaryOperator 0x5654000d7bf0 <col:19, col:25> 'TValue *' prefix '&'
    |           `-MemberExpr 0x5654000d7bb8 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
    |             `-ParenExpr 0x5654000d7b98 <col:20, col:22> 'Node *'
    |               `-ParenExpr 0x5654000d7b78 <line:13:20, col:34> 'Node *'
    |                 `-UnaryOperator 0x5654000d7b58 <col:21, col:33> 'Node *' prefix '&'
    |                   `-ArraySubscriptExpr 0x5654000d7b30 <col:22, col:33> 'Node':'struct Node' lvalue
    |                     |-ImplicitCastExpr 0x5654000d7b00 <col:22, col:27> 'Node *' <LValueToRValue>
    |                     | `-MemberExpr 0x5654000d7aa0 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
    |                     |   `-ImplicitCastExpr 0x5654000d7a88 <col:22, col:24> 'Table *' <LValueToRValue>
    |                     |     `-ParenExpr 0x5654000d7a68 <col:22, col:24> 'Table *' lvalue
    |                     |       `-DeclRefExpr 0x5654000d7a40 <ltable.c:172:29> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
    |                     `-ImplicitCastExpr 0x5654000d7b18 <col:32> 'int' <LValueToRValue>
    |                       `-DeclRefExpr 0x5654000d7ad8 <col:32> 'int' lvalue Var 0x5654000d6450 'i' 'int'
    `-IntegerLiteral 0x5654000d7ca8 <./lua.h:74:19> 'int' 0
!([B4.14])
   T: if [B4.15]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x5654000d7820 <ltable.c:171:27> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   2: ImplicitCastExpr 0x5654000d79b8 <ltable.c:171:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d7820 <col:27> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x5654000d7848 <./lobject.h:359:19> 'int' 1
1
   4: DeclRefExpr 0x5654000d7868 <ltable.c:171:40> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
   5: ImplicitCastExpr 0x5654000d78b0 <./lobject.h:360:28, col:30> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000d7890 <col:28, col:30> 'Table *' lvalue
  `-DeclRefExpr 0x5654000d7868 <ltable.c:171:40> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
([B5.4]) (ImplicitCastExpr, LValueToRValue, Table *)
   6: MemberExpr 0x5654000d78c8 <./lobject.h:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
`-ImplicitCastExpr 0x5654000d78b0 <col:28, col:30> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000d7890 <col:28, col:30> 'Table *' lvalue
    `-DeclRefExpr 0x5654000d7868 <ltable.c:171:40> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B5.5]->lsizenode
   7: ImplicitCastExpr 0x5654000d7920 <./lobject.h:359:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x5654000d7900 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x5654000d78c8 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
    `-ImplicitCastExpr 0x5654000d78b0 <col:28, col:30> 'Table *' <LValueToRValue>
      `-ParenExpr 0x5654000d7890 <col:28, col:30> 'Table *' lvalue
        `-DeclRefExpr 0x5654000d7868 <ltable.c:171:40> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
([B5.6]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   8: ImplicitCastExpr 0x5654000d7938 <./lobject.h:359:22, col:24> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5654000d7920 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x5654000d7900 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x5654000d78c8 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
      `-ImplicitCastExpr 0x5654000d78b0 <col:28, col:30> 'Table *' <LValueToRValue>
        `-ParenExpr 0x5654000d7890 <col:28, col:30> 'Table *' lvalue
          `-DeclRefExpr 0x5654000d7868 <ltable.c:171:40> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B5.7] (ImplicitCastExpr, IntegralCast, int)
   9: BinaryOperator 0x5654000d7950 <./lobject.h:359:19, col:24> 'int' '<<'
|-IntegerLiteral 0x5654000d7848 <col:19> 'int' 1
`-ImplicitCastExpr 0x5654000d7938 <col:22, col:24> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x5654000d7920 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
    `-ParenExpr 0x5654000d7900 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
      `-MemberExpr 0x5654000d78c8 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
        `-ImplicitCastExpr 0x5654000d78b0 <col:28, col:30> 'Table *' <LValueToRValue>
          `-ParenExpr 0x5654000d7890 <col:28, col:30> 'Table *' lvalue
            `-DeclRefExpr 0x5654000d7868 <ltable.c:171:40> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B5.3] << [B5.8]
  10: BinaryOperator 0x5654000d79d0 <ltable.c:171:27, ./lobject.h:360:43> 'int' '<'
|-ImplicitCastExpr 0x5654000d79b8 <ltable.c:171:27> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000d7820 <col:27> 'int' lvalue Var 0x5654000d6450 'i' 'int'
`-ParenExpr 0x5654000d7998 <./lobject.h:360:21, col:43> 'int'
  `-ParenExpr 0x5654000d7978 <line:359:18, col:25> 'int'
    `-BinaryOperator 0x5654000d7950 <col:19, col:24> 'int' '<<'
      |-IntegerLiteral 0x5654000d7848 <col:19> 'int' 1
      `-ImplicitCastExpr 0x5654000d7938 <col:22, col:24> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x5654000d7920 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
          `-ParenExpr 0x5654000d7900 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
            `-MemberExpr 0x5654000d78c8 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
              `-ImplicitCastExpr 0x5654000d78b0 <col:28, col:30> 'Table *' <LValueToRValue>
                `-ParenExpr 0x5654000d7890 <col:28, col:30> 'Table *' lvalue
                  `-DeclRefExpr 0x5654000d7868 <ltable.c:171:40> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B5.2] < (([B5.9]))
   T: for (...; [B5.10]; ...)
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x5654000d7730 <ltable.c:171:8> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   2: DeclRefExpr 0x5654000d7758 <ltable.c:171:13> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
   3: ImplicitCastExpr 0x5654000d7780 <ltable.c:171:13> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d7758 <col:13> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B6.2] (ImplicitCastExpr, LValueToRValue, Table *)
   4: MemberExpr 0x5654000d7798 <ltable.c:171:13, col:16> 'int' lvalue ->sizearray 0x56540009ae68
`-ImplicitCastExpr 0x5654000d7780 <col:13> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d7758 <col:13> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B6.3]->sizearray
   5: ImplicitCastExpr 0x5654000d77d0 <ltable.c:171:13, col:16> 'int' <LValueToRValue>
`-MemberExpr 0x5654000d7798 <col:13, col:16> 'int' lvalue ->sizearray 0x56540009ae68
  `-ImplicitCastExpr 0x5654000d7780 <col:13> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d7758 <col:13> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B6.4] (ImplicitCastExpr, LValueToRValue, int)
   6: CompoundAssignOperator 0x5654000d77e8 <ltable.c:171:8, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x5654000d7730 <col:8> 'int' lvalue Var 0x5654000d6450 'i' 'int'
`-ImplicitCastExpr 0x5654000d77d0 <col:13, col:16> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000d7798 <col:13, col:16> 'int' lvalue ->sizearray 0x56540009ae68
    `-ImplicitCastExpr 0x5654000d7780 <col:13> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d7758 <col:13> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B6.1] -= [B6.5]
   Preds (1): B10
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5654000d67a0 <ltable.c:164:31> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   2: UnaryOperator 0x5654000d67c8 <ltable.c:164:31, col:32> 'int' postfix '++'
`-DeclRefExpr 0x5654000d67a0 <col:31> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B7.1]++
   Preds (1): B9
   Succs (1): B10

 [B8]
   1: DeclRefExpr 0x5654000d6a88 <ltable.c:166:17> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
key
   2: ImplicitCastExpr 0x5654000d6ad0 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5654000d6ab0 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5654000d6a88 <ltable.c:166:17> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
([B8.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5654000d6ae8 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5654000d6a28 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5654000d6ad0 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000d6ab0 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5654000d6a88 <ltable.c:166:17> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
TValue *i_o = (key);
   4: DeclRefExpr 0x5654000d6bb0 <ltable.c:166:31> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   5: ImplicitCastExpr 0x5654000d6bf8 <ltable.c:166:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d6bb0 <col:31> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B8.4] (ImplicitCastExpr, LValueToRValue, int)
   6: IntegerLiteral 0x5654000d6bd8 <ltable.c:166:33> 'int' 1
1
   7: BinaryOperator 0x5654000d6c10 <ltable.c:166:31, col:33> 'int' '+'
|-ImplicitCastExpr 0x5654000d6bf8 <col:31> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000d6bb0 <col:31> 'int' lvalue Var 0x5654000d6450 'i' 'int'
`-IntegerLiteral 0x5654000d6bd8 <col:33> 'int' 1
[B8.5] + [B8.6]
   8: CStyleCastExpr 0x5654000d6cb8 <./llimits.h:75:23, col:30> 'lua_Number':'double' <IntegralToFloating>
`-ParenExpr 0x5654000d6c98 <col:26, col:30> 'int'
  `-ParenExpr 0x5654000d6c38 <line:79:38, col:40> 'int'
    `-BinaryOperator 0x5654000d6c10 <ltable.c:166:31, col:33> 'int' '+'
      |-ImplicitCastExpr 0x5654000d6bf8 <col:31> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x5654000d6bb0 <col:31> 'int' lvalue Var 0x5654000d6450 'i' 'int'
      `-IntegerLiteral 0x5654000d6bd8 <col:33> 'int' 1
(lua_Number)(([B8.7])) (CStyleCastExpr, IntegralToFloating, lua_Number)
   9: DeclRefExpr 0x5654000d6b00 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x5654000d6b28 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d6b00 <col:24> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
[B8.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x5654000d6b40 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d6b28 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d6b00 <col:24> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
[B8.10]->value
  12: MemberExpr 0x5654000d6b78 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x565400089738
`-MemberExpr 0x5654000d6b40 <col:24, col:29> 'Value':'Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000d6b28 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d6b00 <col:24> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
[B8.11].n
  13: BinaryOperator 0x5654000d6d20 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5654000d6b78 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x565400089738
| `-MemberExpr 0x5654000d6b40 <col:24, col:29> 'Value':'Value' lvalue ->value 0x565400089980
|   `-ImplicitCastExpr 0x5654000d6b28 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000d6b00 <col:24> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
`-ParenExpr 0x5654000d6d00 <col:37, col:39> 'lua_Number':'double'
  `-ParenExpr 0x5654000d6ce0 <./llimits.h:75:22, col:31> 'lua_Number':'double'
    `-CStyleCastExpr 0x5654000d6cb8 <col:23, col:30> 'lua_Number':'double' <IntegralToFloating>
      `-ParenExpr 0x5654000d6c98 <col:26, col:30> 'int'
        `-ParenExpr 0x5654000d6c38 <line:79:38, col:40> 'int'
          `-BinaryOperator 0x5654000d6c10 <ltable.c:166:31, col:33> 'int' '+'
            |-ImplicitCastExpr 0x5654000d6bf8 <col:31> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x5654000d6bb0 <col:31> 'int' lvalue Var 0x5654000d6450 'i' 'int'
            `-IntegerLiteral 0x5654000d6bd8 <col:33> 'int' 1
[B8.12] = (([B8.8]))
  14: IntegerLiteral 0x5654000d6dc0 <./lua.h:77:22> 'int' 3
3
  15: DeclRefExpr 0x5654000d6d48 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x5654000d6d70 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d6d48 <col:42> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
[B8.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x5654000d6d88 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d6d70 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d6d48 <col:42> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
[B8.16]->tt
  18: BinaryOperator 0x5654000d6de0 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5654000d6d88 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5654000899e0
| `-ImplicitCastExpr 0x5654000d6d70 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d6d48 <col:42> 'TValue *' lvalue Var 0x5654000d6a28 'i_o' 'TValue *'
`-IntegerLiteral 0x5654000d6dc0 <./lua.h:77:22> 'int' 3
[B8.17] = [B8.14]
  19: DeclRefExpr 0x5654000d6eb0 <ltable.c:167:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
  20: ImplicitCastExpr 0x5654000d6ed8 <ltable.c:167:27> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d6eb0 <col:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B8.19] (ImplicitCastExpr, LValueToRValue, Table *)
  21: MemberExpr 0x5654000d6ef0 <ltable.c:167:27, col:30> 'TValue *' lvalue ->array 0x56540009acb8
`-ImplicitCastExpr 0x5654000d6ed8 <col:27> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d6eb0 <col:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B8.20]->array
  22: ImplicitCastExpr 0x5654000d6f50 <ltable.c:167:27, col:30> 'TValue *' <LValueToRValue>
`-MemberExpr 0x5654000d6ef0 <col:27, col:30> 'TValue *' lvalue ->array 0x56540009acb8
  `-ImplicitCastExpr 0x5654000d6ed8 <col:27> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d6eb0 <col:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B8.21] (ImplicitCastExpr, LValueToRValue, TValue *)
  23: DeclRefExpr 0x5654000d6f28 <ltable.c:167:36> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
  24: ImplicitCastExpr 0x5654000d6f68 <ltable.c:167:36> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d6f28 <col:36> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B8.23] (ImplicitCastExpr, LValueToRValue, int)
  25: ArraySubscriptExpr 0x5654000d6f80 <ltable.c:167:27, col:37> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x5654000d6f50 <col:27, col:30> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x5654000d6ef0 <col:27, col:30> 'TValue *' lvalue ->array 0x56540009acb8
|   `-ImplicitCastExpr 0x5654000d6ed8 <col:27> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000d6eb0 <col:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
`-ImplicitCastExpr 0x5654000d6f68 <col:36> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000d6f28 <col:36> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B8.22][[B8.24]]
  26: UnaryOperator 0x5654000d6fa8 <ltable.c:167:26, col:37> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x5654000d6f80 <col:27, col:37> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x5654000d6f50 <col:27, col:30> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x5654000d6ef0 <col:27, col:30> 'TValue *' lvalue ->array 0x56540009acb8
  |   `-ImplicitCastExpr 0x5654000d6ed8 <col:27> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x5654000d6eb0 <col:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
  `-ImplicitCastExpr 0x5654000d6f68 <col:36> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000d6f28 <col:36> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B8.25]
  27: ImplicitCastExpr 0x5654000d6fe8 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000d6fc8 <col:22, col:27> 'TValue *'
  `-UnaryOperator 0x5654000d6fa8 <ltable.c:167:26, col:37> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x5654000d6f80 <col:27, col:37> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x5654000d6f50 <col:27, col:30> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5654000d6ef0 <col:27, col:30> 'TValue *' lvalue ->array 0x56540009acb8
      |   `-ImplicitCastExpr 0x5654000d6ed8 <col:27> 'Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x5654000d6eb0 <col:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
      `-ImplicitCastExpr 0x5654000d6f68 <col:36> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5654000d6f28 <col:36> 'int' lvalue Var 0x5654000d6450 'i' 'int'
([B8.26]) (ImplicitCastExpr, BitCast, const TValue *)
  28: DeclStmt 0x5654000d7000 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5654000d6e50 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5654000d6fe8 <col:22, col:27> 'const TValue *' <BitCast>
    `-ParenExpr 0x5654000d6fc8 <col:22, col:27> 'TValue *'
      `-UnaryOperator 0x5654000d6fa8 <ltable.c:167:26, col:37> 'TValue *' prefix '&'
        `-ArraySubscriptExpr 0x5654000d6f80 <col:27, col:37> 'TValue':'struct lua_TValue' lvalue
          |-ImplicitCastExpr 0x5654000d6f50 <col:27, col:30> 'TValue *' <LValueToRValue>
          | `-MemberExpr 0x5654000d6ef0 <col:27, col:30> 'TValue *' lvalue ->array 0x56540009acb8
          |   `-ImplicitCastExpr 0x5654000d6ed8 <col:27> 'Table *' <LValueToRValue>
          |     `-DeclRefExpr 0x5654000d6eb0 <col:27> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
          `-ImplicitCastExpr 0x5654000d6f68 <col:36> 'int' <LValueToRValue>
            `-DeclRefExpr 0x5654000d6f28 <col:36> 'int' lvalue Var 0x5654000d6450 'i' 'int'
const TValue *o2 = (&t->array[i]);
  29: DeclRefExpr 0x5654000d7088 <ltable.c:167:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
key
  30: ImplicitCastExpr 0x5654000d70d0 <ltable.c:167:19> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d7088 <col:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
[B8.29] (ImplicitCastExpr, LValueToRValue, StkId)
  31: IntegerLiteral 0x5654000d70b0 <ltable.c:167:23> 'int' 1
1
  32: BinaryOperator 0x5654000d70e8 <ltable.c:167:19, col:23> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5654000d70d0 <col:19> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5654000d7088 <col:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
`-IntegerLiteral 0x5654000d70b0 <col:23> 'int' 1
[B8.30] + [B8.31]
  33: DeclStmt 0x5654000d7130 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5654000d7028 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5654000d7110 <col:41, col:46> 'StkId':'TValue *'
    `-BinaryOperator 0x5654000d70e8 <ltable.c:167:19, col:23> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x5654000d70d0 <col:19> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5654000d7088 <col:19> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
      `-IntegerLiteral 0x5654000d70b0 <col:23> 'int' 1
TValue *o1 = (key + 1);
  34: DeclRefExpr 0x5654000d71c0 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
o2
  35: ImplicitCastExpr 0x5654000d71e8 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d71c0 <col:17> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.34] (ImplicitCastExpr, LValueToRValue, const TValue *)
  36: MemberExpr 0x5654000d7200 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d71e8 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d71c0 <col:17> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.35]->value
  37: ImplicitCastExpr 0x5654000d7238 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5654000d7200 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000d71e8 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d71c0 <col:17> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.36] (ImplicitCastExpr, LValueToRValue, Value)
  38: DeclRefExpr 0x5654000d7148 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
o1
  39: ImplicitCastExpr 0x5654000d7170 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d7148 <col:5> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
[B8.38] (ImplicitCastExpr, LValueToRValue, TValue *)
  40: MemberExpr 0x5654000d7188 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d7170 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d7148 <col:5> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
[B8.39]->value
  41: BinaryOperator 0x5654000d7250 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5654000d7188 <col:5, col:9> 'Value':'Value' lvalue ->value 0x565400089980
| `-ImplicitCastExpr 0x5654000d7170 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d7148 <col:5> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
`-ImplicitCastExpr 0x5654000d7238 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5654000d7200 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x565400089980
    `-ImplicitCastExpr 0x5654000d71e8 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d71c0 <col:17> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.40] = [B8.37]
  42: DeclRefExpr 0x5654000d72f0 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
o2
  43: ImplicitCastExpr 0x5654000d7318 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d72f0 <col:35> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.42] (ImplicitCastExpr, LValueToRValue, const TValue *)
  44: MemberExpr 0x5654000d7330 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d7318 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d72f0 <col:35> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.43]->tt
  45: ImplicitCastExpr 0x5654000d7368 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5654000d7330 <col:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
  `-ImplicitCastExpr 0x5654000d7318 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d72f0 <col:35> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.44] (ImplicitCastExpr, LValueToRValue, int)
  46: DeclRefExpr 0x5654000d7278 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
o1
  47: ImplicitCastExpr 0x5654000d72a0 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d7278 <col:28> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
[B8.46] (ImplicitCastExpr, LValueToRValue, TValue *)
  48: MemberExpr 0x5654000d72b8 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d72a0 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d7278 <col:28> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
[B8.47]->tt
  49: BinaryOperator 0x5654000d7380 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5654000d72b8 <col:28, col:32> 'int' lvalue ->tt 0x5654000899e0
| `-ImplicitCastExpr 0x5654000d72a0 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d7278 <col:28> 'TValue *' lvalue Var 0x5654000d7028 'o1' 'TValue *'
`-ImplicitCastExpr 0x5654000d7368 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000d7330 <col:35, col:39> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000d7318 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d72f0 <col:35> 'const TValue *' lvalue Var 0x5654000d6e50 'o2' 'const TValue *'
[B8.48] = [B8.45]
  50: IntegerLiteral 0x5654000d73a8 <./llimits.h:62:31> 'int' 0
0
  51: CStyleCastExpr 0x5654000d73d8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5654000d73a8 <col:31> 'int' 0
(void)[B8.50] (CStyleCastExpr, ToVoid, void)
  52: IntegerLiteral 0x5654000d7638 <ltable.c:168:14> 'int' 1
1
  53: ReturnStmt 0x5654000d7658 <ltable.c:168:7, col:14>
`-IntegerLiteral 0x5654000d7638 <col:14> 'int' 1
return [B8.52];
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x5654000d67e8 <ltable.c:165:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000d6810 <ltable.c:165:19> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B9.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000d6828 <ltable.c:165:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
`-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B9.2]->array
   4: ImplicitCastExpr 0x5654000d6888 <ltable.c:165:19, col:22> 'TValue *' <LValueToRValue>
`-MemberExpr 0x5654000d6828 <col:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
  `-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B9.3] (ImplicitCastExpr, LValueToRValue, TValue *)
   5: DeclRefExpr 0x5654000d6860 <ltable.c:165:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   6: ImplicitCastExpr 0x5654000d68a0 <ltable.c:165:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d6860 <col:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B9.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x5654000d68b8 <ltable.c:165:19, col:29> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x5654000d6888 <col:19, col:22> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x5654000d6828 <col:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
|   `-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
`-ImplicitCastExpr 0x5654000d68a0 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000d6860 <col:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B9.4][[B9.6]]
   8: UnaryOperator 0x5654000d68e0 <ltable.c:165:18, col:29> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x5654000d68b8 <col:19, col:29> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x5654000d6888 <col:19, col:22> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x5654000d6828 <col:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
  |   `-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
  `-ImplicitCastExpr 0x5654000d68a0 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000d6860 <col:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
&[B9.7]
   9: MemberExpr 0x5654000d6920 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000d6900 <col:19, col:21> 'TValue *'
  `-UnaryOperator 0x5654000d68e0 <ltable.c:165:18, col:29> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x5654000d68b8 <col:19, col:29> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x5654000d6888 <col:19, col:22> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5654000d6828 <col:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
      |   `-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
      `-ImplicitCastExpr 0x5654000d68a0 <col:28> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5654000d6860 <col:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
([B9.8])->tt
  10: ImplicitCastExpr 0x5654000d6998 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000d6958 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000d6920 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ParenExpr 0x5654000d6900 <col:19, col:21> 'TValue *'
      `-UnaryOperator 0x5654000d68e0 <ltable.c:165:18, col:29> 'TValue *' prefix '&'
        `-ArraySubscriptExpr 0x5654000d68b8 <col:19, col:29> 'TValue':'struct lua_TValue' lvalue
          |-ImplicitCastExpr 0x5654000d6888 <col:19, col:22> 'TValue *' <LValueToRValue>
          | `-MemberExpr 0x5654000d6828 <col:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
          |   `-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
          |     `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
          `-ImplicitCastExpr 0x5654000d68a0 <col:28> 'int' <LValueToRValue>
            `-DeclRefExpr 0x5654000d6860 <col:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
([B9.9]) (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x5654000d6978 <./lua.h:74:19> 'int' 0
0
  12: BinaryOperator 0x5654000d69b0 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000d6998 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000d6958 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000d6920 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ParenExpr 0x5654000d6900 <col:19, col:21> 'TValue *'
|       `-UnaryOperator 0x5654000d68e0 <ltable.c:165:18, col:29> 'TValue *' prefix '&'
|         `-ArraySubscriptExpr 0x5654000d68b8 <col:19, col:29> 'TValue':'struct lua_TValue' lvalue
|           |-ImplicitCastExpr 0x5654000d6888 <col:19, col:22> 'TValue *' <LValueToRValue>
|           | `-MemberExpr 0x5654000d6828 <col:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
|           |   `-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
|           `-ImplicitCastExpr 0x5654000d68a0 <col:28> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x5654000d6860 <col:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
`-IntegerLiteral 0x5654000d6978 <./lua.h:74:19> 'int' 0
[B9.10] == [B9.11]
  13: UnaryOperator 0x5654000d69f8 <ltable.c:165:9, ./lobject.h:79:41> 'int' prefix '!'
`-ParenExpr 0x5654000d69d8 <col:20, col:41> 'int'
  `-BinaryOperator 0x5654000d69b0 <line:90:18, ./lua.h:74:19> 'int' '=='
    |-ImplicitCastExpr 0x5654000d6998 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x5654000d6958 <col:18, col:26> 'int' lvalue
    |   `-MemberExpr 0x5654000d6920 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    |     `-ParenExpr 0x5654000d6900 <col:19, col:21> 'TValue *'
    |       `-UnaryOperator 0x5654000d68e0 <ltable.c:165:18, col:29> 'TValue *' prefix '&'
    |         `-ArraySubscriptExpr 0x5654000d68b8 <col:19, col:29> 'TValue':'struct lua_TValue' lvalue
    |           |-ImplicitCastExpr 0x5654000d6888 <col:19, col:22> 'TValue *' <LValueToRValue>
    |           | `-MemberExpr 0x5654000d6828 <col:19, col:22> 'TValue *' lvalue ->array 0x56540009acb8
    |           |   `-ImplicitCastExpr 0x5654000d6810 <col:19> 'Table *' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5654000d67e8 <col:19> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
    |           `-ImplicitCastExpr 0x5654000d68a0 <col:28> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5654000d6860 <col:28> 'int' lvalue Var 0x5654000d6450 'i' 'int'
    `-IntegerLiteral 0x5654000d6978 <./lua.h:74:19> 'int' 0
!([B9.12])
   T: if [B9.13]
   Preds (1): B10
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x5654000d66a8 <ltable.c:164:13> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
   2: ImplicitCastExpr 0x5654000d6748 <ltable.c:164:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d66a8 <col:13> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5654000d66d0 <ltable.c:164:17> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000d66f8 <ltable.c:164:17> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d66d0 <col:17> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B10.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: MemberExpr 0x5654000d6710 <ltable.c:164:17, col:20> 'int' lvalue ->sizearray 0x56540009ae68
`-ImplicitCastExpr 0x5654000d66f8 <col:17> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d66d0 <col:17> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B10.4]->sizearray
   6: ImplicitCastExpr 0x5654000d6760 <ltable.c:164:17, col:20> 'int' <LValueToRValue>
`-MemberExpr 0x5654000d6710 <col:17, col:20> 'int' lvalue ->sizearray 0x56540009ae68
  `-ImplicitCastExpr 0x5654000d66f8 <col:17> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d66d0 <col:17> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B10.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x5654000d6778 <ltable.c:164:13, col:20> 'int' '<'
|-ImplicitCastExpr 0x5654000d6748 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000d66a8 <col:13> 'int' lvalue Var 0x5654000d6450 'i' 'int'
`-ImplicitCastExpr 0x5654000d6760 <col:17, col:20> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000d6710 <col:17, col:20> 'int' lvalue ->sizearray 0x56540009ae68
    `-ImplicitCastExpr 0x5654000d66f8 <col:17> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d66d0 <col:17> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B10.2] < [B10.6]
   T: for (...; [B10.7]; ...)
   Preds (2): B7 B11
   Succs (2): B9 B6

 [B11]
   1: DeclRefExpr 0x5654000d64b0 <ltable.c:163:11> 'int (lua_State *, Table *, StkId)' Function 0x5654000d3b00 'findindex' 'int (lua_State *, Table *, StkId)'
findindex
   2: ImplicitCastExpr 0x5654000d65a8 <ltable.c:163:11> 'int (*)(lua_State *, Table *, StkId)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000d64b0 <col:11> 'int (lua_State *, Table *, StkId)' Function 0x5654000d3b00 'findindex' 'int (lua_State *, Table *, StkId)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, Table *, StkId))
   3: DeclRefExpr 0x5654000d64d8 <ltable.c:163:21> 'lua_State *' lvalue ParmVar 0x5654000d5e30 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000d6600 <ltable.c:163:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000d64d8 <col:21> 'lua_State *' lvalue ParmVar 0x5654000d5e30 'L' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5654000d6500 <ltable.c:163:24> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
t
   6: ImplicitCastExpr 0x5654000d6618 <ltable.c:163:24> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d6500 <col:24> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
[B11.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: DeclRefExpr 0x5654000d6528 <ltable.c:163:27> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
key
   8: ImplicitCastExpr 0x5654000d6630 <ltable.c:163:27> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d6528 <col:27> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
[B11.7] (ImplicitCastExpr, LValueToRValue, StkId)
   9: CallExpr 0x5654000d65c0 <ltable.c:163:11, col:30> 'int'
|-ImplicitCastExpr 0x5654000d65a8 <col:11> 'int (*)(lua_State *, Table *, StkId)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000d64b0 <col:11> 'int (lua_State *, Table *, StkId)' Function 0x5654000d3b00 'findindex' 'int (lua_State *, Table *, StkId)'
|-ImplicitCastExpr 0x5654000d6600 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000d64d8 <col:21> 'lua_State *' lvalue ParmVar 0x5654000d5e30 'L' 'lua_State *'
|-ImplicitCastExpr 0x5654000d6618 <col:24> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000d6500 <col:24> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
`-ImplicitCastExpr 0x5654000d6630 <col:27> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d6528 <col:27> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
[B11.2]([B11.4], [B11.6], [B11.8])
  10: DeclStmt 0x5654000d6648 <ltable.c:163:3, col:31>col:7
`-VarDecl 0x5654000d6450 <col:3, col:30> col:7 used i 'int' cinit
  `-CallExpr 0x5654000d65c0 <col:11, col:30> 'int'
    |-ImplicitCastExpr 0x5654000d65a8 <col:11> 'int (*)(lua_State *, Table *, StkId)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5654000d64b0 <col:11> 'int (lua_State *, Table *, StkId)' Function 0x5654000d3b00 'findindex' 'int (lua_State *, Table *, StkId)'
    |-ImplicitCastExpr 0x5654000d6600 <col:21> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5654000d64d8 <col:21> 'lua_State *' lvalue ParmVar 0x5654000d5e30 'L' 'lua_State *'
    |-ImplicitCastExpr 0x5654000d6618 <col:24> 'Table *' <LValueToRValue>
    | `-DeclRefExpr 0x5654000d6500 <col:24> 'Table *' lvalue ParmVar 0x5654000d5ea0 't' 'Table *'
    `-ImplicitCastExpr 0x5654000d6630 <col:27> 'StkId':'TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d6528 <col:27> 'StkId':'TValue *' lvalue ParmVar 0x5654000d5f10 'key' 'StkId':'TValue *'
int i = findindex(L, t, key);
  11: DeclRefExpr 0x5654000d6660 <ltable.c:164:8> 'int' lvalue Var 0x5654000d6450 'i' 'int'
i
  12: UnaryOperator 0x5654000d6688 <ltable.c:164:8, col:9> 'int' postfix '++'
`-DeclRefExpr 0x5654000d6660 <col:8> 'int' lvalue Var 0x5654000d6450 'i' 'int'
[B11.11]++
   Preds (1): B12
   Succs (1): B10

 [B0 (EXIT)]
   Preds (3): B1 B3 B8
