static int handle_script(lua_State *L, char **argv, int n)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x55cfe636e3e8 <lua.c:253:10> 'int (lua_State *, int)' Function 0x55cfe635d8a8 'report' 'int (lua_State *, int)'
report
   2: ImplicitCastExpr 0x55cfe636e460 <lua.c:253:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636e3e8 <col:10> 'int (lua_State *, int)' Function 0x55cfe635d8a8 'report' 'int (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x55cfe636e410 <lua.c:253:17> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe636e4b0 <lua.c:253:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636e410 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe636e438 <lua.c:253:20> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
status
   6: ImplicitCastExpr 0x55cfe636e4c8 <lua.c:253:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe636e438 <col:20> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x55cfe636e478 <lua.c:253:10, col:26> 'int'
|-ImplicitCastExpr 0x55cfe636e460 <col:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636e3e8 <col:10> 'int (lua_State *, int)' Function 0x55cfe635d8a8 'report' 'int (lua_State *, int)'
|-ImplicitCastExpr 0x55cfe636e4b0 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636e410 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
`-ImplicitCastExpr 0x55cfe636e4c8 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe636e438 <col:20> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
[B1.2]([B1.4], [B1.6])
   8: ReturnStmt 0x55cfe636e4e0 <lua.c:253:3, col:26>
`-CallExpr 0x55cfe636e478 <col:10, col:26> 'int'
  |-ImplicitCastExpr 0x55cfe636e460 <col:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe636e3e8 <col:10> 'int (lua_State *, int)' Function 0x55cfe635d8a8 'report' 'int (lua_State *, int)'
  |-ImplicitCastExpr 0x55cfe636e4b0 <col:17> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe636e410 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
  `-ImplicitCastExpr 0x55cfe636e4c8 <col:20> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55cfe636e438 <col:20> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
return [B1.7];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55cfe636e230 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55cfe6338e00 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x55cfe636e348 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636e230 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55cfe6338e00 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55cfe636e258 <lua.c:252:13> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe636e398 <lua.c:252:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636e258 <col:13> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe636e280 <lua.c:252:16> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
narg
   6: ImplicitCastExpr 0x55cfe636e2c8 <./lua.h:254:38, col:40> 'int' <LValueToRValue>
`-ParenExpr 0x55cfe636e2a8 <col:38, col:40> 'int' lvalue
  `-DeclRefExpr 0x55cfe636e280 <lua.c:252:16> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
([B2.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: UnaryOperator 0x55cfe636e2e0 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ImplicitCastExpr 0x55cfe636e2c8 <col:38, col:40> 'int' <LValueToRValue>
  `-ParenExpr 0x55cfe636e2a8 <col:38, col:40> 'int' lvalue
    `-DeclRefExpr 0x55cfe636e280 <lua.c:252:16> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
-[B2.6]
   8: IntegerLiteral 0x55cfe636e300 <./lua.h:254:42> 'int' 1
1
   9: BinaryOperator 0x55cfe636e320 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x55cfe636e2e0 <col:37, col:40> 'int' prefix '-'
| `-ImplicitCastExpr 0x55cfe636e2c8 <col:38, col:40> 'int' <LValueToRValue>
|   `-ParenExpr 0x55cfe636e2a8 <col:38, col:40> 'int' lvalue
|     `-DeclRefExpr 0x55cfe636e280 <lua.c:252:16> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
`-IntegerLiteral 0x55cfe636e300 <./lua.h:254:42> 'int' 1
[B2.7] - [B2.8]
  10: CallExpr 0x55cfe636e360 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x55cfe636e348 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636e230 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55cfe6338e00 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55cfe636e398 <lua.c:252:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636e258 <col:13> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
`-BinaryOperator 0x55cfe636e320 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x55cfe636e2e0 <col:37, col:40> 'int' prefix '-'
  | `-ImplicitCastExpr 0x55cfe636e2c8 <col:38, col:40> 'int' <LValueToRValue>
  |   `-ParenExpr 0x55cfe636e2a8 <col:38, col:40> 'int' lvalue
  |     `-DeclRefExpr 0x55cfe636e280 <lua.c:252:16> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
  `-IntegerLiteral 0x55cfe636e300 <./lua.h:254:42> 'int' 1
[B2.2]([B2.4], [B2.9])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55cfe636e0e8 <lua.c:250:14> 'int (lua_State *, int, int)' Function 0x55cfe635f7e8 'docall' 'int (lua_State *, int, int)'
docall
   2: ImplicitCastExpr 0x55cfe636e180 <lua.c:250:14> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636e0e8 <col:14> 'int (lua_State *, int, int)' Function 0x55cfe635f7e8 'docall' 'int (lua_State *, int, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int))
   3: DeclRefExpr 0x55cfe636e110 <lua.c:250:21> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe636e1d8 <lua.c:250:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636e110 <col:21> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe636e138 <lua.c:250:24> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
narg
   6: ImplicitCastExpr 0x55cfe636e1f0 <lua.c:250:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe636e138 <col:24> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x55cfe636e160 <lua.c:250:30> 'int' 0
0
   8: CallExpr 0x55cfe636e198 <lua.c:250:14, col:31> 'int'
|-ImplicitCastExpr 0x55cfe636e180 <col:14> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636e0e8 <col:14> 'int (lua_State *, int, int)' Function 0x55cfe635f7e8 'docall' 'int (lua_State *, int, int)'
|-ImplicitCastExpr 0x55cfe636e1d8 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636e110 <col:21> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
|-ImplicitCastExpr 0x55cfe636e1f0 <col:24> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636e138 <col:24> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
`-IntegerLiteral 0x55cfe636e160 <col:30> 'int' 0
[B3.2]([B3.4], [B3.6], [B3.7])
   9: DeclRefExpr 0x55cfe636e0c0 <lua.c:250:5> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
status
  10: BinaryOperator 0x55cfe636e208 <lua.c:250:5, col:31> 'int' '='
|-DeclRefExpr 0x55cfe636e0c0 <col:5> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
`-CallExpr 0x55cfe636e198 <col:14, col:31> 'int'
  |-ImplicitCastExpr 0x55cfe636e180 <col:14> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe636e0e8 <col:14> 'int (lua_State *, int, int)' Function 0x55cfe635f7e8 'docall' 'int (lua_State *, int, int)'
  |-ImplicitCastExpr 0x55cfe636e1d8 <col:21> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe636e110 <col:21> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
  |-ImplicitCastExpr 0x55cfe636e1f0 <col:24> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe636e138 <col:24> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
  `-IntegerLiteral 0x55cfe636e160 <col:30> 'int' 0
[B3.9] = [B3.8]
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x55cfe636dd98 <lua.c:247:12> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55cfe63518b0 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
luaL_loadfile
   2: ImplicitCastExpr 0x55cfe636de10 <lua.c:247:12> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636dd98 <col:12> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55cfe63518b0 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *))
   3: DeclRefExpr 0x55cfe636ddc0 <lua.c:247:26> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe636de60 <lua.c:247:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636ddc0 <col:26> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe636dde8 <lua.c:247:29> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
fname
   6: ImplicitCastExpr 0x55cfe636de78 <lua.c:247:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636dde8 <col:29> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
[B4.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x55cfe636de28 <lua.c:247:12, col:34> 'int'
|-ImplicitCastExpr 0x55cfe636de10 <col:12> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636dd98 <col:12> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55cfe63518b0 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
|-ImplicitCastExpr 0x55cfe636de60 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636ddc0 <col:26> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
`-ImplicitCastExpr 0x55cfe636de78 <col:29> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe636dde8 <col:29> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
[B4.2]([B4.4], [B4.6])
   8: DeclRefExpr 0x55cfe636dd70 <lua.c:247:3> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
status
   9: BinaryOperator 0x55cfe636de90 <lua.c:247:3, col:34> 'int' '='
|-DeclRefExpr 0x55cfe636dd70 <col:3> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
`-CallExpr 0x55cfe636de28 <col:12, col:34> 'int'
  |-ImplicitCastExpr 0x55cfe636de10 <col:12> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe636dd98 <col:12> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55cfe63518b0 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
  |-ImplicitCastExpr 0x55cfe636de60 <col:26> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe636ddc0 <col:26> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
  `-ImplicitCastExpr 0x55cfe636de78 <col:29> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55cfe636dde8 <col:29> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
[B4.8] = [B4.7]
  10: DeclRefExpr 0x55cfe636deb8 <lua.c:248:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55cfe6339370 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_insert
  11: ImplicitCastExpr 0x55cfe636dfd0 <lua.c:248:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636deb8 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55cfe6339370 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
[B4.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  12: DeclRefExpr 0x55cfe636dee0 <lua.c:248:14> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x55cfe636e020 <lua.c:248:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636dee0 <col:14> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
[B4.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: DeclRefExpr 0x55cfe636df08 <lua.c:248:19> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
narg
  15: ImplicitCastExpr 0x55cfe636df50 <lua.c:248:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe636df08 <col:19> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
[B4.14] (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x55cfe636df30 <lua.c:248:24> 'int' 1
1
  17: BinaryOperator 0x55cfe636df68 <lua.c:248:19, col:24> 'int' '+'
|-ImplicitCastExpr 0x55cfe636df50 <col:19> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636df08 <col:19> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
`-IntegerLiteral 0x55cfe636df30 <col:24> 'int' 1
[B4.15] + [B4.16]
  18: UnaryOperator 0x55cfe636dfb0 <lua.c:248:17, col:25> 'int' prefix '-'
`-ParenExpr 0x55cfe636df90 <col:18, col:25> 'int'
  `-BinaryOperator 0x55cfe636df68 <col:19, col:24> 'int' '+'
    |-ImplicitCastExpr 0x55cfe636df50 <col:19> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe636df08 <col:19> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
    `-IntegerLiteral 0x55cfe636df30 <col:24> 'int' 1
-([B4.17])
  19: CallExpr 0x55cfe636dfe8 <lua.c:248:3, col:26> 'void'
|-ImplicitCastExpr 0x55cfe636dfd0 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636deb8 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55cfe6339370 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55cfe636e020 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636dee0 <col:14> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
`-UnaryOperator 0x55cfe636dfb0 <col:17, col:25> 'int' prefix '-'
  `-ParenExpr 0x55cfe636df90 <col:18, col:25> 'int'
    `-BinaryOperator 0x55cfe636df68 <col:19, col:24> 'int' '+'
      |-ImplicitCastExpr 0x55cfe636df50 <col:19> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe636df08 <col:19> 'int' lvalue Var 0x55cfe636d300 'narg' 'int'
      `-IntegerLiteral 0x55cfe636df30 <col:24> 'int' 1
[B4.11]([B4.13], [B4.18])
  20: DeclRefExpr 0x55cfe636e038 <lua.c:249:7> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
status
  21: ImplicitCastExpr 0x55cfe636e080 <lua.c:249:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe636e038 <col:7> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
[B4.20] (ImplicitCastExpr, LValueToRValue, int)
  22: IntegerLiteral 0x55cfe636e060 <lua.c:249:17> 'int' 0
0
  23: BinaryOperator 0x55cfe636e098 <lua.c:249:7, col:17> 'int' '=='
|-ImplicitCastExpr 0x55cfe636e080 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636e038 <col:7> 'int' lvalue Var 0x55cfe636d1e0 'status' 'int'
`-IntegerLiteral 0x55cfe636e060 <col:17> 'int' 0
[B4.21] == [B4.22]
   T: if [B4.23]
   Preds (3): B5 B6 B7
   Succs (2): B3 B2

 [B5]
   1: IntegerLiteral 0x55cfe636dc78 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55cfe636dcb0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55cfe636dc78 <col:24> 'int' 0
(void *)[B5.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55cfe636dcf8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x55cfe636dcd8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55cfe636dcb0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55cfe636dc78 <col:24> 'int' 0
([B5.2]) (ImplicitCastExpr, NullToPointer, const char *)
   4: DeclRefExpr 0x55cfe636dc50 <lua.c:246:5> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
fname
   5: BinaryOperator 0x55cfe636dd10 <lua.c:246:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'const char *' '='
|-DeclRefExpr 0x55cfe636dc50 <lua.c:246:5> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
`-ImplicitCastExpr 0x55cfe636dcf8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x55cfe636dcd8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55cfe636dcb0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55cfe636dc78 <col:24> 'int' 0
[B5.4] = [B5.3]
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55cfe636d9b8 <lua.c:245:34> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
strcmp
   2: ImplicitCastExpr 0x55cfe636db30 <lua.c:245:34> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636d9b8 <col:34> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *))
   3: DeclRefExpr 0x55cfe636d9e0 <lua.c:245:41> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
argv
   4: ImplicitCastExpr 0x55cfe636da90 <lua.c:245:41> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d9e0 <col:41> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
[B6.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: DeclRefExpr 0x55cfe636da08 <lua.c:245:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
n
   6: ImplicitCastExpr 0x55cfe636da50 <lua.c:245:46> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe636da08 <col:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B6.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x55cfe636da30 <lua.c:245:48> 'int' 1
1
   8: BinaryOperator 0x55cfe636da68 <lua.c:245:46, col:48> 'int' '-'
|-ImplicitCastExpr 0x55cfe636da50 <col:46> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636da08 <col:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
`-IntegerLiteral 0x55cfe636da30 <col:48> 'int' 1
[B6.6] - [B6.7]
   9: ArraySubscriptExpr 0x55cfe636daa8 <lua.c:245:41, col:49> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe636da90 <col:41> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636d9e0 <col:41> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
`-BinaryOperator 0x55cfe636da68 <col:46, col:48> 'int' '-'
  |-ImplicitCastExpr 0x55cfe636da50 <col:46> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe636da08 <col:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
  `-IntegerLiteral 0x55cfe636da30 <col:48> 'int' 1
[B6.4][[B6.8]]
  10: ImplicitCastExpr 0x55cfe636db80 <lua.c:245:41, col:49> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe636daa8 <col:41, col:49> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe636da90 <col:41> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe636d9e0 <col:41> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
  `-BinaryOperator 0x55cfe636da68 <col:46, col:48> 'int' '-'
    |-ImplicitCastExpr 0x55cfe636da50 <col:46> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe636da08 <col:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
    `-IntegerLiteral 0x55cfe636da30 <col:48> 'int' 1
[B6.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: ImplicitCastExpr 0x55cfe636db98 <lua.c:245:41, col:49> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe636db80 <col:41, col:49> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55cfe636daa8 <col:41, col:49> 'char *' lvalue
    |-ImplicitCastExpr 0x55cfe636da90 <col:41> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe636d9e0 <col:41> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
    `-BinaryOperator 0x55cfe636da68 <col:46, col:48> 'int' '-'
      |-ImplicitCastExpr 0x55cfe636da50 <col:46> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe636da08 <col:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
      `-IntegerLiteral 0x55cfe636da30 <col:48> 'int' 1
[B6.10] (ImplicitCastExpr, BitCast, const char *)
  12: StringLiteral 0x55cfe636dad0 <lua.c:245:52> 'char [3]' lvalue "--"
"--"
  13: ImplicitCastExpr 0x55cfe636dbb0 <lua.c:245:52> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55cfe636dad0 <col:52> 'char [3]' lvalue "--"
[B6.12] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  14: ImplicitCastExpr 0x55cfe636dbc8 <lua.c:245:52> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe636dbb0 <col:52> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55cfe636dad0 <col:52> 'char [3]' lvalue "--"
[B6.13] (ImplicitCastExpr, BitCast, const char *)
  15: CallExpr 0x55cfe636db48 <lua.c:245:34, col:56> 'int'
|-ImplicitCastExpr 0x55cfe636db30 <col:34> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636d9b8 <col:34> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
|-ImplicitCastExpr 0x55cfe636db98 <col:41, col:49> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55cfe636db80 <col:41, col:49> 'char *' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55cfe636daa8 <col:41, col:49> 'char *' lvalue
|     |-ImplicitCastExpr 0x55cfe636da90 <col:41> 'char **' <LValueToRValue>
|     | `-DeclRefExpr 0x55cfe636d9e0 <col:41> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
|     `-BinaryOperator 0x55cfe636da68 <col:46, col:48> 'int' '-'
|       |-ImplicitCastExpr 0x55cfe636da50 <col:46> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cfe636da08 <col:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
|       `-IntegerLiteral 0x55cfe636da30 <col:48> 'int' 1
`-ImplicitCastExpr 0x55cfe636dbc8 <col:52> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe636dbb0 <col:52> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55cfe636dad0 <col:52> 'char [3]' lvalue "--"
[B6.2]([B6.11], [B6.14])
  16: IntegerLiteral 0x55cfe636dbe0 <lua.c:245:61> 'int' 0
0
  17: BinaryOperator 0x55cfe636dc00 <lua.c:245:34, col:61> 'int' '!='
|-CallExpr 0x55cfe636db48 <col:34, col:56> 'int'
| |-ImplicitCastExpr 0x55cfe636db30 <col:34> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55cfe636d9b8 <col:34> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
| |-ImplicitCastExpr 0x55cfe636db98 <col:41, col:49> 'const char *' <BitCast>
| | `-ImplicitCastExpr 0x55cfe636db80 <col:41, col:49> 'char *' <LValueToRValue>
| |   `-ArraySubscriptExpr 0x55cfe636daa8 <col:41, col:49> 'char *' lvalue
| |     |-ImplicitCastExpr 0x55cfe636da90 <col:41> 'char **' <LValueToRValue>
| |     | `-DeclRefExpr 0x55cfe636d9e0 <col:41> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
| |     `-BinaryOperator 0x55cfe636da68 <col:46, col:48> 'int' '-'
| |       |-ImplicitCastExpr 0x55cfe636da50 <col:46> 'int' <LValueToRValue>
| |       | `-DeclRefExpr 0x55cfe636da08 <col:46> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
| |       `-IntegerLiteral 0x55cfe636da30 <col:48> 'int' 1
| `-ImplicitCastExpr 0x55cfe636dbc8 <col:52> 'const char *' <BitCast>
|   `-ImplicitCastExpr 0x55cfe636dbb0 <col:52> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x55cfe636dad0 <col:52> 'char [3]' lvalue "--"
`-IntegerLiteral 0x55cfe636dbe0 <col:61> 'int' 0
[B6.15] != [B6.16]
   T: if [B7.41] && [B6.17]
   Preds (1): B7
   Succs (2): B5 B4

 [B7]
   1: DeclStmt 0x55cfe636d240 <lua.c:240:3, col:13>col:7
`-VarDecl 0x55cfe636d1e0 <col:3, col:7> col:7 used status 'int'
int status;
   2: DeclStmt 0x55cfe636d2d0 <lua.c:241:3, col:20>col:15
`-VarDecl 0x55cfe636d270 <col:3, col:15> col:15 used fname 'const char *'
const char *fname;
   3: DeclRefExpr 0x55cfe636d360 <lua.c:242:14> 'int (lua_State *, char **, int)' Function 0x55cfe6360be8 'getargs' 'int (lua_State *, char **, int)'
getargs
   4: ImplicitCastExpr 0x55cfe636d458 <lua.c:242:14> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636d360 <col:14> 'int (lua_State *, char **, int)' Function 0x55cfe6360be8 'getargs' 'int (lua_State *, char **, int)'
[B7.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, char **, int))
   5: DeclRefExpr 0x55cfe636d388 <lua.c:242:22> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55cfe636d4b0 <lua.c:242:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d388 <col:22> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
[B7.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x55cfe636d3b0 <lua.c:242:25> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
argv
   8: ImplicitCastExpr 0x55cfe636d4c8 <lua.c:242:25> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d3b0 <col:25> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
[B7.7] (ImplicitCastExpr, LValueToRValue, char **)
   9: DeclRefExpr 0x55cfe636d3d8 <lua.c:242:31> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
n
  10: ImplicitCastExpr 0x55cfe636d4e0 <lua.c:242:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d3d8 <col:31> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B7.9] (ImplicitCastExpr, LValueToRValue, int)
  11: CallExpr 0x55cfe636d470 <lua.c:242:14, col:32> 'int'
|-ImplicitCastExpr 0x55cfe636d458 <col:14> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636d360 <col:14> 'int (lua_State *, char **, int)' Function 0x55cfe6360be8 'getargs' 'int (lua_State *, char **, int)'
|-ImplicitCastExpr 0x55cfe636d4b0 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636d388 <col:22> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
|-ImplicitCastExpr 0x55cfe636d4c8 <col:25> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636d3b0 <col:25> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
`-ImplicitCastExpr 0x55cfe636d4e0 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe636d3d8 <col:31> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B7.4]([B7.6], [B7.8], [B7.10])
  12: DeclStmt 0x55cfe636d4f8 <lua.c:242:3, col:33>col:7
`-VarDecl 0x55cfe636d300 <col:3, col:32> col:7 used narg 'int' cinit
  `-CallExpr 0x55cfe636d470 <col:14, col:32> 'int'
    |-ImplicitCastExpr 0x55cfe636d458 <col:14> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55cfe636d360 <col:14> 'int (lua_State *, char **, int)' Function 0x55cfe6360be8 'getargs' 'int (lua_State *, char **, int)'
    |-ImplicitCastExpr 0x55cfe636d4b0 <col:22> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe636d388 <col:22> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
    |-ImplicitCastExpr 0x55cfe636d4c8 <col:25> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe636d3b0 <col:25> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
    `-ImplicitCastExpr 0x55cfe636d4e0 <col:31> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55cfe636d3d8 <col:31> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
int narg = getargs(L, argv, n);
  13: DeclRefExpr 0x55cfe636d510 <./lua.h:276:28> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55cfe633f9d0 'lua_setfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
lua_setfield
  14: ImplicitCastExpr 0x55cfe636d610 <./lua.h:276:28> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636d510 <col:28> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55cfe633f9d0 'lua_setfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
[B7.13] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, const char *))
  15: DeclRefExpr 0x55cfe636d538 <lua.c:243:17> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x55cfe636d690 <lua.c:243:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d538 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
[B7.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: IntegerLiteral 0x55cfe636d560 <./lua.h:38:28> 'int' 10002
10002
  18: UnaryOperator 0x55cfe636d580 <./lua.h:38:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x55cfe636d560 <col:28> 'int' 10002
-[B7.17]
  19: StringLiteral 0x55cfe636d5c0 <lua.c:243:20> 'char [4]' lvalue "arg"
"arg"
  20: ImplicitCastExpr 0x55cfe636d6a8 <./lua.h:276:62, col:64> 'char *' <ArrayToPointerDecay>
`-ParenExpr 0x55cfe636d5f0 <col:62, col:64> 'char [4]' lvalue
  `-StringLiteral 0x55cfe636d5c0 <lua.c:243:20> 'char [4]' lvalue "arg"
([B7.19]) (ImplicitCastExpr, ArrayToPointerDecay, char *)
  21: ImplicitCastExpr 0x55cfe636d6c0 <./lua.h:276:62, col:64> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe636d6a8 <col:62, col:64> 'char *' <ArrayToPointerDecay>
  `-ParenExpr 0x55cfe636d5f0 <col:62, col:64> 'char [4]' lvalue
    `-StringLiteral 0x55cfe636d5c0 <lua.c:243:20> 'char [4]' lvalue "arg"
[B7.20] (ImplicitCastExpr, BitCast, const char *)
  22: CallExpr 0x55cfe636d650 <./lua.h:276:28, col:65> 'void'
|-ImplicitCastExpr 0x55cfe636d610 <col:28> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636d510 <col:28> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55cfe633f9d0 'lua_setfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x55cfe636d690 <lua.c:243:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636d538 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe636cf80 'L' 'lua_State *'
|-ParenExpr 0x55cfe636d5a0 <./lua.h:38:26, col:33> 'int'
| `-UnaryOperator 0x55cfe636d580 <col:27, col:28> 'int' prefix '-'
|   `-IntegerLiteral 0x55cfe636d560 <col:28> 'int' 10002
`-ImplicitCastExpr 0x55cfe636d6c0 <line:276:62, col:64> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe636d6a8 <col:62, col:64> 'char *' <ArrayToPointerDecay>
    `-ParenExpr 0x55cfe636d5f0 <col:62, col:64> 'char [4]' lvalue
      `-StringLiteral 0x55cfe636d5c0 <lua.c:243:20> 'char [4]' lvalue "arg"
[B7.14]([B7.16], ([B7.18]), [B7.21])
  23: DeclRefExpr 0x55cfe636d700 <lua.c:244:11> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
argv
  24: ImplicitCastExpr 0x55cfe636d750 <lua.c:244:11> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d700 <col:11> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
[B7.23] (ImplicitCastExpr, LValueToRValue, char **)
  25: DeclRefExpr 0x55cfe636d728 <lua.c:244:16> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
n
  26: ImplicitCastExpr 0x55cfe636d768 <lua.c:244:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d728 <col:16> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B7.25] (ImplicitCastExpr, LValueToRValue, int)
  27: ArraySubscriptExpr 0x55cfe636d780 <lua.c:244:11, col:17> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe636d750 <col:11> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636d700 <col:11> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
`-ImplicitCastExpr 0x55cfe636d768 <col:16> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe636d728 <col:16> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B7.24][[B7.26]]
  28: ImplicitCastExpr 0x55cfe636d7a8 <lua.c:244:11, col:17> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe636d780 <col:11, col:17> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe636d750 <col:11> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe636d700 <col:11> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
  `-ImplicitCastExpr 0x55cfe636d768 <col:16> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55cfe636d728 <col:16> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B7.27] (ImplicitCastExpr, LValueToRValue, char *)
  29: ImplicitCastExpr 0x55cfe636d7c0 <lua.c:244:11, col:17> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe636d7a8 <col:11, col:17> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55cfe636d780 <col:11, col:17> 'char *' lvalue
    |-ImplicitCastExpr 0x55cfe636d750 <col:11> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe636d700 <col:11> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
    `-ImplicitCastExpr 0x55cfe636d768 <col:16> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55cfe636d728 <col:16> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B7.28] (ImplicitCastExpr, BitCast, const char *)
  30: DeclRefExpr 0x55cfe636d6d8 <lua.c:244:3> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
fname
  31: BinaryOperator 0x55cfe636d7d8 <lua.c:244:3, col:17> 'const char *' '='
|-DeclRefExpr 0x55cfe636d6d8 <col:3> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
`-ImplicitCastExpr 0x55cfe636d7c0 <col:11, col:17> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe636d7a8 <col:11, col:17> 'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55cfe636d780 <col:11, col:17> 'char *' lvalue
      |-ImplicitCastExpr 0x55cfe636d750 <col:11> 'char **' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe636d700 <col:11> 'char **' lvalue ParmVar 0x55cfe636cff8 'argv' 'char **'
      `-ImplicitCastExpr 0x55cfe636d768 <col:16> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55cfe636d728 <col:16> 'int' lvalue ParmVar 0x55cfe636d070 'n' 'int'
[B7.30] = [B7.29]
  32: DeclRefExpr 0x55cfe636d800 <lua.c:245:7> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
strcmp
  33: ImplicitCastExpr 0x55cfe636d8d8 <lua.c:245:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe636d800 <col:7> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
[B7.32] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *))
  34: DeclRefExpr 0x55cfe636d828 <lua.c:245:14> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
fname
  35: ImplicitCastExpr 0x55cfe636d928 <lua.c:245:14> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55cfe636d828 <col:14> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
[B7.34] (ImplicitCastExpr, LValueToRValue, const char *)
  36: StringLiteral 0x55cfe636d850 <lua.c:245:21> 'char [2]' lvalue "-"
"-"
  37: ImplicitCastExpr 0x55cfe636d940 <lua.c:245:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55cfe636d850 <col:21> 'char [2]' lvalue "-"
[B7.36] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  38: ImplicitCastExpr 0x55cfe636d958 <lua.c:245:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe636d940 <col:21> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55cfe636d850 <col:21> 'char [2]' lvalue "-"
[B7.37] (ImplicitCastExpr, BitCast, const char *)
  39: CallExpr 0x55cfe636d8f0 <lua.c:245:7, col:24> 'int'
|-ImplicitCastExpr 0x55cfe636d8d8 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe636d800 <col:7> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
|-ImplicitCastExpr 0x55cfe636d928 <col:14> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe636d828 <col:14> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
`-ImplicitCastExpr 0x55cfe636d958 <col:21> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe636d940 <col:21> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55cfe636d850 <col:21> 'char [2]' lvalue "-"
[B7.33]([B7.35], [B7.38])
  40: IntegerLiteral 0x55cfe636d970 <lua.c:245:29> 'int' 0
0
  41: BinaryOperator 0x55cfe636d990 <lua.c:245:7, col:29> 'int' '=='
|-CallExpr 0x55cfe636d8f0 <col:7, col:24> 'int'
| |-ImplicitCastExpr 0x55cfe636d8d8 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55cfe636d800 <col:7> 'int (const char *, const char *)' Function 0x55cfe63095a8 'strcmp' 'int (const char *, const char *)'
| |-ImplicitCastExpr 0x55cfe636d928 <col:14> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55cfe636d828 <col:14> 'const char *' lvalue Var 0x55cfe636d270 'fname' 'const char *'
| `-ImplicitCastExpr 0x55cfe636d958 <col:21> 'const char *' <BitCast>
|   `-ImplicitCastExpr 0x55cfe636d940 <col:21> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x55cfe636d850 <col:21> 'char [2]' lvalue "-"
`-IntegerLiteral 0x55cfe636d970 <col:29> 'int' 0
[B7.39] == [B7.40]
   T: [B7.41] && ...
   Preds (1): B8
   Succs (2): B6 B4

 [B0 (EXIT)]
   Preds (1): B1
