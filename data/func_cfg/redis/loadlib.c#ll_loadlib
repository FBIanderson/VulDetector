static int ll_loadlib(lua_State *L)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: ConditionalOperator 0x558048c24cc0 <loadlib.c:318:23, col:54> 'char *'
|-ParenExpr 0x558048c24b08 <col:23, col:38> 'int'
| `-BinaryOperator 0x558048c24ae0 <col:24, line:39:17> 'int' '=='
|   |-ImplicitCastExpr 0x558048c24ac8 <line:318:24> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x558048c24a80 <col:24> 'int' lvalue Var 0x558048c24560 'stat' 'int'
|   `-IntegerLiteral 0x558048c24aa8 <line:39:17> 'int' 1
|-ImplicitCastExpr 0x558048c24bc8 <line:233:18> 'char *' <ArrayToPointerDecay>
| `-StringLiteral 0x558048c24b68 <col:18> 'char [7]' lvalue "absent"
`-ImplicitCastExpr 0x558048c24be0 <line:318:54> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x558048c24b98 <col:54> 'char [5]' lvalue "init"
([B4.20]) ? [B2.2] : [B3.2]
   2: ImplicitCastExpr 0x558048c24db0 <loadlib.c:318:23, col:54> 'const char *' <BitCast>
`-ConditionalOperator 0x558048c24cc0 <col:23, col:54> 'char *'
  |-ParenExpr 0x558048c24b08 <col:23, col:38> 'int'
  | `-BinaryOperator 0x558048c24ae0 <col:24, line:39:17> 'int' '=='
  |   |-ImplicitCastExpr 0x558048c24ac8 <line:318:24> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x558048c24a80 <col:24> 'int' lvalue Var 0x558048c24560 'stat' 'int'
  |   `-IntegerLiteral 0x558048c24aa8 <line:39:17> 'int' 1
  |-ImplicitCastExpr 0x558048c24bc8 <line:233:18> 'char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x558048c24b68 <col:18> 'char [7]' lvalue "absent"
  `-ImplicitCastExpr 0x558048c24be0 <line:318:54> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x558048c24b98 <col:54> 'char [5]' lvalue "init"
[B1.1] (ImplicitCastExpr, BitCast, const char *)
   3: CallExpr 0x558048c24d60 <loadlib.c:318:5, col:60> 'void'
|-ImplicitCastExpr 0x558048c24d48 <col:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c24a30 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x558048bd6030 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x558048c24d98 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c24a58 <col:20> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
`-ImplicitCastExpr 0x558048c24db0 <col:23, col:54> 'const char *' <BitCast>
  `-ConditionalOperator 0x558048c24cc0 <col:23, col:54> 'char *'
    |-ParenExpr 0x558048c24b08 <col:23, col:38> 'int'
    | `-BinaryOperator 0x558048c24ae0 <col:24, line:39:17> 'int' '=='
    |   |-ImplicitCastExpr 0x558048c24ac8 <line:318:24> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558048c24a80 <col:24> 'int' lvalue Var 0x558048c24560 'stat' 'int'
    |   `-IntegerLiteral 0x558048c24aa8 <line:39:17> 'int' 1
    |-ImplicitCastExpr 0x558048c24bc8 <line:233:18> 'char *' <ArrayToPointerDecay>
    | `-StringLiteral 0x558048c24b68 <col:18> 'char [7]' lvalue "absent"
    `-ImplicitCastExpr 0x558048c24be0 <line:318:54> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x558048c24b98 <col:54> 'char [5]' lvalue "init"
[B4.14]([B4.16], [B1.2])
   4: IntegerLiteral 0x558048c24dc8 <loadlib.c:319:12> 'int' 3
3
   5: ReturnStmt 0x558048c24de8 <loadlib.c:319:5, col:12>
`-IntegerLiteral 0x558048c24dc8 <col:12> 'int' 3
return [B1.4];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: StringLiteral 0x558048c24b68 <loadlib.c:233:18> 'char [7]' lvalue "absent"
"absent"
   2: ImplicitCastExpr 0x558048c24bc8 <loadlib.c:233:18> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x558048c24b68 <col:18> 'char [7]' lvalue "absent"
[B2.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: StringLiteral 0x558048c24b98 <loadlib.c:318:54> 'char [5]' lvalue "init"
"init"
   2: ImplicitCastExpr 0x558048c24be0 <loadlib.c:318:54> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x558048c24b98 <col:54> 'char [5]' lvalue "init"
[B3.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x558048c24830 <loadlib.c:316:5> 'void (lua_State *)':'void (lua_State *)' Function 0x558048bd55a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
   2: ImplicitCastExpr 0x558048c248d8 <loadlib.c:316:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c24830 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x558048bd55a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   3: DeclRefExpr 0x558048c24858 <loadlib.c:316:17> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c24920 <loadlib.c:316:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c24858 <col:17> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x558048c248f0 <loadlib.c:316:5, col:18> 'void'
|-ImplicitCastExpr 0x558048c248d8 <col:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c24830 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x558048bd55a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x558048c24920 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x558048c24858 <col:17> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
[B4.2]([B4.4])
   6: DeclRefExpr 0x558048c24938 <loadlib.c:317:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd11f0 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_insert
   7: ImplicitCastExpr 0x558048c249c8 <loadlib.c:317:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c24938 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd11f0 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
[B4.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   8: DeclRefExpr 0x558048c24960 <loadlib.c:317:16> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x558048c24a18 <loadlib.c:317:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c24960 <col:16> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
[B4.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: IntegerLiteral 0x558048c24988 <loadlib.c:317:20> 'int' 2
2
  11: UnaryOperator 0x558048c249a8 <loadlib.c:317:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x558048c24988 <col:20> 'int' 2
-[B4.10]
  12: CallExpr 0x558048c249e0 <loadlib.c:317:5, col:21> 'void'
|-ImplicitCastExpr 0x558048c249c8 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c24938 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd11f0 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x558048c24a18 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c24960 <col:16> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
`-UnaryOperator 0x558048c249a8 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x558048c24988 <col:20> 'int' 2
[B4.7]([B4.9], [B4.11])
  13: DeclRefExpr 0x558048c24a30 <loadlib.c:318:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x558048bd6030 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
  14: ImplicitCastExpr 0x558048c24d48 <loadlib.c:318:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c24a30 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x558048bd6030 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B4.13] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
  15: DeclRefExpr 0x558048c24a58 <loadlib.c:318:20> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x558048c24d98 <loadlib.c:318:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c24a58 <col:20> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
[B4.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: DeclRefExpr 0x558048c24a80 <loadlib.c:318:24> 'int' lvalue Var 0x558048c24560 'stat' 'int'
stat
  18: ImplicitCastExpr 0x558048c24ac8 <loadlib.c:318:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x558048c24a80 <col:24> 'int' lvalue Var 0x558048c24560 'stat' 'int'
[B4.17] (ImplicitCastExpr, LValueToRValue, int)
  19: IntegerLiteral 0x558048c24aa8 <loadlib.c:39:17> 'int' 1
1
  20: BinaryOperator 0x558048c24ae0 <loadlib.c:318:24, line:39:17> 'int' '=='
|-ImplicitCastExpr 0x558048c24ac8 <line:318:24> 'int' <LValueToRValue>
| `-DeclRefExpr 0x558048c24a80 <col:24> 'int' lvalue Var 0x558048c24560 'stat' 'int'
`-IntegerLiteral 0x558048c24aa8 <line:39:17> 'int' 1
[B4.18] == [B4.19]
   T: ([B4.20]) ? ... : ...
   Preds (1): B6
   Succs (2): B2 B3

 [B5]
   1: IntegerLiteral 0x558048c247f8 <loadlib.c:314:12> 'int' 1
1
   2: ReturnStmt 0x558048c24818 <loadlib.c:314:5, col:12>
`-IntegerLiteral 0x558048c247f8 <col:12> 'int' 1
return [B5.1];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x558048c240a8 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   2: ImplicitCastExpr 0x558048c24218 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c240a8 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   3: DeclRefExpr 0x558048c240d0 <loadlib.c:310:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c24270 <loadlib.c:310:39> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c240d0 <col:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x558048c240f8 <loadlib.c:310:42> 'int' 1
1
   6: IntegerLiteral 0x558048c24138 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x558048c24170 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558048c24138 <col:24> 'int' 0
(void *)[B6.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x558048c24288 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x558048c24198 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x558048c24170 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558048c24138 <col:24> 'int' 0
([B6.7]) (ImplicitCastExpr, NullToPointer, size_t *)
   9: CallExpr 0x558048c24230 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x558048c24218 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c240a8 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x558048c24270 <loadlib.c:310:39> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c240d0 <col:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
|-ParenExpr 0x558048c24118 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x558048c240f8 <loadlib.c:310:42> 'int' 1
`-ImplicitCastExpr 0x558048c24288 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x558048c24198 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x558048c24170 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x558048c24138 <col:24> 'int' 0
[B6.2]([B6.4], ([B6.5]), [B6.8])
  10: DeclStmt 0x558048c242c0 <loadlib.c:310:3, col:44>col:15
`-VarDecl 0x558048c24048 <col:3, ./lauxlib.h:102:63> loadlib.c:310:15 used path 'const char *' cinit
  `-ParenExpr 0x558048c242a0 <./lauxlib.h:102:31, col:63> 'const char *'
    `-CallExpr 0x558048c24230 <col:32, col:62> 'const char *'
      |-ImplicitCastExpr 0x558048c24218 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x558048c240a8 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
      |-ImplicitCastExpr 0x558048c24270 <loadlib.c:310:39> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x558048c240d0 <col:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
      |-ParenExpr 0x558048c24118 <./lauxlib.h:102:53, col:55> 'int'
      | `-IntegerLiteral 0x558048c240f8 <loadlib.c:310:42> 'int' 1
      `-ImplicitCastExpr 0x558048c24288 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x558048c24198 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x558048c24170 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x558048c24138 <col:24> 'int' 0
const char *path = (luaL_checklstring(L, (1), ((void *)0)));
  11: DeclRefExpr 0x558048c24350 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
  12: ImplicitCastExpr 0x558048c24488 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c24350 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B6.11] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
  13: DeclRefExpr 0x558048c243a0 <loadlib.c:311:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x558048c244e0 <loadlib.c:311:39> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c243a0 <col:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
[B6.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: IntegerLiteral 0x558048c243c8 <loadlib.c:311:42> 'int' 2
2
  16: IntegerLiteral 0x558048c24408 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  17: CStyleCastExpr 0x558048c24440 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558048c24408 <col:24> 'int' 0
(void *)[B6.16] (CStyleCastExpr, NullToPointer, void *)
  18: ImplicitCastExpr 0x558048c244f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x558048c24468 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x558048c24440 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558048c24408 <col:24> 'int' 0
([B6.17]) (ImplicitCastExpr, NullToPointer, size_t *)
  19: CallExpr 0x558048c244a0 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x558048c24488 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c24350 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x558048c244e0 <loadlib.c:311:39> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c243a0 <col:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
|-ParenExpr 0x558048c243e8 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x558048c243c8 <loadlib.c:311:42> 'int' 2
`-ImplicitCastExpr 0x558048c244f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x558048c24468 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x558048c24440 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x558048c24408 <col:24> 'int' 0
[B6.12]([B6.14], ([B6.15]), [B6.18])
  20: DeclStmt 0x558048c24530 <loadlib.c:311:3, col:44>col:15
`-VarDecl 0x558048c242f0 <col:3, ./lauxlib.h:102:63> loadlib.c:311:15 used init 'const char *' cinit
  `-ParenExpr 0x558048c24510 <./lauxlib.h:102:31, col:63> 'const char *'
    `-CallExpr 0x558048c244a0 <col:32, col:62> 'const char *'
      |-ImplicitCastExpr 0x558048c24488 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x558048c24350 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
      |-ImplicitCastExpr 0x558048c244e0 <loadlib.c:311:39> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x558048c243a0 <col:39> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
      |-ParenExpr 0x558048c243e8 <./lauxlib.h:102:53, col:55> 'int'
      | `-IntegerLiteral 0x558048c243c8 <loadlib.c:311:42> 'int' 2
      `-ImplicitCastExpr 0x558048c244f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x558048c24468 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x558048c24440 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x558048c24408 <col:24> 'int' 0
const char *init = (luaL_checklstring(L, (2), ((void *)0)));
  21: DeclRefExpr 0x558048c245c0 <loadlib.c:312:14> 'int (lua_State *, const char *, const char *)' Function 0x558048c23118 'll_loadfunc' 'int (lua_State *, const char *, const char *)'
ll_loadfunc
  22: ImplicitCastExpr 0x558048c246b8 <loadlib.c:312:14> 'int (*)(lua_State *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c245c0 <col:14> 'int (lua_State *, const char *, const char *)' Function 0x558048c23118 'll_loadfunc' 'int (lua_State *, const char *, const char *)'
[B6.21] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, const char *))
  23: DeclRefExpr 0x558048c245e8 <loadlib.c:312:26> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
L
  24: ImplicitCastExpr 0x558048c24710 <loadlib.c:312:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c245e8 <col:26> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
[B6.23] (ImplicitCastExpr, LValueToRValue, lua_State *)
  25: DeclRefExpr 0x558048c24610 <loadlib.c:312:29> 'const char *' lvalue Var 0x558048c24048 'path' 'const char *'
path
  26: ImplicitCastExpr 0x558048c24728 <loadlib.c:312:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c24610 <col:29> 'const char *' lvalue Var 0x558048c24048 'path' 'const char *'
[B6.25] (ImplicitCastExpr, LValueToRValue, const char *)
  27: DeclRefExpr 0x558048c24638 <loadlib.c:312:35> 'const char *' lvalue Var 0x558048c242f0 'init' 'const char *'
init
  28: ImplicitCastExpr 0x558048c24740 <loadlib.c:312:35> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c24638 <col:35> 'const char *' lvalue Var 0x558048c242f0 'init' 'const char *'
[B6.27] (ImplicitCastExpr, LValueToRValue, const char *)
  29: CallExpr 0x558048c246d0 <loadlib.c:312:14, col:39> 'int'
|-ImplicitCastExpr 0x558048c246b8 <col:14> 'int (*)(lua_State *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c245c0 <col:14> 'int (lua_State *, const char *, const char *)' Function 0x558048c23118 'll_loadfunc' 'int (lua_State *, const char *, const char *)'
|-ImplicitCastExpr 0x558048c24710 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c245e8 <col:26> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
|-ImplicitCastExpr 0x558048c24728 <col:29> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x558048c24610 <col:29> 'const char *' lvalue Var 0x558048c24048 'path' 'const char *'
`-ImplicitCastExpr 0x558048c24740 <col:35> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x558048c24638 <col:35> 'const char *' lvalue Var 0x558048c242f0 'init' 'const char *'
[B6.22]([B6.24], [B6.26], [B6.28])
  30: DeclStmt 0x558048c24758 <loadlib.c:312:3, col:40>col:7
`-VarDecl 0x558048c24560 <col:3, col:39> col:7 used stat 'int' cinit
  `-CallExpr 0x558048c246d0 <col:14, col:39> 'int'
    |-ImplicitCastExpr 0x558048c246b8 <col:14> 'int (*)(lua_State *, const char *, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x558048c245c0 <col:14> 'int (lua_State *, const char *, const char *)' Function 0x558048c23118 'll_loadfunc' 'int (lua_State *, const char *, const char *)'
    |-ImplicitCastExpr 0x558048c24710 <col:26> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x558048c245e8 <col:26> 'lua_State *' lvalue ParmVar 0x558048c23ef8 'L' 'lua_State *'
    |-ImplicitCastExpr 0x558048c24728 <col:29> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x558048c24610 <col:29> 'const char *' lvalue Var 0x558048c24048 'path' 'const char *'
    `-ImplicitCastExpr 0x558048c24740 <col:35> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x558048c24638 <col:35> 'const char *' lvalue Var 0x558048c242f0 'init' 'const char *'
int stat = ll_loadfunc(L, path, init);
  31: DeclRefExpr 0x558048c24770 <loadlib.c:313:7> 'int' lvalue Var 0x558048c24560 'stat' 'int'
stat
  32: ImplicitCastExpr 0x558048c247b8 <loadlib.c:313:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x558048c24770 <col:7> 'int' lvalue Var 0x558048c24560 'stat' 'int'
[B6.31] (ImplicitCastExpr, LValueToRValue, int)
  33: IntegerLiteral 0x558048c24798 <loadlib.c:313:15> 'int' 0
0
  34: BinaryOperator 0x558048c247d0 <loadlib.c:313:7, col:15> 'int' '=='
|-ImplicitCastExpr 0x558048c247b8 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x558048c24770 <col:7> 'int' lvalue Var 0x558048c24560 'stat' 'int'
`-IntegerLiteral 0x558048c24798 <col:15> 'int' 0
[B6.32] == [B6.33]
   T: if [B6.34]
   Preds (1): B7
   Succs (2): B5 B4

 [B0 (EXIT)]
   Preds (2): B1 B5
