int is_hex_digit(char c)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: BinaryOperator 0x55e83d1228f0 <sds.c:895:12, line:896:33> 'int' '||'
|-BinaryOperator 0x55e83d122750 <line:895:12, col:59> 'int' '||'
| |-ParenExpr 0x55e83d1225b8 <col:12, col:33> 'int'
| | `-BinaryOperator 0x55e83d122590 <col:13, col:30> 'int' '&&'
| |   |-BinaryOperator 0x55e83d1224b0 <col:13, col:18> 'int' '>='
| |   | |-ImplicitCastExpr 0x55e83d122498 <col:13> 'int' <IntegralCast>
| |   | | `-ImplicitCastExpr 0x55e83d122480 <col:13> 'char' <LValueToRValue>
| |   | |   `-DeclRefExpr 0x55e83d122440 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
| |   | `-CharacterLiteral 0x55e83d122468 <col:18> 'int' 48
| |   `-BinaryOperator 0x55e83d122548 <col:25, col:30> 'int' '<='
| |     |-ImplicitCastExpr 0x55e83d122530 <col:25> 'int' <IntegralCast>
| |     | `-ImplicitCastExpr 0x55e83d122518 <col:25> 'char' <LValueToRValue>
| |     |   `-DeclRefExpr 0x55e83d1224d8 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
| |     `-CharacterLiteral 0x55e83d122500 <col:30> 'int' 57
| `-ParenExpr 0x55e83d122730 <col:38, col:59> 'int'
|   `-BinaryOperator 0x55e83d122708 <col:39, col:56> 'int' '&&'
|     |-BinaryOperator 0x55e83d122648 <col:39, col:44> 'int' '>='
|     | |-ImplicitCastExpr 0x55e83d122630 <col:39> 'int' <IntegralCast>
|     | | `-ImplicitCastExpr 0x55e83d122618 <col:39> 'char' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55e83d1225d8 <col:39> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
|     | `-CharacterLiteral 0x55e83d122600 <col:44> 'int' 97
|     `-BinaryOperator 0x55e83d1226e0 <col:51, col:56> 'int' '<='
|       |-ImplicitCastExpr 0x55e83d1226c8 <col:51> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55e83d1226b0 <col:51> 'char' <LValueToRValue>
|       |   `-DeclRefExpr 0x55e83d122670 <col:51> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
|       `-CharacterLiteral 0x55e83d122698 <col:56> 'int' 102
`-ParenExpr 0x55e83d1228d0 <line:896:12, col:33> 'int'
  `-BinaryOperator 0x55e83d1228a8 <col:13, col:30> 'int' '&&'
    |-BinaryOperator 0x55e83d1227e8 <col:13, col:18> 'int' '>='
    | |-ImplicitCastExpr 0x55e83d1227d0 <col:13> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x55e83d1227b8 <col:13> 'char' <LValueToRValue>
    | |   `-DeclRefExpr 0x55e83d122778 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
    | `-CharacterLiteral 0x55e83d1227a0 <col:18> 'int' 65
    `-BinaryOperator 0x55e83d122880 <col:25, col:30> 'int' '<='
      |-ImplicitCastExpr 0x55e83d122868 <col:25> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x55e83d122850 <col:25> 'char' <LValueToRValue>
      |   `-DeclRefExpr 0x55e83d122810 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
      `-CharacterLiteral 0x55e83d122838 <col:30> 'int' 70
([B7.5] && [B6.5]) || ([B5.5] && [B4.5]) || ([B3.5] && [B2.5])
   2: ReturnStmt 0x55e83d122918 <sds.c:895:5, line:896:33>
`-BinaryOperator 0x55e83d1228f0 <line:895:12, line:896:33> 'int' '||'
  |-BinaryOperator 0x55e83d122750 <line:895:12, col:59> 'int' '||'
  | |-ParenExpr 0x55e83d1225b8 <col:12, col:33> 'int'
  | | `-BinaryOperator 0x55e83d122590 <col:13, col:30> 'int' '&&'
  | |   |-BinaryOperator 0x55e83d1224b0 <col:13, col:18> 'int' '>='
  | |   | |-ImplicitCastExpr 0x55e83d122498 <col:13> 'int' <IntegralCast>
  | |   | | `-ImplicitCastExpr 0x55e83d122480 <col:13> 'char' <LValueToRValue>
  | |   | |   `-DeclRefExpr 0x55e83d122440 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
  | |   | `-CharacterLiteral 0x55e83d122468 <col:18> 'int' 48
  | |   `-BinaryOperator 0x55e83d122548 <col:25, col:30> 'int' '<='
  | |     |-ImplicitCastExpr 0x55e83d122530 <col:25> 'int' <IntegralCast>
  | |     | `-ImplicitCastExpr 0x55e83d122518 <col:25> 'char' <LValueToRValue>
  | |     |   `-DeclRefExpr 0x55e83d1224d8 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
  | |     `-CharacterLiteral 0x55e83d122500 <col:30> 'int' 57
  | `-ParenExpr 0x55e83d122730 <col:38, col:59> 'int'
  |   `-BinaryOperator 0x55e83d122708 <col:39, col:56> 'int' '&&'
  |     |-BinaryOperator 0x55e83d122648 <col:39, col:44> 'int' '>='
  |     | |-ImplicitCastExpr 0x55e83d122630 <col:39> 'int' <IntegralCast>
  |     | | `-ImplicitCastExpr 0x55e83d122618 <col:39> 'char' <LValueToRValue>
  |     | |   `-DeclRefExpr 0x55e83d1225d8 <col:39> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
  |     | `-CharacterLiteral 0x55e83d122600 <col:44> 'int' 97
  |     `-BinaryOperator 0x55e83d1226e0 <col:51, col:56> 'int' '<='
  |       |-ImplicitCastExpr 0x55e83d1226c8 <col:51> 'int' <IntegralCast>
  |       | `-ImplicitCastExpr 0x55e83d1226b0 <col:51> 'char' <LValueToRValue>
  |       |   `-DeclRefExpr 0x55e83d122670 <col:51> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
  |       `-CharacterLiteral 0x55e83d122698 <col:56> 'int' 102
  `-ParenExpr 0x55e83d1228d0 <line:896:12, col:33> 'int'
    `-BinaryOperator 0x55e83d1228a8 <col:13, col:30> 'int' '&&'
      |-BinaryOperator 0x55e83d1227e8 <col:13, col:18> 'int' '>='
      | |-ImplicitCastExpr 0x55e83d1227d0 <col:13> 'int' <IntegralCast>
      | | `-ImplicitCastExpr 0x55e83d1227b8 <col:13> 'char' <LValueToRValue>
      | |   `-DeclRefExpr 0x55e83d122778 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
      | `-CharacterLiteral 0x55e83d1227a0 <col:18> 'int' 65
      `-BinaryOperator 0x55e83d122880 <col:25, col:30> 'int' '<='
        |-ImplicitCastExpr 0x55e83d122868 <col:25> 'int' <IntegralCast>
        | `-ImplicitCastExpr 0x55e83d122850 <col:25> 'char' <LValueToRValue>
        |   `-DeclRefExpr 0x55e83d122810 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
        `-CharacterLiteral 0x55e83d122838 <col:30> 'int' 70
return [B1.1];
   Preds (4): B2 B3 B4 B6
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d122810 <sds.c:896:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
c
   2: ImplicitCastExpr 0x55e83d122850 <sds.c:896:25> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d122810 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B2.1] (ImplicitCastExpr, LValueToRValue, char)
   3: ImplicitCastExpr 0x55e83d122868 <sds.c:896:25> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d122850 <col:25> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d122810 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B2.2] (ImplicitCastExpr, IntegralCast, int)
   4: CharacterLiteral 0x55e83d122838 <sds.c:896:30> 'int' 70
'F'
   5: BinaryOperator 0x55e83d122880 <sds.c:896:25, col:30> 'int' '<='
|-ImplicitCastExpr 0x55e83d122868 <col:25> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d122850 <col:25> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d122810 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
`-CharacterLiteral 0x55e83d122838 <col:30> 'int' 70
[B2.3] <= [B2.4]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55e83d122778 <sds.c:896:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
c
   2: ImplicitCastExpr 0x55e83d1227b8 <sds.c:896:13> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d122778 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B3.1] (ImplicitCastExpr, LValueToRValue, char)
   3: ImplicitCastExpr 0x55e83d1227d0 <sds.c:896:13> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1227b8 <col:13> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d122778 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B3.2] (ImplicitCastExpr, IntegralCast, int)
   4: CharacterLiteral 0x55e83d1227a0 <sds.c:896:18> 'int' 65
'A'
   5: BinaryOperator 0x55e83d1227e8 <sds.c:896:13, col:18> 'int' '>='
|-ImplicitCastExpr 0x55e83d1227d0 <col:13> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d1227b8 <col:13> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d122778 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
`-CharacterLiteral 0x55e83d1227a0 <col:18> 'int' 65
[B3.3] >= [B3.4]
   T: [B3.5] && ...
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55e83d122670 <sds.c:895:51> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
c
   2: ImplicitCastExpr 0x55e83d1226b0 <sds.c:895:51> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d122670 <col:51> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B4.1] (ImplicitCastExpr, LValueToRValue, char)
   3: ImplicitCastExpr 0x55e83d1226c8 <sds.c:895:51> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1226b0 <col:51> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d122670 <col:51> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B4.2] (ImplicitCastExpr, IntegralCast, int)
   4: CharacterLiteral 0x55e83d122698 <sds.c:895:56> 'int' 102
'f'
   5: BinaryOperator 0x55e83d1226e0 <sds.c:895:51, col:56> 'int' '<='
|-ImplicitCastExpr 0x55e83d1226c8 <col:51> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d1226b0 <col:51> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d122670 <col:51> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
`-CharacterLiteral 0x55e83d122698 <col:56> 'int' 102
[B4.3] <= [B4.4]
   T: ([B7.5] && [B6.5]) || ([B5.5] && [B4.5]) || ...
   Preds (1): B5
   Succs (2): B1 B3

 [B5]
   1: DeclRefExpr 0x55e83d1225d8 <sds.c:895:39> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
c
   2: ImplicitCastExpr 0x55e83d122618 <sds.c:895:39> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d1225d8 <col:39> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B5.1] (ImplicitCastExpr, LValueToRValue, char)
   3: ImplicitCastExpr 0x55e83d122630 <sds.c:895:39> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d122618 <col:39> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1225d8 <col:39> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B5.2] (ImplicitCastExpr, IntegralCast, int)
   4: CharacterLiteral 0x55e83d122600 <sds.c:895:44> 'int' 97
'a'
   5: BinaryOperator 0x55e83d122648 <sds.c:895:39, col:44> 'int' '>='
|-ImplicitCastExpr 0x55e83d122630 <col:39> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d122618 <col:39> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1225d8 <col:39> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
`-CharacterLiteral 0x55e83d122600 <col:44> 'int' 97
[B5.3] >= [B5.4]
   T: [B5.5] && ...
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x55e83d1224d8 <sds.c:895:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
c
   2: ImplicitCastExpr 0x55e83d122518 <sds.c:895:25> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d1224d8 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B6.1] (ImplicitCastExpr, LValueToRValue, char)
   3: ImplicitCastExpr 0x55e83d122530 <sds.c:895:25> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d122518 <col:25> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1224d8 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B6.2] (ImplicitCastExpr, IntegralCast, int)
   4: CharacterLiteral 0x55e83d122500 <sds.c:895:30> 'int' 57
'9'
   5: BinaryOperator 0x55e83d122548 <sds.c:895:25, col:30> 'int' '<='
|-ImplicitCastExpr 0x55e83d122530 <col:25> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d122518 <col:25> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1224d8 <col:25> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
`-CharacterLiteral 0x55e83d122500 <col:30> 'int' 57
[B6.3] <= [B6.4]
   T: ([B7.5] && [B6.5]) || ...
   Preds (1): B7
   Succs (2): B1 B5

 [B7]
   1: DeclRefExpr 0x55e83d122440 <sds.c:895:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
c
   2: ImplicitCastExpr 0x55e83d122480 <sds.c:895:13> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d122440 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B7.1] (ImplicitCastExpr, LValueToRValue, char)
   3: ImplicitCastExpr 0x55e83d122498 <sds.c:895:13> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d122480 <col:13> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d122440 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
[B7.2] (ImplicitCastExpr, IntegralCast, int)
   4: CharacterLiteral 0x55e83d122468 <sds.c:895:18> 'int' 48
'0'
   5: BinaryOperator 0x55e83d1224b0 <sds.c:895:13, col:18> 'int' '>='
|-ImplicitCastExpr 0x55e83d122498 <col:13> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d122480 <col:13> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d122440 <col:13> 'char' lvalue ParmVar 0x55e83d122308 'c' 'char'
`-CharacterLiteral 0x55e83d122468 <col:18> 'int' 48
[B7.3] >= [B7.4]
   T: [B7.5] && ...
   Preds (1): B8
   Succs (2): B6 B5

 [B0 (EXIT)]
   Preds (1): B1
