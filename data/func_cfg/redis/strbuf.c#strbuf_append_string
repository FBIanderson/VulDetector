void strbuf_append_string(strbuf_t *s, const char *str)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x55c95beee670 <strbuf.c:188:25> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
i
   2: UnaryOperator 0x55c95beee698 <strbuf.c:188:25, col:26> 'int' postfix '++'
`-DeclRefExpr 0x55c95beee670 <col:25> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B1.1]++
   Preds (1): B2
   Succs (1): B5

 [B2]
   1: DeclRefExpr 0x55c95beeeb98 <strbuf.c:194:29> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
str
   2: ImplicitCastExpr 0x55c95beeebe8 <strbuf.c:194:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55c95beeeb98 <col:29> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
[B2.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x55c95beeebc0 <strbuf.c:194:33> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
i
   4: ImplicitCastExpr 0x55c95beeec00 <strbuf.c:194:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beeebc0 <col:33> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B2.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x55c95beeec18 <strbuf.c:194:29, col:34> 'const char' lvalue
|-ImplicitCastExpr 0x55c95beeebe8 <col:29> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55c95beeeb98 <col:29> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
`-ImplicitCastExpr 0x55c95beeec00 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c95beeebc0 <col:33> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B2.2][[B2.4]]
   6: ImplicitCastExpr 0x55c95beeec40 <strbuf.c:194:29, col:34> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55c95beeec18 <col:29, col:34> 'const char' lvalue
  |-ImplicitCastExpr 0x55c95beeebe8 <col:29> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55c95beeeb98 <col:29> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
  `-ImplicitCastExpr 0x55c95beeec00 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55c95beeebc0 <col:33> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B2.5] (ImplicitCastExpr, LValueToRValue, char)
   7: DeclRefExpr 0x55c95beeea50 <strbuf.c:194:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
s
   8: ImplicitCastExpr 0x55c95beeea78 <strbuf.c:194:9> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beeea50 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.7] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   9: MemberExpr 0x55c95beeea90 <strbuf.c:194:9, col:12> 'char *' lvalue ->buf 0x55c95bee0a78
`-ImplicitCastExpr 0x55c95beeea78 <col:9> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beeea50 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.8]->buf
  10: ImplicitCastExpr 0x55c95beeeb40 <strbuf.c:194:9, col:12> 'char *' <LValueToRValue>
`-MemberExpr 0x55c95beeea90 <col:9, col:12> 'char *' lvalue ->buf 0x55c95bee0a78
  `-ImplicitCastExpr 0x55c95beeea78 <col:9> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beeea50 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: DeclRefExpr 0x55c95beeeac8 <strbuf.c:194:16> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
s
  12: ImplicitCastExpr 0x55c95beeeaf0 <strbuf.c:194:16> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beeeac8 <col:16> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.11] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  13: MemberExpr 0x55c95beeeb08 <strbuf.c:194:16, col:19> 'int' lvalue ->length 0x55c95bee0b38
`-ImplicitCastExpr 0x55c95beeeaf0 <col:16> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beeeac8 <col:16> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.12]->length
  14: ImplicitCastExpr 0x55c95beeeb58 <strbuf.c:194:16, col:19> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beeeb08 <col:16, col:19> 'int' lvalue ->length 0x55c95bee0b38
  `-ImplicitCastExpr 0x55c95beeeaf0 <col:16> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beeeac8 <col:16> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.13] (ImplicitCastExpr, LValueToRValue, int)
  15: ArraySubscriptExpr 0x55c95beeeb70 <strbuf.c:194:9, col:25> 'char' lvalue
|-ImplicitCastExpr 0x55c95beeeb40 <col:9, col:12> 'char *' <LValueToRValue>
| `-MemberExpr 0x55c95beeea90 <col:9, col:12> 'char *' lvalue ->buf 0x55c95bee0a78
|   `-ImplicitCastExpr 0x55c95beeea78 <col:9> 'strbuf_t *' <LValueToRValue>
|     `-DeclRefExpr 0x55c95beeea50 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
`-ImplicitCastExpr 0x55c95beeeb58 <col:16, col:19> 'int' <LValueToRValue>
  `-MemberExpr 0x55c95beeeb08 <col:16, col:19> 'int' lvalue ->length 0x55c95bee0b38
    `-ImplicitCastExpr 0x55c95beeeaf0 <col:16> 'strbuf_t *' <LValueToRValue>
      `-DeclRefExpr 0x55c95beeeac8 <col:16> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.10][[B2.14]]
  16: BinaryOperator 0x55c95beeec58 <strbuf.c:194:9, col:34> 'char' '='
|-ArraySubscriptExpr 0x55c95beeeb70 <col:9, col:25> 'char' lvalue
| |-ImplicitCastExpr 0x55c95beeeb40 <col:9, col:12> 'char *' <LValueToRValue>
| | `-MemberExpr 0x55c95beeea90 <col:9, col:12> 'char *' lvalue ->buf 0x55c95bee0a78
| |   `-ImplicitCastExpr 0x55c95beeea78 <col:9> 'strbuf_t *' <LValueToRValue>
| |     `-DeclRefExpr 0x55c95beeea50 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
| `-ImplicitCastExpr 0x55c95beeeb58 <col:16, col:19> 'int' <LValueToRValue>
|   `-MemberExpr 0x55c95beeeb08 <col:16, col:19> 'int' lvalue ->length 0x55c95bee0b38
|     `-ImplicitCastExpr 0x55c95beeeaf0 <col:16> 'strbuf_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55c95beeeac8 <col:16> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
`-ImplicitCastExpr 0x55c95beeec40 <col:29, col:34> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55c95beeec18 <col:29, col:34> 'const char' lvalue
    |-ImplicitCastExpr 0x55c95beeebe8 <col:29> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55c95beeeb98 <col:29> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
    `-ImplicitCastExpr 0x55c95beeec00 <col:33> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55c95beeebc0 <col:33> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B2.15] = [B2.6]
  17: DeclRefExpr 0x55c95beeec80 <strbuf.c:195:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
s
  18: ImplicitCastExpr 0x55c95beeeca8 <strbuf.c:195:9> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beeec80 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.17] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  19: MemberExpr 0x55c95beeecc0 <strbuf.c:195:9, col:12> 'int' lvalue ->length 0x55c95bee0b38
`-ImplicitCastExpr 0x55c95beeeca8 <col:9> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beeec80 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.18]->length
  20: UnaryOperator 0x55c95beeecf8 <strbuf.c:195:9, col:18> 'int' postfix '++'
`-MemberExpr 0x55c95beeecc0 <col:9, col:12> 'int' lvalue ->length 0x55c95bee0b38
  `-ImplicitCastExpr 0x55c95beeeca8 <col:9> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beeec80 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B2.19]++
  21: DeclRefExpr 0x55c95beeed18 <strbuf.c:196:9> 'int' lvalue Var 0x55c95beee338 'space' 'int'
space
  22: UnaryOperator 0x55c95beeed40 <strbuf.c:196:9, col:14> 'int' postfix '--'
`-DeclRefExpr 0x55c95beeed18 <col:9> 'int' lvalue Var 0x55c95beee338 'space' 'int'
[B2.21]--
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55c95beee740 <strbuf.c:190:13> 'void (strbuf_t *, int)' Function 0x55c95beed428 'strbuf_resize' 'void (strbuf_t *, int)'
strbuf_resize
   2: ImplicitCastExpr 0x55c95beee890 <strbuf.c:190:13> 'void (*)(strbuf_t *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c95beee740 <col:13> 'void (strbuf_t *, int)' Function 0x55c95beed428 'strbuf_resize' 'void (strbuf_t *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, int))
   3: DeclRefExpr 0x55c95beee790 <strbuf.c:190:27> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
s
   4: ImplicitCastExpr 0x55c95beee8e0 <strbuf.c:190:27> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beee790 <col:27> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B3.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: DeclRefExpr 0x55c95beee7b8 <strbuf.c:190:30> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
s
   6: ImplicitCastExpr 0x55c95beee7e0 <strbuf.c:190:30> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beee7b8 <col:30> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B3.5] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   7: MemberExpr 0x55c95beee7f8 <strbuf.c:190:30, col:33> 'int' lvalue ->length 0x55c95bee0b38
`-ImplicitCastExpr 0x55c95beee7e0 <col:30> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beee7b8 <col:30> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B3.6]->length
   8: ImplicitCastExpr 0x55c95beee850 <strbuf.c:190:30, col:33> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beee7f8 <col:30, col:33> 'int' lvalue ->length 0x55c95bee0b38
  `-ImplicitCastExpr 0x55c95beee7e0 <col:30> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beee7b8 <col:30> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B3.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55c95beee830 <strbuf.c:190:42> 'int' 1
1
  10: BinaryOperator 0x55c95beee868 <strbuf.c:190:30, col:42> 'int' '+'
|-ImplicitCastExpr 0x55c95beee850 <col:30, col:33> 'int' <LValueToRValue>
| `-MemberExpr 0x55c95beee7f8 <col:30, col:33> 'int' lvalue ->length 0x55c95bee0b38
|   `-ImplicitCastExpr 0x55c95beee7e0 <col:30> 'strbuf_t *' <LValueToRValue>
|     `-DeclRefExpr 0x55c95beee7b8 <col:30> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
`-IntegerLiteral 0x55c95beee830 <col:42> 'int' 1
[B3.8] + [B3.9]
  11: CallExpr 0x55c95beee8a8 <strbuf.c:190:13, col:43> 'void'
|-ImplicitCastExpr 0x55c95beee890 <col:13> 'void (*)(strbuf_t *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c95beee740 <col:13> 'void (strbuf_t *, int)' Function 0x55c95beed428 'strbuf_resize' 'void (strbuf_t *, int)'
|-ImplicitCastExpr 0x55c95beee8e0 <col:27> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x55c95beee790 <col:27> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
`-BinaryOperator 0x55c95beee868 <col:30, col:42> 'int' '+'
  |-ImplicitCastExpr 0x55c95beee850 <col:30, col:33> 'int' <LValueToRValue>
  | `-MemberExpr 0x55c95beee7f8 <col:30, col:33> 'int' lvalue ->length 0x55c95bee0b38
  |   `-ImplicitCastExpr 0x55c95beee7e0 <col:30> 'strbuf_t *' <LValueToRValue>
  |     `-DeclRefExpr 0x55c95beee7b8 <col:30> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
  `-IntegerLiteral 0x55c95beee830 <col:42> 'int' 1
[B3.2]([B3.4], [B3.10])
  12: DeclRefExpr 0x55c95beee920 <strbuf.c:191:21> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
strbuf_empty_length
  13: ImplicitCastExpr 0x55c95beee970 <strbuf.c:191:21> 'int (*)(strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c95beee920 <col:21> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
[B3.12] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(strbuf_t *))
  14: DeclRefExpr 0x55c95beee948 <strbuf.c:191:41> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
s
  15: ImplicitCastExpr 0x55c95beee9b8 <strbuf.c:191:41> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beee948 <col:41> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B3.14] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  16: CallExpr 0x55c95beee988 <strbuf.c:191:21, col:42> 'int'
|-ImplicitCastExpr 0x55c95beee970 <col:21> 'int (*)(strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c95beee920 <col:21> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
`-ImplicitCastExpr 0x55c95beee9b8 <col:41> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beee948 <col:41> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B3.13]([B3.15])
  17: DeclRefExpr 0x55c95beee8f8 <strbuf.c:191:13> 'int' lvalue Var 0x55c95beee338 'space' 'int'
space
  18: BinaryOperator 0x55c95beee9d0 <strbuf.c:191:13, col:42> 'int' '='
|-DeclRefExpr 0x55c95beee8f8 <col:13> 'int' lvalue Var 0x55c95beee338 'space' 'int'
`-CallExpr 0x55c95beee988 <col:21, col:42> 'int'
  |-ImplicitCastExpr 0x55c95beee970 <col:21> 'int (*)(strbuf_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55c95beee920 <col:21> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
  `-ImplicitCastExpr 0x55c95beee9b8 <col:41> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beee948 <col:41> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B3.17] = [B3.16]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55c95beee6b8 <strbuf.c:189:13> 'int' lvalue Var 0x55c95beee338 'space' 'int'
space
   2: ImplicitCastExpr 0x55c95beee700 <strbuf.c:189:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beee6b8 <col:13> 'int' lvalue Var 0x55c95beee338 'space' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55c95beee6e0 <strbuf.c:189:21> 'int' 1
1
   4: BinaryOperator 0x55c95beee718 <strbuf.c:189:13, col:21> 'int' '<'
|-ImplicitCastExpr 0x55c95beee700 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55c95beee6b8 <col:13> 'int' lvalue Var 0x55c95beee338 'space' 'int'
`-IntegerLiteral 0x55c95beee6e0 <col:21> 'int' 1
[B4.2] < [B4.3]
   T: if [B4.4]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55c95beee5b0 <strbuf.c:188:17> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
str
   2: ImplicitCastExpr 0x55c95beee600 <strbuf.c:188:17> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55c95beee5b0 <col:17> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
[B5.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x55c95beee5d8 <strbuf.c:188:21> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
i
   4: ImplicitCastExpr 0x55c95beee618 <strbuf.c:188:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beee5d8 <col:21> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x55c95beee630 <strbuf.c:188:17, col:22> 'const char' lvalue
|-ImplicitCastExpr 0x55c95beee600 <col:17> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55c95beee5b0 <col:17> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
`-ImplicitCastExpr 0x55c95beee618 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c95beee5d8 <col:21> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B5.2][[B5.4]]
   6: ImplicitCastExpr 0x55c95beee658 <strbuf.c:188:17, col:22> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55c95beee630 <col:17, col:22> 'const char' lvalue
  |-ImplicitCastExpr 0x55c95beee600 <col:17> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55c95beee5b0 <col:17> 'const char *' lvalue ParmVar 0x55c95beee1e0 'str' 'const char *'
  `-ImplicitCastExpr 0x55c95beee618 <col:21> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55c95beee5d8 <col:21> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
[B5.5] (ImplicitCastExpr, LValueToRValue, char)
   T: for (...; [B5.6]; ...)
   Preds (2): B1 B6
   Succs (2): B4 B0

 [B6]
   1: DeclStmt 0x55c95bef5040 <strbuf.c:184:9>col:9
`-VarDecl 0x55c95beee338 <col:5, col:9> col:9 used space 'int'
int space;
   2: DeclStmt 0x55c95bef5028 <strbuf.c:184:16>col:16
`-VarDecl 0x55c95beee3b0 <col:5, col:16> col:16 used i 'int'
int i;
   3: DeclRefExpr 0x55c95beee468 <strbuf.c:186:13> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
strbuf_empty_length
   4: ImplicitCastExpr 0x55c95beee4b8 <strbuf.c:186:13> 'int (*)(strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c95beee468 <col:13> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
[B6.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(strbuf_t *))
   5: DeclRefExpr 0x55c95beee490 <strbuf.c:186:33> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
s
   6: ImplicitCastExpr 0x55c95beee500 <strbuf.c:186:33> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beee490 <col:33> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B6.5] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   7: CallExpr 0x55c95beee4d0 <strbuf.c:186:13, col:34> 'int'
|-ImplicitCastExpr 0x55c95beee4b8 <col:13> 'int (*)(strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c95beee468 <col:13> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
`-ImplicitCastExpr 0x55c95beee500 <col:33> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beee490 <col:33> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B6.4]([B6.6])
   8: DeclRefExpr 0x55c95beee440 <strbuf.c:186:5> 'int' lvalue Var 0x55c95beee338 'space' 'int'
space
   9: BinaryOperator 0x55c95beee518 <strbuf.c:186:5, col:34> 'int' '='
|-DeclRefExpr 0x55c95beee440 <col:5> 'int' lvalue Var 0x55c95beee338 'space' 'int'
`-CallExpr 0x55c95beee4d0 <col:13, col:34> 'int'
  |-ImplicitCastExpr 0x55c95beee4b8 <col:13> 'int (*)(strbuf_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55c95beee468 <col:13> 'int (strbuf_t *)' Function 0x55c95bee59f8 'strbuf_empty_length' 'int (strbuf_t *)'
  `-ImplicitCastExpr 0x55c95beee500 <col:33> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beee490 <col:33> 'strbuf_t *' lvalue ParmVar 0x55c95beee168 's' 'strbuf_t *'
[B6.8] = [B6.7]
  10: IntegerLiteral 0x55c95beee568 <strbuf.c:188:14> 'int' 0
0
  11: DeclRefExpr 0x55c95beee540 <strbuf.c:188:10> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
i
  12: BinaryOperator 0x55c95beee588 <strbuf.c:188:10, col:14> 'int' '='
|-DeclRefExpr 0x55c95beee540 <col:10> 'int' lvalue Var 0x55c95beee3b0 'i' 'int'
`-IntegerLiteral 0x55c95beee568 <col:14> 'int' 0
[B6.11] = [B6.10]
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (1): B5
