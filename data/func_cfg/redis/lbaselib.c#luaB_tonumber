static int luaB_tonumber(lua_State *L)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x562da2810ae0 <lbaselib.c:76:3> 'void (lua_State *)':'void (lua_State *)' Function 0x562da27efd38 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
   2: ImplicitCastExpr 0x562da2810b88 <lbaselib.c:76:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2810ae0 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x562da27efd38 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   3: DeclRefExpr 0x562da2810b08 <lbaselib.c:76:15> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2810bd0 <lbaselib.c:76:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2810b08 <col:15> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da2810ba0 <lbaselib.c:76:3, col:16> 'void'
|-ImplicitCastExpr 0x562da2810b88 <col:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2810ae0 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x562da27efd38 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x562da2810bd0 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da2810b08 <col:15> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B1.2]([B1.4])
   6: IntegerLiteral 0x562da2810be8 <lbaselib.c:77:10> 'int' 1
1
   7: ReturnStmt 0x562da2810c08 <lbaselib.c:77:3, col:10>
`-IntegerLiteral 0x562da2810be8 <col:10> 'int' 1
return [B1.6];
   Preds (3): B3 B7 B12
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x562da2810850 <lbaselib.c:71:9> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   2: ImplicitCastExpr 0x562da2810918 <lbaselib.c:71:9> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2810850 <col:9> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   3: DeclRefExpr 0x562da2810878 <lbaselib.c:71:24> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2810968 <lbaselib.c:71:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2810878 <col:24> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da28108a0 <lbaselib.c:71:39> 'unsigned long' lvalue Var 0x562da280fbb0 'n' 'unsigned long'
n
   6: ImplicitCastExpr 0x562da28108d8 <lbaselib.c:71:39> 'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x562da28108a0 <col:39> 'unsigned long' lvalue Var 0x562da280fbb0 'n' 'unsigned long'
[B2.5] (ImplicitCastExpr, LValueToRValue, unsigned long)
   7: CStyleCastExpr 0x562da28108f0 <lbaselib.c:71:27, col:39> 'lua_Number':'double' <IntegralToFloating>
`-ImplicitCastExpr 0x562da28108d8 <col:39> 'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x562da28108a0 <col:39> 'unsigned long' lvalue Var 0x562da280fbb0 'n' 'unsigned long'
(lua_Number)[B2.6] (CStyleCastExpr, IntegralToFloating, lua_Number)
   8: CallExpr 0x562da2810930 <lbaselib.c:71:9, col:40> 'void'
|-ImplicitCastExpr 0x562da2810918 <col:9> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2810850 <col:9> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x562da2810968 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2810878 <col:24> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
`-CStyleCastExpr 0x562da28108f0 <col:27, col:39> 'lua_Number':'double' <IntegralToFloating>
  `-ImplicitCastExpr 0x562da28108d8 <col:39> 'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x562da28108a0 <col:39> 'unsigned long' lvalue Var 0x562da280fbb0 'n' 'unsigned long'
[B2.2]([B2.4], [B2.7])
   9: IntegerLiteral 0x562da2810980 <lbaselib.c:72:16> 'int' 1
1
  10: ReturnStmt 0x562da28109a0 <lbaselib.c:72:9, col:16>
`-IntegerLiteral 0x562da2810980 <col:16> 'int' 1
return [B2.9];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x562da2810780 <lbaselib.c:70:12> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
s2
   2: ImplicitCastExpr 0x562da28107a8 <lbaselib.c:70:12> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562da2810780 <col:12> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B3.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: UnaryOperator 0x562da28107c0 <lbaselib.c:70:11, col:12> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x562da28107a8 <col:12> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x562da2810780 <col:12> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
*[B3.2]
   4: ImplicitCastExpr 0x562da28107f8 <lbaselib.c:70:11, col:12> 'char' <LValueToRValue>
`-UnaryOperator 0x562da28107c0 <col:11, col:12> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x562da28107a8 <col:12> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x562da2810780 <col:12> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x562da2810810 <lbaselib.c:70:11, col:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x562da28107f8 <col:11, col:12> 'char' <LValueToRValue>
  `-UnaryOperator 0x562da28107c0 <col:11, col:12> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x562da28107a8 <col:12> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x562da2810780 <col:12> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B3.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x562da28107e0 <lbaselib.c:70:18> 'int' 0
'\x00'
   7: BinaryOperator 0x562da2810828 <lbaselib.c:70:11, col:18> 'int' '=='
|-ImplicitCastExpr 0x562da2810810 <col:11, col:12> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x562da28107f8 <col:11, col:12> 'char' <LValueToRValue>
|   `-UnaryOperator 0x562da28107c0 <col:11, col:12> 'char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x562da28107a8 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x562da2810780 <col:12> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
`-CharacterLiteral 0x562da28107e0 <col:18> 'int' 0
[B3.5] == [B3.6]
   T: if [B3.7]
   Preds (1): B6
   Succs (2): B2 B1

 [B4]
   Preds (1): B5
   Succs (1): B6

 [B5]
   1: DeclRefExpr 0x562da2810718 <lbaselib.c:69:45> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
s2
   2: UnaryOperator 0x562da2810740 <lbaselib.c:69:45, col:47> 'char *' postfix '++'
`-DeclRefExpr 0x562da2810718 <col:45> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B5.1]++
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x562da2810328 </usr/include/ctype.h:89:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
__ctype_b_loc
   2: ImplicitCastExpr 0x562da2810378 </usr/include/ctype.h:89:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned short **(*)(void))
   3: CallExpr 0x562da2810390 </usr/include/ctype.h:89:6, col:21> 'const unsigned short **'
`-ImplicitCastExpr 0x562da2810378 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
[B6.2]()
   4: UnaryOperator 0x562da28103b8 </usr/include/ctype.h:89:5, col:21> 'const unsigned short *' lvalue prefix '*'
`-CallExpr 0x562da2810390 <col:6, col:21> 'const unsigned short **'
  `-ImplicitCastExpr 0x562da2810378 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
*[B6.3]
   5: ImplicitCastExpr 0x562da28105e0 </usr/include/ctype.h:89:4, col:22> 'const unsigned short *' <LValueToRValue>
`-ParenExpr 0x562da28103d8 <col:4, col:22> 'const unsigned short *' lvalue
  `-UnaryOperator 0x562da28103b8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    `-CallExpr 0x562da2810390 <col:6, col:21> 'const unsigned short **'
      `-ImplicitCastExpr 0x562da2810378 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
([B6.4]) (ImplicitCastExpr, LValueToRValue, const unsigned short *)
   6: DeclRefExpr 0x562da28103f8 <lbaselib.c:69:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
s2
   7: ImplicitCastExpr 0x562da2810420 <lbaselib.c:69:39> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B6.6] (ImplicitCastExpr, LValueToRValue, char *)
   8: UnaryOperator 0x562da2810438 <lbaselib.c:69:38, col:39> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
*[B6.7]
   9: ImplicitCastExpr 0x562da28104c0 <lbaselib.c:69:37, col:41> 'char' <LValueToRValue>
`-ParenExpr 0x562da28104a0 <col:37, col:41> 'char' lvalue
  `-UnaryOperator 0x562da2810438 <col:38, col:39> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
([B6.8]) (ImplicitCastExpr, LValueToRValue, char)
  10: CStyleCastExpr 0x562da28104d8 <lbaselib.c:69:22, col:41> 'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x562da28104c0 <col:37, col:41> 'char' <LValueToRValue>
  `-ParenExpr 0x562da28104a0 <col:37, col:41> 'char' lvalue
    `-UnaryOperator 0x562da2810438 <col:38, col:39> 'char' lvalue prefix '*'
      `-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
(unsigned char)[B6.9] (CStyleCastExpr, IntegralCast, unsigned char)
  11: CStyleCastExpr 0x562da28105b8 </usr/include/ctype.h:89:24, col:32> 'int' <IntegralCast>
`-ParenExpr 0x562da2810598 <col:30, col:32> 'unsigned char'
  `-ParenExpr 0x562da2810500 <line:197:31, col:33> 'unsigned char'
    `-CStyleCastExpr 0x562da28104d8 <lbaselib.c:69:22, col:41> 'unsigned char' <IntegralCast>
      `-ImplicitCastExpr 0x562da28104c0 <col:37, col:41> 'char' <LValueToRValue>
        `-ParenExpr 0x562da28104a0 <col:37, col:41> 'char' lvalue
          `-UnaryOperator 0x562da2810438 <col:38, col:39> 'char' lvalue prefix '*'
            `-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
              `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
(int)(([B6.10])) (CStyleCastExpr, IntegralCast, int)
  12: ArraySubscriptExpr 0x562da28105f8 </usr/include/ctype.h:89:4, col:33> 'const unsigned short' lvalue
|-ImplicitCastExpr 0x562da28105e0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
| `-ParenExpr 0x562da28103d8 <col:4, col:22> 'const unsigned short *' lvalue
|   `-UnaryOperator 0x562da28103b8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     `-CallExpr 0x562da2810390 <col:6, col:21> 'const unsigned short **'
|       `-ImplicitCastExpr 0x562da2810378 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
`-CStyleCastExpr 0x562da28105b8 <col:24, col:32> 'int' <IntegralCast>
  `-ParenExpr 0x562da2810598 <col:30, col:32> 'unsigned char'
    `-ParenExpr 0x562da2810500 <line:197:31, col:33> 'unsigned char'
      `-CStyleCastExpr 0x562da28104d8 <lbaselib.c:69:22, col:41> 'unsigned char' <IntegralCast>
        `-ImplicitCastExpr 0x562da28104c0 <col:37, col:41> 'char' <LValueToRValue>
          `-ParenExpr 0x562da28104a0 <col:37, col:41> 'char' lvalue
            `-UnaryOperator 0x562da2810438 <col:38, col:39> 'char' lvalue prefix '*'
              `-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
                `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B6.5][[B6.11]]
  13: ImplicitCastExpr 0x562da2810688 </usr/include/ctype.h:89:4, col:33> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x562da28105f8 <col:4, col:33> 'const unsigned short' lvalue
  |-ImplicitCastExpr 0x562da28105e0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  | `-ParenExpr 0x562da28103d8 <col:4, col:22> 'const unsigned short *' lvalue
  |   `-UnaryOperator 0x562da28103b8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     `-CallExpr 0x562da2810390 <col:6, col:21> 'const unsigned short **'
  |       `-ImplicitCastExpr 0x562da2810378 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
  `-CStyleCastExpr 0x562da28105b8 <col:24, col:32> 'int' <IntegralCast>
    `-ParenExpr 0x562da2810598 <col:30, col:32> 'unsigned char'
      `-ParenExpr 0x562da2810500 <line:197:31, col:33> 'unsigned char'
        `-CStyleCastExpr 0x562da28104d8 <lbaselib.c:69:22, col:41> 'unsigned char' <IntegralCast>
          `-ImplicitCastExpr 0x562da28104c0 <col:37, col:41> 'char' <LValueToRValue>
            `-ParenExpr 0x562da28104a0 <col:37, col:41> 'char' lvalue
              `-UnaryOperator 0x562da2810438 <col:38, col:39> 'char' lvalue prefix '*'
                `-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
                  `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B6.12] (ImplicitCastExpr, LValueToRValue, unsigned short)
  14: ImplicitCastExpr 0x562da28106a0 </usr/include/ctype.h:89:4, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x562da2810688 <col:4, col:33> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x562da28105f8 <col:4, col:33> 'const unsigned short' lvalue
    |-ImplicitCastExpr 0x562da28105e0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    | `-ParenExpr 0x562da28103d8 <col:4, col:22> 'const unsigned short *' lvalue
    |   `-UnaryOperator 0x562da28103b8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     `-CallExpr 0x562da2810390 <col:6, col:21> 'const unsigned short **'
    |       `-ImplicitCastExpr 0x562da2810378 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
    `-CStyleCastExpr 0x562da28105b8 <col:24, col:32> 'int' <IntegralCast>
      `-ParenExpr 0x562da2810598 <col:30, col:32> 'unsigned char'
        `-ParenExpr 0x562da2810500 <line:197:31, col:33> 'unsigned char'
          `-CStyleCastExpr 0x562da28104d8 <lbaselib.c:69:22, col:41> 'unsigned char' <IntegralCast>
            `-ImplicitCastExpr 0x562da28104c0 <col:37, col:41> 'char' <LValueToRValue>
              `-ParenExpr 0x562da28104a0 <col:37, col:41> 'char' lvalue
                `-UnaryOperator 0x562da2810438 <col:38, col:39> 'char' lvalue prefix '*'
                  `-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
                    `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B6.13] (ImplicitCastExpr, IntegralCast, int)
  15: DeclRefExpr 0x562da2810620 </usr/include/ctype.h:197:36> 'int' EnumConstant 0x562da2714900 '_ISspace' 'int'
_ISspace
  16: CStyleCastExpr 0x562da2810660 </usr/include/ctype.h:89:37, line:197:36> 'unsigned short' <IntegralCast>
`-DeclRefExpr 0x562da2810620 <col:36> 'int' EnumConstant 0x562da2714900 '_ISspace' 'int'
(unsigned short)[B6.15] (CStyleCastExpr, IntegralCast, unsigned short)
  17: ImplicitCastExpr 0x562da28106b8 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
`-CStyleCastExpr 0x562da2810660 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
  `-DeclRefExpr 0x562da2810620 <col:36> 'int' EnumConstant 0x562da2714900 '_ISspace' 'int'
[B6.16] (ImplicitCastExpr, IntegralCast, int)
  18: BinaryOperator 0x562da28106d0 </usr/include/ctype.h:89:4, line:197:36> 'int' '&'
|-ImplicitCastExpr 0x562da28106a0 <line:89:4, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x562da2810688 <col:4, col:33> 'unsigned short' <LValueToRValue>
|   `-ArraySubscriptExpr 0x562da28105f8 <col:4, col:33> 'const unsigned short' lvalue
|     |-ImplicitCastExpr 0x562da28105e0 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     | `-ParenExpr 0x562da28103d8 <col:4, col:22> 'const unsigned short *' lvalue
|     |   `-UnaryOperator 0x562da28103b8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     `-CallExpr 0x562da2810390 <col:6, col:21> 'const unsigned short **'
|     |       `-ImplicitCastExpr 0x562da2810378 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |         `-DeclRefExpr 0x562da2810328 <col:6> 'const unsigned short **(void)' Function 0x562da2715e60 '__ctype_b_loc' 'const unsigned short **(void)'
|     `-CStyleCastExpr 0x562da28105b8 <col:24, col:32> 'int' <IntegralCast>
|       `-ParenExpr 0x562da2810598 <col:30, col:32> 'unsigned char'
|         `-ParenExpr 0x562da2810500 <line:197:31, col:33> 'unsigned char'
|           `-CStyleCastExpr 0x562da28104d8 <lbaselib.c:69:22, col:41> 'unsigned char' <IntegralCast>
|             `-ImplicitCastExpr 0x562da28104c0 <col:37, col:41> 'char' <LValueToRValue>
|               `-ParenExpr 0x562da28104a0 <col:37, col:41> 'char' lvalue
|                 `-UnaryOperator 0x562da2810438 <col:38, col:39> 'char' lvalue prefix '*'
|                   `-ImplicitCastExpr 0x562da2810420 <col:39> 'char *' <LValueToRValue>
|                     `-DeclRefExpr 0x562da28103f8 <col:39> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
`-ImplicitCastExpr 0x562da28106b8 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
  `-CStyleCastExpr 0x562da2810660 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
    `-DeclRefExpr 0x562da2810620 <col:36> 'int' EnumConstant 0x562da2714900 '_ISspace' 'int'
[B6.14] & [B6.17]
   T: while ([B6.18])
   Preds (2): B4 B7
   Succs (2): B5 B3

 [B7]
   1: BinaryOperator 0x562da280ffa8 <./lauxlib.h:101:11, col:58> 'int' '||'
|-ParenExpr 0x562da280fd60 <col:11, col:16> 'int'
| `-BinaryOperator 0x562da280fd38 <lbaselib.c:66:22, col:43> 'int' '&&'
|   |-BinaryOperator 0x562da280fc88 <col:22, col:27> 'int' '<='
|   | |-IntegerLiteral 0x562da280fc28 <col:22> 'int' 2
|   | `-ImplicitCastExpr 0x562da280fc70 <col:27> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562da280fc48 <col:27> 'int' lvalue Var 0x562da280f090 'base' 'int'
|   `-BinaryOperator 0x562da280fd10 <col:35, col:43> 'int' '<='
|     |-ImplicitCastExpr 0x562da280fcf8 <col:35> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x562da280fcb0 <col:35> 'int' lvalue Var 0x562da280f090 'base' 'int'
|     `-IntegerLiteral 0x562da280fcd8 <col:43> 'int' 36
`-CallExpr 0x562da280ff20 <./lauxlib.h:101:21, col:58> 'int'
  |-ImplicitCastExpr 0x562da280ff08 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da280fd80 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x562da280ff60 <lbaselib.c:66:19> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da280fda8 <col:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
  |-ParenExpr 0x562da280fdf0 <./lauxlib.h:101:38, col:45> 'int'
  | `-IntegerLiteral 0x562da280fdd0 <lbaselib.c:66:47> 'int' 2
  `-ImplicitCastExpr 0x562da280ff90 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x562da280ff78 <col:48, col:57> 'char *' <ArrayToPointerDecay>
      `-ParenExpr 0x562da280fe88 <col:48, col:57> 'char [18]' lvalue
        `-StringLiteral 0x562da280fe48 <lbaselib.c:66:50> 'char [18]' lvalue "base out of range"
([B10.16] && [B9.4]) || [B8.9]
   2: CStyleCastExpr 0x562da2810030 <./lauxlib.h:101:4, col:59> 'void' <ToVoid>
`-ParenExpr 0x562da2810010 <col:10, col:59> 'int'
  `-BinaryOperator 0x562da280ffa8 <col:11, col:58> 'int' '||'
    |-ParenExpr 0x562da280fd60 <col:11, col:16> 'int'
    | `-BinaryOperator 0x562da280fd38 <lbaselib.c:66:22, col:43> 'int' '&&'
    |   |-BinaryOperator 0x562da280fc88 <col:22, col:27> 'int' '<='
    |   | |-IntegerLiteral 0x562da280fc28 <col:22> 'int' 2
    |   | `-ImplicitCastExpr 0x562da280fc70 <col:27> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562da280fc48 <col:27> 'int' lvalue Var 0x562da280f090 'base' 'int'
    |   `-BinaryOperator 0x562da280fd10 <col:35, col:43> 'int' '<='
    |     |-ImplicitCastExpr 0x562da280fcf8 <col:35> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562da280fcb0 <col:35> 'int' lvalue Var 0x562da280f090 'base' 'int'
    |     `-IntegerLiteral 0x562da280fcd8 <col:43> 'int' 36
    `-CallExpr 0x562da280ff20 <./lauxlib.h:101:21, col:58> 'int'
      |-ImplicitCastExpr 0x562da280ff08 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da280fd80 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
      |-ImplicitCastExpr 0x562da280ff60 <lbaselib.c:66:19> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x562da280fda8 <col:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
      |-ParenExpr 0x562da280fdf0 <./lauxlib.h:101:38, col:45> 'int'
      | `-IntegerLiteral 0x562da280fdd0 <lbaselib.c:66:47> 'int' 2
      `-ImplicitCastExpr 0x562da280ff90 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
        `-ImplicitCastExpr 0x562da280ff78 <col:48, col:57> 'char *' <ArrayToPointerDecay>
          `-ParenExpr 0x562da280fe88 <col:48, col:57> 'char [18]' lvalue
            `-StringLiteral 0x562da280fe48 <lbaselib.c:66:50> 'char [18]' lvalue "base out of range"
(void)([B7.1]) (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x562da28100a0 <lbaselib.c:67:9> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x562da276b378 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
strtoul
   4: ImplicitCastExpr 0x562da28101b8 <lbaselib.c:67:9> 'unsigned long (*)(const char *__restrict, char **__restrict, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da28100a0 <col:9> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x562da276b378 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
[B7.3] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *__restrict, char **__restrict, int))
   5: DeclRefExpr 0x562da28100c8 <lbaselib.c:67:17> 'const char *' lvalue Var 0x562da280f8d8 's1' 'const char *'
s1
   6: ImplicitCastExpr 0x562da2810210 <lbaselib.c:67:17> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x562da28100c8 <col:17> 'const char *' lvalue Var 0x562da280f8d8 's1' 'const char *'
[B7.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x562da28100f0 <lbaselib.c:67:22> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
s2
   8: UnaryOperator 0x562da2810118 <lbaselib.c:67:21, col:22> 'char **' prefix '&'
`-DeclRefExpr 0x562da28100f0 <col:22> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
&[B7.7]
   9: DeclRefExpr 0x562da2810138 <lbaselib.c:67:26> 'int' lvalue Var 0x562da280f090 'base' 'int'
base
  10: ImplicitCastExpr 0x562da2810228 <lbaselib.c:67:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2810138 <col:26> 'int' lvalue Var 0x562da280f090 'base' 'int'
[B7.9] (ImplicitCastExpr, LValueToRValue, int)
  11: CallExpr 0x562da28101d0 <lbaselib.c:67:9, col:30> 'unsigned long'
|-ImplicitCastExpr 0x562da28101b8 <col:9> 'unsigned long (*)(const char *__restrict, char **__restrict, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da28100a0 <col:9> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x562da276b378 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
|-ImplicitCastExpr 0x562da2810210 <col:17> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x562da28100c8 <col:17> 'const char *' lvalue Var 0x562da280f8d8 's1' 'const char *'
|-UnaryOperator 0x562da2810118 <col:21, col:22> 'char **' prefix '&'
| `-DeclRefExpr 0x562da28100f0 <col:22> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
`-ImplicitCastExpr 0x562da2810228 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2810138 <col:26> 'int' lvalue Var 0x562da280f090 'base' 'int'
[B7.4]([B7.6], [B7.8], [B7.10])
  12: DeclRefExpr 0x562da2810078 <lbaselib.c:67:5> 'unsigned long' lvalue Var 0x562da280fbb0 'n' 'unsigned long'
n
  13: BinaryOperator 0x562da2810240 <lbaselib.c:67:5, col:30> 'unsigned long' '='
|-DeclRefExpr 0x562da2810078 <col:5> 'unsigned long' lvalue Var 0x562da280fbb0 'n' 'unsigned long'
`-CallExpr 0x562da28101d0 <col:9, col:30> 'unsigned long'
  |-ImplicitCastExpr 0x562da28101b8 <col:9> 'unsigned long (*)(const char *__restrict, char **__restrict, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da28100a0 <col:9> 'unsigned long (const char *__restrict, char **__restrict, int)' Function 0x562da276b378 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int)'
  |-ImplicitCastExpr 0x562da2810210 <col:17> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x562da28100c8 <col:17> 'const char *' lvalue Var 0x562da280f8d8 's1' 'const char *'
  |-UnaryOperator 0x562da2810118 <col:21, col:22> 'char **' prefix '&'
  | `-DeclRefExpr 0x562da28100f0 <col:22> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
  `-ImplicitCastExpr 0x562da2810228 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da2810138 <col:26> 'int' lvalue Var 0x562da280f090 'base' 'int'
[B7.12] = [B7.11]
  14: DeclRefExpr 0x562da2810268 <lbaselib.c:68:9> 'const char *' lvalue Var 0x562da280f8d8 's1' 'const char *'
s1
  15: ImplicitCastExpr 0x562da28102b8 <lbaselib.c:68:9> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x562da2810268 <col:9> 'const char *' lvalue Var 0x562da280f8d8 's1' 'const char *'
[B7.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: DeclRefExpr 0x562da2810290 <lbaselib.c:68:15> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
s2
  17: ImplicitCastExpr 0x562da28102d0 <lbaselib.c:68:15> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562da2810290 <col:15> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B7.16] (ImplicitCastExpr, LValueToRValue, char *)
  18: ImplicitCastExpr 0x562da28102e8 <lbaselib.c:68:15> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da28102d0 <col:15> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x562da2810290 <col:15> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B7.17] (ImplicitCastExpr, BitCast, const char *)
  19: BinaryOperator 0x562da2810300 <lbaselib.c:68:9, col:15> 'int' '!='
|-ImplicitCastExpr 0x562da28102b8 <col:9> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x562da2810268 <col:9> 'const char *' lvalue Var 0x562da280f8d8 's1' 'const char *'
`-ImplicitCastExpr 0x562da28102e8 <col:15> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562da28102d0 <col:15> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x562da2810290 <col:15> 'char *' lvalue Var 0x562da280fb20 's2' 'char *'
[B7.15] != [B7.18]
   T: if [B7.19]
   Preds (2): B8 B9
   Succs (2): B6 B1

 [B8]
   1: DeclRefExpr 0x562da280fd80 <./lauxlib.h:101:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x562da280ff08 <./lauxlib.h:101:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da280fd80 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x562da280fda8 <lbaselib.c:66:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da280ff60 <lbaselib.c:66:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da280fda8 <col:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da280fdd0 <lbaselib.c:66:47> 'int' 2
2
   6: StringLiteral 0x562da280fe48 <lbaselib.c:66:50> 'char [18]' lvalue "base out of range"
"base out of range"
   7: ImplicitCastExpr 0x562da280ff78 <./lauxlib.h:101:48, col:57> 'char *' <ArrayToPointerDecay>
`-ParenExpr 0x562da280fe88 <col:48, col:57> 'char [18]' lvalue
  `-StringLiteral 0x562da280fe48 <lbaselib.c:66:50> 'char [18]' lvalue "base out of range"
([B8.6]) (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x562da280ff90 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da280ff78 <col:48, col:57> 'char *' <ArrayToPointerDecay>
  `-ParenExpr 0x562da280fe88 <col:48, col:57> 'char [18]' lvalue
    `-StringLiteral 0x562da280fe48 <lbaselib.c:66:50> 'char [18]' lvalue "base out of range"
[B8.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x562da280ff20 <./lauxlib.h:101:21, col:58> 'int'
|-ImplicitCastExpr 0x562da280ff08 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da280fd80 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x562da280ff60 <lbaselib.c:66:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da280fda8 <col:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
|-ParenExpr 0x562da280fdf0 <./lauxlib.h:101:38, col:45> 'int'
| `-IntegerLiteral 0x562da280fdd0 <lbaselib.c:66:47> 'int' 2
`-ImplicitCastExpr 0x562da280ff90 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562da280ff78 <col:48, col:57> 'char *' <ArrayToPointerDecay>
    `-ParenExpr 0x562da280fe88 <col:48, col:57> 'char [18]' lvalue
      `-StringLiteral 0x562da280fe48 <lbaselib.c:66:50> 'char [18]' lvalue "base out of range"
[B8.2]([B8.4], ([B8.5]), [B8.8])
   Preds (2): B9 B10
   Succs (1): B7

 [B9]
   1: DeclRefExpr 0x562da280fcb0 <lbaselib.c:66:35> 'int' lvalue Var 0x562da280f090 'base' 'int'
base
   2: ImplicitCastExpr 0x562da280fcf8 <lbaselib.c:66:35> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da280fcb0 <col:35> 'int' lvalue Var 0x562da280f090 'base' 'int'
[B9.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x562da280fcd8 <lbaselib.c:66:43> 'int' 36
36
   4: BinaryOperator 0x562da280fd10 <lbaselib.c:66:35, col:43> 'int' '<='
|-ImplicitCastExpr 0x562da280fcf8 <col:35> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da280fcb0 <col:35> 'int' lvalue Var 0x562da280f090 'base' 'int'
`-IntegerLiteral 0x562da280fcd8 <col:43> 'int' 36
[B9.2] <= [B9.3]
   T: ([B10.16] && [B9.4]) || ...
   Preds (1): B10
   Succs (2): B7 B8

 [B10]
   1: DeclRefExpr 0x562da280f938 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da28022c8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   2: ImplicitCastExpr 0x562da280fa48 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da280f938 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da28022c8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   3: DeclRefExpr 0x562da280f960 <lbaselib.c:63:39> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da280faa0 <lbaselib.c:63:39> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da280f960 <col:39> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da280f988 <lbaselib.c:63:42> 'int' 1
1
   6: IntegerLiteral 0x562da280f9c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x562da280fa00 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562da280f9c8 <col:24> 'int' 0
(void *)[B10.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x562da280fab8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x562da280fa28 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562da280fa00 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562da280f9c8 <col:24> 'int' 0
([B10.7]) (ImplicitCastExpr, NullToPointer, size_t *)
   9: CallExpr 0x562da280fa60 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x562da280fa48 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da280f938 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da28022c8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x562da280faa0 <lbaselib.c:63:39> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da280f960 <col:39> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
|-ParenExpr 0x562da280f9a8 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x562da280f988 <lbaselib.c:63:42> 'int' 1
`-ImplicitCastExpr 0x562da280fab8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x562da280fa28 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562da280fa00 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562da280f9c8 <col:24> 'int' 0
[B10.2]([B10.4], ([B10.5]), [B10.8])
  10: DeclStmt 0x562da280faf0 <lbaselib.c:63:5, col:44>col:17
`-VarDecl 0x562da280f8d8 <col:5, ./lauxlib.h:102:63> lbaselib.c:63:17 used s1 'const char *' cinit
  `-ParenExpr 0x562da280fad0 <./lauxlib.h:102:31, col:63> 'const char *'
    `-CallExpr 0x562da280fa60 <col:32, col:62> 'const char *'
      |-ImplicitCastExpr 0x562da280fa48 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da280f938 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x562da28022c8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
      |-ImplicitCastExpr 0x562da280faa0 <lbaselib.c:63:39> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x562da280f960 <col:39> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
      |-ParenExpr 0x562da280f9a8 <./lauxlib.h:102:53, col:55> 'int'
      | `-IntegerLiteral 0x562da280f988 <lbaselib.c:63:42> 'int' 1
      `-ImplicitCastExpr 0x562da280fab8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x562da280fa28 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x562da280fa00 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x562da280f9c8 <col:24> 'int' 0
const char *s1 = (luaL_checklstring(L, (1), ((void *)0)));
  11: DeclStmt 0x562da280fb80 <lbaselib.c:64:5, col:13>col:11
`-VarDecl 0x562da280fb20 <col:5, col:11> col:11 used s2 'char *'
char *s2;
  12: DeclStmt 0x562da280fc10 <lbaselib.c:65:5, col:20>col:19
`-VarDecl 0x562da280fbb0 <col:5, col:19> col:19 used n 'unsigned long'
unsigned long n;
  13: IntegerLiteral 0x562da280fc28 <lbaselib.c:66:22> 'int' 2
2
  14: DeclRefExpr 0x562da280fc48 <lbaselib.c:66:27> 'int' lvalue Var 0x562da280f090 'base' 'int'
base
  15: ImplicitCastExpr 0x562da280fc70 <lbaselib.c:66:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da280fc48 <col:27> 'int' lvalue Var 0x562da280f090 'base' 'int'
[B10.14] (ImplicitCastExpr, LValueToRValue, int)
  16: BinaryOperator 0x562da280fc88 <lbaselib.c:66:22, col:27> 'int' '<='
|-IntegerLiteral 0x562da280fc28 <col:22> 'int' 2
`-ImplicitCastExpr 0x562da280fc70 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da280fc48 <col:27> 'int' lvalue Var 0x562da280f090 'base' 'int'
[B10.13] <= [B10.15]
   T: [B10.16] && ...
   Preds (1): B13
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x562da280f5d0 <lbaselib.c:58:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   2: ImplicitCastExpr 0x562da280f7a8 <lbaselib.c:58:7> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da280f5d0 <col:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   3: DeclRefExpr 0x562da280f5f8 <lbaselib.c:58:22> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da280f7f8 <lbaselib.c:58:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da280f5f8 <col:22> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da280f620 <lbaselib.c:58:25> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x562da27ee2b0 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
lua_tonumber
   6: ImplicitCastExpr 0x562da280f6e8 <lbaselib.c:58:25> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da280f620 <col:25> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x562da27ee2b0 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B11.5] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   7: DeclRefExpr 0x562da280f648 <lbaselib.c:58:38> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x562da280f738 <lbaselib.c:58:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da280f648 <col:38> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B11.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: IntegerLiteral 0x562da280f670 <lbaselib.c:58:41> 'int' 1
1
  10: CallExpr 0x562da280f700 <lbaselib.c:58:25, col:42> 'lua_Number':'double'
|-ImplicitCastExpr 0x562da280f6e8 <col:25> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da280f620 <col:25> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x562da27ee2b0 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x562da280f738 <col:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da280f648 <col:38> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
`-IntegerLiteral 0x562da280f670 <col:41> 'int' 1
[B11.6]([B11.8], [B11.9])
  11: CallExpr 0x562da280f7c0 <lbaselib.c:58:7, col:43> 'void'
|-ImplicitCastExpr 0x562da280f7a8 <col:7> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da280f5d0 <col:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x562da280f7f8 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da280f5f8 <col:22> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
`-CallExpr 0x562da280f700 <col:25, col:42> 'lua_Number':'double'
  |-ImplicitCastExpr 0x562da280f6e8 <col:25> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da280f620 <col:25> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x562da27ee2b0 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
  |-ImplicitCastExpr 0x562da280f738 <col:38> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da280f648 <col:38> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
  `-IntegerLiteral 0x562da280f670 <col:41> 'int' 1
[B11.2]([B11.4], [B11.10])
  12: IntegerLiteral 0x562da280f810 <lbaselib.c:59:14> 'int' 1
1
  13: ReturnStmt 0x562da280f830 <lbaselib.c:59:7, col:14>
`-IntegerLiteral 0x562da280f810 <col:14> 'int' 1
return [B11.12];
   Preds (1): B12
   Succs (1): B0

 [B12]
   1: DeclRefExpr 0x562da280f3a0 <lbaselib.c:56:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da2803738 'luaL_checkany' 'void (lua_State *, int)':'void (lua_State *, int)'
luaL_checkany
   2: ImplicitCastExpr 0x562da280f410 <lbaselib.c:56:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da280f3a0 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da2803738 'luaL_checkany' 'void (lua_State *, int)':'void (lua_State *, int)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x562da280f3c8 <lbaselib.c:56:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da280f460 <lbaselib.c:56:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da280f3c8 <col:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da280f3f0 <lbaselib.c:56:22> 'int' 1
1
   6: CallExpr 0x562da280f428 <lbaselib.c:56:5, col:23> 'void'
|-ImplicitCastExpr 0x562da280f410 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da280f3a0 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da2803738 'luaL_checkany' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da280f460 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da280f3c8 <col:19> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
`-IntegerLiteral 0x562da280f3f0 <col:22> 'int' 1
[B12.2]([B12.4], [B12.5])
   7: DeclRefExpr 0x562da280f478 <lbaselib.c:57:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ecba8 'lua_isnumber' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_isnumber
   8: ImplicitCastExpr 0x562da280f568 <lbaselib.c:57:9> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da280f478 <col:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ecba8 'lua_isnumber' 'int (lua_State *, int)':'int (lua_State *, int)'
[B12.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   9: DeclRefExpr 0x562da280f4a0 <lbaselib.c:57:22> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x562da280f5b8 <lbaselib.c:57:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da280f4a0 <col:22> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B12.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: IntegerLiteral 0x562da280f4c8 <lbaselib.c:57:25> 'int' 1
1
  12: CallExpr 0x562da280f580 <lbaselib.c:57:9, col:26> 'int'
|-ImplicitCastExpr 0x562da280f568 <col:9> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da280f478 <col:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ecba8 'lua_isnumber' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da280f5b8 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da280f4a0 <col:22> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
`-IntegerLiteral 0x562da280f4c8 <col:25> 'int' 1
[B12.8]([B12.10], [B12.11])
   T: if [B12.12]
   Preds (1): B13
   Succs (2): B11 B1

 [B13]
   1: DeclRefExpr 0x562da280f0f0 <./lauxlib.h:105:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
luaL_optinteger
   2: ImplicitCastExpr 0x562da280f218 <./lauxlib.h:105:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da280f0f0 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int, lua_Integer))
   3: DeclRefExpr 0x562da280f118 <lbaselib.c:54:26> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da280f270 <lbaselib.c:54:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da280f118 <col:26> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
[B13.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da280f140 <lbaselib.c:54:29> 'int' 2
2
   6: IntegerLiteral 0x562da280f180 <lbaselib.c:54:32> 'int' 10
10
   7: ImplicitCastExpr 0x562da280f288 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
`-ParenExpr 0x562da280f1a0 <col:58, col:60> 'int'
  `-IntegerLiteral 0x562da280f180 <lbaselib.c:54:32> 'int' 10
([B13.6]) (ImplicitCastExpr, IntegralCast, lua_Integer)
   8: CallExpr 0x562da280f230 <./lauxlib.h:105:34, col:61> 'lua_Integer':'long'
|-ImplicitCastExpr 0x562da280f218 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da280f0f0 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|-ImplicitCastExpr 0x562da280f270 <lbaselib.c:54:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da280f118 <col:26> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
|-ParenExpr 0x562da280f160 <./lauxlib.h:105:53, col:55> 'int'
| `-IntegerLiteral 0x562da280f140 <lbaselib.c:54:29> 'int' 2
`-ImplicitCastExpr 0x562da280f288 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
  `-ParenExpr 0x562da280f1a0 <col:58, col:60> 'int'
    `-IntegerLiteral 0x562da280f180 <lbaselib.c:54:32> 'int' 10
[B13.2]([B13.4], ([B13.5]), [B13.7])
   9: CStyleCastExpr 0x562da280f2b8 <./lauxlib.h:105:29, col:61> 'int' <IntegralCast>
`-CallExpr 0x562da280f230 <col:34, col:61> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x562da280f218 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da280f0f0 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
  |-ImplicitCastExpr 0x562da280f270 <lbaselib.c:54:26> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da280f118 <col:26> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
  |-ParenExpr 0x562da280f160 <./lauxlib.h:105:53, col:55> 'int'
  | `-IntegerLiteral 0x562da280f140 <lbaselib.c:54:29> 'int' 2
  `-ImplicitCastExpr 0x562da280f288 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
    `-ParenExpr 0x562da280f1a0 <col:58, col:60> 'int'
      `-IntegerLiteral 0x562da280f180 <lbaselib.c:54:32> 'int' 10
(int)[B13.8] (CStyleCastExpr, IntegralCast, int)
  10: DeclStmt 0x562da280f300 <lbaselib.c:54:3, col:35>col:7
`-VarDecl 0x562da280f090 <col:3, ./lauxlib.h:105:62> lbaselib.c:54:7 used base 'int' cinit
  `-ParenExpr 0x562da280f2e0 <./lauxlib.h:105:28, col:62> 'int'
    `-CStyleCastExpr 0x562da280f2b8 <col:29, col:61> 'int' <IntegralCast>
      `-CallExpr 0x562da280f230 <col:34, col:61> 'lua_Integer':'long'
        |-ImplicitCastExpr 0x562da280f218 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x562da280f0f0 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
        |-ImplicitCastExpr 0x562da280f270 <lbaselib.c:54:26> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x562da280f118 <col:26> 'lua_State *' lvalue ParmVar 0x562da280ef40 'L' 'lua_State *'
        |-ParenExpr 0x562da280f160 <./lauxlib.h:105:53, col:55> 'int'
        | `-IntegerLiteral 0x562da280f140 <lbaselib.c:54:29> 'int' 2
        `-ImplicitCastExpr 0x562da280f288 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
          `-ParenExpr 0x562da280f1a0 <col:58, col:60> 'int'
            `-IntegerLiteral 0x562da280f180 <lbaselib.c:54:32> 'int' 10
int base = ((int)luaL_optinteger(L, (2), (10)));
  11: DeclRefExpr 0x562da280f318 <lbaselib.c:55:7> 'int' lvalue Var 0x562da280f090 'base' 'int'
base
  12: ImplicitCastExpr 0x562da280f360 <lbaselib.c:55:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da280f318 <col:7> 'int' lvalue Var 0x562da280f090 'base' 'int'
[B13.11] (ImplicitCastExpr, LValueToRValue, int)
  13: IntegerLiteral 0x562da280f340 <lbaselib.c:55:15> 'int' 10
10
  14: BinaryOperator 0x562da280f378 <lbaselib.c:55:7, col:15> 'int' '=='
|-ImplicitCastExpr 0x562da280f360 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da280f318 <col:7> 'int' lvalue Var 0x562da280f090 'base' 'int'
`-IntegerLiteral 0x562da280f340 <col:15> 'int' 10
[B13.12] == [B13.13]
   T: if [B13.14]
   Preds (1): B14
   Succs (2): B12 B10

 [B0 (EXIT)]
   Preds (3): B1 B2 B11
