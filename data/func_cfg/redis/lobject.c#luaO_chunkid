void luaO_chunkid(char *out, const char *source, size_t bufflen)
 [B13 (ENTRY)]
   Succs (1): B12

 [B1]
   1: DeclRefExpr 0x5569011f7e60 <lobject.c:211:7> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
strcat
   2: ImplicitCastExpr 0x5569011f7f10 <lobject.c:211:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f7e60 <col:7> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *))
   3: DeclRefExpr 0x5569011f7e88 <lobject.c:211:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
   4: ImplicitCastExpr 0x5569011f7f60 <lobject.c:211:14> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7e88 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: StringLiteral 0x5569011f7eb0 <lobject.c:211:19> 'char [3]' lvalue "\"]"
"\"]"
   6: ImplicitCastExpr 0x5569011f7f78 <lobject.c:211:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f7eb0 <col:19> 'char [3]' lvalue "\"]"
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5569011f7f90 <lobject.c:211:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f7f78 <col:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f7eb0 <col:19> 'char [3]' lvalue "\"]"
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5569011f7f28 <lobject.c:211:7, col:24> 'char *'
|-ImplicitCastExpr 0x5569011f7f10 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f7e60 <col:7> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
|-ImplicitCastExpr 0x5569011f7f60 <col:14> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7e88 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-ImplicitCastExpr 0x5569011f7f90 <col:19> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f7f78 <col:19> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f7eb0 <col:19> 'char [3]' lvalue "\"]"
[B1.2]([B1.4], [B1.7])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5569011f7d00 <lobject.c:210:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
strcat
   2: ImplicitCastExpr 0x5569011f7da8 <lobject.c:210:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f7d00 <col:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *))
   3: DeclRefExpr 0x5569011f7d28 <lobject.c:210:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
   4: ImplicitCastExpr 0x5569011f7df8 <lobject.c:210:16> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7d28 <col:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B2.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x5569011f7d50 <lobject.c:210:21> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   6: ImplicitCastExpr 0x5569011f7e10 <lobject.c:210:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7d50 <col:21> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B2.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x5569011f7dc0 <lobject.c:210:9, col:27> 'char *'
|-ImplicitCastExpr 0x5569011f7da8 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f7d00 <col:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
|-ImplicitCastExpr 0x5569011f7df8 <col:16> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7d28 <col:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-ImplicitCastExpr 0x5569011f7e10 <col:21> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f7d50 <col:21> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B2.2]([B2.4], [B2.6])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5569011f7a10 <lobject.c:206:9> 'char *(char *, const char *, unsigned long)' Function 0x5569010feaf8 'strncat' 'char *(char *, const char *, unsigned long)'
strncat
   2: ImplicitCastExpr 0x5569011f7af8 <lobject.c:206:9> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f7a10 <col:9> 'char *(char *, const char *, unsigned long)' Function 0x5569010feaf8 'strncat' 'char *(char *, const char *, unsigned long)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *, unsigned long))
   3: DeclRefExpr 0x5569011f7a38 <lobject.c:206:17> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
   4: ImplicitCastExpr 0x5569011f7b50 <lobject.c:206:17> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7a38 <col:17> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x5569011f7a60 <lobject.c:206:22> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   6: ImplicitCastExpr 0x5569011f7b68 <lobject.c:206:22> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7a60 <col:22> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B3.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x5569011f7a88 <lobject.c:206:30> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
len
   8: ImplicitCastExpr 0x5569011f7b80 <lobject.c:206:30> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f7a88 <col:30> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
[B3.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: CallExpr 0x5569011f7b10 <lobject.c:206:9, col:33> 'char *'
|-ImplicitCastExpr 0x5569011f7af8 <col:9> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f7a10 <col:9> 'char *(char *, const char *, unsigned long)' Function 0x5569010feaf8 'strncat' 'char *(char *, const char *, unsigned long)'
|-ImplicitCastExpr 0x5569011f7b50 <col:17> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7a38 <col:17> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
|-ImplicitCastExpr 0x5569011f7b68 <col:22> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7a60 <col:22> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
`-ImplicitCastExpr 0x5569011f7b80 <col:30> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5569011f7a88 <col:30> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
[B3.2]([B3.4], [B3.6], [B3.8])
  10: DeclRefExpr 0x5569011f7b98 <lobject.c:207:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
strcat
  11: ImplicitCastExpr 0x5569011f7c48 <lobject.c:207:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f7b98 <col:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
[B3.10] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *))
  12: DeclRefExpr 0x5569011f7bc0 <lobject.c:207:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
  13: ImplicitCastExpr 0x5569011f7c98 <lobject.c:207:16> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7bc0 <col:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B3.12] (ImplicitCastExpr, LValueToRValue, char *)
  14: StringLiteral 0x5569011f7be8 <lobject.c:207:21> 'char [4]' lvalue "..."
"..."
  15: ImplicitCastExpr 0x5569011f7cb0 <lobject.c:207:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f7be8 <col:21> 'char [4]' lvalue "..."
[B3.14] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  16: ImplicitCastExpr 0x5569011f7cc8 <lobject.c:207:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f7cb0 <col:21> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f7be8 <col:21> 'char [4]' lvalue "..."
[B3.15] (ImplicitCastExpr, BitCast, const char *)
  17: CallExpr 0x5569011f7c60 <lobject.c:207:9, col:26> 'char *'
|-ImplicitCastExpr 0x5569011f7c48 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f7b98 <col:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
|-ImplicitCastExpr 0x5569011f7c98 <col:16> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7bc0 <col:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-ImplicitCastExpr 0x5569011f7cc8 <col:21> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f7cb0 <col:21> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f7be8 <col:21> 'char [4]' lvalue "..."
[B3.11]([B3.13], [B3.16])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x5569011f7770 <lobject.c:204:7> 'char *(char *, const char *)' Function 0x5569010fdc48 'strcpy' 'char *(char *, const char *)'
strcpy
   2: ImplicitCastExpr 0x5569011f7860 <lobject.c:204:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f7770 <col:7> 'char *(char *, const char *)' Function 0x5569010fdc48 'strcpy' 'char *(char *, const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *))
   3: DeclRefExpr 0x5569011f7798 <lobject.c:204:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
   4: ImplicitCastExpr 0x5569011f78b0 <lobject.c:204:14> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7798 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: StringLiteral 0x5569011f77f8 <lobject.c:204:19> 'char [10]' lvalue "[string \""
"[string \""
   6: ImplicitCastExpr 0x5569011f78c8 <lobject.c:204:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f77f8 <col:19> 'char [10]' lvalue "[string \""
[B4.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5569011f78e0 <lobject.c:204:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f78c8 <col:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f77f8 <col:19> 'char [10]' lvalue "[string \""
[B4.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5569011f7878 <lobject.c:204:7, col:31> 'char *'
|-ImplicitCastExpr 0x5569011f7860 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f7770 <col:7> 'char *(char *, const char *)' Function 0x5569010fdc48 'strcpy' 'char *(char *, const char *)'
|-ImplicitCastExpr 0x5569011f78b0 <col:14> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7798 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-ImplicitCastExpr 0x5569011f78e0 <col:19> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f78c8 <col:19> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f77f8 <col:19> 'char [10]' lvalue "[string \""
[B4.2]([B4.4], [B4.7])
   9: DeclRefExpr 0x5569011f78f8 <lobject.c:205:11> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
  10: ImplicitCastExpr 0x5569011f7948 <lobject.c:205:11> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f78f8 <col:11> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B4.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: DeclRefExpr 0x5569011f7920 <lobject.c:205:18> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
len
  12: ImplicitCastExpr 0x5569011f7960 <lobject.c:205:18> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f7920 <col:18> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
[B4.11] (ImplicitCastExpr, LValueToRValue, size_t)
  13: ArraySubscriptExpr 0x5569011f7978 <lobject.c:205:11, col:21> 'const char' lvalue
|-ImplicitCastExpr 0x5569011f7948 <col:11> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f78f8 <col:11> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
`-ImplicitCastExpr 0x5569011f7960 <col:18> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5569011f7920 <col:18> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
[B4.10][[B4.12]]
  14: ImplicitCastExpr 0x5569011f79b8 <lobject.c:205:11, col:21> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x5569011f7978 <col:11, col:21> 'const char' lvalue
  |-ImplicitCastExpr 0x5569011f7948 <col:11> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x5569011f78f8 <col:11> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
  `-ImplicitCastExpr 0x5569011f7960 <col:18> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x5569011f7920 <col:18> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
[B4.13] (ImplicitCastExpr, LValueToRValue, char)
  15: ImplicitCastExpr 0x5569011f79d0 <lobject.c:205:11, col:21> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011f79b8 <col:11, col:21> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x5569011f7978 <col:11, col:21> 'const char' lvalue
    |-ImplicitCastExpr 0x5569011f7948 <col:11> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x5569011f78f8 <col:11> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
    `-ImplicitCastExpr 0x5569011f7960 <col:18> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x5569011f7920 <col:18> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
[B4.14] (ImplicitCastExpr, IntegralCast, int)
  16: CharacterLiteral 0x5569011f79a0 <lobject.c:205:26> 'int' 0
'\x00'
  17: BinaryOperator 0x5569011f79e8 <lobject.c:205:11, col:26> 'int' '!='
|-ImplicitCastExpr 0x5569011f79d0 <col:11, col:21> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011f79b8 <col:11, col:21> 'char' <LValueToRValue>
|   `-ArraySubscriptExpr 0x5569011f7978 <col:11, col:21> 'const char' lvalue
|     |-ImplicitCastExpr 0x5569011f7948 <col:11> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5569011f78f8 <col:11> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
|     `-ImplicitCastExpr 0x5569011f7960 <col:18> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5569011f7920 <col:18> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
`-CharacterLiteral 0x5569011f79a0 <col:26> 'int' 0
[B4.15] != [B4.16]
   T: if [B4.17]
   Preds (2): B5 B6
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x5569011f76d0 <lobject.c:203:32> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
   2: ImplicitCastExpr 0x5569011f76f8 <lobject.c:203:32> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f76d0 <col:32> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B5.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x5569011f76a8 <lobject.c:203:26> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
len
   4: BinaryOperator 0x5569011f7710 <lobject.c:203:26, col:32> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x5569011f76a8 <col:26> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5569011f76f8 <col:32> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5569011f76d0 <col:32> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B5.3] = [B5.2]
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x5569011f73a0 <lobject.c:201:20> 'unsigned long (const char *, const char *)' Function 0x5569011018e0 'strcspn' 'unsigned long (const char *, const char *)'
strcspn
   2: ImplicitCastExpr 0x5569011f7478 <lobject.c:201:20> 'unsigned long (*)(const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f73a0 <col:20> 'unsigned long (const char *, const char *)' Function 0x5569011018e0 'strcspn' 'unsigned long (const char *, const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *, const char *))
   3: DeclRefExpr 0x5569011f73c8 <lobject.c:201:28> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   4: ImplicitCastExpr 0x5569011f74c8 <lobject.c:201:28> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f73c8 <col:28> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B6.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x5569011f73f0 <lobject.c:201:36> 'char [3]' lvalue "\n\r"
"\n\r"
   6: ImplicitCastExpr 0x5569011f74e0 <lobject.c:201:36> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f73f0 <col:36> 'char [3]' lvalue "\n\r"
[B6.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5569011f74f8 <lobject.c:201:36> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f74e0 <col:36> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f73f0 <col:36> 'char [3]' lvalue "\n\r"
[B6.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5569011f7490 <lobject.c:201:20, col:42> 'unsigned long'
|-ImplicitCastExpr 0x5569011f7478 <col:20> 'unsigned long (*)(const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f73a0 <col:20> 'unsigned long (const char *, const char *)' Function 0x5569011018e0 'strcspn' 'unsigned long (const char *, const char *)'
|-ImplicitCastExpr 0x5569011f74c8 <col:28> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f73c8 <col:28> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
`-ImplicitCastExpr 0x5569011f74f8 <col:36> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f74e0 <col:36> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f73f0 <col:36> 'char [3]' lvalue "\n\r"
[B6.2]([B6.4], [B6.7])
   9: DeclStmt 0x5569011f7510 <lobject.c:201:7, col:43>col:14
`-VarDecl 0x5569011f7340 <col:7, col:42> col:14 used len 'size_t':'unsigned long' cinit
  `-CallExpr 0x5569011f7490 <col:20, col:42> 'unsigned long'
    |-ImplicitCastExpr 0x5569011f7478 <col:20> 'unsigned long (*)(const char *, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5569011f73a0 <col:20> 'unsigned long (const char *, const char *)' Function 0x5569011018e0 'strcspn' 'unsigned long (const char *, const char *)'
    |-ImplicitCastExpr 0x5569011f74c8 <col:28> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x5569011f73c8 <col:28> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
    `-ImplicitCastExpr 0x5569011f74f8 <col:36> 'const char *' <BitCast>
      `-ImplicitCastExpr 0x5569011f74e0 <col:36> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x5569011f73f0 <col:36> 'char [3]' lvalue "\n\r"
size_t len = strcspn(source, "\n\r");
  10: DeclRefExpr 0x5569011f7528 <lobject.c:202:7> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
  11: UnaryExprOrTypeTraitExpr 0x5569011f75a8 <lobject.c:202:18, col:45> 'unsigned long' sizeof
`-ParenExpr 0x5569011f7588 <col:24, col:45> 'char [17]' lvalue
  `-StringLiteral 0x5569011f7550 <col:25> 'char [17]' lvalue " [string \"...\"] "
sizeof (" [string \"...\"] ")
  12: CompoundAssignOperator 0x5569011f75c8 <lobject.c:202:7, col:45> 'size_t':'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5569011f7528 <col:7> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
`-UnaryExprOrTypeTraitExpr 0x5569011f75a8 <col:18, col:45> 'unsigned long' sizeof
  `-ParenExpr 0x5569011f7588 <col:24, col:45> 'char [17]' lvalue
    `-StringLiteral 0x5569011f7550 <col:25> 'char [17]' lvalue " [string \"...\"] "
[B6.10] -= [B6.11]
  13: DeclRefExpr 0x5569011f7600 <lobject.c:203:11> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
len
  14: ImplicitCastExpr 0x5569011f7650 <lobject.c:203:11> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f7600 <col:11> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
[B6.13] (ImplicitCastExpr, LValueToRValue, size_t)
  15: DeclRefExpr 0x5569011f7628 <lobject.c:203:17> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
  16: ImplicitCastExpr 0x5569011f7668 <lobject.c:203:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f7628 <col:17> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B6.15] (ImplicitCastExpr, LValueToRValue, size_t)
  17: BinaryOperator 0x5569011f7680 <lobject.c:203:11, col:17> 'int' '>'
|-ImplicitCastExpr 0x5569011f7650 <col:11> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7600 <col:11> 'size_t':'unsigned long' lvalue Var 0x5569011f7340 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5569011f7668 <col:17> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5569011f7628 <col:17> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B6.14] > [B6.16]
   T: if [B6.17]
   Preds (1): B10
   Succs (2): B5 B4

 [B7]
   1: DeclRefExpr 0x5569011f71c0 <lobject.c:198:7> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
strcat
   2: ImplicitCastExpr 0x5569011f7268 <lobject.c:198:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f71c0 <col:7> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *))
   3: DeclRefExpr 0x5569011f71e8 <lobject.c:198:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
   4: ImplicitCastExpr 0x5569011f72b8 <lobject.c:198:14> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f71e8 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B7.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x5569011f7210 <lobject.c:198:19> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   6: ImplicitCastExpr 0x5569011f72d0 <lobject.c:198:19> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7210 <col:19> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B7.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x5569011f7280 <lobject.c:198:7, col:25> 'char *'
|-ImplicitCastExpr 0x5569011f7268 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f71c0 <col:7> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
|-ImplicitCastExpr 0x5569011f72b8 <col:14> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f71e8 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-ImplicitCastExpr 0x5569011f72d0 <col:19> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f7210 <col:19> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B7.2]([B7.4], [B7.6])
   Preds (2): B8 B9
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x5569011f6ef8 <lobject.c:195:9> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   2: DeclRefExpr 0x5569011f6f20 <lobject.c:195:20> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
l
   3: ImplicitCastExpr 0x5569011f6f70 <lobject.c:195:20> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f6f20 <col:20> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
[B8.2] (ImplicitCastExpr, LValueToRValue, size_t)
   4: DeclRefExpr 0x5569011f6f48 <lobject.c:195:22> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
   5: ImplicitCastExpr 0x5569011f6f88 <lobject.c:195:22> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f6f48 <col:22> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B8.4] (ImplicitCastExpr, LValueToRValue, size_t)
   6: BinaryOperator 0x5569011f6fa0 <lobject.c:195:20, col:22> 'unsigned long' '-'
|-ImplicitCastExpr 0x5569011f6f70 <col:20> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5569011f6f20 <col:20> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5569011f6f88 <col:22> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5569011f6f48 <col:22> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B8.3] - [B8.5]
   7: CompoundAssignOperator 0x5569011f6fe8 <lobject.c:195:9, col:29> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|-DeclRefExpr 0x5569011f6ef8 <col:9> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
`-ParenExpr 0x5569011f6fc8 <col:19, col:29> 'unsigned long'
  `-BinaryOperator 0x5569011f6fa0 <col:20, col:22> 'unsigned long' '-'
    |-ImplicitCastExpr 0x5569011f6f70 <col:20> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x5569011f6f20 <col:20> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x5569011f6f88 <col:22> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x5569011f6f48 <col:22> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B8.1] += ([B8.6])
   8: DeclRefExpr 0x5569011f7020 <lobject.c:196:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
strcat
   9: ImplicitCastExpr 0x5569011f70d0 <lobject.c:196:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f7020 <col:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
[B8.8] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *))
  10: DeclRefExpr 0x5569011f7048 <lobject.c:196:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
  11: ImplicitCastExpr 0x5569011f7120 <lobject.c:196:16> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f7048 <col:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B8.10] (ImplicitCastExpr, LValueToRValue, char *)
  12: StringLiteral 0x5569011f7070 <lobject.c:196:21> 'char [4]' lvalue "..."
"..."
  13: ImplicitCastExpr 0x5569011f7138 <lobject.c:196:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f7070 <col:21> 'char [4]' lvalue "..."
[B8.12] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  14: ImplicitCastExpr 0x5569011f7150 <lobject.c:196:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f7138 <col:21> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f7070 <col:21> 'char [4]' lvalue "..."
[B8.13] (ImplicitCastExpr, BitCast, const char *)
  15: CallExpr 0x5569011f70e8 <lobject.c:196:9, col:26> 'char *'
|-ImplicitCastExpr 0x5569011f70d0 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f7020 <col:9> 'char *(char *, const char *)' Function 0x5569010fe628 'strcat' 'char *(char *, const char *)'
|-ImplicitCastExpr 0x5569011f7120 <col:16> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f7048 <col:16> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-ImplicitCastExpr 0x5569011f7150 <col:21> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f7138 <col:21> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f7070 <col:21> 'char [4]' lvalue "..."
[B8.9]([B8.11], [B8.14])
   Preds (1): B9
   Succs (1): B7

 [B9]
   1: DeclStmt 0x5569011f6aa0 <lobject.c:189:7, col:15>col:14
`-VarDecl 0x5569011f6a40 <col:7, col:14> col:14 used l 'size_t':'unsigned long'
size_t l;
   2: DeclRefExpr 0x5569011f6ab8 <lobject.c:190:7> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   3: UnaryOperator 0x5569011f6ae0 <lobject.c:190:7, col:13> 'const char *' postfix '++'
`-DeclRefExpr 0x5569011f6ab8 <col:7> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B9.2]++
   4: DeclRefExpr 0x5569011f6b00 <lobject.c:191:7> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
   5: UnaryExprOrTypeTraitExpr 0x5569011f6b78 <lobject.c:191:18, col:34> 'unsigned long' sizeof
`-ParenExpr 0x5569011f6b58 <col:24, col:34> 'char [8]' lvalue
  `-StringLiteral 0x5569011f6b28 <col:25> 'char [8]' lvalue " '...' "
sizeof (" '...' ")
   6: CompoundAssignOperator 0x5569011f6b98 <lobject.c:191:7, col:34> 'size_t':'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5569011f6b00 <col:7> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
`-UnaryExprOrTypeTraitExpr 0x5569011f6b78 <col:18, col:34> 'unsigned long' sizeof
  `-ParenExpr 0x5569011f6b58 <col:24, col:34> 'char [8]' lvalue
    `-StringLiteral 0x5569011f6b28 <col:25> 'char [8]' lvalue " '...' "
[B9.4] -= [B9.5]
   7: DeclRefExpr 0x5569011f6bf8 <lobject.c:192:11> 'unsigned long (const char *)' Function 0x556901103328 'strlen' 'unsigned long (const char *)'
strlen
   8: ImplicitCastExpr 0x5569011f6c60 <lobject.c:192:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f6bf8 <col:11> 'unsigned long (const char *)' Function 0x556901103328 'strlen' 'unsigned long (const char *)'
[B9.7] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
   9: DeclRefExpr 0x5569011f6c20 <lobject.c:192:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
  10: ImplicitCastExpr 0x5569011f6ca8 <lobject.c:192:18> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f6c20 <col:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B9.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: CallExpr 0x5569011f6c78 <lobject.c:192:11, col:24> 'unsigned long'
|-ImplicitCastExpr 0x5569011f6c60 <col:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f6bf8 <col:11> 'unsigned long (const char *)' Function 0x556901103328 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x5569011f6ca8 <col:18> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f6c20 <col:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B9.8]([B9.10])
  12: DeclRefExpr 0x5569011f6bd0 <lobject.c:192:7> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
l
  13: BinaryOperator 0x5569011f6cc0 <lobject.c:192:7, col:24> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x5569011f6bd0 <col:7> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
`-CallExpr 0x5569011f6c78 <col:11, col:24> 'unsigned long'
  |-ImplicitCastExpr 0x5569011f6c60 <col:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5569011f6bf8 <col:11> 'unsigned long (const char *)' Function 0x556901103328 'strlen' 'unsigned long (const char *)'
  `-ImplicitCastExpr 0x5569011f6ca8 <col:18> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f6c20 <col:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B9.12] = [B9.11]
  14: DeclRefExpr 0x5569011f6ce8 <lobject.c:193:7> 'char *(char *, const char *)' Function 0x5569010fdc48 'strcpy' 'char *(char *, const char *)'
strcpy
  15: ImplicitCastExpr 0x5569011f6db8 <lobject.c:193:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f6ce8 <col:7> 'char *(char *, const char *)' Function 0x5569010fdc48 'strcpy' 'char *(char *, const char *)'
[B9.14] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *))
  16: DeclRefExpr 0x5569011f6d10 <lobject.c:193:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
  17: ImplicitCastExpr 0x5569011f6e08 <lobject.c:193:14> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f6d10 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B9.16] (ImplicitCastExpr, LValueToRValue, char *)
  18: StringLiteral 0x5569011f6d38 <lobject.c:193:19> 'char [1]' lvalue ""
""
  19: ImplicitCastExpr 0x5569011f6e20 <lobject.c:193:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5569011f6d38 <col:19> 'char [1]' lvalue ""
[B9.18] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  20: ImplicitCastExpr 0x5569011f6e38 <lobject.c:193:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5569011f6e20 <col:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5569011f6d38 <col:19> 'char [1]' lvalue ""
[B9.19] (ImplicitCastExpr, BitCast, const char *)
  21: CallExpr 0x5569011f6dd0 <lobject.c:193:7, col:21> 'char *'
|-ImplicitCastExpr 0x5569011f6db8 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f6ce8 <col:7> 'char *(char *, const char *)' Function 0x5569010fdc48 'strcpy' 'char *(char *, const char *)'
|-ImplicitCastExpr 0x5569011f6e08 <col:14> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f6d10 <col:14> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-ImplicitCastExpr 0x5569011f6e38 <col:19> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5569011f6e20 <col:19> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5569011f6d38 <col:19> 'char [1]' lvalue ""
[B9.15]([B9.17], [B9.20])
  22: DeclRefExpr 0x5569011f6e50 <lobject.c:194:11> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
l
  23: ImplicitCastExpr 0x5569011f6ea0 <lobject.c:194:11> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f6e50 <col:11> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
[B9.22] (ImplicitCastExpr, LValueToRValue, size_t)
  24: DeclRefExpr 0x5569011f6e78 <lobject.c:194:15> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
  25: ImplicitCastExpr 0x5569011f6eb8 <lobject.c:194:15> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f6e78 <col:15> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B9.24] (ImplicitCastExpr, LValueToRValue, size_t)
  26: BinaryOperator 0x5569011f6ed0 <lobject.c:194:11, col:15> 'int' '>'
|-ImplicitCastExpr 0x5569011f6ea0 <col:11> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5569011f6e50 <col:11> 'size_t':'unsigned long' lvalue Var 0x5569011f6a40 'l' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5569011f6eb8 <col:15> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5569011f6e78 <col:15> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B9.23] > [B9.25]
   T: if [B9.26]
   Preds (1): B10
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x5569011f6200 <lobject.c:188:10> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   2: ImplicitCastExpr 0x5569011f6228 <lobject.c:188:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f6200 <col:10> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B10.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x5569011f6240 <lobject.c:188:9, col:10> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011f6228 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f6200 <col:10> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
*[B10.2]
   4: ImplicitCastExpr 0x5569011f6278 <lobject.c:188:9, col:10> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011f6240 <col:9, col:10> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x5569011f6228 <col:10> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f6200 <col:10> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B10.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x5569011f6290 <lobject.c:188:9, col:10> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011f6278 <col:9, col:10> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011f6240 <col:9, col:10> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x5569011f6228 <col:10> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f6200 <col:10> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B10.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x5569011f6260 <lobject.c:188:20> 'int' 64
'@'
   7: BinaryOperator 0x5569011f62a8 <lobject.c:188:9, col:20> 'int' '=='
|-ImplicitCastExpr 0x5569011f6290 <col:9, col:10> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011f6278 <col:9, col:10> 'char' <LValueToRValue>
|   `-UnaryOperator 0x5569011f6240 <col:9, col:10> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5569011f6228 <col:10> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011f6200 <col:10> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
`-CharacterLiteral 0x5569011f6260 <col:20> 'int' 64
[B10.5] == [B10.6]
   T: if [B10.7]
   Preds (1): B12
   Succs (2): B9 B6

 [B11]
   1: DeclRefExpr 0x5569011f5e98 <lobject.c:184:5> 'char *(char *, const char *, unsigned long)' Function 0x5569010fe228 'strncpy' 'char *(char *, const char *, unsigned long)'
strncpy
   2: ImplicitCastExpr 0x5569011f5ff8 <lobject.c:184:5> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5569011f5e98 <col:5> 'char *(char *, const char *, unsigned long)' Function 0x5569010fe228 'strncpy' 'char *(char *, const char *, unsigned long)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(char *, const char *, unsigned long))
   3: DeclRefExpr 0x5569011f5ec0 <lobject.c:184:13> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
   4: ImplicitCastExpr 0x5569011f6050 <lobject.c:184:13> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f5ec0 <col:13> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B11.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x5569011f5ee8 <lobject.c:184:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   6: ImplicitCastExpr 0x5569011f5f30 <lobject.c:184:18> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f5ee8 <col:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B11.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: IntegerLiteral 0x5569011f5f10 <lobject.c:184:25> 'int' 1
1
   8: BinaryOperator 0x5569011f5f48 <lobject.c:184:18, col:25> 'const char *' '+'
|-ImplicitCastExpr 0x5569011f5f30 <col:18> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f5ee8 <col:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
`-IntegerLiteral 0x5569011f5f10 <col:25> 'int' 1
[B11.6] + [B11.7]
   9: DeclRefExpr 0x5569011f5f70 <lobject.c:184:28> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
  10: ImplicitCastExpr 0x5569011f6068 <lobject.c:184:28> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f5f70 <col:28> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B11.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: CallExpr 0x5569011f6010 <lobject.c:184:5, col:35> 'char *'
|-ImplicitCastExpr 0x5569011f5ff8 <col:5> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5569011f5e98 <col:5> 'char *(char *, const char *, unsigned long)' Function 0x5569010fe228 'strncpy' 'char *(char *, const char *, unsigned long)'
|-ImplicitCastExpr 0x5569011f6050 <col:13> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f5ec0 <col:13> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
|-BinaryOperator 0x5569011f5f48 <col:18, col:25> 'const char *' '+'
| |-ImplicitCastExpr 0x5569011f5f30 <col:18> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x5569011f5ee8 <col:18> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
| `-IntegerLiteral 0x5569011f5f10 <col:25> 'int' 1
`-ImplicitCastExpr 0x5569011f6068 <col:28> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5569011f5f70 <col:28> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B11.2]([B11.4], [B11.8], [B11.10])
  12: CharacterLiteral 0x5569011f6188 <lobject.c:185:22> 'int' 0
'\x00'
  13: ImplicitCastExpr 0x5569011f61a0 <lobject.c:185:22> 'char' <IntegralCast>
`-CharacterLiteral 0x5569011f6188 <col:22> 'int' 0
[B11.12] (ImplicitCastExpr, IntegralCast, char)
  14: DeclRefExpr 0x5569011f6080 <lobject.c:185:5> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
out
  15: ImplicitCastExpr 0x5569011f6148 <lobject.c:185:5> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f6080 <col:5> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
[B11.14] (ImplicitCastExpr, LValueToRValue, char *)
  16: DeclRefExpr 0x5569011f60a8 <lobject.c:185:9> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
bufflen
  17: ImplicitCastExpr 0x5569011f60f0 <lobject.c:185:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5569011f60a8 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
[B11.16] (ImplicitCastExpr, LValueToRValue, size_t)
  18: IntegerLiteral 0x5569011f60d0 <lobject.c:185:17> 'int' 1
1
  19: ImplicitCastExpr 0x5569011f6108 <lobject.c:185:17> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x5569011f60d0 <col:17> 'int' 1
[B11.18] (ImplicitCastExpr, IntegralCast, unsigned long)
  20: BinaryOperator 0x5569011f6120 <lobject.c:185:9, col:17> 'unsigned long' '-'
|-ImplicitCastExpr 0x5569011f60f0 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5569011f60a8 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5569011f6108 <col:17> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x5569011f60d0 <col:17> 'int' 1
[B11.17] - [B11.19]
  21: ArraySubscriptExpr 0x5569011f6160 <lobject.c:185:5, col:18> 'char' lvalue
|-ImplicitCastExpr 0x5569011f6148 <col:5> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5569011f6080 <col:5> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
`-BinaryOperator 0x5569011f6120 <col:9, col:17> 'unsigned long' '-'
  |-ImplicitCastExpr 0x5569011f60f0 <col:9> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x5569011f60a8 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x5569011f6108 <col:17> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x5569011f60d0 <col:17> 'int' 1
[B11.15][[B11.20]]
  22: BinaryOperator 0x5569011f61b8 <lobject.c:185:5, col:22> 'char' '='
|-ArraySubscriptExpr 0x5569011f6160 <col:5, col:18> 'char' lvalue
| |-ImplicitCastExpr 0x5569011f6148 <col:5> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x5569011f6080 <col:5> 'char *' lvalue ParmVar 0x5569011f5b48 'out' 'char *'
| `-BinaryOperator 0x5569011f6120 <col:9, col:17> 'unsigned long' '-'
|   |-ImplicitCastExpr 0x5569011f60f0 <col:9> 'size_t':'unsigned long' <LValueToRValue>
|   | `-DeclRefExpr 0x5569011f60a8 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x5569011f5c30 'bufflen' 'size_t':'unsigned long'
|   `-ImplicitCastExpr 0x5569011f6108 <col:17> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x5569011f60d0 <col:17> 'int' 1
`-ImplicitCastExpr 0x5569011f61a0 <col:22> 'char' <IntegralCast>
  `-CharacterLiteral 0x5569011f6188 <col:22> 'int' 0
[B11.21] = [B11.13]
   Preds (1): B12
   Succs (1): B0

 [B12]
   1: DeclRefExpr 0x5569011f5dc8 <lobject.c:183:8> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
source
   2: ImplicitCastExpr 0x5569011f5df0 <lobject.c:183:8> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5569011f5dc8 <col:8> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B12.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x5569011f5e08 <lobject.c:183:7, col:8> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x5569011f5df0 <col:8> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5569011f5dc8 <col:8> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
*[B12.2]
   4: ImplicitCastExpr 0x5569011f5e40 <lobject.c:183:7, col:8> 'char' <LValueToRValue>
`-UnaryOperator 0x5569011f5e08 <col:7, col:8> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x5569011f5df0 <col:8> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x5569011f5dc8 <col:8> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B12.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x5569011f5e58 <lobject.c:183:7, col:8> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5569011f5e40 <col:7, col:8> 'char' <LValueToRValue>
  `-UnaryOperator 0x5569011f5e08 <col:7, col:8> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x5569011f5df0 <col:8> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x5569011f5dc8 <col:8> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
[B12.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x5569011f5e28 <lobject.c:183:18> 'int' 61
'='
   7: BinaryOperator 0x5569011f5e70 <lobject.c:183:7, col:18> 'int' '=='
|-ImplicitCastExpr 0x5569011f5e58 <col:7, col:8> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5569011f5e40 <col:7, col:8> 'char' <LValueToRValue>
|   `-UnaryOperator 0x5569011f5e08 <col:7, col:8> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5569011f5df0 <col:8> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5569011f5dc8 <col:8> 'const char *' lvalue ParmVar 0x5569011f5bc0 'source' 'const char *'
`-CharacterLiteral 0x5569011f5e28 <col:18> 'int' 61
[B12.5] == [B12.6]
   T: if [B12.7]
   Preds (1): B13
   Succs (2): B11 B10

 [B0 (EXIT)]
   Preds (3): B1 B7 B11
