const TValue *luaT_gettm(Table *events, TMS event, TString *ename)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x5612691d53f8 <ltm.c:57:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
tm
   2: ImplicitCastExpr 0x5612691d5420 <ltm.c:57:15> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5612691d53f8 <col:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
[B1.1] (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: ReturnStmt 0x5612691d5438 <ltm.c:57:8, col:15>
`-ImplicitCastExpr 0x5612691d5420 <col:15> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5612691d53f8 <col:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
return [B1.2];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5612691d50e0 <ltm.c:54:5> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
events
   2: ImplicitCastExpr 0x5612691d5108 <ltm.c:54:5> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5612691d50e0 <col:5> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
[B2.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5612691d5120 <ltm.c:54:5, col:13> 'lu_byte':'unsigned char' lvalue ->flags 0x5612691a90c8
`-ImplicitCastExpr 0x5612691d5108 <col:5> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5612691d50e0 <col:5> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
[B2.2]->flags
   4: IntegerLiteral 0x5612691d5158 <ltm.c:54:32> 'unsigned int' 1
1U
   5: DeclRefExpr 0x5612691d5190 <ltm.c:54:36> 'TMS':'TMS' lvalue ParmVar 0x5612691d4b48 'event' 'TMS':'TMS'
event
   6: ImplicitCastExpr 0x5612691d51b8 <ltm.c:54:36> 'TMS':'TMS' <LValueToRValue>
`-DeclRefExpr 0x5612691d5190 <col:36> 'TMS':'TMS' lvalue ParmVar 0x5612691d4b48 'event' 'TMS':'TMS'
[B2.5] (ImplicitCastExpr, LValueToRValue, TMS)
   7: ImplicitCastExpr 0x5612691d51d0 <ltm.c:54:36> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5612691d51b8 <col:36> 'TMS':'TMS' <LValueToRValue>
  `-DeclRefExpr 0x5612691d5190 <col:36> 'TMS':'TMS' lvalue ParmVar 0x5612691d4b48 'event' 'TMS':'TMS'
[B2.6] (ImplicitCastExpr, IntegralCast, unsigned int)
   8: BinaryOperator 0x5612691d51e8 <ltm.c:54:32, col:36> 'unsigned int' '<<'
|-IntegerLiteral 0x5612691d5158 <col:32> 'unsigned int' 1
`-ImplicitCastExpr 0x5612691d51d0 <col:36> 'unsigned int' <IntegralCast>
  `-ImplicitCastExpr 0x5612691d51b8 <col:36> 'TMS':'TMS' <LValueToRValue>
    `-DeclRefExpr 0x5612691d5190 <col:36> 'TMS':'TMS' lvalue ParmVar 0x5612691d4b48 'event' 'TMS':'TMS'
[B2.4] << [B2.7]
   9: CStyleCastExpr 0x5612691d5290 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x5612691d5270 <col:26, col:30> 'unsigned int'
  `-ParenExpr 0x5612691d5210 <line:78:36, col:38> 'unsigned int'
    `-BinaryOperator 0x5612691d51e8 <ltm.c:54:32, col:36> 'unsigned int' '<<'
      |-IntegerLiteral 0x5612691d5158 <col:32> 'unsigned int' 1
      `-ImplicitCastExpr 0x5612691d51d0 <col:36> 'unsigned int' <IntegralCast>
        `-ImplicitCastExpr 0x5612691d51b8 <col:36> 'TMS':'TMS' <LValueToRValue>
          `-DeclRefExpr 0x5612691d5190 <col:36> 'TMS':'TMS' lvalue ParmVar 0x5612691d4b48 'event' 'TMS':'TMS'
(lu_byte)(([B2.8])) (CStyleCastExpr, IntegralCast, lu_byte)
  10: ImplicitCastExpr 0x5612691d52d8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x5612691d52b8 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x5612691d5290 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x5612691d5270 <col:26, col:30> 'unsigned int'
      `-ParenExpr 0x5612691d5210 <line:78:36, col:38> 'unsigned int'
        `-BinaryOperator 0x5612691d51e8 <ltm.c:54:32, col:36> 'unsigned int' '<<'
          |-IntegerLiteral 0x5612691d5158 <col:32> 'unsigned int' 1
          `-ImplicitCastExpr 0x5612691d51d0 <col:36> 'unsigned int' <IntegralCast>
            `-ImplicitCastExpr 0x5612691d51b8 <col:36> 'TMS':'TMS' <LValueToRValue>
              `-DeclRefExpr 0x5612691d5190 <col:36> 'TMS':'TMS' lvalue ParmVar 0x5612691d4b48 'event' 'TMS':'TMS'
([B2.9]) (ImplicitCastExpr, IntegralCast, int)
  11: CompoundAssignOperator 0x5612691d52f0 <ltm.c:54:5, ./llimits.h:75:31> 'lu_byte':'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x5612691d5120 <ltm.c:54:5, col:13> 'lu_byte':'unsigned char' lvalue ->flags 0x5612691a90c8
| `-ImplicitCastExpr 0x5612691d5108 <col:5> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5612691d50e0 <col:5> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
`-ImplicitCastExpr 0x5612691d52d8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x5612691d52b8 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x5612691d5290 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x5612691d5270 <col:26, col:30> 'unsigned int'
        `-ParenExpr 0x5612691d5210 <line:78:36, col:38> 'unsigned int'
          `-BinaryOperator 0x5612691d51e8 <ltm.c:54:32, col:36> 'unsigned int' '<<'
            |-IntegerLiteral 0x5612691d5158 <col:32> 'unsigned int' 1
            `-ImplicitCastExpr 0x5612691d51d0 <col:36> 'unsigned int' <IntegralCast>
              `-ImplicitCastExpr 0x5612691d51b8 <col:36> 'TMS':'TMS' <LValueToRValue>
                `-DeclRefExpr 0x5612691d5190 <col:36> 'TMS':'TMS' lvalue ParmVar 0x5612691d4b48 'event' 'TMS':'TMS'
[B2.3] |= [B2.10]
  12: IntegerLiteral 0x5612691d5328 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  13: CStyleCastExpr 0x5612691d5360 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5612691d5328 <col:24> 'int' 0
(void *)[B2.12] (CStyleCastExpr, NullToPointer, void *)
  14: ImplicitCastExpr 0x5612691d53a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5612691d5388 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5612691d5360 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5612691d5328 <col:24> 'int' 0
([B2.13]) (ImplicitCastExpr, NullToPointer, const TValue *)
  15: ReturnStmt 0x5612691d53c0 <ltm.c:55:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x5612691d53a8 <col:16, col:25> 'const TValue *' <NullToPointer>
  `-ParenExpr 0x5612691d5388 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5612691d5360 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5612691d5328 <col:24> 'int' 0
return [B2.14];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5612691d4dc0 <ltm.c:51:22> 'const TValue *(Table *, TString *)' Function 0x5612691d1200 'luaH_getstr' 'const TValue *(Table *, TString *)'
luaH_getstr
   2: ImplicitCastExpr 0x5612691d4e98 <ltm.c:51:22> 'const TValue *(*)(Table *, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5612691d4dc0 <col:22> 'const TValue *(Table *, TString *)' Function 0x5612691d1200 'luaH_getstr' 'const TValue *(Table *, TString *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, TString *))
   3: DeclRefExpr 0x5612691d4de8 <ltm.c:51:34> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
events
   4: ImplicitCastExpr 0x5612691d4ee8 <ltm.c:51:34> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5612691d4de8 <col:34> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
[B3.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: DeclRefExpr 0x5612691d4e10 <ltm.c:51:42> 'TString *' lvalue ParmVar 0x5612691d4bb8 'ename' 'TString *'
ename
   6: ImplicitCastExpr 0x5612691d4f00 <ltm.c:51:42> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x5612691d4e10 <col:42> 'TString *' lvalue ParmVar 0x5612691d4bb8 'ename' 'TString *'
[B3.5] (ImplicitCastExpr, LValueToRValue, TString *)
   7: CallExpr 0x5612691d4eb0 <ltm.c:51:22, col:47> 'const TValue *'
|-ImplicitCastExpr 0x5612691d4e98 <col:22> 'const TValue *(*)(Table *, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5612691d4dc0 <col:22> 'const TValue *(Table *, TString *)' Function 0x5612691d1200 'luaH_getstr' 'const TValue *(Table *, TString *)'
|-ImplicitCastExpr 0x5612691d4ee8 <col:34> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5612691d4de8 <col:34> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
`-ImplicitCastExpr 0x5612691d4f00 <col:42> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x5612691d4e10 <col:42> 'TString *' lvalue ParmVar 0x5612691d4bb8 'ename' 'TString *'
[B3.2]([B3.4], [B3.6])
   8: DeclStmt 0x5612691d4f18 <ltm.c:51:3, col:48>col:17
`-VarDecl 0x5612691d4d60 <col:3, col:47> col:17 used tm 'const TValue *' cinit
  `-CallExpr 0x5612691d4eb0 <col:22, col:47> 'const TValue *'
    |-ImplicitCastExpr 0x5612691d4e98 <col:22> 'const TValue *(*)(Table *, TString *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5612691d4dc0 <col:22> 'const TValue *(Table *, TString *)' Function 0x5612691d1200 'luaH_getstr' 'const TValue *(Table *, TString *)'
    |-ImplicitCastExpr 0x5612691d4ee8 <col:34> 'Table *' <LValueToRValue>
    | `-DeclRefExpr 0x5612691d4de8 <col:34> 'Table *' lvalue ParmVar 0x5612691d4ad8 'events' 'Table *'
    `-ImplicitCastExpr 0x5612691d4f00 <col:42> 'TString *' <LValueToRValue>
      `-DeclRefExpr 0x5612691d4e10 <col:42> 'TString *' lvalue ParmVar 0x5612691d4bb8 'ename' 'TString *'
const TValue *tm = luaH_getstr(events, ename);
   9: IntegerLiteral 0x5612691d4f30 <./llimits.h:62:31> 'int' 0
0
  10: CStyleCastExpr 0x5612691d4f60 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5612691d4f30 <col:31> 'int' 0
(void)[B3.9] (CStyleCastExpr, ToVoid, void)
  11: DeclRefExpr 0x5612691d4fa8 <ltm.c:53:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
tm
  12: ImplicitCastExpr 0x5612691d4ff0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5612691d4fd0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5612691d4fa8 <ltm.c:53:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
([B3.11]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  13: MemberExpr 0x5612691d5008 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x561269196b90
`-ImplicitCastExpr 0x5612691d4ff0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5612691d4fd0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5612691d4fa8 <ltm.c:53:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
[B3.12]->tt
  14: ImplicitCastExpr 0x5612691d5080 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5612691d5040 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5612691d5008 <col:19, col:24> 'const int' lvalue ->tt 0x561269196b90
    `-ImplicitCastExpr 0x5612691d4ff0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5612691d4fd0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5612691d4fa8 <ltm.c:53:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
([B3.13]) (ImplicitCastExpr, LValueToRValue, int)
  15: IntegerLiteral 0x5612691d5060 <./lua.h:74:19> 'int' 0
0
  16: BinaryOperator 0x5612691d5098 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5612691d5080 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5612691d5040 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5612691d5008 <col:19, col:24> 'const int' lvalue ->tt 0x561269196b90
|     `-ImplicitCastExpr 0x5612691d4ff0 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5612691d4fd0 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5612691d4fa8 <ltm.c:53:15> 'const TValue *' lvalue Var 0x5612691d4d60 'tm' 'const TValue *'
`-IntegerLiteral 0x5612691d5060 <./lua.h:74:19> 'int' 0
[B3.14] == [B3.15]
   T: if ([B3.16])
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
