static int json_cfg_decode_invalid_numbers(lua_State *l)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: IntegerLiteral 0x563107e06818 <lua_cjson.c:358:12> 'int' 1
1
   2: ReturnStmt 0x563107e06838 <lua_cjson.c:358:5, col:12>
`-IntegerLiteral 0x563107e06818 <col:12> 'int' 1
return [B1.1];
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x563107e067d8 <lua_cjson.c:335:66> 'int' 0
0
   T: do ... while [B2.1]
   Preds (2): B3 B4
   Succs (2): NULL B1

 [B3]
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x563107e06498 <lua_cjson.c:352:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
json_arg_init
   2: ImplicitCastExpr 0x563107e06508 <lua_cjson.c:352:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e06498 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, json_config_t *(*)(lua_State *, int))
   3: DeclRefExpr 0x563107e064c0 <lua_cjson.c:352:40> 'lua_State *' lvalue ParmVar 0x563107e062f0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e06558 <lua_cjson.c:352:40> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e064c0 <col:40> 'lua_State *' lvalue ParmVar 0x563107e062f0 'l' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e064e8 <lua_cjson.c:352:43> 'int' 1
1
   6: CallExpr 0x563107e06520 <lua_cjson.c:352:26, col:44> 'json_config_t *'
|-ImplicitCastExpr 0x563107e06508 <col:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e06498 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
|-ImplicitCastExpr 0x563107e06558 <col:40> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e064c0 <col:40> 'lua_State *' lvalue ParmVar 0x563107e062f0 'l' 'lua_State *'
`-IntegerLiteral 0x563107e064e8 <col:43> 'int' 1
[B4.2]([B4.4], [B4.5])
   7: DeclStmt 0x563107e06570 <lua_cjson.c:352:5, col:45>col:20
`-VarDecl 0x563107e06438 <col:5, col:44> col:20 used cfg 'json_config_t *' cinit
  `-CallExpr 0x563107e06520 <col:26, col:44> 'json_config_t *'
    |-ImplicitCastExpr 0x563107e06508 <col:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563107e06498 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
    |-ImplicitCastExpr 0x563107e06558 <col:40> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x563107e064c0 <col:40> 'lua_State *' lvalue ParmVar 0x563107e062f0 'l' 'lua_State *'
    `-IntegerLiteral 0x563107e064e8 <col:43> 'int' 1
json_config_t *cfg = json_arg_init(l, 1);
   8: DeclRefExpr 0x563107e06588 <lua_cjson.c:354:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
json_enum_option
   9: ImplicitCastExpr 0x563107e06730 <lua_cjson.c:354:5> 'int (*)(lua_State *, int, int *, const char **, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e06588 <col:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
[B4.8] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int *, const char **, int))
  10: DeclRefExpr 0x563107e065b0 <lua_cjson.c:354:22> 'lua_State *' lvalue ParmVar 0x563107e062f0 'l' 'lua_State *'
l
  11: ImplicitCastExpr 0x563107e06798 <lua_cjson.c:354:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e065b0 <col:22> 'lua_State *' lvalue ParmVar 0x563107e062f0 'l' 'lua_State *'
[B4.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x563107e065d8 <lua_cjson.c:354:25> 'int' 1
1
  13: DeclRefExpr 0x563107e065f8 <lua_cjson.c:354:29> 'json_config_t *' lvalue Var 0x563107e06438 'cfg' 'json_config_t *'
cfg
  14: ImplicitCastExpr 0x563107e06620 <lua_cjson.c:354:29> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e065f8 <col:29> 'json_config_t *' lvalue Var 0x563107e06438 'cfg' 'json_config_t *'
[B4.13] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  15: MemberExpr 0x563107e06638 <lua_cjson.c:354:29, col:34> 'int' lvalue ->decode_invalid_numbers 0x563107df12e0
`-ImplicitCastExpr 0x563107e06620 <col:29> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e065f8 <col:29> 'json_config_t *' lvalue Var 0x563107e06438 'cfg' 'json_config_t *'
[B4.14]->decode_invalid_numbers
  16: UnaryOperator 0x563107e06670 <lua_cjson.c:354:28, col:34> 'int *' prefix '&'
`-MemberExpr 0x563107e06638 <col:29, col:34> 'int' lvalue ->decode_invalid_numbers 0x563107df12e0
  `-ImplicitCastExpr 0x563107e06620 <col:29> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e065f8 <col:29> 'json_config_t *' lvalue Var 0x563107e06438 'cfg' 'json_config_t *'
&[B4.15]
  17: IntegerLiteral 0x563107e06690 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  18: CStyleCastExpr 0x563107e066c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x563107e06690 <col:24> 'int' 0
(void *)[B4.17] (CStyleCastExpr, NullToPointer, void *)
  19: ImplicitCastExpr 0x563107e067b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char **' <NullToPointer>
`-ParenExpr 0x563107e066f0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x563107e066c8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x563107e06690 <col:24> 'int' 0
([B4.18]) (ImplicitCastExpr, NullToPointer, const char **)
  20: IntegerLiteral 0x563107e06710 <lua_cjson.c:354:64> 'int' 1
1
  21: CallExpr 0x563107e06748 <lua_cjson.c:354:5, col:65> 'int'
|-ImplicitCastExpr 0x563107e06730 <col:5> 'int (*)(lua_State *, int, int *, const char **, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e06588 <col:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
|-ImplicitCastExpr 0x563107e06798 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e065b0 <col:22> 'lua_State *' lvalue ParmVar 0x563107e062f0 'l' 'lua_State *'
|-IntegerLiteral 0x563107e065d8 <col:25> 'int' 1
|-UnaryOperator 0x563107e06670 <col:28, col:34> 'int *' prefix '&'
| `-MemberExpr 0x563107e06638 <col:29, col:34> 'int' lvalue ->decode_invalid_numbers 0x563107df12e0
|   `-ImplicitCastExpr 0x563107e06620 <col:29> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e065f8 <col:29> 'json_config_t *' lvalue Var 0x563107e06438 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e067b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char **' <NullToPointer>
| `-ParenExpr 0x563107e066f0 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x563107e066c8 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x563107e06690 <col:24> 'int' 0
`-IntegerLiteral 0x563107e06710 <lua_cjson.c:354:64> 'int' 1
[B4.9]([B4.11], [B4.12], [B4.16], [B4.19], [B4.20])
   Preds (1): B5
   Succs (1): B2

 [B0 (EXIT)]
   Preds (1): B1
