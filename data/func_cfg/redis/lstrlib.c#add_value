static void add_value(MatchState *ms, luaL_Buffer *b, const char *s, const char *e)
 [B11 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x55fb421f10c0 <lstrlib.c:640:3> 'void (luaL_Buffer *)':'void (luaL_Buffer *)' Function 0x55fb421ae068 'luaL_addvalue' 'void (luaL_Buffer *)':'void (luaL_Buffer *)'
luaL_addvalue
   2: ImplicitCastExpr 0x55fb421f1110 <lstrlib.c:640:3> 'void (*)(luaL_Buffer *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f10c0 <col:3> 'void (luaL_Buffer *)':'void (luaL_Buffer *)' Function 0x55fb421ae068 'luaL_addvalue' 'void (luaL_Buffer *)':'void (luaL_Buffer *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(luaL_Buffer *))
   3: DeclRefExpr 0x55fb421f10e8 <lstrlib.c:640:17> 'luaL_Buffer *' lvalue ParmVar 0x55fb421ef848 'b' 'luaL_Buffer *'
b
   4: ImplicitCastExpr 0x55fb421f1158 <lstrlib.c:640:17> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f10e8 <col:17> 'luaL_Buffer *' lvalue ParmVar 0x55fb421ef848 'b' 'luaL_Buffer *'
[B1.3] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
   5: CallExpr 0x55fb421f1128 <lstrlib.c:640:3, col:18> 'void'
|-ImplicitCastExpr 0x55fb421f1110 <col:3> 'void (*)(luaL_Buffer *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f10c0 <col:3> 'void (luaL_Buffer *)':'void (luaL_Buffer *)' Function 0x55fb421ae068 'luaL_addvalue' 'void (luaL_Buffer *)':'void (luaL_Buffer *)'
`-ImplicitCastExpr 0x55fb421f1158 <col:17> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421f10e8 <col:17> 'luaL_Buffer *' lvalue ParmVar 0x55fb421ef848 'b' 'luaL_Buffer *'
[B1.2]([B1.4])
   Preds (3): B2 B3 B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55fb421f0cb0 <lstrlib.c:639:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x55fb421f0fb0 <lstrlib.c:639:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0cb0 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x55fb421f0cd8 <lstrlib.c:639:16> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421f1008 <lstrlib.c:639:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0cd8 <col:16> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x55fb421f0d38 <lstrlib.c:639:19> 'char [33]' lvalue "invalid replacement value (a %s)"
"invalid replacement value (a %s)"
   6: ImplicitCastExpr 0x55fb421f1020 <lstrlib.c:639:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55fb421f0d38 <col:19> 'char [33]' lvalue "invalid replacement value (a %s)"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55fb421f1038 <lstrlib.c:639:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55fb421f1020 <col:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55fb421f0d38 <col:19> 'char [33]' lvalue "invalid replacement value (a %s)"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x55fb421f0d80 <./lauxlib.h:109:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x55fb421909a8 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
lua_typename
   9: ImplicitCastExpr 0x55fb421f0f48 <./lauxlib.h:109:28> 'const char *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0d80 <col:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x55fb421909a8 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
[B2.8] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int))
  10: DeclRefExpr 0x55fb421f0da8 <lstrlib.c:639:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x55fb421f0f98 <lstrlib.c:639:69> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0da8 <col:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B2.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: DeclRefExpr 0x55fb421f0dd0 <./lauxlib.h:109:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
  13: ImplicitCastExpr 0x55fb421f0e80 <./lauxlib.h:109:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0dd0 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B2.12] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  14: DeclRefExpr 0x55fb421f0df8 <lstrlib.c:639:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
  15: ImplicitCastExpr 0x55fb421f0ed0 <lstrlib.c:639:69> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0df8 <col:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B2.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: IntegerLiteral 0x55fb421f0e20 <lstrlib.c:639:73> 'int' 1
1
  17: UnaryOperator 0x55fb421f0e40 <lstrlib.c:639:72, col:73> 'int' prefix '-'
`-IntegerLiteral 0x55fb421f0e20 <col:73> 'int' 1
-[B2.16]
  18: CallExpr 0x55fb421f0e98 <./lauxlib.h:109:44, col:58> 'int'
|-ImplicitCastExpr 0x55fb421f0e80 <col:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0dd0 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421f0ed0 <lstrlib.c:639:69> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0df8 <col:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-ParenExpr 0x55fb421f0e60 <./lauxlib.h:109:55, col:57> 'int'
  `-UnaryOperator 0x55fb421f0e40 <lstrlib.c:639:72, col:73> 'int' prefix '-'
    `-IntegerLiteral 0x55fb421f0e20 <col:73> 'int' 1
[B2.13]([B2.15], ([B2.17]))
  19: CallExpr 0x55fb421f0f60 <./lauxlib.h:109:28, col:59> 'const char *'
|-ImplicitCastExpr 0x55fb421f0f48 <col:28> 'const char *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0d80 <col:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x55fb421909a8 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
|-ImplicitCastExpr 0x55fb421f0f98 <lstrlib.c:639:69> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0da8 <col:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-CallExpr 0x55fb421f0e98 <./lauxlib.h:109:44, col:58> 'int'
  |-ImplicitCastExpr 0x55fb421f0e80 <col:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421f0dd0 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x55fb421f0ed0 <lstrlib.c:639:69> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421f0df8 <col:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
  `-ParenExpr 0x55fb421f0e60 <./lauxlib.h:109:55, col:57> 'int'
    `-UnaryOperator 0x55fb421f0e40 <lstrlib.c:639:72, col:73> 'int' prefix '-'
      `-IntegerLiteral 0x55fb421f0e20 <col:73> 'int' 1
[B2.9]([B2.11], [B2.18])
  20: CallExpr 0x55fb421f0fc8 <lstrlib.c:639:5, col:75> 'int'
|-ImplicitCastExpr 0x55fb421f0fb0 <col:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0cb0 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x55fb421f1008 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0cd8 <col:16> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
|-ImplicitCastExpr 0x55fb421f1038 <col:19> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55fb421f1020 <col:19> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55fb421f0d38 <col:19> 'char [33]' lvalue "invalid replacement value (a %s)"
`-CallExpr 0x55fb421f0f60 <./lauxlib.h:109:28, col:59> 'const char *'
  |-ImplicitCastExpr 0x55fb421f0f48 <col:28> 'const char *(*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421f0d80 <col:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x55fb421909a8 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
  |-ImplicitCastExpr 0x55fb421f0f98 <lstrlib.c:639:69> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421f0da8 <col:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
  `-CallExpr 0x55fb421f0e98 <./lauxlib.h:109:44, col:58> 'int'
    |-ImplicitCastExpr 0x55fb421f0e80 <col:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421f0dd0 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
    |-ImplicitCastExpr 0x55fb421f0ed0 <lstrlib.c:639:69> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421f0df8 <col:69> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
    `-ParenExpr 0x55fb421f0e60 <./lauxlib.h:109:55, col:57> 'int'
      `-UnaryOperator 0x55fb421f0e40 <lstrlib.c:639:72, col:73> 'int' prefix '-'
        `-IntegerLiteral 0x55fb421f0e20 <col:73> 'int' 1
[B2.2]([B2.4], [B2.7], [B2.19])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55fb421f0b98 <lstrlib.c:638:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190198 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_isstring
   2: ImplicitCastExpr 0x55fb421f0c28 <lstrlib.c:638:13> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0b98 <col:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190198 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x55fb421f0bc0 <lstrlib.c:638:26> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421f0c78 <lstrlib.c:638:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0bc0 <col:26> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55fb421f0be8 <lstrlib.c:638:30> 'int' 1
1
   6: UnaryOperator 0x55fb421f0c08 <lstrlib.c:638:29, col:30> 'int' prefix '-'
`-IntegerLiteral 0x55fb421f0be8 <col:30> 'int' 1
-[B3.5]
   7: CallExpr 0x55fb421f0c40 <lstrlib.c:638:13, col:31> 'int'
|-ImplicitCastExpr 0x55fb421f0c28 <col:13> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0b98 <col:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190198 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421f0c78 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0bc0 <col:26> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-UnaryOperator 0x55fb421f0c08 <col:29, col:30> 'int' prefix '-'
  `-IntegerLiteral 0x55fb421f0be8 <col:30> 'int' 1
[B3.2]([B3.4], [B3.6])
   8: UnaryOperator 0x55fb421f0c90 <lstrlib.c:638:12, col:31> 'int' prefix '!'
`-CallExpr 0x55fb421f0c40 <col:13, col:31> 'int'
  |-ImplicitCastExpr 0x55fb421f0c28 <col:13> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421f0b98 <col:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190198 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x55fb421f0c78 <col:26> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421f0bc0 <col:26> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
  `-UnaryOperator 0x55fb421f0c08 <col:29, col:30> 'int' prefix '-'
    `-IntegerLiteral 0x55fb421f0be8 <col:30> 'int' 1
![B3.7]
   T: if [B3.8]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55fb421f0858 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218ee80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x55fb421f0950 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0858 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218ee80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55fb421f0880 <lstrlib.c:635:13> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421f09a0 <lstrlib.c:635:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0880 <col:13> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55fb421f08a8 <lstrlib.c:635:16> 'int' 1
1
   6: UnaryOperator 0x55fb421f08e8 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x55fb421f08c8 <col:38, col:40> 'int'
  `-IntegerLiteral 0x55fb421f08a8 <lstrlib.c:635:16> 'int' 1
-([B4.5])
   7: IntegerLiteral 0x55fb421f0908 <./lua.h:254:42> 'int' 1
1
   8: BinaryOperator 0x55fb421f0928 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x55fb421f08e8 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x55fb421f08c8 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x55fb421f08a8 <lstrlib.c:635:16> 'int' 1
`-IntegerLiteral 0x55fb421f0908 <./lua.h:254:42> 'int' 1
[B4.6] - [B4.7]
   9: CallExpr 0x55fb421f0968 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x55fb421f0950 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0858 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218ee80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421f09a0 <lstrlib.c:635:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0880 <col:13> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-BinaryOperator 0x55fb421f0928 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x55fb421f08e8 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x55fb421f08c8 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x55fb421f08a8 <lstrlib.c:635:16> 'int' 1
  `-IntegerLiteral 0x55fb421f0908 <./lua.h:254:42> 'int' 1
[B4.2]([B4.4], [B4.8])
  10: DeclRefExpr 0x55fb421f09b8 <lstrlib.c:636:5> 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)' Function 0x55fb42193808 'lua_pushlstring' 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)'
lua_pushlstring
  11: ImplicitCastExpr 0x55fb421f0ad8 <lstrlib.c:636:5> 'void (*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f09b8 <col:5> 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)' Function 0x55fb42193808 'lua_pushlstring' 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)'
[B4.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, size_t))
  12: DeclRefExpr 0x55fb421f09e0 <lstrlib.c:636:21> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x55fb421f0b30 <lstrlib.c:636:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f09e0 <col:21> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B4.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: DeclRefExpr 0x55fb421f0a08 <lstrlib.c:636:24> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
s
  15: ImplicitCastExpr 0x55fb421f0b48 <lstrlib.c:636:24> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0a08 <col:24> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B4.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: DeclRefExpr 0x55fb421f0a30 <lstrlib.c:636:27> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
e
  17: ImplicitCastExpr 0x55fb421f0a80 <lstrlib.c:636:27> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0a30 <col:27> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B4.16] (ImplicitCastExpr, LValueToRValue, const char *)
  18: DeclRefExpr 0x55fb421f0a58 <lstrlib.c:636:31> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
s
  19: ImplicitCastExpr 0x55fb421f0a98 <lstrlib.c:636:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0a58 <col:31> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B4.18] (ImplicitCastExpr, LValueToRValue, const char *)
  20: BinaryOperator 0x55fb421f0ab0 <lstrlib.c:636:27, col:31> 'long' '-'
|-ImplicitCastExpr 0x55fb421f0a80 <col:27> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0a30 <col:27> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
`-ImplicitCastExpr 0x55fb421f0a98 <col:31> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421f0a58 <col:31> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B4.17] - [B4.19]
  21: ImplicitCastExpr 0x55fb421f0b60 <lstrlib.c:636:27, col:31> 'size_t':'unsigned long' <IntegralCast>
`-BinaryOperator 0x55fb421f0ab0 <col:27, col:31> 'long' '-'
  |-ImplicitCastExpr 0x55fb421f0a80 <col:27> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421f0a30 <col:27> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
  `-ImplicitCastExpr 0x55fb421f0a98 <col:31> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421f0a58 <col:31> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B4.20] (ImplicitCastExpr, IntegralCast, size_t)
  22: CallExpr 0x55fb421f0af0 <lstrlib.c:636:5, col:32> 'void'
|-ImplicitCastExpr 0x55fb421f0ad8 <col:5> 'void (*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f09b8 <col:5> 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)' Function 0x55fb42193808 'lua_pushlstring' 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x55fb421f0b30 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f09e0 <col:21> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
|-ImplicitCastExpr 0x55fb421f0b48 <col:24> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0a08 <col:24> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
`-ImplicitCastExpr 0x55fb421f0b60 <col:27, col:31> 'size_t':'unsigned long' <IntegralCast>
  `-BinaryOperator 0x55fb421f0ab0 <col:27, col:31> 'long' '-'
    |-ImplicitCastExpr 0x55fb421f0a80 <col:27> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421f0a30 <col:27> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
    `-ImplicitCastExpr 0x55fb421f0a98 <col:31> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55fb421f0a58 <col:31> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B4.11]([B4.13], [B4.15], [B4.21])
   Preds (1): B5
   Succs (1): B1

 [B5]
   1: DeclRefExpr 0x55fb421f0740 <lstrlib.c:634:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42191958 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_toboolean
   2: ImplicitCastExpr 0x55fb421f07d0 <lstrlib.c:634:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0740 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42191958 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x55fb421f0768 <lstrlib.c:634:22> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421f0820 <lstrlib.c:634:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0768 <col:22> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55fb421f0790 <lstrlib.c:634:26> 'int' 1
1
   6: UnaryOperator 0x55fb421f07b0 <lstrlib.c:634:25, col:26> 'int' prefix '-'
`-IntegerLiteral 0x55fb421f0790 <col:26> 'int' 1
-[B5.5]
   7: CallExpr 0x55fb421f07e8 <lstrlib.c:634:8, col:27> 'int'
|-ImplicitCastExpr 0x55fb421f07d0 <col:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0740 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42191958 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421f0820 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0768 <col:22> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-UnaryOperator 0x55fb421f07b0 <col:25, col:26> 'int' prefix '-'
  `-IntegerLiteral 0x55fb421f0790 <col:26> 'int' 1
[B5.2]([B5.4], [B5.6])
   8: UnaryOperator 0x55fb421f0838 <lstrlib.c:634:7, col:27> 'int' prefix '!'
`-CallExpr 0x55fb421f07e8 <col:8, col:27> 'int'
  |-ImplicitCastExpr 0x55fb421f07d0 <col:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421f0740 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42191958 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x55fb421f0820 <col:22> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421f0768 <col:22> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
  `-UnaryOperator 0x55fb421f07b0 <col:25, col:26> 'int' prefix '-'
    `-IntegerLiteral 0x55fb421f0790 <col:26> 'int' 1
![B5.7]
   T: if [B5.8]
   Preds (3): B7 B8 B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x55fb421efb08 <lstrlib.c:614:18> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
ms
   2: ImplicitCastExpr 0x55fb421efb30 <lstrlib.c:614:18> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb421efb08 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
[B6.1] (ImplicitCastExpr, LValueToRValue, MatchState *)
   3: MemberExpr 0x55fb421efb60 <lstrlib.c:614:18, col:22> 'lua_State *' lvalue ->L 0x55fb421c36a0
`-ImplicitCastExpr 0x55fb421efb30 <col:18> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421efb08 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
[B6.2]->L
   4: ImplicitCastExpr 0x55fb421efb98 <lstrlib.c:614:18, col:22> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x55fb421efb60 <col:18, col:22> 'lua_State *' lvalue ->L 0x55fb421c36a0
  `-ImplicitCastExpr 0x55fb421efb30 <col:18> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421efb08 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclStmt 0x55fb421efbb0 <lstrlib.c:614:3, col:23>col:14
`-VarDecl 0x55fb421efaa8 <col:3, col:22> col:14 used L 'lua_State *' cinit
  `-ImplicitCastExpr 0x55fb421efb98 <col:18, col:22> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x55fb421efb60 <col:18, col:22> 'lua_State *' lvalue ->L 0x55fb421c36a0
      `-ImplicitCastExpr 0x55fb421efb30 <col:18> 'MatchState *' <LValueToRValue>
        `-DeclRefExpr 0x55fb421efb08 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
lua_State *L = ms->L;
   6: DeclRefExpr 0x55fb421efbc8 <lstrlib.c:615:11> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   7: ImplicitCastExpr 0x55fb421efc38 <lstrlib.c:615:11> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421efbc8 <col:11> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B6.6] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   8: DeclRefExpr 0x55fb421efbf0 <lstrlib.c:615:20> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x55fb421efc88 <lstrlib.c:615:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421efbf0 <col:20> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B6.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: IntegerLiteral 0x55fb421efc18 <lstrlib.c:615:23> 'int' 3
3
  11: CallExpr 0x55fb421efc50 <lstrlib.c:615:11, col:24> 'int'
|-ImplicitCastExpr 0x55fb421efc38 <col:11> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421efbc8 <col:11> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42190720 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421efc88 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421efbf0 <col:20> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-IntegerLiteral 0x55fb421efc18 <col:23> 'int' 3
[B6.7]([B6.9], [B6.10])
   T: switch [B6.11]
   Preds (1): B11
   Succs (5): B7 B8 B9 B10 B5

 [B7]
  case 5:
   1: DeclRefExpr 0x55fb421f04a8 <lstrlib.c:629:7> 'void (MatchState *, int, const char *, const char *)' Function 0x55fb421e4dc0 'push_onecapture' 'void (MatchState *, int, const char *, const char *)'
push_onecapture
   2: ImplicitCastExpr 0x55fb421f0568 <lstrlib.c:629:7> 'void (*)(MatchState *, int, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f04a8 <col:7> 'void (MatchState *, int, const char *, const char *)' Function 0x55fb421e4dc0 'push_onecapture' 'void (MatchState *, int, const char *, const char *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(MatchState *, int, const char *, const char *))
   3: DeclRefExpr 0x55fb421f04d0 <lstrlib.c:629:23> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
ms
   4: ImplicitCastExpr 0x55fb421f05c8 <lstrlib.c:629:23> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f04d0 <col:23> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
[B7.3] (ImplicitCastExpr, LValueToRValue, MatchState *)
   5: IntegerLiteral 0x55fb421f04f8 <lstrlib.c:629:27> 'int' 0
0
   6: DeclRefExpr 0x55fb421f0518 <lstrlib.c:629:30> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
s
   7: ImplicitCastExpr 0x55fb421f05e0 <lstrlib.c:629:30> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0518 <col:30> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B7.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: DeclRefExpr 0x55fb421f0540 <lstrlib.c:629:33> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
e
   9: ImplicitCastExpr 0x55fb421f05f8 <lstrlib.c:629:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0540 <col:33> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B7.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: CallExpr 0x55fb421f0580 <lstrlib.c:629:7, col:34> 'void'
|-ImplicitCastExpr 0x55fb421f0568 <col:7> 'void (*)(MatchState *, int, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f04a8 <col:7> 'void (MatchState *, int, const char *, const char *)' Function 0x55fb421e4dc0 'push_onecapture' 'void (MatchState *, int, const char *, const char *)'
|-ImplicitCastExpr 0x55fb421f05c8 <col:23> 'MatchState *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f04d0 <col:23> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
|-IntegerLiteral 0x55fb421f04f8 <col:27> 'int' 0
|-ImplicitCastExpr 0x55fb421f05e0 <col:30> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0518 <col:30> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
`-ImplicitCastExpr 0x55fb421f05f8 <col:33> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421f0540 <col:33> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B7.2]([B7.4], [B7.5], [B7.7], [B7.9])
  11: DeclRefExpr 0x55fb421f0610 <lstrlib.c:630:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb42194b30 'lua_gettable' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_gettable
  12: ImplicitCastExpr 0x55fb421f0680 <lstrlib.c:630:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0610 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb42194b30 'lua_gettable' 'void (lua_State *, int)':'void (lua_State *, int)'
[B7.11] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  13: DeclRefExpr 0x55fb421f0638 <lstrlib.c:630:20> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x55fb421f06d0 <lstrlib.c:630:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0638 <col:20> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B7.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: IntegerLiteral 0x55fb421f0660 <lstrlib.c:630:23> 'int' 3
3
  16: CallExpr 0x55fb421f0698 <lstrlib.c:630:7, col:24> 'void'
|-ImplicitCastExpr 0x55fb421f0680 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0610 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb42194b30 'lua_gettable' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421f06d0 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0638 <col:20> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-IntegerLiteral 0x55fb421f0660 <col:23> 'int' 3
[B7.12]([B7.14], [B7.15])
   T: break;
   Preds (1): B6
   Succs (1): B5

 [B8]
  case 6:
   1: DeclStmt 0x55fb421f0070 <lstrlib.c:622:7, col:12>col:11
`-VarDecl 0x55fb421f0010 <col:7, col:11> col:11 used n 'int'
int n;
   2: DeclRefExpr 0x55fb421f0088 <lstrlib.c:623:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218f050 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
   3: ImplicitCastExpr 0x55fb421f00f8 <lstrlib.c:623:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0088 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218f050 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B8.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   4: DeclRefExpr 0x55fb421f00b0 <lstrlib.c:623:21> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x55fb421f0148 <lstrlib.c:623:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f00b0 <col:21> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B8.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x55fb421f00d8 <lstrlib.c:623:24> 'int' 3
3
   7: CallExpr 0x55fb421f0110 <lstrlib.c:623:7, col:25> 'void'
|-ImplicitCastExpr 0x55fb421f00f8 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0088 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218f050 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421f0148 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f00b0 <col:21> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
`-IntegerLiteral 0x55fb421f00d8 <col:24> 'int' 3
[B8.3]([B8.5], [B8.6])
   8: DeclRefExpr 0x55fb421f0188 <lstrlib.c:624:11> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
push_captures
   9: ImplicitCastExpr 0x55fb421f0228 <lstrlib.c:624:11> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f0188 <col:11> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
[B8.8] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(MatchState *, const char *, const char *))
  10: DeclRefExpr 0x55fb421f01b0 <lstrlib.c:624:25> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
ms
  11: ImplicitCastExpr 0x55fb421f0280 <lstrlib.c:624:25> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f01b0 <col:25> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
[B8.10] (ImplicitCastExpr, LValueToRValue, MatchState *)
  12: DeclRefExpr 0x55fb421f01d8 <lstrlib.c:624:29> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
s
  13: ImplicitCastExpr 0x55fb421f0298 <lstrlib.c:624:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f01d8 <col:29> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B8.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: DeclRefExpr 0x55fb421f0200 <lstrlib.c:624:32> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
e
  15: ImplicitCastExpr 0x55fb421f02b0 <lstrlib.c:624:32> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0200 <col:32> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B8.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: CallExpr 0x55fb421f0240 <lstrlib.c:624:11, col:33> 'int'
|-ImplicitCastExpr 0x55fb421f0228 <col:11> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f0188 <col:11> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
|-ImplicitCastExpr 0x55fb421f0280 <col:25> 'MatchState *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f01b0 <col:25> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
|-ImplicitCastExpr 0x55fb421f0298 <col:29> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f01d8 <col:29> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
`-ImplicitCastExpr 0x55fb421f02b0 <col:32> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421f0200 <col:32> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B8.9]([B8.11], [B8.13], [B8.15])
  17: DeclRefExpr 0x55fb421f0160 <lstrlib.c:624:7> 'int' lvalue Var 0x55fb421f0010 'n' 'int'
n
  18: BinaryOperator 0x55fb421f02c8 <lstrlib.c:624:7, col:33> 'int' '='
|-DeclRefExpr 0x55fb421f0160 <col:7> 'int' lvalue Var 0x55fb421f0010 'n' 'int'
`-CallExpr 0x55fb421f0240 <col:11, col:33> 'int'
  |-ImplicitCastExpr 0x55fb421f0228 <col:11> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421f0188 <col:11> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
  |-ImplicitCastExpr 0x55fb421f0280 <col:25> 'MatchState *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421f01b0 <col:25> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
  |-ImplicitCastExpr 0x55fb421f0298 <col:29> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421f01d8 <col:29> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
  `-ImplicitCastExpr 0x55fb421f02b0 <col:32> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421f0200 <col:32> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B8.17] = [B8.16]
  19: DeclRefExpr 0x55fb421f02f0 <lstrlib.c:625:7> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55fb42197a70 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_call
  20: ImplicitCastExpr 0x55fb421f0388 <lstrlib.c:625:7> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421f02f0 <col:7> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55fb42197a70 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B8.19] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  21: DeclRefExpr 0x55fb421f0318 <lstrlib.c:625:16> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
L
  22: ImplicitCastExpr 0x55fb421f03e0 <lstrlib.c:625:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0318 <col:16> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
[B8.21] (ImplicitCastExpr, LValueToRValue, lua_State *)
  23: DeclRefExpr 0x55fb421f0340 <lstrlib.c:625:19> 'int' lvalue Var 0x55fb421f0010 'n' 'int'
n
  24: ImplicitCastExpr 0x55fb421f03f8 <lstrlib.c:625:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421f0340 <col:19> 'int' lvalue Var 0x55fb421f0010 'n' 'int'
[B8.23] (ImplicitCastExpr, LValueToRValue, int)
  25: IntegerLiteral 0x55fb421f0368 <lstrlib.c:625:22> 'int' 1
1
  26: CallExpr 0x55fb421f03a0 <lstrlib.c:625:7, col:23> 'void'
|-ImplicitCastExpr 0x55fb421f0388 <col:7> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421f02f0 <col:7> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55fb42197a70 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x55fb421f03e0 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0318 <col:16> 'lua_State *' lvalue Var 0x55fb421efaa8 'L' 'lua_State *'
|-ImplicitCastExpr 0x55fb421f03f8 <col:19> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55fb421f0340 <col:19> 'int' lvalue Var 0x55fb421f0010 'n' 'int'
`-IntegerLiteral 0x55fb421f0368 <col:22> 'int' 1
[B8.20]([B8.22], [B8.24], [B8.25])
   T: break;
   Preds (1): B6
   Succs (1): B5

 [B9]
  case 3:
   Preds (1): B6
   Succs (1): B10

 [B10]
  case 4:
   1: DeclRefExpr 0x55fb421efd80 <lstrlib.c:618:7> 'void (MatchState *, luaL_Buffer *, const char *, const char *)' Function 0x55fb421ed990 'add_s' 'void (MatchState *, luaL_Buffer *, const char *, const char *)'
add_s
   2: ImplicitCastExpr 0x55fb421efea8 <lstrlib.c:618:7> 'void (*)(MatchState *, luaL_Buffer *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421efd80 <col:7> 'void (MatchState *, luaL_Buffer *, const char *, const char *)' Function 0x55fb421ed990 'add_s' 'void (MatchState *, luaL_Buffer *, const char *, const char *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(MatchState *, luaL_Buffer *, const char *, const char *))
   3: DeclRefExpr 0x55fb421efda8 <lstrlib.c:618:13> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
ms
   4: ImplicitCastExpr 0x55fb421eff08 <lstrlib.c:618:13> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb421efda8 <col:13> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
[B10.3] (ImplicitCastExpr, LValueToRValue, MatchState *)
   5: DeclRefExpr 0x55fb421efdd0 <lstrlib.c:618:17> 'luaL_Buffer *' lvalue ParmVar 0x55fb421ef848 'b' 'luaL_Buffer *'
b
   6: ImplicitCastExpr 0x55fb421eff20 <lstrlib.c:618:17> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55fb421efdd0 <col:17> 'luaL_Buffer *' lvalue ParmVar 0x55fb421ef848 'b' 'luaL_Buffer *'
[B10.5] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
   7: DeclRefExpr 0x55fb421efdf8 <lstrlib.c:618:20> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
s
   8: ImplicitCastExpr 0x55fb421eff38 <lstrlib.c:618:20> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421efdf8 <col:20> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
[B10.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: DeclRefExpr 0x55fb421efe20 <lstrlib.c:618:23> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
e
  10: ImplicitCastExpr 0x55fb421eff50 <lstrlib.c:618:23> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421efe20 <col:23> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B10.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: CallExpr 0x55fb421efec0 <lstrlib.c:618:7, col:24> 'void'
|-ImplicitCastExpr 0x55fb421efea8 <col:7> 'void (*)(MatchState *, luaL_Buffer *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421efd80 <col:7> 'void (MatchState *, luaL_Buffer *, const char *, const char *)' Function 0x55fb421ed990 'add_s' 'void (MatchState *, luaL_Buffer *, const char *, const char *)'
|-ImplicitCastExpr 0x55fb421eff08 <col:13> 'MatchState *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421efda8 <col:13> 'MatchState *' lvalue ParmVar 0x55fb421ef7d8 'ms' 'MatchState *'
|-ImplicitCastExpr 0x55fb421eff20 <col:17> 'luaL_Buffer *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421efdd0 <col:17> 'luaL_Buffer *' lvalue ParmVar 0x55fb421ef848 'b' 'luaL_Buffer *'
|-ImplicitCastExpr 0x55fb421eff38 <col:20> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421efdf8 <col:20> 'const char *' lvalue ParmVar 0x55fb421ef8c0 's' 'const char *'
`-ImplicitCastExpr 0x55fb421eff50 <col:23> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421efe20 <col:23> 'const char *' lvalue ParmVar 0x55fb421ef938 'e' 'const char *'
[B10.2]([B10.4], [B10.6], [B10.8], [B10.10])
  12: ReturnStmt 0x55fb421eff68 <lstrlib.c:619:7>
return;
   Preds (2): B6 B9
   Succs (1): B0

 [B0 (EXIT)]
   Preds (2): B1 B10
