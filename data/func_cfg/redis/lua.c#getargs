static int getargs(lua_State *L, char **argv, int n)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x55cfe6361d80 <lua.c:130:10> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
narg
   2: ImplicitCastExpr 0x55cfe6361da8 <lua.c:130:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361d80 <col:10> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x55cfe6361dc0 <lua.c:130:3, col:10>
`-ImplicitCastExpr 0x55cfe6361da8 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6361d80 <col:10> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
return [B1.2];
   Preds (1): B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55cfe63619a8 <lua.c:126:23> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
   2: UnaryOperator 0x55cfe63619d0 <lua.c:126:23, col:24> 'int' postfix '++'
`-DeclRefExpr 0x55cfe63619a8 <col:23> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B2.1]++
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: DeclRefExpr 0x55cfe63619f0 <lua.c:127:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55cfe633d240 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
   2: ImplicitCastExpr 0x55cfe6361ae8 <lua.c:127:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe63619f0 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55cfe633d240 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x55cfe6361a18 <lua.c:127:20> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6361b38 <lua.c:127:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361a18 <col:20> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe6361a40 <lua.c:127:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
argv
   6: ImplicitCastExpr 0x55cfe6361a90 <lua.c:127:23> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361a40 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
[B3.5] (ImplicitCastExpr, LValueToRValue, char **)
   7: DeclRefExpr 0x55cfe6361a68 <lua.c:127:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
   8: ImplicitCastExpr 0x55cfe6361aa8 <lua.c:127:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361a68 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B3.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55cfe6361ac0 <lua.c:127:23, col:29> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe6361a90 <col:23> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361a40 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
`-ImplicitCastExpr 0x55cfe6361aa8 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6361a68 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B3.6][[B3.8]]
  10: ImplicitCastExpr 0x55cfe6361b50 <lua.c:127:23, col:29> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe6361ac0 <col:23, col:29> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe6361a90 <col:23> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6361a40 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
  `-ImplicitCastExpr 0x55cfe6361aa8 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6361a68 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B3.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: ImplicitCastExpr 0x55cfe6361b68 <lua.c:127:23, col:29> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe6361b50 <col:23, col:29> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55cfe6361ac0 <col:23, col:29> 'char *' lvalue
    |-ImplicitCastExpr 0x55cfe6361a90 <col:23> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe6361a40 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
    `-ImplicitCastExpr 0x55cfe6361aa8 <col:28> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55cfe6361a68 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B3.10] (ImplicitCastExpr, BitCast, const char *)
  12: CallExpr 0x55cfe6361b00 <lua.c:127:5, col:30> 'void'
|-ImplicitCastExpr 0x55cfe6361ae8 <col:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe63619f0 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55cfe633d240 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x55cfe6361b38 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361a18 <col:20> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
`-ImplicitCastExpr 0x55cfe6361b68 <col:23, col:29> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe6361b50 <col:23, col:29> 'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55cfe6361ac0 <col:23, col:29> 'char *' lvalue
      |-ImplicitCastExpr 0x55cfe6361a90 <col:23> 'char **' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe6361a40 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
      `-ImplicitCastExpr 0x55cfe6361aa8 <col:28> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55cfe6361a68 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B3.2]([B3.4], [B3.11])
  13: DeclRefExpr 0x55cfe6361b80 <lua.c:128:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55cfe6340e30 'lua_rawseti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_rawseti
  14: ImplicitCastExpr 0x55cfe6361cb8 <lua.c:128:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6361b80 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55cfe6340e30 'lua_rawseti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B3.13] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  15: DeclRefExpr 0x55cfe6361ba8 <lua.c:128:17> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x55cfe6361d10 <lua.c:128:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361ba8 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
[B3.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: IntegerLiteral 0x55cfe6361bd0 <lua.c:128:21> 'int' 2
2
  18: UnaryOperator 0x55cfe6361bf0 <lua.c:128:20, col:21> 'int' prefix '-'
`-IntegerLiteral 0x55cfe6361bd0 <col:21> 'int' 2
-[B3.17]
  19: DeclRefExpr 0x55cfe6361c10 <lua.c:128:24> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
  20: ImplicitCastExpr 0x55cfe6361c60 <lua.c:128:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361c10 <col:24> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B3.19] (ImplicitCastExpr, LValueToRValue, int)
  21: DeclRefExpr 0x55cfe6361c38 <lua.c:128:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
n
  22: ImplicitCastExpr 0x55cfe6361c78 <lua.c:128:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361c38 <col:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
[B3.21] (ImplicitCastExpr, LValueToRValue, int)
  23: BinaryOperator 0x55cfe6361c90 <lua.c:128:24, col:28> 'int' '-'
|-ImplicitCastExpr 0x55cfe6361c60 <col:24> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361c10 <col:24> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
`-ImplicitCastExpr 0x55cfe6361c78 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6361c38 <col:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
[B3.20] - [B3.22]
  24: CallExpr 0x55cfe6361cd0 <lua.c:128:5, col:29> 'void'
|-ImplicitCastExpr 0x55cfe6361cb8 <col:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6361b80 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55cfe6340e30 'lua_rawseti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x55cfe6361d10 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361ba8 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
|-UnaryOperator 0x55cfe6361bf0 <col:20, col:21> 'int' prefix '-'
| `-IntegerLiteral 0x55cfe6361bd0 <col:21> 'int' 2
`-BinaryOperator 0x55cfe6361c90 <col:24, col:28> 'int' '-'
  |-ImplicitCastExpr 0x55cfe6361c60 <col:24> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6361c10 <col:24> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
  `-ImplicitCastExpr 0x55cfe6361c78 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6361c38 <col:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
[B3.14]([B3.16], [B3.18], [B3.23])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55cfe6361900 <lua.c:126:13> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
   2: ImplicitCastExpr 0x55cfe6361950 <lua.c:126:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361900 <col:13> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55cfe6361928 <lua.c:126:17> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
argc
   4: ImplicitCastExpr 0x55cfe6361968 <lua.c:126:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361928 <col:17> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55cfe6361980 <lua.c:126:13, col:17> 'int' '<'
|-ImplicitCastExpr 0x55cfe6361950 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361900 <col:13> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
`-ImplicitCastExpr 0x55cfe6361968 <col:17> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6361928 <col:17> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B4.2] < [B4.4]
   T: for (...; [B4.5]; ...)
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x55cfe6361708 <lua.c:125:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55cfe633ef80 'lua_createtable' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_createtable
   2: ImplicitCastExpr 0x55cfe6361808 <lua.c:125:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6361708 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55cfe633ef80 'lua_createtable' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
   3: DeclRefExpr 0x55cfe6361730 <lua.c:125:19> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6361860 <lua.c:125:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361730 <col:19> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe6361758 <lua.c:125:22> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
narg
   6: ImplicitCastExpr 0x55cfe6361878 <lua.c:125:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361758 <col:22> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
[B5.5] (ImplicitCastExpr, LValueToRValue, int)
   7: DeclRefExpr 0x55cfe6361780 <lua.c:125:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
n
   8: ImplicitCastExpr 0x55cfe63617c8 <lua.c:125:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361780 <col:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
[B5.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55cfe63617a8 <lua.c:125:32> 'int' 1
1
  10: BinaryOperator 0x55cfe63617e0 <lua.c:125:28, col:32> 'int' '+'
|-ImplicitCastExpr 0x55cfe63617c8 <col:28> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361780 <col:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
`-IntegerLiteral 0x55cfe63617a8 <col:32> 'int' 1
[B5.8] + [B5.9]
  11: CallExpr 0x55cfe6361820 <lua.c:125:3, col:33> 'void'
|-ImplicitCastExpr 0x55cfe6361808 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6361708 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55cfe633ef80 'lua_createtable' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x55cfe6361860 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361730 <col:19> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
|-ImplicitCastExpr 0x55cfe6361878 <col:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361758 <col:22> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
`-BinaryOperator 0x55cfe63617e0 <col:28, col:32> 'int' '+'
  |-ImplicitCastExpr 0x55cfe63617c8 <col:28> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6361780 <col:28> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
  `-IntegerLiteral 0x55cfe63617a8 <col:32> 'int' 1
[B5.2]([B5.4], [B5.6], [B5.10])
  12: IntegerLiteral 0x55cfe63618b8 <lua.c:126:10> 'int' 0
0
  13: DeclRefExpr 0x55cfe6361890 <lua.c:126:8> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
  14: BinaryOperator 0x55cfe63618d8 <lua.c:126:8, col:10> 'int' '='
|-DeclRefExpr 0x55cfe6361890 <col:8> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
`-IntegerLiteral 0x55cfe63618b8 <col:10> 'int' 0
[B5.13] = [B5.12]
   Preds (1): B8
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55cfe6361470 <lua.c:123:25> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
   2: UnaryOperator 0x55cfe6361498 <lua.c:123:25, col:26> 'int' postfix '++'
`-DeclRefExpr 0x55cfe6361470 <col:25> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B6.1]++
   Preds (1): B7
   Succs (1): B8

 [B7]
   1: DeclRefExpr 0x55cfe63614b8 <lua.c:124:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55cfe633d240 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
   2: ImplicitCastExpr 0x55cfe6361638 <lua.c:124:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe63614b8 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55cfe633d240 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x55cfe6361510 <lua.c:124:20> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6361688 <lua.c:124:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361510 <col:20> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe6361538 <lua.c:124:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
argv
   6: ImplicitCastExpr 0x55cfe6361588 <lua.c:124:23> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361538 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
[B7.5] (ImplicitCastExpr, LValueToRValue, char **)
   7: DeclRefExpr 0x55cfe6361560 <lua.c:124:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
   8: ImplicitCastExpr 0x55cfe63615a0 <lua.c:124:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361560 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B7.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55cfe63615b8 <lua.c:124:23, col:29> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe6361588 <col:23> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361538 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
`-ImplicitCastExpr 0x55cfe63615a0 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6361560 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B7.6][[B7.8]]
  10: ImplicitCastExpr 0x55cfe63616a0 <lua.c:124:23, col:29> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe63615b8 <col:23, col:29> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe6361588 <col:23> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6361538 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
  `-ImplicitCastExpr 0x55cfe63615a0 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6361560 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B7.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: ImplicitCastExpr 0x55cfe63616b8 <lua.c:124:23, col:29> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe63616a0 <col:23, col:29> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55cfe63615b8 <col:23, col:29> 'char *' lvalue
    |-ImplicitCastExpr 0x55cfe6361588 <col:23> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe6361538 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
    `-ImplicitCastExpr 0x55cfe63615a0 <col:28> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55cfe6361560 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B7.10] (ImplicitCastExpr, BitCast, const char *)
  12: CallExpr 0x55cfe6361650 <lua.c:124:5, col:30> 'void'
|-ImplicitCastExpr 0x55cfe6361638 <col:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe63614b8 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55cfe633d240 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x55cfe6361688 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361510 <col:20> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
`-ImplicitCastExpr 0x55cfe63616b8 <col:23, col:29> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe63616a0 <col:23, col:29> 'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55cfe63615b8 <col:23, col:29> 'char *' lvalue
      |-ImplicitCastExpr 0x55cfe6361588 <col:23> 'char **' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe6361538 <col:23> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
      `-ImplicitCastExpr 0x55cfe63615a0 <col:28> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55cfe6361560 <col:28> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B7.2]([B7.4], [B7.11])
   Preds (1): B8
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x55cfe63613c8 <lua.c:123:15> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
   2: ImplicitCastExpr 0x55cfe6361418 <lua.c:123:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe63613c8 <col:15> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55cfe63613f0 <lua.c:123:19> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
argc
   4: ImplicitCastExpr 0x55cfe6361430 <lua.c:123:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe63613f0 <col:19> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B8.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55cfe6361448 <lua.c:123:15, col:19> 'int' '<'
|-ImplicitCastExpr 0x55cfe6361418 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe63613c8 <col:15> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
`-ImplicitCastExpr 0x55cfe6361430 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63613f0 <col:19> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B8.2] < [B8.4]
   T: for (...; [B8.5]; ...)
   Preds (2): B6 B9
   Succs (2): B7 B5

 [B9]
   1: DeclRefExpr 0x55cfe6360fc0 <lua.c:121:10> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
argc
   2: ImplicitCastExpr 0x55cfe6361090 <lua.c:121:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6360fc0 <col:10> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B9.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55cfe6360fe8 <lua.c:121:18> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
n
   4: ImplicitCastExpr 0x55cfe6361030 <lua.c:121:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6360fe8 <col:18> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
[B9.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55cfe6361010 <lua.c:121:22> 'int' 1
1
   6: BinaryOperator 0x55cfe6361048 <lua.c:121:18, col:22> 'int' '+'
|-ImplicitCastExpr 0x55cfe6361030 <col:18> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6360fe8 <col:18> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
`-IntegerLiteral 0x55cfe6361010 <col:22> 'int' 1
[B9.4] + [B9.5]
   7: BinaryOperator 0x55cfe63610a8 <lua.c:121:10, col:23> 'int' '-'
|-ImplicitCastExpr 0x55cfe6361090 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6360fc0 <col:10> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
`-ParenExpr 0x55cfe6361070 <col:17, col:23> 'int'
  `-BinaryOperator 0x55cfe6361048 <col:18, col:22> 'int' '+'
    |-ImplicitCastExpr 0x55cfe6361030 <col:18> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe6360fe8 <col:18> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
    `-IntegerLiteral 0x55cfe6361010 <col:22> 'int' 1
[B9.2] - ([B9.6])
   8: DeclRefExpr 0x55cfe6360f98 <lua.c:121:3> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
narg
   9: BinaryOperator 0x55cfe63610d0 <lua.c:121:3, col:23> 'int' '='
|-DeclRefExpr 0x55cfe6360f98 <col:3> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
`-BinaryOperator 0x55cfe63610a8 <col:10, col:23> 'int' '-'
  |-ImplicitCastExpr 0x55cfe6361090 <col:10> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6360fc0 <col:10> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
  `-ParenExpr 0x55cfe6361070 <col:17, col:23> 'int'
    `-BinaryOperator 0x55cfe6361048 <col:18, col:22> 'int' '+'
      |-ImplicitCastExpr 0x55cfe6361030 <col:18> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe6360fe8 <col:18> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
      `-IntegerLiteral 0x55cfe6361010 <col:22> 'int' 1
[B9.8] = [B9.7]
  10: DeclRefExpr 0x55cfe63610f8 <lua.c:122:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55cfe634fe00 'luaL_checkstack' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
luaL_checkstack
  11: ImplicitCastExpr 0x55cfe6361250 <lua.c:122:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe63610f8 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55cfe634fe00 'luaL_checkstack' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
[B9.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, const char *))
  12: DeclRefExpr 0x55cfe6361120 <lua.c:122:19> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x55cfe63612a8 <lua.c:122:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361120 <col:19> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
[B9.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: DeclRefExpr 0x55cfe6361148 <lua.c:122:22> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
narg
  15: ImplicitCastExpr 0x55cfe6361190 <lua.c:122:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361148 <col:22> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
[B9.14] (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x55cfe6361170 <lua.c:122:29> 'int' 3
3
  17: BinaryOperator 0x55cfe63611a8 <lua.c:122:22, col:29> 'int' '+'
|-ImplicitCastExpr 0x55cfe6361190 <col:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361148 <col:22> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
`-IntegerLiteral 0x55cfe6361170 <col:29> 'int' 3
[B9.15] + [B9.16]
  18: StringLiteral 0x55cfe6361208 <lua.c:122:32> 'char [29]' lvalue "too many arguments to script"
"too many arguments to script"
  19: ImplicitCastExpr 0x55cfe63612c0 <lua.c:122:32> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55cfe6361208 <col:32> 'char [29]' lvalue "too many arguments to script"
[B9.18] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  20: ImplicitCastExpr 0x55cfe63612d8 <lua.c:122:32> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe63612c0 <col:32> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55cfe6361208 <col:32> 'char [29]' lvalue "too many arguments to script"
[B9.19] (ImplicitCastExpr, BitCast, const char *)
  21: CallExpr 0x55cfe6361268 <lua.c:122:3, col:62> 'void'
|-ImplicitCastExpr 0x55cfe6361250 <col:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe63610f8 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55cfe634fe00 'luaL_checkstack' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x55cfe63612a8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361120 <col:19> 'lua_State *' lvalue ParmVar 0x55cfe63609c0 'L' 'lua_State *'
|-BinaryOperator 0x55cfe63611a8 <col:22, col:29> 'int' '+'
| |-ImplicitCastExpr 0x55cfe6361190 <col:22> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x55cfe6361148 <col:22> 'int' lvalue Var 0x55cfe6360cb8 'narg' 'int'
| `-IntegerLiteral 0x55cfe6361170 <col:29> 'int' 3
`-ImplicitCastExpr 0x55cfe63612d8 <col:32> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe63612c0 <col:32> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55cfe6361208 <col:32> 'char [29]' lvalue "too many arguments to script"
[B9.11]([B9.13], [B9.17], [B9.20])
  22: DeclRefExpr 0x55cfe6361318 <lua.c:123:10> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
n
  23: ImplicitCastExpr 0x55cfe6361360 <lua.c:123:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6361318 <col:10> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
[B9.22] (ImplicitCastExpr, LValueToRValue, int)
  24: IntegerLiteral 0x55cfe6361340 <lua.c:123:12> 'int' 1
1
  25: BinaryOperator 0x55cfe6361378 <lua.c:123:10, col:12> 'int' '+'
|-ImplicitCastExpr 0x55cfe6361360 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6361318 <col:10> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
`-IntegerLiteral 0x55cfe6361340 <col:12> 'int' 1
[B9.23] + [B9.24]
  26: DeclRefExpr 0x55cfe63612f0 <lua.c:123:8> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
i
  27: BinaryOperator 0x55cfe63613a0 <lua.c:123:8, col:12> 'int' '='
|-DeclRefExpr 0x55cfe63612f0 <col:8> 'int' lvalue Var 0x55cfe6360d48 'i' 'int'
`-BinaryOperator 0x55cfe6361378 <col:10, col:12> 'int' '+'
  |-ImplicitCastExpr 0x55cfe6361360 <col:10> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6361318 <col:10> 'int' lvalue ParmVar 0x55cfe6360ab0 'n' 'int'
  `-IntegerLiteral 0x55cfe6361340 <col:12> 'int' 1
[B9.26] = [B9.25]
   Preds (1): B12
   Succs (1): B8

 [B10]
   Preds (1): B11
   Succs (1): B12

 [B11]
   1: DeclRefExpr 0x55cfe6360f30 <lua.c:120:22> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
argc
   2: UnaryOperator 0x55cfe6360f58 <lua.c:120:22, col:26> 'int' postfix '++'
`-DeclRefExpr 0x55cfe6360f30 <col:22> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B11.1]++
   Preds (1): B12
   Succs (1): B10

 [B12]
   1: DeclRefExpr 0x55cfe6360e70 <lua.c:120:10> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
argv
   2: ImplicitCastExpr 0x55cfe6360ec0 <lua.c:120:10> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe6360e70 <col:10> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
[B12.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: DeclRefExpr 0x55cfe6360e98 <lua.c:120:15> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
argc
   4: ImplicitCastExpr 0x55cfe6360ed8 <lua.c:120:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6360e98 <col:15> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B12.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x55cfe6360ef0 <lua.c:120:10, col:19> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe6360ec0 <col:10> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6360e70 <col:10> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
`-ImplicitCastExpr 0x55cfe6360ed8 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6360e98 <col:15> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B12.2][[B12.4]]
   6: ImplicitCastExpr 0x55cfe6360f18 <lua.c:120:10, col:19> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe6360ef0 <col:10, col:19> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe6360ec0 <col:10> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6360e70 <col:10> 'char **' lvalue ParmVar 0x55cfe6360a38 'argv' 'char **'
  `-ImplicitCastExpr 0x55cfe6360ed8 <col:15> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6360e98 <col:15> 'int' lvalue Var 0x55cfe6360dd8 'argc' 'int'
[B12.5] (ImplicitCastExpr, LValueToRValue, char *)
   T: while [B12.6]
   Preds (2): B10 B13
   Succs (2): B11 B9

 [B13]
   1: DeclStmt 0x55cfe6360d18 <lua.c:117:3, col:11>col:7
`-VarDecl 0x55cfe6360cb8 <col:3, col:7> col:7 used narg 'int'
int narg;
   2: DeclStmt 0x55cfe6360da8 <lua.c:118:3, col:8>col:7
`-VarDecl 0x55cfe6360d48 <col:3, col:7> col:7 used i 'int'
int i;
   3: IntegerLiteral 0x55cfe6360e38 <lua.c:119:14> 'int' 0
0
   4: DeclStmt 0x55cfe6360e58 <lua.c:119:3, col:15>col:7
`-VarDecl 0x55cfe6360dd8 <col:3, col:14> col:7 used argc 'int' cinit
  `-IntegerLiteral 0x55cfe6360e38 <col:14> 'int' 0
int argc = 0;
   Preds (1): B14
   Succs (1): B12

 [B0 (EXIT)]
   Preds (1): B1
