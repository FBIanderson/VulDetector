static int str_byte(lua_State *L)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x55fb421c0fd8 <lstrlib.c:121:10> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
n
   2: ImplicitCastExpr 0x55fb421c1000 <lstrlib.c:121:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0fd8 <col:10> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x55fb421c1018 <lstrlib.c:121:3, col:10>
`-ImplicitCastExpr 0x55fb421c1000 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0fd8 <col:10> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
return [B1.2];
   Preds (1): B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55fb421c0c38 <lstrlib.c:119:18> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
i
   2: UnaryOperator 0x55fb421c0c60 <lstrlib.c:119:18, col:19> 'int' postfix '++'
`-DeclRefExpr 0x55fb421c0c38 <col:18> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
[B2.1]++
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: DeclRefExpr 0x55fb421c0c80 <lstrlib.c:120:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x55fb421c0f20 <lstrlib.c:120:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421c0c80 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x55fb421c0ca8 <lstrlib.c:120:21> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421c0f70 <lstrlib.c:120:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0ca8 <col:21> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55fb421c0cd0 <lstrlib.c:120:30> 'const char *' lvalue Var 0x55fb421bf878 's' 'const char *'
s
   6: ImplicitCastExpr 0x55fb421c0e18 <lstrlib.c:120:30> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0cd0 <col:30> 'const char *' lvalue Var 0x55fb421bf878 's' 'const char *'
[B3.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x55fb421c0cf8 <lstrlib.c:120:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
posi
   8: ImplicitCastExpr 0x55fb421c0d48 <lstrlib.c:120:32> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B3.7] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   9: DeclRefExpr 0x55fb421c0d20 <lstrlib.c:120:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
i
  10: ImplicitCastExpr 0x55fb421c0d60 <lstrlib.c:120:37> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
[B3.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ImplicitCastExpr 0x55fb421c0d78 <lstrlib.c:120:37> 'long' <IntegralCast>
`-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
[B3.10] (ImplicitCastExpr, IntegralCast, long)
  12: BinaryOperator 0x55fb421c0d90 <lstrlib.c:120:32, col:37> 'long' '+'
|-ImplicitCastExpr 0x55fb421c0d48 <col:32> 'ptrdiff_t':'long' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c0d78 <col:37> 'long' <IntegralCast>
  `-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
[B3.8] + [B3.11]
  13: IntegerLiteral 0x55fb421c0db8 <lstrlib.c:120:39> 'int' 1
1
  14: ImplicitCastExpr 0x55fb421c0dd8 <lstrlib.c:120:39> 'long' <IntegralCast>
`-IntegerLiteral 0x55fb421c0db8 <col:39> 'int' 1
[B3.13] (ImplicitCastExpr, IntegralCast, long)
  15: BinaryOperator 0x55fb421c0df0 <lstrlib.c:120:32, col:39> 'long' '-'
|-BinaryOperator 0x55fb421c0d90 <col:32, col:37> 'long' '+'
| |-ImplicitCastExpr 0x55fb421c0d48 <col:32> 'ptrdiff_t':'long' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
| `-ImplicitCastExpr 0x55fb421c0d78 <col:37> 'long' <IntegralCast>
|   `-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
`-ImplicitCastExpr 0x55fb421c0dd8 <col:39> 'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421c0db8 <col:39> 'int' 1
[B3.12] - [B3.14]
  16: ArraySubscriptExpr 0x55fb421c0e30 <lstrlib.c:120:30, col:40> 'const char' lvalue
|-ImplicitCastExpr 0x55fb421c0e18 <col:30> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0cd0 <col:30> 'const char *' lvalue Var 0x55fb421bf878 's' 'const char *'
`-BinaryOperator 0x55fb421c0df0 <col:32, col:39> 'long' '-'
  |-BinaryOperator 0x55fb421c0d90 <col:32, col:37> 'long' '+'
  | |-ImplicitCastExpr 0x55fb421c0d48 <col:32> 'ptrdiff_t':'long' <LValueToRValue>
  | | `-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
  | `-ImplicitCastExpr 0x55fb421c0d78 <col:37> 'long' <IntegralCast>
  |   `-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
  `-ImplicitCastExpr 0x55fb421c0dd8 <col:39> 'long' <IntegralCast>
    `-IntegerLiteral 0x55fb421c0db8 <col:39> 'int' 1
[B3.6][[B3.15]]
  17: ImplicitCastExpr 0x55fb421c0ec0 <lstrlib.c:24:41, col:43> 'char' <LValueToRValue>
`-ParenExpr 0x55fb421c0ea0 <col:41, col:43> 'const char' lvalue
  `-ArraySubscriptExpr 0x55fb421c0e30 <line:120:30, col:40> 'const char' lvalue
    |-ImplicitCastExpr 0x55fb421c0e18 <col:30> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421c0cd0 <col:30> 'const char *' lvalue Var 0x55fb421bf878 's' 'const char *'
    `-BinaryOperator 0x55fb421c0df0 <col:32, col:39> 'long' '-'
      |-BinaryOperator 0x55fb421c0d90 <col:32, col:37> 'long' '+'
      | |-ImplicitCastExpr 0x55fb421c0d48 <col:32> 'ptrdiff_t':'long' <LValueToRValue>
      | | `-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
      | `-ImplicitCastExpr 0x55fb421c0d78 <col:37> 'long' <IntegralCast>
      |   `-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
      `-ImplicitCastExpr 0x55fb421c0dd8 <col:39> 'long' <IntegralCast>
        `-IntegerLiteral 0x55fb421c0db8 <col:39> 'int' 1
([B3.16]) (ImplicitCastExpr, LValueToRValue, char)
  18: CStyleCastExpr 0x55fb421c0ed8 <lstrlib.c:24:26, col:43> 'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x55fb421c0ec0 <col:41, col:43> 'char' <LValueToRValue>
  `-ParenExpr 0x55fb421c0ea0 <col:41, col:43> 'const char' lvalue
    `-ArraySubscriptExpr 0x55fb421c0e30 <line:120:30, col:40> 'const char' lvalue
      |-ImplicitCastExpr 0x55fb421c0e18 <col:30> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55fb421c0cd0 <col:30> 'const char *' lvalue Var 0x55fb421bf878 's' 'const char *'
      `-BinaryOperator 0x55fb421c0df0 <col:32, col:39> 'long' '-'
        |-BinaryOperator 0x55fb421c0d90 <col:32, col:37> 'long' '+'
        | |-ImplicitCastExpr 0x55fb421c0d48 <col:32> 'ptrdiff_t':'long' <LValueToRValue>
        | | `-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
        | `-ImplicitCastExpr 0x55fb421c0d78 <col:37> 'long' <IntegralCast>
        |   `-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
        `-ImplicitCastExpr 0x55fb421c0dd8 <col:39> 'long' <IntegralCast>
          `-IntegerLiteral 0x55fb421c0db8 <col:39> 'int' 1
(unsigned char)[B3.17] (CStyleCastExpr, IntegralCast, unsigned char)
  19: ImplicitCastExpr 0x55fb421c0f88 <lstrlib.c:24:25, col:44> 'lua_Integer':'long' <IntegralCast>
`-ParenExpr 0x55fb421c0f00 <col:25, col:44> 'unsigned char'
  `-CStyleCastExpr 0x55fb421c0ed8 <col:26, col:43> 'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x55fb421c0ec0 <col:41, col:43> 'char' <LValueToRValue>
      `-ParenExpr 0x55fb421c0ea0 <col:41, col:43> 'const char' lvalue
        `-ArraySubscriptExpr 0x55fb421c0e30 <line:120:30, col:40> 'const char' lvalue
          |-ImplicitCastExpr 0x55fb421c0e18 <col:30> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x55fb421c0cd0 <col:30> 'const char *' lvalue Var 0x55fb421bf878 's' 'const char *'
          `-BinaryOperator 0x55fb421c0df0 <col:32, col:39> 'long' '-'
            |-BinaryOperator 0x55fb421c0d90 <col:32, col:37> 'long' '+'
            | |-ImplicitCastExpr 0x55fb421c0d48 <col:32> 'ptrdiff_t':'long' <LValueToRValue>
            | | `-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
            | `-ImplicitCastExpr 0x55fb421c0d78 <col:37> 'long' <IntegralCast>
            |   `-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
            |     `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
            `-ImplicitCastExpr 0x55fb421c0dd8 <col:39> 'long' <IntegralCast>
              `-IntegerLiteral 0x55fb421c0db8 <col:39> 'int' 1
([B3.18]) (ImplicitCastExpr, IntegralCast, lua_Integer)
  20: CallExpr 0x55fb421c0f38 <lstrlib.c:120:5, col:42> 'void'
|-ImplicitCastExpr 0x55fb421c0f20 <col:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421c0c80 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x55fb421c0f70 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0ca8 <col:21> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
`-ImplicitCastExpr 0x55fb421c0f88 <line:24:25, col:44> 'lua_Integer':'long' <IntegralCast>
  `-ParenExpr 0x55fb421c0f00 <col:25, col:44> 'unsigned char'
    `-CStyleCastExpr 0x55fb421c0ed8 <col:26, col:43> 'unsigned char' <IntegralCast>
      `-ImplicitCastExpr 0x55fb421c0ec0 <col:41, col:43> 'char' <LValueToRValue>
        `-ParenExpr 0x55fb421c0ea0 <col:41, col:43> 'const char' lvalue
          `-ArraySubscriptExpr 0x55fb421c0e30 <line:120:30, col:40> 'const char' lvalue
            |-ImplicitCastExpr 0x55fb421c0e18 <col:30> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x55fb421c0cd0 <col:30> 'const char *' lvalue Var 0x55fb421bf878 's' 'const char *'
            `-BinaryOperator 0x55fb421c0df0 <col:32, col:39> 'long' '-'
              |-BinaryOperator 0x55fb421c0d90 <col:32, col:37> 'long' '+'
              | |-ImplicitCastExpr 0x55fb421c0d48 <col:32> 'ptrdiff_t':'long' <LValueToRValue>
              | | `-DeclRefExpr 0x55fb421c0cf8 <col:32> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
              | `-ImplicitCastExpr 0x55fb421c0d78 <col:37> 'long' <IntegralCast>
              |   `-ImplicitCastExpr 0x55fb421c0d60 <col:37> 'int' <LValueToRValue>
              |     `-DeclRefExpr 0x55fb421c0d20 <col:37> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
              `-ImplicitCastExpr 0x55fb421c0dd8 <col:39> 'long' <IntegralCast>
                `-IntegerLiteral 0x55fb421c0db8 <col:39> 'int' 1
[B3.2]([B3.4], [B3.19])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55fb421c0b90 <lstrlib.c:119:13> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
i
   2: ImplicitCastExpr 0x55fb421c0be0 <lstrlib.c:119:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0b90 <col:13> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55fb421c0bb8 <lstrlib.c:119:15> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
n
   4: ImplicitCastExpr 0x55fb421c0bf8 <lstrlib.c:119:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0bb8 <col:15> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55fb421c0c10 <lstrlib.c:119:13, col:15> 'int' '<'
|-ImplicitCastExpr 0x55fb421c0be0 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0b90 <col:13> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
`-ImplicitCastExpr 0x55fb421c0bf8 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0bb8 <col:15> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
[B4.2] < [B4.4]
   T: for (...; [B4.5]; ...)
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x55fb421c0948 <lstrlib.c:118:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55fb421a6640 'luaL_checkstack' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
luaL_checkstack
   2: ImplicitCastExpr 0x55fb421c0a68 <lstrlib.c:118:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421c0948 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55fb421a6640 'luaL_checkstack' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x55fb421c0970 <lstrlib.c:118:19> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421c0ac0 <lstrlib.c:118:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0970 <col:19> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55fb421c0998 <lstrlib.c:118:22> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
n
   6: ImplicitCastExpr 0x55fb421c0ad8 <lstrlib.c:118:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0998 <col:22> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
[B5.5] (ImplicitCastExpr, LValueToRValue, int)
   7: StringLiteral 0x55fb421c09c0 <lstrlib.c:118:25> 'char [22]' lvalue "string slice too long"
"string slice too long"
   8: ImplicitCastExpr 0x55fb421c0af0 <lstrlib.c:118:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55fb421c09c0 <col:25> 'char [22]' lvalue "string slice too long"
[B5.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x55fb421c0b08 <lstrlib.c:118:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55fb421c0af0 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55fb421c09c0 <col:25> 'char [22]' lvalue "string slice too long"
[B5.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x55fb421c0a80 <lstrlib.c:118:3, col:48> 'void'
|-ImplicitCastExpr 0x55fb421c0a68 <col:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421c0948 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55fb421a6640 'luaL_checkstack' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x55fb421c0ac0 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0970 <col:19> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
|-ImplicitCastExpr 0x55fb421c0ad8 <col:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0998 <col:22> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
`-ImplicitCastExpr 0x55fb421c0b08 <col:25> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55fb421c0af0 <col:25> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55fb421c09c0 <col:25> 'char [22]' lvalue "string slice too long"
[B5.2]([B5.4], [B5.6], [B5.9])
  11: IntegerLiteral 0x55fb421c0b48 <lstrlib.c:119:10> 'int' 0
0
  12: DeclRefExpr 0x55fb421c0b20 <lstrlib.c:119:8> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
i
  13: BinaryOperator 0x55fb421c0b68 <lstrlib.c:119:8, col:10> 'int' '='
|-DeclRefExpr 0x55fb421c0b20 <col:8> 'int' lvalue Var 0x55fb421bff78 'i' 'int'
`-IntegerLiteral 0x55fb421c0b48 <col:10> 'int' 0
[B5.12] = [B5.11]
   Preds (2): B6 B7
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55fb421c0750 <lstrlib.c:117:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x55fb421c0878 <lstrlib.c:117:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421c0750 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x55fb421c0778 <lstrlib.c:117:16> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421c08c8 <lstrlib.c:117:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0778 <col:16> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x55fb421c07d8 <lstrlib.c:117:19> 'char [22]' lvalue "string slice too long"
"string slice too long"
   6: ImplicitCastExpr 0x55fb421c08e0 <lstrlib.c:117:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55fb421c07d8 <col:19> 'char [22]' lvalue "string slice too long"
[B6.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55fb421c08f8 <lstrlib.c:117:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55fb421c08e0 <col:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55fb421c07d8 <col:19> 'char [22]' lvalue "string slice too long"
[B6.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x55fb421c0890 <lstrlib.c:117:5, col:42> 'int'
|-ImplicitCastExpr 0x55fb421c0878 <col:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421c0750 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x55fb421c08c8 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0778 <col:16> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
`-ImplicitCastExpr 0x55fb421c08f8 <col:19> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55fb421c08e0 <col:19> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55fb421c07d8 <col:19> 'char [22]' lvalue "string slice too long"
[B6.2]([B6.4], [B6.7])
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x55fb421c0468 <lstrlib.c:115:13> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
pose
   2: ImplicitCastExpr 0x55fb421c04b8 <lstrlib.c:115:13> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0468 <col:13> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
[B7.1] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   3: DeclRefExpr 0x55fb421c0490 <lstrlib.c:115:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
posi
   4: ImplicitCastExpr 0x55fb421c04d0 <lstrlib.c:115:21> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0490 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B7.3] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   5: BinaryOperator 0x55fb421c04e8 <lstrlib.c:115:13, col:21> 'long' '-'
|-ImplicitCastExpr 0x55fb421c04b8 <col:13> 'ptrdiff_t':'long' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0468 <col:13> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c04d0 <col:21> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0490 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B7.2] - [B7.4]
   6: IntegerLiteral 0x55fb421c0510 <lstrlib.c:115:28> 'int' 1
1
   7: ImplicitCastExpr 0x55fb421c0530 <lstrlib.c:115:28> 'long' <IntegralCast>
`-IntegerLiteral 0x55fb421c0510 <col:28> 'int' 1
[B7.6] (ImplicitCastExpr, IntegralCast, long)
   8: BinaryOperator 0x55fb421c0548 <lstrlib.c:115:13, col:28> 'long' '+'
|-BinaryOperator 0x55fb421c04e8 <col:13, col:21> 'long' '-'
| |-ImplicitCastExpr 0x55fb421c04b8 <col:13> 'ptrdiff_t':'long' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421c0468 <col:13> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
| `-ImplicitCastExpr 0x55fb421c04d0 <col:21> 'ptrdiff_t':'long' <LValueToRValue>
|   `-DeclRefExpr 0x55fb421c0490 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c0530 <col:28> 'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421c0510 <col:28> 'int' 1
[B7.5] + [B7.7]
   9: CStyleCastExpr 0x55fb421c05d8 <lstrlib.c:115:7, col:29> 'int' <IntegralCast>
`-ParenExpr 0x55fb421c05b8 <col:12, col:29> 'long'
  `-BinaryOperator 0x55fb421c0548 <col:13, col:28> 'long' '+'
    |-BinaryOperator 0x55fb421c04e8 <col:13, col:21> 'long' '-'
    | |-ImplicitCastExpr 0x55fb421c04b8 <col:13> 'ptrdiff_t':'long' <LValueToRValue>
    | | `-DeclRefExpr 0x55fb421c0468 <col:13> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
    | `-ImplicitCastExpr 0x55fb421c04d0 <col:21> 'ptrdiff_t':'long' <LValueToRValue>
    |   `-DeclRefExpr 0x55fb421c0490 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
    `-ImplicitCastExpr 0x55fb421c0530 <col:28> 'long' <IntegralCast>
      `-IntegerLiteral 0x55fb421c0510 <col:28> 'int' 1
(int)([B7.8]) (CStyleCastExpr, IntegralCast, int)
  10: DeclRefExpr 0x55fb421c0440 <lstrlib.c:115:3> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
n
  11: BinaryOperator 0x55fb421c0600 <lstrlib.c:115:3, col:29> 'int' '='
|-DeclRefExpr 0x55fb421c0440 <col:3> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
`-CStyleCastExpr 0x55fb421c05d8 <col:7, col:29> 'int' <IntegralCast>
  `-ParenExpr 0x55fb421c05b8 <col:12, col:29> 'long'
    `-BinaryOperator 0x55fb421c0548 <col:13, col:28> 'long' '+'
      |-BinaryOperator 0x55fb421c04e8 <col:13, col:21> 'long' '-'
      | |-ImplicitCastExpr 0x55fb421c04b8 <col:13> 'ptrdiff_t':'long' <LValueToRValue>
      | | `-DeclRefExpr 0x55fb421c0468 <col:13> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
      | `-ImplicitCastExpr 0x55fb421c04d0 <col:21> 'ptrdiff_t':'long' <LValueToRValue>
      |   `-DeclRefExpr 0x55fb421c0490 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
      `-ImplicitCastExpr 0x55fb421c0530 <col:28> 'long' <IntegralCast>
        `-IntegerLiteral 0x55fb421c0510 <col:28> 'int' 1
[B7.10] = [B7.9]
  12: DeclRefExpr 0x55fb421c0628 <lstrlib.c:116:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
posi
  13: ImplicitCastExpr 0x55fb421c0678 <lstrlib.c:116:7> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0628 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B7.12] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  14: DeclRefExpr 0x55fb421c0650 <lstrlib.c:116:14> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
n
  15: ImplicitCastExpr 0x55fb421c0690 <lstrlib.c:116:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0650 <col:14> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
[B7.14] (ImplicitCastExpr, LValueToRValue, int)
  16: ImplicitCastExpr 0x55fb421c06a8 <lstrlib.c:116:14> 'long' <IntegralCast>
`-ImplicitCastExpr 0x55fb421c0690 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0650 <col:14> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
[B7.15] (ImplicitCastExpr, IntegralCast, long)
  17: BinaryOperator 0x55fb421c06c0 <lstrlib.c:116:7, col:14> 'long' '+'
|-ImplicitCastExpr 0x55fb421c0678 <col:7> 'ptrdiff_t':'long' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0628 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c06a8 <col:14> 'long' <IntegralCast>
  `-ImplicitCastExpr 0x55fb421c0690 <col:14> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55fb421c0650 <col:14> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
[B7.13] + [B7.16]
  18: DeclRefExpr 0x55fb421c06e8 <lstrlib.c:116:19> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
pose
  19: ImplicitCastExpr 0x55fb421c0710 <lstrlib.c:116:19> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c06e8 <col:19> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
[B7.18] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  20: BinaryOperator 0x55fb421c0728 <lstrlib.c:116:7, col:19> 'int' '<='
|-BinaryOperator 0x55fb421c06c0 <col:7, col:14> 'long' '+'
| |-ImplicitCastExpr 0x55fb421c0678 <col:7> 'ptrdiff_t':'long' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421c0628 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
| `-ImplicitCastExpr 0x55fb421c06a8 <col:14> 'long' <IntegralCast>
|   `-ImplicitCastExpr 0x55fb421c0690 <col:14> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55fb421c0650 <col:14> 'int' lvalue Var 0x55fb421bff00 'n' 'int'
`-ImplicitCastExpr 0x55fb421c0710 <col:19> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c06e8 <col:19> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
[B7.17] <= [B7.19]
   T: if [B7.20]
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: IntegerLiteral 0x55fb421c03d0 <lstrlib.c:114:27> 'int' 0
0
   2: ReturnStmt 0x55fb421c03f0 <lstrlib.c:114:20, col:27>
`-IntegerLiteral 0x55fb421c03d0 <col:27> 'int' 0
return [B8.1];
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x55fb421c0328 <lstrlib.c:114:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
posi
   2: ImplicitCastExpr 0x55fb421c0378 <lstrlib.c:114:7> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0328 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B9.1] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   3: DeclRefExpr 0x55fb421c0350 <lstrlib.c:114:14> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
pose
   4: ImplicitCastExpr 0x55fb421c0390 <lstrlib.c:114:14> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0350 <col:14> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
[B9.3] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   5: BinaryOperator 0x55fb421c03a8 <lstrlib.c:114:7, col:14> 'int' '>'
|-ImplicitCastExpr 0x55fb421c0378 <col:7> 'ptrdiff_t':'long' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0328 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c0390 <col:14> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0350 <col:14> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
[B9.2] > [B9.4]
   T: if [B9.5]
   Preds (2): B10 B11
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x55fb421c0270 <lstrlib.c:113:32> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
l
   2: ImplicitCastExpr 0x55fb421c0298 <lstrlib.c:113:32> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0270 <col:32> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B10.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: ImplicitCastExpr 0x55fb421c02b0 <lstrlib.c:113:32> 'ptrdiff_t':'long' <IntegralCast>
`-ImplicitCastExpr 0x55fb421c0298 <col:32> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0270 <col:32> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B10.2] (ImplicitCastExpr, IntegralCast, ptrdiff_t)
   4: DeclRefExpr 0x55fb421c0248 <lstrlib.c:113:25> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
pose
   5: BinaryOperator 0x55fb421c02c8 <lstrlib.c:113:25, col:32> 'ptrdiff_t':'long' '='
|-DeclRefExpr 0x55fb421c0248 <col:25> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c02b0 <col:32> 'ptrdiff_t':'long' <IntegralCast>
  `-ImplicitCastExpr 0x55fb421c0298 <col:32> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55fb421c0270 <col:32> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B10.4] = [B10.3]
   Preds (1): B11
   Succs (1): B9

 [B11]
   1: DeclRefExpr 0x55fb421c0168 <lstrlib.c:113:15> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
pose
   2: ImplicitCastExpr 0x55fb421c01a0 <lstrlib.c:113:15> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0168 <col:15> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
[B11.1] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   3: CStyleCastExpr 0x55fb421c01b8 <lstrlib.c:113:7, col:15> 'size_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55fb421c01a0 <col:15> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c0168 <col:15> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
(size_t)[B11.2] (CStyleCastExpr, IntegralCast, size_t)
   4: DeclRefExpr 0x55fb421c01e0 <lstrlib.c:113:22> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
l
   5: ImplicitCastExpr 0x55fb421c0208 <lstrlib.c:113:22> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c01e0 <col:22> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B11.4] (ImplicitCastExpr, LValueToRValue, size_t)
   6: BinaryOperator 0x55fb421c0220 <lstrlib.c:113:7, col:22> 'int' '>'
|-CStyleCastExpr 0x55fb421c01b8 <col:7, col:15> 'size_t':'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55fb421c01a0 <col:15> 'ptrdiff_t':'long' <LValueToRValue>
|   `-DeclRefExpr 0x55fb421c0168 <col:15> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfc98 'pose' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c0208 <col:22> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c01e0 <col:22> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B11.3] > [B11.5]
   T: if [B11.6]
   Preds (2): B12 B13
   Succs (2): B10 B9

 [B12]
   1: IntegerLiteral 0x55fb421c00d0 <lstrlib.c:112:25> 'int' 1
1
   2: ImplicitCastExpr 0x55fb421c00f0 <lstrlib.c:112:25> 'ptrdiff_t':'long' <IntegralCast>
`-IntegerLiteral 0x55fb421c00d0 <col:25> 'int' 1
[B12.1] (ImplicitCastExpr, IntegralCast, ptrdiff_t)
   3: DeclRefExpr 0x55fb421c00a8 <lstrlib.c:112:18> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
posi
   4: BinaryOperator 0x55fb421c0108 <lstrlib.c:112:18, col:25> 'ptrdiff_t':'long' '='
|-DeclRefExpr 0x55fb421c00a8 <col:18> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c00f0 <col:25> 'ptrdiff_t':'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421c00d0 <col:25> 'int' 1
[B12.3] = [B12.2]
   Preds (1): B13
   Succs (1): B11

 [B13]
   1: DeclStmt 0x55fb421bf848 <lstrlib.c:107:3, col:11>col:10
`-VarDecl 0x55fb421bf7e8 <col:3, col:10> col:10 used l 'size_t':'unsigned long'
size_t l;
   2: DeclRefExpr 0x55fb421bf8d8 <lstrlib.c:108:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   3: ImplicitCastExpr 0x55fb421bf990 <lstrlib.c:108:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421bf8d8 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B13.2] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   4: DeclRefExpr 0x55fb421bf900 <lstrlib.c:108:37> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x55fb421bf9e8 <lstrlib.c:108:37> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421bf900 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
[B13.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x55fb421bf928 <lstrlib.c:108:40> 'int' 1
1
   7: DeclRefExpr 0x55fb421bf948 <lstrlib.c:108:44> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
l
   8: UnaryOperator 0x55fb421bf970 <lstrlib.c:108:43, col:44> 'size_t *' prefix '&'
`-DeclRefExpr 0x55fb421bf948 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
&[B13.7]
   9: CallExpr 0x55fb421bf9a8 <lstrlib.c:108:19, col:45> 'const char *'
|-ImplicitCastExpr 0x55fb421bf990 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421bf8d8 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55fb421bf9e8 <col:37> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421bf900 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
|-IntegerLiteral 0x55fb421bf928 <col:40> 'int' 1
`-UnaryOperator 0x55fb421bf970 <col:43, col:44> 'size_t *' prefix '&'
  `-DeclRefExpr 0x55fb421bf948 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B13.3]([B13.5], [B13.6], [B13.8])
  10: DeclStmt 0x55fb421bfa00 <lstrlib.c:108:3, col:46>col:15
`-VarDecl 0x55fb421bf878 <col:3, col:45> col:15 used s 'const char *' cinit
  `-CallExpr 0x55fb421bf9a8 <col:19, col:45> 'const char *'
    |-ImplicitCastExpr 0x55fb421bf990 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421bf8d8 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
    |-ImplicitCastExpr 0x55fb421bf9e8 <col:37> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421bf900 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
    |-IntegerLiteral 0x55fb421bf928 <col:40> 'int' 1
    `-UnaryOperator 0x55fb421bf970 <col:43, col:44> 'size_t *' prefix '&'
      `-DeclRefExpr 0x55fb421bf948 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
const char *s = luaL_checklstring(L, 1, &l);
  11: DeclRefExpr 0x55fb421bfaa0 <lstrlib.c:109:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
posrelat
  12: ImplicitCastExpr 0x55fb421bfc08 <lstrlib.c:109:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421bfaa0 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
[B13.11] (ImplicitCastExpr, FunctionToPointerDecay, ptrdiff_t (*)(ptrdiff_t, size_t))
  13: DeclRefExpr 0x55fb421bfac8 <lstrlib.c:109:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
luaL_optinteger
  14: ImplicitCastExpr 0x55fb421bfb58 <lstrlib.c:109:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421bfac8 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
[B13.13] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int, lua_Integer))
  15: DeclRefExpr 0x55fb421bfaf0 <lstrlib.c:109:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x55fb421bfbb0 <lstrlib.c:109:45> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421bfaf0 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
[B13.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: IntegerLiteral 0x55fb421bfb18 <lstrlib.c:109:48> 'int' 2
2
  18: IntegerLiteral 0x55fb421bfb38 <lstrlib.c:109:51> 'int' 1
1
  19: ImplicitCastExpr 0x55fb421bfbc8 <lstrlib.c:109:51> 'lua_Integer':'long' <IntegralCast>
`-IntegerLiteral 0x55fb421bfb38 <col:51> 'int' 1
[B13.18] (ImplicitCastExpr, IntegralCast, lua_Integer)
  20: CallExpr 0x55fb421bfb70 <lstrlib.c:109:29, col:52> 'lua_Integer':'long'
|-ImplicitCastExpr 0x55fb421bfb58 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421bfac8 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|-ImplicitCastExpr 0x55fb421bfbb0 <col:45> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421bfaf0 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
|-IntegerLiteral 0x55fb421bfb18 <col:48> 'int' 2
`-ImplicitCastExpr 0x55fb421bfbc8 <col:51> 'lua_Integer':'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421bfb38 <col:51> 'int' 1
[B13.14]([B13.16], [B13.17], [B13.19])
  21: DeclRefExpr 0x55fb421bfbe0 <lstrlib.c:109:55> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
l
  22: ImplicitCastExpr 0x55fb421bfc58 <lstrlib.c:109:55> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421bfbe0 <col:55> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B13.21] (ImplicitCastExpr, LValueToRValue, size_t)
  23: CallExpr 0x55fb421bfc20 <lstrlib.c:109:20, col:56> 'ptrdiff_t':'long'
|-ImplicitCastExpr 0x55fb421bfc08 <col:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421bfaa0 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
|-CallExpr 0x55fb421bfb70 <col:29, col:52> 'lua_Integer':'long'
| |-ImplicitCastExpr 0x55fb421bfb58 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55fb421bfac8 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
| |-ImplicitCastExpr 0x55fb421bfbb0 <col:45> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421bfaf0 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
| |-IntegerLiteral 0x55fb421bfb18 <col:48> 'int' 2
| `-ImplicitCastExpr 0x55fb421bfbc8 <col:51> 'lua_Integer':'long' <IntegralCast>
|   `-IntegerLiteral 0x55fb421bfb38 <col:51> 'int' 1
`-ImplicitCastExpr 0x55fb421bfc58 <col:55> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421bfbe0 <col:55> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B13.12]([B13.20], [B13.22])
  24: DeclStmt 0x55fb421bfc70 <lstrlib.c:109:3, col:57>col:13
`-VarDecl 0x55fb421bfa40 <col:3, col:56> col:13 used posi 'ptrdiff_t':'long' cinit
  `-CallExpr 0x55fb421bfc20 <col:20, col:56> 'ptrdiff_t':'long'
    |-ImplicitCastExpr 0x55fb421bfc08 <col:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421bfaa0 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
    |-CallExpr 0x55fb421bfb70 <col:29, col:52> 'lua_Integer':'long'
    | |-ImplicitCastExpr 0x55fb421bfb58 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb421bfac8 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
    | |-ImplicitCastExpr 0x55fb421bfbb0 <col:45> 'lua_State *' <LValueToRValue>
    | | `-DeclRefExpr 0x55fb421bfaf0 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
    | |-IntegerLiteral 0x55fb421bfb18 <col:48> 'int' 2
    | `-ImplicitCastExpr 0x55fb421bfbc8 <col:51> 'lua_Integer':'long' <IntegralCast>
    |   `-IntegerLiteral 0x55fb421bfb38 <col:51> 'int' 1
    `-ImplicitCastExpr 0x55fb421bfc58 <col:55> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55fb421bfbe0 <col:55> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
ptrdiff_t posi = posrelat(luaL_optinteger(L, 2, 1), l);
  25: DeclRefExpr 0x55fb421bfcf8 <lstrlib.c:110:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
posrelat
  26: ImplicitCastExpr 0x55fb421bfe68 <lstrlib.c:110:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421bfcf8 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
[B13.25] (ImplicitCastExpr, FunctionToPointerDecay, ptrdiff_t (*)(ptrdiff_t, size_t))
  27: DeclRefExpr 0x55fb421bfd20 <lstrlib.c:110:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
luaL_optinteger
  28: ImplicitCastExpr 0x55fb421bfdb8 <lstrlib.c:110:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421bfd20 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
[B13.27] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int, lua_Integer))
  29: DeclRefExpr 0x55fb421bfd48 <lstrlib.c:110:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x55fb421bfe10 <lstrlib.c:110:45> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421bfd48 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
[B13.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: IntegerLiteral 0x55fb421bfd70 <lstrlib.c:110:48> 'int' 3
3
  32: DeclRefExpr 0x55fb421bfd90 <lstrlib.c:110:51> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
posi
  33: ImplicitCastExpr 0x55fb421bfe28 <lstrlib.c:110:51> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421bfd90 <col:51> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B13.32] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  34: CallExpr 0x55fb421bfdd0 <lstrlib.c:110:29, col:55> 'lua_Integer':'long'
|-ImplicitCastExpr 0x55fb421bfdb8 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421bfd20 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|-ImplicitCastExpr 0x55fb421bfe10 <col:45> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421bfd48 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
|-IntegerLiteral 0x55fb421bfd70 <col:48> 'int' 3
`-ImplicitCastExpr 0x55fb421bfe28 <col:51> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421bfd90 <col:51> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B13.28]([B13.30], [B13.31], [B13.33])
  35: DeclRefExpr 0x55fb421bfe40 <lstrlib.c:110:58> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
l
  36: ImplicitCastExpr 0x55fb421bfeb8 <lstrlib.c:110:58> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421bfe40 <col:58> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B13.35] (ImplicitCastExpr, LValueToRValue, size_t)
  37: CallExpr 0x55fb421bfe80 <lstrlib.c:110:20, col:59> 'ptrdiff_t':'long'
|-ImplicitCastExpr 0x55fb421bfe68 <col:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421bfcf8 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
|-CallExpr 0x55fb421bfdd0 <col:29, col:55> 'lua_Integer':'long'
| |-ImplicitCastExpr 0x55fb421bfdb8 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55fb421bfd20 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
| |-ImplicitCastExpr 0x55fb421bfe10 <col:45> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421bfd48 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
| |-IntegerLiteral 0x55fb421bfd70 <col:48> 'int' 3
| `-ImplicitCastExpr 0x55fb421bfe28 <col:51> 'ptrdiff_t':'long' <LValueToRValue>
|   `-DeclRefExpr 0x55fb421bfd90 <col:51> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421bfeb8 <col:58> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421bfe40 <col:58> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
[B13.26]([B13.34], [B13.36])
  38: DeclStmt 0x55fb421bfed0 <lstrlib.c:110:3, col:60>col:13
`-VarDecl 0x55fb421bfc98 <col:3, col:59> col:13 used pose 'ptrdiff_t':'long' cinit
  `-CallExpr 0x55fb421bfe80 <col:20, col:59> 'ptrdiff_t':'long'
    |-ImplicitCastExpr 0x55fb421bfe68 <col:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421bfcf8 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
    |-CallExpr 0x55fb421bfdd0 <col:29, col:55> 'lua_Integer':'long'
    | |-ImplicitCastExpr 0x55fb421bfdb8 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb421bfd20 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
    | |-ImplicitCastExpr 0x55fb421bfe10 <col:45> 'lua_State *' <LValueToRValue>
    | | `-DeclRefExpr 0x55fb421bfd48 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421bf6a0 'L' 'lua_State *'
    | |-IntegerLiteral 0x55fb421bfd70 <col:48> 'int' 3
    | `-ImplicitCastExpr 0x55fb421bfe28 <col:51> 'ptrdiff_t':'long' <LValueToRValue>
    |   `-DeclRefExpr 0x55fb421bfd90 <col:51> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
    `-ImplicitCastExpr 0x55fb421bfeb8 <col:58> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55fb421bfe40 <col:58> 'size_t':'unsigned long' lvalue Var 0x55fb421bf7e8 'l' 'size_t':'unsigned long'
ptrdiff_t pose = posrelat(luaL_optinteger(L, 3, posi), l);
  39: DeclStmt 0x55fb42204fb8 <lstrlib.c:111:7>col:7
`-VarDecl 0x55fb421bff00 <col:3, col:7> col:7 used n 'int'
int n;
  40: DeclStmt 0x55fb42204fa0 <lstrlib.c:111:10>col:10
`-VarDecl 0x55fb421bff78 <col:3, col:10> col:10 used i 'int'
int i;
  41: DeclRefExpr 0x55fb421c0008 <lstrlib.c:112:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
posi
  42: ImplicitCastExpr 0x55fb421c0050 <lstrlib.c:112:7> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421c0008 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
[B13.41] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  43: IntegerLiteral 0x55fb421c0030 <lstrlib.c:112:15> 'int' 0
0
  44: ImplicitCastExpr 0x55fb421c0068 <lstrlib.c:112:15> 'long' <IntegralCast>
`-IntegerLiteral 0x55fb421c0030 <col:15> 'int' 0
[B13.43] (ImplicitCastExpr, IntegralCast, long)
  45: BinaryOperator 0x55fb421c0080 <lstrlib.c:112:7, col:15> 'int' '<='
|-ImplicitCastExpr 0x55fb421c0050 <col:7> 'ptrdiff_t':'long' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c0008 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421bfa40 'posi' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421c0068 <col:15> 'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421c0030 <col:15> 'int' 0
[B13.42] <= [B13.44]
   T: if [B13.45]
   Preds (1): B14
   Succs (2): B12 B11

 [B0 (EXIT)]
   Preds (2): B1 B8
