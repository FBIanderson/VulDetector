static int ll_loadfunc(lua_State *L, const char *path, const char *sym)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x558048c23c80 <./lua.h:260:32> 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)' Function 0x558048bd8998 'lua_pushcclosure' 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)'
lua_pushcclosure
   2: ImplicitCastExpr 0x558048c23d98 <./lua.h:260:32> 'void (*)(lua_State *, lua_CFunction, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c23c80 <col:32> 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)' Function 0x558048bd8998 'lua_pushcclosure' 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_CFunction, int))
   3: DeclRefExpr 0x558048c23ca8 <loadlib.c:303:23> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c23df0 <loadlib.c:303:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c23ca8 <col:23> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x558048c23cd0 <loadlib.c:303:26> 'lua_CFunction':'int (*)(lua_State *)' lvalue Var 0x558048c238c0 'f' 'lua_CFunction':'int (*)(lua_State *)'
f
   6: ImplicitCastExpr 0x558048c23e08 <./lua.h:260:52, col:54> 'lua_CFunction':'int (*)(lua_State *)' <LValueToRValue>
`-ParenExpr 0x558048c23cf8 <col:52, col:54> 'lua_CFunction':'int (*)(lua_State *)' lvalue
  `-DeclRefExpr 0x558048c23cd0 <loadlib.c:303:26> 'lua_CFunction':'int (*)(lua_State *)' lvalue Var 0x558048c238c0 'f' 'lua_CFunction':'int (*)(lua_State *)'
([B1.5]) (ImplicitCastExpr, LValueToRValue, lua_CFunction)
   7: IntegerLiteral 0x558048c23d18 <./lua.h:260:57> 'int' 0
0
   8: CallExpr 0x558048c23db0 <./lua.h:260:32, col:58> 'void'
|-ImplicitCastExpr 0x558048c23d98 <col:32> 'void (*)(lua_State *, lua_CFunction, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c23c80 <col:32> 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)' Function 0x558048bd8998 'lua_pushcclosure' 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)'
|-ImplicitCastExpr 0x558048c23df0 <loadlib.c:303:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c23ca8 <col:23> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
|-ImplicitCastExpr 0x558048c23e08 <./lua.h:260:52, col:54> 'lua_CFunction':'int (*)(lua_State *)' <LValueToRValue>
| `-ParenExpr 0x558048c23cf8 <col:52, col:54> 'lua_CFunction':'int (*)(lua_State *)' lvalue
|   `-DeclRefExpr 0x558048c23cd0 <loadlib.c:303:26> 'lua_CFunction':'int (*)(lua_State *)' lvalue Var 0x558048c238c0 'f' 'lua_CFunction':'int (*)(lua_State *)'
`-IntegerLiteral 0x558048c23d18 <./lua.h:260:57> 'int' 0
[B1.2]([B1.4], [B1.6], [B1.7])
   9: IntegerLiteral 0x558048c23e20 <loadlib.c:304:12> 'int' 0
0
  10: ReturnStmt 0x558048c23e40 <loadlib.c:304:5, col:12>
`-IntegerLiteral 0x558048c23e20 <col:12> 'int' 0
return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x558048c23c10 <loadlib.c:40:18> 'int' 2
2
   2: ReturnStmt 0x558048c23c30 <loadlib.c:302:7, line:40:18>
`-IntegerLiteral 0x558048c23c10 <col:18> 'int' 2
return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x558048c23920 <loadlib.c:300:23> 'lua_CFunction (lua_State *, void *, const char *)' Function 0x558048c20b10 'll_sym' 'lua_CFunction (lua_State *, void *, const char *)'
ll_sym
   2: ImplicitCastExpr 0x558048c23a58 <loadlib.c:300:23> 'lua_CFunction (*)(lua_State *, void *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c23920 <col:23> 'lua_CFunction (lua_State *, void *, const char *)' Function 0x558048c20b10 'll_sym' 'lua_CFunction (lua_State *, void *, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_CFunction (*)(lua_State *, void *, const char *))
   3: DeclRefExpr 0x558048c23948 <loadlib.c:300:30> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c23ab0 <loadlib.c:300:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c23948 <col:30> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x558048c23970 <loadlib.c:300:34> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
reg
   6: ImplicitCastExpr 0x558048c23998 <loadlib.c:300:34> 'void **' <LValueToRValue>
`-DeclRefExpr 0x558048c23970 <col:34> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
[B3.5] (ImplicitCastExpr, LValueToRValue, void **)
   7: UnaryOperator 0x558048c239b0 <loadlib.c:300:33, col:34> 'void *' lvalue prefix '*'
`-ImplicitCastExpr 0x558048c23998 <col:34> 'void **' <LValueToRValue>
  `-DeclRefExpr 0x558048c23970 <col:34> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
*[B3.6]
   8: ImplicitCastExpr 0x558048c23ac8 <loadlib.c:300:33, col:34> 'void *' <LValueToRValue>
`-UnaryOperator 0x558048c239b0 <col:33, col:34> 'void *' lvalue prefix '*'
  `-ImplicitCastExpr 0x558048c23998 <col:34> 'void **' <LValueToRValue>
    `-DeclRefExpr 0x558048c23970 <col:34> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
[B3.7] (ImplicitCastExpr, LValueToRValue, void *)
   9: DeclRefExpr 0x558048c239d0 <loadlib.c:300:39> 'const char *' lvalue ParmVar 0x558048c22fe0 'sym' 'const char *'
sym
  10: ImplicitCastExpr 0x558048c23ae0 <loadlib.c:300:39> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c239d0 <col:39> 'const char *' lvalue ParmVar 0x558048c22fe0 'sym' 'const char *'
[B3.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: CallExpr 0x558048c23a70 <loadlib.c:300:23, col:42> 'lua_CFunction':'int (*)(lua_State *)'
|-ImplicitCastExpr 0x558048c23a58 <col:23> 'lua_CFunction (*)(lua_State *, void *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c23920 <col:23> 'lua_CFunction (lua_State *, void *, const char *)' Function 0x558048c20b10 'll_sym' 'lua_CFunction (lua_State *, void *, const char *)'
|-ImplicitCastExpr 0x558048c23ab0 <col:30> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c23948 <col:30> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
|-ImplicitCastExpr 0x558048c23ac8 <col:33, col:34> 'void *' <LValueToRValue>
| `-UnaryOperator 0x558048c239b0 <col:33, col:34> 'void *' lvalue prefix '*'
|   `-ImplicitCastExpr 0x558048c23998 <col:34> 'void **' <LValueToRValue>
|     `-DeclRefExpr 0x558048c23970 <col:34> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
`-ImplicitCastExpr 0x558048c23ae0 <col:39> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x558048c239d0 <col:39> 'const char *' lvalue ParmVar 0x558048c22fe0 'sym' 'const char *'
[B3.2]([B3.4], [B3.8], [B3.10])
  12: DeclStmt 0x558048c23af8 <loadlib.c:300:5, col:43>col:19
`-VarDecl 0x558048c238c0 <col:5, col:42> col:19 used f 'lua_CFunction':'int (*)(lua_State *)' cinit
  `-CallExpr 0x558048c23a70 <col:23, col:42> 'lua_CFunction':'int (*)(lua_State *)'
    |-ImplicitCastExpr 0x558048c23a58 <col:23> 'lua_CFunction (*)(lua_State *, void *, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x558048c23920 <col:23> 'lua_CFunction (lua_State *, void *, const char *)' Function 0x558048c20b10 'll_sym' 'lua_CFunction (lua_State *, void *, const char *)'
    |-ImplicitCastExpr 0x558048c23ab0 <col:30> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x558048c23948 <col:30> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
    |-ImplicitCastExpr 0x558048c23ac8 <col:33, col:34> 'void *' <LValueToRValue>
    | `-UnaryOperator 0x558048c239b0 <col:33, col:34> 'void *' lvalue prefix '*'
    |   `-ImplicitCastExpr 0x558048c23998 <col:34> 'void **' <LValueToRValue>
    |     `-DeclRefExpr 0x558048c23970 <col:34> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
    `-ImplicitCastExpr 0x558048c23ae0 <col:39> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x558048c239d0 <col:39> 'const char *' lvalue ParmVar 0x558048c22fe0 'sym' 'const char *'
lua_CFunction f = ll_sym(L, *reg, sym);
  13: DeclRefExpr 0x558048c23b10 <loadlib.c:301:9> 'lua_CFunction':'int (*)(lua_State *)' lvalue Var 0x558048c238c0 'f' 'lua_CFunction':'int (*)(lua_State *)'
f
  14: ImplicitCastExpr 0x558048c23bb8 <loadlib.c:301:9> 'lua_CFunction':'int (*)(lua_State *)' <LValueToRValue>
`-DeclRefExpr 0x558048c23b10 <col:9> 'lua_CFunction':'int (*)(lua_State *)' lvalue Var 0x558048c238c0 'f' 'lua_CFunction':'int (*)(lua_State *)'
[B3.13] (ImplicitCastExpr, LValueToRValue, lua_CFunction)
  15: IntegerLiteral 0x558048c23b38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  16: CStyleCastExpr 0x558048c23b70 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558048c23b38 <col:24> 'int' 0
(void *)[B3.15] (CStyleCastExpr, NullToPointer, void *)
  17: ImplicitCastExpr 0x558048c23bd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_CFunction':'int (*)(lua_State *)' <BitCast>
`-ParenExpr 0x558048c23b98 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x558048c23b70 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558048c23b38 <col:24> 'int' 0
([B3.16]) (ImplicitCastExpr, BitCast, lua_CFunction)
  18: BinaryOperator 0x558048c23be8 <loadlib.c:301:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x558048c23bb8 <loadlib.c:301:9> 'lua_CFunction':'int (*)(lua_State *)' <LValueToRValue>
| `-DeclRefExpr 0x558048c23b10 <col:9> 'lua_CFunction':'int (*)(lua_State *)' lvalue Var 0x558048c238c0 'f' 'lua_CFunction':'int (*)(lua_State *)'
`-ImplicitCastExpr 0x558048c23bd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_CFunction':'int (*)(lua_State *)' <BitCast>
  `-ParenExpr 0x558048c23b98 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x558048c23b70 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x558048c23b38 <col:24> 'int' 0
[B3.14] == [B3.17]
   T: if [B3.18]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x558048c23878 <loadlib.c:39:17> 'int' 1
1
   2: ReturnStmt 0x558048c23898 <loadlib.c:298:5, line:39:17>
`-IntegerLiteral 0x558048c23878 <col:17> 'int' 1
return [B4.1];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x558048c23758 <loadlib.c:297:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
reg
   2: ImplicitCastExpr 0x558048c23780 <loadlib.c:297:8> 'void **' <LValueToRValue>
`-DeclRefExpr 0x558048c23758 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
[B5.1] (ImplicitCastExpr, LValueToRValue, void **)
   3: UnaryOperator 0x558048c23798 <loadlib.c:297:7, col:8> 'void *' lvalue prefix '*'
`-ImplicitCastExpr 0x558048c23780 <col:8> 'void **' <LValueToRValue>
  `-DeclRefExpr 0x558048c23758 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
*[B5.2]
   4: ImplicitCastExpr 0x558048c23838 <loadlib.c:297:7, col:8> 'void *' <LValueToRValue>
`-UnaryOperator 0x558048c23798 <col:7, col:8> 'void *' lvalue prefix '*'
  `-ImplicitCastExpr 0x558048c23780 <col:8> 'void **' <LValueToRValue>
    `-DeclRefExpr 0x558048c23758 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
[B5.3] (ImplicitCastExpr, LValueToRValue, void *)
   5: IntegerLiteral 0x558048c237b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x558048c237f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558048c237b8 <col:24> 'int' 0
(void *)[B5.5] (CStyleCastExpr, NullToPointer, void *)
   7: BinaryOperator 0x558048c23850 <loadlib.c:297:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x558048c23838 <loadlib.c:297:7, col:8> 'void *' <LValueToRValue>
| `-UnaryOperator 0x558048c23798 <col:7, col:8> 'void *' lvalue prefix '*'
|   `-ImplicitCastExpr 0x558048c23780 <col:8> 'void **' <LValueToRValue>
|     `-DeclRefExpr 0x558048c23758 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
`-ParenExpr 0x558048c23818 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x558048c237f0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558048c237b8 <col:24> 'int' 0
[B5.4] == ([B5.6])
   T: if [B5.7]
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x558048c235a8 <loadlib.c:296:28> 'void *(lua_State *, const char *)' Function 0x558048c20410 'll_load' 'void *(lua_State *, const char *)'
ll_load
   2: ImplicitCastExpr 0x558048c23678 <loadlib.c:296:28> 'void *(*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c235a8 <col:28> 'void *(lua_State *, const char *)' Function 0x558048c20410 'll_load' 'void *(lua_State *, const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, const char *))
   3: DeclRefExpr 0x558048c235d0 <loadlib.c:296:36> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c236c8 <loadlib.c:296:36> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c235d0 <col:36> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x558048c235f8 <loadlib.c:296:39> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
path
   6: ImplicitCastExpr 0x558048c236e0 <loadlib.c:296:39> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c235f8 <col:39> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
[B6.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x558048c23690 <loadlib.c:296:28, col:43> 'void *'
|-ImplicitCastExpr 0x558048c23678 <col:28> 'void *(*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c235a8 <col:28> 'void *(lua_State *, const char *)' Function 0x558048c20410 'll_load' 'void *(lua_State *, const char *)'
|-ImplicitCastExpr 0x558048c236c8 <col:36> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c235d0 <col:36> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
`-ImplicitCastExpr 0x558048c236e0 <col:39> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x558048c235f8 <col:39> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
[B6.2]([B6.4], [B6.6])
   8: DeclRefExpr 0x558048c23548 <loadlib.c:296:22> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
reg
   9: ImplicitCastExpr 0x558048c23570 <loadlib.c:296:22> 'void **' <LValueToRValue>
`-DeclRefExpr 0x558048c23548 <col:22> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
[B6.8] (ImplicitCastExpr, LValueToRValue, void **)
  10: UnaryOperator 0x558048c23588 <loadlib.c:296:21, col:22> 'void *' lvalue prefix '*'
`-ImplicitCastExpr 0x558048c23570 <col:22> 'void **' <LValueToRValue>
  `-DeclRefExpr 0x558048c23548 <col:22> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
*[B6.9]
  11: BinaryOperator 0x558048c236f8 <loadlib.c:296:21, col:43> 'void *' '='
|-UnaryOperator 0x558048c23588 <col:21, col:22> 'void *' lvalue prefix '*'
| `-ImplicitCastExpr 0x558048c23570 <col:22> 'void **' <LValueToRValue>
|   `-DeclRefExpr 0x558048c23548 <col:22> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
`-CallExpr 0x558048c23690 <col:28, col:43> 'void *'
  |-ImplicitCastExpr 0x558048c23678 <col:28> 'void *(*)(lua_State *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x558048c235a8 <col:28> 'void *(lua_State *, const char *)' Function 0x558048c20410 'll_load' 'void *(lua_State *, const char *)'
  |-ImplicitCastExpr 0x558048c236c8 <col:36> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x558048c235d0 <col:36> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
  `-ImplicitCastExpr 0x558048c236e0 <col:39> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x558048c235f8 <col:39> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
[B6.10] = [B6.7]
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x558048c23248 <loadlib.c:295:16> 'void **(lua_State *, const char *)' Function 0x558048c21218 'll_register' 'void **(lua_State *, const char *)'
ll_register
   2: ImplicitCastExpr 0x558048c23390 <loadlib.c:295:16> 'void **(*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c23248 <col:16> 'void **(lua_State *, const char *)' Function 0x558048c21218 'll_register' 'void **(lua_State *, const char *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void **(*)(lua_State *, const char *))
   3: DeclRefExpr 0x558048c23270 <loadlib.c:295:28> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c233e0 <loadlib.c:295:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c23270 <col:28> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x558048c23298 <loadlib.c:295:31> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
path
   6: ImplicitCastExpr 0x558048c233f8 <loadlib.c:295:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c23298 <col:31> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
[B7.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x558048c233a8 <loadlib.c:295:16, col:35> 'void **'
|-ImplicitCastExpr 0x558048c23390 <col:16> 'void **(*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c23248 <col:16> 'void **(lua_State *, const char *)' Function 0x558048c21218 'll_register' 'void **(lua_State *, const char *)'
|-ImplicitCastExpr 0x558048c233e0 <col:28> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c23270 <col:28> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
`-ImplicitCastExpr 0x558048c233f8 <col:31> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x558048c23298 <col:31> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
[B7.2]([B7.4], [B7.6])
   8: DeclStmt 0x558048c23410 <loadlib.c:295:3, col:36>col:10
`-VarDecl 0x558048c231e8 <col:3, col:35> col:10 used reg 'void **' cinit
  `-CallExpr 0x558048c233a8 <col:16, col:35> 'void **'
    |-ImplicitCastExpr 0x558048c23390 <col:16> 'void **(*)(lua_State *, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x558048c23248 <col:16> 'void **(lua_State *, const char *)' Function 0x558048c21218 'll_register' 'void **(lua_State *, const char *)'
    |-ImplicitCastExpr 0x558048c233e0 <col:28> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x558048c23270 <col:28> 'lua_State *' lvalue ParmVar 0x558048c22ef0 'L' 'lua_State *'
    `-ImplicitCastExpr 0x558048c233f8 <col:31> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x558048c23298 <col:31> 'const char *' lvalue ParmVar 0x558048c22f68 'path' 'const char *'
void **reg = ll_register(L, path);
   9: DeclRefExpr 0x558048c23428 <loadlib.c:296:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
reg
  10: ImplicitCastExpr 0x558048c23450 <loadlib.c:296:8> 'void **' <LValueToRValue>
`-DeclRefExpr 0x558048c23428 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
[B7.9] (ImplicitCastExpr, LValueToRValue, void **)
  11: UnaryOperator 0x558048c23468 <loadlib.c:296:7, col:8> 'void *' lvalue prefix '*'
`-ImplicitCastExpr 0x558048c23450 <col:8> 'void **' <LValueToRValue>
  `-DeclRefExpr 0x558048c23428 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
*[B7.10]
  12: ImplicitCastExpr 0x558048c23508 <loadlib.c:296:7, col:8> 'void *' <LValueToRValue>
`-UnaryOperator 0x558048c23468 <col:7, col:8> 'void *' lvalue prefix '*'
  `-ImplicitCastExpr 0x558048c23450 <col:8> 'void **' <LValueToRValue>
    `-DeclRefExpr 0x558048c23428 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
[B7.11] (ImplicitCastExpr, LValueToRValue, void *)
  13: IntegerLiteral 0x558048c23488 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  14: CStyleCastExpr 0x558048c234c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558048c23488 <col:24> 'int' 0
(void *)[B7.13] (CStyleCastExpr, NullToPointer, void *)
  15: BinaryOperator 0x558048c23520 <loadlib.c:296:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x558048c23508 <loadlib.c:296:7, col:8> 'void *' <LValueToRValue>
| `-UnaryOperator 0x558048c23468 <col:7, col:8> 'void *' lvalue prefix '*'
|   `-ImplicitCastExpr 0x558048c23450 <col:8> 'void **' <LValueToRValue>
|     `-DeclRefExpr 0x558048c23428 <col:8> 'void **' lvalue Var 0x558048c231e8 'reg' 'void **'
`-ParenExpr 0x558048c234e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x558048c234c0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558048c23488 <col:24> 'int' 0
[B7.12] == ([B7.14])
   T: if [B7.15]
   Preds (1): B8
   Succs (2): B6 B5

 [B0 (EXIT)]
   Preds (3): B1 B2 B4
