Closure *luaF_newLclosure(lua_State *L, int nelems, Table *e)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: DeclRefExpr 0x558bbfda88f0 <lfunc.c:40:10> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
c
   2: ImplicitCastExpr 0x558bbfda8918 <lfunc.c:40:10> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda88f0 <col:10> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B1.1] (ImplicitCastExpr, LValueToRValue, Closure *)
   3: ReturnStmt 0x558bbfda8930 <lfunc.c:40:3, col:10>
`-ImplicitCastExpr 0x558bbfda8918 <col:10> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x558bbfda88f0 <col:10> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
return [B1.2];
   Preds (1): B4
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: IntegerLiteral 0x558bbfda8810 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x558bbfda8848 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558bbfda8810 <col:24> 'int' 0
(void *)[B3.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x558bbfda8890 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'UpVal *' <NullToPointer>
`-ParenExpr 0x558bbfda8870 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x558bbfda8848 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558bbfda8810 <col:24> 'int' 0
([B3.2]) (ImplicitCastExpr, NullToPointer, UpVal *)
   4: DeclRefExpr 0x558bbfda8680 <lfunc.c:39:20> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
c
   5: ImplicitCastExpr 0x558bbfda86a8 <lfunc.c:39:20> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda8680 <col:20> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B3.4] (ImplicitCastExpr, LValueToRValue, Closure *)
   6: MemberExpr 0x558bbfda86c0 <lfunc.c:39:20, col:23> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
`-ImplicitCastExpr 0x558bbfda86a8 <col:20> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x558bbfda8680 <col:20> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B3.5]->l
   7: MemberExpr 0x558bbfda86f8 <lfunc.c:39:20, col:25> 'UpVal *[1]' lvalue .upvals 0x558bbfd81608
`-MemberExpr 0x558bbfda86c0 <col:20, col:23> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
  `-ImplicitCastExpr 0x558bbfda86a8 <col:20> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x558bbfda8680 <col:20> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B3.6].upvals
   8: ImplicitCastExpr 0x558bbfda87b8 <lfunc.c:39:20, col:25> 'UpVal **' <ArrayToPointerDecay>
`-MemberExpr 0x558bbfda86f8 <col:20, col:25> 'UpVal *[1]' lvalue .upvals 0x558bbfd81608
  `-MemberExpr 0x558bbfda86c0 <col:20, col:23> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
    `-ImplicitCastExpr 0x558bbfda86a8 <col:20> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x558bbfda8680 <col:20> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B3.7] (ImplicitCastExpr, ArrayToPointerDecay, UpVal **)
   9: DeclRefExpr 0x558bbfda8730 <lfunc.c:39:32> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
nelems
  10: ImplicitCastExpr 0x558bbfda87d0 <lfunc.c:39:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x558bbfda8730 <col:32> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
[B3.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x558bbfda87e8 <lfunc.c:39:20, col:38> 'UpVal *' lvalue
|-ImplicitCastExpr 0x558bbfda87b8 <col:20, col:25> 'UpVal **' <ArrayToPointerDecay>
| `-MemberExpr 0x558bbfda86f8 <col:20, col:25> 'UpVal *[1]' lvalue .upvals 0x558bbfd81608
|   `-MemberExpr 0x558bbfda86c0 <col:20, col:23> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
|     `-ImplicitCastExpr 0x558bbfda86a8 <col:20> 'Closure *' <LValueToRValue>
|       `-DeclRefExpr 0x558bbfda8680 <col:20> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
`-ImplicitCastExpr 0x558bbfda87d0 <col:32> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558bbfda8730 <col:32> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
[B3.8][[B3.10]]
  12: BinaryOperator 0x558bbfda88a8 <lfunc.c:39:20, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'UpVal *' '='
|-ArraySubscriptExpr 0x558bbfda87e8 <lfunc.c:39:20, col:38> 'UpVal *' lvalue
| |-ImplicitCastExpr 0x558bbfda87b8 <col:20, col:25> 'UpVal **' <ArrayToPointerDecay>
| | `-MemberExpr 0x558bbfda86f8 <col:20, col:25> 'UpVal *[1]' lvalue .upvals 0x558bbfd81608
| |   `-MemberExpr 0x558bbfda86c0 <col:20, col:23> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
| |     `-ImplicitCastExpr 0x558bbfda86a8 <col:20> 'Closure *' <LValueToRValue>
| |       `-DeclRefExpr 0x558bbfda8680 <col:20> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
| `-ImplicitCastExpr 0x558bbfda87d0 <col:32> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x558bbfda8730 <col:32> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
`-ImplicitCastExpr 0x558bbfda8890 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'UpVal *' <NullToPointer>
  `-ParenExpr 0x558bbfda8870 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x558bbfda8848 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x558bbfda8810 <col:24> 'int' 0
[B3.11] = [B3.3]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x558bbfda8638 <lfunc.c:39:10> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
nelems
   2: UnaryOperator 0x558bbfda8660 <lfunc.c:39:10, col:16> 'int' postfix '--'
`-DeclRefExpr 0x558bbfda8638 <col:10> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
[B4.1]--
   T: while [B4.2]
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x558bbfda7a00 <./lmem.h:28:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x558bbfd91428 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
luaM_realloc_
   2: ImplicitCastExpr 0x558bbfda7e20 <./lmem.h:28:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558bbfda7a00 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x558bbfd91428 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, size_t, size_t))
   3: DeclRefExpr 0x558bbfda7a28 <lfunc.c:34:44> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558bbfda7e80 <lfunc.c:34:44> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda7a28 <col:44> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x558bbfda7a50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x558bbfda7a88 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558bbfda7a50 <col:24> 'int' 0
(void *)[B5.5] (CStyleCastExpr, NullToPointer, void *)
   7: IntegerLiteral 0x558bbfda7ad0 <./lmem.h:28:49> 'int' 0
0
   8: ImplicitCastExpr 0x558bbfda7e98 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x558bbfda7ad0 <col:49> 'int' 0
[B5.7] (ImplicitCastExpr, IntegralCast, size_t)
   9: UnaryExprOrTypeTraitExpr 0x558bbfda7b00 <./lfunc.h:17:36, col:51> 'unsigned long' sizeof 'LClosure':'struct LClosure'
sizeof(LClosure)
  10: CStyleCastExpr 0x558bbfda7b88 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x558bbfda7b68 <col:26, col:30> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x558bbfda7b00 <./lfunc.h:17:36, col:51> 'unsigned long' sizeof 'LClosure':'struct LClosure'
(int)([B5.9]) (CStyleCastExpr, IntegralCast, int)
  11: UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <./lfunc.h:18:36, col:51> 'unsigned long' sizeof 'TValue *'
sizeof(TValue *)
  12: DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
nelems
  13: ImplicitCastExpr 0x558bbfda7c68 <./lfunc.h:18:54, col:56> 'int' <LValueToRValue>
`-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
  `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
([B5.12]) (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
1
  15: BinaryOperator 0x558bbfda7c80 <./lfunc.h:18:54, col:58> 'int' '-'
|-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
| `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
|   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
`-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
[B5.13] - [B5.14]
  16: ImplicitCastExpr 0x558bbfda7cc8 <./lfunc.h:18:53, col:59> 'unsigned long' <IntegralCast>
`-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
  `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
    |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
    | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
    |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
    `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
([B5.15]) (ImplicitCastExpr, IntegralCast, unsigned long)
  17: BinaryOperator 0x558bbfda7ce0 <./lfunc.h:18:36, col:59> 'unsigned long' '*'
|-UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <col:36, col:51> 'unsigned long' sizeof 'TValue *'
`-ImplicitCastExpr 0x558bbfda7cc8 <col:53, col:59> 'unsigned long' <IntegralCast>
  `-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
    `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
      |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
      | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
      |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
      `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
[B5.11] * [B5.16]
  18: CStyleCastExpr 0x558bbfda7d70 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x558bbfda7d50 <col:26, col:30> 'unsigned long'
  `-BinaryOperator 0x558bbfda7ce0 <./lfunc.h:18:36, col:59> 'unsigned long' '*'
    |-UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <col:36, col:51> 'unsigned long' sizeof 'TValue *'
    `-ImplicitCastExpr 0x558bbfda7cc8 <col:53, col:59> 'unsigned long' <IntegralCast>
      `-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
        `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
          |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
          | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
          |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
          `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
(int)([B5.17]) (CStyleCastExpr, IntegralCast, int)
  19: BinaryOperator 0x558bbfda7db8 <./llimits.h:75:22, col:31> 'int' '+'
|-ParenExpr 0x558bbfda7bb0 <col:22, col:31> 'int'
| `-CStyleCastExpr 0x558bbfda7b88 <col:23, col:30> 'int' <IntegralCast>
|   `-ParenExpr 0x558bbfda7b68 <col:26, col:30> 'unsigned long'
|     `-UnaryExprOrTypeTraitExpr 0x558bbfda7b00 <./lfunc.h:17:36, col:51> 'unsigned long' sizeof 'LClosure':'struct LClosure'
`-ParenExpr 0x558bbfda7d98 <./llimits.h:75:22, col:31> 'int'
  `-CStyleCastExpr 0x558bbfda7d70 <col:23, col:30> 'int' <IntegralCast>
    `-ParenExpr 0x558bbfda7d50 <col:26, col:30> 'unsigned long'
      `-BinaryOperator 0x558bbfda7ce0 <./lfunc.h:18:36, col:59> 'unsigned long' '*'
        |-UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <col:36, col:51> 'unsigned long' sizeof 'TValue *'
        `-ImplicitCastExpr 0x558bbfda7cc8 <col:53, col:59> 'unsigned long' <IntegralCast>
          `-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
            `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
              |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
              | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
              |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
              `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
([B5.10]) + ([B5.18])
  20: ImplicitCastExpr 0x558bbfda7eb0 <./lmem.h:28:52, col:54> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x558bbfda7e00 <col:52, col:54> 'int'
  `-ParenExpr 0x558bbfda7de0 <./lfunc.h:17:25, line:18:61> 'int'
    `-BinaryOperator 0x558bbfda7db8 <./llimits.h:75:22, col:31> 'int' '+'
      |-ParenExpr 0x558bbfda7bb0 <col:22, col:31> 'int'
      | `-CStyleCastExpr 0x558bbfda7b88 <col:23, col:30> 'int' <IntegralCast>
      |   `-ParenExpr 0x558bbfda7b68 <col:26, col:30> 'unsigned long'
      |     `-UnaryExprOrTypeTraitExpr 0x558bbfda7b00 <./lfunc.h:17:36, col:51> 'unsigned long' sizeof 'LClosure':'struct LClosure'
      `-ParenExpr 0x558bbfda7d98 <./llimits.h:75:22, col:31> 'int'
        `-CStyleCastExpr 0x558bbfda7d70 <col:23, col:30> 'int' <IntegralCast>
          `-ParenExpr 0x558bbfda7d50 <col:26, col:30> 'unsigned long'
            `-BinaryOperator 0x558bbfda7ce0 <./lfunc.h:18:36, col:59> 'unsigned long' '*'
              |-UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <col:36, col:51> 'unsigned long' sizeof 'TValue *'
              `-ImplicitCastExpr 0x558bbfda7cc8 <col:53, col:59> 'unsigned long' <IntegralCast>
                `-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
                  `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
                    |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
                    | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
                    |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
                    `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
(([B5.19])) (ImplicitCastExpr, IntegralCast, size_t)
  21: CallExpr 0x558bbfda7e38 <./lmem.h:28:26, col:55> 'void *'
|-ImplicitCastExpr 0x558bbfda7e20 <col:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558bbfda7a00 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x558bbfd91428 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
|-ImplicitCastExpr 0x558bbfda7e80 <lfunc.c:34:44> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558bbfda7a28 <col:44> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
|-ParenExpr 0x558bbfda7ab0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
| `-CStyleCastExpr 0x558bbfda7a88 <col:17, col:24> 'void *' <NullToPointer>
|   `-IntegerLiteral 0x558bbfda7a50 <col:24> 'int' 0
|-ImplicitCastExpr 0x558bbfda7e98 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
| `-IntegerLiteral 0x558bbfda7ad0 <col:49> 'int' 0
`-ImplicitCastExpr 0x558bbfda7eb0 <col:52, col:54> 'size_t':'unsigned long' <IntegralCast>
  `-ParenExpr 0x558bbfda7e00 <col:52, col:54> 'int'
    `-ParenExpr 0x558bbfda7de0 <./lfunc.h:17:25, line:18:61> 'int'
      `-BinaryOperator 0x558bbfda7db8 <./llimits.h:75:22, col:31> 'int' '+'
        |-ParenExpr 0x558bbfda7bb0 <col:22, col:31> 'int'
        | `-CStyleCastExpr 0x558bbfda7b88 <col:23, col:30> 'int' <IntegralCast>
        |   `-ParenExpr 0x558bbfda7b68 <col:26, col:30> 'unsigned long'
        |     `-UnaryExprOrTypeTraitExpr 0x558bbfda7b00 <./lfunc.h:17:36, col:51> 'unsigned long' sizeof 'LClosure':'struct LClosure'
        `-ParenExpr 0x558bbfda7d98 <./llimits.h:75:22, col:31> 'int'
          `-CStyleCastExpr 0x558bbfda7d70 <col:23, col:30> 'int' <IntegralCast>
            `-ParenExpr 0x558bbfda7d50 <col:26, col:30> 'unsigned long'
              `-BinaryOperator 0x558bbfda7ce0 <./lfunc.h:18:36, col:59> 'unsigned long' '*'
                |-UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <col:36, col:51> 'unsigned long' sizeof 'TValue *'
                `-ImplicitCastExpr 0x558bbfda7cc8 <col:53, col:59> 'unsigned long' <IntegralCast>
                  `-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
                    `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
                      |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
                      | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
                      |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
                      `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
[B5.2]([B5.4], ([B5.6]), [B5.8], [B5.20])
  22: CStyleCastExpr 0x558bbfda7f28 <./llimits.h:75:23, col:30> 'Closure *' <BitCast>
`-ParenExpr 0x558bbfda7f08 <col:26, col:30> 'void *'
  `-CallExpr 0x558bbfda7e38 <./lmem.h:28:26, col:55> 'void *'
    |-ImplicitCastExpr 0x558bbfda7e20 <col:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x558bbfda7a00 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x558bbfd91428 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
    |-ImplicitCastExpr 0x558bbfda7e80 <lfunc.c:34:44> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x558bbfda7a28 <col:44> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
    |-ParenExpr 0x558bbfda7ab0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
    | `-CStyleCastExpr 0x558bbfda7a88 <col:17, col:24> 'void *' <NullToPointer>
    |   `-IntegerLiteral 0x558bbfda7a50 <col:24> 'int' 0
    |-ImplicitCastExpr 0x558bbfda7e98 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
    | `-IntegerLiteral 0x558bbfda7ad0 <col:49> 'int' 0
    `-ImplicitCastExpr 0x558bbfda7eb0 <col:52, col:54> 'size_t':'unsigned long' <IntegralCast>
      `-ParenExpr 0x558bbfda7e00 <col:52, col:54> 'int'
        `-ParenExpr 0x558bbfda7de0 <./lfunc.h:17:25, line:18:61> 'int'
          `-BinaryOperator 0x558bbfda7db8 <./llimits.h:75:22, col:31> 'int' '+'
            |-ParenExpr 0x558bbfda7bb0 <col:22, col:31> 'int'
            | `-CStyleCastExpr 0x558bbfda7b88 <col:23, col:30> 'int' <IntegralCast>
            |   `-ParenExpr 0x558bbfda7b68 <col:26, col:30> 'unsigned long'
            |     `-UnaryExprOrTypeTraitExpr 0x558bbfda7b00 <./lfunc.h:17:36, col:51> 'unsigned long' sizeof 'LClosure':'struct LClosure'
            `-ParenExpr 0x558bbfda7d98 <./llimits.h:75:22, col:31> 'int'
              `-CStyleCastExpr 0x558bbfda7d70 <col:23, col:30> 'int' <IntegralCast>
                `-ParenExpr 0x558bbfda7d50 <col:26, col:30> 'unsigned long'
                  `-BinaryOperator 0x558bbfda7ce0 <./lfunc.h:18:36, col:59> 'unsigned long' '*'
                    |-UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <col:36, col:51> 'unsigned long' sizeof 'TValue *'
                    `-ImplicitCastExpr 0x558bbfda7cc8 <col:53, col:59> 'unsigned long' <IntegralCast>
                      `-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
                        `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
                          |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
                          | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
                          |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
                          `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
(Closure *)([B5.21]) (CStyleCastExpr, BitCast, Closure *)
  23: DeclStmt 0x558bbfda7ff8 <lfunc.c:34:3, col:69>col:12
`-VarDecl 0x558bbfda7380 <col:3, ./llimits.h:75:31> lfunc.c:34:12 used c 'Closure *' cinit
  `-ParenExpr 0x558bbfda7f50 <./llimits.h:75:22, col:31> 'Closure *'
    `-CStyleCastExpr 0x558bbfda7f28 <col:23, col:30> 'Closure *' <BitCast>
      `-ParenExpr 0x558bbfda7f08 <col:26, col:30> 'void *'
        `-CallExpr 0x558bbfda7e38 <./lmem.h:28:26, col:55> 'void *'
          |-ImplicitCastExpr 0x558bbfda7e20 <col:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x558bbfda7a00 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x558bbfd91428 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
          |-ImplicitCastExpr 0x558bbfda7e80 <lfunc.c:34:44> 'lua_State *' <LValueToRValue>
          | `-DeclRefExpr 0x558bbfda7a28 <col:44> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
          |-ParenExpr 0x558bbfda7ab0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
          | `-CStyleCastExpr 0x558bbfda7a88 <col:17, col:24> 'void *' <NullToPointer>
          |   `-IntegerLiteral 0x558bbfda7a50 <col:24> 'int' 0
          |-ImplicitCastExpr 0x558bbfda7e98 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
          | `-IntegerLiteral 0x558bbfda7ad0 <col:49> 'int' 0
          `-ImplicitCastExpr 0x558bbfda7eb0 <col:52, col:54> 'size_t':'unsigned long' <IntegralCast>
            `-ParenExpr 0x558bbfda7e00 <col:52, col:54> 'int'
              `-ParenExpr 0x558bbfda7de0 <./lfunc.h:17:25, line:18:61> 'int'
                `-BinaryOperator 0x558bbfda7db8 <./llimits.h:75:22, col:31> 'int' '+'
                  |-ParenExpr 0x558bbfda7bb0 <col:22, col:31> 'int'
                  | `-CStyleCastExpr 0x558bbfda7b88 <col:23, col:30> 'int' <IntegralCast>
                  |   `-ParenExpr 0x558bbfda7b68 <col:26, col:30> 'unsigned long'
                  |     `-UnaryExprOrTypeTraitExpr 0x558bbfda7b00 <./lfunc.h:17:36, col:51> 'unsigned long' sizeof 'LClosure':'struct LClosure'
                  `-ParenExpr 0x558bbfda7d98 <./llimits.h:75:22, col:31> 'int'
                    `-CStyleCastExpr 0x558bbfda7d70 <col:23, col:30> 'int' <IntegralCast>
                      `-ParenExpr 0x558bbfda7d50 <col:26, col:30> 'unsigned long'
                        `-BinaryOperator 0x558bbfda7ce0 <./lfunc.h:18:36, col:59> 'unsigned long' '*'
                          |-UnaryExprOrTypeTraitExpr 0x558bbfda7be0 <col:36, col:51> 'unsigned long' sizeof 'TValue *'
                          `-ImplicitCastExpr 0x558bbfda7cc8 <col:53, col:59> 'unsigned long' <IntegralCast>
                            `-ParenExpr 0x558bbfda7ca8 <col:53, col:59> 'int'
                              `-BinaryOperator 0x558bbfda7c80 <col:54, col:58> 'int' '-'
                                |-ImplicitCastExpr 0x558bbfda7c68 <col:54, col:56> 'int' <LValueToRValue>
                                | `-ParenExpr 0x558bbfda7c28 <col:54, col:56> 'int' lvalue
                                |   `-DeclRefExpr 0x558bbfda7c00 <lfunc.c:34:60> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
                                `-IntegerLiteral 0x558bbfda7c48 <./lfunc.h:18:58> 'int' 1
Closure *c = ((Closure *)(luaM_realloc_(L, ((void *)0), 0, ((((int)(sizeof(LClosure))) + ((int)(sizeof(TValue *) * ((nelems) - 1))))))));
  24: DeclRefExpr 0x558bbfda8010 <lfunc.c:35:3> 'void (lua_State *, GCObject *, lu_byte)' Function 0x558bbfd907c0 'luaC_link' 'void (lua_State *, GCObject *, lu_byte)'
luaC_link
  25: ImplicitCastExpr 0x558bbfda81a8 <lfunc.c:35:3> 'void (*)(lua_State *, GCObject *, lu_byte)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558bbfda8010 <col:3> 'void (lua_State *, GCObject *, lu_byte)' Function 0x558bbfd907c0 'luaC_link' 'void (lua_State *, GCObject *, lu_byte)'
[B5.24] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, GCObject *, lu_byte))
  26: DeclRefExpr 0x558bbfda8038 <lfunc.c:35:13> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
L
  27: ImplicitCastExpr 0x558bbfda8200 <lfunc.c:35:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda8038 <col:13> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
[B5.26] (ImplicitCastExpr, LValueToRValue, lua_State *)
  28: DeclRefExpr 0x558bbfda8060 <lfunc.c:35:24> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
c
  29: ImplicitCastExpr 0x558bbfda8108 <./llimits.h:75:26, col:30> 'Closure *' <LValueToRValue>
`-ParenExpr 0x558bbfda80e8 <col:26, col:30> 'Closure *' lvalue
  `-ParenExpr 0x558bbfda8088 <./lstate.h:162:38, col:40> 'Closure *' lvalue
    `-DeclRefExpr 0x558bbfda8060 <lfunc.c:35:24> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
(([B5.28])) (ImplicitCastExpr, LValueToRValue, Closure *)
  30: CStyleCastExpr 0x558bbfda8120 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x558bbfda8108 <col:26, col:30> 'Closure *' <LValueToRValue>
  `-ParenExpr 0x558bbfda80e8 <col:26, col:30> 'Closure *' lvalue
    `-ParenExpr 0x558bbfda8088 <./lstate.h:162:38, col:40> 'Closure *' lvalue
      `-DeclRefExpr 0x558bbfda8060 <lfunc.c:35:24> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
(GCObject *)[B5.29] (CStyleCastExpr, BitCast, GCObject *)
  31: IntegerLiteral 0x558bbfda8188 <./lua.h:80:24> 'int' 6
6
  32: ImplicitCastExpr 0x558bbfda8218 <./lua.h:80:24> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x558bbfda8188 <col:24> 'int' 6
[B5.31] (ImplicitCastExpr, IntegralCast, lu_byte)
  33: CallExpr 0x558bbfda81c0 <lfunc.c:35:3, col:41> 'void'
|-ImplicitCastExpr 0x558bbfda81a8 <col:3> 'void (*)(lua_State *, GCObject *, lu_byte)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558bbfda8010 <col:3> 'void (lua_State *, GCObject *, lu_byte)' Function 0x558bbfd907c0 'luaC_link' 'void (lua_State *, GCObject *, lu_byte)'
|-ImplicitCastExpr 0x558bbfda8200 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558bbfda8038 <col:13> 'lua_State *' lvalue ParmVar 0x558bbfda70f0 'L' 'lua_State *'
|-ParenExpr 0x558bbfda8168 <./lstate.h:162:20, col:42> 'GCObject *'
| `-ParenExpr 0x558bbfda8148 <./llimits.h:75:22, col:31> 'GCObject *'
|   `-CStyleCastExpr 0x558bbfda8120 <col:23, col:30> 'GCObject *' <BitCast>
|     `-ImplicitCastExpr 0x558bbfda8108 <col:26, col:30> 'Closure *' <LValueToRValue>
|       `-ParenExpr 0x558bbfda80e8 <col:26, col:30> 'Closure *' lvalue
|         `-ParenExpr 0x558bbfda8088 <./lstate.h:162:38, col:40> 'Closure *' lvalue
|           `-DeclRefExpr 0x558bbfda8060 <lfunc.c:35:24> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
`-ImplicitCastExpr 0x558bbfda8218 <./lua.h:80:24> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x558bbfda8188 <col:24> 'int' 6
[B5.25]([B5.27], (([B5.30])), [B5.32])
  34: IntegerLiteral 0x558bbfda82e0 <lfunc.c:36:14> 'int' 0
0
  35: ImplicitCastExpr 0x558bbfda8300 <lfunc.c:36:14> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x558bbfda82e0 <col:14> 'int' 0
[B5.34] (ImplicitCastExpr, IntegralCast, lu_byte)
  36: DeclRefExpr 0x558bbfda8230 <lfunc.c:36:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
c
  37: ImplicitCastExpr 0x558bbfda8258 <lfunc.c:36:3> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda8230 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.36] (ImplicitCastExpr, LValueToRValue, Closure *)
  38: MemberExpr 0x558bbfda8270 <lfunc.c:36:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
`-ImplicitCastExpr 0x558bbfda8258 <col:3> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x558bbfda8230 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.37]->l
  39: MemberExpr 0x558bbfda82a8 <lfunc.c:36:3, col:8> 'lu_byte':'unsigned char' lvalue .isC 0x558bbfd81328
`-MemberExpr 0x558bbfda8270 <col:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
  `-ImplicitCastExpr 0x558bbfda8258 <col:3> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x558bbfda8230 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.38].isC
  40: BinaryOperator 0x558bbfda8318 <lfunc.c:36:3, col:14> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x558bbfda82a8 <col:3, col:8> 'lu_byte':'unsigned char' lvalue .isC 0x558bbfd81328
| `-MemberExpr 0x558bbfda8270 <col:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
|   `-ImplicitCastExpr 0x558bbfda8258 <col:3> 'Closure *' <LValueToRValue>
|     `-DeclRefExpr 0x558bbfda8230 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
`-ImplicitCastExpr 0x558bbfda8300 <col:14> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x558bbfda82e0 <col:14> 'int' 0
[B5.39] = [B5.35]
  41: DeclRefExpr 0x558bbfda83f0 <lfunc.c:37:14> 'Table *' lvalue ParmVar 0x558bbfda71d8 'e' 'Table *'
e
  42: ImplicitCastExpr 0x558bbfda8418 <lfunc.c:37:14> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda83f0 <col:14> 'Table *' lvalue ParmVar 0x558bbfda71d8 'e' 'Table *'
[B5.41] (ImplicitCastExpr, LValueToRValue, Table *)
  43: DeclRefExpr 0x558bbfda8340 <lfunc.c:37:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
c
  44: ImplicitCastExpr 0x558bbfda8368 <lfunc.c:37:3> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda8340 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.43] (ImplicitCastExpr, LValueToRValue, Closure *)
  45: MemberExpr 0x558bbfda8380 <lfunc.c:37:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
`-ImplicitCastExpr 0x558bbfda8368 <col:3> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x558bbfda8340 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.44]->l
  46: MemberExpr 0x558bbfda83b8 <lfunc.c:37:3, col:8> 'struct Table *' lvalue .env 0x558bbfd81448
`-MemberExpr 0x558bbfda8380 <col:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
  `-ImplicitCastExpr 0x558bbfda8368 <col:3> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x558bbfda8340 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.45].env
  47: BinaryOperator 0x558bbfda8430 <lfunc.c:37:3, col:14> 'struct Table *' '='
|-MemberExpr 0x558bbfda83b8 <col:3, col:8> 'struct Table *' lvalue .env 0x558bbfd81448
| `-MemberExpr 0x558bbfda8380 <col:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
|   `-ImplicitCastExpr 0x558bbfda8368 <col:3> 'Closure *' <LValueToRValue>
|     `-DeclRefExpr 0x558bbfda8340 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
`-ImplicitCastExpr 0x558bbfda8418 <col:14> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x558bbfda83f0 <col:14> 'Table *' lvalue ParmVar 0x558bbfda71d8 'e' 'Table *'
[B5.46] = [B5.42]
  48: DeclRefExpr 0x558bbfda8508 <lfunc.c:38:30> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
nelems
  49: ImplicitCastExpr 0x558bbfda85b0 <./llimits.h:75:26, col:30> 'int' <LValueToRValue>
`-ParenExpr 0x558bbfda8590 <col:26, col:30> 'int' lvalue
  `-ParenExpr 0x558bbfda8530 <line:78:36, col:38> 'int' lvalue
    `-DeclRefExpr 0x558bbfda8508 <lfunc.c:38:30> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
(([B5.48])) (ImplicitCastExpr, LValueToRValue, int)
  50: CStyleCastExpr 0x558bbfda85c8 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x558bbfda85b0 <col:26, col:30> 'int' <LValueToRValue>
  `-ParenExpr 0x558bbfda8590 <col:26, col:30> 'int' lvalue
    `-ParenExpr 0x558bbfda8530 <line:78:36, col:38> 'int' lvalue
      `-DeclRefExpr 0x558bbfda8508 <lfunc.c:38:30> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
(lu_byte)[B5.49] (CStyleCastExpr, IntegralCast, lu_byte)
  51: DeclRefExpr 0x558bbfda8458 <lfunc.c:38:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
c
  52: ImplicitCastExpr 0x558bbfda8480 <lfunc.c:38:3> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x558bbfda8458 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.51] (ImplicitCastExpr, LValueToRValue, Closure *)
  53: MemberExpr 0x558bbfda8498 <lfunc.c:38:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
`-ImplicitCastExpr 0x558bbfda8480 <col:3> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x558bbfda8458 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.52]->l
  54: MemberExpr 0x558bbfda84d0 <lfunc.c:38:3, col:8> 'lu_byte':'unsigned char' lvalue .nupvalues 0x558bbfd81380
`-MemberExpr 0x558bbfda8498 <col:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
  `-ImplicitCastExpr 0x558bbfda8480 <col:3> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x558bbfda8458 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
[B5.53].nupvalues
  55: BinaryOperator 0x558bbfda8610 <lfunc.c:38:3, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x558bbfda84d0 <lfunc.c:38:3, col:8> 'lu_byte':'unsigned char' lvalue .nupvalues 0x558bbfd81380
| `-MemberExpr 0x558bbfda8498 <col:3, col:6> 'LClosure':'struct LClosure' lvalue ->l 0x558bbfd81870
|   `-ImplicitCastExpr 0x558bbfda8480 <col:3> 'Closure *' <LValueToRValue>
|     `-DeclRefExpr 0x558bbfda8458 <col:3> 'Closure *' lvalue Var 0x558bbfda7380 'c' 'Closure *'
`-ParenExpr 0x558bbfda85f0 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x558bbfda85c8 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x558bbfda85b0 <col:26, col:30> 'int' <LValueToRValue>
      `-ParenExpr 0x558bbfda8590 <col:26, col:30> 'int' lvalue
        `-ParenExpr 0x558bbfda8530 <line:78:36, col:38> 'int' lvalue
          `-DeclRefExpr 0x558bbfda8508 <lfunc.c:38:30> 'int' lvalue ParmVar 0x558bbfda7168 'nelems' 'int'
[B5.54] = ([B5.50])
   Preds (1): B6
   Succs (1): B4

 [B0 (EXIT)]
   Preds (1): B1
