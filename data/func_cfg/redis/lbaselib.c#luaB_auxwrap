static int luaB_auxwrap(lua_State *L)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: DeclRefExpr 0x562da282e840 <lbaselib.c:572:10> 'int' lvalue Var 0x562da282e058 'r' 'int'
r
   2: ImplicitCastExpr 0x562da282e868 <lbaselib.c:572:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282e840 <col:10> 'int' lvalue Var 0x562da282e058 'r' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x562da282e880 <lbaselib.c:572:3, col:10>
`-ImplicitCastExpr 0x562da282e868 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da282e840 <col:10> 'int' lvalue Var 0x562da282e058 'r' 'int'
return [B1.2];
   Preds (2): B2 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x562da282e738 <lbaselib.c:570:5> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5f20 'lua_error' 'int (lua_State *)':'int (lua_State *)'
lua_error
   2: ImplicitCastExpr 0x562da282e788 <lbaselib.c:570:5> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282e738 <col:5> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5f20 'lua_error' 'int (lua_State *)':'int (lua_State *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   3: DeclRefExpr 0x562da282e760 <lbaselib.c:570:15> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282e7d0 <lbaselib.c:570:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e760 <col:15> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da282e7a0 <lbaselib.c:570:5, col:16> 'int'
|-ImplicitCastExpr 0x562da282e788 <col:5> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282e738 <col:5> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27f5f20 'lua_error' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da282e7d0 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da282e760 <col:15> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B2.2]([B2.4])
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x562da282e400 <lbaselib.c:566:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da2803eb8 'luaL_where' 'void (lua_State *, int)':'void (lua_State *, int)'
luaL_where
   2: ImplicitCastExpr 0x562da282e470 <lbaselib.c:566:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282e400 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da2803eb8 'luaL_where' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x562da282e428 <lbaselib.c:566:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282e4c0 <lbaselib.c:566:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e428 <col:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da282e450 <lbaselib.c:566:21> 'int' 1
1
   6: CallExpr 0x562da282e488 <lbaselib.c:566:7, col:22> 'void'
|-ImplicitCastExpr 0x562da282e470 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282e400 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da2803eb8 'luaL_where' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da282e4c0 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282e428 <col:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
`-IntegerLiteral 0x562da282e450 <col:21> 'int' 1
[B3.2]([B3.4], [B3.5])
   7: DeclRefExpr 0x562da282e4d8 <lbaselib.c:567:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ec260 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_insert
   8: ImplicitCastExpr 0x562da282e568 <lbaselib.c:567:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282e4d8 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ec260 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.7] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   9: DeclRefExpr 0x562da282e500 <lbaselib.c:567:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x562da282e5b8 <lbaselib.c:567:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e500 <col:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B3.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: IntegerLiteral 0x562da282e528 <lbaselib.c:567:22> 'int' 2
2
  12: UnaryOperator 0x562da282e548 <lbaselib.c:567:21, col:22> 'int' prefix '-'
`-IntegerLiteral 0x562da282e528 <col:22> 'int' 2
-[B3.11]
  13: CallExpr 0x562da282e580 <lbaselib.c:567:7, col:23> 'void'
|-ImplicitCastExpr 0x562da282e568 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282e4d8 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ec260 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da282e5b8 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282e500 <col:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
`-UnaryOperator 0x562da282e548 <col:21, col:22> 'int' prefix '-'
  `-IntegerLiteral 0x562da282e528 <col:22> 'int' 2
[B3.8]([B3.10], [B3.12])
  14: DeclRefExpr 0x562da282e600 <lbaselib.c:568:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27f62c0 'lua_concat' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_concat
  15: ImplicitCastExpr 0x562da282e670 <lbaselib.c:568:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282e600 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27f62c0 'lua_concat' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.14] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  16: DeclRefExpr 0x562da282e628 <lbaselib.c:568:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x562da282e6c0 <lbaselib.c:568:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e628 <col:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B3.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: IntegerLiteral 0x562da282e650 <lbaselib.c:568:21> 'int' 2
2
  19: CallExpr 0x562da282e688 <lbaselib.c:568:7, col:22> 'void'
|-ImplicitCastExpr 0x562da282e670 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282e600 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27f62c0 'lua_concat' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da282e6c0 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282e628 <col:18> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
`-IntegerLiteral 0x562da282e650 <col:21> 'int' 2
[B3.15]([B3.17], [B3.18])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x562da282e308 <lbaselib.c:565:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ecd80 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_isstring
   2: ImplicitCastExpr 0x562da282e398 <lbaselib.c:565:9> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282e308 <col:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ecd80 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x562da282e330 <lbaselib.c:565:22> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282e3e8 <lbaselib.c:565:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e330 <col:22> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da282e358 <lbaselib.c:565:26> 'int' 1
1
   6: UnaryOperator 0x562da282e378 <lbaselib.c:565:25, col:26> 'int' prefix '-'
`-IntegerLiteral 0x562da282e358 <col:26> 'int' 1
-[B4.5]
   7: CallExpr 0x562da282e3b0 <lbaselib.c:565:9, col:27> 'int'
|-ImplicitCastExpr 0x562da282e398 <col:9> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282e308 <col:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ecd80 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da282e3e8 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282e330 <col:22> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
`-UnaryOperator 0x562da282e378 <col:25, col:26> 'int' prefix '-'
  `-IntegerLiteral 0x562da282e358 <col:26> 'int' 1
[B4.2]([B4.4], [B4.6])
   T: if [B4.7]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x562da282de88 <lbaselib.c:562:19> 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)' Function 0x562da27ef960 'lua_tothread' 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)'
lua_tothread
   2: ImplicitCastExpr 0x562da282dfc0 <lbaselib.c:562:19> 'lua_State *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282de88 <col:19> 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)' Function 0x562da27ef960 'lua_tothread' 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_State *(*)(lua_State *, int))
   3: DeclRefExpr 0x562da282deb0 <lbaselib.c:562:32> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282e010 <lbaselib.c:562:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282deb0 <col:32> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da282ded8 <./lua.h:38:28> 'int' 10002
10002
   6: UnaryOperator 0x562da282def8 <./lua.h:38:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x562da282ded8 <col:28> 'int' 10002
-[B5.5]
   7: IntegerLiteral 0x562da282df38 <lbaselib.c:562:52> 'int' 1
1
   8: BinaryOperator 0x562da282df78 <./lua.h:38:26, line:39:49> 'int' '-'
|-ParenExpr 0x562da282df18 <line:38:26, col:33> 'int'
| `-UnaryOperator 0x562da282def8 <col:27, col:28> 'int' prefix '-'
|   `-IntegerLiteral 0x562da282ded8 <col:28> 'int' 10002
`-ParenExpr 0x562da282df58 <line:39:47, col:49> 'int'
  `-IntegerLiteral 0x562da282df38 <lbaselib.c:562:52> 'int' 1
([B5.6]) - ([B5.7])
   9: CallExpr 0x562da282dfd8 <lbaselib.c:562:19, col:54> 'lua_State *'
|-ImplicitCastExpr 0x562da282dfc0 <col:19> 'lua_State *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282de88 <col:19> 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)' Function 0x562da27ef960 'lua_tothread' 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)'
|-ImplicitCastExpr 0x562da282e010 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282deb0 <col:32> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
`-ParenExpr 0x562da282dfa0 <./lua.h:39:29, col:50> 'int'
  `-BinaryOperator 0x562da282df78 <line:38:26, line:39:49> 'int' '-'
    |-ParenExpr 0x562da282df18 <line:38:26, col:33> 'int'
    | `-UnaryOperator 0x562da282def8 <col:27, col:28> 'int' prefix '-'
    |   `-IntegerLiteral 0x562da282ded8 <col:28> 'int' 10002
    `-ParenExpr 0x562da282df58 <line:39:47, col:49> 'int'
      `-IntegerLiteral 0x562da282df38 <lbaselib.c:562:52> 'int' 1
[B5.2]([B5.4], ([B5.8]))
  10: DeclStmt 0x562da282e028 <lbaselib.c:562:3, col:55>col:14
`-VarDecl 0x562da282de28 <col:3, col:54> col:14 used co 'lua_State *' cinit
  `-CallExpr 0x562da282dfd8 <col:19, col:54> 'lua_State *'
    |-ImplicitCastExpr 0x562da282dfc0 <col:19> 'lua_State *(*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da282de88 <col:19> 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)' Function 0x562da27ef960 'lua_tothread' 'lua_State *(lua_State *, int)':'lua_State *(lua_State *, int)'
    |-ImplicitCastExpr 0x562da282e010 <col:32> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da282deb0 <col:32> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
    `-ParenExpr 0x562da282dfa0 <./lua.h:39:29, col:50> 'int'
      `-BinaryOperator 0x562da282df78 <line:38:26, line:39:49> 'int' '-'
        |-ParenExpr 0x562da282df18 <line:38:26, col:33> 'int'
        | `-UnaryOperator 0x562da282def8 <col:27, col:28> 'int' prefix '-'
        |   `-IntegerLiteral 0x562da282ded8 <col:28> 'int' 10002
        `-ParenExpr 0x562da282df58 <line:39:47, col:49> 'int'
          `-IntegerLiteral 0x562da282df38 <lbaselib.c:562:52> 'int' 1
lua_State *co = lua_tothread(L, ((-10002) - (1)));
  11: DeclRefExpr 0x562da282e0b8 <lbaselib.c:563:11> 'int (lua_State *, lua_State *, int)' Function 0x562da282b838 'auxresume' 'int (lua_State *, lua_State *, int)'
auxresume
  12: ImplicitCastExpr 0x562da282e1e0 <lbaselib.c:563:11> 'int (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282e0b8 <col:11> 'int (lua_State *, lua_State *, int)' Function 0x562da282b838 'auxresume' 'int (lua_State *, lua_State *, int)'
[B5.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, lua_State *, int))
  13: DeclRefExpr 0x562da282e0e0 <lbaselib.c:563:21> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x562da282e238 <lbaselib.c:563:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e0e0 <col:21> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B5.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: DeclRefExpr 0x562da282e108 <lbaselib.c:563:24> 'lua_State *' lvalue Var 0x562da282de28 'co' 'lua_State *'
co
  16: ImplicitCastExpr 0x562da282e250 <lbaselib.c:563:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e108 <col:24> 'lua_State *' lvalue Var 0x562da282de28 'co' 'lua_State *'
[B5.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: DeclRefExpr 0x562da282e130 <lbaselib.c:563:28> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
  18: ImplicitCastExpr 0x562da282e180 <lbaselib.c:563:28> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282e130 <col:28> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B5.17] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
  19: DeclRefExpr 0x562da282e158 <lbaselib.c:563:39> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
L
  20: ImplicitCastExpr 0x562da282e1c8 <lbaselib.c:563:39> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282e158 <col:39> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B5.19] (ImplicitCastExpr, LValueToRValue, lua_State *)
  21: CallExpr 0x562da282e198 <lbaselib.c:563:28, col:40> 'int'
|-ImplicitCastExpr 0x562da282e180 <col:28> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282e130 <col:28> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da282e1c8 <col:39> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da282e158 <col:39> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B5.18]([B5.20])
  22: CallExpr 0x562da282e1f8 <lbaselib.c:563:11, col:41> 'int'
|-ImplicitCastExpr 0x562da282e1e0 <col:11> 'int (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282e0b8 <col:11> 'int (lua_State *, lua_State *, int)' Function 0x562da282b838 'auxresume' 'int (lua_State *, lua_State *, int)'
|-ImplicitCastExpr 0x562da282e238 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282e0e0 <col:21> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
|-ImplicitCastExpr 0x562da282e250 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282e108 <col:24> 'lua_State *' lvalue Var 0x562da282de28 'co' 'lua_State *'
`-CallExpr 0x562da282e198 <col:28, col:40> 'int'
  |-ImplicitCastExpr 0x562da282e180 <col:28> 'int (*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da282e130 <col:28> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
  `-ImplicitCastExpr 0x562da282e1c8 <col:39> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x562da282e158 <col:39> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
[B5.12]([B5.14], [B5.16], [B5.21])
  23: DeclStmt 0x562da282e268 <lbaselib.c:563:3, col:42>col:7
`-VarDecl 0x562da282e058 <col:3, col:41> col:7 used r 'int' cinit
  `-CallExpr 0x562da282e1f8 <col:11, col:41> 'int'
    |-ImplicitCastExpr 0x562da282e1e0 <col:11> 'int (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da282e0b8 <col:11> 'int (lua_State *, lua_State *, int)' Function 0x562da282b838 'auxresume' 'int (lua_State *, lua_State *, int)'
    |-ImplicitCastExpr 0x562da282e238 <col:21> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da282e0e0 <col:21> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
    |-ImplicitCastExpr 0x562da282e250 <col:24> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da282e108 <col:24> 'lua_State *' lvalue Var 0x562da282de28 'co' 'lua_State *'
    `-CallExpr 0x562da282e198 <col:28, col:40> 'int'
      |-ImplicitCastExpr 0x562da282e180 <col:28> 'int (*)(lua_State *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da282e130 <col:28> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
      `-ImplicitCastExpr 0x562da282e1c8 <col:39> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x562da282e158 <col:39> 'lua_State *' lvalue ParmVar 0x562da282dce0 'L' 'lua_State *'
int r = auxresume(L, co, lua_gettop(L));
  24: DeclRefExpr 0x562da282e280 <lbaselib.c:564:7> 'int' lvalue Var 0x562da282e058 'r' 'int'
r
  25: ImplicitCastExpr 0x562da282e2c8 <lbaselib.c:564:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282e280 <col:7> 'int' lvalue Var 0x562da282e058 'r' 'int'
[B5.24] (ImplicitCastExpr, LValueToRValue, int)
  26: IntegerLiteral 0x562da282e2a8 <lbaselib.c:564:11> 'int' 0
0
  27: BinaryOperator 0x562da282e2e0 <lbaselib.c:564:7, col:11> 'int' '<'
|-ImplicitCastExpr 0x562da282e2c8 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da282e280 <col:7> 'int' lvalue Var 0x562da282e058 'r' 'int'
`-IntegerLiteral 0x562da282e2a8 <col:11> 'int' 0
[B5.25] < [B5.26]
   T: if [B5.27]
   Preds (1): B6
   Succs (2): B4 B1

 [B0 (EXIT)]
   Preds (1): B1
