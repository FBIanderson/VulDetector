static int isinstack(CallInfo *ci, const TValue *o)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: IntegerLiteral 0x555e9726d888 <ldebug.c:563:10> 'int' 0
0
   2: ReturnStmt 0x555e9726d8a8 <ldebug.c:563:3, col:10>
`-IntegerLiteral 0x555e9726d888 <col:10> 'int' 0
return [B1.1];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e9726d6d8 <ldebug.c:561:35> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
p
   2: UnaryOperator 0x555e9726d700 <ldebug.c:561:35, col:36> 'StkId':'TValue *' postfix '++'
`-DeclRefExpr 0x555e9726d6d8 <col:35> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
[B2.1]++
   Preds (1): B4
   Succs (1): B5

 [B3]
   1: IntegerLiteral 0x555e9726d7e0 <ldebug.c:562:24> 'int' 1
1
   2: ReturnStmt 0x555e9726d800 <ldebug.c:562:17, col:24>
`-IntegerLiteral 0x555e9726d7e0 <col:24> 'int' 1
return [B3.1];
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x555e9726d720 <ldebug.c:562:9> 'const TValue *' lvalue ParmVar 0x555e9726d2a8 'o' 'const TValue *'
o
   2: ImplicitCastExpr 0x555e9726d770 <ldebug.c:562:9> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e9726d720 <col:9> 'const TValue *' lvalue ParmVar 0x555e9726d2a8 'o' 'const TValue *'
[B4.1] (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: DeclRefExpr 0x555e9726d748 <ldebug.c:562:14> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
p
   4: ImplicitCastExpr 0x555e9726d788 <ldebug.c:562:14> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e9726d748 <col:14> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
[B4.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: ImplicitCastExpr 0x555e9726d7a0 <ldebug.c:562:14> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x555e9726d788 <col:14> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726d748 <col:14> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
[B4.4] (ImplicitCastExpr, BitCast, const TValue *)
   6: BinaryOperator 0x555e9726d7b8 <ldebug.c:562:9, col:14> 'int' '=='
|-ImplicitCastExpr 0x555e9726d770 <col:9> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726d720 <col:9> 'const TValue *' lvalue ParmVar 0x555e9726d2a8 'o' 'const TValue *'
`-ImplicitCastExpr 0x555e9726d7a0 <col:14> 'const TValue *' <BitCast>
  `-ImplicitCastExpr 0x555e9726d788 <col:14> 'StkId':'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x555e9726d748 <col:14> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
[B4.2] == [B4.5]
   T: if [B4.6]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x555e9726d5e0 <ldebug.c:561:22> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
p
   2: ImplicitCastExpr 0x555e9726d680 <ldebug.c:561:22> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e9726d5e0 <col:22> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
[B5.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclRefExpr 0x555e9726d608 <ldebug.c:561:26> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
ci
   4: ImplicitCastExpr 0x555e9726d630 <ldebug.c:561:26> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e9726d608 <col:26> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B5.3] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   5: MemberExpr 0x555e9726d648 <ldebug.c:561:26, col:30> 'StkId':'TValue *' lvalue ->top 0x555e9720f9d0
`-ImplicitCastExpr 0x555e9726d630 <col:26> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726d608 <col:26> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B5.4]->top
   6: ImplicitCastExpr 0x555e9726d698 <ldebug.c:561:26, col:30> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e9726d648 <col:26, col:30> 'StkId':'TValue *' lvalue ->top 0x555e9720f9d0
  `-ImplicitCastExpr 0x555e9726d630 <col:26> 'CallInfo *' <LValueToRValue>
    `-DeclRefExpr 0x555e9726d608 <col:26> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B5.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: BinaryOperator 0x555e9726d6b0 <ldebug.c:561:22, col:30> 'int' '<'
|-ImplicitCastExpr 0x555e9726d680 <col:22> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726d5e0 <col:22> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
`-ImplicitCastExpr 0x555e9726d698 <col:26, col:30> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x555e9726d648 <col:26, col:30> 'StkId':'TValue *' lvalue ->top 0x555e9720f9d0
    `-ImplicitCastExpr 0x555e9726d630 <col:26> 'CallInfo *' <LValueToRValue>
      `-DeclRefExpr 0x555e9726d608 <col:26> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B5.2] < [B5.6]
   T: for (...; [B5.7]; ...)
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: DeclStmt 0x555e9726d4e8 <ldebug.c:560:3, col:10>col:9
`-VarDecl 0x555e9726d488 <col:3, col:9> col:9 used p 'StkId':'TValue *'
StkId p;
   2: DeclRefExpr 0x555e9726d528 <ldebug.c:561:12> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
ci
   3: ImplicitCastExpr 0x555e9726d550 <ldebug.c:561:12> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e9726d528 <col:12> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B6.2] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   4: MemberExpr 0x555e9726d568 <ldebug.c:561:12, col:16> 'StkId':'TValue *' lvalue ->base 0x555e9720f920
`-ImplicitCastExpr 0x555e9726d550 <col:12> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726d528 <col:12> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B6.3]->base
   5: ImplicitCastExpr 0x555e9726d5a0 <ldebug.c:561:12, col:16> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e9726d568 <col:12, col:16> 'StkId':'TValue *' lvalue ->base 0x555e9720f920
  `-ImplicitCastExpr 0x555e9726d550 <col:12> 'CallInfo *' <LValueToRValue>
    `-DeclRefExpr 0x555e9726d528 <col:12> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B6.4] (ImplicitCastExpr, LValueToRValue, StkId)
   6: DeclRefExpr 0x555e9726d500 <ldebug.c:561:8> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
p
   7: BinaryOperator 0x555e9726d5b8 <ldebug.c:561:8, col:16> 'StkId':'TValue *' '='
|-DeclRefExpr 0x555e9726d500 <col:8> 'StkId':'TValue *' lvalue Var 0x555e9726d488 'p' 'StkId':'TValue *'
`-ImplicitCastExpr 0x555e9726d5a0 <col:12, col:16> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x555e9726d568 <col:12, col:16> 'StkId':'TValue *' lvalue ->base 0x555e9720f920
    `-ImplicitCastExpr 0x555e9726d550 <col:12> 'CallInfo *' <LValueToRValue>
      `-DeclRefExpr 0x555e9726d528 <col:12> 'CallInfo *' lvalue ParmVar 0x555e9726d238 'ci' 'CallInfo *'
[B6.6] = [B6.5]
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (2): B1 B3
