static StkId tryfuncTM(lua_State *L, StkId func)
 [B11 (ENTRY)]
   Succs (1): B10

 [B1]
   1: DeclRefExpr 0x55f42eed2670 <ldo.c:252:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eed2698 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2670 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B1.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eed26b0 <ldo.c:252:12, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
`-ImplicitCastExpr 0x55f42eed2698 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2670 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B1.2]->top
   4: UnaryOperator 0x55f42eed26e8 <ldo.c:252:12, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x55f42eed26b0 <ldo.c:252:12, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
  `-ImplicitCastExpr 0x55f42eed2698 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed2670 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B1.3]++
   5: DeclRefExpr 0x55f42eed2768 <ldo.c:253:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eed2790 <ldo.c:253:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2768 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x55f42eed27a8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
`-ImplicitCastExpr 0x55f42eed2790 <ldo.c:253:23> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2768 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B1.6]->stack
   8: ImplicitCastExpr 0x55f42eed27f8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eed27a8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
  `-ImplicitCastExpr 0x55f42eed2790 <ldo.c:253:23> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed2768 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B1.7] (ImplicitCastExpr, LValueToRValue, StkId)
   9: CStyleCastExpr 0x55f42eed2810 <./ldo.h:25:39, col:50> 'char *' <BitCast>
`-ImplicitCastExpr 0x55f42eed27f8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55f42eed27a8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
    `-ImplicitCastExpr 0x55f42eed2790 <ldo.c:253:23> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed2768 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
(char *)[B1.8] (CStyleCastExpr, BitCast, char *)
  10: DeclRefExpr 0x55f42eed2838 <ldo.c:253:26> 'ptrdiff_t':'long' lvalue Var 0x55f42eed14a0 'funcr' 'ptrdiff_t':'long'
funcr
  11: ImplicitCastExpr 0x55f42eed2880 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
`-ParenExpr 0x55f42eed2860 <col:58, col:60> 'ptrdiff_t':'long' lvalue
  `-DeclRefExpr 0x55f42eed2838 <ldo.c:253:26> 'ptrdiff_t':'long' lvalue Var 0x55f42eed14a0 'funcr' 'ptrdiff_t':'long'
([B1.10]) (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  12: BinaryOperator 0x55f42eed2898 <./ldo.h:25:39, col:60> 'char *' '+'
|-CStyleCastExpr 0x55f42eed2810 <col:39, col:50> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55f42eed27f8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x55f42eed27a8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
|     `-ImplicitCastExpr 0x55f42eed2790 <ldo.c:253:23> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x55f42eed2768 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eed2880 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
  `-ParenExpr 0x55f42eed2860 <col:58, col:60> 'ptrdiff_t':'long' lvalue
    `-DeclRefExpr 0x55f42eed2838 <ldo.c:253:26> 'ptrdiff_t':'long' lvalue Var 0x55f42eed14a0 'funcr' 'ptrdiff_t':'long'
[B1.9] + [B1.11]
  13: CStyleCastExpr 0x55f42eed2920 <./ldo.h:25:28, col:61> 'TValue *' <BitCast>
`-ParenExpr 0x55f42eed2900 <col:38, col:61> 'char *'
  `-BinaryOperator 0x55f42eed2898 <col:39, col:60> 'char *' '+'
    |-CStyleCastExpr 0x55f42eed2810 <col:39, col:50> 'char *' <BitCast>
    | `-ImplicitCastExpr 0x55f42eed27f8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
    |   `-MemberExpr 0x55f42eed27a8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
    |     `-ImplicitCastExpr 0x55f42eed2790 <ldo.c:253:23> 'lua_State *' <LValueToRValue>
    |       `-DeclRefExpr 0x55f42eed2768 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
    `-ImplicitCastExpr 0x55f42eed2880 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
      `-ParenExpr 0x55f42eed2860 <col:58, col:60> 'ptrdiff_t':'long' lvalue
        `-DeclRefExpr 0x55f42eed2838 <ldo.c:253:26> 'ptrdiff_t':'long' lvalue Var 0x55f42eed14a0 'funcr' 'ptrdiff_t':'long'
(TValue *)([B1.12]) (CStyleCastExpr, BitCast, TValue *)
  14: DeclRefExpr 0x55f42eed2740 <ldo.c:253:3> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
func
  15: BinaryOperator 0x55f42eed2968 <ldo.c:253:3, ./ldo.h:25:62> 'StkId':'TValue *' '='
|-DeclRefExpr 0x55f42eed2740 <ldo.c:253:3> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
`-ParenExpr 0x55f42eed2948 <./ldo.h:25:27, col:62> 'TValue *'
  `-CStyleCastExpr 0x55f42eed2920 <col:28, col:61> 'TValue *' <BitCast>
    `-ParenExpr 0x55f42eed2900 <col:38, col:61> 'char *'
      `-BinaryOperator 0x55f42eed2898 <col:39, col:60> 'char *' '+'
        |-CStyleCastExpr 0x55f42eed2810 <col:39, col:50> 'char *' <BitCast>
        | `-ImplicitCastExpr 0x55f42eed27f8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
        |   `-MemberExpr 0x55f42eed27a8 <ldo.c:253:23, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
        |     `-ImplicitCastExpr 0x55f42eed2790 <ldo.c:253:23> 'lua_State *' <LValueToRValue>
        |       `-DeclRefExpr 0x55f42eed2768 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
        `-ImplicitCastExpr 0x55f42eed2880 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
          `-ParenExpr 0x55f42eed2860 <col:58, col:60> 'ptrdiff_t':'long' lvalue
            `-DeclRefExpr 0x55f42eed2838 <ldo.c:253:26> 'ptrdiff_t':'long' lvalue Var 0x55f42eed14a0 'funcr' 'ptrdiff_t':'long'
[B1.14] = ([B1.13])
  16: DeclRefExpr 0x55f42eed2a00 <ldo.c:254:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
tm
  17: ImplicitCastExpr 0x55f42eed2a48 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eed2a28 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x55f42eed2a00 <ldo.c:254:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
([B1.16]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  18: DeclStmt 0x55f42eed2a60 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x55f42eed29a0 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x55f42eed2a48 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55f42eed2a28 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x55f42eed2a00 <ldo.c:254:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
const TValue *o2 = (tm);
  19: DeclRefExpr 0x55f42eed2ae8 <ldo.c:254:15> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
func
  20: ImplicitCastExpr 0x55f42eed2b30 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eed2b10 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x55f42eed2ae8 <ldo.c:254:15> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
([B1.19]) (ImplicitCastExpr, LValueToRValue, StkId)
  21: DeclStmt 0x55f42eed2b48 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x55f42eed2a88 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x55f42eed2b30 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x55f42eed2b10 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x55f42eed2ae8 <ldo.c:254:15> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
TValue *o1 = (func);
  22: DeclRefExpr 0x55f42eed2c00 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
o2
  23: ImplicitCastExpr 0x55f42eed2c28 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2c00 <col:17> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.22] (ImplicitCastExpr, LValueToRValue, const TValue *)
  24: MemberExpr 0x55f42eed2c40 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eed2c28 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2c00 <col:17> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.23]->value
  25: ImplicitCastExpr 0x55f42eed2c78 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x55f42eed2c40 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
  `-ImplicitCastExpr 0x55f42eed2c28 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed2c00 <col:17> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.24] (ImplicitCastExpr, LValueToRValue, Value)
  26: DeclRefExpr 0x55f42eed2b60 <./lobject.h:163:5> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
o1
  27: ImplicitCastExpr 0x55f42eed2b88 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2b60 <col:5> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
[B1.26] (ImplicitCastExpr, LValueToRValue, TValue *)
  28: MemberExpr 0x55f42eed2ba0 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eed2b88 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2b60 <col:5> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
[B1.27]->value
  29: BinaryOperator 0x55f42eed2c90 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x55f42eed2ba0 <col:5, col:9> 'Value':'Value' lvalue ->value 0x55f42ee5e920
| `-ImplicitCastExpr 0x55f42eed2b88 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eed2b60 <col:5> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
`-ImplicitCastExpr 0x55f42eed2c78 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x55f42eed2c40 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
    `-ImplicitCastExpr 0x55f42eed2c28 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed2c00 <col:17> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.28] = [B1.25]
  30: DeclRefExpr 0x55f42eed2d30 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
o2
  31: ImplicitCastExpr 0x55f42eed2d58 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2d30 <col:35> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.30] (ImplicitCastExpr, LValueToRValue, const TValue *)
  32: MemberExpr 0x55f42eed2d70 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eed2d58 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2d30 <col:35> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.31]->tt
  33: ImplicitCastExpr 0x55f42eed2da8 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x55f42eed2d70 <col:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
  `-ImplicitCastExpr 0x55f42eed2d58 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed2d30 <col:35> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.32] (ImplicitCastExpr, LValueToRValue, int)
  34: DeclRefExpr 0x55f42eed2cb8 <./lobject.h:163:28> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
o1
  35: ImplicitCastExpr 0x55f42eed2ce0 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2cb8 <col:28> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
[B1.34] (ImplicitCastExpr, LValueToRValue, TValue *)
  36: MemberExpr 0x55f42eed2cf8 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eed2ce0 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2cb8 <col:28> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
[B1.35]->tt
  37: BinaryOperator 0x55f42eed2dc0 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x55f42eed2cf8 <col:28, col:32> 'int' lvalue ->tt 0x55f42ee5e980
| `-ImplicitCastExpr 0x55f42eed2ce0 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eed2cb8 <col:28> 'TValue *' lvalue Var 0x55f42eed2a88 'o1' 'TValue *'
`-ImplicitCastExpr 0x55f42eed2da8 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x55f42eed2d70 <col:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
    `-ImplicitCastExpr 0x55f42eed2d58 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed2d30 <col:35> 'const TValue *' lvalue Var 0x55f42eed29a0 'o2' 'const TValue *'
[B1.36] = [B1.33]
  38: IntegerLiteral 0x55f42eed2de8 <./llimits.h:62:31> 'int' 0
0
  39: CStyleCastExpr 0x55f42eed2e18 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eed2de8 <col:31> 'int' 0
(void)[B1.38] (CStyleCastExpr, ToVoid, void)
  40: DeclRefExpr 0x55f42eed2ea8 <ldo.c:255:10> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
func
  41: ImplicitCastExpr 0x55f42eed2ed0 <ldo.c:255:10> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2ea8 <col:10> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
[B1.40] (ImplicitCastExpr, LValueToRValue, StkId)
  42: ReturnStmt 0x55f42eed2ee8 <ldo.c:255:3, col:10>
`-ImplicitCastExpr 0x55f42eed2ed0 <col:10> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2ea8 <col:10> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
return [B1.41];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55f42eed25b0 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x55f42eed25e0 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eed25b0 <col:38> 'int' 0
(void)[B2.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55f42eed24d8 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x55f42eec9340 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x55f42eed2548 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eed24d8 <col:5> 'void (lua_State *, int)' Function 0x55f42eec9340 'luaD_growstack' 'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55f42eed2500 <ldo.c:252:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f42eed2598 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2500 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55f42eed2528 <./ldo.h:22:40> 'int' 1
1
   6: CallExpr 0x55f42eed2560 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x55f42eed2548 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eed24d8 <col:5> 'void (lua_State *, int)' Function 0x55f42eec9340 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x55f42eed2598 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eed2500 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
`-IntegerLiteral 0x55f42eed2528 <./ldo.h:22:40> 'int' 1
[B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x55f42eed21f8 <ldo.c:252:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eed2220 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed21f8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eed2238 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55f42ee889d8
`-ImplicitCastExpr 0x55f42eed2220 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed21f8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B4.2]->stack_last
   4: ImplicitCastExpr 0x55f42eed2288 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eed2238 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55f42ee889d8
  `-ImplicitCastExpr 0x55f42eed2220 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed21f8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: CStyleCastExpr 0x55f42eed22a0 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x55f42eed2288 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55f42eed2238 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55f42ee889d8
    `-ImplicitCastExpr 0x55f42eed2220 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed21f8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
(char *)[B4.4] (CStyleCastExpr, BitCast, char *)
   6: DeclRefExpr 0x55f42eed22c8 <ldo.c:252:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55f42eed22f0 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed22c8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B4.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: MemberExpr 0x55f42eed2308 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
`-ImplicitCastExpr 0x55f42eed22f0 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed22c8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B4.7]->top
   9: ImplicitCastExpr 0x55f42eed2358 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eed2308 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
  `-ImplicitCastExpr 0x55f42eed22f0 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed22c8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B4.8] (ImplicitCastExpr, LValueToRValue, StkId)
  10: CStyleCastExpr 0x55f42eed2370 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x55f42eed2358 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55f42eed2308 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
    `-ImplicitCastExpr 0x55f42eed22f0 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed22c8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
(char *)[B4.9] (CStyleCastExpr, BitCast, char *)
  11: BinaryOperator 0x55f42eed2398 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x55f42eed22a0 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55f42eed2288 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x55f42eed2238 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55f42ee889d8
|     `-ImplicitCastExpr 0x55f42eed2220 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x55f42eed21f8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
`-CStyleCastExpr 0x55f42eed2370 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x55f42eed2358 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x55f42eed2308 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
      `-ImplicitCastExpr 0x55f42eed22f0 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55f42eed22c8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B4.5] - [B4.10]
  12: IntegerLiteral 0x55f42eed23c0 <./ldo.h:22:40> 'int' 1
1
  13: UnaryExprOrTypeTraitExpr 0x55f42eed2410 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  14: CStyleCastExpr 0x55f42eed2448 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x55f42eed2410 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B4.13] (CStyleCastExpr, IntegralCast, int)
  15: BinaryOperator 0x55f42eed2470 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x55f42eed23e0 <col:49, col:51> 'int'
| `-IntegerLiteral 0x55f42eed23c0 <line:22:40> 'int' 1
`-CStyleCastExpr 0x55f42eed2448 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x55f42eed2410 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B4.12]) * [B4.14]
  16: ImplicitCastExpr 0x55f42eed2498 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x55f42eed2470 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x55f42eed23e0 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x55f42eed23c0 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x55f42eed2448 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x55f42eed2410 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.15] (ImplicitCastExpr, IntegralCast, long)
  17: BinaryOperator 0x55f42eed24b0 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x55f42eed2398 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x55f42eed22a0 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x55f42eed2288 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x55f42eed2238 <ldo.c:252:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x55f42ee889d8
| |     `-ImplicitCastExpr 0x55f42eed2220 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x55f42eed21f8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
| `-CStyleCastExpr 0x55f42eed2370 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x55f42eed2358 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x55f42eed2308 <ldo.c:252:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
|       `-ImplicitCastExpr 0x55f42eed22f0 <ldo.c:252:12> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x55f42eed22c8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eed2498 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x55f42eed2470 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x55f42eed23e0 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x55f42eed23c0 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x55f42eed2448 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x55f42eed2410 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.11] <= [B4.16]
   T: if [B4.17]
   Preds (1): B7
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55f42eed1c28 <ldo.c:251:30> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
p
   2: UnaryOperator 0x55f42eed1c50 <ldo.c:251:30, col:31> 'StkId':'TValue *' postfix '--'
`-DeclRefExpr 0x55f42eed1c28 <col:30> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
[B5.1]--
   Preds (1): B6
   Succs (1): B7

 [B6]
   1: DeclRefExpr 0x55f42eed1ce0 <ldo.c:251:51> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
p
   2: ImplicitCastExpr 0x55f42eed1d28 <ldo.c:251:51> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1ce0 <col:51> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
[B6.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: IntegerLiteral 0x55f42eed1d08 <ldo.c:251:53> 'int' 1
1
   4: BinaryOperator 0x55f42eed1d40 <ldo.c:251:51, col:53> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x55f42eed1d28 <col:51> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eed1ce0 <col:51> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
`-IntegerLiteral 0x55f42eed1d08 <col:53> 'int' 1
[B6.2] - [B6.3]
   5: ImplicitCastExpr 0x55f42eed1d88 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ParenExpr 0x55f42eed1d68 <col:22, col:27> 'StkId':'TValue *'
  `-BinaryOperator 0x55f42eed1d40 <ldo.c:251:51, col:53> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x55f42eed1d28 <col:51> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x55f42eed1ce0 <col:51> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
    `-IntegerLiteral 0x55f42eed1d08 <col:53> 'int' 1
([B6.4]) (ImplicitCastExpr, BitCast, const TValue *)
   6: DeclStmt 0x55f42eed1da0 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x55f42eed1c80 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x55f42eed1d88 <col:22, col:27> 'const TValue *' <BitCast>
    `-ParenExpr 0x55f42eed1d68 <col:22, col:27> 'StkId':'TValue *'
      `-BinaryOperator 0x55f42eed1d40 <ldo.c:251:51, col:53> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x55f42eed1d28 <col:51> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x55f42eed1ce0 <col:51> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
        `-IntegerLiteral 0x55f42eed1d08 <col:53> 'int' 1
const TValue *o2 = (p - 1);
   7: DeclRefExpr 0x55f42eed1e28 <ldo.c:251:48> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
p
   8: ImplicitCastExpr 0x55f42eed1e70 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eed1e50 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x55f42eed1e28 <ldo.c:251:48> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
([B6.7]) (ImplicitCastExpr, LValueToRValue, StkId)
   9: DeclStmt 0x55f42eed1e88 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x55f42eed1dc8 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x55f42eed1e70 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x55f42eed1e50 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x55f42eed1e28 <ldo.c:251:48> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
TValue *o1 = (p);
  10: DeclRefExpr 0x55f42eed1f18 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
o2
  11: ImplicitCastExpr 0x55f42eed1f40 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1f18 <col:17> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.10] (ImplicitCastExpr, LValueToRValue, const TValue *)
  12: MemberExpr 0x55f42eed1f58 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eed1f40 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed1f18 <col:17> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.11]->value
  13: ImplicitCastExpr 0x55f42eed1f90 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x55f42eed1f58 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
  `-ImplicitCastExpr 0x55f42eed1f40 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed1f18 <col:17> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.12] (ImplicitCastExpr, LValueToRValue, Value)
  14: DeclRefExpr 0x55f42eed1ea0 <./lobject.h:163:5> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
o1
  15: ImplicitCastExpr 0x55f42eed1ec8 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1ea0 <col:5> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
[B6.14] (ImplicitCastExpr, LValueToRValue, TValue *)
  16: MemberExpr 0x55f42eed1ee0 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eed1ec8 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed1ea0 <col:5> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
[B6.15]->value
  17: BinaryOperator 0x55f42eed1fa8 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x55f42eed1ee0 <col:5, col:9> 'Value':'Value' lvalue ->value 0x55f42ee5e920
| `-ImplicitCastExpr 0x55f42eed1ec8 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eed1ea0 <col:5> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
`-ImplicitCastExpr 0x55f42eed1f90 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x55f42eed1f58 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
    `-ImplicitCastExpr 0x55f42eed1f40 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed1f18 <col:17> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.16] = [B6.13]
  18: DeclRefExpr 0x55f42eed2048 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
o2
  19: ImplicitCastExpr 0x55f42eed2070 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed2048 <col:35> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.18] (ImplicitCastExpr, LValueToRValue, const TValue *)
  20: MemberExpr 0x55f42eed2088 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eed2070 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed2048 <col:35> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.19]->tt
  21: ImplicitCastExpr 0x55f42eed20c0 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x55f42eed2088 <col:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
  `-ImplicitCastExpr 0x55f42eed2070 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed2048 <col:35> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.20] (ImplicitCastExpr, LValueToRValue, int)
  22: DeclRefExpr 0x55f42eed1fd0 <./lobject.h:163:28> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
o1
  23: ImplicitCastExpr 0x55f42eed1ff8 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1fd0 <col:28> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
[B6.22] (ImplicitCastExpr, LValueToRValue, TValue *)
  24: MemberExpr 0x55f42eed2010 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eed1ff8 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed1fd0 <col:28> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
[B6.23]->tt
  25: BinaryOperator 0x55f42eed20d8 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x55f42eed2010 <col:28, col:32> 'int' lvalue ->tt 0x55f42ee5e980
| `-ImplicitCastExpr 0x55f42eed1ff8 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eed1fd0 <col:28> 'TValue *' lvalue Var 0x55f42eed1dc8 'o1' 'TValue *'
`-ImplicitCastExpr 0x55f42eed20c0 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x55f42eed2088 <col:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
    `-ImplicitCastExpr 0x55f42eed2070 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed2048 <col:35> 'const TValue *' lvalue Var 0x55f42eed1c80 'o2' 'const TValue *'
[B6.24] = [B6.21]
  26: IntegerLiteral 0x55f42eed2100 <./llimits.h:62:31> 'int' 0
0
  27: CStyleCastExpr 0x55f42eed2130 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eed2100 <col:31> 'int' 0
(void)[B6.26] (CStyleCastExpr, ToVoid, void)
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x55f42eed1b80 <ldo.c:251:20> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
p
   2: ImplicitCastExpr 0x55f42eed1bd0 <ldo.c:251:20> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1b80 <col:20> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
[B7.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclRefExpr 0x55f42eed1ba8 <ldo.c:251:24> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
func
   4: ImplicitCastExpr 0x55f42eed1be8 <ldo.c:251:24> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1ba8 <col:24> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
[B7.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: BinaryOperator 0x55f42eed1c00 <ldo.c:251:20, col:24> 'int' '>'
|-ImplicitCastExpr 0x55f42eed1bd0 <col:20> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eed1b80 <col:20> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
`-ImplicitCastExpr 0x55f42eed1be8 <col:24> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed1ba8 <col:24> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
[B7.2] > [B7.4]
   T: for (...; [B7.5]; ...)
   Preds (2): B5 B8
   Succs (2): B6 B4

 [B8]
   1: DeclRefExpr 0x55f42eed1ac8 <ldo.c:251:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eed1af0 <ldo.c:251:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1ac8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B8.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eed1b08 <ldo.c:251:12, col:15> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
`-ImplicitCastExpr 0x55f42eed1af0 <col:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed1ac8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B8.2]->top
   4: ImplicitCastExpr 0x55f42eed1b40 <ldo.c:251:12, col:15> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eed1b08 <col:12, col:15> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
  `-ImplicitCastExpr 0x55f42eed1af0 <col:12> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed1ac8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclRefExpr 0x55f42eed1aa0 <ldo.c:251:8> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
p
   6: BinaryOperator 0x55f42eed1b58 <ldo.c:251:8, col:15> 'StkId':'TValue *' '='
|-DeclRefExpr 0x55f42eed1aa0 <col:8> 'StkId':'TValue *' lvalue Var 0x55f42eed1418 'p' 'StkId':'TValue *'
`-ImplicitCastExpr 0x55f42eed1b40 <col:12, col:15> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55f42eed1b08 <col:12, col:15> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
    `-ImplicitCastExpr 0x55f42eed1af0 <col:12> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed1ac8 <col:12> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B8.5] = [B8.4]
   Preds (2): B9 B10
   Succs (1): B7

 [B9]
   1: DeclRefExpr 0x55f42eed1858 <ldo.c:249:5> 'void (lua_State *, const TValue *, const char *)' Function 0x55f42ee8e3b0 'luaG_typeerror' 'void (lua_State *, const TValue *, const char *)'
luaG_typeerror
   2: ImplicitCastExpr 0x55f42eed1998 <ldo.c:249:5> 'void (*)(lua_State *, const TValue *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eed1858 <col:5> 'void (lua_State *, const TValue *, const char *)' Function 0x55f42ee8e3b0 'luaG_typeerror' 'void (lua_State *, const TValue *, const char *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const TValue *, const char *))
   3: DeclRefExpr 0x55f42eed1880 <ldo.c:249:20> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f42eed19f0 <ldo.c:249:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1880 <col:20> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55f42eed18a8 <ldo.c:249:23> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
func
   6: ImplicitCastExpr 0x55f42eed1a08 <ldo.c:249:23> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed18a8 <col:23> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
[B9.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: ImplicitCastExpr 0x55f42eed1a20 <ldo.c:249:23> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x55f42eed1a08 <col:23> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed18a8 <col:23> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
[B9.6] (ImplicitCastExpr, BitCast, const TValue *)
   8: StringLiteral 0x55f42eed1908 <ldo.c:249:29> 'char [5]' lvalue "call"
"call"
   9: ImplicitCastExpr 0x55f42eed1a38 <ldo.c:249:29> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55f42eed1908 <col:29> 'char [5]' lvalue "call"
[B9.8] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  10: ImplicitCastExpr 0x55f42eed1a50 <ldo.c:249:29> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55f42eed1a38 <col:29> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55f42eed1908 <col:29> 'char [5]' lvalue "call"
[B9.9] (ImplicitCastExpr, BitCast, const char *)
  11: CallExpr 0x55f42eed19b0 <ldo.c:249:5, col:35> 'void'
|-ImplicitCastExpr 0x55f42eed1998 <col:5> 'void (*)(lua_State *, const TValue *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eed1858 <col:5> 'void (lua_State *, const TValue *, const char *)' Function 0x55f42ee8e3b0 'luaG_typeerror' 'void (lua_State *, const TValue *, const char *)'
|-ImplicitCastExpr 0x55f42eed19f0 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eed1880 <col:20> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
|-ImplicitCastExpr 0x55f42eed1a20 <col:23> 'const TValue *' <BitCast>
| `-ImplicitCastExpr 0x55f42eed1a08 <col:23> 'StkId':'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eed18a8 <col:23> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
`-ImplicitCastExpr 0x55f42eed1a50 <col:29> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55f42eed1a38 <col:29> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55f42eed1908 <col:29> 'char [5]' lvalue "call"
[B9.2]([B9.4], [B9.7], [B9.10])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x55f42eed1240 <ldo.c:245:22> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x55f42ee7b9c0 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
luaT_gettmbyobj
   2: ImplicitCastExpr 0x55f42eed1338 <ldo.c:245:22> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eed1240 <col:22> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x55f42ee7b9c0 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(lua_State *, const TValue *, TMS))
   3: DeclRefExpr 0x55f42eed1268 <ldo.c:245:38> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f42eed1390 <ldo.c:245:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1268 <col:38> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55f42eed1290 <ldo.c:245:41> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
func
   6: ImplicitCastExpr 0x55f42eed13a8 <ldo.c:245:41> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed1290 <col:41> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
[B10.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: ImplicitCastExpr 0x55f42eed13c0 <ldo.c:245:41> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x55f42eed13a8 <col:41> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed1290 <col:41> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
[B10.6] (ImplicitCastExpr, BitCast, const TValue *)
   8: DeclRefExpr 0x55f42eed12b8 <ldo.c:245:47> 'int' EnumConstant 0x55f42ee7b100 'TM_CALL' 'int'
TM_CALL
   9: ImplicitCastExpr 0x55f42eed13d8 <ldo.c:245:47> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x55f42eed12b8 <col:47> 'int' EnumConstant 0x55f42ee7b100 'TM_CALL' 'int'
[B10.8] (ImplicitCastExpr, IntegralCast, TMS)
  10: CallExpr 0x55f42eed1350 <ldo.c:245:22, col:54> 'const TValue *'
|-ImplicitCastExpr 0x55f42eed1338 <col:22> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eed1240 <col:22> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x55f42ee7b9c0 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
|-ImplicitCastExpr 0x55f42eed1390 <col:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eed1268 <col:38> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
|-ImplicitCastExpr 0x55f42eed13c0 <col:41> 'const TValue *' <BitCast>
| `-ImplicitCastExpr 0x55f42eed13a8 <col:41> 'StkId':'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eed1290 <col:41> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
`-ImplicitCastExpr 0x55f42eed13d8 <col:47> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x55f42eed12b8 <col:47> 'int' EnumConstant 0x55f42ee7b100 'TM_CALL' 'int'
[B10.2]([B10.4], [B10.7], [B10.9])
  11: DeclStmt 0x55f42eed13f0 <ldo.c:245:3, col:55>col:17
`-VarDecl 0x55f42eed11e0 <col:3, col:54> col:17 used tm 'const TValue *' cinit
  `-CallExpr 0x55f42eed1350 <col:22, col:54> 'const TValue *'
    |-ImplicitCastExpr 0x55f42eed1338 <col:22> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55f42eed1240 <col:22> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x55f42ee7b9c0 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
    |-ImplicitCastExpr 0x55f42eed1390 <col:38> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55f42eed1268 <col:38> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
    |-ImplicitCastExpr 0x55f42eed13c0 <col:41> 'const TValue *' <BitCast>
    | `-ImplicitCastExpr 0x55f42eed13a8 <col:41> 'StkId':'TValue *' <LValueToRValue>
    |   `-DeclRefExpr 0x55f42eed1290 <col:41> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
    `-ImplicitCastExpr 0x55f42eed13d8 <col:47> 'TMS':'TMS' <IntegralCast>
      `-DeclRefExpr 0x55f42eed12b8 <col:47> 'int' EnumConstant 0x55f42ee7b100 'TM_CALL' 'int'
const TValue *tm = luaT_gettmbyobj(L, func, TM_CALL);
  12: DeclStmt 0x55f42eed1478 <ldo.c:246:3, col:10>col:9
`-VarDecl 0x55f42eed1418 <col:3, col:9> col:9 used p 'StkId':'TValue *'
StkId p;
  13: DeclRefExpr 0x55f42eed1500 <ldo.c:247:34> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
func
  14: ImplicitCastExpr 0x55f42eed1590 <./ldo.h:24:34, col:36> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eed1570 <col:34, col:36> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x55f42eed1500 <ldo.c:247:34> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
([B10.13]) (ImplicitCastExpr, LValueToRValue, StkId)
  15: CStyleCastExpr 0x55f42eed15a8 <./ldo.h:24:26, col:36> 'char *' <BitCast>
`-ImplicitCastExpr 0x55f42eed1590 <col:34, col:36> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x55f42eed1570 <col:34, col:36> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x55f42eed1500 <ldo.c:247:34> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
(char *)[B10.14] (CStyleCastExpr, BitCast, char *)
  16: DeclRefExpr 0x55f42eed15d0 <ldo.c:247:31> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x55f42eed15f8 <ldo.c:247:31> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eed15d0 <col:31> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B10.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: MemberExpr 0x55f42eed1610 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
`-ImplicitCastExpr 0x55f42eed15f8 <ldo.c:247:31> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eed15d0 <col:31> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B10.17]->stack
  19: ImplicitCastExpr 0x55f42eed1660 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eed1610 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
  `-ImplicitCastExpr 0x55f42eed15f8 <ldo.c:247:31> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eed15d0 <col:31> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B10.18] (ImplicitCastExpr, LValueToRValue, StkId)
  20: CStyleCastExpr 0x55f42eed1678 <./ldo.h:24:40, col:51> 'char *' <BitCast>
`-ImplicitCastExpr 0x55f42eed1660 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x55f42eed1610 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
    `-ImplicitCastExpr 0x55f42eed15f8 <ldo.c:247:31> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eed15d0 <col:31> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
(char *)[B10.19] (CStyleCastExpr, BitCast, char *)
  21: BinaryOperator 0x55f42eed16a0 <./ldo.h:24:26, col:51> 'long' '-'
|-CStyleCastExpr 0x55f42eed15a8 <col:26, col:36> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55f42eed1590 <col:34, col:36> 'StkId':'TValue *' <LValueToRValue>
|   `-ParenExpr 0x55f42eed1570 <col:34, col:36> 'StkId':'TValue *' lvalue
|     `-DeclRefExpr 0x55f42eed1500 <ldo.c:247:34> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
`-CStyleCastExpr 0x55f42eed1678 <./ldo.h:24:40, col:51> 'char *' <BitCast>
  `-ImplicitCastExpr 0x55f42eed1660 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x55f42eed1610 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
      `-ImplicitCastExpr 0x55f42eed15f8 <ldo.c:247:31> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55f42eed15d0 <col:31> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
[B10.15] - [B10.20]
  22: DeclStmt 0x55f42eed16e8 <ldo.c:247:3, col:39>col:13
`-VarDecl 0x55f42eed14a0 <col:3, ./ldo.h:24:56> ldo.c:247:13 used funcr 'ptrdiff_t':'long' cinit
  `-ParenExpr 0x55f42eed16c8 <./ldo.h:24:25, col:56> 'long'
    `-BinaryOperator 0x55f42eed16a0 <col:26, col:51> 'long' '-'
      |-CStyleCastExpr 0x55f42eed15a8 <col:26, col:36> 'char *' <BitCast>
      | `-ImplicitCastExpr 0x55f42eed1590 <col:34, col:36> 'StkId':'TValue *' <LValueToRValue>
      |   `-ParenExpr 0x55f42eed1570 <col:34, col:36> 'StkId':'TValue *' lvalue
      |     `-DeclRefExpr 0x55f42eed1500 <ldo.c:247:34> 'StkId':'TValue *' lvalue ParmVar 0x55f42eed1008 'func' 'StkId':'TValue *'
      `-CStyleCastExpr 0x55f42eed1678 <./ldo.h:24:40, col:51> 'char *' <BitCast>
        `-ImplicitCastExpr 0x55f42eed1660 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
          `-MemberExpr 0x55f42eed1610 <ldo.c:247:31, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x55f42ee88a30
            `-ImplicitCastExpr 0x55f42eed15f8 <ldo.c:247:31> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x55f42eed15d0 <col:31> 'lua_State *' lvalue ParmVar 0x55f42eed0f98 'L' 'lua_State *'
ptrdiff_t funcr = ((char *)(func) - (char *)L->stack);
  23: DeclRefExpr 0x55f42eed1700 <ldo.c:248:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
tm
  24: ImplicitCastExpr 0x55f42eed1748 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eed1728 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x55f42eed1700 <ldo.c:248:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
([B10.23]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  25: MemberExpr 0x55f42eed1760 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eed1748 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55f42eed1728 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x55f42eed1700 <ldo.c:248:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
[B10.24]->tt
  26: ImplicitCastExpr 0x55f42eed17d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55f42eed1798 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x55f42eed1760 <col:19, col:24> 'const int' lvalue ->tt 0x55f42ee5e980
    `-ImplicitCastExpr 0x55f42eed1748 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55f42eed1728 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x55f42eed1700 <ldo.c:248:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
([B10.25]) (ImplicitCastExpr, LValueToRValue, int)
  27: IntegerLiteral 0x55f42eed17b8 <./lua.h:80:24> 'int' 6
6
  28: BinaryOperator 0x55f42eed17f0 <./lobject.h:90:18, ./lua.h:80:24> 'int' '=='
|-ImplicitCastExpr 0x55f42eed17d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55f42eed1798 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x55f42eed1760 <col:19, col:24> 'const int' lvalue ->tt 0x55f42ee5e980
|     `-ImplicitCastExpr 0x55f42eed1748 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x55f42eed1728 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x55f42eed1700 <ldo.c:248:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
`-IntegerLiteral 0x55f42eed17b8 <./lua.h:80:24> 'int' 6
[B10.26] == [B10.27]
  29: UnaryOperator 0x55f42eed1838 <ldo.c:248:7, ./lobject.h:83:51> 'int' prefix '!'
`-ParenExpr 0x55f42eed1818 <col:25, col:51> 'int'
  `-BinaryOperator 0x55f42eed17f0 <line:90:18, ./lua.h:80:24> 'int' '=='
    |-ImplicitCastExpr 0x55f42eed17d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x55f42eed1798 <col:18, col:26> 'const int' lvalue
    |   `-MemberExpr 0x55f42eed1760 <col:19, col:24> 'const int' lvalue ->tt 0x55f42ee5e980
    |     `-ImplicitCastExpr 0x55f42eed1748 <col:19, col:21> 'const TValue *' <LValueToRValue>
    |       `-ParenExpr 0x55f42eed1728 <col:19, col:21> 'const TValue *' lvalue
    |         `-DeclRefExpr 0x55f42eed1700 <ldo.c:248:21> 'const TValue *' lvalue Var 0x55f42eed11e0 'tm' 'const TValue *'
    `-IntegerLiteral 0x55f42eed17b8 <./lua.h:80:24> 'int' 6
!([B10.28])
   T: if [B10.29]
   Preds (1): B11
   Succs (2): B9 B8

 [B0 (EXIT)]
   Preds (1): B1
