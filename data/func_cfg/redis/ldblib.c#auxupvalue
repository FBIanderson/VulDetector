static int auxupvalue(lua_State *L, int get)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x5615b248dad8 <ldblib.c:186:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
   2: ImplicitCastExpr 0x5615b248db50 <ldblib.c:186:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248dad8 <col:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x5615b248db00 <ldblib.c:186:18> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5615b248dba0 <ldblib.c:186:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248db00 <col:18> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5615b248db28 <ldblib.c:186:21> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
name
   6: ImplicitCastExpr 0x5615b248dbb8 <ldblib.c:186:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5615b248db28 <col:21> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x5615b248db68 <ldblib.c:186:3, col:25> 'void'
|-ImplicitCastExpr 0x5615b248db50 <col:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248dad8 <col:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5615b248dba0 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248db00 <col:18> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
`-ImplicitCastExpr 0x5615b248dbb8 <col:21> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5615b248db28 <col:21> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x5615b248dbd0 <ldblib.c:187:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f8b0 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_insert
   9: ImplicitCastExpr 0x5615b248dce8 <ldblib.c:187:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248dbd0 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f8b0 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  10: DeclRefExpr 0x5615b248dbf8 <ldblib.c:187:14> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x5615b248dd38 <ldblib.c:187:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248dbf8 <col:14> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: DeclRefExpr 0x5615b248dc20 <ldblib.c:187:19> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
get
  13: ImplicitCastExpr 0x5615b248dc68 <ldblib.c:187:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248dc20 <col:19> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x5615b248dc48 <ldblib.c:187:23> 'int' 1
1
  15: BinaryOperator 0x5615b248dc80 <ldblib.c:187:19, col:23> 'int' '+'
|-ImplicitCastExpr 0x5615b248dc68 <col:19> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248dc20 <col:19> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
`-IntegerLiteral 0x5615b248dc48 <col:23> 'int' 1
[B1.13] + [B1.14]
  16: UnaryOperator 0x5615b248dcc8 <ldblib.c:187:17, col:24> 'int' prefix '-'
`-ParenExpr 0x5615b248dca8 <col:18, col:24> 'int'
  `-BinaryOperator 0x5615b248dc80 <col:19, col:23> 'int' '+'
    |-ImplicitCastExpr 0x5615b248dc68 <col:19> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248dc20 <col:19> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
    `-IntegerLiteral 0x5615b248dc48 <col:23> 'int' 1
-([B1.15])
  17: CallExpr 0x5615b248dd00 <ldblib.c:187:3, col:25> 'void'
|-ImplicitCastExpr 0x5615b248dce8 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248dbd0 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f8b0 'lua_insert' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248dd38 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248dbf8 <col:14> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
`-UnaryOperator 0x5615b248dcc8 <col:17, col:24> 'int' prefix '-'
  `-ParenExpr 0x5615b248dca8 <col:18, col:24> 'int'
    `-BinaryOperator 0x5615b248dc80 <col:19, col:23> 'int' '+'
      |-ImplicitCastExpr 0x5615b248dc68 <col:19> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x5615b248dc20 <col:19> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
      `-IntegerLiteral 0x5615b248dc48 <col:23> 'int' 1
[B1.9]([B1.11], [B1.16])
  18: DeclRefExpr 0x5615b248dd50 <ldblib.c:188:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
get
  19: ImplicitCastExpr 0x5615b248dd98 <ldblib.c:188:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248dd50 <col:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
[B1.18] (ImplicitCastExpr, LValueToRValue, int)
  20: IntegerLiteral 0x5615b248dd78 <ldblib.c:188:16> 'int' 1
1
  21: BinaryOperator 0x5615b248ddb0 <ldblib.c:188:10, col:16> 'int' '+'
|-ImplicitCastExpr 0x5615b248dd98 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248dd50 <col:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
`-IntegerLiteral 0x5615b248dd78 <col:16> 'int' 1
[B1.19] + [B1.20]
  22: ReturnStmt 0x5615b248ddd8 <ldblib.c:188:3, col:16>
`-BinaryOperator 0x5615b248ddb0 <col:10, col:16> 'int' '+'
  |-ImplicitCastExpr 0x5615b248dd98 <col:10> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248dd50 <col:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
  `-IntegerLiteral 0x5615b248dd78 <col:16> 'int' 1
return [B1.21];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x5615b248da68 <ldblib.c:185:28> 'int' 0
0
   2: ReturnStmt 0x5615b248da88 <ldblib.c:185:21, col:28>
`-IntegerLiteral 0x5615b248da68 <col:28> 'int' 0
return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: ConditionalOperator 0x5615b248d910 <ldblib.c:184:10, col:64> 'const char *'
|-ImplicitCastExpr 0x5615b248d830 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248d570 <col:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
|-CallExpr 0x5615b248d6a0 <col:16, col:38> 'const char *'
| |-ImplicitCastExpr 0x5615b248d688 <col:16> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5615b248d598 <col:16> 'const char *(lua_State *, int, int)' Function 0x5615b2470ae8 'lua_getupvalue' 'const char *(lua_State *, int, int)'
| |-ImplicitCastExpr 0x5615b248d6e0 <col:31> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x5615b248d5c0 <col:31> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
| |-IntegerLiteral 0x5615b248d5e8 <col:34> 'int' 1
| `-ImplicitCastExpr 0x5615b248d6f8 <col:37> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x5615b248d608 <col:37> 'int' lvalue Var 0x5615b248d130 'n' 'int'
`-CallExpr 0x5615b248d7c0 <col:42, col:64> 'const char *'
  |-ImplicitCastExpr 0x5615b248d7a8 <col:42> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248d710 <col:42> 'const char *(lua_State *, int, int)' Function 0x5615b2470d60 'lua_setupvalue' 'const char *(lua_State *, int, int)'
  |-ImplicitCastExpr 0x5615b248d800 <col:57> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248d738 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
  |-IntegerLiteral 0x5615b248d760 <col:60> 'int' 1
  `-ImplicitCastExpr 0x5615b248d818 <col:63> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5615b248d780 <col:63> 'int' lvalue Var 0x5615b248d130 'n' 'int'
[B6.2] ? [B4.8] : [B5.8]
   2: DeclRefExpr 0x5615b248d548 <ldblib.c:184:3> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
name
   3: BinaryOperator 0x5615b248d940 <ldblib.c:184:3, col:64> 'const char *' '='
|-DeclRefExpr 0x5615b248d548 <col:3> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
`-ConditionalOperator 0x5615b248d910 <col:10, col:64> 'const char *'
  |-ImplicitCastExpr 0x5615b248d830 <col:10> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248d570 <col:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
  |-CallExpr 0x5615b248d6a0 <col:16, col:38> 'const char *'
  | |-ImplicitCastExpr 0x5615b248d688 <col:16> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x5615b248d598 <col:16> 'const char *(lua_State *, int, int)' Function 0x5615b2470ae8 'lua_getupvalue' 'const char *(lua_State *, int, int)'
  | |-ImplicitCastExpr 0x5615b248d6e0 <col:31> 'lua_State *' <LValueToRValue>
  | | `-DeclRefExpr 0x5615b248d5c0 <col:31> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
  | |-IntegerLiteral 0x5615b248d5e8 <col:34> 'int' 1
  | `-ImplicitCastExpr 0x5615b248d6f8 <col:37> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x5615b248d608 <col:37> 'int' lvalue Var 0x5615b248d130 'n' 'int'
  `-CallExpr 0x5615b248d7c0 <col:42, col:64> 'const char *'
    |-ImplicitCastExpr 0x5615b248d7a8 <col:42> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5615b248d710 <col:42> 'const char *(lua_State *, int, int)' Function 0x5615b2470d60 'lua_setupvalue' 'const char *(lua_State *, int, int)'
    |-ImplicitCastExpr 0x5615b248d800 <col:57> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248d738 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
    |-IntegerLiteral 0x5615b248d760 <col:60> 'int' 1
    `-ImplicitCastExpr 0x5615b248d818 <col:63> 'int' <LValueToRValue>
      `-DeclRefExpr 0x5615b248d780 <col:63> 'int' lvalue Var 0x5615b248d130 'n' 'int'
[B3.2] = [B3.1]
   4: DeclRefExpr 0x5615b248d968 <ldblib.c:185:7> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
name
   5: ImplicitCastExpr 0x5615b248da10 <ldblib.c:185:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5615b248d968 <col:7> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
[B3.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: IntegerLiteral 0x5615b248d990 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x5615b248d9c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5615b248d990 <col:24> 'int' 0
(void *)[B3.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x5615b248da28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x5615b248d9f0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5615b248d9c8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5615b248d990 <col:24> 'int' 0
([B3.7]) (ImplicitCastExpr, BitCast, const char *)
   9: BinaryOperator 0x5615b248da40 <ldblib.c:185:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5615b248da10 <ldblib.c:185:7> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248d968 <col:7> 'const char *' lvalue Var 0x5615b248d080 'name' 'const char *'
`-ImplicitCastExpr 0x5615b248da28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x5615b248d9f0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5615b248d9c8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5615b248d990 <col:24> 'int' 0
[B3.5] == [B3.8]
   T: if [B3.9]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5615b248d598 <ldblib.c:184:16> 'const char *(lua_State *, int, int)' Function 0x5615b2470ae8 'lua_getupvalue' 'const char *(lua_State *, int, int)'
lua_getupvalue
   2: ImplicitCastExpr 0x5615b248d688 <ldblib.c:184:16> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248d598 <col:16> 'const char *(lua_State *, int, int)' Function 0x5615b2470ae8 'lua_getupvalue' 'const char *(lua_State *, int, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, int))
   3: DeclRefExpr 0x5615b248d5c0 <ldblib.c:184:31> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5615b248d6e0 <ldblib.c:184:31> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248d5c0 <col:31> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5615b248d5e8 <ldblib.c:184:34> 'int' 1
1
   6: DeclRefExpr 0x5615b248d608 <ldblib.c:184:37> 'int' lvalue Var 0x5615b248d130 'n' 'int'
n
   7: ImplicitCastExpr 0x5615b248d6f8 <ldblib.c:184:37> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248d608 <col:37> 'int' lvalue Var 0x5615b248d130 'n' 'int'
[B4.6] (ImplicitCastExpr, LValueToRValue, int)
   8: CallExpr 0x5615b248d6a0 <ldblib.c:184:16, col:38> 'const char *'
|-ImplicitCastExpr 0x5615b248d688 <col:16> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248d598 <col:16> 'const char *(lua_State *, int, int)' Function 0x5615b2470ae8 'lua_getupvalue' 'const char *(lua_State *, int, int)'
|-ImplicitCastExpr 0x5615b248d6e0 <col:31> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248d5c0 <col:31> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
|-IntegerLiteral 0x5615b248d5e8 <col:34> 'int' 1
`-ImplicitCastExpr 0x5615b248d6f8 <col:37> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5615b248d608 <col:37> 'int' lvalue Var 0x5615b248d130 'n' 'int'
[B4.2]([B4.4], [B4.5], [B4.7])
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x5615b248d710 <ldblib.c:184:42> 'const char *(lua_State *, int, int)' Function 0x5615b2470d60 'lua_setupvalue' 'const char *(lua_State *, int, int)'
lua_setupvalue
   2: ImplicitCastExpr 0x5615b248d7a8 <ldblib.c:184:42> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248d710 <col:42> 'const char *(lua_State *, int, int)' Function 0x5615b2470d60 'lua_setupvalue' 'const char *(lua_State *, int, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, int))
   3: DeclRefExpr 0x5615b248d738 <ldblib.c:184:57> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5615b248d800 <ldblib.c:184:57> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248d738 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5615b248d760 <ldblib.c:184:60> 'int' 1
1
   6: DeclRefExpr 0x5615b248d780 <ldblib.c:184:63> 'int' lvalue Var 0x5615b248d130 'n' 'int'
n
   7: ImplicitCastExpr 0x5615b248d818 <ldblib.c:184:63> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248d780 <col:63> 'int' lvalue Var 0x5615b248d130 'n' 'int'
[B5.6] (ImplicitCastExpr, LValueToRValue, int)
   8: CallExpr 0x5615b248d7c0 <ldblib.c:184:42, col:64> 'const char *'
|-ImplicitCastExpr 0x5615b248d7a8 <col:42> 'const char *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248d710 <col:42> 'const char *(lua_State *, int, int)' Function 0x5615b2470d60 'lua_setupvalue' 'const char *(lua_State *, int, int)'
|-ImplicitCastExpr 0x5615b248d800 <col:57> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248d738 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
|-IntegerLiteral 0x5615b248d760 <col:60> 'int' 1
`-ImplicitCastExpr 0x5615b248d818 <col:63> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5615b248d780 <col:63> 'int' lvalue Var 0x5615b248d130 'n' 'int'
[B5.2]([B5.4], [B5.5], [B5.7])
   Preds (1): B6
   Succs (1): B3

 [B6]
   1: DeclRefExpr 0x5615b248d570 <ldblib.c:184:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
get
   2: ImplicitCastExpr 0x5615b248d830 <ldblib.c:184:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248d570 <col:10> 'int' lvalue ParmVar 0x5615b248cf20 'get' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B6.2] ? ... : ...
   Preds (1): B8
   Succs (2): B4 B5

 [B7]
   1: IntegerLiteral 0x5615b248d4d8 <ldblib.c:183:37> 'int' 0
0
   2: ReturnStmt 0x5615b248d4f8 <ldblib.c:183:30, col:37>
`-IntegerLiteral 0x5615b248d4d8 <col:37> 'int' 0
return [B7.1];
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclStmt 0x5615b248d100 <ldblib.c:180:3, col:19>col:15
`-VarDecl 0x5615b248d080 <col:3, col:15> col:15 used name 'const char *'
const char *name;
   2: DeclRefExpr 0x5615b248d190 <./lauxlib.h:104:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
   3: ImplicitCastExpr 0x5615b248d220 <./lauxlib.h:104:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248d190 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B8.2] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
   4: DeclRefExpr 0x5615b248d1b8 <ldblib.c:181:25> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x5615b248d270 <ldblib.c:181:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248d1b8 <col:25> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
[B8.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x5615b248d1e0 <ldblib.c:181:28> 'int' 2
2
   7: CallExpr 0x5615b248d238 <./lauxlib.h:104:34, col:58> 'lua_Integer':'long'
|-ImplicitCastExpr 0x5615b248d220 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248d190 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248d270 <ldblib.c:181:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248d1b8 <col:25> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
`-ParenExpr 0x5615b248d200 <./lauxlib.h:104:55, col:57> 'int'
  `-IntegerLiteral 0x5615b248d1e0 <ldblib.c:181:28> 'int' 2
[B8.3]([B8.5], ([B8.6]))
   8: CStyleCastExpr 0x5615b248d2a0 <./lauxlib.h:104:29, col:58> 'int' <IntegralCast>
`-CallExpr 0x5615b248d238 <col:34, col:58> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x5615b248d220 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248d190 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x5615b248d270 <ldblib.c:181:25> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248d1b8 <col:25> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
  `-ParenExpr 0x5615b248d200 <./lauxlib.h:104:55, col:57> 'int'
    `-IntegerLiteral 0x5615b248d1e0 <ldblib.c:181:28> 'int' 2
(int)[B8.7] (CStyleCastExpr, IntegralCast, int)
   9: DeclStmt 0x5615b248d2e8 <ldblib.c:181:3, col:30>col:7
`-VarDecl 0x5615b248d130 <col:3, ./lauxlib.h:104:59> ldblib.c:181:7 used n 'int' cinit
  `-ParenExpr 0x5615b248d2c8 <./lauxlib.h:104:28, col:59> 'int'
    `-CStyleCastExpr 0x5615b248d2a0 <col:29, col:58> 'int' <IntegralCast>
      `-CallExpr 0x5615b248d238 <col:34, col:58> 'lua_Integer':'long'
        |-ImplicitCastExpr 0x5615b248d220 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5615b248d190 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
        |-ImplicitCastExpr 0x5615b248d270 <ldblib.c:181:25> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5615b248d1b8 <col:25> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
        `-ParenExpr 0x5615b248d200 <./lauxlib.h:104:55, col:57> 'int'
          `-IntegerLiteral 0x5615b248d1e0 <ldblib.c:181:28> 'int' 2
int n = ((int)luaL_checkinteger(L, (2)));
  10: DeclRefExpr 0x5615b248d300 <ldblib.c:182:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5615b2476a98 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
luaL_checktype
  11: ImplicitCastExpr 0x5615b248d390 <ldblib.c:182:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248d300 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5615b2476a98 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B8.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  12: DeclRefExpr 0x5615b248d328 <ldblib.c:182:18> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x5615b248d3e8 <ldblib.c:182:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248d328 <col:18> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
[B8.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: IntegerLiteral 0x5615b248d350 <ldblib.c:182:21> 'int' 1
1
  15: IntegerLiteral 0x5615b248d370 <./lua.h:80:24> 'int' 6
6
  16: CallExpr 0x5615b248d3a8 <ldblib.c:182:3, col:37> 'void'
|-ImplicitCastExpr 0x5615b248d390 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248d300 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5615b2476a98 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5615b248d3e8 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248d328 <col:18> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
|-IntegerLiteral 0x5615b248d350 <col:21> 'int' 1
`-IntegerLiteral 0x5615b248d370 <./lua.h:80:24> 'int' 6
[B8.11]([B8.13], [B8.14], [B8.15])
  17: DeclRefExpr 0x5615b248d400 <ldblib.c:183:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5615b2460618 'lua_iscfunction' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_iscfunction
  18: ImplicitCastExpr 0x5615b248d470 <ldblib.c:183:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248d400 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5615b2460618 'lua_iscfunction' 'int (lua_State *, int)':'int (lua_State *, int)'
[B8.17] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  19: DeclRefExpr 0x5615b248d428 <ldblib.c:183:23> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
L
  20: ImplicitCastExpr 0x5615b248d4c0 <ldblib.c:183:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248d428 <col:23> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
[B8.19] (ImplicitCastExpr, LValueToRValue, lua_State *)
  21: IntegerLiteral 0x5615b248d450 <ldblib.c:183:26> 'int' 1
1
  22: CallExpr 0x5615b248d488 <ldblib.c:183:7, col:27> 'int'
|-ImplicitCastExpr 0x5615b248d470 <col:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248d400 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5615b2460618 'lua_iscfunction' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248d4c0 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248d428 <col:23> 'lua_State *' lvalue ParmVar 0x5615b248cea8 'L' 'lua_State *'
`-IntegerLiteral 0x5615b248d450 <col:26> 'int' 1
[B8.18]([B8.20], [B8.21])
   T: if [B8.22]
   Preds (1): B9
   Succs (2): B7 B6

 [B0 (EXIT)]
   Preds (3): B1 B2 B7
