static void DumpConstants(const Proto *f, DumpState *D)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x562132ddb310 <ldump.c:108:17> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
   2: UnaryOperator 0x562132ddb338 <ldump.c:108:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x562132ddb310 <col:17> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B1.1]++
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: DeclRefExpr 0x562132ddb358 <ldump.c:108:22> 'void (const Proto *, const TString *, DumpState *)' Function 0x562132dd8450 'DumpFunction' 'void (const Proto *, const TString *, DumpState *)'
DumpFunction
   2: ImplicitCastExpr 0x562132ddb578 <ldump.c:108:22> 'void (*)(const Proto *, const TString *, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddb358 <col:22> 'void (const Proto *, const TString *, DumpState *)' Function 0x562132dd8450 'DumpFunction' 'void (const Proto *, const TString *, DumpState *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const Proto *, const TString *, DumpState *))
   3: DeclRefExpr 0x562132ddb380 <ldump.c:108:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
f
   4: ImplicitCastExpr 0x562132ddb3a8 <ldump.c:108:35> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddb380 <col:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B2.3] (ImplicitCastExpr, LValueToRValue, const Proto *)
   5: MemberExpr 0x562132ddb3c0 <ldump.c:108:35, col:38> 'struct Proto **const' lvalue ->p 0x562132db8950
`-ImplicitCastExpr 0x562132ddb3a8 <col:35> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddb380 <col:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B2.4]->p
   6: ImplicitCastExpr 0x562132ddb420 <ldump.c:108:35, col:38> 'struct Proto **' <LValueToRValue>
`-MemberExpr 0x562132ddb3c0 <col:35, col:38> 'struct Proto **const' lvalue ->p 0x562132db8950
  `-ImplicitCastExpr 0x562132ddb3a8 <col:35> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddb380 <col:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B2.5] (ImplicitCastExpr, LValueToRValue, struct Proto **)
   7: DeclRefExpr 0x562132ddb3f8 <ldump.c:108:40> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
   8: ImplicitCastExpr 0x562132ddb438 <ldump.c:108:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddb3f8 <col:40> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B2.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x562132ddb450 <ldump.c:108:35, col:41> 'struct Proto *' lvalue
|-ImplicitCastExpr 0x562132ddb420 <col:35, col:38> 'struct Proto **' <LValueToRValue>
| `-MemberExpr 0x562132ddb3c0 <col:35, col:38> 'struct Proto **const' lvalue ->p 0x562132db8950
|   `-ImplicitCastExpr 0x562132ddb3a8 <col:35> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562132ddb380 <col:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
`-ImplicitCastExpr 0x562132ddb438 <col:40> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddb3f8 <col:40> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B2.6][[B2.8]]
  10: ImplicitCastExpr 0x562132ddb5d0 <ldump.c:108:35, col:41> 'struct Proto *' <LValueToRValue>
`-ArraySubscriptExpr 0x562132ddb450 <col:35, col:41> 'struct Proto *' lvalue
  |-ImplicitCastExpr 0x562132ddb420 <col:35, col:38> 'struct Proto **' <LValueToRValue>
  | `-MemberExpr 0x562132ddb3c0 <col:35, col:38> 'struct Proto **const' lvalue ->p 0x562132db8950
  |   `-ImplicitCastExpr 0x562132ddb3a8 <col:35> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x562132ddb380 <col:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
  `-ImplicitCastExpr 0x562132ddb438 <col:40> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562132ddb3f8 <col:40> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B2.9] (ImplicitCastExpr, LValueToRValue, struct Proto *)
  11: ImplicitCastExpr 0x562132ddb5e8 <ldump.c:108:35, col:41> 'const Proto *' <BitCast>
`-ImplicitCastExpr 0x562132ddb5d0 <col:35, col:41> 'struct Proto *' <LValueToRValue>
  `-ArraySubscriptExpr 0x562132ddb450 <col:35, col:41> 'struct Proto *' lvalue
    |-ImplicitCastExpr 0x562132ddb420 <col:35, col:38> 'struct Proto **' <LValueToRValue>
    | `-MemberExpr 0x562132ddb3c0 <col:35, col:38> 'struct Proto **const' lvalue ->p 0x562132db8950
    |   `-ImplicitCastExpr 0x562132ddb3a8 <col:35> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x562132ddb380 <col:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
    `-ImplicitCastExpr 0x562132ddb438 <col:40> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562132ddb3f8 <col:40> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B2.10] (ImplicitCastExpr, BitCast, const Proto *)
  12: DeclRefExpr 0x562132ddb478 <ldump.c:108:43> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
f
  13: ImplicitCastExpr 0x562132ddb4a0 <ldump.c:108:43> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddb478 <col:43> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B2.12] (ImplicitCastExpr, LValueToRValue, const Proto *)
  14: MemberExpr 0x562132ddb4b8 <ldump.c:108:43, col:46> 'TString *const' lvalue ->source 0x562132db8cf8
`-ImplicitCastExpr 0x562132ddb4a0 <col:43> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddb478 <col:43> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B2.13]->source
  15: ImplicitCastExpr 0x562132ddb600 <ldump.c:108:43, col:46> 'TString *' <LValueToRValue>
`-MemberExpr 0x562132ddb4b8 <col:43, col:46> 'TString *const' lvalue ->source 0x562132db8cf8
  `-ImplicitCastExpr 0x562132ddb4a0 <col:43> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddb478 <col:43> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B2.14] (ImplicitCastExpr, LValueToRValue, TString *)
  16: ImplicitCastExpr 0x562132ddb618 <ldump.c:108:43, col:46> 'const TString *' <BitCast>
`-ImplicitCastExpr 0x562132ddb600 <col:43, col:46> 'TString *' <LValueToRValue>
  `-MemberExpr 0x562132ddb4b8 <col:43, col:46> 'TString *const' lvalue ->source 0x562132db8cf8
    `-ImplicitCastExpr 0x562132ddb4a0 <col:43> 'const Proto *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddb478 <col:43> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B2.15] (ImplicitCastExpr, BitCast, const TString *)
  17: DeclRefExpr 0x562132ddb4f0 <ldump.c:108:53> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
D
  18: ImplicitCastExpr 0x562132ddb630 <ldump.c:108:53> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddb4f0 <col:53> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B2.17] (ImplicitCastExpr, LValueToRValue, DumpState *)
  19: CallExpr 0x562132ddb590 <ldump.c:108:22, col:54> 'void'
|-ImplicitCastExpr 0x562132ddb578 <col:22> 'void (*)(const Proto *, const TString *, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddb358 <col:22> 'void (const Proto *, const TString *, DumpState *)' Function 0x562132dd8450 'DumpFunction' 'void (const Proto *, const TString *, DumpState *)'
|-ImplicitCastExpr 0x562132ddb5e8 <col:35, col:41> 'const Proto *' <BitCast>
| `-ImplicitCastExpr 0x562132ddb5d0 <col:35, col:41> 'struct Proto *' <LValueToRValue>
|   `-ArraySubscriptExpr 0x562132ddb450 <col:35, col:41> 'struct Proto *' lvalue
|     |-ImplicitCastExpr 0x562132ddb420 <col:35, col:38> 'struct Proto **' <LValueToRValue>
|     | `-MemberExpr 0x562132ddb3c0 <col:35, col:38> 'struct Proto **const' lvalue ->p 0x562132db8950
|     |   `-ImplicitCastExpr 0x562132ddb3a8 <col:35> 'const Proto *' <LValueToRValue>
|     |     `-DeclRefExpr 0x562132ddb380 <col:35> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
|     `-ImplicitCastExpr 0x562132ddb438 <col:40> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddb3f8 <col:40> 'int' lvalue Var 0x562132dd8768 'i' 'int'
|-ImplicitCastExpr 0x562132ddb618 <col:43, col:46> 'const TString *' <BitCast>
| `-ImplicitCastExpr 0x562132ddb600 <col:43, col:46> 'TString *' <LValueToRValue>
|   `-MemberExpr 0x562132ddb4b8 <col:43, col:46> 'TString *const' lvalue ->source 0x562132db8cf8
|     `-ImplicitCastExpr 0x562132ddb4a0 <col:43> 'const Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddb478 <col:43> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
`-ImplicitCastExpr 0x562132ddb630 <col:53> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddb4f0 <col:53> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B2.2]([B2.11], [B2.16], [B2.18])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x562132ddb268 <ldump.c:108:12> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
   2: ImplicitCastExpr 0x562132ddb2b8 <ldump.c:108:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddb268 <col:12> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562132ddb290 <ldump.c:108:14> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
n
   4: ImplicitCastExpr 0x562132ddb2d0 <ldump.c:108:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddb290 <col:14> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562132ddb2e8 <ldump.c:108:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562132ddb2b8 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132ddb268 <col:12> 'int' lvalue Var 0x562132dd8768 'i' 'int'
`-ImplicitCastExpr 0x562132ddb2d0 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddb290 <col:14> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
[B3.2] < [B3.4]
   T: for (...; [B3.5]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: DeclRefExpr 0x562132dda360 <ldump.c:106:4> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
f
   2: ImplicitCastExpr 0x562132dda388 <ldump.c:106:4> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132dda360 <col:4> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B4.1] (ImplicitCastExpr, LValueToRValue, const Proto *)
   3: MemberExpr 0x562132dda3a0 <ldump.c:106:4, col:7> 'const int' lvalue ->sizep 0x562132db9098
`-ImplicitCastExpr 0x562132dda388 <col:4> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132dda360 <col:4> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B4.2]->sizep
   4: ImplicitCastExpr 0x562132dda3d8 <ldump.c:106:4, col:7> 'int' <LValueToRValue>
`-MemberExpr 0x562132dda3a0 <col:4, col:7> 'const int' lvalue ->sizep 0x562132db9098
  `-ImplicitCastExpr 0x562132dda388 <col:4> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132dda360 <col:4> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x562132dda338 <ldump.c:106:2> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
n
   6: BinaryOperator 0x562132dda3f0 <ldump.c:106:2, col:7> 'int' '='
|-DeclRefExpr 0x562132dda338 <col:2> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
`-ImplicitCastExpr 0x562132dda3d8 <col:4, col:7> 'int' <LValueToRValue>
  `-MemberExpr 0x562132dda3a0 <col:4, col:7> 'const int' lvalue ->sizep 0x562132db9098
    `-ImplicitCastExpr 0x562132dda388 <col:4> 'const Proto *' <LValueToRValue>
      `-DeclRefExpr 0x562132dda360 <col:4> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B4.5] = [B4.4]
   7: DeclRefExpr 0x562132ddb100 <ldump.c:107:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
DumpInt
   8: ImplicitCastExpr 0x562132ddb178 <ldump.c:107:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddb100 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
[B4.7] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
   9: DeclRefExpr 0x562132ddb128 <ldump.c:107:10> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
n
  10: ImplicitCastExpr 0x562132ddb1c8 <ldump.c:107:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddb128 <col:10> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
[B4.9] (ImplicitCastExpr, LValueToRValue, int)
  11: DeclRefExpr 0x562132ddb150 <ldump.c:107:12> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
D
  12: ImplicitCastExpr 0x562132ddb1e0 <ldump.c:107:12> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddb150 <col:12> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B4.11] (ImplicitCastExpr, LValueToRValue, DumpState *)
  13: CallExpr 0x562132ddb190 <ldump.c:107:2, col:13> 'void'
|-ImplicitCastExpr 0x562132ddb178 <col:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddb100 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132ddb1c8 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132ddb128 <col:10> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
`-ImplicitCastExpr 0x562132ddb1e0 <col:12> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddb150 <col:12> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B4.8]([B4.10], [B4.12])
  14: IntegerLiteral 0x562132ddb220 <ldump.c:108:9> 'int' 0
0
  15: DeclRefExpr 0x562132ddb1f8 <ldump.c:108:7> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
  16: BinaryOperator 0x562132ddb240 <ldump.c:108:7, col:9> 'int' '='
|-DeclRefExpr 0x562132ddb1f8 <col:7> 'int' lvalue Var 0x562132dd8768 'i' 'int'
`-IntegerLiteral 0x562132ddb220 <col:9> 'int' 0
[B4.15] = [B4.14]
   Preds (1): B12
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x562132dd9548 <ldump.c:84:17> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
   2: UnaryOperator 0x562132dd9570 <ldump.c:84:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x562132dd9548 <col:17> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B5.1]++
   Preds (5): B7 B8 B9 B10 B11
   Succs (1): B12

 [B6]
   1: DeclRefExpr 0x562132dd9600 <ldump.c:86:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
f
   2: ImplicitCastExpr 0x562132dd9628 <ldump.c:86:20> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132dd9600 <col:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B6.1] (ImplicitCastExpr, LValueToRValue, const Proto *)
   3: MemberExpr 0x562132dd9640 <ldump.c:86:20, col:23> 'TValue *const' lvalue ->k 0x562132db8728
`-ImplicitCastExpr 0x562132dd9628 <col:20> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132dd9600 <col:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B6.2]->k
   4: ImplicitCastExpr 0x562132dd96a0 <ldump.c:86:20, col:23> 'TValue *' <LValueToRValue>
`-MemberExpr 0x562132dd9640 <col:20, col:23> 'TValue *const' lvalue ->k 0x562132db8728
  `-ImplicitCastExpr 0x562132dd9628 <col:20> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132dd9600 <col:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B6.3] (ImplicitCastExpr, LValueToRValue, TValue *)
   5: DeclRefExpr 0x562132dd9678 <ldump.c:86:25> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
   6: ImplicitCastExpr 0x562132dd96b8 <ldump.c:86:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132dd9678 <col:25> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B6.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x562132dd96d0 <ldump.c:86:20, col:26> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x562132dd96a0 <col:20, col:23> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x562132dd9640 <col:20, col:23> 'TValue *const' lvalue ->k 0x562132db8728
|   `-ImplicitCastExpr 0x562132dd9628 <col:20> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562132dd9600 <col:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
`-ImplicitCastExpr 0x562132dd96b8 <col:25> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132dd9678 <col:25> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B6.4][[B6.6]]
   8: UnaryOperator 0x562132dd96f8 <ldump.c:86:19, col:26> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x562132dd96d0 <col:20, col:26> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x562132dd96a0 <col:20, col:23> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x562132dd9640 <col:20, col:23> 'TValue *const' lvalue ->k 0x562132db8728
  |   `-ImplicitCastExpr 0x562132dd9628 <col:20> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x562132dd9600 <col:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
  `-ImplicitCastExpr 0x562132dd96b8 <col:25> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562132dd9678 <col:25> 'int' lvalue Var 0x562132dd8768 'i' 'int'
&[B6.7]
   9: ImplicitCastExpr 0x562132dd9718 <ldump.c:86:19, col:26> 'const TValue *' <BitCast>
`-UnaryOperator 0x562132dd96f8 <col:19, col:26> 'TValue *' prefix '&'
  `-ArraySubscriptExpr 0x562132dd96d0 <col:20, col:26> 'TValue':'struct lua_TValue' lvalue
    |-ImplicitCastExpr 0x562132dd96a0 <col:20, col:23> 'TValue *' <LValueToRValue>
    | `-MemberExpr 0x562132dd9640 <col:20, col:23> 'TValue *const' lvalue ->k 0x562132db8728
    |   `-ImplicitCastExpr 0x562132dd9628 <col:20> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x562132dd9600 <col:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
    `-ImplicitCastExpr 0x562132dd96b8 <col:25> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562132dd9678 <col:25> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B6.8] (ImplicitCastExpr, BitCast, const TValue *)
  10: DeclStmt 0x562132dd9730 <ldump.c:86:3, col:27>col:17
`-VarDecl 0x562132dd95a0 <col:3, col:26> col:17 used o 'const TValue *' cinit
  `-ImplicitCastExpr 0x562132dd9718 <col:19, col:26> 'const TValue *' <BitCast>
    `-UnaryOperator 0x562132dd96f8 <col:19, col:26> 'TValue *' prefix '&'
      `-ArraySubscriptExpr 0x562132dd96d0 <col:20, col:26> 'TValue':'struct lua_TValue' lvalue
        |-ImplicitCastExpr 0x562132dd96a0 <col:20, col:23> 'TValue *' <LValueToRValue>
        | `-MemberExpr 0x562132dd9640 <col:20, col:23> 'TValue *const' lvalue ->k 0x562132db8728
        |   `-ImplicitCastExpr 0x562132dd9628 <col:20> 'const Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x562132dd9600 <col:20> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
        `-ImplicitCastExpr 0x562132dd96b8 <col:25> 'int' <LValueToRValue>
          `-DeclRefExpr 0x562132dd9678 <col:25> 'int' lvalue Var 0x562132dd8768 'i' 'int'
const TValue *o = &f->k[i];
  11: DeclRefExpr 0x562132dd9748 <ldump.c:87:3> 'void (int, DumpState *)' Function 0x562132dd5e10 'DumpChar' 'void (int, DumpState *)'
DumpChar
  12: ImplicitCastExpr 0x562132dd9850 <ldump.c:87:3> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132dd9748 <col:3> 'void (int, DumpState *)' Function 0x562132dd5e10 'DumpChar' 'void (int, DumpState *)'
[B6.11] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
  13: DeclRefExpr 0x562132dd9770 <ldump.c:87:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
o
  14: ImplicitCastExpr 0x562132dd97b8 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x562132dd9798 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x562132dd9770 <ldump.c:87:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B6.13]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  15: MemberExpr 0x562132dd97d0 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x562132daa8c0
`-ImplicitCastExpr 0x562132dd97b8 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x562132dd9798 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x562132dd9770 <ldump.c:87:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B6.14]->tt
  16: ImplicitCastExpr 0x562132dd98a0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x562132dd9808 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x562132dd97d0 <col:19, col:24> 'const int' lvalue ->tt 0x562132daa8c0
    `-ImplicitCastExpr 0x562132dd97b8 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x562132dd9798 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x562132dd9770 <ldump.c:87:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B6.15]) (ImplicitCastExpr, LValueToRValue, int)
  17: DeclRefExpr 0x562132dd9828 <ldump.c:87:21> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
D
  18: ImplicitCastExpr 0x562132dd98b8 <ldump.c:87:21> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132dd9828 <col:21> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B6.17] (ImplicitCastExpr, LValueToRValue, DumpState *)
  19: CallExpr 0x562132dd9868 <ldump.c:87:3, col:22> 'void'
|-ImplicitCastExpr 0x562132dd9850 <col:3> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132dd9748 <col:3> 'void (int, DumpState *)' Function 0x562132dd5e10 'DumpChar' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132dd98a0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x562132dd9808 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x562132dd97d0 <col:19, col:24> 'const int' lvalue ->tt 0x562132daa8c0
|     `-ImplicitCastExpr 0x562132dd97b8 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x562132dd9798 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x562132dd9770 <ldump.c:87:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
`-ImplicitCastExpr 0x562132dd98b8 <col:21> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132dd9828 <col:21> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B6.12]([B6.16], [B6.18])
  20: DeclRefExpr 0x562132dd98d0 <ldump.c:88:17> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
o
  21: ImplicitCastExpr 0x562132dd9918 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x562132dd98f8 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x562132dd98d0 <ldump.c:88:17> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B6.20]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  22: MemberExpr 0x562132dd9930 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x562132daa8c0
`-ImplicitCastExpr 0x562132dd9918 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x562132dd98f8 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x562132dd98d0 <ldump.c:88:17> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B6.21]->tt
  23: ImplicitCastExpr 0x562132dd9988 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x562132dd9968 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x562132dd9930 <col:19, col:24> 'const int' lvalue ->tt 0x562132daa8c0
    `-ImplicitCastExpr 0x562132dd9918 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x562132dd98f8 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x562132dd98d0 <ldump.c:88:17> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B6.22]) (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B6.23]
   Preds (1): B12
   Succs (5): B8 B9 B10 B11 B7

 [B7]
  default:
   1: IntegerLiteral 0x562132dda1e0 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x562132dda210 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x562132dda1e0 <col:31> 'int' 0
(void)[B7.1] (CStyleCastExpr, ToVoid, void)
   T: break;
   Preds (1): B6
   Succs (1): B5

 [B8]
  case 4:
   1: DeclRefExpr 0x562132dd9f28 <ldump.c:99:2> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
DumpString
   2: ImplicitCastExpr 0x562132dda158 <ldump.c:99:2> 'void (*)(const TString *, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132dd9f28 <col:2> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const TString *, DumpState *))
   3: DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
o
   4: ImplicitCastExpr 0x562132dd9f98 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B8.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x562132dd9fb0 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x562132daa860
`-ImplicitCastExpr 0x562132dd9f98 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B8.4]->value
   6: MemberExpr 0x562132dd9fe8 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x562132daa560
`-MemberExpr 0x562132dd9fb0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x562132daa860
  `-ImplicitCastExpr 0x562132dd9f98 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B8.5].gc
   7: ImplicitCastExpr 0x562132dda020 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x562132dd9fe8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x562132daa560
  `-MemberExpr 0x562132dd9fb0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x562132daa860
    `-ImplicitCastExpr 0x562132dd9f98 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B8.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x562132dda038 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x562132dd05e8
`-ImplicitCastExpr 0x562132dda020 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x562132dd9fe8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x562132daa560
    `-MemberExpr 0x562132dd9fb0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x562132daa860
      `-ImplicitCastExpr 0x562132dd9f98 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B8.7]->ts
   9: UnaryOperator 0x562132dda098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x562132dda038 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x562132dd05e8
  `-ImplicitCastExpr 0x562132dda020 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x562132dd9fe8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x562132daa560
      `-MemberExpr 0x562132dd9fb0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x562132daa860
        `-ImplicitCastExpr 0x562132dd9f98 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
&[B8.8]
  10: ImplicitCastExpr 0x562132dda1a8 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
`-ParenExpr 0x562132dda0b8 <col:25, col:27> 'union TString *'
  `-UnaryOperator 0x562132dda098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x562132dda038 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x562132dd05e8
      `-ImplicitCastExpr 0x562132dda020 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x562132dd9fe8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x562132daa560
          `-MemberExpr 0x562132dd9fb0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x562132daa860
            `-ImplicitCastExpr 0x562132dd9f98 <col:49, col:51> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
                `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B8.9]) (ImplicitCastExpr, BitCast, const TString *)
  11: DeclRefExpr 0x562132dda0d8 <ldump.c:99:27> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
D
  12: ImplicitCastExpr 0x562132dda1c0 <ldump.c:99:27> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132dda0d8 <col:27> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B8.11] (ImplicitCastExpr, LValueToRValue, DumpState *)
  13: CallExpr 0x562132dda170 <ldump.c:99:2, col:28> 'void'
|-ImplicitCastExpr 0x562132dda158 <col:2> 'void (*)(const TString *, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132dd9f28 <col:2> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
|-ImplicitCastExpr 0x562132dda1a8 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
| `-ParenExpr 0x562132dda0b8 <col:25, col:27> 'union TString *'
|   `-UnaryOperator 0x562132dda098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|     `-MemberExpr 0x562132dda038 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x562132dd05e8
|       `-ImplicitCastExpr 0x562132dda020 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         `-MemberExpr 0x562132dd9fe8 <col:49, col:60> 'GCObject *const' lvalue .gc 0x562132daa560
|           `-MemberExpr 0x562132dd9fb0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x562132daa860
|             `-ImplicitCastExpr 0x562132dd9f98 <col:49, col:51> 'const TValue *' <LValueToRValue>
|               `-ParenExpr 0x562132dd9f78 <col:49, col:51> 'const TValue *' lvalue
|                 `-DeclRefExpr 0x562132dd9f50 <ldump.c:99:24> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
`-ImplicitCastExpr 0x562132dda1c0 <col:27> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132dda0d8 <col:27> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B8.2]([B8.10], [B8.12])
   T: break;
   Preds (1): B6
   Succs (1): B5

 [B9]
  case 3:
   1: DeclRefExpr 0x562132dd9ca8 <ldump.c:96:2> 'void (lua_Number, DumpState *)' Function 0x562132dd6800 'DumpNumber' 'void (lua_Number, DumpState *)'
DumpNumber
   2: ImplicitCastExpr 0x562132dd9e48 <ldump.c:96:2> 'void (*)(lua_Number, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132dd9ca8 <col:2> 'void (lua_Number, DumpState *)' Function 0x562132dd6800 'DumpNumber' 'void (lua_Number, DumpState *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_Number, DumpState *))
   3: DeclRefExpr 0x562132dd9cd0 <ldump.c:96:20> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
o
   4: ImplicitCastExpr 0x562132dd9d18 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x562132dd9cf8 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x562132dd9cd0 <ldump.c:96:20> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B9.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x562132dd9d30 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x562132daa860
`-ImplicitCastExpr 0x562132dd9d18 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x562132dd9cf8 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x562132dd9cd0 <ldump.c:96:20> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B9.4]->value
   6: MemberExpr 0x562132dd9d68 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x562132daa618
`-MemberExpr 0x562132dd9d30 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x562132daa860
  `-ImplicitCastExpr 0x562132dd9d18 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x562132dd9cf8 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x562132dd9cd0 <ldump.c:96:20> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B9.5].n
   7: ImplicitCastExpr 0x562132dd9e98 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x562132dd9da0 <col:25, col:27> 'const lua_Number':'const double' lvalue
  `-MemberExpr 0x562132dd9d68 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x562132daa618
    `-MemberExpr 0x562132dd9d30 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x562132daa860
      `-ImplicitCastExpr 0x562132dd9d18 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x562132dd9cf8 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x562132dd9cd0 <ldump.c:96:20> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B9.6]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   8: DeclRefExpr 0x562132dd9dc0 <ldump.c:96:23> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
D
   9: ImplicitCastExpr 0x562132dd9eb0 <ldump.c:96:23> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132dd9dc0 <col:23> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B9.8] (ImplicitCastExpr, LValueToRValue, DumpState *)
  10: CallExpr 0x562132dd9e60 <ldump.c:96:2, col:24> 'void'
|-ImplicitCastExpr 0x562132dd9e48 <col:2> 'void (*)(lua_Number, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132dd9ca8 <col:2> 'void (lua_Number, DumpState *)' Function 0x562132dd6800 'DumpNumber' 'void (lua_Number, DumpState *)'
|-ImplicitCastExpr 0x562132dd9e98 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x562132dd9da0 <col:25, col:27> 'const lua_Number':'const double' lvalue
|   `-MemberExpr 0x562132dd9d68 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x562132daa618
|     `-MemberExpr 0x562132dd9d30 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x562132daa860
|       `-ImplicitCastExpr 0x562132dd9d18 <col:44, col:46> 'const TValue *' <LValueToRValue>
|         `-ParenExpr 0x562132dd9cf8 <col:44, col:46> 'const TValue *' lvalue
|           `-DeclRefExpr 0x562132dd9cd0 <ldump.c:96:20> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
`-ImplicitCastExpr 0x562132dd9eb0 <col:23> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132dd9dc0 <col:23> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B9.2]([B9.7], [B9.9])
   T: break;
   Preds (1): B6
   Succs (1): B5

 [B10]
  case 1:
   1: DeclRefExpr 0x562132dd9a88 <ldump.c:93:2> 'void (int, DumpState *)' Function 0x562132dd5e10 'DumpChar' 'void (int, DumpState *)'
DumpChar
   2: ImplicitCastExpr 0x562132dd9bc8 <ldump.c:93:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132dd9a88 <col:2> 'void (int, DumpState *)' Function 0x562132dd5e10 'DumpChar' 'void (int, DumpState *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
   3: DeclRefExpr 0x562132dd9ab0 <ldump.c:93:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
o
   4: ImplicitCastExpr 0x562132dd9af8 <./lobject.h:100:45, col:47> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x562132dd9ad8 <col:45, col:47> 'const TValue *' lvalue
  `-DeclRefExpr 0x562132dd9ab0 <ldump.c:93:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B10.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x562132dd9b10 <./lobject.h:100:45, col:50> 'const Value':'const Value' lvalue ->value 0x562132daa860
`-ImplicitCastExpr 0x562132dd9af8 <col:45, col:47> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x562132dd9ad8 <col:45, col:47> 'const TValue *' lvalue
    `-DeclRefExpr 0x562132dd9ab0 <ldump.c:93:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B10.4]->value
   6: MemberExpr 0x562132dd9b48 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x562132daa678
`-MemberExpr 0x562132dd9b10 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x562132daa860
  `-ImplicitCastExpr 0x562132dd9af8 <col:45, col:47> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x562132dd9ad8 <col:45, col:47> 'const TValue *' lvalue
      `-DeclRefExpr 0x562132dd9ab0 <ldump.c:93:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
[B10.5].b
   7: ImplicitCastExpr 0x562132dd9c18 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
`-ParenExpr 0x562132dd9b80 <col:25, col:27> 'const int' lvalue
  `-MemberExpr 0x562132dd9b48 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x562132daa678
    `-MemberExpr 0x562132dd9b10 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x562132daa860
      `-ImplicitCastExpr 0x562132dd9af8 <col:45, col:47> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x562132dd9ad8 <col:45, col:47> 'const TValue *' lvalue
          `-DeclRefExpr 0x562132dd9ab0 <ldump.c:93:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
([B10.6]) (ImplicitCastExpr, LValueToRValue, int)
   8: DeclRefExpr 0x562132dd9ba0 <ldump.c:93:21> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
D
   9: ImplicitCastExpr 0x562132dd9c30 <ldump.c:93:21> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132dd9ba0 <col:21> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B10.8] (ImplicitCastExpr, LValueToRValue, DumpState *)
  10: CallExpr 0x562132dd9be0 <ldump.c:93:2, col:22> 'void'
|-ImplicitCastExpr 0x562132dd9bc8 <col:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132dd9a88 <col:2> 'void (int, DumpState *)' Function 0x562132dd5e10 'DumpChar' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132dd9c18 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
| `-ParenExpr 0x562132dd9b80 <col:25, col:27> 'const int' lvalue
|   `-MemberExpr 0x562132dd9b48 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x562132daa678
|     `-MemberExpr 0x562132dd9b10 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x562132daa860
|       `-ImplicitCastExpr 0x562132dd9af8 <col:45, col:47> 'const TValue *' <LValueToRValue>
|         `-ParenExpr 0x562132dd9ad8 <col:45, col:47> 'const TValue *' lvalue
|           `-DeclRefExpr 0x562132dd9ab0 <ldump.c:93:18> 'const TValue *' lvalue Var 0x562132dd95a0 'o' 'const TValue *'
`-ImplicitCastExpr 0x562132dd9c30 <col:21> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132dd9ba0 <col:21> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B10.2]([B10.7], [B10.9])
   T: break;
   Preds (1): B6
   Succs (1): B5

 [B11]
  case 0:
   T: break;
   Preds (1): B6
   Succs (1): B5

 [B12]
   1: DeclRefExpr 0x562132dd94a0 <ldump.c:84:12> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
   2: ImplicitCastExpr 0x562132dd94f0 <ldump.c:84:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132dd94a0 <col:12> 'int' lvalue Var 0x562132dd8768 'i' 'int'
[B12.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562132dd94c8 <ldump.c:84:14> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
n
   4: ImplicitCastExpr 0x562132dd9508 <ldump.c:84:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132dd94c8 <col:14> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
[B12.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562132dd9520 <ldump.c:84:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562132dd94f0 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132dd94a0 <col:12> 'int' lvalue Var 0x562132dd8768 'i' 'int'
`-ImplicitCastExpr 0x562132dd9508 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132dd94c8 <col:14> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
[B12.2] < [B12.4]
   T: for (...; [B12.5]; ...)
   Preds (2): B5 B13
   Succs (2): B6 B4

 [B13]
   1: DeclStmt 0x562132de61a8 <ldump.c:82:6>col:6
`-VarDecl 0x562132dd8768 <col:2, col:6> col:6 used i 'int'
int i;
   2: DeclRefExpr 0x562132dd8840 <ldump.c:82:10> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
f
   3: ImplicitCastExpr 0x562132dd8868 <ldump.c:82:10> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132dd8840 <col:10> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B13.2] (ImplicitCastExpr, LValueToRValue, const Proto *)
   4: MemberExpr 0x562132dd8880 <ldump.c:82:10, col:13> 'const int' lvalue ->sizek 0x562132db8f78
`-ImplicitCastExpr 0x562132dd8868 <col:10> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132dd8840 <col:10> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B13.3]->sizek
   5: ImplicitCastExpr 0x562132dd88b8 <ldump.c:82:10, col:13> 'int' <LValueToRValue>
`-MemberExpr 0x562132dd8880 <col:10, col:13> 'const int' lvalue ->sizek 0x562132db8f78
  `-ImplicitCastExpr 0x562132dd8868 <col:10> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132dd8840 <col:10> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
[B13.4] (ImplicitCastExpr, LValueToRValue, int)
   6: DeclStmt 0x562132de6190 <ldump.c:82:8, col:13>col:8
`-VarDecl 0x562132dd87e0 <col:2, col:13> col:8 used n 'int' cinit
  `-ImplicitCastExpr 0x562132dd88b8 <col:10, col:13> 'int' <LValueToRValue>
    `-MemberExpr 0x562132dd8880 <col:10, col:13> 'const int' lvalue ->sizek 0x562132db8f78
      `-ImplicitCastExpr 0x562132dd8868 <col:10> 'const Proto *' <LValueToRValue>
        `-DeclRefExpr 0x562132dd8840 <col:10> 'const Proto *' lvalue ParmVar 0x562132dd8518 'f' 'const Proto *'
int n = f->sizek;
   7: DeclRefExpr 0x562132dd8900 <ldump.c:83:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
DumpInt
   8: ImplicitCastExpr 0x562132dd8978 <ldump.c:83:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132dd8900 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
[B13.7] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
   9: DeclRefExpr 0x562132dd8928 <ldump.c:83:10> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
n
  10: ImplicitCastExpr 0x562132dd89c8 <ldump.c:83:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132dd8928 <col:10> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
[B13.9] (ImplicitCastExpr, LValueToRValue, int)
  11: DeclRefExpr 0x562132dd8950 <ldump.c:83:12> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
D
  12: ImplicitCastExpr 0x562132dd89e0 <ldump.c:83:12> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132dd8950 <col:12> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B13.11] (ImplicitCastExpr, LValueToRValue, DumpState *)
  13: CallExpr 0x562132dd8990 <ldump.c:83:2, col:13> 'void'
|-ImplicitCastExpr 0x562132dd8978 <col:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132dd8900 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132dd89c8 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132dd8928 <col:10> 'int' lvalue Var 0x562132dd87e0 'n' 'int'
`-ImplicitCastExpr 0x562132dd89e0 <col:12> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132dd8950 <col:12> 'DumpState *' lvalue ParmVar 0x562132dd8588 'D' 'DumpState *'
[B13.8]([B13.10], [B13.12])
  14: IntegerLiteral 0x562132dd9458 <ldump.c:84:9> 'int' 0
0
  15: DeclRefExpr 0x562132dd9430 <ldump.c:84:7> 'int' lvalue Var 0x562132dd8768 'i' 'int'
i
  16: BinaryOperator 0x562132dd9478 <ldump.c:84:7, col:9> 'int' '='
|-DeclRefExpr 0x562132dd9430 <col:7> 'int' lvalue Var 0x562132dd8768 'i' 'int'
`-IntegerLiteral 0x562132dd9458 <col:9> 'int' 0
[B13.15] = [B13.14]
   Preds (1): B14
   Succs (1): B12

 [B0 (EXIT)]
   Preds (1): B3
