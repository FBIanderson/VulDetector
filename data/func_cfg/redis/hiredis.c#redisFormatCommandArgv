int redisFormatCommandArgv(char **target, int argc, const char **argv, const size_t *argvlen)
 [B23 (ENTRY)]
   Succs (1): B22

 [B1]
   1: ConditionalOperator 0x5628070638a8 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x5628070635b8 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x562807063590 <hiredis.c:643:12, col:19> 'int' '=='
|   |-ImplicitCastExpr 0x562807063560 <col:12> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x562807063510 <col:12> 'int' lvalue Var 0x562807060858 'pos' 'int'
|   `-ImplicitCastExpr 0x562807063578 <col:19> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x562807063538 <col:19> 'int' lvalue Var 0x562807060970 'totlen' 'int'
|-CStyleCastExpr 0x562807063658 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x562807063638 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x5628070635d8 <col:28> 'int' 0
`-CallExpr 0x562807063800 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x5628070637e8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807063680 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x562807063848 <<scratch space>:148:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x5628070636a8 <col:1> 'const char [14]' lvalue "pos == totlen"
  |-ImplicitCastExpr 0x562807063860 <line:149:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x5628070636e0 <col:1> 'const char [10]' lvalue "hiredis.c"
  |-ImplicitCastExpr 0x562807063878 <line:150:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x562807063718 <col:1> 'int' 643
  `-ImplicitCastExpr 0x562807063890 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x5628070637c8 <col:30, col:44> 'const char [72]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x5628070637a8 <col:44> 'const char [72]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x562807063738 <col:44> 'const char [72]' lvalue "int redisFormatCommandArgv(char **, int, const char **, const size_t *)"
([B4.5]) ? [B2.2] : [B3.12]
   2: CharacterLiteral 0x5628070639a0 <hiredis.c:644:16> 'int' 0
'\x00'
   3: ImplicitCastExpr 0x5628070639b8 <hiredis.c:644:16> 'char' <IntegralCast>
`-CharacterLiteral 0x5628070639a0 <col:16> 'int' 0
[B1.2] (ImplicitCastExpr, IntegralCast, char)
   4: DeclRefExpr 0x5628070638f8 <hiredis.c:644:5> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
   5: ImplicitCastExpr 0x562807063948 <hiredis.c:644:5> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5628070638f8 <col:5> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B1.4] (ImplicitCastExpr, LValueToRValue, char *)
   6: DeclRefExpr 0x562807063920 <hiredis.c:644:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
   7: ImplicitCastExpr 0x562807063960 <hiredis.c:644:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807063920 <col:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B1.6] (ImplicitCastExpr, LValueToRValue, int)
   8: ArraySubscriptExpr 0x562807063978 <hiredis.c:644:5, col:12> 'char' lvalue
|-ImplicitCastExpr 0x562807063948 <col:5> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5628070638f8 <col:5> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
`-ImplicitCastExpr 0x562807063960 <col:9> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807063920 <col:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B1.5][[B1.7]]
   9: BinaryOperator 0x5628070639d0 <hiredis.c:644:5, col:16> 'char' '='
|-ArraySubscriptExpr 0x562807063978 <col:5, col:12> 'char' lvalue
| |-ImplicitCastExpr 0x562807063948 <col:5> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x5628070638f8 <col:5> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
| `-ImplicitCastExpr 0x562807063960 <col:9> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x562807063920 <col:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
`-ImplicitCastExpr 0x5628070639b8 <col:16> 'char' <IntegralCast>
  `-CharacterLiteral 0x5628070639a0 <col:16> 'int' 0
[B1.8] = [B1.3]
  10: DeclRefExpr 0x562807063a58 <hiredis.c:646:15> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
  11: ImplicitCastExpr 0x562807063a80 <hiredis.c:646:15> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562807063a58 <col:15> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B1.10] (ImplicitCastExpr, LValueToRValue, char *)
  12: DeclRefExpr 0x5628070639f8 <hiredis.c:646:6> 'char **' lvalue ParmVar 0x562807060450 'target' 'char **'
target
  13: ImplicitCastExpr 0x562807063a20 <hiredis.c:646:6> 'char **' <LValueToRValue>
`-DeclRefExpr 0x5628070639f8 <col:6> 'char **' lvalue ParmVar 0x562807060450 'target' 'char **'
[B1.12] (ImplicitCastExpr, LValueToRValue, char **)
  14: UnaryOperator 0x562807063a38 <hiredis.c:646:5, col:6> 'char *' lvalue prefix '*'
`-ImplicitCastExpr 0x562807063a20 <col:6> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x5628070639f8 <col:6> 'char **' lvalue ParmVar 0x562807060450 'target' 'char **'
*[B1.13]
  15: BinaryOperator 0x562807063a98 <hiredis.c:646:5, col:15> 'char *' '='
|-UnaryOperator 0x562807063a38 <col:5, col:6> 'char *' lvalue prefix '*'
| `-ImplicitCastExpr 0x562807063a20 <col:6> 'char **' <LValueToRValue>
|   `-DeclRefExpr 0x5628070639f8 <col:6> 'char **' lvalue ParmVar 0x562807060450 'target' 'char **'
`-ImplicitCastExpr 0x562807063a80 <col:15> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x562807063a58 <col:15> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B1.14] = [B1.11]
  16: DeclRefExpr 0x562807063ac0 <hiredis.c:647:12> 'int' lvalue Var 0x562807060970 'totlen' 'int'
totlen
  17: ImplicitCastExpr 0x562807063ae8 <hiredis.c:647:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807063ac0 <col:12> 'int' lvalue Var 0x562807060970 'totlen' 'int'
[B1.16] (ImplicitCastExpr, LValueToRValue, int)
  18: ReturnStmt 0x562807063b00 <hiredis.c:647:5, col:12>
`-ImplicitCastExpr 0x562807063ae8 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807063ac0 <col:12> 'int' lvalue Var 0x562807060970 'totlen' 'int'
return [B1.17];
   Preds (2): B2 B3(Unreachable)
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x5628070635d8 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x562807063658 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x562807063638 <col:27, col:29> 'int'
  `-IntegerLiteral 0x5628070635d8 <col:28> 'int' 0
(void)([B2.1]) (CStyleCastExpr, ToVoid, void)
   Preds (1): B4
   Succs (1): B1

 [B3 (NORETURN)]
   1: DeclRefExpr 0x562807063680 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x5628070637e8 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807063680 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x5628070636a8 <<scratch space>:148:1> 'const char [14]' lvalue "pos == totlen"
"pos == totlen"
   4: ImplicitCastExpr 0x562807063848 <<scratch space>:148:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x5628070636a8 <col:1> 'const char [14]' lvalue "pos == totlen"
[B3.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x5628070636e0 <<scratch space>:149:1> 'const char [10]' lvalue "hiredis.c"
"hiredis.c"
   6: ImplicitCastExpr 0x562807063860 <<scratch space>:149:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x5628070636e0 <col:1> 'const char [10]' lvalue "hiredis.c"
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x562807063718 <<scratch space>:150:1> 'int' 643
643
   8: ImplicitCastExpr 0x562807063878 <<scratch space>:150:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x562807063718 <col:1> 'int' 643
[B3.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x562807063738 </usr/include/assert.h:129:44> 'const char [72]' lvalue "int redisFormatCommandArgv(char **, int, const char **, const size_t *)"
"int redisFormatCommandArgv(char **, int, const char **, const size_t *)"
  10: PredefinedExpr 0x5628070637a8 </usr/include/assert.h:129:44> 'const char [72]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x562807063738 <col:44> 'const char [72]' lvalue "int redisFormatCommandArgv(char **, int, const char **, const size_t *)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x562807063890 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x5628070637c8 <col:30, col:44> 'const char [72]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x5628070637a8 <col:44> 'const char [72]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x562807063738 <col:44> 'const char [72]' lvalue "int redisFormatCommandArgv(char **, int, const char **, const size_t *)"
__extension__ [B3.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x562807063800 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x5628070637e8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807063680 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x562806fa5670 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x562807063848 <<scratch space>:148:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x5628070636a8 <col:1> 'const char [14]' lvalue "pos == totlen"
|-ImplicitCastExpr 0x562807063860 <line:149:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x5628070636e0 <col:1> 'const char [10]' lvalue "hiredis.c"
|-ImplicitCastExpr 0x562807063878 <line:150:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x562807063718 <col:1> 'int' 643
`-ImplicitCastExpr 0x562807063890 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x5628070637c8 <col:30, col:44> 'const char [72]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x5628070637a8 <col:44> 'const char [72]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x562807063738 <col:44> 'const char [72]' lvalue "int redisFormatCommandArgv(char **, int, const char **, const size_t *)"
[B3.2]([B3.4], [B3.6], [B3.8], [B3.11])
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x562807063510 <hiredis.c:643:12> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
   2: ImplicitCastExpr 0x562807063560 <hiredis.c:643:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807063510 <col:12> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562807063538 <hiredis.c:643:19> 'int' lvalue Var 0x562807060970 'totlen' 'int'
totlen
   4: ImplicitCastExpr 0x562807063578 <hiredis.c:643:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807063538 <col:19> 'int' lvalue Var 0x562807060970 'totlen' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562807063590 <hiredis.c:643:12, col:19> 'int' '=='
|-ImplicitCastExpr 0x562807063560 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562807063510 <col:12> 'int' lvalue Var 0x562807060858 'pos' 'int'
`-ImplicitCastExpr 0x562807063578 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807063538 <col:19> 'int' lvalue Var 0x562807060970 'totlen' 'int'
[B4.2] == [B4.4]
   T: ([B4.5]) ? ... : ...
   Preds (1): B10
   Succs (2): B2 B3

 [B5]
   1: DeclRefExpr 0x562807062a10 <hiredis.c:635:27> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   2: UnaryOperator 0x562807062a38 <hiredis.c:635:27, col:28> 'int' postfix '++'
`-DeclRefExpr 0x562807062a10 <col:27> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B5.1]++
   Preds (1): B6
   Succs (1): B10

 [B6]
   1: ConditionalOperator 0x562807062cc8 <hiredis.c:636:15, col:52> 'unsigned long'
|-ImplicitCastExpr 0x562807062c98 <col:15> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x562807062a80 <col:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
|-ImplicitCastExpr 0x562807062cb0 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
| `-ArraySubscriptExpr 0x562807062b28 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
|   |-ImplicitCastExpr 0x562807062af8 <col:25> 'const size_t *' <LValueToRValue>
|   | `-DeclRefExpr 0x562807062aa8 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
|   `-ImplicitCastExpr 0x562807062b10 <col:33> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x562807062ad0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
`-CallExpr 0x562807062c50 <col:38, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x562807062c38 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807062b50 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
  `-ImplicitCastExpr 0x562807062c80 <col:45, col:51> 'const char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x562807062bf8 <col:45, col:51> 'const char *' lvalue
      |-ImplicitCastExpr 0x562807062bc8 <col:45> 'const char **' <LValueToRValue>
      | `-DeclRefExpr 0x562807062b78 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
      `-ImplicitCastExpr 0x562807062be0 <col:50> 'int' <LValueToRValue>
        `-DeclRefExpr 0x562807062ba0 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B9.2] ? [B7.6] : [B8.9]
   2: DeclRefExpr 0x562807062a58 <hiredis.c:636:9> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
len
   3: BinaryOperator 0x562807062cf8 <hiredis.c:636:9, col:52> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x562807062a58 <col:9> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
`-ConditionalOperator 0x562807062cc8 <col:15, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x562807062c98 <col:15> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x562807062a80 <col:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
  |-ImplicitCastExpr 0x562807062cb0 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
  | `-ArraySubscriptExpr 0x562807062b28 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |   |-ImplicitCastExpr 0x562807062af8 <col:25> 'const size_t *' <LValueToRValue>
  |   | `-DeclRefExpr 0x562807062aa8 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
  |   `-ImplicitCastExpr 0x562807062b10 <col:33> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x562807062ad0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
  `-CallExpr 0x562807062c50 <col:38, col:52> 'unsigned long'
    |-ImplicitCastExpr 0x562807062c38 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562807062b50 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
    `-ImplicitCastExpr 0x562807062c80 <col:45, col:51> 'const char *' <LValueToRValue>
      `-ArraySubscriptExpr 0x562807062bf8 <col:45, col:51> 'const char *' lvalue
        |-ImplicitCastExpr 0x562807062bc8 <col:45> 'const char **' <LValueToRValue>
        | `-DeclRefExpr 0x562807062b78 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
        `-ImplicitCastExpr 0x562807062be0 <col:50> 'int' <LValueToRValue>
          `-DeclRefExpr 0x562807062ba0 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B6.2] = [B6.1]
   4: DeclRefExpr 0x562807062d20 <hiredis.c:637:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
   5: DeclRefExpr 0x562807062d48 <hiredis.c:637:16> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
sprintf
   6: ImplicitCastExpr 0x562807062e70 <hiredis.c:637:16> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807062d48 <col:16> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
[B6.5] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, const char *, ...))
   7: DeclRefExpr 0x562807062d70 <hiredis.c:637:24> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
   8: ImplicitCastExpr 0x562807062dc0 <hiredis.c:637:24> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562807062d70 <col:24> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B6.7] (ImplicitCastExpr, LValueToRValue, char *)
   9: DeclRefExpr 0x562807062d98 <hiredis.c:637:28> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
  10: ImplicitCastExpr 0x562807062dd8 <hiredis.c:637:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062d98 <col:28> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.9] (ImplicitCastExpr, LValueToRValue, int)
  11: BinaryOperator 0x562807062df0 <hiredis.c:637:24, col:28> 'char *' '+'
|-ImplicitCastExpr 0x562807062dc0 <col:24> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x562807062d70 <col:24> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
`-ImplicitCastExpr 0x562807062dd8 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807062d98 <col:28> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.8] + [B6.10]
  12: StringLiteral 0x562807062e18 <hiredis.c:637:32> 'const char [7]' lvalue "$%zu\r\n"
"$%zu\r\n"
  13: ImplicitCastExpr 0x562807062ec8 <hiredis.c:637:32> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x562807062e18 <col:32> 'const char [7]' lvalue "$%zu\r\n"
[B6.12] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  14: DeclRefExpr 0x562807062e48 <hiredis.c:637:43> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
len
  15: ImplicitCastExpr 0x562807062ee0 <hiredis.c:637:43> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x562807062e48 <col:43> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B6.14] (ImplicitCastExpr, LValueToRValue, size_t)
  16: CallExpr 0x562807062e88 <hiredis.c:637:16, col:46> 'int'
|-ImplicitCastExpr 0x562807062e70 <col:16> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807062d48 <col:16> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
|-BinaryOperator 0x562807062df0 <col:24, col:28> 'char *' '+'
| |-ImplicitCastExpr 0x562807062dc0 <col:24> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x562807062d70 <col:24> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
| `-ImplicitCastExpr 0x562807062dd8 <col:28> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x562807062d98 <col:28> 'int' lvalue Var 0x562807060858 'pos' 'int'
|-ImplicitCastExpr 0x562807062ec8 <col:32> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x562807062e18 <col:32> 'const char [7]' lvalue "$%zu\r\n"
`-ImplicitCastExpr 0x562807062ee0 <col:43> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x562807062e48 <col:43> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B6.6]([B6.11], [B6.13], [B6.15])
  17: CompoundAssignOperator 0x562807062ef8 <hiredis.c:637:9, col:46> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x562807062d20 <col:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
`-CallExpr 0x562807062e88 <col:16, col:46> 'int'
  |-ImplicitCastExpr 0x562807062e70 <col:16> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807062d48 <col:16> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
  |-BinaryOperator 0x562807062df0 <col:24, col:28> 'char *' '+'
  | |-ImplicitCastExpr 0x562807062dc0 <col:24> 'char *' <LValueToRValue>
  | | `-DeclRefExpr 0x562807062d70 <col:24> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
  | `-ImplicitCastExpr 0x562807062dd8 <col:28> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x562807062d98 <col:28> 'int' lvalue Var 0x562807060858 'pos' 'int'
  |-ImplicitCastExpr 0x562807062ec8 <col:32> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x562807062e18 <col:32> 'const char [7]' lvalue "$%zu\r\n"
  `-ImplicitCastExpr 0x562807062ee0 <col:43> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x562807062e48 <col:43> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B6.4] += [B6.16]
  18: DeclRefExpr 0x562807062f30 <hiredis.c:638:9> 'void *(void *, const void *, unsigned long)' Function 0x562806f50060 'memcpy' 'void *(void *, const void *, unsigned long)'
memcpy
  19: ImplicitCastExpr 0x562807063130 <hiredis.c:638:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807062f30 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x562806f50060 'memcpy' 'void *(void *, const void *, unsigned long)'
[B6.18] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
  20: DeclRefExpr 0x562807062f58 <hiredis.c:638:16> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
  21: ImplicitCastExpr 0x562807062fd8 <hiredis.c:638:16> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562807062f58 <col:16> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B6.20] (ImplicitCastExpr, LValueToRValue, char *)
  22: DeclRefExpr 0x562807062fb0 <hiredis.c:638:20> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
  23: ImplicitCastExpr 0x562807062ff0 <hiredis.c:638:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062fb0 <col:20> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.22] (ImplicitCastExpr, LValueToRValue, int)
  24: BinaryOperator 0x562807063008 <hiredis.c:638:16, col:20> 'char *' '+'
|-ImplicitCastExpr 0x562807062fd8 <col:16> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x562807062f58 <col:16> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
`-ImplicitCastExpr 0x562807062ff0 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807062fb0 <col:20> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.21] + [B6.23]
  25: ImplicitCastExpr 0x562807063188 <hiredis.c:638:16, col:20> 'void *' <BitCast>
`-BinaryOperator 0x562807063008 <col:16, col:20> 'char *' '+'
  |-ImplicitCastExpr 0x562807062fd8 <col:16> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x562807062f58 <col:16> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
  `-ImplicitCastExpr 0x562807062ff0 <col:20> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562807062fb0 <col:20> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.24] (ImplicitCastExpr, BitCast, void *)
  26: DeclRefExpr 0x562807063030 <hiredis.c:638:24> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
argv
  27: ImplicitCastExpr 0x562807063080 <hiredis.c:638:24> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x562807063030 <col:24> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
[B6.26] (ImplicitCastExpr, LValueToRValue, const char **)
  28: DeclRefExpr 0x562807063058 <hiredis.c:638:29> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
  29: ImplicitCastExpr 0x562807063098 <hiredis.c:638:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807063058 <col:29> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B6.28] (ImplicitCastExpr, LValueToRValue, int)
  30: ArraySubscriptExpr 0x5628070630b0 <hiredis.c:638:24, col:30> 'const char *' lvalue
|-ImplicitCastExpr 0x562807063080 <col:24> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x562807063030 <col:24> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
`-ImplicitCastExpr 0x562807063098 <col:29> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807063058 <col:29> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B6.27][[B6.29]]
  31: ImplicitCastExpr 0x5628070631a0 <hiredis.c:638:24, col:30> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x5628070630b0 <col:24, col:30> 'const char *' lvalue
  |-ImplicitCastExpr 0x562807063080 <col:24> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x562807063030 <col:24> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
  `-ImplicitCastExpr 0x562807063098 <col:29> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562807063058 <col:29> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B6.30] (ImplicitCastExpr, LValueToRValue, const char *)
  32: ImplicitCastExpr 0x5628070631b8 <hiredis.c:638:24, col:30> 'const void *' <BitCast>
`-ImplicitCastExpr 0x5628070631a0 <col:24, col:30> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x5628070630b0 <col:24, col:30> 'const char *' lvalue
    |-ImplicitCastExpr 0x562807063080 <col:24> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x562807063030 <col:24> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
    `-ImplicitCastExpr 0x562807063098 <col:29> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562807063058 <col:29> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B6.31] (ImplicitCastExpr, BitCast, const void *)
  33: DeclRefExpr 0x5628070630d8 <hiredis.c:638:32> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
len
  34: ImplicitCastExpr 0x5628070631d0 <hiredis.c:638:32> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5628070630d8 <col:32> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B6.33] (ImplicitCastExpr, LValueToRValue, size_t)
  35: CallExpr 0x562807063148 <hiredis.c:638:9, col:35> 'void *'
|-ImplicitCastExpr 0x562807063130 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807062f30 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x562806f50060 'memcpy' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x562807063188 <col:16, col:20> 'void *' <BitCast>
| `-BinaryOperator 0x562807063008 <col:16, col:20> 'char *' '+'
|   |-ImplicitCastExpr 0x562807062fd8 <col:16> 'char *' <LValueToRValue>
|   | `-DeclRefExpr 0x562807062f58 <col:16> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
|   `-ImplicitCastExpr 0x562807062ff0 <col:20> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x562807062fb0 <col:20> 'int' lvalue Var 0x562807060858 'pos' 'int'
|-ImplicitCastExpr 0x5628070631b8 <col:24, col:30> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x5628070631a0 <col:24, col:30> 'const char *' <LValueToRValue>
|   `-ArraySubscriptExpr 0x5628070630b0 <col:24, col:30> 'const char *' lvalue
|     |-ImplicitCastExpr 0x562807063080 <col:24> 'const char **' <LValueToRValue>
|     | `-DeclRefExpr 0x562807063030 <col:24> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
|     `-ImplicitCastExpr 0x562807063098 <col:29> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562807063058 <col:29> 'int' lvalue Var 0x5628070609e8 'j' 'int'
`-ImplicitCastExpr 0x5628070631d0 <col:32> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5628070630d8 <col:32> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B6.19]([B6.25], [B6.32], [B6.34])
  36: DeclRefExpr 0x5628070631e8 <hiredis.c:639:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
  37: DeclRefExpr 0x562807063210 <hiredis.c:639:16> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
len
  38: ImplicitCastExpr 0x562807063238 <hiredis.c:639:16> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x562807063210 <col:16> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B6.37] (ImplicitCastExpr, LValueToRValue, size_t)
  39: CompoundAssignOperator 0x562807063250 <hiredis.c:639:9, col:16> 'int' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5628070631e8 <col:9> 'int' lvalue Var 0x562807060858 'pos' 'int'
`-ImplicitCastExpr 0x562807063238 <col:16> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x562807063210 <col:16> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B6.36] += [B6.38]
  40: CharacterLiteral 0x562807063338 <hiredis.c:640:22> 'int' 13
'\r'
  41: ImplicitCastExpr 0x562807063350 <hiredis.c:640:22> 'char' <IntegralCast>
`-CharacterLiteral 0x562807063338 <col:22> 'int' 13
[B6.40] (ImplicitCastExpr, IntegralCast, char)
  42: DeclRefExpr 0x562807063288 <hiredis.c:640:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
  43: ImplicitCastExpr 0x5628070632f8 <hiredis.c:640:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562807063288 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B6.42] (ImplicitCastExpr, LValueToRValue, char *)
  44: DeclRefExpr 0x5628070632b0 <hiredis.c:640:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
  45: UnaryOperator 0x5628070632d8 <hiredis.c:640:13, col:16> 'int' postfix '++'
`-DeclRefExpr 0x5628070632b0 <col:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.44]++
  46: ArraySubscriptExpr 0x562807063310 <hiredis.c:640:9, col:18> 'char' lvalue
|-ImplicitCastExpr 0x5628070632f8 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x562807063288 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
`-UnaryOperator 0x5628070632d8 <col:13, col:16> 'int' postfix '++'
  `-DeclRefExpr 0x5628070632b0 <col:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.43][[B6.45]]
  47: BinaryOperator 0x562807063368 <hiredis.c:640:9, col:22> 'char' '='
|-ArraySubscriptExpr 0x562807063310 <col:9, col:18> 'char' lvalue
| |-ImplicitCastExpr 0x5628070632f8 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x562807063288 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
| `-UnaryOperator 0x5628070632d8 <col:13, col:16> 'int' postfix '++'
|   `-DeclRefExpr 0x5628070632b0 <col:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
`-ImplicitCastExpr 0x562807063350 <col:22> 'char' <IntegralCast>
  `-CharacterLiteral 0x562807063338 <col:22> 'int' 13
[B6.46] = [B6.41]
  48: CharacterLiteral 0x562807063440 <hiredis.c:641:22> 'int' 10
'\n'
  49: ImplicitCastExpr 0x562807063458 <hiredis.c:641:22> 'char' <IntegralCast>
`-CharacterLiteral 0x562807063440 <col:22> 'int' 10
[B6.48] (ImplicitCastExpr, IntegralCast, char)
  50: DeclRefExpr 0x562807063390 <hiredis.c:641:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
  51: ImplicitCastExpr 0x562807063400 <hiredis.c:641:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x562807063390 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B6.50] (ImplicitCastExpr, LValueToRValue, char *)
  52: DeclRefExpr 0x5628070633b8 <hiredis.c:641:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
  53: UnaryOperator 0x5628070633e0 <hiredis.c:641:13, col:16> 'int' postfix '++'
`-DeclRefExpr 0x5628070633b8 <col:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.52]++
  54: ArraySubscriptExpr 0x562807063418 <hiredis.c:641:9, col:18> 'char' lvalue
|-ImplicitCastExpr 0x562807063400 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x562807063390 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
`-UnaryOperator 0x5628070633e0 <col:13, col:16> 'int' postfix '++'
  `-DeclRefExpr 0x5628070633b8 <col:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
[B6.51][[B6.53]]
  55: BinaryOperator 0x562807063470 <hiredis.c:641:9, col:22> 'char' '='
|-ArraySubscriptExpr 0x562807063418 <col:9, col:18> 'char' lvalue
| |-ImplicitCastExpr 0x562807063400 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x562807063390 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
| `-UnaryOperator 0x5628070633e0 <col:13, col:16> 'int' postfix '++'
|   `-DeclRefExpr 0x5628070633b8 <col:13> 'int' lvalue Var 0x562807060858 'pos' 'int'
`-ImplicitCastExpr 0x562807063458 <col:22> 'char' <IntegralCast>
  `-CharacterLiteral 0x562807063440 <col:22> 'int' 10
[B6.54] = [B6.49]
   Preds (2): B7 B8
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x562807062aa8 <hiredis.c:636:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x562807062af8 <hiredis.c:636:25> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x562807062aa8 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
[B7.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   3: DeclRefExpr 0x562807062ad0 <hiredis.c:636:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   4: ImplicitCastExpr 0x562807062b10 <hiredis.c:636:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062ad0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B7.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x562807062b28 <hiredis.c:636:25, col:34> 'const size_t':'const unsigned long' lvalue
|-ImplicitCastExpr 0x562807062af8 <col:25> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x562807062aa8 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
`-ImplicitCastExpr 0x562807062b10 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807062ad0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B7.2][[B7.4]]
   6: ImplicitCastExpr 0x562807062cb0 <hiredis.c:636:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
`-ArraySubscriptExpr 0x562807062b28 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |-ImplicitCastExpr 0x562807062af8 <col:25> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x562807062aa8 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
  `-ImplicitCastExpr 0x562807062b10 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562807062ad0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, size_t)
   Preds (1): B9
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x562807062b50 <hiredis.c:636:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
strlen
   2: ImplicitCastExpr 0x562807062c38 <hiredis.c:636:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807062b50 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
   3: DeclRefExpr 0x562807062b78 <hiredis.c:636:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
argv
   4: ImplicitCastExpr 0x562807062bc8 <hiredis.c:636:45> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x562807062b78 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
[B8.3] (ImplicitCastExpr, LValueToRValue, const char **)
   5: DeclRefExpr 0x562807062ba0 <hiredis.c:636:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   6: ImplicitCastExpr 0x562807062be0 <hiredis.c:636:50> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062ba0 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B8.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x562807062bf8 <hiredis.c:636:45, col:51> 'const char *' lvalue
|-ImplicitCastExpr 0x562807062bc8 <col:45> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x562807062b78 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
`-ImplicitCastExpr 0x562807062be0 <col:50> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807062ba0 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B8.4][[B8.6]]
   8: ImplicitCastExpr 0x562807062c80 <hiredis.c:636:45, col:51> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x562807062bf8 <col:45, col:51> 'const char *' lvalue
  |-ImplicitCastExpr 0x562807062bc8 <col:45> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x562807062b78 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
  `-ImplicitCastExpr 0x562807062be0 <col:50> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562807062ba0 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B8.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: CallExpr 0x562807062c50 <hiredis.c:636:38, col:52> 'unsigned long'
|-ImplicitCastExpr 0x562807062c38 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807062b50 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x562807062c80 <col:45, col:51> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x562807062bf8 <col:45, col:51> 'const char *' lvalue
    |-ImplicitCastExpr 0x562807062bc8 <col:45> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x562807062b78 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
    `-ImplicitCastExpr 0x562807062be0 <col:50> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562807062ba0 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B8.2]([B8.8])
   Preds (1): B9
   Succs (1): B6

 [B9]
   1: DeclRefExpr 0x562807062a80 <hiredis.c:636:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x562807062c98 <hiredis.c:636:15> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x562807062a80 <col:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
[B9.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   T: [B9.2] ? ... : ...
   Preds (1): B10
   Succs (2): B7 B8

 [B10]
   1: DeclRefExpr 0x562807062968 <hiredis.c:635:17> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   2: ImplicitCastExpr 0x5628070629b8 <hiredis.c:635:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062968 <col:17> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562807062990 <hiredis.c:635:21> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
argc
   4: ImplicitCastExpr 0x5628070629d0 <hiredis.c:635:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062990 <col:21> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B10.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5628070629e8 <hiredis.c:635:17, col:21> 'int' '<'
|-ImplicitCastExpr 0x5628070629b8 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562807062968 <col:17> 'int' lvalue Var 0x5628070609e8 'j' 'int'
`-ImplicitCastExpr 0x5628070629d0 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807062990 <col:21> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B10.2] < [B10.4]
   T: for (...; [B10.5]; ...)
   Preds (2): B5 B11
   Succs (2): B9 B4

 [B11]
   1: DeclRefExpr 0x562807062788 <hiredis.c:634:11> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
sprintf
   2: ImplicitCastExpr 0x562807062830 <hiredis.c:634:11> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807062788 <col:11> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, const char *, ...))
   3: DeclRefExpr 0x5628070627b0 <hiredis.c:634:19> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
   4: ImplicitCastExpr 0x562807062888 <hiredis.c:634:19> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5628070627b0 <col:19> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B11.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: StringLiteral 0x5628070627d8 <hiredis.c:634:23> 'const char [6]' lvalue "*%d\r\n"
"*%d\r\n"
   6: ImplicitCastExpr 0x5628070628a0 <hiredis.c:634:23> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x5628070627d8 <col:23> 'const char [6]' lvalue "*%d\r\n"
[B11.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: DeclRefExpr 0x562807062808 <hiredis.c:634:33> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
argc
   8: ImplicitCastExpr 0x5628070628b8 <hiredis.c:634:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062808 <col:33> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B11.7] (ImplicitCastExpr, LValueToRValue, int)
   9: CallExpr 0x562807062848 <hiredis.c:634:11, col:37> 'int'
|-ImplicitCastExpr 0x562807062830 <col:11> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807062788 <col:11> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
|-ImplicitCastExpr 0x562807062888 <col:19> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5628070627b0 <col:19> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
|-ImplicitCastExpr 0x5628070628a0 <col:23> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x5628070627d8 <col:23> 'const char [6]' lvalue "*%d\r\n"
`-ImplicitCastExpr 0x5628070628b8 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807062808 <col:33> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B11.2]([B11.4], [B11.6], [B11.8])
  10: DeclRefExpr 0x562807062760 <hiredis.c:634:5> 'int' lvalue Var 0x562807060858 'pos' 'int'
pos
  11: BinaryOperator 0x5628070628d0 <hiredis.c:634:5, col:37> 'int' '='
|-DeclRefExpr 0x562807062760 <col:5> 'int' lvalue Var 0x562807060858 'pos' 'int'
`-CallExpr 0x562807062848 <col:11, col:37> 'int'
  |-ImplicitCastExpr 0x562807062830 <col:11> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807062788 <col:11> 'int (char *, const char *, ...)' Function 0x562806fe35f0 'sprintf' 'int (char *, const char *, ...)'
  |-ImplicitCastExpr 0x562807062888 <col:19> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x5628070627b0 <col:19> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
  |-ImplicitCastExpr 0x5628070628a0 <col:23> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x5628070627d8 <col:23> 'const char [6]' lvalue "*%d\r\n"
  `-ImplicitCastExpr 0x5628070628b8 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562807062808 <col:33> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B11.10] = [B11.9]
  12: IntegerLiteral 0x562807062920 <hiredis.c:635:14> 'int' 0
0
  13: DeclRefExpr 0x5628070628f8 <hiredis.c:635:10> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
  14: BinaryOperator 0x562807062940 <hiredis.c:635:10, col:14> 'int' '='
|-DeclRefExpr 0x5628070628f8 <col:10> 'int' lvalue Var 0x5628070609e8 'j' 'int'
`-IntegerLiteral 0x562807062920 <col:14> 'int' 0
[B11.13] = [B11.12]
   Preds (1): B13
   Succs (1): B10

 [B12]
   1: IntegerLiteral 0x5628070626d0 <hiredis.c:632:17> 'int' 1
1
   2: UnaryOperator 0x5628070626f0 <hiredis.c:632:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x5628070626d0 <col:17> 'int' 1
-[B12.1]
   3: ReturnStmt 0x562807062710 <hiredis.c:632:9, col:17>
`-UnaryOperator 0x5628070626f0 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x5628070626d0 <col:17> 'int' 1
return [B12.2];
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclRefExpr 0x562807062480 <hiredis.c:630:11> 'void *(unsigned long)' Function 0x562806f97430 'malloc' 'void *(unsigned long)'
malloc
   2: ImplicitCastExpr 0x562807062530 <hiredis.c:630:11> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807062480 <col:11> 'void *(unsigned long)' Function 0x562806f97430 'malloc' 'void *(unsigned long)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(unsigned long))
   3: DeclRefExpr 0x5628070624a8 <hiredis.c:630:18> 'int' lvalue Var 0x562807060970 'totlen' 'int'
totlen
   4: ImplicitCastExpr 0x5628070624f0 <hiredis.c:630:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x5628070624a8 <col:18> 'int' lvalue Var 0x562807060970 'totlen' 'int'
[B13.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5628070624d0 <hiredis.c:630:25> 'int' 1
1
   6: BinaryOperator 0x562807062508 <hiredis.c:630:18, col:25> 'int' '+'
|-ImplicitCastExpr 0x5628070624f0 <col:18> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5628070624a8 <col:18> 'int' lvalue Var 0x562807060970 'totlen' 'int'
`-IntegerLiteral 0x5628070624d0 <col:25> 'int' 1
[B13.4] + [B13.5]
   7: ImplicitCastExpr 0x562807062578 <hiredis.c:630:18, col:25> 'unsigned long' <IntegralCast>
`-BinaryOperator 0x562807062508 <col:18, col:25> 'int' '+'
  |-ImplicitCastExpr 0x5628070624f0 <col:18> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5628070624a8 <col:18> 'int' lvalue Var 0x562807060970 'totlen' 'int'
  `-IntegerLiteral 0x5628070624d0 <col:25> 'int' 1
[B13.6] (ImplicitCastExpr, IntegralCast, unsigned long)
   8: CallExpr 0x562807062548 <hiredis.c:630:11, col:26> 'void *'
|-ImplicitCastExpr 0x562807062530 <col:11> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807062480 <col:11> 'void *(unsigned long)' Function 0x562806f97430 'malloc' 'void *(unsigned long)'
`-ImplicitCastExpr 0x562807062578 <col:18, col:25> 'unsigned long' <IntegralCast>
  `-BinaryOperator 0x562807062508 <col:18, col:25> 'int' '+'
    |-ImplicitCastExpr 0x5628070624f0 <col:18> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x5628070624a8 <col:18> 'int' lvalue Var 0x562807060970 'totlen' 'int'
    `-IntegerLiteral 0x5628070624d0 <col:25> 'int' 1
[B13.2]([B13.7])
   9: ImplicitCastExpr 0x562807062590 <hiredis.c:630:11, col:26> 'char *' <BitCast>
`-CallExpr 0x562807062548 <col:11, col:26> 'void *'
  |-ImplicitCastExpr 0x562807062530 <col:11> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807062480 <col:11> 'void *(unsigned long)' Function 0x562806f97430 'malloc' 'void *(unsigned long)'
  `-ImplicitCastExpr 0x562807062578 <col:18, col:25> 'unsigned long' <IntegralCast>
    `-BinaryOperator 0x562807062508 <col:18, col:25> 'int' '+'
      |-ImplicitCastExpr 0x5628070624f0 <col:18> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x5628070624a8 <col:18> 'int' lvalue Var 0x562807060970 'totlen' 'int'
      `-IntegerLiteral 0x5628070624d0 <col:25> 'int' 1
[B13.8] (ImplicitCastExpr, BitCast, char *)
  10: DeclRefExpr 0x562807062458 <hiredis.c:630:5> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
  11: BinaryOperator 0x5628070625a8 <hiredis.c:630:5, col:26> 'char *' '='
|-DeclRefExpr 0x562807062458 <col:5> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
`-ImplicitCastExpr 0x562807062590 <col:11, col:26> 'char *' <BitCast>
  `-CallExpr 0x562807062548 <col:11, col:26> 'void *'
    |-ImplicitCastExpr 0x562807062530 <col:11> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562807062480 <col:11> 'void *(unsigned long)' Function 0x562806f97430 'malloc' 'void *(unsigned long)'
    `-ImplicitCastExpr 0x562807062578 <col:18, col:25> 'unsigned long' <IntegralCast>
      `-BinaryOperator 0x562807062508 <col:18, col:25> 'int' '+'
        |-ImplicitCastExpr 0x5628070624f0 <col:18> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x5628070624a8 <col:18> 'int' lvalue Var 0x562807060970 'totlen' 'int'
        `-IntegerLiteral 0x5628070624d0 <col:25> 'int' 1
[B13.10] = [B13.9]
  12: DeclRefExpr 0x5628070625d0 <hiredis.c:631:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
cmd
  13: ImplicitCastExpr 0x562807062678 <hiredis.c:631:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5628070625d0 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
[B13.12] (ImplicitCastExpr, LValueToRValue, char *)
  14: IntegerLiteral 0x5628070625f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  15: CStyleCastExpr 0x562807062630 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5628070625f8 <col:24> 'int' 0
(void *)[B13.14] (CStyleCastExpr, NullToPointer, void *)
  16: ImplicitCastExpr 0x562807062690 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
`-ParenExpr 0x562807062658 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562807062630 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5628070625f8 <col:24> 'int' 0
([B13.15]) (ImplicitCastExpr, BitCast, char *)
  17: BinaryOperator 0x5628070626a8 <hiredis.c:631:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x562807062678 <hiredis.c:631:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5628070625d0 <col:9> 'char *' lvalue Var 0x562807060730 'cmd' 'char *'
`-ImplicitCastExpr 0x562807062690 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
  `-ParenExpr 0x562807062658 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562807062630 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5628070625f8 <col:24> 'int' 0
[B13.13] == [B13.16]
   T: if [B13.17]
   Preds (1): B19
   Succs (2): B12 B11

 [B14]
   1: DeclRefExpr 0x562807061fe0 <hiredis.c:624:27> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   2: UnaryOperator 0x562807062008 <hiredis.c:624:27, col:28> 'int' postfix '++'
`-DeclRefExpr 0x562807061fe0 <col:27> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B14.1]++
   Preds (1): B15
   Succs (1): B19

 [B15]
   1: ConditionalOperator 0x562807062298 <hiredis.c:625:15, col:52> 'unsigned long'
|-ImplicitCastExpr 0x562807062268 <col:15> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x562807062050 <col:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
|-ImplicitCastExpr 0x562807062280 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
| `-ArraySubscriptExpr 0x5628070620f8 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
|   |-ImplicitCastExpr 0x5628070620c8 <col:25> 'const size_t *' <LValueToRValue>
|   | `-DeclRefExpr 0x562807062078 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
|   `-ImplicitCastExpr 0x5628070620e0 <col:33> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x5628070620a0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
`-CallExpr 0x562807062220 <col:38, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x562807062208 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807062120 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
  `-ImplicitCastExpr 0x562807062250 <col:45, col:51> 'const char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x5628070621c8 <col:45, col:51> 'const char *' lvalue
      |-ImplicitCastExpr 0x562807062198 <col:45> 'const char **' <LValueToRValue>
      | `-DeclRefExpr 0x562807062148 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
      `-ImplicitCastExpr 0x5628070621b0 <col:50> 'int' <LValueToRValue>
        `-DeclRefExpr 0x562807062170 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B18.2] ? [B16.6] : [B17.9]
   2: DeclRefExpr 0x562807062028 <hiredis.c:625:9> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
len
   3: BinaryOperator 0x5628070622c8 <hiredis.c:625:9, col:52> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x562807062028 <col:9> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
`-ConditionalOperator 0x562807062298 <col:15, col:52> 'unsigned long'
  |-ImplicitCastExpr 0x562807062268 <col:15> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x562807062050 <col:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
  |-ImplicitCastExpr 0x562807062280 <col:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
  | `-ArraySubscriptExpr 0x5628070620f8 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |   |-ImplicitCastExpr 0x5628070620c8 <col:25> 'const size_t *' <LValueToRValue>
  |   | `-DeclRefExpr 0x562807062078 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
  |   `-ImplicitCastExpr 0x5628070620e0 <col:33> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x5628070620a0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
  `-CallExpr 0x562807062220 <col:38, col:52> 'unsigned long'
    |-ImplicitCastExpr 0x562807062208 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562807062120 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
    `-ImplicitCastExpr 0x562807062250 <col:45, col:51> 'const char *' <LValueToRValue>
      `-ArraySubscriptExpr 0x5628070621c8 <col:45, col:51> 'const char *' lvalue
        |-ImplicitCastExpr 0x562807062198 <col:45> 'const char **' <LValueToRValue>
        | `-DeclRefExpr 0x562807062148 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
        `-ImplicitCastExpr 0x5628070621b0 <col:50> 'int' <LValueToRValue>
          `-DeclRefExpr 0x562807062170 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B15.2] = [B15.1]
   4: DeclRefExpr 0x5628070622f0 <hiredis.c:626:9> 'int' lvalue Var 0x562807060970 'totlen' 'int'
totlen
   5: DeclRefExpr 0x562807062318 <hiredis.c:626:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
bulklen
   6: ImplicitCastExpr 0x562807062368 <hiredis.c:626:19> 'size_t (*)(size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807062318 <col:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
[B15.5] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(size_t))
   7: DeclRefExpr 0x562807062340 <hiredis.c:626:27> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
len
   8: ImplicitCastExpr 0x5628070623b0 <hiredis.c:626:27> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x562807062340 <col:27> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B15.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: CallExpr 0x562807062380 <hiredis.c:626:19, col:30> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x562807062368 <col:19> 'size_t (*)(size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807062318 <col:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
`-ImplicitCastExpr 0x5628070623b0 <col:27> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x562807062340 <col:27> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B15.6]([B15.8])
  10: CompoundAssignOperator 0x5628070623c8 <hiredis.c:626:9, col:30> 'int' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5628070622f0 <col:9> 'int' lvalue Var 0x562807060970 'totlen' 'int'
`-CallExpr 0x562807062380 <col:19, col:30> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x562807062368 <col:19> 'size_t (*)(size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807062318 <col:19> 'size_t (size_t)' Function 0x56280704f7a0 'bulklen' 'size_t (size_t)'
  `-ImplicitCastExpr 0x5628070623b0 <col:27> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x562807062340 <col:27> 'size_t':'unsigned long' lvalue Var 0x5628070608e0 'len' 'size_t':'unsigned long'
[B15.4] += [B15.9]
   Preds (2): B16 B17
   Succs (1): B14

 [B16]
   1: DeclRefExpr 0x562807062078 <hiredis.c:625:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x5628070620c8 <hiredis.c:625:25> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x562807062078 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
[B16.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   3: DeclRefExpr 0x5628070620a0 <hiredis.c:625:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   4: ImplicitCastExpr 0x5628070620e0 <hiredis.c:625:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x5628070620a0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B16.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x5628070620f8 <hiredis.c:625:25, col:34> 'const size_t':'const unsigned long' lvalue
|-ImplicitCastExpr 0x5628070620c8 <col:25> 'const size_t *' <LValueToRValue>
| `-DeclRefExpr 0x562807062078 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
`-ImplicitCastExpr 0x5628070620e0 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5628070620a0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B16.2][[B16.4]]
   6: ImplicitCastExpr 0x562807062280 <hiredis.c:625:25, col:34> 'size_t':'unsigned long' <LValueToRValue>
`-ArraySubscriptExpr 0x5628070620f8 <col:25, col:34> 'const size_t':'const unsigned long' lvalue
  |-ImplicitCastExpr 0x5628070620c8 <col:25> 'const size_t *' <LValueToRValue>
  | `-DeclRefExpr 0x562807062078 <col:25> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
  `-ImplicitCastExpr 0x5628070620e0 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5628070620a0 <col:33> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B16.5] (ImplicitCastExpr, LValueToRValue, size_t)
   Preds (1): B18
   Succs (1): B15

 [B17]
   1: DeclRefExpr 0x562807062120 <hiredis.c:625:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
strlen
   2: ImplicitCastExpr 0x562807062208 <hiredis.c:625:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807062120 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
[B17.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
   3: DeclRefExpr 0x562807062148 <hiredis.c:625:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
argv
   4: ImplicitCastExpr 0x562807062198 <hiredis.c:625:45> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x562807062148 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
[B17.3] (ImplicitCastExpr, LValueToRValue, const char **)
   5: DeclRefExpr 0x562807062170 <hiredis.c:625:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   6: ImplicitCastExpr 0x5628070621b0 <hiredis.c:625:50> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807062170 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B17.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x5628070621c8 <hiredis.c:625:45, col:51> 'const char *' lvalue
|-ImplicitCastExpr 0x562807062198 <col:45> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x562807062148 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
`-ImplicitCastExpr 0x5628070621b0 <col:50> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807062170 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B17.4][[B17.6]]
   8: ImplicitCastExpr 0x562807062250 <hiredis.c:625:45, col:51> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x5628070621c8 <col:45, col:51> 'const char *' lvalue
  |-ImplicitCastExpr 0x562807062198 <col:45> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x562807062148 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
  `-ImplicitCastExpr 0x5628070621b0 <col:50> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562807062170 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B17.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: CallExpr 0x562807062220 <hiredis.c:625:38, col:52> 'unsigned long'
|-ImplicitCastExpr 0x562807062208 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807062120 <col:38> 'unsigned long (const char *)' Function 0x562806f59918 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x562807062250 <col:45, col:51> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x5628070621c8 <col:45, col:51> 'const char *' lvalue
    |-ImplicitCastExpr 0x562807062198 <col:45> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x562807062148 <col:45> 'const char **' lvalue ParmVar 0x562807060540 'argv' 'const char **'
    `-ImplicitCastExpr 0x5628070621b0 <col:50> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562807062170 <col:50> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B17.2]([B17.8])
   Preds (1): B18
   Succs (1): B15

 [B18]
   1: DeclRefExpr 0x562807062050 <hiredis.c:625:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
argvlen
   2: ImplicitCastExpr 0x562807062268 <hiredis.c:625:15> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x562807062050 <col:15> 'const size_t *' lvalue ParmVar 0x5628070605b0 'argvlen' 'const size_t *'
[B18.1] (ImplicitCastExpr, LValueToRValue, const size_t *)
   T: [B18.2] ? ... : ...
   Preds (1): B19
   Succs (2): B16 B17

 [B19]
   1: DeclRefExpr 0x562807060e68 <hiredis.c:624:17> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
   2: ImplicitCastExpr 0x562807060eb8 <hiredis.c:624:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807060e68 <col:17> 'int' lvalue Var 0x5628070609e8 'j' 'int'
[B19.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562807060e90 <hiredis.c:624:21> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
argc
   4: ImplicitCastExpr 0x562807061fa0 <hiredis.c:624:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807060e90 <col:21> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B19.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562807061fb8 <hiredis.c:624:17, col:21> 'int' '<'
|-ImplicitCastExpr 0x562807060eb8 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562807060e68 <col:17> 'int' lvalue Var 0x5628070609e8 'j' 'int'
`-ImplicitCastExpr 0x562807061fa0 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807060e90 <col:21> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B19.2] < [B19.4]
   T: for (...; [B19.5]; ...)
   Preds (2): B14 B20
   Succs (2): B18 B13

 [B20]
   1: IntegerLiteral 0x562807060c30 <hiredis.c:623:14> 'int' 1
1
   2: ImplicitCastExpr 0x562807060d18 <hiredis.c:623:14> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x562807060c30 <col:14> 'int' 1
[B20.1] (ImplicitCastExpr, IntegralCast, unsigned int)
   3: DeclRefExpr 0x562807060c50 <hiredis.c:623:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
countDigits
   4: ImplicitCastExpr 0x562807060ca0 <hiredis.c:623:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807060c50 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
[B20.3] (ImplicitCastExpr, FunctionToPointerDecay, uint32_t (*)(uint64_t))
   5: DeclRefExpr 0x562807060c78 <hiredis.c:623:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
argc
   6: ImplicitCastExpr 0x562807060ce8 <hiredis.c:623:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807060c78 <col:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B20.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ImplicitCastExpr 0x562807060d00 <hiredis.c:623:28> 'uint64_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x562807060ce8 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807060c78 <col:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B20.6] (ImplicitCastExpr, IntegralCast, uint64_t)
   8: CallExpr 0x562807060cb8 <hiredis.c:623:16, col:32> 'uint32_t':'unsigned int'
|-ImplicitCastExpr 0x562807060ca0 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807060c50 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
`-ImplicitCastExpr 0x562807060d00 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x562807060ce8 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562807060c78 <col:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B20.4]([B20.7])
   9: BinaryOperator 0x562807060d30 <hiredis.c:623:14, col:32> 'unsigned int' '+'
|-ImplicitCastExpr 0x562807060d18 <col:14> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x562807060c30 <col:14> 'int' 1
`-CallExpr 0x562807060cb8 <col:16, col:32> 'uint32_t':'unsigned int'
  |-ImplicitCastExpr 0x562807060ca0 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562807060c50 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
  `-ImplicitCastExpr 0x562807060d00 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x562807060ce8 <col:28> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562807060c78 <col:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
[B20.2] + [B20.8]
  10: IntegerLiteral 0x562807060d58 <hiredis.c:623:34> 'int' 2
2
  11: ImplicitCastExpr 0x562807060d78 <hiredis.c:623:34> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x562807060d58 <col:34> 'int' 2
[B20.10] (ImplicitCastExpr, IntegralCast, unsigned int)
  12: BinaryOperator 0x562807060d90 <hiredis.c:623:14, col:34> 'unsigned int' '+'
|-BinaryOperator 0x562807060d30 <col:14, col:32> 'unsigned int' '+'
| |-ImplicitCastExpr 0x562807060d18 <col:14> 'unsigned int' <IntegralCast>
| | `-IntegerLiteral 0x562807060c30 <col:14> 'int' 1
| `-CallExpr 0x562807060cb8 <col:16, col:32> 'uint32_t':'unsigned int'
|   |-ImplicitCastExpr 0x562807060ca0 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x562807060c50 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
|   `-ImplicitCastExpr 0x562807060d00 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
|     `-ImplicitCastExpr 0x562807060ce8 <col:28> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562807060c78 <col:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
`-ImplicitCastExpr 0x562807060d78 <col:34> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x562807060d58 <col:34> 'int' 2
[B20.9] + [B20.11]
  13: ImplicitCastExpr 0x562807060db8 <hiredis.c:623:14, col:34> 'int' <IntegralCast>
`-BinaryOperator 0x562807060d90 <col:14, col:34> 'unsigned int' '+'
  |-BinaryOperator 0x562807060d30 <col:14, col:32> 'unsigned int' '+'
  | |-ImplicitCastExpr 0x562807060d18 <col:14> 'unsigned int' <IntegralCast>
  | | `-IntegerLiteral 0x562807060c30 <col:14> 'int' 1
  | `-CallExpr 0x562807060cb8 <col:16, col:32> 'uint32_t':'unsigned int'
  |   |-ImplicitCastExpr 0x562807060ca0 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
  |   | `-DeclRefExpr 0x562807060c50 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
  |   `-ImplicitCastExpr 0x562807060d00 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
  |     `-ImplicitCastExpr 0x562807060ce8 <col:28> 'int' <LValueToRValue>
  |       `-DeclRefExpr 0x562807060c78 <col:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
  `-ImplicitCastExpr 0x562807060d78 <col:34> 'unsigned int' <IntegralCast>
    `-IntegerLiteral 0x562807060d58 <col:34> 'int' 2
[B20.12] (ImplicitCastExpr, IntegralCast, int)
  14: DeclRefExpr 0x562807060c08 <hiredis.c:623:5> 'int' lvalue Var 0x562807060970 'totlen' 'int'
totlen
  15: BinaryOperator 0x562807060dd0 <hiredis.c:623:5, col:34> 'int' '='
|-DeclRefExpr 0x562807060c08 <col:5> 'int' lvalue Var 0x562807060970 'totlen' 'int'
`-ImplicitCastExpr 0x562807060db8 <col:14, col:34> 'int' <IntegralCast>
  `-BinaryOperator 0x562807060d90 <col:14, col:34> 'unsigned int' '+'
    |-BinaryOperator 0x562807060d30 <col:14, col:32> 'unsigned int' '+'
    | |-ImplicitCastExpr 0x562807060d18 <col:14> 'unsigned int' <IntegralCast>
    | | `-IntegerLiteral 0x562807060c30 <col:14> 'int' 1
    | `-CallExpr 0x562807060cb8 <col:16, col:32> 'uint32_t':'unsigned int'
    |   |-ImplicitCastExpr 0x562807060ca0 <col:16> 'uint32_t (*)(uint64_t)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x562807060c50 <col:16> 'uint32_t (uint64_t)' Function 0x56280704ed60 'countDigits' 'uint32_t (uint64_t)'
    |   `-ImplicitCastExpr 0x562807060d00 <col:28> 'uint64_t':'unsigned long' <IntegralCast>
    |     `-ImplicitCastExpr 0x562807060ce8 <col:28> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x562807060c78 <col:28> 'int' lvalue ParmVar 0x5628070604c8 'argc' 'int'
    `-ImplicitCastExpr 0x562807060d78 <col:34> 'unsigned int' <IntegralCast>
      `-IntegerLiteral 0x562807060d58 <col:34> 'int' 2
[B20.14] = [B20.13]
  16: IntegerLiteral 0x562807060e20 <hiredis.c:624:14> 'int' 0
0
  17: DeclRefExpr 0x562807060df8 <hiredis.c:624:10> 'int' lvalue Var 0x5628070609e8 'j' 'int'
j
  18: BinaryOperator 0x562807060e40 <hiredis.c:624:10, col:14> 'int' '='
|-DeclRefExpr 0x562807060df8 <col:10> 'int' lvalue Var 0x5628070609e8 'j' 'int'
`-IntegerLiteral 0x562807060e20 <col:14> 'int' 0
[B20.17] = [B20.16]
   Preds (1): B22
   Succs (1): B19

 [B21]
   1: IntegerLiteral 0x562807060b78 <hiredis.c:620:17> 'int' 1
1
   2: UnaryOperator 0x562807060b98 <hiredis.c:620:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x562807060b78 <col:17> 'int' 1
-[B21.1]
   3: ReturnStmt 0x562807060bb8 <hiredis.c:620:9, col:17>
`-UnaryOperator 0x562807060b98 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x562807060b78 <col:17> 'int' 1
return [B21.2];
   Preds (1): B22
   Succs (1): B0

 [B22]
   1: IntegerLiteral 0x562807060790 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5628070607c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562807060790 <col:24> 'int' 0
(void *)[B22.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x562807060810 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
`-ParenExpr 0x5628070607f0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5628070607c8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562807060790 <col:24> 'int' 0
([B22.2]) (ImplicitCastExpr, NullToPointer, char *)
   4: DeclStmt 0x562807060828 <hiredis.c:613:5, col:21>col:11
`-VarDecl 0x562807060730 <col:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> hiredis.c:613:11 used cmd 'char *' cinit
  `-ImplicitCastExpr 0x562807060810 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
    `-ParenExpr 0x5628070607f0 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x5628070607c8 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x562807060790 <col:24> 'int' 0
char *cmd = ((void *)0);
   5: DeclStmt 0x5628070608b8 <hiredis.c:614:5, col:12>col:9
`-VarDecl 0x562807060858 <col:5, col:9> col:9 used pos 'int'
int pos;
   6: DeclStmt 0x562807060940 <hiredis.c:615:5, col:15>col:12
`-VarDecl 0x5628070608e0 <col:5, col:12> col:12 used len 'size_t':'unsigned long'
size_t len;
   7: DeclStmt 0x56280707e6b8 <hiredis.c:616:9>col:9
`-VarDecl 0x562807060970 <col:5, col:9> col:9 used totlen 'int'
int totlen;
   8: DeclStmt 0x56280707e6a0 <hiredis.c:616:17>col:17
`-VarDecl 0x5628070609e8 <col:5, col:17> col:17 used j 'int'
int j;
   9: DeclRefExpr 0x562807060a78 <hiredis.c:619:9> 'char **' lvalue ParmVar 0x562807060450 'target' 'char **'
target
  10: ImplicitCastExpr 0x562807060b20 <hiredis.c:619:9> 'char **' <LValueToRValue>
`-DeclRefExpr 0x562807060a78 <col:9> 'char **' lvalue ParmVar 0x562807060450 'target' 'char **'
[B22.9] (ImplicitCastExpr, LValueToRValue, char **)
  11: IntegerLiteral 0x562807060aa0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  12: CStyleCastExpr 0x562807060ad8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562807060aa0 <col:24> 'int' 0
(void *)[B22.11] (CStyleCastExpr, NullToPointer, void *)
  13: ImplicitCastExpr 0x562807060b38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
`-ParenExpr 0x562807060b00 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562807060ad8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562807060aa0 <col:24> 'int' 0
([B22.12]) (ImplicitCastExpr, BitCast, char **)
  14: BinaryOperator 0x562807060b50 <hiredis.c:619:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x562807060b20 <hiredis.c:619:9> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x562807060a78 <col:9> 'char **' lvalue ParmVar 0x562807060450 'target' 'char **'
`-ImplicitCastExpr 0x562807060b38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
  `-ParenExpr 0x562807060b00 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562807060ad8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562807060aa0 <col:24> 'int' 0
[B22.10] == [B22.13]
   T: if [B22.14]
   Preds (1): B23
   Succs (2): B21 B20

 [B0 (EXIT)]
   Preds (4): B1 B3 B12 B21
