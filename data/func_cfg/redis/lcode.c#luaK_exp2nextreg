void luaK_exp2nextreg(FuncState *fs, expdesc *e)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768d2438 <lcode.c:415:3> 'void (FuncState *, expdesc *)' Function 0x5637768ca7b0 'luaK_dischargevars' 'void (FuncState *, expdesc *)'
luaK_dischargevars
   2: ImplicitCastExpr 0x5637768d24b0 <lcode.c:415:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d2438 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768ca7b0 'luaK_dischargevars' 'void (FuncState *, expdesc *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, expdesc *))
   3: DeclRefExpr 0x5637768d2460 <lcode.c:415:22> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768d2500 <lcode.c:415:22> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2460 <col:22> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768d2488 <lcode.c:415:26> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
e
   6: ImplicitCastExpr 0x5637768d2518 <lcode.c:415:26> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2488 <col:26> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
[B1.5] (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: CallExpr 0x5637768d24c8 <lcode.c:415:3, col:27> 'void'
|-ImplicitCastExpr 0x5637768d24b0 <col:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d2438 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768ca7b0 'luaK_dischargevars' 'void (FuncState *, expdesc *)'
|-ImplicitCastExpr 0x5637768d2500 <col:22> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d2460 <col:22> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768d2518 <col:26> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d2488 <col:26> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x5637768d2530 <lcode.c:416:3> 'void (FuncState *, expdesc *)' Function 0x5637768be6f8 'freeexp' 'void (FuncState *, expdesc *)'
freeexp
   9: ImplicitCastExpr 0x5637768d25a8 <lcode.c:416:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d2530 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768be6f8 'freeexp' 'void (FuncState *, expdesc *)'
[B1.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, expdesc *))
  10: DeclRefExpr 0x5637768d2558 <lcode.c:416:11> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
fs
  11: ImplicitCastExpr 0x5637768d25f8 <lcode.c:416:11> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2558 <col:11> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
[B1.10] (ImplicitCastExpr, LValueToRValue, FuncState *)
  12: DeclRefExpr 0x5637768d2580 <lcode.c:416:15> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
e
  13: ImplicitCastExpr 0x5637768d2610 <lcode.c:416:15> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2580 <col:15> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
[B1.12] (ImplicitCastExpr, LValueToRValue, expdesc *)
  14: CallExpr 0x5637768d25c0 <lcode.c:416:3, col:16> 'void'
|-ImplicitCastExpr 0x5637768d25a8 <col:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d2530 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768be6f8 'freeexp' 'void (FuncState *, expdesc *)'
|-ImplicitCastExpr 0x5637768d25f8 <col:11> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d2558 <col:11> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768d2610 <col:15> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d2580 <col:15> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
[B1.9]([B1.11], [B1.13])
  15: DeclRefExpr 0x5637768d2628 <lcode.c:417:3> 'void (FuncState *, int)' Function 0x5637768bdcb0 'luaK_reserveregs' 'void (FuncState *, int)'
luaK_reserveregs
  16: ImplicitCastExpr 0x5637768d2698 <lcode.c:417:3> 'void (*)(FuncState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d2628 <col:3> 'void (FuncState *, int)' Function 0x5637768bdcb0 'luaK_reserveregs' 'void (FuncState *, int)'
[B1.15] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, int))
  17: DeclRefExpr 0x5637768d2650 <lcode.c:417:20> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
fs
  18: ImplicitCastExpr 0x5637768d26e8 <lcode.c:417:20> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2650 <col:20> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
[B1.17] (ImplicitCastExpr, LValueToRValue, FuncState *)
  19: IntegerLiteral 0x5637768d2678 <lcode.c:417:24> 'int' 1
1
  20: CallExpr 0x5637768d26b0 <lcode.c:417:3, col:25> 'void'
|-ImplicitCastExpr 0x5637768d2698 <col:3> 'void (*)(FuncState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d2628 <col:3> 'void (FuncState *, int)' Function 0x5637768bdcb0 'luaK_reserveregs' 'void (FuncState *, int)'
|-ImplicitCastExpr 0x5637768d26e8 <col:20> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d2650 <col:20> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
`-IntegerLiteral 0x5637768d2678 <col:24> 'int' 1
[B1.16]([B1.18], [B1.19])
  21: DeclRefExpr 0x5637768d2700 <lcode.c:418:3> 'void (FuncState *, expdesc *, int)' Function 0x5637768d03f0 'exp2reg' 'void (FuncState *, expdesc *, int)'
exp2reg
  22: ImplicitCastExpr 0x5637768d2850 <lcode.c:418:3> 'void (*)(FuncState *, expdesc *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d2700 <col:3> 'void (FuncState *, expdesc *, int)' Function 0x5637768d03f0 'exp2reg' 'void (FuncState *, expdesc *, int)'
[B1.21] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, expdesc *, int))
  23: DeclRefExpr 0x5637768d2728 <lcode.c:418:11> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
fs
  24: ImplicitCastExpr 0x5637768d28a8 <lcode.c:418:11> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2728 <col:11> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
[B1.23] (ImplicitCastExpr, LValueToRValue, FuncState *)
  25: DeclRefExpr 0x5637768d2750 <lcode.c:418:15> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
e
  26: ImplicitCastExpr 0x5637768d28c0 <lcode.c:418:15> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2750 <col:15> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
[B1.25] (ImplicitCastExpr, LValueToRValue, expdesc *)
  27: DeclRefExpr 0x5637768d2778 <lcode.c:418:18> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
fs
  28: ImplicitCastExpr 0x5637768d27a0 <lcode.c:418:18> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2778 <col:18> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
[B1.27] (ImplicitCastExpr, LValueToRValue, FuncState *)
  29: MemberExpr 0x5637768d27b8 <lcode.c:418:18, col:22> 'int' lvalue ->freereg 0x56377687e268
`-ImplicitCastExpr 0x5637768d27a0 <col:18> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d2778 <col:18> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
[B1.28]->freereg
  30: ImplicitCastExpr 0x5637768d2810 <lcode.c:418:18, col:22> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d27b8 <col:18, col:22> 'int' lvalue ->freereg 0x56377687e268
  `-ImplicitCastExpr 0x5637768d27a0 <col:18> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d2778 <col:18> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
[B1.29] (ImplicitCastExpr, LValueToRValue, int)
  31: IntegerLiteral 0x5637768d27f0 <lcode.c:418:32> 'int' 1
1
  32: BinaryOperator 0x5637768d2828 <lcode.c:418:18, col:32> 'int' '-'
|-ImplicitCastExpr 0x5637768d2810 <col:18, col:22> 'int' <LValueToRValue>
| `-MemberExpr 0x5637768d27b8 <col:18, col:22> 'int' lvalue ->freereg 0x56377687e268
|   `-ImplicitCastExpr 0x5637768d27a0 <col:18> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768d2778 <col:18> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
`-IntegerLiteral 0x5637768d27f0 <col:32> 'int' 1
[B1.30] - [B1.31]
  33: CallExpr 0x5637768d2868 <lcode.c:418:3, col:33> 'void'
|-ImplicitCastExpr 0x5637768d2850 <col:3> 'void (*)(FuncState *, expdesc *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d2700 <col:3> 'void (FuncState *, expdesc *, int)' Function 0x5637768d03f0 'exp2reg' 'void (FuncState *, expdesc *, int)'
|-ImplicitCastExpr 0x5637768d28a8 <col:11> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d2728 <col:11> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
|-ImplicitCastExpr 0x5637768d28c0 <col:15> 'expdesc *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d2750 <col:15> 'expdesc *' lvalue ParmVar 0x5637768d22b0 'e' 'expdesc *'
`-BinaryOperator 0x5637768d2828 <col:18, col:32> 'int' '-'
  |-ImplicitCastExpr 0x5637768d2810 <col:18, col:22> 'int' <LValueToRValue>
  | `-MemberExpr 0x5637768d27b8 <col:18, col:22> 'int' lvalue ->freereg 0x56377687e268
  |   `-ImplicitCastExpr 0x5637768d27a0 <col:18> 'FuncState *' <LValueToRValue>
  |     `-DeclRefExpr 0x5637768d2778 <col:18> 'FuncState *' lvalue ParmVar 0x5637768d2240 'fs' 'FuncState *'
  `-IntegerLiteral 0x5637768d27f0 <col:32> 'int' 1
[B1.22]([B1.24], [B1.26], [B1.32])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
