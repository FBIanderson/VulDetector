int redisGetReply(redisContext *c, void **reply)
 [B18 (ENTRY)]
   Succs (1): B17

 [B1]
   1: IntegerLiteral 0x562807075388 <./read.h:38:18> 'int' 0
0
   2: ReturnStmt 0x5628070753a8 <hiredis.c:963:5, ./read.h:38:18>
`-IntegerLiteral 0x562807075388 <col:18> 'int' 0
return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5628070752e8 <hiredis.c:962:33> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
aux
   2: ImplicitCastExpr 0x562807075310 <hiredis.c:962:33> 'void *' <LValueToRValue>
`-DeclRefExpr 0x5628070752e8 <col:33> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
[B2.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: DeclRefExpr 0x562807075288 <hiredis.c:962:25> 'void **' lvalue ParmVar 0x562807074218 'reply' 'void **'
reply
   4: ImplicitCastExpr 0x5628070752b0 <hiredis.c:962:25> 'void **' <LValueToRValue>
`-DeclRefExpr 0x562807075288 <col:25> 'void **' lvalue ParmVar 0x562807074218 'reply' 'void **'
[B2.3] (ImplicitCastExpr, LValueToRValue, void **)
   5: UnaryOperator 0x5628070752c8 <hiredis.c:962:24, col:25> 'void *' lvalue prefix '*'
`-ImplicitCastExpr 0x5628070752b0 <col:25> 'void **' <LValueToRValue>
  `-DeclRefExpr 0x562807075288 <col:25> 'void **' lvalue ParmVar 0x562807074218 'reply' 'void **'
*[B2.4]
   6: BinaryOperator 0x562807075328 <hiredis.c:962:24, col:33> 'void *' '='
|-UnaryOperator 0x5628070752c8 <col:24, col:25> 'void *' lvalue prefix '*'
| `-ImplicitCastExpr 0x5628070752b0 <col:25> 'void **' <LValueToRValue>
|   `-DeclRefExpr 0x562807075288 <col:25> 'void **' lvalue ParmVar 0x562807074218 'reply' 'void **'
`-ImplicitCastExpr 0x562807075310 <col:33> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x5628070752e8 <col:33> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
[B2.5] = [B2.2]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x562807075188 <hiredis.c:962:9> 'void **' lvalue ParmVar 0x562807074218 'reply' 'void **'
reply
   2: ImplicitCastExpr 0x562807075230 <hiredis.c:962:9> 'void **' <LValueToRValue>
`-DeclRefExpr 0x562807075188 <col:9> 'void **' lvalue ParmVar 0x562807074218 'reply' 'void **'
[B3.1] (ImplicitCastExpr, LValueToRValue, void **)
   3: IntegerLiteral 0x5628070751b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x5628070751e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5628070751b0 <col:24> 'int' 0
(void *)[B3.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x562807075248 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void **' <BitCast>
`-ParenExpr 0x562807075210 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5628070751e8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5628070751b0 <col:24> 'int' 0
([B3.4]) (ImplicitCastExpr, BitCast, void **)
   6: BinaryOperator 0x562807075260 <hiredis.c:962:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ImplicitCastExpr 0x562807075230 <hiredis.c:962:9> 'void **' <LValueToRValue>
| `-DeclRefExpr 0x562807075188 <col:9> 'void **' lvalue ParmVar 0x562807074218 'reply' 'void **'
`-ImplicitCastExpr 0x562807075248 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void **' <BitCast>
  `-ParenExpr 0x562807075210 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5628070751e8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5628070751b0 <col:24> 'int' 0
[B3.2] != [B3.5]
   T: if [B3.6]
   Preds (3): B4 B14 B15
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x562807075028 <hiredis.c:958:18> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
aux
   2: ImplicitCastExpr 0x5628070750d0 <hiredis.c:958:18> 'void *' <LValueToRValue>
`-DeclRefExpr 0x562807075028 <col:18> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
[B4.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: IntegerLiteral 0x562807075050 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x562807075088 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562807075050 <col:24> 'int' 0
(void *)[B4.3] (CStyleCastExpr, NullToPointer, void *)
   5: BinaryOperator 0x5628070750e8 <hiredis.c:958:18, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5628070750d0 <hiredis.c:958:18> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x562807075028 <col:18> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
`-ParenExpr 0x5628070750b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x562807075088 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562807075050 <col:24> 'int' 0
[B4.2] == ([B4.4])
   T: do ... while [B4.5]
   Preds (1): B6
   Succs (2): B9 B3

 [B5]
   1: IntegerLiteral 0x562807074f78 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x562807074f98 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562807074f78 <col:20> 'int' 1
-[B5.1]
   3: ReturnStmt 0x562807074fb8 <hiredis.c:957:17, ./read.h:37:20>
`-UnaryOperator 0x562807074f98 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562807074f78 <col:20> 'int' 1
return [B5.2];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x562807074e10 <hiredis.c:956:17> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
redisGetReplyFromReader
   2: ImplicitCastExpr 0x562807074ea8 <hiredis.c:956:17> 'int (*)(redisContext *, void **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807074e10 <col:17> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisContext *, void **))
   3: DeclRefExpr 0x562807074e38 <hiredis.c:956:41> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x562807074ef8 <hiredis.c:956:41> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x562807074e38 <col:41> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B6.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: DeclRefExpr 0x562807074e60 <hiredis.c:956:44> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
aux
   6: UnaryOperator 0x562807074e88 <hiredis.c:956:43, col:44> 'void **' prefix '&'
`-DeclRefExpr 0x562807074e60 <col:44> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
&[B6.5]
   7: CallExpr 0x562807074ec0 <hiredis.c:956:17, col:47> 'int'
|-ImplicitCastExpr 0x562807074ea8 <col:17> 'int (*)(redisContext *, void **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807074e10 <col:17> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
|-ImplicitCastExpr 0x562807074ef8 <col:41> 'redisContext *' <LValueToRValue>
| `-DeclRefExpr 0x562807074e38 <col:41> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
`-UnaryOperator 0x562807074e88 <col:43, col:44> 'void **' prefix '&'
  `-DeclRefExpr 0x562807074e60 <col:44> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
[B6.2]([B6.4], [B6.6])
   8: IntegerLiteral 0x562807074f10 <./read.h:37:20> 'int' 1
1
   9: UnaryOperator 0x562807074f30 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562807074f10 <col:20> 'int' 1
-[B6.8]
  10: BinaryOperator 0x562807074f50 <hiredis.c:956:17, ./read.h:37:20> 'int' '=='
|-CallExpr 0x562807074ec0 <hiredis.c:956:17, col:47> 'int'
| |-ImplicitCastExpr 0x562807074ea8 <col:17> 'int (*)(redisContext *, void **)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562807074e10 <col:17> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
| |-ImplicitCastExpr 0x562807074ef8 <col:41> 'redisContext *' <LValueToRValue>
| | `-DeclRefExpr 0x562807074e38 <col:41> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
| `-UnaryOperator 0x562807074e88 <col:43, col:44> 'void **' prefix '&'
|   `-DeclRefExpr 0x562807074e60 <col:44> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
`-UnaryOperator 0x562807074f30 <./read.h:37:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562807074f10 <col:20> 'int' 1
[B6.7] == [B6.9]
   T: if [B6.10]
   Preds (1): B8
   Succs (2): B5 B4

 [B7]
   1: IntegerLiteral 0x562807074d80 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x562807074da0 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562807074d80 <col:20> 'int' 1
-[B7.1]
   3: ReturnStmt 0x562807074dc0 <hiredis.c:955:17, ./read.h:37:20>
`-UnaryOperator 0x562807074da0 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562807074d80 <col:20> 'int' 1
return [B7.2];
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x562807074c50 <hiredis.c:954:17> 'int (redisContext *)' Function 0x5628070719a0 'redisBufferRead' 'int (redisContext *)'
redisBufferRead
   2: ImplicitCastExpr 0x562807074ca0 <hiredis.c:954:17> 'int (*)(redisContext *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807074c50 <col:17> 'int (redisContext *)' Function 0x5628070719a0 'redisBufferRead' 'int (redisContext *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisContext *))
   3: DeclRefExpr 0x562807074c78 <hiredis.c:954:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x562807074d00 <hiredis.c:954:33> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x562807074c78 <col:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B8.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: CallExpr 0x562807074cd0 <hiredis.c:954:17, col:34> 'int'
|-ImplicitCastExpr 0x562807074ca0 <col:17> 'int (*)(redisContext *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807074c50 <col:17> 'int (redisContext *)' Function 0x5628070719a0 'redisBufferRead' 'int (redisContext *)'
`-ImplicitCastExpr 0x562807074d00 <col:33> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x562807074c78 <col:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B8.2]([B8.4])
   6: IntegerLiteral 0x562807074d18 <./read.h:37:20> 'int' 1
1
   7: UnaryOperator 0x562807074d38 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562807074d18 <col:20> 'int' 1
-[B8.6]
   8: BinaryOperator 0x562807074d58 <hiredis.c:954:17, ./read.h:37:20> 'int' '=='
|-CallExpr 0x562807074cd0 <hiredis.c:954:17, col:34> 'int'
| |-ImplicitCastExpr 0x562807074ca0 <col:17> 'int (*)(redisContext *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562807074c50 <col:17> 'int (redisContext *)' Function 0x5628070719a0 'redisBufferRead' 'int (redisContext *)'
| `-ImplicitCastExpr 0x562807074d00 <col:33> 'redisContext *' <LValueToRValue>
|   `-DeclRefExpr 0x562807074c78 <col:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
`-UnaryOperator 0x562807074d38 <./read.h:37:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562807074d18 <col:20> 'int' 1
[B8.5] == [B8.7]
   T: if [B8.8]
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   Preds (1): B4
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x562807074bd0 <hiredis.c:950:19> 'int' lvalue Var 0x562807074378 'wdone' 'int'
wdone
   2: ImplicitCastExpr 0x562807074bf8 <hiredis.c:950:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x562807074bd0 <col:19> 'int' lvalue Var 0x562807074378 'wdone' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x562807074c10 <hiredis.c:950:18, col:19> 'int' prefix '!'
`-ImplicitCastExpr 0x562807074bf8 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562807074bd0 <col:19> 'int' lvalue Var 0x562807074378 'wdone' 'int'
![B10.2]
   T: do ... while [B10.3]
   Preds (1): B12
   Succs (2): B13 B8

 [B11]
   1: IntegerLiteral 0x562807074b28 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x562807074b48 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562807074b28 <col:20> 'int' 1
-[B11.1]
   3: ReturnStmt 0x562807074b68 <hiredis.c:949:17, ./read.h:37:20>
`-UnaryOperator 0x562807074b48 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562807074b28 <col:20> 'int' 1
return [B11.2];
   Preds (1): B12
   Succs (1): B0

 [B12]
   1: DeclRefExpr 0x562807074960 <hiredis.c:948:17> 'int (redisContext *, int *)' Function 0x5628070728e0 'redisBufferWrite' 'int (redisContext *, int *)'
redisBufferWrite
   2: ImplicitCastExpr 0x562807074a58 <hiredis.c:948:17> 'int (*)(redisContext *, int *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807074960 <col:17> 'int (redisContext *, int *)' Function 0x5628070728e0 'redisBufferWrite' 'int (redisContext *, int *)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisContext *, int *))
   3: DeclRefExpr 0x562807074988 <hiredis.c:948:34> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x562807074aa8 <hiredis.c:948:34> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x562807074988 <col:34> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B12.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: DeclRefExpr 0x5628070749b0 <hiredis.c:948:37> 'int' lvalue Var 0x562807074378 'wdone' 'int'
wdone
   6: UnaryOperator 0x5628070749d8 <hiredis.c:948:36, col:37> 'int *' prefix '&'
`-DeclRefExpr 0x5628070749b0 <col:37> 'int' lvalue Var 0x562807074378 'wdone' 'int'
&[B12.5]
   7: CallExpr 0x562807074a70 <hiredis.c:948:17, col:42> 'int'
|-ImplicitCastExpr 0x562807074a58 <col:17> 'int (*)(redisContext *, int *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807074960 <col:17> 'int (redisContext *, int *)' Function 0x5628070728e0 'redisBufferWrite' 'int (redisContext *, int *)'
|-ImplicitCastExpr 0x562807074aa8 <col:34> 'redisContext *' <LValueToRValue>
| `-DeclRefExpr 0x562807074988 <col:34> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
`-UnaryOperator 0x5628070749d8 <col:36, col:37> 'int *' prefix '&'
  `-DeclRefExpr 0x5628070749b0 <col:37> 'int' lvalue Var 0x562807074378 'wdone' 'int'
[B12.2]([B12.4], [B12.6])
   8: IntegerLiteral 0x562807074ac0 <./read.h:37:20> 'int' 1
1
   9: UnaryOperator 0x562807074ae0 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562807074ac0 <col:20> 'int' 1
-[B12.8]
  10: BinaryOperator 0x562807074b00 <hiredis.c:948:17, ./read.h:37:20> 'int' '=='
|-CallExpr 0x562807074a70 <hiredis.c:948:17, col:42> 'int'
| |-ImplicitCastExpr 0x562807074a58 <col:17> 'int (*)(redisContext *, int *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562807074960 <col:17> 'int (redisContext *, int *)' Function 0x5628070728e0 'redisBufferWrite' 'int (redisContext *, int *)'
| |-ImplicitCastExpr 0x562807074aa8 <col:34> 'redisContext *' <LValueToRValue>
| | `-DeclRefExpr 0x562807074988 <col:34> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
| `-UnaryOperator 0x5628070749d8 <col:36, col:37> 'int *' prefix '&'
|   `-DeclRefExpr 0x5628070749b0 <col:37> 'int' lvalue Var 0x562807074378 'wdone' 'int'
`-UnaryOperator 0x562807074ae0 <./read.h:37:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562807074ac0 <col:20> 'int' 1
[B12.7] == [B12.9]
   T: if [B12.10]
   Preds (2): B13 B14
   Succs (2): B11 B10

 [B13]
   Preds (1): B10
   Succs (1): B12

 [B14]
   1: DeclRefExpr 0x562807074860 <hiredis.c:945:24> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
c
   2: ImplicitCastExpr 0x562807074888 <hiredis.c:945:24> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x562807074860 <col:24> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B14.1] (ImplicitCastExpr, LValueToRValue, redisContext *)
   3: MemberExpr 0x5628070748a0 <hiredis.c:945:24, col:27> 'int' lvalue ->flags 0x56280702fce8
`-ImplicitCastExpr 0x562807074888 <col:24> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x562807074860 <col:24> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B14.2]->flags
   4: ImplicitCastExpr 0x5628070748f8 <hiredis.c:945:24, col:27> 'int' <LValueToRValue>
`-MemberExpr 0x5628070748a0 <col:24, col:27> 'int' lvalue ->flags 0x56280702fce8
  `-ImplicitCastExpr 0x562807074888 <col:24> 'redisContext *' <LValueToRValue>
    `-DeclRefExpr 0x562807074860 <col:24> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B14.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5628070748d8 <./hiredis.h:53:21> 'int' 1
1
   6: BinaryOperator 0x562807074910 <hiredis.c:945:24, ./hiredis.h:53:21> 'int' '&'
|-ImplicitCastExpr 0x5628070748f8 <hiredis.c:945:24, col:27> 'int' <LValueToRValue>
| `-MemberExpr 0x5628070748a0 <col:24, col:27> 'int' lvalue ->flags 0x56280702fce8
|   `-ImplicitCastExpr 0x562807074888 <col:24> 'redisContext *' <LValueToRValue>
|     `-DeclRefExpr 0x562807074860 <col:24> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
`-IntegerLiteral 0x5628070748d8 <./hiredis.h:53:21> 'int' 1
[B14.4] & [B14.5]
   T: if [B15.5] && [B14.6]
   Preds (1): B15
   Succs (2): B12 B3

 [B15]
   1: DeclRefExpr 0x562807074778 <hiredis.c:945:9> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
aux
   2: ImplicitCastExpr 0x562807074820 <hiredis.c:945:9> 'void *' <LValueToRValue>
`-DeclRefExpr 0x562807074778 <col:9> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
[B15.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: IntegerLiteral 0x5628070747a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x5628070747d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5628070747a0 <col:24> 'int' 0
(void *)[B15.3] (CStyleCastExpr, NullToPointer, void *)
   5: BinaryOperator 0x562807074838 <hiredis.c:945:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x562807074820 <hiredis.c:945:9> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x562807074778 <col:9> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
`-ParenExpr 0x562807074800 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x5628070747d8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5628070747a0 <col:24> 'int' 0
[B15.2] == ([B15.4])
   T: [B15.5] && ...
   Preds (1): B17
   Succs (2): B14 B3

 [B16]
   1: IntegerLiteral 0x5628070746e8 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x562807074708 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x5628070746e8 <col:20> 'int' 1
-[B16.1]
   3: ReturnStmt 0x562807074728 <hiredis.c:942:9, ./read.h:37:20>
`-UnaryOperator 0x562807074708 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x5628070746e8 <col:20> 'int' 1
return [B16.2];
   Preds (1): B17
   Succs (1): B0

 [B17]
   1: IntegerLiteral 0x5628070743d8 <hiredis.c:937:17> 'int' 0
0
   2: DeclStmt 0x5628070743f8 <hiredis.c:937:5, col:18>col:9
`-VarDecl 0x562807074378 <col:5, col:17> col:9 used wdone 'int' cinit
  `-IntegerLiteral 0x5628070743d8 <col:17> 'int' 0
int wdone = 0;
   3: IntegerLiteral 0x562807074488 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x5628070744c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562807074488 <col:24> 'int' 0
(void *)[B17.3] (CStyleCastExpr, NullToPointer, void *)
   5: DeclStmt 0x562807074508 <hiredis.c:938:5, col:21>col:11
`-VarDecl 0x562807074428 <col:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> hiredis.c:938:11 used aux 'void *' cinit
  `-ParenExpr 0x5628070744e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
    `-CStyleCastExpr 0x5628070744c0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562807074488 <col:24> 'int' 0
void *aux = ((void *)0);
   6: DeclRefExpr 0x562807074520 <hiredis.c:941:9> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
redisGetReplyFromReader
   7: ImplicitCastExpr 0x562807074618 <hiredis.c:941:9> 'int (*)(redisContext *, void **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562807074520 <col:9> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
[B17.6] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisContext *, void **))
   8: DeclRefExpr 0x562807074548 <hiredis.c:941:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
c
   9: ImplicitCastExpr 0x562807074668 <hiredis.c:941:33> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x562807074548 <col:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
[B17.8] (ImplicitCastExpr, LValueToRValue, redisContext *)
  10: DeclRefExpr 0x562807074570 <hiredis.c:941:36> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
aux
  11: UnaryOperator 0x562807074598 <hiredis.c:941:35, col:36> 'void **' prefix '&'
`-DeclRefExpr 0x562807074570 <col:36> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
&[B17.10]
  12: CallExpr 0x562807074630 <hiredis.c:941:9, col:39> 'int'
|-ImplicitCastExpr 0x562807074618 <col:9> 'int (*)(redisContext *, void **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562807074520 <col:9> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
|-ImplicitCastExpr 0x562807074668 <col:33> 'redisContext *' <LValueToRValue>
| `-DeclRefExpr 0x562807074548 <col:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
`-UnaryOperator 0x562807074598 <col:35, col:36> 'void **' prefix '&'
  `-DeclRefExpr 0x562807074570 <col:36> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
[B17.7]([B17.9], [B17.11])
  13: IntegerLiteral 0x562807074680 <./read.h:37:20> 'int' 1
1
  14: UnaryOperator 0x5628070746a0 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x562807074680 <col:20> 'int' 1
-[B17.13]
  15: BinaryOperator 0x5628070746c0 <hiredis.c:941:9, ./read.h:37:20> 'int' '=='
|-CallExpr 0x562807074630 <hiredis.c:941:9, col:39> 'int'
| |-ImplicitCastExpr 0x562807074618 <col:9> 'int (*)(redisContext *, void **)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562807074520 <col:9> 'int (redisContext *, void **)' Function 0x562807073b38 'redisGetReplyFromReader' 'int (redisContext *, void **)'
| |-ImplicitCastExpr 0x562807074668 <col:33> 'redisContext *' <LValueToRValue>
| | `-DeclRefExpr 0x562807074548 <col:33> 'redisContext *' lvalue ParmVar 0x5628070741a0 'c' 'redisContext *'
| `-UnaryOperator 0x562807074598 <col:35, col:36> 'void **' prefix '&'
|   `-DeclRefExpr 0x562807074570 <col:36> 'void *' lvalue Var 0x562807074428 'aux' 'void *'
`-UnaryOperator 0x5628070746a0 <./read.h:37:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x562807074680 <col:20> 'int' 1
[B17.12] == [B17.14]
   T: if [B17.15]
   Preds (1): B18
   Succs (2): B16 B15

 [B0 (EXIT)]
   Preds (5): B1 B5 B7 B11 B16
