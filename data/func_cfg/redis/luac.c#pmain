static int pmain(lua_State *L)
 [B24 (ENTRY)]
   Succs (1): B23

 [B1]
   1: IntegerLiteral 0x55759c9e9fc0 <luac.c:183:9> 'int' 0
0
   2: ReturnStmt 0x55759c9e9fe0 <luac.c:183:2, col:9>
`-IntegerLiteral 0x55759c9e9fc0 <col:9> 'int' 0
return [B1.1];
   Preds (3): B2 B3 B11
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55759c9e9e38 <luac.c:181:18> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
cannot
   2: ImplicitCastExpr 0x55759c9e9e90 <luac.c:181:18> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9e38 <col:18> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: StringLiteral 0x55759c9e9e60 <luac.c:181:25> 'char [6]' lvalue "close"
"close"
   4: ImplicitCastExpr 0x55759c9e9ed8 <luac.c:181:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9e9e60 <col:25> 'char [6]' lvalue "close"
[B2.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55759c9e9ef0 <luac.c:181:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e9ed8 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9e9e60 <col:25> 'char [6]' lvalue "close"
[B2.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55759c9e9ea8 <luac.c:181:18, col:32> 'void'
|-ImplicitCastExpr 0x55759c9e9e90 <col:18> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9e38 <col:18> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
`-ImplicitCastExpr 0x55759c9e9ef0 <col:25> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9e9ed8 <col:25> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9e9e60 <col:25> 'char [6]' lvalue "close"
[B2.2]([B2.5])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55759c9e9d88 <luac.c:181:7> 'int (FILE *)' Function 0x55759c841cf8 'fclose' 'int (FILE *)'
fclose
   2: ImplicitCastExpr 0x55759c9e9dd8 <luac.c:181:7> 'int (*)(FILE *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9d88 <col:7> 'int (FILE *)' Function 0x55759c841cf8 'fclose' 'int (FILE *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *))
   3: DeclRefExpr 0x55759c9e9db0 <luac.c:181:14> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
D
   4: ImplicitCastExpr 0x55759c9e9e20 <luac.c:181:14> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9db0 <col:14> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
[B3.3] (ImplicitCastExpr, LValueToRValue, FILE *)
   5: CallExpr 0x55759c9e9df0 <luac.c:181:7, col:15> 'int'
|-ImplicitCastExpr 0x55759c9e9dd8 <col:7> 'int (*)(FILE *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9d88 <col:7> 'int (FILE *)' Function 0x55759c841cf8 'fclose' 'int (FILE *)'
`-ImplicitCastExpr 0x55759c9e9e20 <col:14> 'FILE *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e9db0 <col:14> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
[B3.2]([B3.4])
   T: if [B3.5]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55759c9e9c40 <luac.c:180:18> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
cannot
   2: ImplicitCastExpr 0x55759c9e9cd8 <luac.c:180:18> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9c40 <col:18> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: StringLiteral 0x55759c9e9ca8 <luac.c:180:25> 'char [6]' lvalue "write"
"write"
   4: ImplicitCastExpr 0x55759c9e9d20 <luac.c:180:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9e9ca8 <col:25> 'char [6]' lvalue "write"
[B4.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55759c9e9d38 <luac.c:180:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e9d20 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9e9ca8 <col:25> 'char [6]' lvalue "write"
[B4.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55759c9e9cf0 <luac.c:180:18, col:32> 'void'
|-ImplicitCastExpr 0x55759c9e9cd8 <col:18> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9c40 <col:18> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
`-ImplicitCastExpr 0x55759c9e9d38 <col:25> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9e9d20 <col:25> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9e9ca8 <col:25> 'char [6]' lvalue "write"
[B4.2]([B4.5])
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: IntegerLiteral 0x55759c9e9838 <./llimits.h:110:33> 'int' 0
0
   2: CStyleCastExpr 0x55759c9e9868 <./llimits.h:110:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x55759c9e9838 <col:33> 'int' 0
(void)[B5.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55759c9e98b0 <luac.c:178:3> 'int (lua_State *, const Proto *, lua_Writer, void *, int)' Function 0x55759c86e588 'luaU_dump' 'int (lua_State *, const Proto *, lua_Writer, void *, int)'
luaU_dump
   4: ImplicitCastExpr 0x55759c9e99f8 <luac.c:178:3> 'int (*)(lua_State *, const Proto *, lua_Writer, void *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e98b0 <col:3> 'int (lua_State *, const Proto *, lua_Writer, void *, int)' Function 0x55759c86e588 'luaU_dump' 'int (lua_State *, const Proto *, lua_Writer, void *, int)'
[B5.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const Proto *, lua_Writer, void *, int))
   5: DeclRefExpr 0x55759c9e98d8 <luac.c:178:13> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55759c9e9a60 <luac.c:178:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e98d8 <col:13> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
[B5.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x55759c9e9900 <luac.c:178:15> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
f
   8: ImplicitCastExpr 0x55759c9e9a78 <luac.c:178:15> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9900 <col:15> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
[B5.7] (ImplicitCastExpr, LValueToRValue, const Proto *)
   9: DeclRefExpr 0x55759c9e9928 <luac.c:178:17> 'int (lua_State *, const void *, size_t, void *)' Function 0x55759c9e7320 'writer' 'int (lua_State *, const void *, size_t, void *)'
writer
  10: ImplicitCastExpr 0x55759c9e9ab8 <luac.c:178:17> 'int (*)(lua_State *, const void *, size_t, void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9928 <col:17> 'int (lua_State *, const void *, size_t, void *)' Function 0x55759c9e7320 'writer' 'int (lua_State *, const void *, size_t, void *)'
[B5.9] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const void *, size_t, void *))
  11: DeclRefExpr 0x55759c9e9950 <luac.c:178:24> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
D
  12: ImplicitCastExpr 0x55759c9e9ad0 <luac.c:178:24> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9950 <col:24> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
[B5.11] (ImplicitCastExpr, LValueToRValue, FILE *)
  13: ImplicitCastExpr 0x55759c9e9ae8 <luac.c:178:24> 'void *' <BitCast>
`-ImplicitCastExpr 0x55759c9e9ad0 <col:24> 'FILE *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e9950 <col:24> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
[B5.12] (ImplicitCastExpr, BitCast, void *)
  14: DeclRefExpr 0x55759c9e9978 <luac.c:178:26> 'int' lvalue Var 0x55759c86eaa0 'stripping' 'int'
stripping
  15: ImplicitCastExpr 0x55759c9e9b00 <luac.c:178:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9978 <col:26> 'int' lvalue Var 0x55759c86eaa0 'stripping' 'int'
[B5.14] (ImplicitCastExpr, LValueToRValue, int)
  16: CallExpr 0x55759c9e9a10 <luac.c:178:3, col:35> 'int'
|-ImplicitCastExpr 0x55759c9e99f8 <col:3> 'int (*)(lua_State *, const Proto *, lua_Writer, void *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e98b0 <col:3> 'int (lua_State *, const Proto *, lua_Writer, void *, int)' Function 0x55759c86e588 'luaU_dump' 'int (lua_State *, const Proto *, lua_Writer, void *, int)'
|-ImplicitCastExpr 0x55759c9e9a60 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e98d8 <col:13> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
|-ImplicitCastExpr 0x55759c9e9a78 <col:15> 'const Proto *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e9900 <col:15> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
|-ImplicitCastExpr 0x55759c9e9ab8 <col:17> 'int (*)(lua_State *, const void *, size_t, void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9928 <col:17> 'int (lua_State *, const void *, size_t, void *)' Function 0x55759c9e7320 'writer' 'int (lua_State *, const void *, size_t, void *)'
|-ImplicitCastExpr 0x55759c9e9ae8 <col:24> 'void *' <BitCast>
| `-ImplicitCastExpr 0x55759c9e9ad0 <col:24> 'FILE *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e9950 <col:24> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
`-ImplicitCastExpr 0x55759c9e9b00 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e9978 <col:26> 'int' lvalue Var 0x55759c86eaa0 'stripping' 'int'
[B5.4]([B5.6], [B5.8], [B5.10], [B5.13], [B5.15])
  17: IntegerLiteral 0x55759c9e9b18 <./llimits.h:111:33> 'int' 0
0
  18: CStyleCastExpr 0x55759c9e9b48 <./llimits.h:111:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x55759c9e9b18 <col:33> 'int' 0
(void)[B5.17] (CStyleCastExpr, ToVoid, void)
  19: DeclRefExpr 0x55759c9e9b90 <luac.c:180:7> 'int (FILE *)' Function 0x55759c851ec0 'ferror' 'int (FILE *)'
ferror
  20: ImplicitCastExpr 0x55759c9e9be0 <luac.c:180:7> 'int (*)(FILE *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9b90 <col:7> 'int (FILE *)' Function 0x55759c851ec0 'ferror' 'int (FILE *)'
[B5.19] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *))
  21: DeclRefExpr 0x55759c9e9bb8 <luac.c:180:14> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
D
  22: ImplicitCastExpr 0x55759c9e9c28 <luac.c:180:14> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9bb8 <col:14> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
[B5.21] (ImplicitCastExpr, LValueToRValue, FILE *)
  23: CallExpr 0x55759c9e9bf8 <luac.c:180:7, col:15> 'int'
|-ImplicitCastExpr 0x55759c9e9be0 <col:7> 'int (*)(FILE *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9b90 <col:7> 'int (FILE *)' Function 0x55759c851ec0 'ferror' 'int (FILE *)'
`-ImplicitCastExpr 0x55759c9e9c28 <col:14> 'FILE *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e9bb8 <col:14> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
[B5.20]([B5.22])
   T: if [B5.23]
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x55759c9e9730 <luac.c:176:16> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
cannot
   2: ImplicitCastExpr 0x55759c9e9788 <luac.c:176:16> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9730 <col:16> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: StringLiteral 0x55759c9e9758 <luac.c:176:23> 'char [5]' lvalue "open"
"open"
   4: ImplicitCastExpr 0x55759c9e97d0 <luac.c:176:23> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9e9758 <col:23> 'char [5]' lvalue "open"
[B6.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55759c9e97e8 <luac.c:176:23> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e97d0 <col:23> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9e9758 <col:23> 'char [5]' lvalue "open"
[B6.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55759c9e97a0 <luac.c:176:16, col:29> 'void'
|-ImplicitCastExpr 0x55759c9e9788 <col:16> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9730 <col:16> 'void (const char *)' Function 0x55759c86f380 'cannot' 'void (const char *)'
`-ImplicitCastExpr 0x55759c9e97e8 <col:23> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9e97d0 <col:23> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9e9758 <col:23> 'char [5]' lvalue "open"
[B6.2]([B6.5])
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: ConditionalOperator 0x55759c9e95e8 <luac.c:175:12, col:55> 'FILE *'
|-ParenExpr 0x55759c9e9418 <col:12, col:25> 'int'
| `-BinaryOperator 0x55759c9e93f0 <col:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|   |-ImplicitCastExpr 0x55759c9e93c0 <luac.c:175:13> 'const char *' <LValueToRValue>
|   | `-DeclRefExpr 0x55759c9e9318 <col:13> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
|   `-ImplicitCastExpr 0x55759c9e93d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
|     `-ParenExpr 0x55759c9e93a0 <col:16, col:25> 'void *'
|       `-CStyleCastExpr 0x55759c9e9378 <col:17, col:24> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x55759c9e9340 <col:24> 'int' 0
|-ImplicitCastExpr 0x55759c9e95d0 </usr/include/stdio.h:142:16> 'FILE *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e9438 <col:16> 'FILE *' lvalue Var 0x55759c83e598 'stdout' 'FILE *'
`-CallExpr 0x55759c9e9550 <luac.c:175:38, col:55> 'FILE *'
  |-ImplicitCastExpr 0x55759c9e9538 <col:38> 'FILE *(*)(const char *__restrict, const char *__restrict)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9e9460 <col:38> 'FILE *(const char *__restrict, const char *__restrict)' Function 0x55759c8421d0 'fopen' 'FILE *(const char *__restrict, const char *__restrict)'
  |-ImplicitCastExpr 0x55759c9e9588 <col:44> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e9488 <col:44> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
  `-ImplicitCastExpr 0x55759c9e95b8 <col:51> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x55759c9e95a0 <col:51> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x55759c9e94b0 <col:51> 'char [3]' lvalue "wb"
([B10.6]) ? [B8.2] : [B9.8]
   2: DeclStmt 0x55759c9e9618 <luac.c:175:3, col:56>col:9
`-VarDecl 0x55759c9e92b8 <col:3, col:55> col:9 used D 'FILE *' cinit
  `-ConditionalOperator 0x55759c9e95e8 <col:12, col:55> 'FILE *'
    |-ParenExpr 0x55759c9e9418 <col:12, col:25> 'int'
    | `-BinaryOperator 0x55759c9e93f0 <col:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
    |   |-ImplicitCastExpr 0x55759c9e93c0 <luac.c:175:13> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x55759c9e9318 <col:13> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
    |   `-ImplicitCastExpr 0x55759c9e93d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
    |     `-ParenExpr 0x55759c9e93a0 <col:16, col:25> 'void *'
    |       `-CStyleCastExpr 0x55759c9e9378 <col:17, col:24> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x55759c9e9340 <col:24> 'int' 0
    |-ImplicitCastExpr 0x55759c9e95d0 </usr/include/stdio.h:142:16> 'FILE *' <LValueToRValue>
    | `-DeclRefExpr 0x55759c9e9438 <col:16> 'FILE *' lvalue Var 0x55759c83e598 'stdout' 'FILE *'
    `-CallExpr 0x55759c9e9550 <luac.c:175:38, col:55> 'FILE *'
      |-ImplicitCastExpr 0x55759c9e9538 <col:38> 'FILE *(*)(const char *__restrict, const char *__restrict)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55759c9e9460 <col:38> 'FILE *(const char *__restrict, const char *__restrict)' Function 0x55759c8421d0 'fopen' 'FILE *(const char *__restrict, const char *__restrict)'
      |-ImplicitCastExpr 0x55759c9e9588 <col:44> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55759c9e9488 <col:44> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
      `-ImplicitCastExpr 0x55759c9e95b8 <col:51> 'const char *' <BitCast>
        `-ImplicitCastExpr 0x55759c9e95a0 <col:51> 'char *' <ArrayToPointerDecay>
          `-StringLiteral 0x55759c9e94b0 <col:51> 'char [3]' lvalue "wb"
FILE *D = (output == ((void *)0)) ? stdout : fopen(output, "wb");
   3: DeclRefExpr 0x55759c9e9630 <luac.c:176:7> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
D
   4: ImplicitCastExpr 0x55759c9e96d8 <luac.c:176:7> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9630 <col:7> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
[B7.3] (ImplicitCastExpr, LValueToRValue, FILE *)
   5: IntegerLiteral 0x55759c9e9658 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x55759c9e9690 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9e9658 <col:24> 'int' 0
(void *)[B7.5] (CStyleCastExpr, NullToPointer, void *)
   7: ImplicitCastExpr 0x55759c9e96f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'FILE *' <BitCast>
`-ParenExpr 0x55759c9e96b8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55759c9e9690 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55759c9e9658 <col:24> 'int' 0
([B7.6]) (ImplicitCastExpr, BitCast, FILE *)
   8: BinaryOperator 0x55759c9e9708 <luac.c:176:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55759c9e96d8 <luac.c:176:7> 'FILE *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e9630 <col:7> 'FILE *' lvalue Var 0x55759c9e92b8 'D' 'FILE *'
`-ImplicitCastExpr 0x55759c9e96f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'FILE *' <BitCast>
  `-ParenExpr 0x55759c9e96b8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55759c9e9690 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55759c9e9658 <col:24> 'int' 0
[B7.4] == [B7.7]
   T: if [B7.8]
   Preds (2): B8 B9
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x55759c9e9438 </usr/include/stdio.h:142:16> 'FILE *' lvalue Var 0x55759c83e598 'stdout' 'FILE *'
stdout
   2: ImplicitCastExpr 0x55759c9e95d0 </usr/include/stdio.h:142:16> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9438 <col:16> 'FILE *' lvalue Var 0x55759c83e598 'stdout' 'FILE *'
[B8.1] (ImplicitCastExpr, LValueToRValue, FILE *)
   Preds (1): B10
   Succs (1): B7

 [B9]
   1: DeclRefExpr 0x55759c9e9460 <luac.c:175:38> 'FILE *(const char *__restrict, const char *__restrict)' Function 0x55759c8421d0 'fopen' 'FILE *(const char *__restrict, const char *__restrict)'
fopen
   2: ImplicitCastExpr 0x55759c9e9538 <luac.c:175:38> 'FILE *(*)(const char *__restrict, const char *__restrict)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9460 <col:38> 'FILE *(const char *__restrict, const char *__restrict)' Function 0x55759c8421d0 'fopen' 'FILE *(const char *__restrict, const char *__restrict)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, FILE *(*)(const char *__restrict, const char *__restrict))
   3: DeclRefExpr 0x55759c9e9488 <luac.c:175:44> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
output
   4: ImplicitCastExpr 0x55759c9e9588 <luac.c:175:44> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9488 <col:44> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
[B9.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x55759c9e94b0 <luac.c:175:51> 'char [3]' lvalue "wb"
"wb"
   6: ImplicitCastExpr 0x55759c9e95a0 <luac.c:175:51> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9e94b0 <col:51> 'char [3]' lvalue "wb"
[B9.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55759c9e95b8 <luac.c:175:51> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e95a0 <col:51> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9e94b0 <col:51> 'char [3]' lvalue "wb"
[B9.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x55759c9e9550 <luac.c:175:38, col:55> 'FILE *'
|-ImplicitCastExpr 0x55759c9e9538 <col:38> 'FILE *(*)(const char *__restrict, const char *__restrict)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9460 <col:38> 'FILE *(const char *__restrict, const char *__restrict)' Function 0x55759c8421d0 'fopen' 'FILE *(const char *__restrict, const char *__restrict)'
|-ImplicitCastExpr 0x55759c9e9588 <col:44> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e9488 <col:44> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
`-ImplicitCastExpr 0x55759c9e95b8 <col:51> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9e95a0 <col:51> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9e94b0 <col:51> 'char [3]' lvalue "wb"
[B9.2]([B9.4], [B9.7])
   Preds (1): B10
   Succs (1): B7

 [B10]
   1: DeclRefExpr 0x55759c9e9318 <luac.c:175:13> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
output
   2: ImplicitCastExpr 0x55759c9e93c0 <luac.c:175:13> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9318 <col:13> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
[B10.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x55759c9e9340 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x55759c9e9378 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9e9340 <col:24> 'int' 0
(void *)[B10.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x55759c9e93d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x55759c9e93a0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55759c9e9378 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55759c9e9340 <col:24> 'int' 0
([B10.4]) (ImplicitCastExpr, BitCast, const char *)
   6: BinaryOperator 0x55759c9e93f0 <luac.c:175:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55759c9e93c0 <luac.c:175:13> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e9318 <col:13> 'const char *' lvalue Var 0x55759c86ece8 'output' 'const char *'
`-ImplicitCastExpr 0x55759c9e93d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x55759c9e93a0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55759c9e9378 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55759c9e9340 <col:24> 'int' 0
[B10.2] == [B10.5]
   T: ([B10.6]) ? ... : ...
   Preds (1): B11
   Succs (2): B8 B9

 [B11]
   1: DeclRefExpr 0x55759c9e9268 <luac.c:173:6> 'int' lvalue Var 0x55759c86ea08 'dumping' 'int'
dumping
   2: ImplicitCastExpr 0x55759c9e9290 <luac.c:173:6> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9268 <col:6> 'int' lvalue Var 0x55759c86ea08 'dumping' 'int'
[B11.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B11.2]
   Preds (2): B12 B13
   Succs (2): B10 B1

 [B12]
   1: DeclRefExpr 0x55759c9e9090 <luac.c:172:15> 'void (const Proto *, int)' Function 0x55759c86e860 'luaU_print' 'void (const Proto *, int)'
luaU_print
   2: ImplicitCastExpr 0x55759c9e91c8 <luac.c:172:15> 'void (*)(const Proto *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e9090 <col:15> 'void (const Proto *, int)' Function 0x55759c86e860 'luaU_print' 'void (const Proto *, int)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const Proto *, int))
   3: DeclRefExpr 0x55759c9e90b8 <luac.c:172:26> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
f
   4: ImplicitCastExpr 0x55759c9e9218 <luac.c:172:26> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e90b8 <col:26> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
[B12.3] (ImplicitCastExpr, LValueToRValue, const Proto *)
   5: DeclRefExpr 0x55759c9e90e0 <luac.c:172:28> 'int' lvalue Var 0x55759c86e970 'listing' 'int'
listing
   6: ImplicitCastExpr 0x55759c9e9128 <luac.c:172:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e90e0 <col:28> 'int' lvalue Var 0x55759c86e970 'listing' 'int'
[B12.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x55759c9e9108 <luac.c:172:36> 'int' 1
1
   8: BinaryOperator 0x55759c9e9140 <luac.c:172:28, col:36> 'int' '>'
|-ImplicitCastExpr 0x55759c9e9128 <col:28> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e90e0 <col:28> 'int' lvalue Var 0x55759c86e970 'listing' 'int'
`-IntegerLiteral 0x55759c9e9108 <col:36> 'int' 1
[B12.6] > [B12.7]
   9: CallExpr 0x55759c9e91e0 <luac.c:172:15, col:37> 'void'
|-ImplicitCastExpr 0x55759c9e91c8 <col:15> 'void (*)(const Proto *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e9090 <col:15> 'void (const Proto *, int)' Function 0x55759c86e860 'luaU_print' 'void (const Proto *, int)'
|-ImplicitCastExpr 0x55759c9e9218 <col:26> 'const Proto *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e90b8 <col:26> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
`-BinaryOperator 0x55759c9e9140 <col:28, col:36> 'int' '>'
  |-ImplicitCastExpr 0x55759c9e9128 <col:28> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e90e0 <col:28> 'int' lvalue Var 0x55759c86e970 'listing' 'int'
  `-IntegerLiteral 0x55759c9e9108 <col:36> 'int' 1
[B12.2]([B12.4], [B12.8])
   Preds (1): B13
   Succs (1): B11

 [B13]
   1: DeclRefExpr 0x55759c9e8ed0 <luac.c:171:4> 'const Proto *(lua_State *, int)' Function 0x55759c9dde70 'combine' 'const Proto *(lua_State *, int)'
combine
   2: ImplicitCastExpr 0x55759c9e8fa8 <luac.c:171:4> 'const Proto *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e8ed0 <col:4> 'const Proto *(lua_State *, int)' Function 0x55759c9dde70 'combine' 'const Proto *(lua_State *, int)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, const Proto *(*)(lua_State *, int))
   3: DeclRefExpr 0x55759c9e8ef8 <luac.c:171:12> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9e8ff8 <luac.c:171:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8ef8 <col:12> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
[B13.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55759c9e8f20 <luac.c:171:14> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
argc
   6: ImplicitCastExpr 0x55759c9e9010 <luac.c:171:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8f20 <col:14> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
[B13.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x55759c9e8fc0 <luac.c:171:4, col:18> 'const Proto *'
|-ImplicitCastExpr 0x55759c9e8fa8 <col:4> 'const Proto *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e8ed0 <col:4> 'const Proto *(lua_State *, int)' Function 0x55759c9dde70 'combine' 'const Proto *(lua_State *, int)'
|-ImplicitCastExpr 0x55759c9e8ff8 <col:12> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e8ef8 <col:12> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
`-ImplicitCastExpr 0x55759c9e9010 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e8f20 <col:14> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
[B13.2]([B13.4], [B13.6])
   8: DeclRefExpr 0x55759c9e8ea8 <luac.c:171:2> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
f
   9: BinaryOperator 0x55759c9e9028 <luac.c:171:2, col:18> 'const Proto *' '='
|-DeclRefExpr 0x55759c9e8ea8 <col:2> 'const Proto *' lvalue Var 0x55759c9e8038 'f' 'const Proto *'
`-CallExpr 0x55759c9e8fc0 <col:4, col:18> 'const Proto *'
  |-ImplicitCastExpr 0x55759c9e8fa8 <col:4> 'const Proto *(*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9e8ed0 <col:4> 'const Proto *(lua_State *, int)' Function 0x55759c9dde70 'combine' 'const Proto *(lua_State *, int)'
  |-ImplicitCastExpr 0x55759c9e8ff8 <col:12> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e8ef8 <col:12> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
  `-ImplicitCastExpr 0x55759c9e9010 <col:14> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e8f20 <col:14> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
[B13.8] = [B13.7]
  10: DeclRefExpr 0x55759c9e9050 <luac.c:172:6> 'int' lvalue Var 0x55759c86e970 'listing' 'int'
listing
  11: ImplicitCastExpr 0x55759c9e9078 <luac.c:172:6> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e9050 <col:6> 'int' lvalue Var 0x55759c86e970 'listing' 'int'
[B13.10] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B13.11]
   Preds (1): B20
   Succs (2): B12 B11

 [B14]
   1: DeclRefExpr 0x55759c9e8520 <luac.c:166:20> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
i
   2: UnaryOperator 0x55759c9e8548 <luac.c:166:20, col:21> 'int' postfix '++'
`-DeclRefExpr 0x55759c9e8520 <col:20> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B14.1]++
   Preds (2): B15 B16
   Succs (1): B20

 [B15]
   1: DeclRefExpr 0x55759c9e8b90 <luac.c:169:37> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
fatal
   2: ImplicitCastExpr 0x55759c9e8dd0 <luac.c:169:37> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e8b90 <col:37> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
[B15.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: DeclRefExpr 0x55759c9e8bb8 <./lua.h:279:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
lua_tolstring
   4: ImplicitCastExpr 0x55759c9e8d48 <./lua.h:279:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e8bb8 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B15.3] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   5: DeclRefExpr 0x55759c9e8be0 <luac.c:169:56> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55759c9e8da0 <luac.c:169:56> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8be0 <col:56> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
[B15.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x55759c9e8c08 <luac.c:169:59> 'int' 1
1
   8: UnaryOperator 0x55759c9e8c28 <luac.c:169:58, col:59> 'int' prefix '-'
`-IntegerLiteral 0x55759c9e8c08 <col:59> 'int' 1
-[B15.7]
   9: IntegerLiteral 0x55759c9e8c68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  10: CStyleCastExpr 0x55759c9e8ca0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9e8c68 <col:24> 'int' 0
(void *)[B15.9] (CStyleCastExpr, NullToPointer, void *)
  11: ImplicitCastExpr 0x55759c9e8db8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x55759c9e8cc8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55759c9e8ca0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55759c9e8c68 <col:24> 'int' 0
([B15.10]) (ImplicitCastExpr, NullToPointer, size_t *)
  12: CallExpr 0x55759c9e8d60 <./lua.h:279:27, col:53> 'const char *'
|-ImplicitCastExpr 0x55759c9e8d48 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e8bb8 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55759c9e8da0 <luac.c:169:56> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e8be0 <col:56> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
|-ParenExpr 0x55759c9e8c48 <./lua.h:279:44, col:46> 'int'
| `-UnaryOperator 0x55759c9e8c28 <luac.c:169:58, col:59> 'int' prefix '-'
|   `-IntegerLiteral 0x55759c9e8c08 <col:59> 'int' 1
`-ImplicitCastExpr 0x55759c9e8db8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x55759c9e8cc8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55759c9e8ca0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55759c9e8c68 <col:24> 'int' 0
[B15.4]([B15.6], ([B15.8]), [B15.11])
  13: CallExpr 0x55759c9e8de8 <luac.c:169:37, col:61> 'void'
|-ImplicitCastExpr 0x55759c9e8dd0 <col:37> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e8b90 <col:37> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
`-CallExpr 0x55759c9e8d60 <./lua.h:279:27, col:53> 'const char *'
  |-ImplicitCastExpr 0x55759c9e8d48 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9e8bb8 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
  |-ImplicitCastExpr 0x55759c9e8da0 <luac.c:169:56> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e8be0 <col:56> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
  |-ParenExpr 0x55759c9e8c48 <./lua.h:279:44, col:46> 'int'
  | `-UnaryOperator 0x55759c9e8c28 <luac.c:169:58, col:59> 'int' prefix '-'
  |   `-IntegerLiteral 0x55759c9e8c08 <col:59> 'int' 1
  `-ImplicitCastExpr 0x55759c9e8db8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
    `-ParenExpr 0x55759c9e8cc8 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x55759c9e8ca0 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x55759c9e8c68 <col:24> 'int' 0
[B15.2]([B15.12])
   Preds (1): B16
   Succs (1): B14

 [B16]
   1: ConditionalOperator 0x55759c9e8990 <luac.c:68:15, line:168:47> 'char *'
|-ParenExpr 0x55759c9e8818 <line:68:15, col:36> 'int'
| `-BinaryOperator 0x55759c9e87f0 <col:16, col:35> 'int' '=='
|   |-CallExpr 0x55759c9e8728 <col:16, col:32> 'int'
|   | |-ImplicitCastExpr 0x55759c9e8710 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55759c9e85e0 <col:16> 'int (const char *, const char *)' Function 0x55759c8c3698 'strcmp' 'int (const char *, const char *)'
|   | |-ImplicitCastExpr 0x55759c9e8778 <col:23, col:29> 'const char *' <BitCast>
|   | | `-ImplicitCastExpr 0x55759c9e8760 <col:23, col:29> 'char *' <LValueToRValue>
|   | |   `-ArraySubscriptExpr 0x55759c9e8688 <col:23, col:29> 'char *' lvalue
|   | |     |-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
|   | |     `-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
|   | `-ImplicitCastExpr 0x55759c9e87b8 <line:168:27> 'const char *' <BitCast>
|   |   `-ImplicitCastExpr 0x55759c9e87a0 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x55759c9e86b0 <col:27> 'char [2]' lvalue "-"
|   `-IntegerLiteral 0x55759c9e87d0 <line:68:35> 'int' 0
|-ImplicitCastExpr 0x55759c9e8978 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
| `-ParenExpr 0x55759c9e8898 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x55759c9e8870 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55759c9e8838 <col:24> 'int' 0
`-ImplicitCastExpr 0x55759c9e8960 <luac.c:168:41, col:47> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55759c9e8938 <col:41, col:47> 'char *' lvalue
    |-ImplicitCastExpr 0x55759c9e8908 <col:41> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55759c9e88b8 <col:41> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
    `-ImplicitCastExpr 0x55759c9e8920 <col:46> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55759c9e88e0 <col:46> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
([B19.15]) ? [B17.3] : [B18.6]
   2: ImplicitCastExpr 0x55759c9e89c0 <luac.c:68:15, line:168:47> 'const char *' <BitCast>
`-ConditionalOperator 0x55759c9e8990 <line:68:15, line:168:47> 'char *'
  |-ParenExpr 0x55759c9e8818 <line:68:15, col:36> 'int'
  | `-BinaryOperator 0x55759c9e87f0 <col:16, col:35> 'int' '=='
  |   |-CallExpr 0x55759c9e8728 <col:16, col:32> 'int'
  |   | |-ImplicitCastExpr 0x55759c9e8710 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
  |   | | `-DeclRefExpr 0x55759c9e85e0 <col:16> 'int (const char *, const char *)' Function 0x55759c8c3698 'strcmp' 'int (const char *, const char *)'
  |   | |-ImplicitCastExpr 0x55759c9e8778 <col:23, col:29> 'const char *' <BitCast>
  |   | | `-ImplicitCastExpr 0x55759c9e8760 <col:23, col:29> 'char *' <LValueToRValue>
  |   | |   `-ArraySubscriptExpr 0x55759c9e8688 <col:23, col:29> 'char *' lvalue
  |   | |     |-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
  |   | |     | `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
  |   | |     `-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
  |   | |       `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
  |   | `-ImplicitCastExpr 0x55759c9e87b8 <line:168:27> 'const char *' <BitCast>
  |   |   `-ImplicitCastExpr 0x55759c9e87a0 <col:27> 'char *' <ArrayToPointerDecay>
  |   |     `-StringLiteral 0x55759c9e86b0 <col:27> 'char [2]' lvalue "-"
  |   `-IntegerLiteral 0x55759c9e87d0 <line:68:35> 'int' 0
  |-ImplicitCastExpr 0x55759c9e8978 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
  | `-ParenExpr 0x55759c9e8898 <col:16, col:25> 'void *'
  |   `-CStyleCastExpr 0x55759c9e8870 <col:17, col:24> 'void *' <NullToPointer>
  |     `-IntegerLiteral 0x55759c9e8838 <col:24> 'int' 0
  `-ImplicitCastExpr 0x55759c9e8960 <luac.c:168:41, col:47> 'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55759c9e8938 <col:41, col:47> 'char *' lvalue
      |-ImplicitCastExpr 0x55759c9e8908 <col:41> 'char **' <LValueToRValue>
      | `-DeclRefExpr 0x55759c9e88b8 <col:41> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
      `-ImplicitCastExpr 0x55759c9e8920 <col:46> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55759c9e88e0 <col:46> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B16.1] (ImplicitCastExpr, BitCast, const char *)
   3: DeclStmt 0x55759c9e89d8 <luac.c:168:3, col:48>col:15
`-VarDecl 0x55759c9e8580 <col:3, col:47> col:15 used filename 'const char *' cinit
  `-ImplicitCastExpr 0x55759c9e89c0 <line:68:15, line:168:47> 'const char *' <BitCast>
    `-ConditionalOperator 0x55759c9e8990 <line:68:15, line:168:47> 'char *'
      |-ParenExpr 0x55759c9e8818 <line:68:15, col:36> 'int'
      | `-BinaryOperator 0x55759c9e87f0 <col:16, col:35> 'int' '=='
      |   |-CallExpr 0x55759c9e8728 <col:16, col:32> 'int'
      |   | |-ImplicitCastExpr 0x55759c9e8710 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
      |   | | `-DeclRefExpr 0x55759c9e85e0 <col:16> 'int (const char *, const char *)' Function 0x55759c8c3698 'strcmp' 'int (const char *, const char *)'
      |   | |-ImplicitCastExpr 0x55759c9e8778 <col:23, col:29> 'const char *' <BitCast>
      |   | | `-ImplicitCastExpr 0x55759c9e8760 <col:23, col:29> 'char *' <LValueToRValue>
      |   | |   `-ArraySubscriptExpr 0x55759c9e8688 <col:23, col:29> 'char *' lvalue
      |   | |     |-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
      |   | |     | `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
      |   | |     `-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
      |   | |       `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
      |   | `-ImplicitCastExpr 0x55759c9e87b8 <line:168:27> 'const char *' <BitCast>
      |   |   `-ImplicitCastExpr 0x55759c9e87a0 <col:27> 'char *' <ArrayToPointerDecay>
      |   |     `-StringLiteral 0x55759c9e86b0 <col:27> 'char [2]' lvalue "-"
      |   `-IntegerLiteral 0x55759c9e87d0 <line:68:35> 'int' 0
      |-ImplicitCastExpr 0x55759c9e8978 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
      | `-ParenExpr 0x55759c9e8898 <col:16, col:25> 'void *'
      |   `-CStyleCastExpr 0x55759c9e8870 <col:17, col:24> 'void *' <NullToPointer>
      |     `-IntegerLiteral 0x55759c9e8838 <col:24> 'int' 0
      `-ImplicitCastExpr 0x55759c9e8960 <luac.c:168:41, col:47> 'char *' <LValueToRValue>
        `-ArraySubscriptExpr 0x55759c9e8938 <col:41, col:47> 'char *' lvalue
          |-ImplicitCastExpr 0x55759c9e8908 <col:41> 'char **' <LValueToRValue>
          | `-DeclRefExpr 0x55759c9e88b8 <col:41> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
          `-ImplicitCastExpr 0x55759c9e8920 <col:46> 'int' <LValueToRValue>
            `-DeclRefExpr 0x55759c9e88e0 <col:46> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
const char *filename = (strcmp(argv[i], "-") == 0) ? ((void *)0) : argv[i];
   4: DeclRefExpr 0x55759c9e89f0 <luac.c:169:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55759c974910 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
luaL_loadfile
   5: ImplicitCastExpr 0x55759c9e8ac8 <luac.c:169:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e89f0 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55759c974910 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
[B16.4] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *))
   6: DeclRefExpr 0x55759c9e8a18 <luac.c:169:21> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55759c9e8b18 <luac.c:169:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8a18 <col:21> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
[B16.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: DeclRefExpr 0x55759c9e8a40 <luac.c:169:23> 'const char *' lvalue Var 0x55759c9e8580 'filename' 'const char *'
filename
   9: ImplicitCastExpr 0x55759c9e8b30 <luac.c:169:23> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8a40 <col:23> 'const char *' lvalue Var 0x55759c9e8580 'filename' 'const char *'
[B16.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: CallExpr 0x55759c9e8ae0 <luac.c:169:7, col:31> 'int'
|-ImplicitCastExpr 0x55759c9e8ac8 <col:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e89f0 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55759c974910 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
|-ImplicitCastExpr 0x55759c9e8b18 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e8a18 <col:21> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
`-ImplicitCastExpr 0x55759c9e8b30 <col:23> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e8a40 <col:23> 'const char *' lvalue Var 0x55759c9e8580 'filename' 'const char *'
[B16.5]([B16.7], [B16.9])
  11: IntegerLiteral 0x55759c9e8b48 <luac.c:169:34> 'int' 0
0
  12: BinaryOperator 0x55759c9e8b68 <luac.c:169:7, col:34> 'int' '!='
|-CallExpr 0x55759c9e8ae0 <col:7, col:31> 'int'
| |-ImplicitCastExpr 0x55759c9e8ac8 <col:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55759c9e89f0 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x55759c974910 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
| |-ImplicitCastExpr 0x55759c9e8b18 <col:21> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55759c9e8a18 <col:21> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
| `-ImplicitCastExpr 0x55759c9e8b30 <col:23> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55759c9e8a40 <col:23> 'const char *' lvalue Var 0x55759c9e8580 'filename' 'const char *'
`-IntegerLiteral 0x55759c9e8b48 <col:34> 'int' 0
[B16.10] != [B16.11]
   T: if [B16.12]
   Preds (2): B17 B18
   Succs (2): B15 B14

 [B17]
   1: IntegerLiteral 0x55759c9e8838 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55759c9e8870 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9e8838 <col:24> 'int' 0
(void *)[B17.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55759c9e8978 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
`-ParenExpr 0x55759c9e8898 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55759c9e8870 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55759c9e8838 <col:24> 'int' 0
([B17.2]) (ImplicitCastExpr, NullToPointer, char *)
   Preds (1): B19
   Succs (1): B16

 [B18]
   1: DeclRefExpr 0x55759c9e88b8 <luac.c:168:41> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
argv
   2: ImplicitCastExpr 0x55759c9e8908 <luac.c:168:41> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55759c9e88b8 <col:41> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
[B18.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: DeclRefExpr 0x55759c9e88e0 <luac.c:168:46> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
i
   4: ImplicitCastExpr 0x55759c9e8920 <luac.c:168:46> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e88e0 <col:46> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B18.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x55759c9e8938 <luac.c:168:41, col:47> 'char *' lvalue
|-ImplicitCastExpr 0x55759c9e8908 <col:41> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e88b8 <col:41> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
`-ImplicitCastExpr 0x55759c9e8920 <col:46> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e88e0 <col:46> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B18.2][[B18.4]]
   6: ImplicitCastExpr 0x55759c9e8960 <luac.c:168:41, col:47> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55759c9e8938 <col:41, col:47> 'char *' lvalue
  |-ImplicitCastExpr 0x55759c9e8908 <col:41> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e88b8 <col:41> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
  `-ImplicitCastExpr 0x55759c9e8920 <col:46> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e88e0 <col:46> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B18.5] (ImplicitCastExpr, LValueToRValue, char *)
   Preds (1): B19
   Succs (1): B16

 [B19]
   1: DeclRefExpr 0x55759c9e85e0 <luac.c:68:16> 'int (const char *, const char *)' Function 0x55759c8c3698 'strcmp' 'int (const char *, const char *)'
strcmp
   2: ImplicitCastExpr 0x55759c9e8710 <luac.c:68:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e85e0 <col:16> 'int (const char *, const char *)' Function 0x55759c8c3698 'strcmp' 'int (const char *, const char *)'
[B19.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *))
   3: DeclRefExpr 0x55759c9e8608 <luac.c:68:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
argv
   4: ImplicitCastExpr 0x55759c9e8658 <luac.c:68:23> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
[B19.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: DeclRefExpr 0x55759c9e8630 <luac.c:68:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
i
   6: ImplicitCastExpr 0x55759c9e8670 <luac.c:68:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B19.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55759c9e8688 <luac.c:68:23, col:29> 'char *' lvalue
|-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
`-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B19.4][[B19.6]]
   8: ImplicitCastExpr 0x55759c9e8760 <luac.c:68:23, col:29> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55759c9e8688 <col:23, col:29> 'char *' lvalue
  |-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
  `-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B19.7] (ImplicitCastExpr, LValueToRValue, char *)
   9: ImplicitCastExpr 0x55759c9e8778 <luac.c:68:23, col:29> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e8760 <col:23, col:29> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55759c9e8688 <col:23, col:29> 'char *' lvalue
    |-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
    `-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B19.8] (ImplicitCastExpr, BitCast, const char *)
  10: StringLiteral 0x55759c9e86b0 <luac.c:168:27> 'char [2]' lvalue "-"
"-"
  11: ImplicitCastExpr 0x55759c9e87a0 <luac.c:168:27> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9e86b0 <col:27> 'char [2]' lvalue "-"
[B19.10] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  12: ImplicitCastExpr 0x55759c9e87b8 <luac.c:168:27> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e87a0 <col:27> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9e86b0 <col:27> 'char [2]' lvalue "-"
[B19.11] (ImplicitCastExpr, BitCast, const char *)
  13: CallExpr 0x55759c9e8728 <luac.c:68:16, col:32> 'int'
|-ImplicitCastExpr 0x55759c9e8710 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e85e0 <col:16> 'int (const char *, const char *)' Function 0x55759c8c3698 'strcmp' 'int (const char *, const char *)'
|-ImplicitCastExpr 0x55759c9e8778 <col:23, col:29> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55759c9e8760 <col:23, col:29> 'char *' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55759c9e8688 <col:23, col:29> 'char *' lvalue
|     |-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
|     | `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
|     `-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
`-ImplicitCastExpr 0x55759c9e87b8 <line:168:27> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9e87a0 <col:27> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9e86b0 <col:27> 'char [2]' lvalue "-"
[B19.2]([B19.9], [B19.12])
  14: IntegerLiteral 0x55759c9e87d0 <luac.c:68:35> 'int' 0
0
  15: BinaryOperator 0x55759c9e87f0 <luac.c:68:16, col:35> 'int' '=='
|-CallExpr 0x55759c9e8728 <col:16, col:32> 'int'
| |-ImplicitCastExpr 0x55759c9e8710 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55759c9e85e0 <col:16> 'int (const char *, const char *)' Function 0x55759c8c3698 'strcmp' 'int (const char *, const char *)'
| |-ImplicitCastExpr 0x55759c9e8778 <col:23, col:29> 'const char *' <BitCast>
| | `-ImplicitCastExpr 0x55759c9e8760 <col:23, col:29> 'char *' <LValueToRValue>
| |   `-ArraySubscriptExpr 0x55759c9e8688 <col:23, col:29> 'char *' lvalue
| |     |-ImplicitCastExpr 0x55759c9e8658 <col:23> 'char **' <LValueToRValue>
| |     | `-DeclRefExpr 0x55759c9e8608 <col:23> 'char **' lvalue Var 0x55759c9e7f20 'argv' 'char **'
| |     `-ImplicitCastExpr 0x55759c9e8670 <col:28> 'int' <LValueToRValue>
| |       `-DeclRefExpr 0x55759c9e8630 <col:28> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
| `-ImplicitCastExpr 0x55759c9e87b8 <line:168:27> 'const char *' <BitCast>
|   `-ImplicitCastExpr 0x55759c9e87a0 <col:27> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x55759c9e86b0 <col:27> 'char [2]' lvalue "-"
`-IntegerLiteral 0x55759c9e87d0 <line:68:35> 'int' 0
[B19.13] == [B19.14]
   T: ([B19.15]) ? ... : ...
   Preds (1): B20
   Succs (2): B17 B18

 [B20]
   1: DeclRefExpr 0x55759c9e8478 <luac.c:166:12> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
i
   2: ImplicitCastExpr 0x55759c9e84c8 <luac.c:166:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8478 <col:12> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
[B20.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55759c9e84a0 <luac.c:166:14> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
argc
   4: ImplicitCastExpr 0x55759c9e84e0 <luac.c:166:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e84a0 <col:14> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
[B20.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55759c9e84f8 <luac.c:166:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x55759c9e84c8 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e8478 <col:12> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
`-ImplicitCastExpr 0x55759c9e84e0 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e84a0 <col:14> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
[B20.2] < [B20.4]
   T: for (...; [B20.5]; ...)
   Preds (2): B14 B21
   Succs (2): B19 B13

 [B21]
   1: IntegerLiteral 0x55759c9e8430 <luac.c:166:9> 'int' 0
0
   2: DeclRefExpr 0x55759c9e8408 <luac.c:166:7> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
i
   3: BinaryOperator 0x55759c9e8450 <luac.c:166:7, col:9> 'int' '='
|-DeclRefExpr 0x55759c9e8408 <col:7> 'int' lvalue Var 0x55759c9e80c8 'i' 'int'
`-IntegerLiteral 0x55759c9e8430 <col:9> 'int' 0
[B21.2] = [B21.1]
   Preds (2): B22 B23
   Succs (1): B20

 [B22]
   1: DeclRefExpr 0x55759c9e82b8 <luac.c:165:31> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
fatal
   2: ImplicitCastExpr 0x55759c9e8358 <luac.c:165:31> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e82b8 <col:31> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
[B22.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: StringLiteral 0x55759c9e8318 <luac.c:165:37> 'char [21]' lvalue "too many input files"
"too many input files"
   4: ImplicitCastExpr 0x55759c9e83a0 <luac.c:165:37> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9e8318 <col:37> 'char [21]' lvalue "too many input files"
[B22.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55759c9e83b8 <luac.c:165:37> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9e83a0 <col:37> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9e8318 <col:37> 'char [21]' lvalue "too many input files"
[B22.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55759c9e8370 <luac.c:165:31, col:59> 'void'
|-ImplicitCastExpr 0x55759c9e8358 <col:31> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e82b8 <col:31> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
`-ImplicitCastExpr 0x55759c9e83b8 <col:37> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9e83a0 <col:37> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9e8318 <col:37> 'char [21]' lvalue "too many input files"
[B22.2]([B22.5])
   Preds (1): B23
   Succs (1): B21

 [B23]
   1: DeclRefExpr 0x55759c9e7c50 <luac.c:160:35> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55759c95dfe8 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
lua_touserdata
   2: ImplicitCastExpr 0x55759c9e7d18 <luac.c:160:35> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e7c50 <col:35> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55759c95dfe8 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
[B23.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, int))
   3: DeclRefExpr 0x55759c9e7c78 <luac.c:160:50> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9e7d68 <luac.c:160:50> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e7c78 <col:50> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
[B23.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55759c9e7ca0 <luac.c:160:53> 'int' 1
1
   6: CallExpr 0x55759c9e7d30 <luac.c:160:35, col:54> 'void *'
|-ImplicitCastExpr 0x55759c9e7d18 <col:35> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e7c50 <col:35> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55759c95dfe8 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
|-ImplicitCastExpr 0x55759c9e7d68 <col:50> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e7c78 <col:50> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
`-IntegerLiteral 0x55759c9e7ca0 <col:53> 'int' 1
[B23.2]([B23.4], [B23.5])
   7: CStyleCastExpr 0x55759c9e7da8 <luac.c:160:20, col:54> 'struct Smain *' <BitCast>
`-CallExpr 0x55759c9e7d30 <col:35, col:54> 'void *'
  |-ImplicitCastExpr 0x55759c9e7d18 <col:35> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9e7c50 <col:35> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55759c95dfe8 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
  |-ImplicitCastExpr 0x55759c9e7d68 <col:50> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e7c78 <col:50> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
  `-IntegerLiteral 0x55759c9e7ca0 <col:53> 'int' 1
(struct Smain *)[B23.6] (CStyleCastExpr, BitCast, struct Smain *)
   8: DeclStmt 0x55759c9e7dd0 <luac.c:160:2, col:55>col:16
`-VarDecl 0x55759c9e7bf0 <col:2, col:54> col:16 used s 'struct Smain *' cinit
  `-CStyleCastExpr 0x55759c9e7da8 <col:20, col:54> 'struct Smain *' <BitCast>
    `-CallExpr 0x55759c9e7d30 <col:35, col:54> 'void *'
      |-ImplicitCastExpr 0x55759c9e7d18 <col:35> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55759c9e7c50 <col:35> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55759c95dfe8 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
      |-ImplicitCastExpr 0x55759c9e7d68 <col:50> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x55759c9e7c78 <col:50> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
      `-IntegerLiteral 0x55759c9e7ca0 <col:53> 'int' 1
struct Smain *s = (struct Smain *)lua_touserdata(L, 1);
   9: DeclRefExpr 0x55759c9e7e60 <luac.c:161:11> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
s
  10: ImplicitCastExpr 0x55759c9e7e88 <luac.c:161:11> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e7e60 <col:11> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
[B23.9] (ImplicitCastExpr, LValueToRValue, struct Smain *)
  11: MemberExpr 0x55759c9e7ea0 <luac.c:161:11, col:14> 'int' lvalue ->argc 0x55759c9e7948
`-ImplicitCastExpr 0x55759c9e7e88 <col:11> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e7e60 <col:11> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
[B23.10]->argc
  12: ImplicitCastExpr 0x55759c9e7ed8 <luac.c:161:11, col:14> 'int' <LValueToRValue>
`-MemberExpr 0x55759c9e7ea0 <col:11, col:14> 'int' lvalue ->argc 0x55759c9e7948
  `-ImplicitCastExpr 0x55759c9e7e88 <col:11> 'struct Smain *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e7e60 <col:11> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
[B23.11] (ImplicitCastExpr, LValueToRValue, int)
  13: DeclStmt 0x55759c9e7ef0 <luac.c:161:2, col:18>col:6
`-VarDecl 0x55759c9e7e00 <col:2, col:14> col:6 used argc 'int' cinit
  `-ImplicitCastExpr 0x55759c9e7ed8 <col:11, col:14> 'int' <LValueToRValue>
    `-MemberExpr 0x55759c9e7ea0 <col:11, col:14> 'int' lvalue ->argc 0x55759c9e7948
      `-ImplicitCastExpr 0x55759c9e7e88 <col:11> 'struct Smain *' <LValueToRValue>
        `-DeclRefExpr 0x55759c9e7e60 <col:11> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
int argc = s->argc;
  14: DeclRefExpr 0x55759c9e7f80 <luac.c:162:14> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
s
  15: ImplicitCastExpr 0x55759c9e7fa8 <luac.c:162:14> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e7f80 <col:14> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
[B23.14] (ImplicitCastExpr, LValueToRValue, struct Smain *)
  16: MemberExpr 0x55759c9e7fc0 <luac.c:162:14, col:17> 'char **' lvalue ->argv 0x55759c9e79a8
`-ImplicitCastExpr 0x55759c9e7fa8 <col:14> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e7f80 <col:14> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
[B23.15]->argv
  17: ImplicitCastExpr 0x55759c9e7ff8 <luac.c:162:14, col:17> 'char **' <LValueToRValue>
`-MemberExpr 0x55759c9e7fc0 <col:14, col:17> 'char **' lvalue ->argv 0x55759c9e79a8
  `-ImplicitCastExpr 0x55759c9e7fa8 <col:14> 'struct Smain *' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e7f80 <col:14> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
[B23.16] (ImplicitCastExpr, LValueToRValue, char **)
  18: DeclStmt 0x55759c9e8010 <luac.c:162:2, col:21>col:9
`-VarDecl 0x55759c9e7f20 <col:2, col:17> col:9 used argv 'char **' cinit
  `-ImplicitCastExpr 0x55759c9e7ff8 <col:14, col:17> 'char **' <LValueToRValue>
    `-MemberExpr 0x55759c9e7fc0 <col:14, col:17> 'char **' lvalue ->argv 0x55759c9e79a8
      `-ImplicitCastExpr 0x55759c9e7fa8 <col:14> 'struct Smain *' <LValueToRValue>
        `-DeclRefExpr 0x55759c9e7f80 <col:14> 'struct Smain *' lvalue Var 0x55759c9e7bf0 's' 'struct Smain *'
char **argv = s->argv;
  19: DeclStmt 0x55759c9e8098 <luac.c:163:2, col:16>col:15
`-VarDecl 0x55759c9e8038 <col:2, col:15> col:15 used f 'const Proto *'
const Proto *f;
  20: DeclStmt 0x55759c9e8128 <luac.c:164:2, col:7>col:6
`-VarDecl 0x55759c9e80c8 <col:2, col:6> col:6 used i 'int'
int i;
  21: DeclRefExpr 0x55759c9e8140 <luac.c:165:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55759c95a718 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_checkstack
  22: ImplicitCastExpr 0x55759c9e8218 <luac.c:165:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9e8140 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55759c95a718 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
[B23.21] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  23: DeclRefExpr 0x55759c9e8168 <luac.c:165:22> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
L
  24: ImplicitCastExpr 0x55759c9e8268 <luac.c:165:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8168 <col:22> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
[B23.23] (ImplicitCastExpr, LValueToRValue, lua_State *)
  25: DeclRefExpr 0x55759c9e8190 <luac.c:165:24> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
argc
  26: ImplicitCastExpr 0x55759c9e8280 <luac.c:165:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9e8190 <col:24> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
[B23.25] (ImplicitCastExpr, LValueToRValue, int)
  27: CallExpr 0x55759c9e8230 <luac.c:165:7, col:28> 'int'
|-ImplicitCastExpr 0x55759c9e8218 <col:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9e8140 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55759c95a718 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55759c9e8268 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9e8168 <col:22> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
`-ImplicitCastExpr 0x55759c9e8280 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9e8190 <col:24> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
[B23.22]([B23.24], [B23.26])
  28: UnaryOperator 0x55759c9e8298 <luac.c:165:6, col:28> 'int' prefix '!'
`-CallExpr 0x55759c9e8230 <col:7, col:28> 'int'
  |-ImplicitCastExpr 0x55759c9e8218 <col:7> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9e8140 <col:7> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55759c95a718 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x55759c9e8268 <col:22> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9e8168 <col:22> 'lua_State *' lvalue ParmVar 0x55759c9e7a00 'L' 'lua_State *'
  `-ImplicitCastExpr 0x55759c9e8280 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55759c9e8190 <col:24> 'int' lvalue Var 0x55759c9e7e00 'argc' 'int'
![B23.27]
   T: if [B23.28]
   Preds (1): B24
   Succs (2): B22 B21

 [B0 (EXIT)]
   Preds (1): B1
