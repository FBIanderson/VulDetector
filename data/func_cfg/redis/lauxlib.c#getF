static const char *getF(lua_State *L, void *ud, size_t *size)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: ConditionalOperator 0x55f89cfd80f0 <lauxlib.c:539:10, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'char *'
|-ParenExpr 0x55f89cfd7fa8 <lauxlib.c:539:10, col:20> 'int'
| `-BinaryOperator 0x55f89cfd7f80 <col:11, col:19> 'int' '>'
|   |-ImplicitCastExpr 0x55f89cfd7f50 <col:11, col:12> 'size_t':'unsigned long' <LValueToRValue>
|   | `-UnaryOperator 0x55f89cfd7f10 <col:11, col:12> 'size_t':'unsigned long' lvalue prefix '*'
|   |   `-ImplicitCastExpr 0x55f89cfd7ef8 <col:12> 'size_t *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f89cfd7ed0 <col:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
|   `-ImplicitCastExpr 0x55f89cfd7f68 <col:19> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x55f89cfd7f30 <col:19> 'int' 0
|-ImplicitCastExpr 0x55f89cfd80c0 <col:24, col:28> 'char *' <ArrayToPointerDecay>
| `-MemberExpr 0x55f89cfd8008 <col:24, col:28> 'char [8192]' lvalue ->buff 0x55f89cfd7108
|   `-ImplicitCastExpr 0x55f89cfd7ff0 <col:24> 'LoadF *' <LValueToRValue>
|     `-DeclRefExpr 0x55f89cfd7fc8 <col:24> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
`-ImplicitCastExpr 0x55f89cfd80d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
  `-ParenExpr 0x55f89cfd80a0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55f89cfd8078 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55f89cfd8040 <col:24> 'int' 0
([B4.26]) ? [B2.4] : [B3.3]
   2: ImplicitCastExpr 0x55f89cfd8120 <lauxlib.c:539:10, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'const char *' <BitCast>
`-ConditionalOperator 0x55f89cfd80f0 <lauxlib.c:539:10, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'char *'
  |-ParenExpr 0x55f89cfd7fa8 <lauxlib.c:539:10, col:20> 'int'
  | `-BinaryOperator 0x55f89cfd7f80 <col:11, col:19> 'int' '>'
  |   |-ImplicitCastExpr 0x55f89cfd7f50 <col:11, col:12> 'size_t':'unsigned long' <LValueToRValue>
  |   | `-UnaryOperator 0x55f89cfd7f10 <col:11, col:12> 'size_t':'unsigned long' lvalue prefix '*'
  |   |   `-ImplicitCastExpr 0x55f89cfd7ef8 <col:12> 'size_t *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x55f89cfd7ed0 <col:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
  |   `-ImplicitCastExpr 0x55f89cfd7f68 <col:19> 'unsigned long' <IntegralCast>
  |     `-IntegerLiteral 0x55f89cfd7f30 <col:19> 'int' 0
  |-ImplicitCastExpr 0x55f89cfd80c0 <col:24, col:28> 'char *' <ArrayToPointerDecay>
  | `-MemberExpr 0x55f89cfd8008 <col:24, col:28> 'char [8192]' lvalue ->buff 0x55f89cfd7108
  |   `-ImplicitCastExpr 0x55f89cfd7ff0 <col:24> 'LoadF *' <LValueToRValue>
  |     `-DeclRefExpr 0x55f89cfd7fc8 <col:24> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
  `-ImplicitCastExpr 0x55f89cfd80d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
    `-ParenExpr 0x55f89cfd80a0 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x55f89cfd8078 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x55f89cfd8040 <col:24> 'int' 0
[B1.1] (ImplicitCastExpr, BitCast, const char *)
   3: ReturnStmt 0x55f89cfd8138 <lauxlib.c:539:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55f89cfd8120 <lauxlib.c:539:10, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'const char *' <BitCast>
  `-ConditionalOperator 0x55f89cfd80f0 <lauxlib.c:539:10, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'char *'
    |-ParenExpr 0x55f89cfd7fa8 <lauxlib.c:539:10, col:20> 'int'
    | `-BinaryOperator 0x55f89cfd7f80 <col:11, col:19> 'int' '>'
    |   |-ImplicitCastExpr 0x55f89cfd7f50 <col:11, col:12> 'size_t':'unsigned long' <LValueToRValue>
    |   | `-UnaryOperator 0x55f89cfd7f10 <col:11, col:12> 'size_t':'unsigned long' lvalue prefix '*'
    |   |   `-ImplicitCastExpr 0x55f89cfd7ef8 <col:12> 'size_t *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f89cfd7ed0 <col:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
    |   `-ImplicitCastExpr 0x55f89cfd7f68 <col:19> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x55f89cfd7f30 <col:19> 'int' 0
    |-ImplicitCastExpr 0x55f89cfd80c0 <col:24, col:28> 'char *' <ArrayToPointerDecay>
    | `-MemberExpr 0x55f89cfd8008 <col:24, col:28> 'char [8192]' lvalue ->buff 0x55f89cfd7108
    |   `-ImplicitCastExpr 0x55f89cfd7ff0 <col:24> 'LoadF *' <LValueToRValue>
    |     `-DeclRefExpr 0x55f89cfd7fc8 <col:24> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
    `-ImplicitCastExpr 0x55f89cfd80d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
      `-ParenExpr 0x55f89cfd80a0 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x55f89cfd8078 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x55f89cfd8040 <col:24> 'int' 0
return [B1.2];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55f89cfd7fc8 <lauxlib.c:539:24> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
lf
   2: ImplicitCastExpr 0x55f89cfd7ff0 <lauxlib.c:539:24> 'LoadF *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7fc8 <col:24> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B2.1] (ImplicitCastExpr, LValueToRValue, LoadF *)
   3: MemberExpr 0x55f89cfd8008 <lauxlib.c:539:24, col:28> 'char [8192]' lvalue ->buff 0x55f89cfd7108
`-ImplicitCastExpr 0x55f89cfd7ff0 <col:24> 'LoadF *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7fc8 <col:24> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B2.2]->buff
   4: ImplicitCastExpr 0x55f89cfd80c0 <lauxlib.c:539:24, col:28> 'char *' <ArrayToPointerDecay>
`-MemberExpr 0x55f89cfd8008 <col:24, col:28> 'char [8192]' lvalue ->buff 0x55f89cfd7108
  `-ImplicitCastExpr 0x55f89cfd7ff0 <col:24> 'LoadF *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd7fc8 <col:24> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B2.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x55f89cfd8040 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55f89cfd8078 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55f89cfd8040 <col:24> 'int' 0
(void *)[B3.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55f89cfd80d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
`-ParenExpr 0x55f89cfd80a0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55f89cfd8078 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55f89cfd8040 <col:24> 'int' 0
([B3.2]) (ImplicitCastExpr, NullToPointer, char *)
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x55f89cfd7ba0 <lauxlib.c:538:11> 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' Function 0x55f89cf03750 'fread' 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)'
fread
   2: ImplicitCastExpr 0x55f89cfd7de8 <lauxlib.c:538:11> 'size_t (*)(void *__restrict, size_t, size_t, FILE *__restrict)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f89cfd7ba0 <col:11> 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' Function 0x55f89cf03750 'fread' 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(void *__restrict, size_t, size_t, FILE *__restrict))
   3: DeclRefExpr 0x55f89cfd7bc8 <lauxlib.c:538:17> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
lf
   4: ImplicitCastExpr 0x55f89cfd7bf0 <lauxlib.c:538:17> 'LoadF *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7bc8 <col:17> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.3] (ImplicitCastExpr, LValueToRValue, LoadF *)
   5: MemberExpr 0x55f89cfd7c08 <lauxlib.c:538:17, col:21> 'char [8192]' lvalue ->buff 0x55f89cfd7108
`-ImplicitCastExpr 0x55f89cfd7bf0 <col:17> 'LoadF *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7bc8 <col:17> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.4]->buff
   6: ImplicitCastExpr 0x55f89cfd7e48 <lauxlib.c:538:17, col:21> 'char *' <ArrayToPointerDecay>
`-MemberExpr 0x55f89cfd7c08 <col:17, col:21> 'char [8192]' lvalue ->buff 0x55f89cfd7108
  `-ImplicitCastExpr 0x55f89cfd7bf0 <col:17> 'LoadF *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd7bc8 <col:17> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55f89cfd7e60 <lauxlib.c:538:17, col:21> 'void *' <BitCast>
`-ImplicitCastExpr 0x55f89cfd7e48 <col:17, col:21> 'char *' <ArrayToPointerDecay>
  `-MemberExpr 0x55f89cfd7c08 <col:17, col:21> 'char [8192]' lvalue ->buff 0x55f89cfd7108
    `-ImplicitCastExpr 0x55f89cfd7bf0 <col:17> 'LoadF *' <LValueToRValue>
      `-DeclRefExpr 0x55f89cfd7bc8 <col:17> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.6] (ImplicitCastExpr, BitCast, void *)
   8: IntegerLiteral 0x55f89cfd7c40 <lauxlib.c:538:27> 'int' 1
1
   9: ImplicitCastExpr 0x55f89cfd7e78 <lauxlib.c:538:27> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55f89cfd7c40 <col:27> 'int' 1
[B4.8] (ImplicitCastExpr, IntegralCast, size_t)
  10: UnaryExprOrTypeTraitExpr 0x55f89cfd7cf8 <lauxlib.c:538:30, col:45> 'unsigned long' sizeof
`-ParenExpr 0x55f89cfd7cd8 <col:36, col:45> 'char [8192]' lvalue
  `-MemberExpr 0x55f89cfd7ca0 <col:37, col:41> 'char [8192]' lvalue ->buff 0x55f89cfd7108
    `-ImplicitCastExpr 0x55f89cfd7c88 <col:37> 'LoadF *' <LValueToRValue>
      `-DeclRefExpr 0x55f89cfd7c60 <col:37> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
sizeof (lf->buff)
  11: DeclRefExpr 0x55f89cfd7d18 <lauxlib.c:538:48> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
lf
  12: ImplicitCastExpr 0x55f89cfd7d40 <lauxlib.c:538:48> 'LoadF *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7d18 <col:48> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.11] (ImplicitCastExpr, LValueToRValue, LoadF *)
  13: MemberExpr 0x55f89cfd7d58 <lauxlib.c:538:48, col:52> 'FILE *' lvalue ->f 0x55f89cfd7080
`-ImplicitCastExpr 0x55f89cfd7d40 <col:48> 'LoadF *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7d18 <col:48> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.12]->f
  14: ImplicitCastExpr 0x55f89cfd7e90 <lauxlib.c:538:48, col:52> 'FILE *' <LValueToRValue>
`-MemberExpr 0x55f89cfd7d58 <col:48, col:52> 'FILE *' lvalue ->f 0x55f89cfd7080
  `-ImplicitCastExpr 0x55f89cfd7d40 <col:48> 'LoadF *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd7d18 <col:48> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.13] (ImplicitCastExpr, LValueToRValue, FILE *)
  15: CallExpr 0x55f89cfd7e00 <lauxlib.c:538:11, col:53> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55f89cfd7de8 <col:11> 'size_t (*)(void *__restrict, size_t, size_t, FILE *__restrict)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f89cfd7ba0 <col:11> 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' Function 0x55f89cf03750 'fread' 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)'
|-ImplicitCastExpr 0x55f89cfd7e60 <col:17, col:21> 'void *' <BitCast>
| `-ImplicitCastExpr 0x55f89cfd7e48 <col:17, col:21> 'char *' <ArrayToPointerDecay>
|   `-MemberExpr 0x55f89cfd7c08 <col:17, col:21> 'char [8192]' lvalue ->buff 0x55f89cfd7108
|     `-ImplicitCastExpr 0x55f89cfd7bf0 <col:17> 'LoadF *' <LValueToRValue>
|       `-DeclRefExpr 0x55f89cfd7bc8 <col:17> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
|-ImplicitCastExpr 0x55f89cfd7e78 <col:27> 'size_t':'unsigned long' <IntegralCast>
| `-IntegerLiteral 0x55f89cfd7c40 <col:27> 'int' 1
|-UnaryExprOrTypeTraitExpr 0x55f89cfd7cf8 <col:30, col:45> 'unsigned long' sizeof
| `-ParenExpr 0x55f89cfd7cd8 <col:36, col:45> 'char [8192]' lvalue
|   `-MemberExpr 0x55f89cfd7ca0 <col:37, col:41> 'char [8192]' lvalue ->buff 0x55f89cfd7108
|     `-ImplicitCastExpr 0x55f89cfd7c88 <col:37> 'LoadF *' <LValueToRValue>
|       `-DeclRefExpr 0x55f89cfd7c60 <col:37> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
`-ImplicitCastExpr 0x55f89cfd7e90 <col:48, col:52> 'FILE *' <LValueToRValue>
  `-MemberExpr 0x55f89cfd7d58 <col:48, col:52> 'FILE *' lvalue ->f 0x55f89cfd7080
    `-ImplicitCastExpr 0x55f89cfd7d40 <col:48> 'LoadF *' <LValueToRValue>
      `-DeclRefExpr 0x55f89cfd7d18 <col:48> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.2]([B4.7], [B4.9], [B4.10], [B4.14])
  16: DeclRefExpr 0x55f89cfd7b40 <lauxlib.c:538:4> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
size
  17: ImplicitCastExpr 0x55f89cfd7b68 <lauxlib.c:538:4> 'size_t *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7b40 <col:4> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
[B4.16] (ImplicitCastExpr, LValueToRValue, size_t *)
  18: UnaryOperator 0x55f89cfd7b80 <lauxlib.c:538:3, col:4> 'size_t':'unsigned long' lvalue prefix '*'
`-ImplicitCastExpr 0x55f89cfd7b68 <col:4> 'size_t *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7b40 <col:4> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
*[B4.17]
  19: BinaryOperator 0x55f89cfd7ea8 <lauxlib.c:538:3, col:53> 'size_t':'unsigned long' '='
|-UnaryOperator 0x55f89cfd7b80 <col:3, col:4> 'size_t':'unsigned long' lvalue prefix '*'
| `-ImplicitCastExpr 0x55f89cfd7b68 <col:4> 'size_t *' <LValueToRValue>
|   `-DeclRefExpr 0x55f89cfd7b40 <col:4> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
`-CallExpr 0x55f89cfd7e00 <col:11, col:53> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55f89cfd7de8 <col:11> 'size_t (*)(void *__restrict, size_t, size_t, FILE *__restrict)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55f89cfd7ba0 <col:11> 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' Function 0x55f89cf03750 'fread' 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)'
  |-ImplicitCastExpr 0x55f89cfd7e60 <col:17, col:21> 'void *' <BitCast>
  | `-ImplicitCastExpr 0x55f89cfd7e48 <col:17, col:21> 'char *' <ArrayToPointerDecay>
  |   `-MemberExpr 0x55f89cfd7c08 <col:17, col:21> 'char [8192]' lvalue ->buff 0x55f89cfd7108
  |     `-ImplicitCastExpr 0x55f89cfd7bf0 <col:17> 'LoadF *' <LValueToRValue>
  |       `-DeclRefExpr 0x55f89cfd7bc8 <col:17> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
  |-ImplicitCastExpr 0x55f89cfd7e78 <col:27> 'size_t':'unsigned long' <IntegralCast>
  | `-IntegerLiteral 0x55f89cfd7c40 <col:27> 'int' 1
  |-UnaryExprOrTypeTraitExpr 0x55f89cfd7cf8 <col:30, col:45> 'unsigned long' sizeof
  | `-ParenExpr 0x55f89cfd7cd8 <col:36, col:45> 'char [8192]' lvalue
  |   `-MemberExpr 0x55f89cfd7ca0 <col:37, col:41> 'char [8192]' lvalue ->buff 0x55f89cfd7108
  |     `-ImplicitCastExpr 0x55f89cfd7c88 <col:37> 'LoadF *' <LValueToRValue>
  |       `-DeclRefExpr 0x55f89cfd7c60 <col:37> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
  `-ImplicitCastExpr 0x55f89cfd7e90 <col:48, col:52> 'FILE *' <LValueToRValue>
    `-MemberExpr 0x55f89cfd7d58 <col:48, col:52> 'FILE *' lvalue ->f 0x55f89cfd7080
      `-ImplicitCastExpr 0x55f89cfd7d40 <col:48> 'LoadF *' <LValueToRValue>
        `-DeclRefExpr 0x55f89cfd7d18 <col:48> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B4.18] = [B4.15]
  20: DeclRefExpr 0x55f89cfd7ed0 <lauxlib.c:539:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
size
  21: ImplicitCastExpr 0x55f89cfd7ef8 <lauxlib.c:539:12> 'size_t *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7ed0 <col:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
[B4.20] (ImplicitCastExpr, LValueToRValue, size_t *)
  22: UnaryOperator 0x55f89cfd7f10 <lauxlib.c:539:11, col:12> 'size_t':'unsigned long' lvalue prefix '*'
`-ImplicitCastExpr 0x55f89cfd7ef8 <col:12> 'size_t *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7ed0 <col:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
*[B4.21]
  23: ImplicitCastExpr 0x55f89cfd7f50 <lauxlib.c:539:11, col:12> 'size_t':'unsigned long' <LValueToRValue>
`-UnaryOperator 0x55f89cfd7f10 <col:11, col:12> 'size_t':'unsigned long' lvalue prefix '*'
  `-ImplicitCastExpr 0x55f89cfd7ef8 <col:12> 'size_t *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd7ed0 <col:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
[B4.22] (ImplicitCastExpr, LValueToRValue, size_t)
  24: IntegerLiteral 0x55f89cfd7f30 <lauxlib.c:539:19> 'int' 0
0
  25: ImplicitCastExpr 0x55f89cfd7f68 <lauxlib.c:539:19> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55f89cfd7f30 <col:19> 'int' 0
[B4.24] (ImplicitCastExpr, IntegralCast, unsigned long)
  26: BinaryOperator 0x55f89cfd7f80 <lauxlib.c:539:11, col:19> 'int' '>'
|-ImplicitCastExpr 0x55f89cfd7f50 <col:11, col:12> 'size_t':'unsigned long' <LValueToRValue>
| `-UnaryOperator 0x55f89cfd7f10 <col:11, col:12> 'size_t':'unsigned long' lvalue prefix '*'
|   `-ImplicitCastExpr 0x55f89cfd7ef8 <col:12> 'size_t *' <LValueToRValue>
|     `-DeclRefExpr 0x55f89cfd7ed0 <col:12> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
`-ImplicitCastExpr 0x55f89cfd7f68 <col:19> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55f89cfd7f30 <col:19> 'int' 0
[B4.23] > [B4.25]
   T: ([B4.26]) ? ... : ...
   Preds (1): B6
   Succs (2): B2 B3

 [B5]
   1: IntegerLiteral 0x55f89cfd7a58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55f89cfd7a90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55f89cfd7a58 <col:24> 'int' 0
(void *)[B5.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55f89cfd7ad8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x55f89cfd7ab8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55f89cfd7a90 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55f89cfd7a58 <col:24> 'int' 0
([B5.2]) (ImplicitCastExpr, NullToPointer, const char *)
   4: ReturnStmt 0x55f89cfd7af0 <lauxlib.c:537:20, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55f89cfd7ad8 <col:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x55f89cfd7ab8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55f89cfd7a90 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55f89cfd7a58 <col:24> 'int' 0
return [B5.3];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x55f89cfd7958 <lauxlib.c:537:7> 'int (FILE *)' Function 0x55f89cf06370 'feof' 'int (FILE *)'
feof
   2: ImplicitCastExpr 0x55f89cfd79f8 <lauxlib.c:537:7> 'int (*)(FILE *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f89cfd7958 <col:7> 'int (FILE *)' Function 0x55f89cf06370 'feof' 'int (FILE *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *))
   3: DeclRefExpr 0x55f89cfd7980 <lauxlib.c:537:12> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
lf
   4: ImplicitCastExpr 0x55f89cfd79a8 <lauxlib.c:537:12> 'LoadF *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7980 <col:12> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B6.3] (ImplicitCastExpr, LValueToRValue, LoadF *)
   5: MemberExpr 0x55f89cfd79c0 <lauxlib.c:537:12, col:16> 'FILE *' lvalue ->f 0x55f89cfd7080
`-ImplicitCastExpr 0x55f89cfd79a8 <col:12> 'LoadF *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7980 <col:12> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B6.4]->f
   6: ImplicitCastExpr 0x55f89cfd7a40 <lauxlib.c:537:12, col:16> 'FILE *' <LValueToRValue>
`-MemberExpr 0x55f89cfd79c0 <col:12, col:16> 'FILE *' lvalue ->f 0x55f89cfd7080
  `-ImplicitCastExpr 0x55f89cfd79a8 <col:12> 'LoadF *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd7980 <col:12> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B6.5] (ImplicitCastExpr, LValueToRValue, FILE *)
   7: CallExpr 0x55f89cfd7a10 <lauxlib.c:537:7, col:17> 'int'
|-ImplicitCastExpr 0x55f89cfd79f8 <col:7> 'int (*)(FILE *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f89cfd7958 <col:7> 'int (FILE *)' Function 0x55f89cf06370 'feof' 'int (FILE *)'
`-ImplicitCastExpr 0x55f89cfd7a40 <col:12, col:16> 'FILE *' <LValueToRValue>
  `-MemberExpr 0x55f89cfd79c0 <col:12, col:16> 'FILE *' lvalue ->f 0x55f89cfd7080
    `-ImplicitCastExpr 0x55f89cfd79a8 <col:12> 'LoadF *' <LValueToRValue>
      `-DeclRefExpr 0x55f89cfd7980 <col:12> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B6.2]([B6.6])
   T: if [B6.7]
   Preds (1): B8
   Succs (2): B5 B4

 [B7]
   1: IntegerLiteral 0x55f89cfd7778 <lauxlib.c:533:21> 'int' 0
0
   2: DeclRefExpr 0x55f89cfd7700 <lauxlib.c:533:5> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
lf
   3: ImplicitCastExpr 0x55f89cfd7728 <lauxlib.c:533:5> 'LoadF *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7700 <col:5> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B7.2] (ImplicitCastExpr, LValueToRValue, LoadF *)
   4: MemberExpr 0x55f89cfd7740 <lauxlib.c:533:5, col:9> 'int' lvalue ->extraline 0x55f89cfd7028
`-ImplicitCastExpr 0x55f89cfd7728 <col:5> 'LoadF *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7700 <col:5> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B7.3]->extraline
   5: BinaryOperator 0x55f89cfd7798 <lauxlib.c:533:5, col:21> 'int' '='
|-MemberExpr 0x55f89cfd7740 <col:5, col:9> 'int' lvalue ->extraline 0x55f89cfd7028
| `-ImplicitCastExpr 0x55f89cfd7728 <col:5> 'LoadF *' <LValueToRValue>
|   `-DeclRefExpr 0x55f89cfd7700 <col:5> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
`-IntegerLiteral 0x55f89cfd7778 <col:21> 'int' 0
[B7.4] = [B7.1]
   6: IntegerLiteral 0x55f89cfd7820 <lauxlib.c:534:13> 'int' 1
1
   7: ImplicitCastExpr 0x55f89cfd7840 <lauxlib.c:534:13> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55f89cfd7820 <col:13> 'int' 1
[B7.6] (ImplicitCastExpr, IntegralCast, size_t)
   8: DeclRefExpr 0x55f89cfd77c0 <lauxlib.c:534:6> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
size
   9: ImplicitCastExpr 0x55f89cfd77e8 <lauxlib.c:534:6> 'size_t *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd77c0 <col:6> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
[B7.8] (ImplicitCastExpr, LValueToRValue, size_t *)
  10: UnaryOperator 0x55f89cfd7800 <lauxlib.c:534:5, col:6> 'size_t':'unsigned long' lvalue prefix '*'
`-ImplicitCastExpr 0x55f89cfd77e8 <col:6> 'size_t *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd77c0 <col:6> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
*[B7.9]
  11: BinaryOperator 0x55f89cfd7858 <lauxlib.c:534:5, col:13> 'size_t':'unsigned long' '='
|-UnaryOperator 0x55f89cfd7800 <col:5, col:6> 'size_t':'unsigned long' lvalue prefix '*'
| `-ImplicitCastExpr 0x55f89cfd77e8 <col:6> 'size_t *' <LValueToRValue>
|   `-DeclRefExpr 0x55f89cfd77c0 <col:6> 'size_t *' lvalue ParmVar 0x55f89cfd7308 'size' 'size_t *'
`-ImplicitCastExpr 0x55f89cfd7840 <col:13> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55f89cfd7820 <col:13> 'int' 1
[B7.10] = [B7.7]
  12: StringLiteral 0x55f89cfd7880 <lauxlib.c:535:12> 'char [2]' lvalue "\n"
"\n"
  13: ImplicitCastExpr 0x55f89cfd78b0 <lauxlib.c:535:12> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55f89cfd7880 <col:12> 'char [2]' lvalue "\n"
[B7.12] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  14: ImplicitCastExpr 0x55f89cfd78c8 <lauxlib.c:535:12> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55f89cfd78b0 <col:12> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55f89cfd7880 <col:12> 'char [2]' lvalue "\n"
[B7.13] (ImplicitCastExpr, BitCast, const char *)
  15: ReturnStmt 0x55f89cfd78e0 <lauxlib.c:535:5, col:12>
`-ImplicitCastExpr 0x55f89cfd78c8 <col:12> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55f89cfd78b0 <col:12> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55f89cfd7880 <col:12> 'char [2]' lvalue "\n"
return [B7.14];
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x55f89cfd7568 <lauxlib.c:530:24> 'void *' lvalue ParmVar 0x55f89cfd7298 'ud' 'void *'
ud
   2: ImplicitCastExpr 0x55f89cfd75a0 <lauxlib.c:530:24> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7568 <col:24> 'void *' lvalue ParmVar 0x55f89cfd7298 'ud' 'void *'
[B8.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: CStyleCastExpr 0x55f89cfd75b8 <lauxlib.c:530:15, col:24> 'LoadF *' <BitCast>
`-ImplicitCastExpr 0x55f89cfd75a0 <col:24> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7568 <col:24> 'void *' lvalue ParmVar 0x55f89cfd7298 'ud' 'void *'
(LoadF *)[B8.2] (CStyleCastExpr, BitCast, LoadF *)
   4: DeclStmt 0x55f89cfd75e0 <lauxlib.c:530:3, col:26>col:10
`-VarDecl 0x55f89cfd7508 <col:3, col:24> col:10 used lf 'LoadF *' cinit
  `-CStyleCastExpr 0x55f89cfd75b8 <col:15, col:24> 'LoadF *' <BitCast>
    `-ImplicitCastExpr 0x55f89cfd75a0 <col:24> 'void *' <LValueToRValue>
      `-DeclRefExpr 0x55f89cfd7568 <col:24> 'void *' lvalue ParmVar 0x55f89cfd7298 'ud' 'void *'
LoadF *lf = (LoadF *)ud;
   5: DeclRefExpr 0x55f89cfd75f8 <lauxlib.c:531:9> 'lua_State *' lvalue ParmVar 0x55f89cfd7220 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f89cfd7630 <lauxlib.c:531:9> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd75f8 <col:9> 'lua_State *' lvalue ParmVar 0x55f89cfd7220 'L' 'lua_State *'
[B8.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: CStyleCastExpr 0x55f89cfd7648 <lauxlib.c:531:3, col:9> 'void' <ToVoid>
`-ImplicitCastExpr 0x55f89cfd7630 <col:9> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd75f8 <col:9> 'lua_State *' lvalue ParmVar 0x55f89cfd7220 'L' 'lua_State *'
(void)[B8.6] (CStyleCastExpr, ToVoid, void)
   8: DeclRefExpr 0x55f89cfd7670 <lauxlib.c:532:7> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
lf
   9: ImplicitCastExpr 0x55f89cfd7698 <lauxlib.c:532:7> 'LoadF *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd7670 <col:7> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B8.8] (ImplicitCastExpr, LValueToRValue, LoadF *)
  10: MemberExpr 0x55f89cfd76b0 <lauxlib.c:532:7, col:11> 'int' lvalue ->extraline 0x55f89cfd7028
`-ImplicitCastExpr 0x55f89cfd7698 <col:7> 'LoadF *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd7670 <col:7> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B8.9]->extraline
  11: ImplicitCastExpr 0x55f89cfd76e8 <lauxlib.c:532:7, col:11> 'int' <LValueToRValue>
`-MemberExpr 0x55f89cfd76b0 <col:7, col:11> 'int' lvalue ->extraline 0x55f89cfd7028
  `-ImplicitCastExpr 0x55f89cfd7698 <col:7> 'LoadF *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd7670 <col:7> 'LoadF *' lvalue Var 0x55f89cfd7508 'lf' 'LoadF *'
[B8.10] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B8.11]
   Preds (1): B9
   Succs (2): B7 B6

 [B0 (EXIT)]
   Preds (3): B1 B5 B7
