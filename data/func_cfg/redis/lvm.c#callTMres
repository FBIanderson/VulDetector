static void callTMres(lua_State *L, StkId res, const TValue *f, const TValue *p1, const TValue *p2)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: DeclRefExpr 0x5590eceda4d0 <lvm.c:87:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5590eceda4f8 <lvm.c:87:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceda4d0 <col:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5590eceda510 <lvm.c:87:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590eceda4f8 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceda4d0 <col:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.2]->top
   4: IntegerLiteral 0x5590eceda548 <lvm.c:87:13> 'int' 3
3
   5: CompoundAssignOperator 0x5590eceda568 <lvm.c:87:3, col:13> 'StkId':'TValue *' '+=' ComputeLHSTy='StkId':'TValue *' ComputeResultTy='StkId':'TValue *'
|-MemberExpr 0x5590eceda510 <col:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
| `-ImplicitCastExpr 0x5590eceda4f8 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x5590eceda4d0 <col:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-IntegerLiteral 0x5590eceda548 <col:13> 'int' 3
[B1.3] += [B1.4]
   6: DeclRefExpr 0x5590eceda5a0 <lvm.c:88:3> 'void (lua_State *, StkId, int)' Function 0x5590ecea9a70 'luaD_call' 'void (lua_State *, StkId, int)'
luaD_call
   7: ImplicitCastExpr 0x5590eceda748 <lvm.c:88:3> 'void (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceda5a0 <col:3> 'void (lua_State *, StkId, int)' Function 0x5590ecea9a70 'luaD_call' 'void (lua_State *, StkId, int)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, StkId, int))
   8: DeclRefExpr 0x5590eceda5c8 <lvm.c:88:13> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x5590eceda7a0 <lvm.c:88:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceda5c8 <col:13> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: DeclRefExpr 0x5590eceda5f0 <lvm.c:88:16> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x5590eceda618 <lvm.c:88:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceda5f0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: MemberExpr 0x5590eceda630 <lvm.c:88:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590eceda618 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceda5f0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.11]->top
  13: ImplicitCastExpr 0x5590eceda688 <lvm.c:88:16, col:19> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590eceda630 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590eceda618 <col:16> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceda5f0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.12] (ImplicitCastExpr, LValueToRValue, StkId)
  14: IntegerLiteral 0x5590eceda668 <lvm.c:88:25> 'int' 3
3
  15: BinaryOperator 0x5590eceda6a0 <lvm.c:88:16, col:25> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590eceda688 <col:16, col:19> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590eceda630 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590eceda618 <col:16> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590eceda5f0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-IntegerLiteral 0x5590eceda668 <col:25> 'int' 3
[B1.13] - [B1.14]
  16: IntegerLiteral 0x5590eceda6c8 <lvm.c:88:28> 'int' 1
1
  17: CallExpr 0x5590eceda760 <lvm.c:88:3, col:29> 'void'
|-ImplicitCastExpr 0x5590eceda748 <col:3> 'void (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceda5a0 <col:3> 'void (lua_State *, StkId, int)' Function 0x5590ecea9a70 'luaD_call' 'void (lua_State *, StkId, int)'
|-ImplicitCastExpr 0x5590eceda7a0 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceda5c8 <col:13> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
|-BinaryOperator 0x5590eceda6a0 <col:16, col:25> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x5590eceda688 <col:16, col:19> 'StkId':'TValue *' <LValueToRValue>
| | `-MemberExpr 0x5590eceda630 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
| |   `-ImplicitCastExpr 0x5590eceda618 <col:16> 'lua_State *' <LValueToRValue>
| |     `-DeclRefExpr 0x5590eceda5f0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
| `-IntegerLiteral 0x5590eceda668 <col:25> 'int' 3
`-IntegerLiteral 0x5590eceda6c8 <col:28> 'int' 1
[B1.7]([B1.9], [B1.15], [B1.16])
  18: DeclRefExpr 0x5590eceda7e0 <lvm.c:89:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  19: ImplicitCastExpr 0x5590eceda808 <lvm.c:89:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceda7e0 <col:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.18] (ImplicitCastExpr, LValueToRValue, lua_State *)
  20: MemberExpr 0x5590eceda820 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
`-ImplicitCastExpr 0x5590eceda808 <lvm.c:89:22> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceda7e0 <col:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.19]->stack
  21: ImplicitCastExpr 0x5590eceda870 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590eceda820 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
  `-ImplicitCastExpr 0x5590eceda808 <lvm.c:89:22> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceda7e0 <col:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.20] (ImplicitCastExpr, LValueToRValue, StkId)
  22: CStyleCastExpr 0x5590eceda888 <./ldo.h:25:39, col:50> 'char *' <BitCast>
`-ImplicitCastExpr 0x5590eceda870 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5590eceda820 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
    `-ImplicitCastExpr 0x5590eceda808 <lvm.c:89:22> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590eceda7e0 <col:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
(char *)[B1.21] (CStyleCastExpr, BitCast, char *)
  23: DeclRefExpr 0x5590eceda8b0 <lvm.c:89:25> 'ptrdiff_t':'long' lvalue Var 0x5590eced8d38 'result' 'ptrdiff_t':'long'
result
  24: ImplicitCastExpr 0x5590eceda8f8 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
`-ParenExpr 0x5590eceda8d8 <col:58, col:60> 'ptrdiff_t':'long' lvalue
  `-DeclRefExpr 0x5590eceda8b0 <lvm.c:89:25> 'ptrdiff_t':'long' lvalue Var 0x5590eced8d38 'result' 'ptrdiff_t':'long'
([B1.23]) (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  25: BinaryOperator 0x5590eceda910 <./ldo.h:25:39, col:60> 'char *' '+'
|-CStyleCastExpr 0x5590eceda888 <col:39, col:50> 'char *' <BitCast>
| `-ImplicitCastExpr 0x5590eceda870 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x5590eceda820 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
|     `-ImplicitCastExpr 0x5590eceda808 <lvm.c:89:22> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x5590eceda7e0 <col:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590eceda8f8 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
  `-ParenExpr 0x5590eceda8d8 <col:58, col:60> 'ptrdiff_t':'long' lvalue
    `-DeclRefExpr 0x5590eceda8b0 <lvm.c:89:25> 'ptrdiff_t':'long' lvalue Var 0x5590eced8d38 'result' 'ptrdiff_t':'long'
[B1.22] + [B1.24]
  26: CStyleCastExpr 0x5590eceda998 <./ldo.h:25:28, col:61> 'TValue *' <BitCast>
`-ParenExpr 0x5590eceda978 <col:38, col:61> 'char *'
  `-BinaryOperator 0x5590eceda910 <col:39, col:60> 'char *' '+'
    |-CStyleCastExpr 0x5590eceda888 <col:39, col:50> 'char *' <BitCast>
    | `-ImplicitCastExpr 0x5590eceda870 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
    |   `-MemberExpr 0x5590eceda820 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
    |     `-ImplicitCastExpr 0x5590eceda808 <lvm.c:89:22> 'lua_State *' <LValueToRValue>
    |       `-DeclRefExpr 0x5590eceda7e0 <col:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
    `-ImplicitCastExpr 0x5590eceda8f8 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
      `-ParenExpr 0x5590eceda8d8 <col:58, col:60> 'ptrdiff_t':'long' lvalue
        `-DeclRefExpr 0x5590eceda8b0 <lvm.c:89:25> 'ptrdiff_t':'long' lvalue Var 0x5590eced8d38 'result' 'ptrdiff_t':'long'
(TValue *)([B1.25]) (CStyleCastExpr, BitCast, TValue *)
  27: DeclRefExpr 0x5590eceda7b8 <lvm.c:89:3> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
res
  28: BinaryOperator 0x5590eceda9e0 <lvm.c:89:3, ./ldo.h:25:62> 'StkId':'TValue *' '='
|-DeclRefExpr 0x5590eceda7b8 <lvm.c:89:3> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
`-ParenExpr 0x5590eceda9c0 <./ldo.h:25:27, col:62> 'TValue *'
  `-CStyleCastExpr 0x5590eceda998 <col:28, col:61> 'TValue *' <BitCast>
    `-ParenExpr 0x5590eceda978 <col:38, col:61> 'char *'
      `-BinaryOperator 0x5590eceda910 <col:39, col:60> 'char *' '+'
        |-CStyleCastExpr 0x5590eceda888 <col:39, col:50> 'char *' <BitCast>
        | `-ImplicitCastExpr 0x5590eceda870 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' <LValueToRValue>
        |   `-MemberExpr 0x5590eceda820 <lvm.c:89:22, ./ldo.h:25:50> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
        |     `-ImplicitCastExpr 0x5590eceda808 <lvm.c:89:22> 'lua_State *' <LValueToRValue>
        |       `-DeclRefExpr 0x5590eceda7e0 <col:22> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
        `-ImplicitCastExpr 0x5590eceda8f8 <./ldo.h:25:58, col:60> 'ptrdiff_t':'long' <LValueToRValue>
          `-ParenExpr 0x5590eceda8d8 <col:58, col:60> 'ptrdiff_t':'long' lvalue
            `-DeclRefExpr 0x5590eceda8b0 <lvm.c:89:25> 'ptrdiff_t':'long' lvalue Var 0x5590eced8d38 'result' 'ptrdiff_t':'long'
[B1.27] = ([B1.26])
  29: DeclRefExpr 0x5590ecedaa08 <lvm.c:90:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x5590ecedaa30 <lvm.c:90:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedaa08 <col:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: MemberExpr 0x5590ecedaa48 <lvm.c:90:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedaa30 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedaa08 <col:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.30]->top
  32: UnaryOperator 0x5590ecedaa80 <lvm.c:90:3, col:9> 'StkId':'TValue *' postfix '--'
`-MemberExpr 0x5590ecedaa48 <col:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590ecedaa30 <col:3> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedaa08 <col:3> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.31]--
  33: DeclRefExpr 0x5590ecedab10 <lvm.c:91:21> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  34: ImplicitCastExpr 0x5590ecedab38 <lvm.c:91:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedab10 <col:21> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.33] (ImplicitCastExpr, LValueToRValue, lua_State *)
  35: MemberExpr 0x5590ecedab50 <lvm.c:91:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedab38 <col:21> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedab10 <col:21> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.34]->top
  36: ImplicitCastExpr 0x5590ecedaba8 <./lobject.h:162:22, col:27> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecedab88 <col:22, col:27> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5590ecedab50 <lvm.c:91:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590ecedab38 <col:21> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedab10 <col:21> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
([B1.35]) (ImplicitCastExpr, LValueToRValue, StkId)
  37: ImplicitCastExpr 0x5590ecedabc0 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5590ecedaba8 <col:22, col:27> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecedab88 <col:22, col:27> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x5590ecedab50 <lvm.c:91:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      `-ImplicitCastExpr 0x5590ecedab38 <col:21> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecedab10 <col:21> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B1.36] (ImplicitCastExpr, BitCast, const TValue *)
  38: DeclStmt 0x5590ecedabd8 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590ecedaab0 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590ecedabc0 <col:22, col:27> 'const TValue *' <BitCast>
    `-ImplicitCastExpr 0x5590ecedaba8 <col:22, col:27> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecedab88 <col:22, col:27> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x5590ecedab50 <lvm.c:91:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
          `-ImplicitCastExpr 0x5590ecedab38 <col:21> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x5590ecedab10 <col:21> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
const TValue *o2 = (L->top);
  39: DeclRefExpr 0x5590ecedac60 <lvm.c:91:16> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
res
  40: ImplicitCastExpr 0x5590ecedaca8 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecedac88 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecedac60 <lvm.c:91:16> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
([B1.39]) (ImplicitCastExpr, LValueToRValue, StkId)
  41: DeclStmt 0x5590ecedacc0 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590ecedac00 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecedaca8 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecedac88 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecedac60 <lvm.c:91:16> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
TValue *o1 = (res);
  42: DeclRefExpr 0x5590ecedad50 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
o2
  43: ImplicitCastExpr 0x5590ecedad78 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedad50 <col:17> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.42] (ImplicitCastExpr, LValueToRValue, const TValue *)
  44: MemberExpr 0x5590ecedad90 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedad78 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedad50 <col:17> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.43]->value
  45: ImplicitCastExpr 0x5590ecedadc8 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590ecedad90 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecedad78 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedad50 <col:17> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.44] (ImplicitCastExpr, LValueToRValue, Value)
  46: DeclRefExpr 0x5590ecedacd8 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
o1
  47: ImplicitCastExpr 0x5590ecedad00 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedacd8 <col:5> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
[B1.46] (ImplicitCastExpr, LValueToRValue, TValue *)
  48: MemberExpr 0x5590ecedad18 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedad00 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedacd8 <col:5> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
[B1.47]->value
  49: BinaryOperator 0x5590ecedade0 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590ecedad18 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590ecedad00 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedacd8 <col:5> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedadc8 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590ecedad90 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecedad78 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedad50 <col:17> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.48] = [B1.45]
  50: DeclRefExpr 0x5590ecedae80 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
o2
  51: ImplicitCastExpr 0x5590ecedaea8 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedae80 <col:35> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.50] (ImplicitCastExpr, LValueToRValue, const TValue *)
  52: MemberExpr 0x5590ecedaec0 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedaea8 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedae80 <col:35> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.51]->tt
  53: ImplicitCastExpr 0x5590ecedaef8 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590ecedaec0 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590ecedaea8 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedae80 <col:35> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.52] (ImplicitCastExpr, LValueToRValue, int)
  54: DeclRefExpr 0x5590ecedae08 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
o1
  55: ImplicitCastExpr 0x5590ecedae30 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedae08 <col:28> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
[B1.54] (ImplicitCastExpr, LValueToRValue, TValue *)
  56: MemberExpr 0x5590ecedae48 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedae30 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedae08 <col:28> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
[B1.55]->tt
  57: BinaryOperator 0x5590ecedaf10 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590ecedae48 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecedae30 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedae08 <col:28> 'TValue *' lvalue Var 0x5590ecedac00 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedaef8 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590ecedaec0 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecedaea8 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedae80 <col:35> 'const TValue *' lvalue Var 0x5590ecedaab0 'o2' 'const TValue *'
[B1.56] = [B1.53]
  58: IntegerLiteral 0x5590ecedaf38 <./llimits.h:62:31> 'int' 0
0
  59: CStyleCastExpr 0x5590ecedaf68 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecedaf38 <col:31> 'int' 0
(void)[B1.58] (CStyleCastExpr, ToVoid, void)
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x5590eceda410 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x5590eceda440 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x5590eceda410 <col:38> 'int' 0
(void)[B2.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5590eceda2e0 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x5590eceaa8a8 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x5590eceda3a8 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceda2e0 <col:5> 'void (lua_State *, int)' Function 0x5590eceaa8a8 'luaD_growstack' 'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5590eceda308 <lvm.c:86:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceda3f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceda308 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5590eceda330 <lvm.c:86:22> 'int' 3
3
   6: CallExpr 0x5590eceda3c0 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x5590eceda3a8 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceda2e0 <col:5> 'void (lua_State *, int)' Function 0x5590eceaa8a8 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x5590eceda3f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceda308 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-IntegerLiteral 0x5590eceda330 <col:22> 'int' 3
[B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x5590eced8d98 <lvm.c:82:35> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
res
   2: ImplicitCastExpr 0x5590eced8e28 <./ldo.h:24:34, col:36> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590eced8e08 <col:34, col:36> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590eced8d98 <lvm.c:82:35> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: CStyleCastExpr 0x5590eced8e40 <./ldo.h:24:26, col:36> 'char *' <BitCast>
`-ImplicitCastExpr 0x5590eced8e28 <col:34, col:36> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eced8e08 <col:34, col:36> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x5590eced8d98 <lvm.c:82:35> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
(char *)[B4.2] (CStyleCastExpr, BitCast, char *)
   4: DeclRefExpr 0x5590eced8e68 <lvm.c:82:32> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x5590eced8e90 <lvm.c:82:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eced8e68 <col:32> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: MemberExpr 0x5590eced8ea8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
`-ImplicitCastExpr 0x5590eced8e90 <lvm.c:82:32> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced8e68 <col:32> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.5]->stack
   7: ImplicitCastExpr 0x5590eced8ef8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590eced8ea8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
  `-ImplicitCastExpr 0x5590eced8e90 <lvm.c:82:32> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced8e68 <col:32> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.6] (ImplicitCastExpr, LValueToRValue, StkId)
   8: CStyleCastExpr 0x5590eced8f10 <./ldo.h:24:40, col:51> 'char *' <BitCast>
`-ImplicitCastExpr 0x5590eced8ef8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5590eced8ea8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
    `-ImplicitCastExpr 0x5590eced8e90 <lvm.c:82:32> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced8e68 <col:32> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
(char *)[B4.7] (CStyleCastExpr, BitCast, char *)
   9: BinaryOperator 0x5590eced8f38 <./ldo.h:24:26, col:51> 'long' '-'
|-CStyleCastExpr 0x5590eced8e40 <col:26, col:36> 'char *' <BitCast>
| `-ImplicitCastExpr 0x5590eced8e28 <col:34, col:36> 'StkId':'TValue *' <LValueToRValue>
|   `-ParenExpr 0x5590eced8e08 <col:34, col:36> 'StkId':'TValue *' lvalue
|     `-DeclRefExpr 0x5590eced8d98 <lvm.c:82:35> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
`-CStyleCastExpr 0x5590eced8f10 <./ldo.h:24:40, col:51> 'char *' <BitCast>
  `-ImplicitCastExpr 0x5590eced8ef8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x5590eced8ea8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
      `-ImplicitCastExpr 0x5590eced8e90 <lvm.c:82:32> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590eced8e68 <col:32> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.3] - [B4.8]
  10: DeclStmt 0x5590eced8f80 <lvm.c:82:3, col:39>col:13
`-VarDecl 0x5590eced8d38 <col:3, ./ldo.h:24:56> lvm.c:82:13 used result 'ptrdiff_t':'long' cinit
  `-ParenExpr 0x5590eced8f60 <./ldo.h:24:25, col:56> 'long'
    `-BinaryOperator 0x5590eced8f38 <col:26, col:51> 'long' '-'
      |-CStyleCastExpr 0x5590eced8e40 <col:26, col:36> 'char *' <BitCast>
      | `-ImplicitCastExpr 0x5590eced8e28 <col:34, col:36> 'StkId':'TValue *' <LValueToRValue>
      |   `-ParenExpr 0x5590eced8e08 <col:34, col:36> 'StkId':'TValue *' lvalue
      |     `-DeclRefExpr 0x5590eced8d98 <lvm.c:82:35> 'StkId':'TValue *' lvalue ParmVar 0x5590eced89a8 'res' 'StkId':'TValue *'
      `-CStyleCastExpr 0x5590eced8f10 <./ldo.h:24:40, col:51> 'char *' <BitCast>
        `-ImplicitCastExpr 0x5590eced8ef8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' <LValueToRValue>
          `-MemberExpr 0x5590eced8ea8 <lvm.c:82:32, ./ldo.h:24:51> 'StkId':'TValue *' lvalue ->stack 0x5590ecea02f0
            `-ImplicitCastExpr 0x5590eced8e90 <lvm.c:82:32> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x5590eced8e68 <col:32> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
ptrdiff_t result = ((char *)(res) - (char *)L->stack);
  11: DeclRefExpr 0x5590eced9008 <lvm.c:83:23> 'const TValue *' lvalue ParmVar 0x5590eced8a18 'f' 'const TValue *'
f
  12: ImplicitCastExpr 0x5590eced9050 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eced9030 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eced9008 <lvm.c:83:23> 'const TValue *' lvalue ParmVar 0x5590eced8a18 'f' 'const TValue *'
([B4.11]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  13: DeclStmt 0x5590eced9068 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590eced8fa8 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590eced9050 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eced9030 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eced9008 <lvm.c:83:23> 'const TValue *' lvalue ParmVar 0x5590eced8a18 'f' 'const TValue *'
const TValue *o2 = (f);
  14: DeclRefExpr 0x5590eced90f0 <lvm.c:83:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  15: ImplicitCastExpr 0x5590eced9118 <lvm.c:83:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eced90f0 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: MemberExpr 0x5590eced9130 <lvm.c:83:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590eced9118 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced90f0 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.15]->top
  17: ImplicitCastExpr 0x5590eced9188 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590eced9168 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5590eced9130 <lvm.c:83:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590eced9118 <col:15> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced90f0 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
([B4.16]) (ImplicitCastExpr, LValueToRValue, StkId)
  18: DeclStmt 0x5590eced91a0 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590eced9090 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x5590eced9188 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eced9168 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x5590eced9130 <lvm.c:83:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
        `-ImplicitCastExpr 0x5590eced9118 <col:15> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5590eced90f0 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
TValue *o1 = (L->top);
  19: DeclRefExpr 0x5590eced9230 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
o2
  20: ImplicitCastExpr 0x5590eced9258 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9230 <col:17> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.19] (ImplicitCastExpr, LValueToRValue, const TValue *)
  21: MemberExpr 0x5590eced9270 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eced9258 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9230 <col:17> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.20]->value
  22: ImplicitCastExpr 0x5590eced92a8 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590eced9270 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eced9258 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced9230 <col:17> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.21] (ImplicitCastExpr, LValueToRValue, Value)
  23: DeclRefExpr 0x5590eced91b8 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
o1
  24: ImplicitCastExpr 0x5590eced91e0 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced91b8 <col:5> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
[B4.23] (ImplicitCastExpr, LValueToRValue, TValue *)
  25: MemberExpr 0x5590eced91f8 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eced91e0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced91b8 <col:5> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
[B4.24]->value
  26: BinaryOperator 0x5590eced92c0 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590eced91f8 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590eced91e0 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590eced91b8 <col:5> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590eced92a8 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590eced9270 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eced9258 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced9230 <col:17> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.25] = [B4.22]
  27: DeclRefExpr 0x5590eced9360 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
o2
  28: ImplicitCastExpr 0x5590eced9388 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9360 <col:35> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.27] (ImplicitCastExpr, LValueToRValue, const TValue *)
  29: MemberExpr 0x5590eced93a0 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eced9388 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9360 <col:35> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.28]->tt
  30: ImplicitCastExpr 0x5590eced93d8 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590eced93a0 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590eced9388 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced9360 <col:35> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.29] (ImplicitCastExpr, LValueToRValue, int)
  31: DeclRefExpr 0x5590eced92e8 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
o1
  32: ImplicitCastExpr 0x5590eced9310 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced92e8 <col:28> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
[B4.31] (ImplicitCastExpr, LValueToRValue, TValue *)
  33: MemberExpr 0x5590eced9328 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eced9310 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced92e8 <col:28> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
[B4.32]->tt
  34: BinaryOperator 0x5590eced93f0 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590eced9328 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590eced9310 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590eced92e8 <col:28> 'TValue *' lvalue Var 0x5590eced9090 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590eced93d8 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590eced93a0 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eced9388 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced9360 <col:35> 'const TValue *' lvalue Var 0x5590eced8fa8 'o2' 'const TValue *'
[B4.33] = [B4.30]
  35: IntegerLiteral 0x5590eced9418 <./llimits.h:62:31> 'int' 0
0
  36: CStyleCastExpr 0x5590eced9448 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590eced9418 <col:31> 'int' 0
(void)[B4.35] (CStyleCastExpr, ToVoid, void)
  37: DeclRefExpr 0x5590eced9548 <lvm.c:84:25> 'const TValue *' lvalue ParmVar 0x5590eced8a88 'p1' 'const TValue *'
p1
  38: ImplicitCastExpr 0x5590eced9590 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eced9570 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eced9548 <lvm.c:84:25> 'const TValue *' lvalue ParmVar 0x5590eced8a88 'p1' 'const TValue *'
([B4.37]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  39: DeclStmt 0x5590eced95a8 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590eced94e8 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590eced9590 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eced9570 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eced9548 <lvm.c:84:25> 'const TValue *' lvalue ParmVar 0x5590eced8a88 'p1' 'const TValue *'
const TValue *o2 = (p1);
  40: DeclRefExpr 0x5590eced9630 <lvm.c:84:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  41: ImplicitCastExpr 0x5590eced9658 <lvm.c:84:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9630 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.40] (ImplicitCastExpr, LValueToRValue, lua_State *)
  42: MemberExpr 0x5590eced9670 <lvm.c:84:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590eced9658 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9630 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.41]->top
  43: ImplicitCastExpr 0x5590eced96c8 <lvm.c:84:15, col:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590eced9670 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590eced9658 <col:15> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced9630 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.42] (ImplicitCastExpr, LValueToRValue, StkId)
  44: IntegerLiteral 0x5590eced96a8 <lvm.c:84:22> 'int' 1
1
  45: BinaryOperator 0x5590eced96e0 <lvm.c:84:15, col:22> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5590eced96c8 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590eced9670 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590eced9658 <col:15> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590eced9630 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-IntegerLiteral 0x5590eced96a8 <col:22> 'int' 1
[B4.43] + [B4.44]
  46: DeclStmt 0x5590eced9728 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590eced95d0 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5590eced9708 <col:41, col:46> 'StkId':'TValue *'
    `-BinaryOperator 0x5590eced96e0 <lvm.c:84:15, col:22> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x5590eced96c8 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5590eced9670 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      |   `-ImplicitCastExpr 0x5590eced9658 <col:15> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x5590eced9630 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
      `-IntegerLiteral 0x5590eced96a8 <col:22> 'int' 1
TValue *o1 = (L->top + 1);
  47: DeclRefExpr 0x5590eced97b8 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
o2
  48: ImplicitCastExpr 0x5590eced97e0 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced97b8 <col:17> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.47] (ImplicitCastExpr, LValueToRValue, const TValue *)
  49: MemberExpr 0x5590eced97f8 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eced97e0 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced97b8 <col:17> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.48]->value
  50: ImplicitCastExpr 0x5590eced9830 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590eced97f8 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eced97e0 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced97b8 <col:17> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.49] (ImplicitCastExpr, LValueToRValue, Value)
  51: DeclRefExpr 0x5590eced9740 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
o1
  52: ImplicitCastExpr 0x5590eced9768 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9740 <col:5> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
[B4.51] (ImplicitCastExpr, LValueToRValue, TValue *)
  53: MemberExpr 0x5590eced9780 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eced9768 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9740 <col:5> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
[B4.52]->value
  54: BinaryOperator 0x5590eced9848 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590eced9780 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590eced9768 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590eced9740 <col:5> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590eced9830 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590eced97f8 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eced97e0 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced97b8 <col:17> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.53] = [B4.50]
  55: DeclRefExpr 0x5590eced98e8 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
o2
  56: ImplicitCastExpr 0x5590eced9910 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced98e8 <col:35> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.55] (ImplicitCastExpr, LValueToRValue, const TValue *)
  57: MemberExpr 0x5590eced9928 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eced9910 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced98e8 <col:35> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.56]->tt
  58: ImplicitCastExpr 0x5590eced9960 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590eced9928 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590eced9910 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced98e8 <col:35> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.57] (ImplicitCastExpr, LValueToRValue, int)
  59: DeclRefExpr 0x5590eced9870 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
o1
  60: ImplicitCastExpr 0x5590eced9898 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9870 <col:28> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
[B4.59] (ImplicitCastExpr, LValueToRValue, TValue *)
  61: MemberExpr 0x5590eced98b0 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eced9898 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9870 <col:28> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
[B4.60]->tt
  62: BinaryOperator 0x5590eced9978 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590eced98b0 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590eced9898 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590eced9870 <col:28> 'TValue *' lvalue Var 0x5590eced95d0 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590eced9960 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590eced9928 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eced9910 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced98e8 <col:35> 'const TValue *' lvalue Var 0x5590eced94e8 'o2' 'const TValue *'
[B4.61] = [B4.58]
  63: IntegerLiteral 0x5590eced99a0 <./llimits.h:62:31> 'int' 0
0
  64: CStyleCastExpr 0x5590eced99d0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590eced99a0 <col:31> 'int' 0
(void)[B4.63] (CStyleCastExpr, ToVoid, void)
  65: DeclRefExpr 0x5590eced9ad0 <lvm.c:85:25> 'const TValue *' lvalue ParmVar 0x5590eced8af8 'p2' 'const TValue *'
p2
  66: ImplicitCastExpr 0x5590eced9b18 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eced9af8 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eced9ad0 <lvm.c:85:25> 'const TValue *' lvalue ParmVar 0x5590eced8af8 'p2' 'const TValue *'
([B4.65]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  67: DeclStmt 0x5590eced9b30 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590eced9a70 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590eced9b18 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eced9af8 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eced9ad0 <lvm.c:85:25> 'const TValue *' lvalue ParmVar 0x5590eced8af8 'p2' 'const TValue *'
const TValue *o2 = (p2);
  68: DeclRefExpr 0x5590eced9bb8 <lvm.c:85:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  69: ImplicitCastExpr 0x5590eced9be0 <lvm.c:85:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9bb8 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.68] (ImplicitCastExpr, LValueToRValue, lua_State *)
  70: MemberExpr 0x5590eced9bf8 <lvm.c:85:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590eced9be0 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9bb8 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.69]->top
  71: ImplicitCastExpr 0x5590eced9c50 <lvm.c:85:15, col:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590eced9bf8 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590eced9be0 <col:15> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced9bb8 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.70] (ImplicitCastExpr, LValueToRValue, StkId)
  72: IntegerLiteral 0x5590eced9c30 <lvm.c:85:22> 'int' 2
2
  73: BinaryOperator 0x5590eced9c68 <lvm.c:85:15, col:22> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5590eced9c50 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590eced9bf8 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590eced9be0 <col:15> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590eced9bb8 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-IntegerLiteral 0x5590eced9c30 <col:22> 'int' 2
[B4.71] + [B4.72]
  74: DeclStmt 0x5590eced9cb0 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590eced9b58 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5590eced9c90 <col:41, col:46> 'StkId':'TValue *'
    `-BinaryOperator 0x5590eced9c68 <lvm.c:85:15, col:22> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x5590eced9c50 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5590eced9bf8 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      |   `-ImplicitCastExpr 0x5590eced9be0 <col:15> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x5590eced9bb8 <col:15> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
      `-IntegerLiteral 0x5590eced9c30 <col:22> 'int' 2
TValue *o1 = (L->top + 2);
  75: DeclRefExpr 0x5590eced9d40 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
o2
  76: ImplicitCastExpr 0x5590eced9d68 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9d40 <col:17> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.75] (ImplicitCastExpr, LValueToRValue, const TValue *)
  77: MemberExpr 0x5590eced9d80 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eced9d68 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9d40 <col:17> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.76]->value
  78: ImplicitCastExpr 0x5590eced9db8 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590eced9d80 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eced9d68 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced9d40 <col:17> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.77] (ImplicitCastExpr, LValueToRValue, Value)
  79: DeclRefExpr 0x5590eced9cc8 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
o1
  80: ImplicitCastExpr 0x5590eced9cf0 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9cc8 <col:5> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
[B4.79] (ImplicitCastExpr, LValueToRValue, TValue *)
  81: MemberExpr 0x5590eced9d08 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eced9cf0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9cc8 <col:5> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
[B4.80]->value
  82: BinaryOperator 0x5590eced9dd0 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590eced9d08 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590eced9cf0 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590eced9cc8 <col:5> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590eced9db8 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590eced9d80 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eced9d68 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced9d40 <col:17> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.81] = [B4.78]
  83: DeclRefExpr 0x5590eced9e88 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
o2
  84: ImplicitCastExpr 0x5590eced9eb0 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9e88 <col:35> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.83] (ImplicitCastExpr, LValueToRValue, const TValue *)
  85: MemberExpr 0x5590eced9ec8 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eced9eb0 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9e88 <col:35> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.84]->tt
  86: ImplicitCastExpr 0x5590eced9f00 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590eced9ec8 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590eced9eb0 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eced9e88 <col:35> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.85] (ImplicitCastExpr, LValueToRValue, int)
  87: DeclRefExpr 0x5590eced9df8 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
o1
  88: ImplicitCastExpr 0x5590eced9e20 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eced9df8 <col:28> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
[B4.87] (ImplicitCastExpr, LValueToRValue, TValue *)
  89: MemberExpr 0x5590eced9e50 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eced9e20 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eced9df8 <col:28> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
[B4.88]->tt
  90: BinaryOperator 0x5590eced9f18 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590eced9e50 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590eced9e20 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590eced9df8 <col:28> 'TValue *' lvalue Var 0x5590eced9b58 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590eced9f00 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590eced9ec8 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eced9eb0 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590eced9e88 <col:35> 'const TValue *' lvalue Var 0x5590eced9a70 'o2' 'const TValue *'
[B4.89] = [B4.86]
  91: IntegerLiteral 0x5590eced9f40 <./llimits.h:62:31> 'int' 0
0
  92: CStyleCastExpr 0x5590eced9f70 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590eced9f40 <col:31> 'int' 0
(void)[B4.91] (CStyleCastExpr, ToVoid, void)
  93: DeclRefExpr 0x5590eceda000 <lvm.c:86:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  94: ImplicitCastExpr 0x5590eceda028 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceda000 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.93] (ImplicitCastExpr, LValueToRValue, lua_State *)
  95: MemberExpr 0x5590eceda040 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
`-ImplicitCastExpr 0x5590eceda028 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceda000 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.94]->stack_last
  96: ImplicitCastExpr 0x5590eceda090 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590eceda040 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
  `-ImplicitCastExpr 0x5590eceda028 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceda000 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.95] (ImplicitCastExpr, LValueToRValue, StkId)
  97: CStyleCastExpr 0x5590eceda0a8 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x5590eceda090 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5590eceda040 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
    `-ImplicitCastExpr 0x5590eceda028 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590eceda000 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
(char *)[B4.96] (CStyleCastExpr, BitCast, char *)
  98: DeclRefExpr 0x5590eceda0d0 <lvm.c:86:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
L
  99: ImplicitCastExpr 0x5590eceda0f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceda0d0 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.98] (ImplicitCastExpr, LValueToRValue, lua_State *)
 100: MemberExpr 0x5590eceda110 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590eceda0f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceda0d0 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.99]->top
 101: ImplicitCastExpr 0x5590eceda160 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590eceda110 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590eceda0f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceda0d0 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.100] (ImplicitCastExpr, LValueToRValue, StkId)
 102: CStyleCastExpr 0x5590eceda178 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x5590eceda160 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5590eceda110 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590eceda0f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590eceda0d0 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
(char *)[B4.101] (CStyleCastExpr, BitCast, char *)
 103: BinaryOperator 0x5590eceda1a0 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x5590eceda0a8 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x5590eceda090 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x5590eceda040 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
|     `-ImplicitCastExpr 0x5590eceda028 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x5590eceda000 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-CStyleCastExpr 0x5590eceda178 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x5590eceda160 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x5590eceda110 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      `-ImplicitCastExpr 0x5590eceda0f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590eceda0d0 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
[B4.97] - [B4.102]
 104: IntegerLiteral 0x5590eceda1c8 <lvm.c:86:22> 'int' 3
3
 105: UnaryExprOrTypeTraitExpr 0x5590eceda218 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
 106: CStyleCastExpr 0x5590eceda250 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x5590eceda218 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B4.105] (CStyleCastExpr, IntegralCast, int)
 107: BinaryOperator 0x5590eceda278 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x5590eceda1e8 <col:49, col:51> 'int'
| `-IntegerLiteral 0x5590eceda1c8 <lvm.c:86:22> 'int' 3
`-CStyleCastExpr 0x5590eceda250 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x5590eceda218 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B4.104]) * [B4.106]
 108: ImplicitCastExpr 0x5590eceda2a0 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x5590eceda278 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x5590eceda1e8 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x5590eceda1c8 <lvm.c:86:22> 'int' 3
  `-CStyleCastExpr 0x5590eceda250 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x5590eceda218 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.107] (ImplicitCastExpr, IntegralCast, long)
 109: BinaryOperator 0x5590eceda2b8 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x5590eceda1a0 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x5590eceda0a8 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x5590eceda090 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x5590eceda040 <lvm.c:86:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
| |     `-ImplicitCastExpr 0x5590eceda028 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x5590eceda000 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
| `-CStyleCastExpr 0x5590eceda178 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x5590eceda160 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x5590eceda110 <lvm.c:86:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|       `-ImplicitCastExpr 0x5590eceda0f8 <lvm.c:86:19> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x5590eceda0d0 <col:19> 'lua_State *' lvalue ParmVar 0x5590eced8938 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590eceda2a0 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x5590eceda278 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x5590eceda1e8 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x5590eceda1c8 <lvm.c:86:22> 'int' 3
    `-CStyleCastExpr 0x5590eceda250 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x5590eceda218 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.103] <= [B4.108]
   T: if [B4.109]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1
