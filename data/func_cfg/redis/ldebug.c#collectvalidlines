static void collectvalidlines(lua_State *L, Closure *f)
 [B13 (ENTRY)]
   Succs (1): B12

 [B1]
   1: DeclRefExpr 0x555e972465a0 <ldebug.c:189:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e972465c8 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e972465a0 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B1.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e972465e0 <ldebug.c:189:12, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e972465c8 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e972465a0 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B1.2]->top
   4: UnaryOperator 0x555e97246618 <ldebug.c:189:12, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x555e972465e0 <ldebug.c:189:12, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x555e97213368
  `-ImplicitCastExpr 0x555e972465c8 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e972465a0 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B1.3]++
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x555e972464e0 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x555e97246510 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x555e972464e0 <col:38> 'int' 0
(void)[B2.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x555e972463a8 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x555e9721fb08 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x555e97246478 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e972463a8 <col:5> 'void (lua_State *, int)' Function 0x555e9721fb08 'luaD_growstack' 'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x555e972463d0 <ldebug.c:189:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e972464c8 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e972463d0 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x555e972463f8 <./ldo.h:22:40> 'int' 1
1
   6: CallExpr 0x555e97246490 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x555e97246478 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e972463a8 <col:5> 'void (lua_State *, int)' Function 0x555e9721fb08 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x555e972464c8 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e972463d0 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
`-IntegerLiteral 0x555e972463f8 <./ldo.h:22:40> 'int' 1
[B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x555e972460c8 <ldebug.c:189:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e972460f0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e972460c8 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e97246108 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
`-ImplicitCastExpr 0x555e972460f0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e972460c8 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B4.2]->stack_last
   4: ImplicitCastExpr 0x555e97246158 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e97246108 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
  `-ImplicitCastExpr 0x555e972460f0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e972460c8 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: CStyleCastExpr 0x555e97246170 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x555e97246158 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x555e97246108 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
    `-ImplicitCastExpr 0x555e972460f0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e972460c8 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
(char *)[B4.4] (CStyleCastExpr, BitCast, char *)
   6: DeclRefExpr 0x555e97246198 <ldebug.c:189:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x555e972461c0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97246198 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B4.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: MemberExpr 0x555e972461d8 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e972461c0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97246198 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B4.7]->top
   9: ImplicitCastExpr 0x555e97246228 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e972461d8 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
  `-ImplicitCastExpr 0x555e972461c0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e97246198 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B4.8] (ImplicitCastExpr, LValueToRValue, StkId)
  10: CStyleCastExpr 0x555e97246240 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x555e97246228 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x555e972461d8 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
    `-ImplicitCastExpr 0x555e972461c0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e97246198 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
(char *)[B4.9] (CStyleCastExpr, BitCast, char *)
  11: BinaryOperator 0x555e97246268 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x555e97246170 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x555e97246158 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x555e97246108 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
|     `-ImplicitCastExpr 0x555e972460f0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x555e972460c8 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
`-CStyleCastExpr 0x555e97246240 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x555e97246228 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x555e972461d8 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
      `-ImplicitCastExpr 0x555e972461c0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x555e97246198 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B4.5] - [B4.10]
  12: IntegerLiteral 0x555e97246290 <./ldo.h:22:40> 'int' 1
1
  13: UnaryExprOrTypeTraitExpr 0x555e972462e0 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  14: CStyleCastExpr 0x555e97246318 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x555e972462e0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B4.13] (CStyleCastExpr, IntegralCast, int)
  15: BinaryOperator 0x555e97246340 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x555e972462b0 <col:49, col:51> 'int'
| `-IntegerLiteral 0x555e97246290 <line:22:40> 'int' 1
`-CStyleCastExpr 0x555e97246318 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x555e972462e0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B4.12]) * [B4.14]
  16: ImplicitCastExpr 0x555e97246368 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x555e97246340 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x555e972462b0 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x555e97246290 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x555e97246318 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x555e972462e0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.15] (ImplicitCastExpr, IntegralCast, long)
  17: BinaryOperator 0x555e97246380 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x555e97246268 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x555e97246170 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x555e97246158 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x555e97246108 <ldebug.c:189:12, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
| |     `-ImplicitCastExpr 0x555e972460f0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x555e972460c8 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
| `-CStyleCastExpr 0x555e97246240 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x555e97246228 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x555e972461d8 <ldebug.c:189:12, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
|       `-ImplicitCastExpr 0x555e972461c0 <ldebug.c:189:12> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x555e97246198 <col:12> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e97246368 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x555e97246340 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x555e972462b0 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x555e97246290 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x555e97246318 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x555e972462e0 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.11] <= [B4.16]
   T: if [B4.17]
   Preds (2): B5 B10
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x555e97245c28 <ldebug.c:187:18> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e97245c50 <ldebug.c:187:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97245c28 <col:18> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B5.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e97245c68 <ldebug.c:187:18, col:21> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e97245c50 <col:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97245c28 <col:18> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B5.2]->top
   4: ImplicitCastExpr 0x555e97245cc0 <./lobject.h:149:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97245ca0 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97245c68 <ldebug.c:187:18, col:21> 'StkId':'TValue *' lvalue ->top 0x555e97213368
    `-ImplicitCastExpr 0x555e97245c50 <col:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e97245c28 <col:18> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
([B5.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclStmt 0x555e97245cd8 <./lobject.h:149:5, col:22>col:13
`-VarDecl 0x555e97245bc8 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x555e97245cc0 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e97245ca0 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e97245c68 <ldebug.c:187:18, col:21> 'StkId':'TValue *' lvalue ->top 0x555e97213368
        `-ImplicitCastExpr 0x555e97245c50 <col:18> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x555e97245c28 <col:18> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
TValue *i_o = (L->top);
   6: DeclRefExpr 0x555e97245da0 <ldebug.c:187:26> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
t
   7: ImplicitCastExpr 0x555e97245e48 <./llimits.h:75:26, col:30> 'Table *' <LValueToRValue>
`-ParenExpr 0x555e97245e28 <col:26, col:30> 'Table *' lvalue
  `-ParenExpr 0x555e97245dc8 <./lobject.h:150:36, col:38> 'Table *' lvalue
    `-DeclRefExpr 0x555e97245da0 <ldebug.c:187:26> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
(([B5.6])) (ImplicitCastExpr, LValueToRValue, Table *)
   8: CStyleCastExpr 0x555e97245e60 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x555e97245e48 <col:26, col:30> 'Table *' <LValueToRValue>
  `-ParenExpr 0x555e97245e28 <col:26, col:30> 'Table *' lvalue
    `-ParenExpr 0x555e97245dc8 <./lobject.h:150:36, col:38> 'Table *' lvalue
      `-DeclRefExpr 0x555e97245da0 <ldebug.c:187:26> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
(GCObject *)[B5.7] (CStyleCastExpr, BitCast, GCObject *)
   9: DeclRefExpr 0x555e97245cf0 <./lobject.h:150:5> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x555e97245d18 <./lobject.h:150:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e97245cf0 <col:5> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
[B5.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x555e97245d30 <./lobject.h:150:5, col:10> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97245d18 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e97245cf0 <col:5> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
[B5.10]->value
  12: MemberExpr 0x555e97245d68 <./lobject.h:150:5, col:16> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e97245d30 <col:5, col:10> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97245d18 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x555e97245cf0 <col:5> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
[B5.11].gc
  13: BinaryOperator 0x555e97245ea8 <./lobject.h:150:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x555e97245d68 <./lobject.h:150:5, col:16> 'GCObject *' lvalue .gc 0x555e971cc250
| `-MemberExpr 0x555e97245d30 <col:5, col:10> 'Value':'Value' lvalue ->value 0x555e971cc550
|   `-ImplicitCastExpr 0x555e97245d18 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97245cf0 <col:5> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
`-ParenExpr 0x555e97245e88 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x555e97245e60 <col:23, col:30> 'GCObject *' <BitCast>
    `-ImplicitCastExpr 0x555e97245e48 <col:26, col:30> 'Table *' <LValueToRValue>
      `-ParenExpr 0x555e97245e28 <col:26, col:30> 'Table *' lvalue
        `-ParenExpr 0x555e97245dc8 <./lobject.h:150:36, col:38> 'Table *' lvalue
          `-DeclRefExpr 0x555e97245da0 <ldebug.c:187:26> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
[B5.12] = ([B5.8])
  14: IntegerLiteral 0x555e97245f48 <./lua.h:79:21> 'int' 5
5
  15: DeclRefExpr 0x555e97245ed0 <./lobject.h:150:42> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x555e97245ef8 <./lobject.h:150:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e97245ed0 <col:42> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
[B5.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x555e97245f10 <./lobject.h:150:42, col:47> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e97245ef8 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e97245ed0 <col:42> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
[B5.16]->tt
  18: BinaryOperator 0x555e97245f68 <./lobject.h:150:42, ./lua.h:79:21> 'int' '='
|-MemberExpr 0x555e97245f10 <./lobject.h:150:42, col:47> 'int' lvalue ->tt 0x555e971cc5b0
| `-ImplicitCastExpr 0x555e97245ef8 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97245ed0 <col:42> 'TValue *' lvalue Var 0x555e97245bc8 'i_o' 'TValue *'
`-IntegerLiteral 0x555e97245f48 <./lua.h:79:21> 'int' 5
[B5.17] = [B5.14]
  19: IntegerLiteral 0x555e97245f90 <./llimits.h:62:31> 'int' 0
0
  20: CStyleCastExpr 0x555e97245fc0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x555e97245f90 <col:31> 'int' 0
(void)[B5.19] (CStyleCastExpr, ToVoid, void)
   Preds (1): B8
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x555e97245658 <ldebug.c:185:39> 'int' lvalue Var 0x555e972453f0 'i' 'int'
i
   2: UnaryOperator 0x555e97245680 <ldebug.c:185:39, col:40> 'int' postfix '++'
`-DeclRefExpr 0x555e97245658 <col:39> 'int' lvalue Var 0x555e972453f0 'i' 'int'
[B6.1]++
   Preds (1): B7
   Succs (1): B8

 [B7]
   1: DeclRefExpr 0x555e97245710 <ldebug.c:186:17> 'TValue *(lua_State *, Table *, int)' Function 0x555e97172800 'luaH_setnum' 'TValue *(lua_State *, Table *, int)'
luaH_setnum
   2: ImplicitCastExpr 0x555e97245888 <ldebug.c:186:17> 'TValue *(*)(lua_State *, Table *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97245710 <col:17> 'TValue *(lua_State *, Table *, int)' Function 0x555e97172800 'luaH_setnum' 'TValue *(lua_State *, Table *, int)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, TValue *(*)(lua_State *, Table *, int))
   3: DeclRefExpr 0x555e97245738 <ldebug.c:186:29> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e972458e0 <ldebug.c:186:29> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97245738 <col:29> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x555e97245760 <ldebug.c:186:32> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
t
   6: ImplicitCastExpr 0x555e972458f8 <ldebug.c:186:32> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x555e97245760 <col:32> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
[B7.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: DeclRefExpr 0x555e97245788 <ldebug.c:186:35> 'int *' lvalue Var 0x555e97245248 'lineinfo' 'int *'
lineinfo
   8: ImplicitCastExpr 0x555e972457d8 <ldebug.c:186:35> 'int *' <LValueToRValue>
`-DeclRefExpr 0x555e97245788 <col:35> 'int *' lvalue Var 0x555e97245248 'lineinfo' 'int *'
[B7.7] (ImplicitCastExpr, LValueToRValue, int *)
   9: DeclRefExpr 0x555e972457b0 <ldebug.c:186:44> 'int' lvalue Var 0x555e972453f0 'i' 'int'
i
  10: ImplicitCastExpr 0x555e972457f0 <ldebug.c:186:44> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e972457b0 <col:44> 'int' lvalue Var 0x555e972453f0 'i' 'int'
[B7.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x555e97245808 <ldebug.c:186:35, col:45> 'int' lvalue
|-ImplicitCastExpr 0x555e972457d8 <col:35> 'int *' <LValueToRValue>
| `-DeclRefExpr 0x555e97245788 <col:35> 'int *' lvalue Var 0x555e97245248 'lineinfo' 'int *'
`-ImplicitCastExpr 0x555e972457f0 <col:44> 'int' <LValueToRValue>
  `-DeclRefExpr 0x555e972457b0 <col:44> 'int' lvalue Var 0x555e972453f0 'i' 'int'
[B7.8][[B7.10]]
  12: ImplicitCastExpr 0x555e97245910 <ldebug.c:186:35, col:45> 'int' <LValueToRValue>
`-ArraySubscriptExpr 0x555e97245808 <col:35, col:45> 'int' lvalue
  |-ImplicitCastExpr 0x555e972457d8 <col:35> 'int *' <LValueToRValue>
  | `-DeclRefExpr 0x555e97245788 <col:35> 'int *' lvalue Var 0x555e97245248 'lineinfo' 'int *'
  `-ImplicitCastExpr 0x555e972457f0 <col:44> 'int' <LValueToRValue>
    `-DeclRefExpr 0x555e972457b0 <col:44> 'int' lvalue Var 0x555e972453f0 'i' 'int'
[B7.11] (ImplicitCastExpr, LValueToRValue, int)
  13: CallExpr 0x555e972458a0 <ldebug.c:186:17, col:46> 'TValue *'
|-ImplicitCastExpr 0x555e97245888 <col:17> 'TValue *(*)(lua_State *, Table *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97245710 <col:17> 'TValue *(lua_State *, Table *, int)' Function 0x555e97172800 'luaH_setnum' 'TValue *(lua_State *, Table *, int)'
|-ImplicitCastExpr 0x555e972458e0 <col:29> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e97245738 <col:29> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e972458f8 <col:32> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x555e97245760 <col:32> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
`-ImplicitCastExpr 0x555e97245910 <col:35, col:45> 'int' <LValueToRValue>
  `-ArraySubscriptExpr 0x555e97245808 <col:35, col:45> 'int' lvalue
    |-ImplicitCastExpr 0x555e972457d8 <col:35> 'int *' <LValueToRValue>
    | `-DeclRefExpr 0x555e97245788 <col:35> 'int *' lvalue Var 0x555e97245248 'lineinfo' 'int *'
    `-ImplicitCastExpr 0x555e972457f0 <col:44> 'int' <LValueToRValue>
      `-DeclRefExpr 0x555e972457b0 <col:44> 'int' lvalue Var 0x555e972453f0 'i' 'int'
[B7.2]([B7.4], [B7.6], [B7.12])
  14: DeclStmt 0x555e97245948 <./lobject.h:126:5, col:22>col:13
`-VarDecl 0x555e972456b0 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ParenExpr 0x555e97245928 <col:17, col:21> 'TValue *'
    `-CallExpr 0x555e972458a0 <ldebug.c:186:17, col:46> 'TValue *'
      |-ImplicitCastExpr 0x555e97245888 <col:17> 'TValue *(*)(lua_State *, Table *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x555e97245710 <col:17> 'TValue *(lua_State *, Table *, int)' Function 0x555e97172800 'luaH_setnum' 'TValue *(lua_State *, Table *, int)'
      |-ImplicitCastExpr 0x555e972458e0 <col:29> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x555e97245738 <col:29> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
      |-ImplicitCastExpr 0x555e972458f8 <col:32> 'Table *' <LValueToRValue>
      | `-DeclRefExpr 0x555e97245760 <col:32> 'Table *' lvalue Var 0x555e97245060 't' 'Table *'
      `-ImplicitCastExpr 0x555e97245910 <col:35, col:45> 'int' <LValueToRValue>
        `-ArraySubscriptExpr 0x555e97245808 <col:35, col:45> 'int' lvalue
          |-ImplicitCastExpr 0x555e972457d8 <col:35> 'int *' <LValueToRValue>
          | `-DeclRefExpr 0x555e97245788 <col:35> 'int *' lvalue Var 0x555e97245248 'lineinfo' 'int *'
          `-ImplicitCastExpr 0x555e972457f0 <col:44> 'int' <LValueToRValue>
            `-DeclRefExpr 0x555e972457b0 <col:44> 'int' lvalue Var 0x555e972453f0 'i' 'int'
TValue *i_o = (luaH_setnum(L, t, lineinfo[i]));
  15: IntegerLiteral 0x555e97245a10 <ldebug.c:186:49> 'int' 1
1
  16: DeclRefExpr 0x555e97245960 <./lobject.h:126:24> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
i_o
  17: ImplicitCastExpr 0x555e97245988 <./lobject.h:126:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e97245960 <col:24> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
[B7.16] (ImplicitCastExpr, LValueToRValue, TValue *)
  18: MemberExpr 0x555e972459a0 <./lobject.h:126:24, col:29> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97245988 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e97245960 <col:24> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
[B7.17]->value
  19: MemberExpr 0x555e972459d8 <./lobject.h:126:24, col:35> 'int' lvalue .b 0x555e971cc368
`-MemberExpr 0x555e972459a0 <col:24, col:29> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97245988 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x555e97245960 <col:24> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
[B7.18].b
  20: BinaryOperator 0x555e97245a60 <./lobject.h:126:24, col:39> 'int' '='
|-MemberExpr 0x555e972459d8 <col:24, col:35> 'int' lvalue .b 0x555e971cc368
| `-MemberExpr 0x555e972459a0 <col:24, col:29> 'Value':'Value' lvalue ->value 0x555e971cc550
|   `-ImplicitCastExpr 0x555e97245988 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97245960 <col:24> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
`-ParenExpr 0x555e97245a30 <col:37, col:39> 'int'
  `-IntegerLiteral 0x555e97245a10 <ldebug.c:186:49> 'int' 1
[B7.19] = ([B7.15])
  21: IntegerLiteral 0x555e97245b00 <./lua.h:75:23> 'int' 1
1
  22: DeclRefExpr 0x555e97245a88 <./lobject.h:126:42> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
i_o
  23: ImplicitCastExpr 0x555e97245ab0 <./lobject.h:126:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e97245a88 <col:42> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
[B7.22] (ImplicitCastExpr, LValueToRValue, TValue *)
  24: MemberExpr 0x555e97245ac8 <./lobject.h:126:42, col:47> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e97245ab0 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e97245a88 <col:42> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
[B7.23]->tt
  25: BinaryOperator 0x555e97245b20 <./lobject.h:126:42, ./lua.h:75:23> 'int' '='
|-MemberExpr 0x555e97245ac8 <./lobject.h:126:42, col:47> 'int' lvalue ->tt 0x555e971cc5b0
| `-ImplicitCastExpr 0x555e97245ab0 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x555e97245a88 <col:42> 'TValue *' lvalue Var 0x555e972456b0 'i_o' 'TValue *'
`-IntegerLiteral 0x555e97245b00 <./lua.h:75:23> 'int' 1
[B7.24] = [B7.21]
   Preds (1): B8
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x555e972454d8 <ldebug.c:185:15> 'int' lvalue Var 0x555e972453f0 'i' 'int'
i
   2: ImplicitCastExpr 0x555e97245600 <ldebug.c:185:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e972454d8 <col:15> 'int' lvalue Var 0x555e972453f0 'i' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x555e97245500 <ldebug.c:185:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
f
   4: ImplicitCastExpr 0x555e97245528 <ldebug.c:185:17> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97245500 <col:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B8.3] (ImplicitCastExpr, LValueToRValue, Closure *)
   5: MemberExpr 0x555e97245540 <ldebug.c:185:17, col:20> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ImplicitCastExpr 0x555e97245528 <col:17> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e97245500 <col:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B8.4]->l
   6: MemberExpr 0x555e97245578 <ldebug.c:185:17, col:22> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e97245540 <col:17, col:20> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ImplicitCastExpr 0x555e97245528 <col:17> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x555e97245500 <col:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B8.5].p
   7: ImplicitCastExpr 0x555e972455b0 <ldebug.c:185:17, col:22> 'struct Proto *' <LValueToRValue>
`-MemberExpr 0x555e97245578 <col:17, col:22> 'struct Proto *' lvalue .p 0x555e971db718
  `-MemberExpr 0x555e97245540 <col:17, col:20> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    `-ImplicitCastExpr 0x555e97245528 <col:17> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x555e97245500 <col:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B8.6] (ImplicitCastExpr, LValueToRValue, struct Proto *)
   8: MemberExpr 0x555e972455c8 <ldebug.c:185:17, col:25> 'int' lvalue ->sizelineinfo 0x555e971d9d48
`-ImplicitCastExpr 0x555e972455b0 <col:17, col:22> 'struct Proto *' <LValueToRValue>
  `-MemberExpr 0x555e97245578 <col:17, col:22> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e97245540 <col:17, col:20> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ImplicitCastExpr 0x555e97245528 <col:17> 'Closure *' <LValueToRValue>
        `-DeclRefExpr 0x555e97245500 <col:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B8.7]->sizelineinfo
   9: ImplicitCastExpr 0x555e97245618 <ldebug.c:185:17, col:25> 'int' <LValueToRValue>
`-MemberExpr 0x555e972455c8 <col:17, col:25> 'int' lvalue ->sizelineinfo 0x555e971d9d48
  `-ImplicitCastExpr 0x555e972455b0 <col:17, col:22> 'struct Proto *' <LValueToRValue>
    `-MemberExpr 0x555e97245578 <col:17, col:22> 'struct Proto *' lvalue .p 0x555e971db718
      `-MemberExpr 0x555e97245540 <col:17, col:20> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        `-ImplicitCastExpr 0x555e97245528 <col:17> 'Closure *' <LValueToRValue>
          `-DeclRefExpr 0x555e97245500 <col:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B8.8] (ImplicitCastExpr, LValueToRValue, int)
  10: BinaryOperator 0x555e97245630 <ldebug.c:185:15, col:25> 'int' '<'
|-ImplicitCastExpr 0x555e97245600 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x555e972454d8 <col:15> 'int' lvalue Var 0x555e972453f0 'i' 'int'
`-ImplicitCastExpr 0x555e97245618 <col:17, col:25> 'int' <LValueToRValue>
  `-MemberExpr 0x555e972455c8 <col:17, col:25> 'int' lvalue ->sizelineinfo 0x555e971d9d48
    `-ImplicitCastExpr 0x555e972455b0 <col:17, col:22> 'struct Proto *' <LValueToRValue>
      `-MemberExpr 0x555e97245578 <col:17, col:22> 'struct Proto *' lvalue .p 0x555e971db718
        `-MemberExpr 0x555e97245540 <col:17, col:20> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
          `-ImplicitCastExpr 0x555e97245528 <col:17> 'Closure *' <LValueToRValue>
            `-DeclRefExpr 0x555e97245500 <col:17> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B8.2] < [B8.9]
   T: for (...; [B8.10]; ...)
   Preds (2): B6 B9
   Succs (2): B7 B5

 [B9]
   1: DeclRefExpr 0x555e972450c0 <ldebug.c:182:16> 'Table *(lua_State *, int, int)' Function 0x555e97173780 'luaH_new' 'Table *(lua_State *, int, int)'
luaH_new
   2: ImplicitCastExpr 0x555e972451a8 <ldebug.c:182:16> 'Table *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e972450c0 <col:16> 'Table *(lua_State *, int, int)' Function 0x555e97173780 'luaH_new' 'Table *(lua_State *, int, int)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, Table *(*)(lua_State *, int, int))
   3: DeclRefExpr 0x555e972450e8 <ldebug.c:182:25> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e97245200 <ldebug.c:182:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e972450e8 <col:25> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x555e97245110 <ldebug.c:182:28> 'int' 0
0
   6: IntegerLiteral 0x555e97245130 <ldebug.c:182:31> 'int' 0
0
   7: CallExpr 0x555e972451c0 <ldebug.c:182:16, col:32> 'Table *'
|-ImplicitCastExpr 0x555e972451a8 <col:16> 'Table *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e972450c0 <col:16> 'Table *(lua_State *, int, int)' Function 0x555e97173780 'luaH_new' 'Table *(lua_State *, int, int)'
|-ImplicitCastExpr 0x555e97245200 <col:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e972450e8 <col:25> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
|-IntegerLiteral 0x555e97245110 <col:28> 'int' 0
`-IntegerLiteral 0x555e97245130 <col:31> 'int' 0
[B9.2]([B9.4], [B9.5], [B9.6])
   8: DeclStmt 0x555e97245218 <ldebug.c:182:5, col:33>col:12
`-VarDecl 0x555e97245060 <col:5, col:32> col:12 used t 'Table *' cinit
  `-CallExpr 0x555e972451c0 <col:16, col:32> 'Table *'
    |-ImplicitCastExpr 0x555e972451a8 <col:16> 'Table *(*)(lua_State *, int, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x555e972450c0 <col:16> 'Table *(lua_State *, int, int)' Function 0x555e97173780 'luaH_new' 'Table *(lua_State *, int, int)'
    |-ImplicitCastExpr 0x555e97245200 <col:25> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x555e972450e8 <col:25> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
    |-IntegerLiteral 0x555e97245110 <col:28> 'int' 0
    `-IntegerLiteral 0x555e97245130 <col:31> 'int' 0
Table *t = luaH_new(L, 0, 0);
   9: DeclRefExpr 0x555e972452a8 <ldebug.c:183:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
f
  10: ImplicitCastExpr 0x555e972452d0 <ldebug.c:183:21> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e972452a8 <col:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B9.9] (ImplicitCastExpr, LValueToRValue, Closure *)
  11: MemberExpr 0x555e972452e8 <ldebug.c:183:21, col:24> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ImplicitCastExpr 0x555e972452d0 <col:21> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e972452a8 <col:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B9.10]->l
  12: MemberExpr 0x555e97245320 <ldebug.c:183:21, col:26> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e972452e8 <col:21, col:24> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ImplicitCastExpr 0x555e972452d0 <col:21> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x555e972452a8 <col:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B9.11].p
  13: ImplicitCastExpr 0x555e97245358 <ldebug.c:183:21, col:26> 'struct Proto *' <LValueToRValue>
`-MemberExpr 0x555e97245320 <col:21, col:26> 'struct Proto *' lvalue .p 0x555e971db718
  `-MemberExpr 0x555e972452e8 <col:21, col:24> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    `-ImplicitCastExpr 0x555e972452d0 <col:21> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x555e972452a8 <col:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B9.12] (ImplicitCastExpr, LValueToRValue, struct Proto *)
  14: MemberExpr 0x555e97245370 <ldebug.c:183:21, col:29> 'int *' lvalue ->lineinfo 0x555e971d96c0
`-ImplicitCastExpr 0x555e97245358 <col:21, col:26> 'struct Proto *' <LValueToRValue>
  `-MemberExpr 0x555e97245320 <col:21, col:26> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e972452e8 <col:21, col:24> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ImplicitCastExpr 0x555e972452d0 <col:21> 'Closure *' <LValueToRValue>
        `-DeclRefExpr 0x555e972452a8 <col:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B9.13]->lineinfo
  15: ImplicitCastExpr 0x555e972453a8 <ldebug.c:183:21, col:29> 'int *' <LValueToRValue>
`-MemberExpr 0x555e97245370 <col:21, col:29> 'int *' lvalue ->lineinfo 0x555e971d96c0
  `-ImplicitCastExpr 0x555e97245358 <col:21, col:26> 'struct Proto *' <LValueToRValue>
    `-MemberExpr 0x555e97245320 <col:21, col:26> 'struct Proto *' lvalue .p 0x555e971db718
      `-MemberExpr 0x555e972452e8 <col:21, col:24> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        `-ImplicitCastExpr 0x555e972452d0 <col:21> 'Closure *' <LValueToRValue>
          `-DeclRefExpr 0x555e972452a8 <col:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B9.14] (ImplicitCastExpr, LValueToRValue, int *)
  16: DeclStmt 0x555e972453c0 <ldebug.c:183:5, col:37>col:10
`-VarDecl 0x555e97245248 <col:5, col:29> col:10 used lineinfo 'int *' cinit
  `-ImplicitCastExpr 0x555e972453a8 <col:21, col:29> 'int *' <LValueToRValue>
    `-MemberExpr 0x555e97245370 <col:21, col:29> 'int *' lvalue ->lineinfo 0x555e971d96c0
      `-ImplicitCastExpr 0x555e97245358 <col:21, col:26> 'struct Proto *' <LValueToRValue>
        `-MemberExpr 0x555e97245320 <col:21, col:26> 'struct Proto *' lvalue .p 0x555e971db718
          `-MemberExpr 0x555e972452e8 <col:21, col:24> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
            `-ImplicitCastExpr 0x555e972452d0 <col:21> 'Closure *' <LValueToRValue>
              `-DeclRefExpr 0x555e972452a8 <col:21> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
int *lineinfo = f->l.p->lineinfo;
  17: DeclStmt 0x555e97245450 <ldebug.c:184:5, col:10>col:9
`-VarDecl 0x555e972453f0 <col:5, col:9> col:9 used i 'int'
int i;
  18: IntegerLiteral 0x555e97245490 <ldebug.c:185:12> 'int' 0
0
  19: DeclRefExpr 0x555e97245468 <ldebug.c:185:10> 'int' lvalue Var 0x555e972453f0 'i' 'int'
i
  20: BinaryOperator 0x555e972454b0 <ldebug.c:185:10, col:12> 'int' '='
|-DeclRefExpr 0x555e97245468 <col:10> 'int' lvalue Var 0x555e972453f0 'i' 'int'
`-IntegerLiteral 0x555e97245490 <col:12> 'int' 0
[B9.19] = [B9.18]
   Preds (1): B11
   Succs (1): B8

 [B10]
   1: IntegerLiteral 0x555e97244fd0 <./lua.h:74:19> 'int' 0
0
   2: DeclRefExpr 0x555e97244ee8 <ldebug.c:179:17> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
L
   3: ImplicitCastExpr 0x555e97244f10 <ldebug.c:179:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97244ee8 <col:17> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B10.2] (ImplicitCastExpr, LValueToRValue, lua_State *)
   4: MemberExpr 0x555e97244f28 <ldebug.c:179:17, col:20> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e97244f10 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97244ee8 <col:17> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B10.3]->top
   5: ImplicitCastExpr 0x555e97244f80 <./lobject.h:117:27, col:31> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97244f60 <col:27, col:31> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97244f28 <ldebug.c:179:17, col:20> 'StkId':'TValue *' lvalue ->top 0x555e97213368
    `-ImplicitCastExpr 0x555e97244f10 <col:17> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e97244ee8 <col:17> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
([B10.4]) (ImplicitCastExpr, LValueToRValue, StkId)
   6: MemberExpr 0x555e97244f98 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e97244f80 <col:27, col:31> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97244f60 <col:27, col:31> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97244f28 <ldebug.c:179:17, col:20> 'StkId':'TValue *' lvalue ->top 0x555e97213368
      `-ImplicitCastExpr 0x555e97244f10 <col:17> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x555e97244ee8 <col:17> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
[B10.5]->tt
   7: BinaryOperator 0x555e97244ff0 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x555e97244f98 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x555e971cc5b0
| `-ImplicitCastExpr 0x555e97244f80 <col:27, col:31> 'StkId':'TValue *' <LValueToRValue>
|   `-ParenExpr 0x555e97244f60 <col:27, col:31> 'StkId':'TValue *' lvalue
|     `-MemberExpr 0x555e97244f28 <ldebug.c:179:17, col:20> 'StkId':'TValue *' lvalue ->top 0x555e97213368
|       `-ImplicitCastExpr 0x555e97244f10 <col:17> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x555e97244ee8 <col:17> 'lua_State *' lvalue ParmVar 0x555e97244b30 'L' 'lua_State *'
`-IntegerLiteral 0x555e97244fd0 <./lua.h:74:19> 'int' 0
[B10.6] = [B10.1]
   Preds (2): B11 B12
   Succs (1): B4

 [B11]
   1: DeclRefExpr 0x555e97244de0 <ldebug.c:178:20> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
f
   2: ImplicitCastExpr 0x555e97244e08 <ldebug.c:178:20> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97244de0 <col:20> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B11.1] (ImplicitCastExpr, LValueToRValue, Closure *)
   3: MemberExpr 0x555e97244e20 <ldebug.c:178:20, col:23> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
`-ImplicitCastExpr 0x555e97244e08 <col:20> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e97244de0 <col:20> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B11.2]->c
   4: MemberExpr 0x555e97244e58 <ldebug.c:178:20, col:25> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
`-MemberExpr 0x555e97244e20 <col:20, col:23> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
  `-ImplicitCastExpr 0x555e97244e08 <col:20> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x555e97244de0 <col:20> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B11.3].isC
   5: ImplicitCastExpr 0x555e97244e90 <ldebug.c:178:20, col:25> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x555e97244e58 <col:20, col:25> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
  `-MemberExpr 0x555e97244e20 <col:20, col:23> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
    `-ImplicitCastExpr 0x555e97244e08 <col:20> 'Closure *' <LValueToRValue>
      `-DeclRefExpr 0x555e97244de0 <col:20> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B11.4] (ImplicitCastExpr, LValueToRValue, lu_byte)
   6: ImplicitCastExpr 0x555e97244ea8 <ldebug.c:178:20, col:25> 'int' <IntegralCast>
`-ImplicitCastExpr 0x555e97244e90 <col:20, col:25> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x555e97244e58 <col:20, col:25> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
    `-MemberExpr 0x555e97244e20 <col:20, col:23> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
      `-ImplicitCastExpr 0x555e97244e08 <col:20> 'Closure *' <LValueToRValue>
        `-DeclRefExpr 0x555e97244de0 <col:20> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B11.5] (ImplicitCastExpr, IntegralCast, int)
   T: if [B12.6] || [B11.6]
   Preds (1): B12
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x555e97244ce0 <ldebug.c:178:7> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
f
   2: ImplicitCastExpr 0x555e97244d88 <ldebug.c:178:7> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97244ce0 <col:7> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
[B12.1] (ImplicitCastExpr, LValueToRValue, Closure *)
   3: IntegerLiteral 0x555e97244d08 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x555e97244d40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e97244d08 <col:24> 'int' 0
(void *)[B12.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x555e97244da0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Closure *' <BitCast>
`-ParenExpr 0x555e97244d68 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e97244d40 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e97244d08 <col:24> 'int' 0
([B12.4]) (ImplicitCastExpr, BitCast, Closure *)
   6: BinaryOperator 0x555e97244db8 <ldebug.c:178:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x555e97244d88 <ldebug.c:178:7> 'Closure *' <LValueToRValue>
| `-DeclRefExpr 0x555e97244ce0 <col:7> 'Closure *' lvalue ParmVar 0x555e97244ba0 'f' 'Closure *'
`-ImplicitCastExpr 0x555e97244da0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Closure *' <BitCast>
  `-ParenExpr 0x555e97244d68 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x555e97244d40 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x555e97244d08 <col:24> 'int' 0
[B12.2] == [B12.5]
   T: [B12.6] || ...
   Preds (1): B13
   Succs (2): B10 B11

 [B0 (EXIT)]
   Preds (1): B1
