static int iscleared(const TValue *o, int iskey)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: BinaryOperator 0x55ef1b1f0e10 <./lgc.h:29:23, lgc.c:344:59> 'int' '||'
|-ParenExpr 0x55ef1b1f0838 <./lgc.h:29:23, col:33> 'int'
| `-BinaryOperator 0x55ef1b1f0810 <col:24, col:32> 'int' '&'
|   |-ImplicitCastExpr 0x55ef1b1f07f8 <col:24, col:26> 'int' <IntegralCast>
|   | `-ImplicitCastExpr 0x55ef1b1f07e0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-ParenExpr 0x55ef1b1f05e8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|   |     `-MemberExpr 0x55ef1b1f05b0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|   |       `-MemberExpr 0x55ef1b1f0578 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|   |         `-ImplicitCastExpr 0x55ef1b1f0560 <col:35, col:37> 'GCObject *' <LValueToRValue>
|   |           `-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
|   |             `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
|   |               `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|   |                 `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|   |                   `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
|   |                     `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
|   |                       `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
|   `-ParenExpr 0x55ef1b1f07c0 <./lgc.h:29:30, col:32> 'int'
|     `-ParenExpr 0x55ef1b1f07a0 <line:37:40, col:57> 'int'
|       `-ParenExpr 0x55ef1b1f0780 <line:31:25, col:51> 'int'
|         `-BinaryOperator 0x55ef1b1f0758 <line:30:20, col:27> 'int' '|'
|           |-ParenExpr 0x55ef1b1f0690 <col:20, col:27> 'int'
|           | `-BinaryOperator 0x55ef1b1f0668 <col:21, col:26> 'int' '<<'
|           |   |-IntegerLiteral 0x55ef1b1f0608 <col:21> 'int' 1
|           |   `-ParenExpr 0x55ef1b1f0648 <col:24, col:26> 'int'
|           |     `-IntegerLiteral 0x55ef1b1f0628 <line:54:19> 'int' 0
|           `-ParenExpr 0x55ef1b1f0738 <line:30:20, col:27> 'int'
|             `-BinaryOperator 0x55ef1b1f0710 <col:21, col:26> 'int' '<<'
|               |-IntegerLiteral 0x55ef1b1f06b0 <col:21> 'int' 1
|               `-ParenExpr 0x55ef1b1f06f0 <col:24, col:26> 'int'
|                 `-IntegerLiteral 0x55ef1b1f06d0 <line:55:19> 'int' 1
`-ParenExpr 0x55ef1b1f0df0 <lgc.c:344:5, col:59> 'int'
  `-BinaryOperator 0x55ef1b1f0dc8 <./lobject.h:85:25, lgc.c:344:58> 'int' '&&'
    |-ParenExpr 0x55ef1b1f0970 <./lobject.h:85:25, col:51> 'int'
    | `-BinaryOperator 0x55ef1b1f0948 <line:90:18, ./lua.h:81:24> 'int' '=='
    |   |-ImplicitCastExpr 0x55ef1b1f0930 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   | `-ParenExpr 0x55ef1b1f08f0 <col:18, col:26> 'const int' lvalue
    |   |   `-MemberExpr 0x55ef1b1f08b8 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
    |   |     `-ImplicitCastExpr 0x55ef1b1f08a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
    |   |       `-ParenExpr 0x55ef1b1f0880 <col:19, col:21> 'const TValue *' lvalue
    |   |         `-DeclRefExpr 0x55ef1b1f0858 <lgc.c:344:19> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
    |   `-IntegerLiteral 0x55ef1b1f0910 <./lua.h:81:24> 'int' 7
    `-ParenExpr 0x55ef1b1f0da8 <lgc.c:344:25, col:58> 'int'
      `-BinaryOperator 0x55ef1b1f0d80 <col:26, ./lgc.h:29:33> 'int' '&&'
        |-UnaryOperator 0x55ef1b1f09d0 <lgc.c:344:26, col:27> 'int' prefix '!'
        | `-ImplicitCastExpr 0x55ef1b1f09b8 <col:27> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x55ef1b1f0990 <col:27> 'int' lvalue ParmVar 0x55ef1b1ef8a0 'iskey' 'int'
        `-ParenExpr 0x55ef1b1f0d60 <./lgc.h:29:23, col:33> 'int'
          `-BinaryOperator 0x55ef1b1f0d38 <col:24, col:32> 'int' '&'
            |-ImplicitCastExpr 0x55ef1b1f0d20 <col:24, col:26> 'int' <IntegralCast>
            | `-ImplicitCastExpr 0x55ef1b1f0d08 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
            |   `-ParenExpr 0x55ef1b1f0c20 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
            |     `-MemberExpr 0x55ef1b1f0be8 <lgc.c:43:33, col:38> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b18bb10
            |       `-ParenExpr 0x55ef1b1f0bc8 <col:33, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *'
            |         `-ParenExpr 0x55ef1b1f0ba8 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
            |           `-UnaryOperator 0x55ef1b1f0b88 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
            |             `-MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
            |               `-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
            |                 `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
            |                   `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
            |                     `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
            |                       `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
            |                         `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
            |                           `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
            |                             `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
            |                               `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
            `-ParenExpr 0x55ef1b1f0ce8 <./lgc.h:29:30, col:32> 'int'
              `-ParenExpr 0x55ef1b1f0cc8 <line:30:20, col:27> 'int'
                `-BinaryOperator 0x55ef1b1f0ca0 <col:21, col:26> 'int' '<<'
                  |-IntegerLiteral 0x55ef1b1f0c40 <col:21> 'int' 1
                  `-ParenExpr 0x55ef1b1f0c80 <col:24, col:26> 'int'
                    `-IntegerLiteral 0x55ef1b1f0c60 <line:57:22> 'int' 3
([B5.17]) || (([B4.6]) && ([B3.3] && ([B2.16])))
   2: ReturnStmt 0x55ef1b1f0e38 <lgc.c:343:3, line:344:59>
`-BinaryOperator 0x55ef1b1f0e10 <./lgc.h:29:23, lgc.c:344:59> 'int' '||'
  |-ParenExpr 0x55ef1b1f0838 <./lgc.h:29:23, col:33> 'int'
  | `-BinaryOperator 0x55ef1b1f0810 <col:24, col:32> 'int' '&'
  |   |-ImplicitCastExpr 0x55ef1b1f07f8 <col:24, col:26> 'int' <IntegralCast>
  |   | `-ImplicitCastExpr 0x55ef1b1f07e0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  |   |   `-ParenExpr 0x55ef1b1f05e8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  |   |     `-MemberExpr 0x55ef1b1f05b0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
  |   |       `-MemberExpr 0x55ef1b1f0578 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  |   |         `-ImplicitCastExpr 0x55ef1b1f0560 <col:35, col:37> 'GCObject *' <LValueToRValue>
  |   |           `-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
  |   |             `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
  |   |               `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
  |   |                 `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
  |   |                   `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
  |   |                     `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
  |   |                       `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
  |   `-ParenExpr 0x55ef1b1f07c0 <./lgc.h:29:30, col:32> 'int'
  |     `-ParenExpr 0x55ef1b1f07a0 <line:37:40, col:57> 'int'
  |       `-ParenExpr 0x55ef1b1f0780 <line:31:25, col:51> 'int'
  |         `-BinaryOperator 0x55ef1b1f0758 <line:30:20, col:27> 'int' '|'
  |           |-ParenExpr 0x55ef1b1f0690 <col:20, col:27> 'int'
  |           | `-BinaryOperator 0x55ef1b1f0668 <col:21, col:26> 'int' '<<'
  |           |   |-IntegerLiteral 0x55ef1b1f0608 <col:21> 'int' 1
  |           |   `-ParenExpr 0x55ef1b1f0648 <col:24, col:26> 'int'
  |           |     `-IntegerLiteral 0x55ef1b1f0628 <line:54:19> 'int' 0
  |           `-ParenExpr 0x55ef1b1f0738 <line:30:20, col:27> 'int'
  |             `-BinaryOperator 0x55ef1b1f0710 <col:21, col:26> 'int' '<<'
  |               |-IntegerLiteral 0x55ef1b1f06b0 <col:21> 'int' 1
  |               `-ParenExpr 0x55ef1b1f06f0 <col:24, col:26> 'int'
  |                 `-IntegerLiteral 0x55ef1b1f06d0 <line:55:19> 'int' 1
  `-ParenExpr 0x55ef1b1f0df0 <lgc.c:344:5, col:59> 'int'
    `-BinaryOperator 0x55ef1b1f0dc8 <./lobject.h:85:25, lgc.c:344:58> 'int' '&&'
      |-ParenExpr 0x55ef1b1f0970 <./lobject.h:85:25, col:51> 'int'
      | `-BinaryOperator 0x55ef1b1f0948 <line:90:18, ./lua.h:81:24> 'int' '=='
      |   |-ImplicitCastExpr 0x55ef1b1f0930 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
      |   | `-ParenExpr 0x55ef1b1f08f0 <col:18, col:26> 'const int' lvalue
      |   |   `-MemberExpr 0x55ef1b1f08b8 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
      |   |     `-ImplicitCastExpr 0x55ef1b1f08a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      |   |       `-ParenExpr 0x55ef1b1f0880 <col:19, col:21> 'const TValue *' lvalue
      |   |         `-DeclRefExpr 0x55ef1b1f0858 <lgc.c:344:19> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
      |   `-IntegerLiteral 0x55ef1b1f0910 <./lua.h:81:24> 'int' 7
      `-ParenExpr 0x55ef1b1f0da8 <lgc.c:344:25, col:58> 'int'
        `-BinaryOperator 0x55ef1b1f0d80 <col:26, ./lgc.h:29:33> 'int' '&&'
          |-UnaryOperator 0x55ef1b1f09d0 <lgc.c:344:26, col:27> 'int' prefix '!'
          | `-ImplicitCastExpr 0x55ef1b1f09b8 <col:27> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x55ef1b1f0990 <col:27> 'int' lvalue ParmVar 0x55ef1b1ef8a0 'iskey' 'int'
          `-ParenExpr 0x55ef1b1f0d60 <./lgc.h:29:23, col:33> 'int'
            `-BinaryOperator 0x55ef1b1f0d38 <col:24, col:32> 'int' '&'
              |-ImplicitCastExpr 0x55ef1b1f0d20 <col:24, col:26> 'int' <IntegralCast>
              | `-ImplicitCastExpr 0x55ef1b1f0d08 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
              |   `-ParenExpr 0x55ef1b1f0c20 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
              |     `-MemberExpr 0x55ef1b1f0be8 <lgc.c:43:33, col:38> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b18bb10
              |       `-ParenExpr 0x55ef1b1f0bc8 <col:33, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *'
              |         `-ParenExpr 0x55ef1b1f0ba8 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
              |           `-UnaryOperator 0x55ef1b1f0b88 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
              |             `-MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
              |               `-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
              |                 `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
              |                   `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
              |                     `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
              |                       `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
              |                         `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
              |                           `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
              |                             `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
              |                               `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
              `-ParenExpr 0x55ef1b1f0ce8 <./lgc.h:29:30, col:32> 'int'
                `-ParenExpr 0x55ef1b1f0cc8 <line:30:20, col:27> 'int'
                  `-BinaryOperator 0x55ef1b1f0ca0 <col:21, col:26> 'int' '<<'
                    |-IntegerLiteral 0x55ef1b1f0c40 <col:21> 'int' 1
                    `-ParenExpr 0x55ef1b1f0c80 <col:24, col:26> 'int'
                      `-IntegerLiteral 0x55ef1b1f0c60 <line:57:22> 'int' 3
return [B1.1];
   Preds (4): B2 B3 B4 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
o
   2: ImplicitCastExpr 0x55ef1b1f0a38 <./lobject.h:96:50, col:52> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B2.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x55ef1b1f0a50 <./lobject.h:96:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B2.2]->value
   4: MemberExpr 0x55ef1b1f0a88 <./lobject.h:96:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
      `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B2.3].gc
   5: ImplicitCastExpr 0x55ef1b1f0ac0 <./lobject.h:96:50, col:61> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
  `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B2.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x55ef1b1f0ad8 <./lobject.h:96:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
`-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
      `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
          `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B2.5]->u
   7: UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
`-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
  `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
            `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
&[B2.6]
   8: MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
`-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
  `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
    `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
      `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
            `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
                `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B2.7])->uv
   9: UnaryOperator 0x55ef1b1f0b88 <./lobject.h:97:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
`-MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
  `-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
    `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
      `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
        `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
            `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
              `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
                  `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
&[B2.8]
  10: MemberExpr 0x55ef1b1f0be8 <lgc.c:43:33, col:38> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b18bb10
`-ParenExpr 0x55ef1b1f0bc8 <col:33, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *'
  `-ParenExpr 0x55ef1b1f0ba8 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
    `-UnaryOperator 0x55ef1b1f0b88 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
      `-MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
        `-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
          `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
            `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
              `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
                  `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
                    `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
                      `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
                        `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
(([B2.9]))->marked
  11: ImplicitCastExpr 0x55ef1b1f0d08 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1f0c20 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1f0be8 <lgc.c:43:33, col:38> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b18bb10
    `-ParenExpr 0x55ef1b1f0bc8 <col:33, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *'
      `-ParenExpr 0x55ef1b1f0ba8 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
        `-UnaryOperator 0x55ef1b1f0b88 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
          `-MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
            `-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
              `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
                `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
                  `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
                      `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
                        `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
                          `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
                            `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B2.10]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  12: ImplicitCastExpr 0x55ef1b1f0d20 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1f0d08 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1f0c20 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1f0be8 <lgc.c:43:33, col:38> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b18bb10
      `-ParenExpr 0x55ef1b1f0bc8 <col:33, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *'
        `-ParenExpr 0x55ef1b1f0ba8 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
          `-UnaryOperator 0x55ef1b1f0b88 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
            `-MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
              `-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
                `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
                  `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
                    `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
                      `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
                        `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
                          `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
                            `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
                              `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B2.11] (ImplicitCastExpr, IntegralCast, int)
  13: IntegerLiteral 0x55ef1b1f0c40 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x55ef1b1f0c60 <./lgc.h:57:22> 'int' 3
3
  15: BinaryOperator 0x55ef1b1f0ca0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1f0c40 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1f0c80 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1f0c60 <line:57:22> 'int' 3
[B2.13] << ([B2.14])
  16: BinaryOperator 0x55ef1b1f0d38 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1f0d20 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1f0d08 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1f0c20 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1f0be8 <lgc.c:43:33, col:38> 'lu_byte':'unsigned char' lvalue ->marked 0x55ef1b18bb10
|       `-ParenExpr 0x55ef1b1f0bc8 <col:33, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *'
|         `-ParenExpr 0x55ef1b1f0ba8 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
|           `-UnaryOperator 0x55ef1b1f0b88 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
|             `-MemberExpr 0x55ef1b1f0b50 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x55ef1b18be20
|               `-ParenExpr 0x55ef1b1f0b30 <./llimits.h:63:25, col:27> 'union Udata *'
|                 `-UnaryOperator 0x55ef1b1f0b10 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
|                   `-MemberExpr 0x55ef1b1f0ad8 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x55ef1b1a2ca0
|                     `-ImplicitCastExpr 0x55ef1b1f0ac0 <col:50, col:61> 'GCObject *' <LValueToRValue>
|                       `-MemberExpr 0x55ef1b1f0a88 <col:50, col:61> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|                         `-MemberExpr 0x55ef1b1f0a50 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|                           `-ImplicitCastExpr 0x55ef1b1f0a38 <col:50, col:52> 'const TValue *' <LValueToRValue>
|                             `-ParenExpr 0x55ef1b1f0a18 <col:50, col:52> 'const TValue *' lvalue
|                               `-DeclRefExpr 0x55ef1b1f09f0 <lgc.c:344:55> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
`-ParenExpr 0x55ef1b1f0ce8 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1f0cc8 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x55ef1b1f0ca0 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x55ef1b1f0c40 <col:21> 'int' 1
      `-ParenExpr 0x55ef1b1f0c80 <col:24, col:26> 'int'
        `-IntegerLiteral 0x55ef1b1f0c60 <line:57:22> 'int' 3
[B2.12] & (([B2.15]))
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55ef1b1f0990 <lgc.c:344:27> 'int' lvalue ParmVar 0x55ef1b1ef8a0 'iskey' 'int'
iskey
   2: ImplicitCastExpr 0x55ef1b1f09b8 <lgc.c:344:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1f0990 <col:27> 'int' lvalue ParmVar 0x55ef1b1ef8a0 'iskey' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x55ef1b1f09d0 <lgc.c:344:26, col:27> 'int' prefix '!'
`-ImplicitCastExpr 0x55ef1b1f09b8 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1f0990 <col:27> 'int' lvalue ParmVar 0x55ef1b1ef8a0 'iskey' 'int'
![B3.2]
   T: [B3.3] && ...
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55ef1b1f0858 <lgc.c:344:19> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
o
   2: ImplicitCastExpr 0x55ef1b1f08a0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1f0880 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1f0858 <lgc.c:344:19> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x55ef1b1f08b8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
`-ImplicitCastExpr 0x55ef1b1f08a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1f0880 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1f0858 <lgc.c:344:19> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B4.2]->tt
   4: ImplicitCastExpr 0x55ef1b1f0930 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1f08f0 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x55ef1b1f08b8 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
    `-ImplicitCastExpr 0x55ef1b1f08a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1f0880 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1f0858 <lgc.c:344:19> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55ef1b1f0910 <./lua.h:81:24> 'int' 7
7
   6: BinaryOperator 0x55ef1b1f0948 <./lobject.h:90:18, ./lua.h:81:24> 'int' '=='
|-ImplicitCastExpr 0x55ef1b1f0930 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1f08f0 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x55ef1b1f08b8 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
|     `-ImplicitCastExpr 0x55ef1b1f08a0 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1f0880 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x55ef1b1f0858 <lgc.c:344:19> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
`-IntegerLiteral 0x55ef1b1f0910 <./lua.h:81:24> 'int' 7
[B4.4] == [B4.5]
   T: ([B4.6]) && ...
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
o
   2: ImplicitCastExpr 0x55ef1b1f0498 <./lobject.h:91:48, col:50> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x55ef1b1f04b0 <./lobject.h:91:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B5.2]->value
   4: MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
      `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B5.3].gc
   5: ImplicitCastExpr 0x55ef1b1f0560 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
  `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
    `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
            `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
(([B5.4])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x55ef1b1f0578 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1f0560 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
    `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
      `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
        `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
          `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
              `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B5.5]->gch
   7: MemberExpr 0x55ef1b1f05b0 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1f0578 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1f0560 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
      `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
        `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
            `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
                `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B5.6].marked
   8: ImplicitCastExpr 0x55ef1b1f07e0 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1f05e8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1f05b0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1f0578 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b1f0560 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
          `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
            `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
                `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
                    `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B5.7]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   9: ImplicitCastExpr 0x55ef1b1f07f8 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1f07e0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1f05e8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1f05b0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b1f0578 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b1f0560 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
            `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
              `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
                `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
                  `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
                    `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
                      `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B5.8] (ImplicitCastExpr, IntegralCast, int)
  10: IntegerLiteral 0x55ef1b1f0608 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x55ef1b1f0628 <./lgc.h:54:19> 'int' 0
0
  12: BinaryOperator 0x55ef1b1f0668 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1f0608 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1f0648 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1f0628 <line:54:19> 'int' 0
[B5.10] << ([B5.11])
  13: IntegerLiteral 0x55ef1b1f06b0 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x55ef1b1f06d0 <./lgc.h:55:19> 'int' 1
1
  15: BinaryOperator 0x55ef1b1f0710 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1f06b0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1f06f0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1f06d0 <line:55:19> 'int' 1
[B5.13] << ([B5.14])
  16: BinaryOperator 0x55ef1b1f0758 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1f0690 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1f0668 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1f0608 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1f0648 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1f0628 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1f0738 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1f0710 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1f06b0 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1f06f0 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1f06d0 <line:55:19> 'int' 1
([B5.12]) | ([B5.15])
  17: BinaryOperator 0x55ef1b1f0810 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1f07f8 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1f07e0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1f05e8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1f05b0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b1f0578 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b1f0560 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b1f0540 <col:35, col:37> 'GCObject *const' lvalue
|             `-ParenExpr 0x55ef1b1f0520 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
|               `-MemberExpr 0x55ef1b1f04e8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b1f04b0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|                   `-ImplicitCastExpr 0x55ef1b1f0498 <col:48, col:50> 'const TValue *' <LValueToRValue>
|                     `-ParenExpr 0x55ef1b1f0478 <col:48, col:50> 'const TValue *' lvalue
|                       `-DeclRefExpr 0x55ef1b1f0450 <lgc.c:343:26> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
`-ParenExpr 0x55ef1b1f07c0 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1f07a0 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b1f0780 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1f0758 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1f0690 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1f0668 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1f0608 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1f0648 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1f0628 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1f0738 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1f0710 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1f06b0 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1f06f0 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1f06d0 <line:55:19> 'int' 1
[B5.9] & ((([B5.16])))
   T: ([B5.17]) || ...
   Preds (1): B7
   Succs (2): B1 B4

 [B6]
   1: DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
o
   2: ImplicitCastExpr 0x55ef1b1efdb0 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x55ef1b1efdc8 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B6.2]->value
   4: MemberExpr 0x55ef1b1efe00 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1efdc8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B6.3].gc
   5: ImplicitCastExpr 0x55ef1b1efe38 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1efe00 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
  `-MemberExpr 0x55ef1b1efdc8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
    `-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B6.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x55ef1b1efe50 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
`-ImplicitCastExpr 0x55ef1b1efe38 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b1efe00 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1efdc8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
      `-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B6.5]->ts
   7: UnaryOperator 0x55ef1b1efe88 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x55ef1b1efe50 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
  `-ImplicitCastExpr 0x55ef1b1efe38 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55ef1b1efe00 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1efdc8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
&[B6.6]
   8: MemberExpr 0x55ef1b1efee8 <lgc.c:40:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
`-ParenExpr 0x55ef1b1efec8 <col:34, col:36> 'union TString *'
  `-ParenExpr 0x55ef1b1efea8 <./llimits.h:63:25, col:27> 'union TString *'
    `-UnaryOperator 0x55ef1b1efe88 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x55ef1b1efe50 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
        `-ImplicitCastExpr 0x55ef1b1efe38 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x55ef1b1efe00 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
            `-MemberExpr 0x55ef1b1efdc8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
              `-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
                  `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
(([B6.7]))->tsv
   9: MemberExpr 0x55ef1b1eff20 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
`-MemberExpr 0x55ef1b1efee8 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
  `-ParenExpr 0x55ef1b1efec8 <col:34, col:36> 'union TString *'
    `-ParenExpr 0x55ef1b1efea8 <./llimits.h:63:25, col:27> 'union TString *'
      `-UnaryOperator 0x55ef1b1efe88 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
        `-MemberExpr 0x55ef1b1efe50 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
          `-ImplicitCastExpr 0x55ef1b1efe38 <col:49, col:60> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x55ef1b1efe00 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b1efdc8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
                `-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
                    `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B6.8].marked
  10: IntegerLiteral 0x55ef1b1eff78 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x55ef1b1eff98 <./lgc.h:54:19> 'int' 0
0
  12: BinaryOperator 0x55ef1b1effd8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1eff78 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1effb8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1eff98 <line:54:19> 'int' 0
[B6.10] << ([B6.11])
  13: IntegerLiteral 0x55ef1b1f0020 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x55ef1b1f0040 <./lgc.h:55:19> 'int' 1
1
  15: BinaryOperator 0x55ef1b1f0080 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1f0020 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1f0060 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1f0040 <line:55:19> 'int' 1
[B6.13] << ([B6.14])
  16: BinaryOperator 0x55ef1b1f00c8 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1f0000 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1effd8 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1eff78 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1effb8 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1eff98 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1f00a8 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1f0080 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1f0020 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1f0060 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1f0040 <line:55:19> 'int' 1
([B6.12]) | ([B6.15])
  17: UnaryOperator 0x55ef1b1f0150 <./lgc.h:27:46, col:49> 'int' prefix '~'
`-ParenExpr 0x55ef1b1f0130 <col:47, col:49> 'int'
  `-ParenExpr 0x55ef1b1f0110 <line:36:42, col:59> 'int'
    `-ParenExpr 0x55ef1b1f00f0 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1f00c8 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1f0000 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1effd8 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1eff78 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1effb8 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1eff98 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1f00a8 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1f0080 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1f0020 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1f0060 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1f0040 <line:55:19> 'int' 1
~((([B6.16])))
  18: CStyleCastExpr 0x55ef1b1f01d0 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1f01b0 <col:26, col:30> 'int'
  `-UnaryOperator 0x55ef1b1f0150 <./lgc.h:27:46, col:49> 'int' prefix '~'
    `-ParenExpr 0x55ef1b1f0130 <col:47, col:49> 'int'
      `-ParenExpr 0x55ef1b1f0110 <line:36:42, col:59> 'int'
        `-ParenExpr 0x55ef1b1f00f0 <line:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b1f00c8 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b1f0000 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b1effd8 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b1eff78 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b1effb8 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b1eff98 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b1f00a8 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b1f0080 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b1f0020 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b1f0060 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b1f0040 <line:55:19> 'int' 1
(lu_byte)([B6.17]) (CStyleCastExpr, IntegralCast, lu_byte)
  19: ImplicitCastExpr 0x55ef1b1f0350 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b1f0330 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1f01d0 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1f01b0 <col:26, col:30> 'int'
      `-UnaryOperator 0x55ef1b1f0150 <./lgc.h:27:46, col:49> 'int' prefix '~'
        `-ParenExpr 0x55ef1b1f0130 <col:47, col:49> 'int'
          `-ParenExpr 0x55ef1b1f0110 <line:36:42, col:59> 'int'
            `-ParenExpr 0x55ef1b1f00f0 <line:31:25, col:51> 'int'
              `-BinaryOperator 0x55ef1b1f00c8 <line:30:20, col:27> 'int' '|'
                |-ParenExpr 0x55ef1b1f0000 <col:20, col:27> 'int'
                | `-BinaryOperator 0x55ef1b1effd8 <col:21, col:26> 'int' '<<'
                |   |-IntegerLiteral 0x55ef1b1eff78 <col:21> 'int' 1
                |   `-ParenExpr 0x55ef1b1effb8 <col:24, col:26> 'int'
                |     `-IntegerLiteral 0x55ef1b1eff98 <line:54:19> 'int' 0
                `-ParenExpr 0x55ef1b1f00a8 <line:30:20, col:27> 'int'
                  `-BinaryOperator 0x55ef1b1f0080 <col:21, col:26> 'int' '<<'
                    |-IntegerLiteral 0x55ef1b1f0020 <col:21> 'int' 1
                    `-ParenExpr 0x55ef1b1f0060 <col:24, col:26> 'int'
                      `-IntegerLiteral 0x55ef1b1f0040 <line:55:19> 'int' 1
([B6.18]) (ImplicitCastExpr, IntegralCast, int)
  20: CompoundAssignOperator 0x55ef1b1f0368 <./lgc.h:27:25, ./llimits.h:75:31> 'lu_byte':'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|-ParenExpr 0x55ef1b1eff58 <./lgc.h:27:25, col:27> 'lu_byte':'unsigned char' lvalue
| `-MemberExpr 0x55ef1b1eff20 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
|   `-MemberExpr 0x55ef1b1efee8 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
|     `-ParenExpr 0x55ef1b1efec8 <col:34, col:36> 'union TString *'
|       `-ParenExpr 0x55ef1b1efea8 <./llimits.h:63:25, col:27> 'union TString *'
|         `-UnaryOperator 0x55ef1b1efe88 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|           `-MemberExpr 0x55ef1b1efe50 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55ef1b1a2c38
|             `-ImplicitCastExpr 0x55ef1b1efe38 <col:49, col:60> 'GCObject *' <LValueToRValue>
|               `-MemberExpr 0x55ef1b1efe00 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b1efdc8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55ef1b17f210
|                   `-ImplicitCastExpr 0x55ef1b1efdb0 <col:49, col:51> 'const TValue *' <LValueToRValue>
|                     `-ParenExpr 0x55ef1b1efd90 <col:49, col:51> 'const TValue *' lvalue
|                       `-DeclRefExpr 0x55ef1b1efd68 <lgc.c:340:27> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
`-ImplicitCastExpr 0x55ef1b1f0350 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b1f0330 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b1f01d0 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b1f01b0 <col:26, col:30> 'int'
        `-UnaryOperator 0x55ef1b1f0150 <./lgc.h:27:46, col:49> 'int' prefix '~'
          `-ParenExpr 0x55ef1b1f0130 <col:47, col:49> 'int'
            `-ParenExpr 0x55ef1b1f0110 <line:36:42, col:59> 'int'
              `-ParenExpr 0x55ef1b1f00f0 <line:31:25, col:51> 'int'
                `-BinaryOperator 0x55ef1b1f00c8 <line:30:20, col:27> 'int' '|'
                  |-ParenExpr 0x55ef1b1f0000 <col:20, col:27> 'int'
                  | `-BinaryOperator 0x55ef1b1effd8 <col:21, col:26> 'int' '<<'
                  |   |-IntegerLiteral 0x55ef1b1eff78 <col:21> 'int' 1
                  |   `-ParenExpr 0x55ef1b1effb8 <col:24, col:26> 'int'
                  |     `-IntegerLiteral 0x55ef1b1eff98 <line:54:19> 'int' 0
                  `-ParenExpr 0x55ef1b1f00a8 <line:30:20, col:27> 'int'
                    `-BinaryOperator 0x55ef1b1f0080 <col:21, col:26> 'int' '<<'
                      |-IntegerLiteral 0x55ef1b1f0020 <col:21> 'int' 1
                      `-ParenExpr 0x55ef1b1f0060 <col:24, col:26> 'int'
                        `-IntegerLiteral 0x55ef1b1f0040 <line:55:19> 'int' 1
([B6.9]) &= [B6.19]
  21: IntegerLiteral 0x55ef1b1f03c0 <lgc.c:341:12> 'int' 0
0
  22: ReturnStmt 0x55ef1b1f03e0 <lgc.c:341:5, col:12>
`-IntegerLiteral 0x55ef1b1f03c0 <col:12> 'int' 0
return [B6.21];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x55ef1b1efc30 <lgc.c:339:18> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
o
   2: ImplicitCastExpr 0x55ef1b1efc78 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1efc58 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1efc30 <lgc.c:339:18> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x55ef1b1efc90 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
`-ImplicitCastExpr 0x55ef1b1efc78 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1efc58 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1efc30 <lgc.c:339:18> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B7.2]->tt
   4: ImplicitCastExpr 0x55ef1b1efd08 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1efcc8 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x55ef1b1efc90 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
    `-ImplicitCastExpr 0x55ef1b1efc78 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1efc58 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1efc30 <lgc.c:339:18> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B7.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55ef1b1efce8 <./lua.h:78:22> 'int' 4
4
   6: BinaryOperator 0x55ef1b1efd20 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x55ef1b1efd08 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1efcc8 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x55ef1b1efc90 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
|     `-ImplicitCastExpr 0x55ef1b1efc78 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1efc58 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x55ef1b1efc30 <lgc.c:339:18> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
`-IntegerLiteral 0x55ef1b1efce8 <./lua.h:78:22> 'int' 4
[B7.4] == [B7.5]
   T: if ([B7.6])
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: IntegerLiteral 0x55ef1b1efbc0 <lgc.c:338:33> 'int' 0
0
   2: ReturnStmt 0x55ef1b1efbe0 <lgc.c:338:26, col:33>
`-IntegerLiteral 0x55ef1b1efbc0 <col:33> 'int' 0
return [B8.1];
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x55ef1b1efa68 <lgc.c:338:22> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
o
   2: ImplicitCastExpr 0x55ef1b1efab0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b1efa90 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x55ef1b1efa68 <lgc.c:338:22> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B9.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x55ef1b1efac8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
`-ImplicitCastExpr 0x55ef1b1efab0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1efa90 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x55ef1b1efa68 <lgc.c:338:22> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
[B9.2]->tt
   4: ImplicitCastExpr 0x55ef1b1efb40 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1efb00 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x55ef1b1efac8 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
    `-ImplicitCastExpr 0x55ef1b1efab0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1efa90 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x55ef1b1efa68 <lgc.c:338:22> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
([B9.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55ef1b1efb20 <./lua.h:78:22> 'int' 4
4
   6: BinaryOperator 0x55ef1b1efb58 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x55ef1b1efb40 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1efb00 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x55ef1b1efac8 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
|     `-ImplicitCastExpr 0x55ef1b1efab0 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1efa90 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x55ef1b1efa68 <lgc.c:338:22> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
`-IntegerLiteral 0x55ef1b1efb20 <./lua.h:78:22> 'int' 4
[B9.4] >= [B9.5]
   7: UnaryOperator 0x55ef1b1efba0 <lgc.c:338:7, ./lobject.h:189:50> 'int' prefix '!'
`-ParenExpr 0x55ef1b1efb80 <col:26, col:50> 'int'
  `-BinaryOperator 0x55ef1b1efb58 <line:90:18, ./lua.h:78:22> 'int' '>='
    |-ImplicitCastExpr 0x55ef1b1efb40 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x55ef1b1efb00 <col:18, col:26> 'const int' lvalue
    |   `-MemberExpr 0x55ef1b1efac8 <col:19, col:24> 'const int' lvalue ->tt 0x55ef1b17f270
    |     `-ImplicitCastExpr 0x55ef1b1efab0 <col:19, col:21> 'const TValue *' <LValueToRValue>
    |       `-ParenExpr 0x55ef1b1efa90 <col:19, col:21> 'const TValue *' lvalue
    |         `-DeclRefExpr 0x55ef1b1efa68 <lgc.c:338:22> 'const TValue *' lvalue ParmVar 0x55ef1b1ef828 'o' 'const TValue *'
    `-IntegerLiteral 0x55ef1b1efb20 <./lua.h:78:22> 'int' 4
!([B9.6])
   T: if [B9.7]
   Preds (1): B10
   Succs (2): B8 B7

 [B0 (EXIT)]
   Preds (3): B1 B6 B8
