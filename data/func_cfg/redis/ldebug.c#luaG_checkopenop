int luaG_checkopenop(Instruction i)
 [B9 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x555e9724e6c0 <ldebug.c:291:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
i
   2: ImplicitCastExpr 0x555e9724e728 <./lopcodes.h:80:38, col:40> 'Instruction':'unsigned int' <LValueToRValue>
`-ParenExpr 0x555e9724e6e8 <col:38, col:40> 'Instruction':'unsigned int' lvalue
  `-DeclRefExpr 0x555e9724e6c0 <ldebug.c:291:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
([B1.1]) (ImplicitCastExpr, LValueToRValue, Instruction)
   3: IntegerLiteral 0x555e9724e708 <./lopcodes.h:44:17> 'int' 0
0
   4: BinaryOperator 0x555e9724e740 <./lopcodes.h:80:38, line:44:17> 'Instruction':'unsigned int' '>>'
|-ImplicitCastExpr 0x555e9724e728 <line:80:38, col:40> 'Instruction':'unsigned int' <LValueToRValue>
| `-ParenExpr 0x555e9724e6e8 <col:38, col:40> 'Instruction':'unsigned int' lvalue
|   `-DeclRefExpr 0x555e9724e6c0 <ldebug.c:291:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
`-IntegerLiteral 0x555e9724e708 <./lopcodes.h:44:17> 'int' 0
[B1.2] >> [B1.3]
   5: IntegerLiteral 0x555e9724e788 <./lopcodes.h:71:39> 'int' 0
0
   6: CStyleCastExpr 0x555e9724e7b8 <./lopcodes.h:71:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
(Instruction)[B1.5] (CStyleCastExpr, IntegralCast, Instruction)
   7: UnaryOperator 0x555e9724e7e0 <./lopcodes.h:71:25, col:39> 'Instruction':'unsigned int' prefix '~'
`-CStyleCastExpr 0x555e9724e7b8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
~[B1.6]
   8: IntegerLiteral 0x555e9724e820 <./lopcodes.h:42:18> 'int' 6
6
   9: BinaryOperator 0x555e9724e840 <./lopcodes.h:71:24, line:42:18> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x555e9724e800 <line:71:24, col:40> 'Instruction':'unsigned int'
| `-UnaryOperator 0x555e9724e7e0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|   `-CStyleCastExpr 0x555e9724e7b8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
`-IntegerLiteral 0x555e9724e820 <line:42:18> 'int' 6
([B1.7]) << [B1.8]
  10: UnaryOperator 0x555e9724e888 <./lopcodes.h:71:22, col:44> 'Instruction':'unsigned int' prefix '~'
`-ParenExpr 0x555e9724e868 <col:23, col:44> 'Instruction':'unsigned int'
  `-BinaryOperator 0x555e9724e840 <col:24, line:42:18> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x555e9724e800 <line:71:24, col:40> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x555e9724e7e0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |   `-CStyleCastExpr 0x555e9724e7b8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
    `-IntegerLiteral 0x555e9724e820 <line:42:18> 'int' 6
~([B1.9])
  11: IntegerLiteral 0x555e9724e8c8 <./lopcodes.h:80:67> 'int' 0
0
  12: BinaryOperator 0x555e9724e8e8 <./lopcodes.h:71:21, line:80:67> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x555e9724e8a8 <line:71:21, col:45> 'Instruction':'unsigned int'
| `-UnaryOperator 0x555e9724e888 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|   `-ParenExpr 0x555e9724e868 <col:23, col:44> 'Instruction':'unsigned int'
|     `-BinaryOperator 0x555e9724e840 <col:24, line:42:18> 'Instruction':'unsigned int' '<<'
|       |-ParenExpr 0x555e9724e800 <line:71:24, col:40> 'Instruction':'unsigned int'
|       | `-UnaryOperator 0x555e9724e7e0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|       |   `-CStyleCastExpr 0x555e9724e7b8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
|       `-IntegerLiteral 0x555e9724e820 <line:42:18> 'int' 6
`-IntegerLiteral 0x555e9724e8c8 <line:80:67> 'int' 0
([B1.10]) << [B1.11]
  13: BinaryOperator 0x555e9724e930 <./lopcodes.h:80:37, line:71:49> 'unsigned int' '&'
|-ParenExpr 0x555e9724e768 <line:80:37, col:49> 'Instruction':'unsigned int'
| `-BinaryOperator 0x555e9724e740 <col:38, line:44:17> 'Instruction':'unsigned int' '>>'
|   |-ImplicitCastExpr 0x555e9724e728 <line:80:38, col:40> 'Instruction':'unsigned int' <LValueToRValue>
|   | `-ParenExpr 0x555e9724e6e8 <col:38, col:40> 'Instruction':'unsigned int' lvalue
|   |   `-DeclRefExpr 0x555e9724e6c0 <ldebug.c:291:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
|   `-IntegerLiteral 0x555e9724e708 <./lopcodes.h:44:17> 'int' 0
`-ParenExpr 0x555e9724e910 <line:71:20, col:49> 'Instruction':'unsigned int'
  `-BinaryOperator 0x555e9724e8e8 <col:21, line:80:67> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x555e9724e8a8 <line:71:21, col:45> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x555e9724e888 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |   `-ParenExpr 0x555e9724e868 <col:23, col:44> 'Instruction':'unsigned int'
    |     `-BinaryOperator 0x555e9724e840 <col:24, line:42:18> 'Instruction':'unsigned int' '<<'
    |       |-ParenExpr 0x555e9724e800 <line:71:24, col:40> 'Instruction':'unsigned int'
    |       | `-UnaryOperator 0x555e9724e7e0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |       |   `-CStyleCastExpr 0x555e9724e7b8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |       |     `-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
    |       `-IntegerLiteral 0x555e9724e820 <line:42:18> 'int' 6
    `-IntegerLiteral 0x555e9724e8c8 <line:80:67> 'int' 0
([B1.4]) & ([B1.12])
  14: CStyleCastExpr 0x555e9724e9b8 <./llimits.h:75:23, col:30> 'OpCode':'OpCode' <IntegralCast>
`-ParenExpr 0x555e9724e998 <col:26, col:30> 'unsigned int'
  `-BinaryOperator 0x555e9724e930 <./lopcodes.h:80:37, line:71:49> 'unsigned int' '&'
    |-ParenExpr 0x555e9724e768 <line:80:37, col:49> 'Instruction':'unsigned int'
    | `-BinaryOperator 0x555e9724e740 <col:38, line:44:17> 'Instruction':'unsigned int' '>>'
    |   |-ImplicitCastExpr 0x555e9724e728 <line:80:38, col:40> 'Instruction':'unsigned int' <LValueToRValue>
    |   | `-ParenExpr 0x555e9724e6e8 <col:38, col:40> 'Instruction':'unsigned int' lvalue
    |   |   `-DeclRefExpr 0x555e9724e6c0 <ldebug.c:291:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
    |   `-IntegerLiteral 0x555e9724e708 <./lopcodes.h:44:17> 'int' 0
    `-ParenExpr 0x555e9724e910 <line:71:20, col:49> 'Instruction':'unsigned int'
      `-BinaryOperator 0x555e9724e8e8 <col:21, line:80:67> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x555e9724e8a8 <line:71:21, col:45> 'Instruction':'unsigned int'
        | `-UnaryOperator 0x555e9724e888 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
        |   `-ParenExpr 0x555e9724e868 <col:23, col:44> 'Instruction':'unsigned int'
        |     `-BinaryOperator 0x555e9724e840 <col:24, line:42:18> 'Instruction':'unsigned int' '<<'
        |       |-ParenExpr 0x555e9724e800 <line:71:24, col:40> 'Instruction':'unsigned int'
        |       | `-UnaryOperator 0x555e9724e7e0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
        |       |   `-CStyleCastExpr 0x555e9724e7b8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
        |       |     `-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
        |       `-IntegerLiteral 0x555e9724e820 <line:42:18> 'int' 6
        `-IntegerLiteral 0x555e9724e8c8 <line:80:67> 'int' 0
(OpCode)([B1.13]) (CStyleCastExpr, IntegralCast, OpCode)
  15: ImplicitCastExpr 0x555e9724ea20 <./lopcodes.h:80:23, col:70> 'unsigned int' <IntegralCast>
`-ParenExpr 0x555e9724ea00 <col:23, col:70> 'OpCode':'OpCode'
  `-ParenExpr 0x555e9724e9e0 <./llimits.h:75:22, col:31> 'OpCode':'OpCode'
    `-CStyleCastExpr 0x555e9724e9b8 <col:23, col:30> 'OpCode':'OpCode' <IntegralCast>
      `-ParenExpr 0x555e9724e998 <col:26, col:30> 'unsigned int'
        `-BinaryOperator 0x555e9724e930 <./lopcodes.h:80:37, line:71:49> 'unsigned int' '&'
          |-ParenExpr 0x555e9724e768 <line:80:37, col:49> 'Instruction':'unsigned int'
          | `-BinaryOperator 0x555e9724e740 <col:38, line:44:17> 'Instruction':'unsigned int' '>>'
          |   |-ImplicitCastExpr 0x555e9724e728 <line:80:38, col:40> 'Instruction':'unsigned int' <LValueToRValue>
          |   | `-ParenExpr 0x555e9724e6e8 <col:38, col:40> 'Instruction':'unsigned int' lvalue
          |   |   `-DeclRefExpr 0x555e9724e6c0 <ldebug.c:291:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
          |   `-IntegerLiteral 0x555e9724e708 <./lopcodes.h:44:17> 'int' 0
          `-ParenExpr 0x555e9724e910 <line:71:20, col:49> 'Instruction':'unsigned int'
            `-BinaryOperator 0x555e9724e8e8 <col:21, line:80:67> 'Instruction':'unsigned int' '<<'
              |-ParenExpr 0x555e9724e8a8 <line:71:21, col:45> 'Instruction':'unsigned int'
              | `-UnaryOperator 0x555e9724e888 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
              |   `-ParenExpr 0x555e9724e868 <col:23, col:44> 'Instruction':'unsigned int'
              |     `-BinaryOperator 0x555e9724e840 <col:24, line:42:18> 'Instruction':'unsigned int' '<<'
              |       |-ParenExpr 0x555e9724e800 <line:71:24, col:40> 'Instruction':'unsigned int'
              |       | `-UnaryOperator 0x555e9724e7e0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
              |       |   `-CStyleCastExpr 0x555e9724e7b8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
              |       |     `-IntegerLiteral 0x555e9724e788 <col:39> 'int' 0
              |       `-IntegerLiteral 0x555e9724e820 <line:42:18> 'int' 6
              `-IntegerLiteral 0x555e9724e8c8 <line:80:67> 'int' 0
(([B1.14])) (ImplicitCastExpr, IntegralCast, unsigned int)
   T: switch [B1.15]
   Preds (1): B9
   Succs (5): B3 B4 B5 B8 B2

 [B2]
  default:
   1: IntegerLiteral 0x555e9724f1f0 <ldebug.c:299:21> 'int' 0
0
   2: ReturnStmt 0x555e9724f210 <ldebug.c:299:14, col:21>
`-IntegerLiteral 0x555e9724f1f0 <col:21> 'int' 0
return [B2.1];
   Preds (1): B1
   Succs (1): B0

 [B3]
  case OP_CALL:
   Preds (1): B1
   Succs (1): B4

 [B4]
  case OP_TAILCALL:
   Preds (2): B3 B1
   Succs (1): B5

 [B5]
  case OP_RETURN:
   Preds (2): B4 B1
   Succs (1): B8

 [B6]
   1: IntegerLiteral 0x555e9724f190 <ldebug.c:297:14> 'int' 1
1
   2: ReturnStmt 0x555e9724f1b0 <ldebug.c:297:7, col:14>
`-IntegerLiteral 0x555e9724f190 <col:14> 'int' 1
return [B6.1];
   Preds (1): B8
   Succs (1): B0

 [B7]
   1: IntegerLiteral 0x555e9724f110 <ldebug.c:268:36> 'int' 0
0
   2: ReturnStmt 0x555e9724f130 <ldebug.c:268:29, col:36>
`-IntegerLiteral 0x555e9724f110 <col:36> 'int' 0
return [B7.1];
   Preds (1): B8
   Succs (1): B0

 [B8]
  case OP_SETLIST:
   1: DeclRefExpr 0x555e9724ebe8 <ldebug.c:296:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
i
   2: ImplicitCastExpr 0x555e9724ed88 <./lopcodes.h:88:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
`-ParenExpr 0x555e9724ec10 <col:33, col:35> 'Instruction':'unsigned int' lvalue
  `-DeclRefExpr 0x555e9724ebe8 <ldebug.c:296:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
([B8.1]) (ImplicitCastExpr, LValueToRValue, Instruction)
   3: IntegerLiteral 0x555e9724ec30 <./lopcodes.h:44:17> 'int' 0
0
   4: IntegerLiteral 0x555e9724ec50 <./lopcodes.h:42:18> 'int' 6
6
   5: BinaryOperator 0x555e9724ec70 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
`-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
[B8.3] + [B8.4]
   6: IntegerLiteral 0x555e9724ecb8 <./lopcodes.h:40:17> 'int' 8
8
   7: BinaryOperator 0x555e9724ecd8 <./lopcodes.h:45:16, line:40:17> 'int' '+'
|-ParenExpr 0x555e9724ec98 <line:45:16, col:33> 'int'
| `-BinaryOperator 0x555e9724ec70 <line:44:17, line:42:18> 'int' '+'
|   |-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
|   `-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
`-IntegerLiteral 0x555e9724ecb8 <line:40:17> 'int' 8
([B8.5]) + [B8.6]
   8: IntegerLiteral 0x555e9724ed20 <./lopcodes.h:37:17> 'int' 9
9
   9: BinaryOperator 0x555e9724ed40 <./lopcodes.h:46:16, line:37:17> 'int' '+'
|-ParenExpr 0x555e9724ed00 <line:46:16, col:31> 'int'
| `-BinaryOperator 0x555e9724ecd8 <line:45:16, line:40:17> 'int' '+'
|   |-ParenExpr 0x555e9724ec98 <line:45:16, col:33> 'int'
|   | `-BinaryOperator 0x555e9724ec70 <line:44:17, line:42:18> 'int' '+'
|   |   |-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
|   |   `-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
|   `-IntegerLiteral 0x555e9724ecb8 <line:40:17> 'int' 8
`-IntegerLiteral 0x555e9724ed20 <line:37:17> 'int' 9
([B8.7]) + [B8.8]
  10: BinaryOperator 0x555e9724eda0 <./lopcodes.h:88:33, line:47:31> 'Instruction':'unsigned int' '>>'
|-ImplicitCastExpr 0x555e9724ed88 <line:88:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
| `-ParenExpr 0x555e9724ec10 <col:33, col:35> 'Instruction':'unsigned int' lvalue
|   `-DeclRefExpr 0x555e9724ebe8 <ldebug.c:296:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
`-ParenExpr 0x555e9724ed68 <./lopcodes.h:47:16, col:31> 'int'
  `-BinaryOperator 0x555e9724ed40 <line:46:16, line:37:17> 'int' '+'
    |-ParenExpr 0x555e9724ed00 <line:46:16, col:31> 'int'
    | `-BinaryOperator 0x555e9724ecd8 <line:45:16, line:40:17> 'int' '+'
    |   |-ParenExpr 0x555e9724ec98 <line:45:16, col:33> 'int'
    |   | `-BinaryOperator 0x555e9724ec70 <line:44:17, line:42:18> 'int' '+'
    |   |   |-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
    |   |   `-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
    |   `-IntegerLiteral 0x555e9724ecb8 <line:40:17> 'int' 8
    `-IntegerLiteral 0x555e9724ed20 <line:37:17> 'int' 9
[B8.2] >> ([B8.9])
  11: IntegerLiteral 0x555e9724ede8 <./lopcodes.h:71:39> 'int' 0
0
  12: CStyleCastExpr 0x555e9724ee18 <./lopcodes.h:71:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
(Instruction)[B8.11] (CStyleCastExpr, IntegralCast, Instruction)
  13: UnaryOperator 0x555e9724ee40 <./lopcodes.h:71:25, col:39> 'Instruction':'unsigned int' prefix '~'
`-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
~[B8.12]
  14: IntegerLiteral 0x555e9724ee80 <./lopcodes.h:38:17> 'int' 9
9
  15: BinaryOperator 0x555e9724eea0 <./lopcodes.h:71:24, line:38:17> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x555e9724ee60 <line:71:24, col:40> 'Instruction':'unsigned int'
| `-UnaryOperator 0x555e9724ee40 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|   `-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
`-IntegerLiteral 0x555e9724ee80 <line:38:17> 'int' 9
([B8.13]) << [B8.14]
  16: UnaryOperator 0x555e9724eee8 <./lopcodes.h:71:22, col:44> 'Instruction':'unsigned int' prefix '~'
`-ParenExpr 0x555e9724eec8 <col:23, col:44> 'Instruction':'unsigned int'
  `-BinaryOperator 0x555e9724eea0 <col:24, line:38:17> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x555e9724ee60 <line:71:24, col:40> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x555e9724ee40 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |   `-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
    `-IntegerLiteral 0x555e9724ee80 <line:38:17> 'int' 9
~([B8.15])
  17: IntegerLiteral 0x555e9724ef28 <./lopcodes.h:88:60> 'int' 0
0
  18: BinaryOperator 0x555e9724ef48 <./lopcodes.h:71:21, line:88:60> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x555e9724ef08 <line:71:21, col:45> 'Instruction':'unsigned int'
| `-UnaryOperator 0x555e9724eee8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|   `-ParenExpr 0x555e9724eec8 <col:23, col:44> 'Instruction':'unsigned int'
|     `-BinaryOperator 0x555e9724eea0 <col:24, line:38:17> 'Instruction':'unsigned int' '<<'
|       |-ParenExpr 0x555e9724ee60 <line:71:24, col:40> 'Instruction':'unsigned int'
|       | `-UnaryOperator 0x555e9724ee40 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|       |   `-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
|       `-IntegerLiteral 0x555e9724ee80 <line:38:17> 'int' 9
`-IntegerLiteral 0x555e9724ef28 <line:88:60> 'int' 0
([B8.16]) << [B8.17]
  19: BinaryOperator 0x555e9724ef90 <./lopcodes.h:88:32, line:71:49> 'unsigned int' '&'
|-ParenExpr 0x555e9724edc8 <line:88:32, col:43> 'Instruction':'unsigned int'
| `-BinaryOperator 0x555e9724eda0 <col:33, line:47:31> 'Instruction':'unsigned int' '>>'
|   |-ImplicitCastExpr 0x555e9724ed88 <line:88:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
|   | `-ParenExpr 0x555e9724ec10 <col:33, col:35> 'Instruction':'unsigned int' lvalue
|   |   `-DeclRefExpr 0x555e9724ebe8 <ldebug.c:296:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
|   `-ParenExpr 0x555e9724ed68 <./lopcodes.h:47:16, col:31> 'int'
|     `-BinaryOperator 0x555e9724ed40 <line:46:16, line:37:17> 'int' '+'
|       |-ParenExpr 0x555e9724ed00 <line:46:16, col:31> 'int'
|       | `-BinaryOperator 0x555e9724ecd8 <line:45:16, line:40:17> 'int' '+'
|       |   |-ParenExpr 0x555e9724ec98 <line:45:16, col:33> 'int'
|       |   | `-BinaryOperator 0x555e9724ec70 <line:44:17, line:42:18> 'int' '+'
|       |   |   |-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
|       |   |   `-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
|       |   `-IntegerLiteral 0x555e9724ecb8 <line:40:17> 'int' 8
|       `-IntegerLiteral 0x555e9724ed20 <line:37:17> 'int' 9
`-ParenExpr 0x555e9724ef70 <line:71:20, col:49> 'Instruction':'unsigned int'
  `-BinaryOperator 0x555e9724ef48 <col:21, line:88:60> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x555e9724ef08 <line:71:21, col:45> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x555e9724eee8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |   `-ParenExpr 0x555e9724eec8 <col:23, col:44> 'Instruction':'unsigned int'
    |     `-BinaryOperator 0x555e9724eea0 <col:24, line:38:17> 'Instruction':'unsigned int' '<<'
    |       |-ParenExpr 0x555e9724ee60 <line:71:24, col:40> 'Instruction':'unsigned int'
    |       | `-UnaryOperator 0x555e9724ee40 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |       |   `-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |       |     `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
    |       `-IntegerLiteral 0x555e9724ee80 <line:38:17> 'int' 9
    `-IntegerLiteral 0x555e9724ef28 <line:88:60> 'int' 0
([B8.10]) & ([B8.18])
  20: CStyleCastExpr 0x555e9724f020 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x555e9724f000 <col:26, col:30> 'unsigned int'
  `-BinaryOperator 0x555e9724ef90 <./lopcodes.h:88:32, line:71:49> 'unsigned int' '&'
    |-ParenExpr 0x555e9724edc8 <line:88:32, col:43> 'Instruction':'unsigned int'
    | `-BinaryOperator 0x555e9724eda0 <col:33, line:47:31> 'Instruction':'unsigned int' '>>'
    |   |-ImplicitCastExpr 0x555e9724ed88 <line:88:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
    |   | `-ParenExpr 0x555e9724ec10 <col:33, col:35> 'Instruction':'unsigned int' lvalue
    |   |   `-DeclRefExpr 0x555e9724ebe8 <ldebug.c:296:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
    |   `-ParenExpr 0x555e9724ed68 <./lopcodes.h:47:16, col:31> 'int'
    |     `-BinaryOperator 0x555e9724ed40 <line:46:16, line:37:17> 'int' '+'
    |       |-ParenExpr 0x555e9724ed00 <line:46:16, col:31> 'int'
    |       | `-BinaryOperator 0x555e9724ecd8 <line:45:16, line:40:17> 'int' '+'
    |       |   |-ParenExpr 0x555e9724ec98 <line:45:16, col:33> 'int'
    |       |   | `-BinaryOperator 0x555e9724ec70 <line:44:17, line:42:18> 'int' '+'
    |       |   |   |-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
    |       |   |   `-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
    |       |   `-IntegerLiteral 0x555e9724ecb8 <line:40:17> 'int' 8
    |       `-IntegerLiteral 0x555e9724ed20 <line:37:17> 'int' 9
    `-ParenExpr 0x555e9724ef70 <line:71:20, col:49> 'Instruction':'unsigned int'
      `-BinaryOperator 0x555e9724ef48 <col:21, line:88:60> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x555e9724ef08 <line:71:21, col:45> 'Instruction':'unsigned int'
        | `-UnaryOperator 0x555e9724eee8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
        |   `-ParenExpr 0x555e9724eec8 <col:23, col:44> 'Instruction':'unsigned int'
        |     `-BinaryOperator 0x555e9724eea0 <col:24, line:38:17> 'Instruction':'unsigned int' '<<'
        |       |-ParenExpr 0x555e9724ee60 <line:71:24, col:40> 'Instruction':'unsigned int'
        |       | `-UnaryOperator 0x555e9724ee40 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
        |       |   `-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
        |       |     `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
        |       `-IntegerLiteral 0x555e9724ee80 <line:38:17> 'int' 9
        `-IntegerLiteral 0x555e9724ef28 <line:88:60> 'int' 0
(int)([B8.19]) (CStyleCastExpr, IntegralCast, int)
  21: IntegerLiteral 0x555e9724f088 <ldebug.c:296:28> 'int' 0
0
  22: BinaryOperator 0x555e9724f0a8 <./lopcodes.h:88:21, ldebug.c:296:28> 'int' '=='
|-ParenExpr 0x555e9724f068 <./lopcodes.h:88:21, col:63> 'int'
| `-ParenExpr 0x555e9724f048 <./llimits.h:75:22, col:31> 'int'
|   `-CStyleCastExpr 0x555e9724f020 <col:23, col:30> 'int' <IntegralCast>
|     `-ParenExpr 0x555e9724f000 <col:26, col:30> 'unsigned int'
|       `-BinaryOperator 0x555e9724ef90 <./lopcodes.h:88:32, line:71:49> 'unsigned int' '&'
|         |-ParenExpr 0x555e9724edc8 <line:88:32, col:43> 'Instruction':'unsigned int'
|         | `-BinaryOperator 0x555e9724eda0 <col:33, line:47:31> 'Instruction':'unsigned int' '>>'
|         |   |-ImplicitCastExpr 0x555e9724ed88 <line:88:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
|         |   | `-ParenExpr 0x555e9724ec10 <col:33, col:35> 'Instruction':'unsigned int' lvalue
|         |   |   `-DeclRefExpr 0x555e9724ebe8 <ldebug.c:296:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
|         |   `-ParenExpr 0x555e9724ed68 <./lopcodes.h:47:16, col:31> 'int'
|         |     `-BinaryOperator 0x555e9724ed40 <line:46:16, line:37:17> 'int' '+'
|         |       |-ParenExpr 0x555e9724ed00 <line:46:16, col:31> 'int'
|         |       | `-BinaryOperator 0x555e9724ecd8 <line:45:16, line:40:17> 'int' '+'
|         |       |   |-ParenExpr 0x555e9724ec98 <line:45:16, col:33> 'int'
|         |       |   | `-BinaryOperator 0x555e9724ec70 <line:44:17, line:42:18> 'int' '+'
|         |       |   |   |-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
|         |       |   |   `-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
|         |       |   `-IntegerLiteral 0x555e9724ecb8 <line:40:17> 'int' 8
|         |       `-IntegerLiteral 0x555e9724ed20 <line:37:17> 'int' 9
|         `-ParenExpr 0x555e9724ef70 <line:71:20, col:49> 'Instruction':'unsigned int'
|           `-BinaryOperator 0x555e9724ef48 <col:21, line:88:60> 'Instruction':'unsigned int' '<<'
|             |-ParenExpr 0x555e9724ef08 <line:71:21, col:45> 'Instruction':'unsigned int'
|             | `-UnaryOperator 0x555e9724eee8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|             |   `-ParenExpr 0x555e9724eec8 <col:23, col:44> 'Instruction':'unsigned int'
|             |     `-BinaryOperator 0x555e9724eea0 <col:24, line:38:17> 'Instruction':'unsigned int' '<<'
|             |       |-ParenExpr 0x555e9724ee60 <line:71:24, col:40> 'Instruction':'unsigned int'
|             |       | `-UnaryOperator 0x555e9724ee40 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|             |       |   `-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|             |       |     `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
|             |       `-IntegerLiteral 0x555e9724ee80 <line:38:17> 'int' 9
|             `-IntegerLiteral 0x555e9724ef28 <line:88:60> 'int' 0
`-IntegerLiteral 0x555e9724f088 <ldebug.c:296:28> 'int' 0
(([B8.20])) == [B8.21]
  23: UnaryOperator 0x555e9724f0f0 <ldebug.c:268:23, col:26> 'int' prefix '!'
`-ParenExpr 0x555e9724f0d0 <col:24, col:26> 'int'
  `-BinaryOperator 0x555e9724f0a8 <./lopcodes.h:88:21, ldebug.c:296:28> 'int' '=='
    |-ParenExpr 0x555e9724f068 <./lopcodes.h:88:21, col:63> 'int'
    | `-ParenExpr 0x555e9724f048 <./llimits.h:75:22, col:31> 'int'
    |   `-CStyleCastExpr 0x555e9724f020 <col:23, col:30> 'int' <IntegralCast>
    |     `-ParenExpr 0x555e9724f000 <col:26, col:30> 'unsigned int'
    |       `-BinaryOperator 0x555e9724ef90 <./lopcodes.h:88:32, line:71:49> 'unsigned int' '&'
    |         |-ParenExpr 0x555e9724edc8 <line:88:32, col:43> 'Instruction':'unsigned int'
    |         | `-BinaryOperator 0x555e9724eda0 <col:33, line:47:31> 'Instruction':'unsigned int' '>>'
    |         |   |-ImplicitCastExpr 0x555e9724ed88 <line:88:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
    |         |   | `-ParenExpr 0x555e9724ec10 <col:33, col:35> 'Instruction':'unsigned int' lvalue
    |         |   |   `-DeclRefExpr 0x555e9724ebe8 <ldebug.c:296:22> 'Instruction':'unsigned int' lvalue ParmVar 0x555e9724e540 'i' 'Instruction':'unsigned int'
    |         |   `-ParenExpr 0x555e9724ed68 <./lopcodes.h:47:16, col:31> 'int'
    |         |     `-BinaryOperator 0x555e9724ed40 <line:46:16, line:37:17> 'int' '+'
    |         |       |-ParenExpr 0x555e9724ed00 <line:46:16, col:31> 'int'
    |         |       | `-BinaryOperator 0x555e9724ecd8 <line:45:16, line:40:17> 'int' '+'
    |         |       |   |-ParenExpr 0x555e9724ec98 <line:45:16, col:33> 'int'
    |         |       |   | `-BinaryOperator 0x555e9724ec70 <line:44:17, line:42:18> 'int' '+'
    |         |       |   |   |-IntegerLiteral 0x555e9724ec30 <line:44:17> 'int' 0
    |         |       |   |   `-IntegerLiteral 0x555e9724ec50 <line:42:18> 'int' 6
    |         |       |   `-IntegerLiteral 0x555e9724ecb8 <line:40:17> 'int' 8
    |         |       `-IntegerLiteral 0x555e9724ed20 <line:37:17> 'int' 9
    |         `-ParenExpr 0x555e9724ef70 <line:71:20, col:49> 'Instruction':'unsigned int'
    |           `-BinaryOperator 0x555e9724ef48 <col:21, line:88:60> 'Instruction':'unsigned int' '<<'
    |             |-ParenExpr 0x555e9724ef08 <line:71:21, col:45> 'Instruction':'unsigned int'
    |             | `-UnaryOperator 0x555e9724eee8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |             |   `-ParenExpr 0x555e9724eec8 <col:23, col:44> 'Instruction':'unsigned int'
    |             |     `-BinaryOperator 0x555e9724eea0 <col:24, line:38:17> 'Instruction':'unsigned int' '<<'
    |             |       |-ParenExpr 0x555e9724ee60 <line:71:24, col:40> 'Instruction':'unsigned int'
    |             |       | `-UnaryOperator 0x555e9724ee40 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |             |       |   `-CStyleCastExpr 0x555e9724ee18 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |             |       |     `-IntegerLiteral 0x555e9724ede8 <col:39> 'int' 0
    |             |       `-IntegerLiteral 0x555e9724ee80 <line:38:17> 'int' 9
    |             `-IntegerLiteral 0x555e9724ef28 <line:88:60> 'int' 0
    `-IntegerLiteral 0x555e9724f088 <ldebug.c:296:28> 'int' 0
!([B8.22])
   T: if [B8.23]
   Preds (2): B1 B5
   Succs (2): B7 B6

 [B0 (EXIT)]
   Preds (3): B2 B6 B7
