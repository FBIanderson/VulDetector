void sdsIncrLen(sds s, int incr)
 [B39 (ENTRY)]
   Succs (1): B2

 [B1]
   1: CharacterLiteral 0x55e83d109458 <sds.c:353:14> 'int' 0
'\x00'
   2: ImplicitCastExpr 0x55e83d109470 <sds.c:353:14> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d109458 <col:14> 'int' 0
[B1.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d1093b0 <sds.c:353:5> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d109400 <sds.c:353:5> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1093b0 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d1093d8 <sds.c:353:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
len
   6: ImplicitCastExpr 0x55e83d109418 <sds.c:353:7> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d1093d8 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
[B1.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: ArraySubscriptExpr 0x55e83d109430 <sds.c:353:5, col:10> 'char' lvalue
|-ImplicitCastExpr 0x55e83d109400 <col:5> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1093b0 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d109418 <col:7> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1093d8 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
[B1.4][[B1.6]]
   8: BinaryOperator 0x55e83d109488 <sds.c:353:5, col:14> 'char' '='
|-ArraySubscriptExpr 0x55e83d109430 <col:5, col:10> 'char' lvalue
| |-ImplicitCastExpr 0x55e83d109400 <col:5> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d1093b0 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
| `-ImplicitCastExpr 0x55e83d109418 <col:7> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1093d8 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d109470 <col:14> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d109458 <col:14> 'int' 0
[B1.7] = [B1.2]
   Preds (6): B3 B4 B11 B18 B25 B32
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d1015c8 <sds.c:316:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d101630 <sds.c:316:27> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1015c8 <col:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
[B2.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: IntegerLiteral 0x55e83d1015f0 <sds.c:316:30> 'int' 1
1
   4: UnaryOperator 0x55e83d101610 <sds.c:316:29, col:30> 'int' prefix '-'
`-IntegerLiteral 0x55e83d1015f0 <col:30> 'int' 1
-[B2.3]
   5: ArraySubscriptExpr 0x55e83d101648 <sds.c:316:27, col:31> 'char' lvalue
|-ImplicitCastExpr 0x55e83d101630 <col:27> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1015c8 <col:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
`-UnaryOperator 0x55e83d101610 <col:29, col:30> 'int' prefix '-'
  `-IntegerLiteral 0x55e83d1015f0 <col:30> 'int' 1
[B2.2][[B2.4]]
   6: ImplicitCastExpr 0x55e83d101670 <sds.c:316:27, col:31> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d101648 <col:27, col:31> 'char' lvalue
  |-ImplicitCastExpr 0x55e83d101630 <col:27> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d1015c8 <col:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
  `-UnaryOperator 0x55e83d101610 <col:29, col:30> 'int' prefix '-'
    `-IntegerLiteral 0x55e83d1015f0 <col:30> 'int' 1
[B2.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d101688 <sds.c:316:27, col:31> 'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x55e83d101670 <col:27, col:31> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d101648 <col:27, col:31> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d101630 <col:27> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d1015c8 <col:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
    `-UnaryOperator 0x55e83d101610 <col:29, col:30> 'int' prefix '-'
      `-IntegerLiteral 0x55e83d1015f0 <col:30> 'int' 1
[B2.6] (ImplicitCastExpr, IntegralCast, unsigned char)
   8: DeclStmt 0x55e83d1016a0 <sds.c:316:5, col:32>col:19
`-VarDecl 0x55e83d101568 <col:5, col:31> col:19 used flags 'unsigned char' cinit
  `-ImplicitCastExpr 0x55e83d101688 <col:27, col:31> 'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d101670 <col:27, col:31> 'char' <LValueToRValue>
      `-ArraySubscriptExpr 0x55e83d101648 <col:27, col:31> 'char' lvalue
        |-ImplicitCastExpr 0x55e83d101630 <col:27> 'sds':'char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d1015c8 <col:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
        `-UnaryOperator 0x55e83d101610 <col:29, col:30> 'int' prefix '-'
          `-IntegerLiteral 0x55e83d1015f0 <col:30> 'int' 1
unsigned char flags = s[-1];
   9: DeclStmt 0x55e83d101728 <sds.c:317:5, col:15>col:12
`-VarDecl 0x55e83d1016c8 <col:5, col:12> col:12 used len 'size_t':'unsigned long'
size_t len;
  10: DeclRefExpr 0x55e83d101740 <sds.c:318:12> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
flags
  11: ImplicitCastExpr 0x55e83d101788 <sds.c:318:12> 'unsigned char' <LValueToRValue>
`-DeclRefExpr 0x55e83d101740 <col:12> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
[B2.10] (ImplicitCastExpr, LValueToRValue, unsigned char)
  12: ImplicitCastExpr 0x55e83d1017a0 <sds.c:318:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d101788 <col:12> 'unsigned char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d101740 <col:12> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
[B2.11] (ImplicitCastExpr, IntegralCast, int)
  13: IntegerLiteral 0x55e83d101768 <./sds.h:83:23> 'int' 7
7
  14: BinaryOperator 0x55e83d1017b8 <sds.c:318:12, ./sds.h:83:23> 'int' '&'
|-ImplicitCastExpr 0x55e83d1017a0 <sds.c:318:12> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d101788 <col:12> 'unsigned char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d101740 <col:12> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
`-IntegerLiteral 0x55e83d101768 <./sds.h:83:23> 'int' 7
[B2.12] & [B2.13]
   T: switch [B2.14]
   Preds (1): B39
   Succs (6): B10 B17 B24 B31 B38 B3

 [B3]
  default:
   1: IntegerLiteral 0x55e83d1092f0 <sds.c:351:24> 'int' 0
0
   2: ImplicitCastExpr 0x55e83d109310 <sds.c:351:24> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d1092f0 <col:24> 'int' 0
[B3.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: DeclRefExpr 0x55e83d1092c8 <sds.c:351:18> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
len
   4: BinaryOperator 0x55e83d109328 <sds.c:351:18, col:24> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d1092c8 <col:18> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d109310 <col:24> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d1092f0 <col:24> 'int' 0
[B3.3] = [B3.2]
   Preds (1): B2
   Succs (1): B1

 [B4]
   1: ConditionalOperator 0x55e83d109098 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x55e83d108d10 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x55e83d108ce8 <sds.c:347:20, col:115> 'int' '||'
|   |-ParenExpr 0x55e83d108a58 <col:20, col:69> 'int'
|   | `-BinaryOperator 0x55e83d108a30 <col:21, col:65> 'int' '&&'
|   |   |-BinaryOperator 0x55e83d108820 <col:21, col:29> 'int' '>='
|   |   | |-ImplicitCastExpr 0x55e83d108808 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x55e83d1087c0 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   |   | `-IntegerLiteral 0x55e83d1087e8 <col:29> 'int' 0
|   |   `-BinaryOperator 0x55e83d108a08 <col:34, col:65> 'int' '>='
|   |     |-BinaryOperator 0x55e83d108968 <col:34, col:48> 'unsigned long' '-'
|   |     | |-ImplicitCastExpr 0x55e83d108938 <col:34, col:38> 'uint64_t':'unsigned long' <LValueToRValue>
|   |     | | `-MemberExpr 0x55e83d108888 <col:34, col:38> 'uint64_t':'unsigned long' lvalue ->alloc 0x55e83d0d62b8
|   |     | |   `-ImplicitCastExpr 0x55e83d108870 <col:34> 'struct sdshdr64 *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e83d108848 <col:34> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
|   |     | `-ImplicitCastExpr 0x55e83d108950 <col:44, col:48> 'uint64_t':'unsigned long' <LValueToRValue>
|   |     |   `-MemberExpr 0x55e83d108900 <col:44, col:48> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
|   |     |     `-ImplicitCastExpr 0x55e83d1088e8 <col:44> 'struct sdshdr64 *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e83d1088c0 <col:44> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
|   |     `-CStyleCastExpr 0x55e83d1089e0 <col:55, col:65> 'uint64_t':'unsigned long' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e83d1089c8 <col:65> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e83d108990 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   `-ParenExpr 0x55e83d108cc8 <col:74, col:115> 'int'
|     `-BinaryOperator 0x55e83d108ca0 <col:75, col:114> 'int' '&&'
|       |-BinaryOperator 0x55e83d108ad8 <col:75, col:82> 'int' '<'
|       | |-ImplicitCastExpr 0x55e83d108ac0 <col:75> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55e83d108a78 <col:75> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|       | `-IntegerLiteral 0x55e83d108aa0 <col:82> 'int' 0
|       `-BinaryOperator 0x55e83d108c78 <col:87, col:114> 'int' '>='
|         |-ImplicitCastExpr 0x55e83d108c60 <col:87, col:91> 'uint64_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55e83d108b40 <col:87, col:91> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
|         |   `-ImplicitCastExpr 0x55e83d108b28 <col:87> 'struct sdshdr64 *' <LValueToRValue>
|         |     `-DeclRefExpr 0x55e83d108b00 <col:87> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
|         `-CStyleCastExpr 0x55e83d108c38 <col:98, col:114> 'uint64_t':'unsigned long' <IntegralCast>
|           `-ParenExpr 0x55e83d108c18 <col:108, col:114> 'int'
|             `-UnaryOperator 0x55e83d108bb8 <col:109, col:110> 'int' prefix '-'
|               `-ImplicitCastExpr 0x55e83d108ba0 <col:110> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x55e83d108b78 <col:110> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|-CStyleCastExpr 0x55e83d108db0 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x55e83d108d90 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x55e83d108d30 <col:28> 'int' 0
`-CallExpr 0x55e83d108ff0 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x55e83d108fd8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d108dd8 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x55e83d109038 <<scratch space>:155:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d108e78 <col:1> 'const char [97]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (uint64_t)incr) || (incr < 0 && sh->len >= (uint64_t)(-incr))"
  |-ImplicitCastExpr 0x55e83d109050 <line:156:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d108f00 <col:1> 'const char [6]' lvalue "sds.c"
  |-ImplicitCastExpr 0x55e83d109068 <line:157:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x55e83d108f30 <col:1> 'int' 347
  `-ImplicitCastExpr 0x55e83d109080 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x55e83d108fb8 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x55e83d108f98 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x55e83d108f50 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
(([B10.10] && [B9.13]) || ([B8.4] && [B7.9])) ? [B5.2] : [B6.12]
   2: DeclRefExpr 0x55e83d109110 <sds.c:348:20> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
sh
   3: ImplicitCastExpr 0x55e83d109138 <sds.c:348:20> 'struct sdshdr64 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d109110 <col:20> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B4.2] (ImplicitCastExpr, LValueToRValue, struct sdshdr64 *)
   4: MemberExpr 0x55e83d109150 <sds.c:348:20, col:24> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
`-ImplicitCastExpr 0x55e83d109138 <col:20> 'struct sdshdr64 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d109110 <col:20> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B4.3]->len
   5: DeclRefExpr 0x55e83d109188 <sds.c:348:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   6: ImplicitCastExpr 0x55e83d1091b0 <sds.c:348:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d109188 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ImplicitCastExpr 0x55e83d1091c8 <sds.c:348:31> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1091b0 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d109188 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B4.6] (ImplicitCastExpr, IntegralCast, unsigned long)
   8: CompoundAssignOperator 0x55e83d1091e0 <sds.c:348:20, col:31> 'uint64_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-MemberExpr 0x55e83d109150 <col:20, col:24> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
| `-ImplicitCastExpr 0x55e83d109138 <col:20> 'struct sdshdr64 *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d109110 <col:20> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
`-ImplicitCastExpr 0x55e83d1091c8 <col:31> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d1091b0 <col:31> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d109188 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B4.4] += [B4.7]
   9: DeclRefExpr 0x55e83d1090e8 <sds.c:348:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
len
  10: BinaryOperator 0x55e83d109260 <sds.c:348:13, col:35> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d1090e8 <col:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
`-ParenExpr 0x55e83d109218 <col:19, col:35> 'uint64_t':'unsigned long'
  `-CompoundAssignOperator 0x55e83d1091e0 <col:20, col:31> 'uint64_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |-MemberExpr 0x55e83d109150 <col:20, col:24> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
    | `-ImplicitCastExpr 0x55e83d109138 <col:20> 'struct sdshdr64 *' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d109110 <col:20> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
    `-ImplicitCastExpr 0x55e83d1091c8 <col:31> 'unsigned long' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d1091b0 <col:31> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d109188 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B4.9] = ([B4.8])
   T: break;
   Preds (2): B5 B6(Unreachable)
   Succs (1): B1

 [B5]
   1: IntegerLiteral 0x55e83d108d30 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x55e83d108db0 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x55e83d108d90 <col:27, col:29> 'int'
  `-IntegerLiteral 0x55e83d108d30 <col:28> 'int' 0
(void)([B5.1]) (CStyleCastExpr, ToVoid, void)
   Preds (2): B7 B9
   Succs (1): B4

 [B6 (NORETURN)]
   1: DeclRefExpr 0x55e83d108dd8 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x55e83d108fd8 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d108dd8 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x55e83d108e78 <<scratch space>:155:1> 'const char [97]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (uint64_t)incr) || (incr < 0 && sh->len >= (uint64_t)(-incr))"
"(incr >= 0 && sh->alloc-sh->len >= (uint64_t)incr) || (incr < 0 && sh->len >= (uint64_t)(-incr))"
   4: ImplicitCastExpr 0x55e83d109038 <<scratch space>:155:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d108e78 <col:1> 'const char [97]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (uint64_t)incr) || (incr < 0 && sh->len >= (uint64_t)(-incr))"
[B6.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x55e83d108f00 <<scratch space>:156:1> 'const char [6]' lvalue "sds.c"
"sds.c"
   6: ImplicitCastExpr 0x55e83d109050 <<scratch space>:156:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d108f00 <col:1> 'const char [6]' lvalue "sds.c"
[B6.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55e83d108f30 <<scratch space>:157:1> 'int' 347
347
   8: ImplicitCastExpr 0x55e83d109068 <<scratch space>:157:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x55e83d108f30 <col:1> 'int' 347
[B6.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x55e83d108f50 </usr/include/assert.h:129:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
"void sdsIncrLen(sds, int)"
  10: PredefinedExpr 0x55e83d108f98 </usr/include/assert.h:129:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x55e83d108f50 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x55e83d109080 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x55e83d108fb8 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x55e83d108f98 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x55e83d108f50 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__extension__ [B6.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x55e83d108ff0 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x55e83d108fd8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d108dd8 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x55e83d109038 <<scratch space>:155:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d108e78 <col:1> 'const char [97]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (uint64_t)incr) || (incr < 0 && sh->len >= (uint64_t)(-incr))"
|-ImplicitCastExpr 0x55e83d109050 <line:156:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d108f00 <col:1> 'const char [6]' lvalue "sds.c"
|-ImplicitCastExpr 0x55e83d109068 <line:157:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x55e83d108f30 <col:1> 'int' 347
`-ImplicitCastExpr 0x55e83d109080 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x55e83d108fb8 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x55e83d108f98 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x55e83d108f50 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
[B6.2]([B6.4], [B6.6], [B6.8], [B6.11])
   Preds (2): B7 B8
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x55e83d108b00 <sds.c:347:87> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
sh
   2: ImplicitCastExpr 0x55e83d108b28 <sds.c:347:87> 'struct sdshdr64 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d108b00 <col:87> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B7.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr64 *)
   3: MemberExpr 0x55e83d108b40 <sds.c:347:87, col:91> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
`-ImplicitCastExpr 0x55e83d108b28 <col:87> 'struct sdshdr64 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d108b00 <col:87> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B7.2]->len
   4: ImplicitCastExpr 0x55e83d108c60 <sds.c:347:87, col:91> 'uint64_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x55e83d108b40 <col:87, col:91> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
  `-ImplicitCastExpr 0x55e83d108b28 <col:87> 'struct sdshdr64 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d108b00 <col:87> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B7.3] (ImplicitCastExpr, LValueToRValue, uint64_t)
   5: DeclRefExpr 0x55e83d108b78 <sds.c:347:110> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   6: ImplicitCastExpr 0x55e83d108ba0 <sds.c:347:110> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d108b78 <col:110> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: UnaryOperator 0x55e83d108bb8 <sds.c:347:109, col:110> 'int' prefix '-'
`-ImplicitCastExpr 0x55e83d108ba0 <col:110> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d108b78 <col:110> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
-[B7.6]
   8: CStyleCastExpr 0x55e83d108c38 <sds.c:347:98, col:114> 'uint64_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x55e83d108c18 <col:108, col:114> 'int'
  `-UnaryOperator 0x55e83d108bb8 <col:109, col:110> 'int' prefix '-'
    `-ImplicitCastExpr 0x55e83d108ba0 <col:110> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d108b78 <col:110> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
(uint64_t)([B7.7]) (CStyleCastExpr, IntegralCast, uint64_t)
   9: BinaryOperator 0x55e83d108c78 <sds.c:347:87, col:114> 'int' '>='
|-ImplicitCastExpr 0x55e83d108c60 <col:87, col:91> 'uint64_t':'unsigned long' <LValueToRValue>
| `-MemberExpr 0x55e83d108b40 <col:87, col:91> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
|   `-ImplicitCastExpr 0x55e83d108b28 <col:87> 'struct sdshdr64 *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d108b00 <col:87> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
`-CStyleCastExpr 0x55e83d108c38 <col:98, col:114> 'uint64_t':'unsigned long' <IntegralCast>
  `-ParenExpr 0x55e83d108c18 <col:108, col:114> 'int'
    `-UnaryOperator 0x55e83d108bb8 <col:109, col:110> 'int' prefix '-'
      `-ImplicitCastExpr 0x55e83d108ba0 <col:110> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d108b78 <col:110> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B7.4] >= [B7.8]
   T: (([B10.10] && [B9.13]) || ([B8.4] && [B7.9])) ? ... : ...
   Preds (1): B8
   Succs (2): B5 B6

 [B8]
   1: DeclRefExpr 0x55e83d108a78 <sds.c:347:75> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   2: ImplicitCastExpr 0x55e83d108ac0 <sds.c:347:75> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d108a78 <col:75> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d108aa0 <sds.c:347:82> 'int' 0
0
   4: BinaryOperator 0x55e83d108ad8 <sds.c:347:75, col:82> 'int' '<'
|-ImplicitCastExpr 0x55e83d108ac0 <col:75> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d108a78 <col:75> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d108aa0 <col:82> 'int' 0
[B8.2] < [B8.3]
   T: [B8.4] && ...
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x55e83d108848 <sds.c:347:34> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
sh
   2: ImplicitCastExpr 0x55e83d108870 <sds.c:347:34> 'struct sdshdr64 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d108848 <col:34> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B9.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr64 *)
   3: MemberExpr 0x55e83d108888 <sds.c:347:34, col:38> 'uint64_t':'unsigned long' lvalue ->alloc 0x55e83d0d62b8
`-ImplicitCastExpr 0x55e83d108870 <col:34> 'struct sdshdr64 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d108848 <col:34> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B9.2]->alloc
   4: ImplicitCastExpr 0x55e83d108938 <sds.c:347:34, col:38> 'uint64_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x55e83d108888 <col:34, col:38> 'uint64_t':'unsigned long' lvalue ->alloc 0x55e83d0d62b8
  `-ImplicitCastExpr 0x55e83d108870 <col:34> 'struct sdshdr64 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d108848 <col:34> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B9.3] (ImplicitCastExpr, LValueToRValue, uint64_t)
   5: DeclRefExpr 0x55e83d1088c0 <sds.c:347:44> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
sh
   6: ImplicitCastExpr 0x55e83d1088e8 <sds.c:347:44> 'struct sdshdr64 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1088c0 <col:44> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B9.5] (ImplicitCastExpr, LValueToRValue, struct sdshdr64 *)
   7: MemberExpr 0x55e83d108900 <sds.c:347:44, col:48> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
`-ImplicitCastExpr 0x55e83d1088e8 <col:44> 'struct sdshdr64 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1088c0 <col:44> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B9.6]->len
   8: ImplicitCastExpr 0x55e83d108950 <sds.c:347:44, col:48> 'uint64_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x55e83d108900 <col:44, col:48> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
  `-ImplicitCastExpr 0x55e83d1088e8 <col:44> 'struct sdshdr64 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1088c0 <col:44> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B9.7] (ImplicitCastExpr, LValueToRValue, uint64_t)
   9: BinaryOperator 0x55e83d108968 <sds.c:347:34, col:48> 'unsigned long' '-'
|-ImplicitCastExpr 0x55e83d108938 <col:34, col:38> 'uint64_t':'unsigned long' <LValueToRValue>
| `-MemberExpr 0x55e83d108888 <col:34, col:38> 'uint64_t':'unsigned long' lvalue ->alloc 0x55e83d0d62b8
|   `-ImplicitCastExpr 0x55e83d108870 <col:34> 'struct sdshdr64 *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d108848 <col:34> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
`-ImplicitCastExpr 0x55e83d108950 <col:44, col:48> 'uint64_t':'unsigned long' <LValueToRValue>
  `-MemberExpr 0x55e83d108900 <col:44, col:48> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
    `-ImplicitCastExpr 0x55e83d1088e8 <col:44> 'struct sdshdr64 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1088c0 <col:44> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
[B9.4] - [B9.8]
  10: DeclRefExpr 0x55e83d108990 <sds.c:347:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
  11: ImplicitCastExpr 0x55e83d1089c8 <sds.c:347:65> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d108990 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B9.10] (ImplicitCastExpr, LValueToRValue, int)
  12: CStyleCastExpr 0x55e83d1089e0 <sds.c:347:55, col:65> 'uint64_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1089c8 <col:65> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d108990 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
(uint64_t)[B9.11] (CStyleCastExpr, IntegralCast, uint64_t)
  13: BinaryOperator 0x55e83d108a08 <sds.c:347:34, col:65> 'int' '>='
|-BinaryOperator 0x55e83d108968 <col:34, col:48> 'unsigned long' '-'
| |-ImplicitCastExpr 0x55e83d108938 <col:34, col:38> 'uint64_t':'unsigned long' <LValueToRValue>
| | `-MemberExpr 0x55e83d108888 <col:34, col:38> 'uint64_t':'unsigned long' lvalue ->alloc 0x55e83d0d62b8
| |   `-ImplicitCastExpr 0x55e83d108870 <col:34> 'struct sdshdr64 *' <LValueToRValue>
| |     `-DeclRefExpr 0x55e83d108848 <col:34> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
| `-ImplicitCastExpr 0x55e83d108950 <col:44, col:48> 'uint64_t':'unsigned long' <LValueToRValue>
|   `-MemberExpr 0x55e83d108900 <col:44, col:48> 'uint64_t':'unsigned long' lvalue ->len 0x55e83d0d6260
|     `-ImplicitCastExpr 0x55e83d1088e8 <col:44> 'struct sdshdr64 *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d1088c0 <col:44> 'struct sdshdr64 *' lvalue Var 0x55e83d1085b0 'sh' 'struct sdshdr64 *'
`-CStyleCastExpr 0x55e83d1089e0 <col:55, col:65> 'uint64_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d1089c8 <col:65> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d108990 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B9.9] >= [B9.12]
   T: ([B10.10] && [B9.13]) || ...
   Preds (1): B10
   Succs (2): B5 B8

 [B10]
  case 4:
   1: DeclRefExpr 0x55e83d108610 <sds.c:346:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d1086b8 <./sds.h:85:70, col:72> 'sds':'char *' <LValueToRValue>
`-ParenExpr 0x55e83d108638 <col:70, col:72> 'sds':'char *' lvalue
  `-DeclRefExpr 0x55e83d108610 <sds.c:346:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
([B10.1]) (ImplicitCastExpr, LValueToRValue, sds)
   3: UnaryExprOrTypeTraitExpr 0x55e83d108678 <./sds.h:85:75, col:98> 'unsigned long' sizeof 'struct sdshdr64':'struct sdshdr64'
sizeof(struct sdshdr64)
   4: BinaryOperator 0x55e83d1086d0 <./sds.h:85:70, col:99> 'sds':'char *' '-'
|-ImplicitCastExpr 0x55e83d1086b8 <col:70, col:72> 'sds':'char *' <LValueToRValue>
| `-ParenExpr 0x55e83d108638 <col:70, col:72> 'sds':'char *' lvalue
|   `-DeclRefExpr 0x55e83d108610 <sds.c:346:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
`-ParenExpr 0x55e83d108698 <./sds.h:85:74, col:99> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55e83d108678 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr64':'struct sdshdr64'
[B10.2] - ([B10.3])
   5: CStyleCastExpr 0x55e83d108770 <./sds.h:85:49, col:100> 'struct sdshdr64 *' <BitCast>
`-ParenExpr 0x55e83d108750 <col:69, col:100> 'sds':'char *'
  `-BinaryOperator 0x55e83d1086d0 <col:70, col:99> 'sds':'char *' '-'
    |-ImplicitCastExpr 0x55e83d1086b8 <col:70, col:72> 'sds':'char *' <LValueToRValue>
    | `-ParenExpr 0x55e83d108638 <col:70, col:72> 'sds':'char *' lvalue
    |   `-DeclRefExpr 0x55e83d108610 <sds.c:346:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
    `-ParenExpr 0x55e83d108698 <./sds.h:85:74, col:99> 'unsigned long'
      `-UnaryExprOrTypeTraitExpr 0x55e83d108678 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr64':'struct sdshdr64'
(struct sdshdr64 *)([B10.4]) (CStyleCastExpr, BitCast, struct sdshdr64 *)
   6: DeclStmt 0x55e83d108798 <./sds.h:85:26, col:101>col:44
`-VarDecl 0x55e83d1085b0 <col:26, col:100> col:44 used sh 'struct sdshdr64 *' cinit
  `-CStyleCastExpr 0x55e83d108770 <col:49, col:100> 'struct sdshdr64 *' <BitCast>
    `-ParenExpr 0x55e83d108750 <col:69, col:100> 'sds':'char *'
      `-BinaryOperator 0x55e83d1086d0 <col:70, col:99> 'sds':'char *' '-'
        |-ImplicitCastExpr 0x55e83d1086b8 <col:70, col:72> 'sds':'char *' <LValueToRValue>
        | `-ParenExpr 0x55e83d108638 <col:70, col:72> 'sds':'char *' lvalue
        |   `-DeclRefExpr 0x55e83d108610 <sds.c:346:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
        `-ParenExpr 0x55e83d108698 <./sds.h:85:74, col:99> 'unsigned long'
          `-UnaryExprOrTypeTraitExpr 0x55e83d108678 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr64':'struct sdshdr64'
struct sdshdr64 *sh = (struct sdshdr64 *)((s) - (sizeof(struct sdshdr64)));
   7: DeclRefExpr 0x55e83d1087c0 <sds.c:347:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   8: ImplicitCastExpr 0x55e83d108808 <sds.c:347:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d1087c0 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B10.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55e83d1087e8 <sds.c:347:29> 'int' 0
0
  10: BinaryOperator 0x55e83d108820 <sds.c:347:21, col:29> 'int' '>='
|-ImplicitCastExpr 0x55e83d108808 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1087c0 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d1087e8 <col:29> 'int' 0
[B10.8] >= [B10.9]
   T: [B10.10] && ...
   Preds (1): B2
   Succs (2): B9 B8

 [B11]
   1: ConditionalOperator 0x55e83d108310 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x55e83d106f60 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x55e83d106f38 <sds.c:341:20, col:123> 'int' '||'
|   |-ParenExpr 0x55e83d106ca0 <col:20, col:73> 'int'
|   | `-BinaryOperator 0x55e83d106c78 <col:21, col:69> 'int' '&&'
|   |   |-BinaryOperator 0x55e83d106a60 <col:21, col:29> 'int' '>='
|   |   | |-ImplicitCastExpr 0x55e83d106a48 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x55e83d106a00 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   |   | `-IntegerLiteral 0x55e83d106a28 <col:29> 'int' 0
|   |   `-BinaryOperator 0x55e83d106c50 <col:34, col:69> 'int' '>='
|   |     |-BinaryOperator 0x55e83d106ba8 <col:34, col:48> 'unsigned int' '-'
|   |     | |-ImplicitCastExpr 0x55e83d106b78 <col:34, col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | | `-MemberExpr 0x55e83d106ac8 <col:34, col:38> 'uint32_t':'unsigned int' lvalue ->alloc 0x55e83d0d6028
|   |     | |   `-ImplicitCastExpr 0x55e83d106ab0 <col:34> 'struct sdshdr32 *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e83d106a88 <col:34> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
|   |     | `-ImplicitCastExpr 0x55e83d106b90 <col:44, col:48> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     |   `-MemberExpr 0x55e83d106b40 <col:44, col:48> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
|   |     |     `-ImplicitCastExpr 0x55e83d106b28 <col:44> 'struct sdshdr32 *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e83d106b00 <col:44> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
|   |     `-CStyleCastExpr 0x55e83d106c28 <col:55, col:69> 'unsigned int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e83d106c10 <col:69> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e83d106bd0 <col:69> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   `-ParenExpr 0x55e83d106f18 <col:78, col:123> 'int'
|     `-BinaryOperator 0x55e83d106ef0 <col:79, col:122> 'int' '&&'
|       |-BinaryOperator 0x55e83d106d20 <col:79, col:86> 'int' '<'
|       | |-ImplicitCastExpr 0x55e83d106d08 <col:79> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55e83d106cc0 <col:79> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|       | `-IntegerLiteral 0x55e83d106ce8 <col:86> 'int' 0
|       `-BinaryOperator 0x55e83d106ec8 <col:91, col:122> 'int' '>='
|         |-ImplicitCastExpr 0x55e83d106eb0 <col:91, col:95> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55e83d106d88 <col:91, col:95> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
|         |   `-ImplicitCastExpr 0x55e83d106d70 <col:91> 'struct sdshdr32 *' <LValueToRValue>
|         |     `-DeclRefExpr 0x55e83d106d48 <col:91> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
|         `-CStyleCastExpr 0x55e83d106e88 <col:102, col:122> 'unsigned int' <IntegralCast>
|           `-ParenExpr 0x55e83d106e68 <col:116, col:122> 'int'
|             `-UnaryOperator 0x55e83d106e00 <col:117, col:118> 'int' prefix '-'
|               `-ImplicitCastExpr 0x55e83d106de8 <col:118> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x55e83d106dc0 <col:118> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|-CStyleCastExpr 0x55e83d107000 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x55e83d106fe0 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x55e83d106f80 <col:28> 'int' 0
`-CallExpr 0x55e83d108268 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x55e83d108250 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d107028 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x55e83d1082b0 <<scratch space>:149:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d1070c8 <col:1> 'const char [105]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (unsigned int)incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
  |-ImplicitCastExpr 0x55e83d1082c8 <line:150:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d107158 <col:1> 'const char [6]' lvalue "sds.c"
  |-ImplicitCastExpr 0x55e83d1082e0 <line:151:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x55e83d107188 <col:1> 'int' 341
  `-ImplicitCastExpr 0x55e83d1082f8 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x55e83d107210 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x55e83d1071f0 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x55e83d1071a8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
(([B17.10] && [B16.13]) || ([B15.4] && [B14.9])) ? [B12.2] : [B13.12]
   2: DeclRefExpr 0x55e83d108388 <sds.c:342:20> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
sh
   3: ImplicitCastExpr 0x55e83d1083b0 <sds.c:342:20> 'struct sdshdr32 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d108388 <col:20> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B11.2] (ImplicitCastExpr, LValueToRValue, struct sdshdr32 *)
   4: MemberExpr 0x55e83d1083c8 <sds.c:342:20, col:24> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
`-ImplicitCastExpr 0x55e83d1083b0 <col:20> 'struct sdshdr32 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d108388 <col:20> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B11.3]->len
   5: DeclRefExpr 0x55e83d108400 <sds.c:342:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   6: ImplicitCastExpr 0x55e83d108428 <sds.c:342:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d108400 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B11.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ImplicitCastExpr 0x55e83d108440 <sds.c:342:31> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d108428 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d108400 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B11.6] (ImplicitCastExpr, IntegralCast, unsigned int)
   8: CompoundAssignOperator 0x55e83d108458 <sds.c:342:20, col:31> 'uint32_t':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|-MemberExpr 0x55e83d1083c8 <col:20, col:24> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
| `-ImplicitCastExpr 0x55e83d1083b0 <col:20> 'struct sdshdr32 *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d108388 <col:20> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
`-ImplicitCastExpr 0x55e83d108440 <col:31> 'unsigned int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d108428 <col:31> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d108400 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B11.4] += [B11.7]
   9: ImplicitCastExpr 0x55e83d1084b0 <sds.c:342:19, col:35> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x55e83d108490 <col:19, col:35> 'uint32_t':'unsigned int'
  `-CompoundAssignOperator 0x55e83d108458 <col:20, col:31> 'uint32_t':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |-MemberExpr 0x55e83d1083c8 <col:20, col:24> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
    | `-ImplicitCastExpr 0x55e83d1083b0 <col:20> 'struct sdshdr32 *' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d108388 <col:20> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
    `-ImplicitCastExpr 0x55e83d108440 <col:31> 'unsigned int' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d108428 <col:31> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d108400 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
([B11.8]) (ImplicitCastExpr, IntegralCast, size_t)
  10: DeclRefExpr 0x55e83d108360 <sds.c:342:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
len
  11: BinaryOperator 0x55e83d1084c8 <sds.c:342:13, col:35> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d108360 <col:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d1084b0 <col:19, col:35> 'size_t':'unsigned long' <IntegralCast>
  `-ParenExpr 0x55e83d108490 <col:19, col:35> 'uint32_t':'unsigned int'
    `-CompoundAssignOperator 0x55e83d108458 <col:20, col:31> 'uint32_t':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
      |-MemberExpr 0x55e83d1083c8 <col:20, col:24> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
      | `-ImplicitCastExpr 0x55e83d1083b0 <col:20> 'struct sdshdr32 *' <LValueToRValue>
      |   `-DeclRefExpr 0x55e83d108388 <col:20> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
      `-ImplicitCastExpr 0x55e83d108440 <col:31> 'unsigned int' <IntegralCast>
        `-ImplicitCastExpr 0x55e83d108428 <col:31> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55e83d108400 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B11.10] = [B11.9]
   T: break;
   Preds (2): B12 B13(Unreachable)
   Succs (1): B1

 [B12]
   1: IntegerLiteral 0x55e83d106f80 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x55e83d107000 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x55e83d106fe0 <col:27, col:29> 'int'
  `-IntegerLiteral 0x55e83d106f80 <col:28> 'int' 0
(void)([B12.1]) (CStyleCastExpr, ToVoid, void)
   Preds (2): B14 B16
   Succs (1): B11

 [B13 (NORETURN)]
   1: DeclRefExpr 0x55e83d107028 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x55e83d108250 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d107028 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x55e83d1070c8 <<scratch space>:149:1> 'const char [105]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (unsigned int)incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
"(incr >= 0 && sh->alloc-sh->len >= (unsigned int)incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
   4: ImplicitCastExpr 0x55e83d1082b0 <<scratch space>:149:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d1070c8 <col:1> 'const char [105]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (unsigned int)incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
[B13.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x55e83d107158 <<scratch space>:150:1> 'const char [6]' lvalue "sds.c"
"sds.c"
   6: ImplicitCastExpr 0x55e83d1082c8 <<scratch space>:150:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d107158 <col:1> 'const char [6]' lvalue "sds.c"
[B13.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55e83d107188 <<scratch space>:151:1> 'int' 341
341
   8: ImplicitCastExpr 0x55e83d1082e0 <<scratch space>:151:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x55e83d107188 <col:1> 'int' 341
[B13.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x55e83d1071a8 </usr/include/assert.h:129:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
"void sdsIncrLen(sds, int)"
  10: PredefinedExpr 0x55e83d1071f0 </usr/include/assert.h:129:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x55e83d1071a8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x55e83d1082f8 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x55e83d107210 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x55e83d1071f0 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x55e83d1071a8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__extension__ [B13.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x55e83d108268 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x55e83d108250 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d107028 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x55e83d1082b0 <<scratch space>:149:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d1070c8 <col:1> 'const char [105]' lvalue "(incr >= 0 && sh->alloc-sh->len >= (unsigned int)incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
|-ImplicitCastExpr 0x55e83d1082c8 <line:150:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d107158 <col:1> 'const char [6]' lvalue "sds.c"
|-ImplicitCastExpr 0x55e83d1082e0 <line:151:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x55e83d107188 <col:1> 'int' 341
`-ImplicitCastExpr 0x55e83d1082f8 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x55e83d107210 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x55e83d1071f0 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x55e83d1071a8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
[B13.2]([B13.4], [B13.6], [B13.8], [B13.11])
   Preds (2): B14 B15
   Succs (1): B0

 [B14]
   1: DeclRefExpr 0x55e83d106d48 <sds.c:341:91> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
sh
   2: ImplicitCastExpr 0x55e83d106d70 <sds.c:341:91> 'struct sdshdr32 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d106d48 <col:91> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B14.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr32 *)
   3: MemberExpr 0x55e83d106d88 <sds.c:341:91, col:95> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
`-ImplicitCastExpr 0x55e83d106d70 <col:91> 'struct sdshdr32 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d106d48 <col:91> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B14.2]->len
   4: ImplicitCastExpr 0x55e83d106eb0 <sds.c:341:91, col:95> 'uint32_t':'unsigned int' <LValueToRValue>
`-MemberExpr 0x55e83d106d88 <col:91, col:95> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
  `-ImplicitCastExpr 0x55e83d106d70 <col:91> 'struct sdshdr32 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d106d48 <col:91> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B14.3] (ImplicitCastExpr, LValueToRValue, uint32_t)
   5: DeclRefExpr 0x55e83d106dc0 <sds.c:341:118> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   6: ImplicitCastExpr 0x55e83d106de8 <sds.c:341:118> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d106dc0 <col:118> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B14.5] (ImplicitCastExpr, LValueToRValue, int)
   7: UnaryOperator 0x55e83d106e00 <sds.c:341:117, col:118> 'int' prefix '-'
`-ImplicitCastExpr 0x55e83d106de8 <col:118> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d106dc0 <col:118> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
-[B14.6]
   8: CStyleCastExpr 0x55e83d106e88 <sds.c:341:102, col:122> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55e83d106e68 <col:116, col:122> 'int'
  `-UnaryOperator 0x55e83d106e00 <col:117, col:118> 'int' prefix '-'
    `-ImplicitCastExpr 0x55e83d106de8 <col:118> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d106dc0 <col:118> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
(unsigned int)([B14.7]) (CStyleCastExpr, IntegralCast, unsigned int)
   9: BinaryOperator 0x55e83d106ec8 <sds.c:341:91, col:122> 'int' '>='
|-ImplicitCastExpr 0x55e83d106eb0 <col:91, col:95> 'uint32_t':'unsigned int' <LValueToRValue>
| `-MemberExpr 0x55e83d106d88 <col:91, col:95> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
|   `-ImplicitCastExpr 0x55e83d106d70 <col:91> 'struct sdshdr32 *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d106d48 <col:91> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
`-CStyleCastExpr 0x55e83d106e88 <col:102, col:122> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55e83d106e68 <col:116, col:122> 'int'
    `-UnaryOperator 0x55e83d106e00 <col:117, col:118> 'int' prefix '-'
      `-ImplicitCastExpr 0x55e83d106de8 <col:118> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d106dc0 <col:118> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B14.4] >= [B14.8]
   T: (([B17.10] && [B16.13]) || ([B15.4] && [B14.9])) ? ... : ...
   Preds (1): B15
   Succs (2): B12 B13

 [B15]
   1: DeclRefExpr 0x55e83d106cc0 <sds.c:341:79> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   2: ImplicitCastExpr 0x55e83d106d08 <sds.c:341:79> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d106cc0 <col:79> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B15.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d106ce8 <sds.c:341:86> 'int' 0
0
   4: BinaryOperator 0x55e83d106d20 <sds.c:341:79, col:86> 'int' '<'
|-ImplicitCastExpr 0x55e83d106d08 <col:79> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d106cc0 <col:79> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d106ce8 <col:86> 'int' 0
[B15.2] < [B15.3]
   T: [B15.4] && ...
   Preds (2): B16 B17
   Succs (2): B14 B13

 [B16]
   1: DeclRefExpr 0x55e83d106a88 <sds.c:341:34> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
sh
   2: ImplicitCastExpr 0x55e83d106ab0 <sds.c:341:34> 'struct sdshdr32 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d106a88 <col:34> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B16.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr32 *)
   3: MemberExpr 0x55e83d106ac8 <sds.c:341:34, col:38> 'uint32_t':'unsigned int' lvalue ->alloc 0x55e83d0d6028
`-ImplicitCastExpr 0x55e83d106ab0 <col:34> 'struct sdshdr32 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d106a88 <col:34> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B16.2]->alloc
   4: ImplicitCastExpr 0x55e83d106b78 <sds.c:341:34, col:38> 'uint32_t':'unsigned int' <LValueToRValue>
`-MemberExpr 0x55e83d106ac8 <col:34, col:38> 'uint32_t':'unsigned int' lvalue ->alloc 0x55e83d0d6028
  `-ImplicitCastExpr 0x55e83d106ab0 <col:34> 'struct sdshdr32 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d106a88 <col:34> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B16.3] (ImplicitCastExpr, LValueToRValue, uint32_t)
   5: DeclRefExpr 0x55e83d106b00 <sds.c:341:44> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
sh
   6: ImplicitCastExpr 0x55e83d106b28 <sds.c:341:44> 'struct sdshdr32 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d106b00 <col:44> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B16.5] (ImplicitCastExpr, LValueToRValue, struct sdshdr32 *)
   7: MemberExpr 0x55e83d106b40 <sds.c:341:44, col:48> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
`-ImplicitCastExpr 0x55e83d106b28 <col:44> 'struct sdshdr32 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d106b00 <col:44> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B16.6]->len
   8: ImplicitCastExpr 0x55e83d106b90 <sds.c:341:44, col:48> 'uint32_t':'unsigned int' <LValueToRValue>
`-MemberExpr 0x55e83d106b40 <col:44, col:48> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
  `-ImplicitCastExpr 0x55e83d106b28 <col:44> 'struct sdshdr32 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d106b00 <col:44> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B16.7] (ImplicitCastExpr, LValueToRValue, uint32_t)
   9: BinaryOperator 0x55e83d106ba8 <sds.c:341:34, col:48> 'unsigned int' '-'
|-ImplicitCastExpr 0x55e83d106b78 <col:34, col:38> 'uint32_t':'unsigned int' <LValueToRValue>
| `-MemberExpr 0x55e83d106ac8 <col:34, col:38> 'uint32_t':'unsigned int' lvalue ->alloc 0x55e83d0d6028
|   `-ImplicitCastExpr 0x55e83d106ab0 <col:34> 'struct sdshdr32 *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d106a88 <col:34> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
`-ImplicitCastExpr 0x55e83d106b90 <col:44, col:48> 'uint32_t':'unsigned int' <LValueToRValue>
  `-MemberExpr 0x55e83d106b40 <col:44, col:48> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
    `-ImplicitCastExpr 0x55e83d106b28 <col:44> 'struct sdshdr32 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d106b00 <col:44> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
[B16.4] - [B16.8]
  10: DeclRefExpr 0x55e83d106bd0 <sds.c:341:69> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
  11: ImplicitCastExpr 0x55e83d106c10 <sds.c:341:69> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d106bd0 <col:69> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B16.10] (ImplicitCastExpr, LValueToRValue, int)
  12: CStyleCastExpr 0x55e83d106c28 <sds.c:341:55, col:69> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d106c10 <col:69> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d106bd0 <col:69> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
(unsigned int)[B16.11] (CStyleCastExpr, IntegralCast, unsigned int)
  13: BinaryOperator 0x55e83d106c50 <sds.c:341:34, col:69> 'int' '>='
|-BinaryOperator 0x55e83d106ba8 <col:34, col:48> 'unsigned int' '-'
| |-ImplicitCastExpr 0x55e83d106b78 <col:34, col:38> 'uint32_t':'unsigned int' <LValueToRValue>
| | `-MemberExpr 0x55e83d106ac8 <col:34, col:38> 'uint32_t':'unsigned int' lvalue ->alloc 0x55e83d0d6028
| |   `-ImplicitCastExpr 0x55e83d106ab0 <col:34> 'struct sdshdr32 *' <LValueToRValue>
| |     `-DeclRefExpr 0x55e83d106a88 <col:34> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
| `-ImplicitCastExpr 0x55e83d106b90 <col:44, col:48> 'uint32_t':'unsigned int' <LValueToRValue>
|   `-MemberExpr 0x55e83d106b40 <col:44, col:48> 'uint32_t':'unsigned int' lvalue ->len 0x55e83d0d5fd0
|     `-ImplicitCastExpr 0x55e83d106b28 <col:44> 'struct sdshdr32 *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d106b00 <col:44> 'struct sdshdr32 *' lvalue Var 0x55e83d1067f0 'sh' 'struct sdshdr32 *'
`-CStyleCastExpr 0x55e83d106c28 <col:55, col:69> 'unsigned int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d106c10 <col:69> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d106bd0 <col:69> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B16.9] >= [B16.12]
   T: ([B17.10] && [B16.13]) || ...
   Preds (1): B17
   Succs (2): B12 B15

 [B17]
  case 3:
   1: DeclRefExpr 0x55e83d106850 <sds.c:340:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d1068f8 <./sds.h:85:70, col:72> 'sds':'char *' <LValueToRValue>
`-ParenExpr 0x55e83d106878 <col:70, col:72> 'sds':'char *' lvalue
  `-DeclRefExpr 0x55e83d106850 <sds.c:340:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
([B17.1]) (ImplicitCastExpr, LValueToRValue, sds)
   3: UnaryExprOrTypeTraitExpr 0x55e83d1068b8 <./sds.h:85:75, col:98> 'unsigned long' sizeof 'struct sdshdr32':'struct sdshdr32'
sizeof(struct sdshdr32)
   4: BinaryOperator 0x55e83d106910 <./sds.h:85:70, col:99> 'sds':'char *' '-'
|-ImplicitCastExpr 0x55e83d1068f8 <col:70, col:72> 'sds':'char *' <LValueToRValue>
| `-ParenExpr 0x55e83d106878 <col:70, col:72> 'sds':'char *' lvalue
|   `-DeclRefExpr 0x55e83d106850 <sds.c:340:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
`-ParenExpr 0x55e83d1068d8 <./sds.h:85:74, col:99> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55e83d1068b8 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr32':'struct sdshdr32'
[B17.2] - ([B17.3])
   5: CStyleCastExpr 0x55e83d1069b0 <./sds.h:85:49, col:100> 'struct sdshdr32 *' <BitCast>
`-ParenExpr 0x55e83d106990 <col:69, col:100> 'sds':'char *'
  `-BinaryOperator 0x55e83d106910 <col:70, col:99> 'sds':'char *' '-'
    |-ImplicitCastExpr 0x55e83d1068f8 <col:70, col:72> 'sds':'char *' <LValueToRValue>
    | `-ParenExpr 0x55e83d106878 <col:70, col:72> 'sds':'char *' lvalue
    |   `-DeclRefExpr 0x55e83d106850 <sds.c:340:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
    `-ParenExpr 0x55e83d1068d8 <./sds.h:85:74, col:99> 'unsigned long'
      `-UnaryExprOrTypeTraitExpr 0x55e83d1068b8 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr32':'struct sdshdr32'
(struct sdshdr32 *)([B17.4]) (CStyleCastExpr, BitCast, struct sdshdr32 *)
   6: DeclStmt 0x55e83d1069d8 <./sds.h:85:26, col:101>col:44
`-VarDecl 0x55e83d1067f0 <col:26, col:100> col:44 used sh 'struct sdshdr32 *' cinit
  `-CStyleCastExpr 0x55e83d1069b0 <col:49, col:100> 'struct sdshdr32 *' <BitCast>
    `-ParenExpr 0x55e83d106990 <col:69, col:100> 'sds':'char *'
      `-BinaryOperator 0x55e83d106910 <col:70, col:99> 'sds':'char *' '-'
        |-ImplicitCastExpr 0x55e83d1068f8 <col:70, col:72> 'sds':'char *' <LValueToRValue>
        | `-ParenExpr 0x55e83d106878 <col:70, col:72> 'sds':'char *' lvalue
        |   `-DeclRefExpr 0x55e83d106850 <sds.c:340:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
        `-ParenExpr 0x55e83d1068d8 <./sds.h:85:74, col:99> 'unsigned long'
          `-UnaryExprOrTypeTraitExpr 0x55e83d1068b8 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr32':'struct sdshdr32'
struct sdshdr32 *sh = (struct sdshdr32 *)((s) - (sizeof(struct sdshdr32)));
   7: DeclRefExpr 0x55e83d106a00 <sds.c:341:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   8: ImplicitCastExpr 0x55e83d106a48 <sds.c:341:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d106a00 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B17.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55e83d106a28 <sds.c:341:29> 'int' 0
0
  10: BinaryOperator 0x55e83d106a60 <sds.c:341:21, col:29> 'int' '>='
|-ImplicitCastExpr 0x55e83d106a48 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d106a00 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d106a28 <col:29> 'int' 0
[B17.8] >= [B17.9]
   T: [B17.10] && ...
   Preds (1): B2
   Succs (2): B16 B15

 [B18]
   1: ConditionalOperator 0x55e83d106568 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x55e83d106258 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x55e83d106230 <sds.c:335:20, col:109> 'int' '||'
|   |-ParenExpr 0x55e83d103ea0 <col:20, col:59> 'int'
|   | `-BinaryOperator 0x55e83d103e78 <col:21, col:55> 'int' '&&'
|   |   |-BinaryOperator 0x55e83d103c70 <col:21, col:29> 'int' '>='
|   |   | |-ImplicitCastExpr 0x55e83d103c58 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x55e83d103c10 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   |   | `-IntegerLiteral 0x55e83d103c38 <col:29> 'int' 0
|   |   `-BinaryOperator 0x55e83d103e50 <col:34, col:55> 'int' '>='
|   |     |-BinaryOperator 0x55e83d103de8 <col:34, col:48> 'int' '-'
|   |     | |-ImplicitCastExpr 0x55e83d103da0 <col:34, col:38> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e83d103d88 <col:34, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|   |     | |   `-MemberExpr 0x55e83d103cd8 <col:34, col:38> 'uint16_t':'unsigned short' lvalue ->alloc 0x55e83d0d5d98
|   |     | |     `-ImplicitCastExpr 0x55e83d103cc0 <col:34> 'struct sdshdr16 *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x55e83d103c98 <col:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
|   |     | `-ImplicitCastExpr 0x55e83d103dd0 <col:44, col:48> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e83d103db8 <col:44, col:48> 'uint16_t':'unsigned short' <LValueToRValue>
|   |     |     `-MemberExpr 0x55e83d103d50 <col:44, col:48> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
|   |     |       `-ImplicitCastExpr 0x55e83d103d38 <col:44> 'struct sdshdr16 *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x55e83d103d10 <col:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
|   |     `-ImplicitCastExpr 0x55e83d103e38 <col:55> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x55e83d103e10 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   `-ParenExpr 0x55e83d104130 <col:64, col:109> 'int'
|     `-BinaryOperator 0x55e83d104108 <col:65, col:108> 'int' '&&'
|       |-BinaryOperator 0x55e83d103f20 <col:65, col:72> 'int' '<'
|       | |-ImplicitCastExpr 0x55e83d103f08 <col:65> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55e83d103ec0 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|       | `-IntegerLiteral 0x55e83d103ee8 <col:72> 'int' 0
|       `-BinaryOperator 0x55e83d1040e0 <col:77, col:108> 'int' '>='
|         |-ImplicitCastExpr 0x55e83d1040c8 <col:77, col:81> 'unsigned int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55e83d1040b0 <col:77, col:81> 'uint16_t':'unsigned short' <LValueToRValue>
|         |   `-MemberExpr 0x55e83d103f88 <col:77, col:81> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
|         |     `-ImplicitCastExpr 0x55e83d103f70 <col:77> 'struct sdshdr16 *' <LValueToRValue>
|         |       `-DeclRefExpr 0x55e83d103f48 <col:77> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
|         `-CStyleCastExpr 0x55e83d104088 <col:88, col:108> 'unsigned int' <IntegralCast>
|           `-ParenExpr 0x55e83d104068 <col:102, col:108> 'int'
|             `-UnaryOperator 0x55e83d104000 <col:103, col:104> 'int' prefix '-'
|               `-ImplicitCastExpr 0x55e83d103fe8 <col:104> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x55e83d103fc0 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|-CStyleCastExpr 0x55e83d1062f8 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x55e83d1062d8 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x55e83d106278 <col:28> 'int' 0
`-CallExpr 0x55e83d1064c0 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x55e83d1064a8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d106320 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x55e83d106508 <<scratch space>:143:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d106348 <col:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
  |-ImplicitCastExpr 0x55e83d106520 <line:144:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d1063d0 <col:1> 'const char [6]' lvalue "sds.c"
  |-ImplicitCastExpr 0x55e83d106538 <line:145:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x55e83d106400 <col:1> 'int' 335
  `-ImplicitCastExpr 0x55e83d106550 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x55e83d106488 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x55e83d106468 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x55e83d106420 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
(([B24.10] && [B23.14]) || ([B22.4] && [B21.10])) ? [B19.2] : [B20.12]
   2: DeclRefExpr 0x55e83d1065e0 <sds.c:336:20> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
sh
   3: ImplicitCastExpr 0x55e83d106608 <sds.c:336:20> 'struct sdshdr16 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1065e0 <col:20> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B18.2] (ImplicitCastExpr, LValueToRValue, struct sdshdr16 *)
   4: MemberExpr 0x55e83d106620 <sds.c:336:20, col:24> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
`-ImplicitCastExpr 0x55e83d106608 <col:20> 'struct sdshdr16 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1065e0 <col:20> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B18.3]->len
   5: DeclRefExpr 0x55e83d106658 <sds.c:336:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   6: ImplicitCastExpr 0x55e83d106680 <sds.c:336:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d106658 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B18.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CompoundAssignOperator 0x55e83d106698 <sds.c:336:20, col:31> 'uint16_t':'unsigned short' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x55e83d106620 <col:20, col:24> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
| `-ImplicitCastExpr 0x55e83d106608 <col:20> 'struct sdshdr16 *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1065e0 <col:20> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
`-ImplicitCastExpr 0x55e83d106680 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d106658 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B18.4] += [B18.6]
   8: ImplicitCastExpr 0x55e83d1066f0 <sds.c:336:19, col:35> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x55e83d1066d0 <col:19, col:35> 'uint16_t':'unsigned short'
  `-CompoundAssignOperator 0x55e83d106698 <col:20, col:31> 'uint16_t':'unsigned short' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |-MemberExpr 0x55e83d106620 <col:20, col:24> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
    | `-ImplicitCastExpr 0x55e83d106608 <col:20> 'struct sdshdr16 *' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d1065e0 <col:20> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
    `-ImplicitCastExpr 0x55e83d106680 <col:31> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d106658 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
([B18.7]) (ImplicitCastExpr, IntegralCast, size_t)
   9: DeclRefExpr 0x55e83d1065b8 <sds.c:336:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
len
  10: BinaryOperator 0x55e83d106708 <sds.c:336:13, col:35> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d1065b8 <col:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d1066f0 <col:19, col:35> 'size_t':'unsigned long' <IntegralCast>
  `-ParenExpr 0x55e83d1066d0 <col:19, col:35> 'uint16_t':'unsigned short'
    `-CompoundAssignOperator 0x55e83d106698 <col:20, col:31> 'uint16_t':'unsigned short' '+=' ComputeLHSTy='int' ComputeResultTy='int'
      |-MemberExpr 0x55e83d106620 <col:20, col:24> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
      | `-ImplicitCastExpr 0x55e83d106608 <col:20> 'struct sdshdr16 *' <LValueToRValue>
      |   `-DeclRefExpr 0x55e83d1065e0 <col:20> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
      `-ImplicitCastExpr 0x55e83d106680 <col:31> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d106658 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B18.9] = [B18.8]
   T: break;
   Preds (2): B19 B20(Unreachable)
   Succs (1): B1

 [B19]
   1: IntegerLiteral 0x55e83d106278 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x55e83d1062f8 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x55e83d1062d8 <col:27, col:29> 'int'
  `-IntegerLiteral 0x55e83d106278 <col:28> 'int' 0
(void)([B19.1]) (CStyleCastExpr, ToVoid, void)
   Preds (2): B21 B23
   Succs (1): B18

 [B20 (NORETURN)]
   1: DeclRefExpr 0x55e83d106320 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x55e83d1064a8 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d106320 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B20.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x55e83d106348 <<scratch space>:143:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
"(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
   4: ImplicitCastExpr 0x55e83d106508 <<scratch space>:143:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d106348 <col:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
[B20.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x55e83d1063d0 <<scratch space>:144:1> 'const char [6]' lvalue "sds.c"
"sds.c"
   6: ImplicitCastExpr 0x55e83d106520 <<scratch space>:144:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d1063d0 <col:1> 'const char [6]' lvalue "sds.c"
[B20.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55e83d106400 <<scratch space>:145:1> 'int' 335
335
   8: ImplicitCastExpr 0x55e83d106538 <<scratch space>:145:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x55e83d106400 <col:1> 'int' 335
[B20.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x55e83d106420 </usr/include/assert.h:129:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
"void sdsIncrLen(sds, int)"
  10: PredefinedExpr 0x55e83d106468 </usr/include/assert.h:129:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x55e83d106420 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x55e83d106550 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x55e83d106488 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x55e83d106468 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x55e83d106420 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__extension__ [B20.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x55e83d1064c0 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x55e83d1064a8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d106320 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x55e83d106508 <<scratch space>:143:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d106348 <col:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
|-ImplicitCastExpr 0x55e83d106520 <line:144:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d1063d0 <col:1> 'const char [6]' lvalue "sds.c"
|-ImplicitCastExpr 0x55e83d106538 <line:145:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x55e83d106400 <col:1> 'int' 335
`-ImplicitCastExpr 0x55e83d106550 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x55e83d106488 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x55e83d106468 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x55e83d106420 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
[B20.2]([B20.4], [B20.6], [B20.8], [B20.11])
   Preds (2): B21 B22
   Succs (1): B0

 [B21]
   1: DeclRefExpr 0x55e83d103f48 <sds.c:335:77> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
sh
   2: ImplicitCastExpr 0x55e83d103f70 <sds.c:335:77> 'struct sdshdr16 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d103f48 <col:77> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B21.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr16 *)
   3: MemberExpr 0x55e83d103f88 <sds.c:335:77, col:81> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
`-ImplicitCastExpr 0x55e83d103f70 <col:77> 'struct sdshdr16 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d103f48 <col:77> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B21.2]->len
   4: ImplicitCastExpr 0x55e83d1040b0 <sds.c:335:77, col:81> 'uint16_t':'unsigned short' <LValueToRValue>
`-MemberExpr 0x55e83d103f88 <col:77, col:81> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
  `-ImplicitCastExpr 0x55e83d103f70 <col:77> 'struct sdshdr16 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d103f48 <col:77> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B21.3] (ImplicitCastExpr, LValueToRValue, uint16_t)
   5: ImplicitCastExpr 0x55e83d1040c8 <sds.c:335:77, col:81> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1040b0 <col:77, col:81> 'uint16_t':'unsigned short' <LValueToRValue>
  `-MemberExpr 0x55e83d103f88 <col:77, col:81> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
    `-ImplicitCastExpr 0x55e83d103f70 <col:77> 'struct sdshdr16 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d103f48 <col:77> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B21.4] (ImplicitCastExpr, IntegralCast, unsigned int)
   6: DeclRefExpr 0x55e83d103fc0 <sds.c:335:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   7: ImplicitCastExpr 0x55e83d103fe8 <sds.c:335:104> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d103fc0 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B21.6] (ImplicitCastExpr, LValueToRValue, int)
   8: UnaryOperator 0x55e83d104000 <sds.c:335:103, col:104> 'int' prefix '-'
`-ImplicitCastExpr 0x55e83d103fe8 <col:104> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d103fc0 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
-[B21.7]
   9: CStyleCastExpr 0x55e83d104088 <sds.c:335:88, col:108> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55e83d104068 <col:102, col:108> 'int'
  `-UnaryOperator 0x55e83d104000 <col:103, col:104> 'int' prefix '-'
    `-ImplicitCastExpr 0x55e83d103fe8 <col:104> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d103fc0 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
(unsigned int)([B21.8]) (CStyleCastExpr, IntegralCast, unsigned int)
  10: BinaryOperator 0x55e83d1040e0 <sds.c:335:77, col:108> 'int' '>='
|-ImplicitCastExpr 0x55e83d1040c8 <col:77, col:81> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d1040b0 <col:77, col:81> 'uint16_t':'unsigned short' <LValueToRValue>
|   `-MemberExpr 0x55e83d103f88 <col:77, col:81> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
|     `-ImplicitCastExpr 0x55e83d103f70 <col:77> 'struct sdshdr16 *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d103f48 <col:77> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
`-CStyleCastExpr 0x55e83d104088 <col:88, col:108> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55e83d104068 <col:102, col:108> 'int'
    `-UnaryOperator 0x55e83d104000 <col:103, col:104> 'int' prefix '-'
      `-ImplicitCastExpr 0x55e83d103fe8 <col:104> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d103fc0 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B21.5] >= [B21.9]
   T: (([B24.10] && [B23.14]) || ([B22.4] && [B21.10])) ? ... : ...
   Preds (1): B22
   Succs (2): B19 B20

 [B22]
   1: DeclRefExpr 0x55e83d103ec0 <sds.c:335:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   2: ImplicitCastExpr 0x55e83d103f08 <sds.c:335:65> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d103ec0 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B22.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d103ee8 <sds.c:335:72> 'int' 0
0
   4: BinaryOperator 0x55e83d103f20 <sds.c:335:65, col:72> 'int' '<'
|-ImplicitCastExpr 0x55e83d103f08 <col:65> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d103ec0 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d103ee8 <col:72> 'int' 0
[B22.2] < [B22.3]
   T: [B22.4] && ...
   Preds (2): B23 B24
   Succs (2): B21 B20

 [B23]
   1: DeclRefExpr 0x55e83d103c98 <sds.c:335:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
sh
   2: ImplicitCastExpr 0x55e83d103cc0 <sds.c:335:34> 'struct sdshdr16 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d103c98 <col:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr16 *)
   3: MemberExpr 0x55e83d103cd8 <sds.c:335:34, col:38> 'uint16_t':'unsigned short' lvalue ->alloc 0x55e83d0d5d98
`-ImplicitCastExpr 0x55e83d103cc0 <col:34> 'struct sdshdr16 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d103c98 <col:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.2]->alloc
   4: ImplicitCastExpr 0x55e83d103d88 <sds.c:335:34, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
`-MemberExpr 0x55e83d103cd8 <col:34, col:38> 'uint16_t':'unsigned short' lvalue ->alloc 0x55e83d0d5d98
  `-ImplicitCastExpr 0x55e83d103cc0 <col:34> 'struct sdshdr16 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d103c98 <col:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.3] (ImplicitCastExpr, LValueToRValue, uint16_t)
   5: ImplicitCastExpr 0x55e83d103da0 <sds.c:335:34, col:38> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d103d88 <col:34, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
  `-MemberExpr 0x55e83d103cd8 <col:34, col:38> 'uint16_t':'unsigned short' lvalue ->alloc 0x55e83d0d5d98
    `-ImplicitCastExpr 0x55e83d103cc0 <col:34> 'struct sdshdr16 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d103c98 <col:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.4] (ImplicitCastExpr, IntegralCast, int)
   6: DeclRefExpr 0x55e83d103d10 <sds.c:335:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
sh
   7: ImplicitCastExpr 0x55e83d103d38 <sds.c:335:44> 'struct sdshdr16 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d103d10 <col:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.6] (ImplicitCastExpr, LValueToRValue, struct sdshdr16 *)
   8: MemberExpr 0x55e83d103d50 <sds.c:335:44, col:48> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
`-ImplicitCastExpr 0x55e83d103d38 <col:44> 'struct sdshdr16 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d103d10 <col:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.7]->len
   9: ImplicitCastExpr 0x55e83d103db8 <sds.c:335:44, col:48> 'uint16_t':'unsigned short' <LValueToRValue>
`-MemberExpr 0x55e83d103d50 <col:44, col:48> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
  `-ImplicitCastExpr 0x55e83d103d38 <col:44> 'struct sdshdr16 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d103d10 <col:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.8] (ImplicitCastExpr, LValueToRValue, uint16_t)
  10: ImplicitCastExpr 0x55e83d103dd0 <sds.c:335:44, col:48> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d103db8 <col:44, col:48> 'uint16_t':'unsigned short' <LValueToRValue>
  `-MemberExpr 0x55e83d103d50 <col:44, col:48> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
    `-ImplicitCastExpr 0x55e83d103d38 <col:44> 'struct sdshdr16 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d103d10 <col:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.9] (ImplicitCastExpr, IntegralCast, int)
  11: BinaryOperator 0x55e83d103de8 <sds.c:335:34, col:48> 'int' '-'
|-ImplicitCastExpr 0x55e83d103da0 <col:34, col:38> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d103d88 <col:34, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|   `-MemberExpr 0x55e83d103cd8 <col:34, col:38> 'uint16_t':'unsigned short' lvalue ->alloc 0x55e83d0d5d98
|     `-ImplicitCastExpr 0x55e83d103cc0 <col:34> 'struct sdshdr16 *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d103c98 <col:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
`-ImplicitCastExpr 0x55e83d103dd0 <col:44, col:48> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d103db8 <col:44, col:48> 'uint16_t':'unsigned short' <LValueToRValue>
    `-MemberExpr 0x55e83d103d50 <col:44, col:48> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
      `-ImplicitCastExpr 0x55e83d103d38 <col:44> 'struct sdshdr16 *' <LValueToRValue>
        `-DeclRefExpr 0x55e83d103d10 <col:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
[B23.5] - [B23.10]
  12: DeclRefExpr 0x55e83d103e10 <sds.c:335:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
  13: ImplicitCastExpr 0x55e83d103e38 <sds.c:335:55> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d103e10 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B23.12] (ImplicitCastExpr, LValueToRValue, int)
  14: BinaryOperator 0x55e83d103e50 <sds.c:335:34, col:55> 'int' '>='
|-BinaryOperator 0x55e83d103de8 <col:34, col:48> 'int' '-'
| |-ImplicitCastExpr 0x55e83d103da0 <col:34, col:38> 'int' <IntegralCast>
| | `-ImplicitCastExpr 0x55e83d103d88 <col:34, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55e83d103cd8 <col:34, col:38> 'uint16_t':'unsigned short' lvalue ->alloc 0x55e83d0d5d98
| |     `-ImplicitCastExpr 0x55e83d103cc0 <col:34> 'struct sdshdr16 *' <LValueToRValue>
| |       `-DeclRefExpr 0x55e83d103c98 <col:34> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
| `-ImplicitCastExpr 0x55e83d103dd0 <col:44, col:48> 'int' <IntegralCast>
|   `-ImplicitCastExpr 0x55e83d103db8 <col:44, col:48> 'uint16_t':'unsigned short' <LValueToRValue>
|     `-MemberExpr 0x55e83d103d50 <col:44, col:48> 'uint16_t':'unsigned short' lvalue ->len 0x55e83d0d5d40
|       `-ImplicitCastExpr 0x55e83d103d38 <col:44> 'struct sdshdr16 *' <LValueToRValue>
|         `-DeclRefExpr 0x55e83d103d10 <col:44> 'struct sdshdr16 *' lvalue Var 0x55e83d103a00 'sh' 'struct sdshdr16 *'
`-ImplicitCastExpr 0x55e83d103e38 <col:55> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d103e10 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B23.11] >= [B23.13]
   T: ([B24.10] && [B23.14]) || ...
   Preds (1): B24
   Succs (2): B19 B22

 [B24]
  case 2:
   1: DeclRefExpr 0x55e83d103a60 <sds.c:334:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d103b08 <./sds.h:85:70, col:72> 'sds':'char *' <LValueToRValue>
`-ParenExpr 0x55e83d103a88 <col:70, col:72> 'sds':'char *' lvalue
  `-DeclRefExpr 0x55e83d103a60 <sds.c:334:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
([B24.1]) (ImplicitCastExpr, LValueToRValue, sds)
   3: UnaryExprOrTypeTraitExpr 0x55e83d103ac8 <./sds.h:85:75, col:98> 'unsigned long' sizeof 'struct sdshdr16':'struct sdshdr16'
sizeof(struct sdshdr16)
   4: BinaryOperator 0x55e83d103b20 <./sds.h:85:70, col:99> 'sds':'char *' '-'
|-ImplicitCastExpr 0x55e83d103b08 <col:70, col:72> 'sds':'char *' <LValueToRValue>
| `-ParenExpr 0x55e83d103a88 <col:70, col:72> 'sds':'char *' lvalue
|   `-DeclRefExpr 0x55e83d103a60 <sds.c:334:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
`-ParenExpr 0x55e83d103ae8 <./sds.h:85:74, col:99> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55e83d103ac8 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr16':'struct sdshdr16'
[B24.2] - ([B24.3])
   5: CStyleCastExpr 0x55e83d103bc0 <./sds.h:85:49, col:100> 'struct sdshdr16 *' <BitCast>
`-ParenExpr 0x55e83d103ba0 <col:69, col:100> 'sds':'char *'
  `-BinaryOperator 0x55e83d103b20 <col:70, col:99> 'sds':'char *' '-'
    |-ImplicitCastExpr 0x55e83d103b08 <col:70, col:72> 'sds':'char *' <LValueToRValue>
    | `-ParenExpr 0x55e83d103a88 <col:70, col:72> 'sds':'char *' lvalue
    |   `-DeclRefExpr 0x55e83d103a60 <sds.c:334:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
    `-ParenExpr 0x55e83d103ae8 <./sds.h:85:74, col:99> 'unsigned long'
      `-UnaryExprOrTypeTraitExpr 0x55e83d103ac8 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr16':'struct sdshdr16'
(struct sdshdr16 *)([B24.4]) (CStyleCastExpr, BitCast, struct sdshdr16 *)
   6: DeclStmt 0x55e83d103be8 <./sds.h:85:26, col:101>col:44
`-VarDecl 0x55e83d103a00 <col:26, col:100> col:44 used sh 'struct sdshdr16 *' cinit
  `-CStyleCastExpr 0x55e83d103bc0 <col:49, col:100> 'struct sdshdr16 *' <BitCast>
    `-ParenExpr 0x55e83d103ba0 <col:69, col:100> 'sds':'char *'
      `-BinaryOperator 0x55e83d103b20 <col:70, col:99> 'sds':'char *' '-'
        |-ImplicitCastExpr 0x55e83d103b08 <col:70, col:72> 'sds':'char *' <LValueToRValue>
        | `-ParenExpr 0x55e83d103a88 <col:70, col:72> 'sds':'char *' lvalue
        |   `-DeclRefExpr 0x55e83d103a60 <sds.c:334:28> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
        `-ParenExpr 0x55e83d103ae8 <./sds.h:85:74, col:99> 'unsigned long'
          `-UnaryExprOrTypeTraitExpr 0x55e83d103ac8 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr16':'struct sdshdr16'
struct sdshdr16 *sh = (struct sdshdr16 *)((s) - (sizeof(struct sdshdr16)));
   7: DeclRefExpr 0x55e83d103c10 <sds.c:335:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   8: ImplicitCastExpr 0x55e83d103c58 <sds.c:335:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d103c10 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B24.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55e83d103c38 <sds.c:335:29> 'int' 0
0
  10: BinaryOperator 0x55e83d103c70 <sds.c:335:21, col:29> 'int' '>='
|-ImplicitCastExpr 0x55e83d103c58 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d103c10 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d103c38 <col:29> 'int' 0
[B24.8] >= [B24.9]
   T: [B24.10] && ...
   Preds (1): B2
   Succs (2): B23 B22

 [B25]
   1: ConditionalOperator 0x55e83d103778 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x55e83d1033f0 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x55e83d1033c8 <sds.c:329:20, col:109> 'int' '||'
|   |-ParenExpr 0x55e83d102d68 <col:20, col:59> 'int'
|   | `-BinaryOperator 0x55e83d102d40 <col:21, col:55> 'int' '&&'
|   |   |-BinaryOperator 0x55e83d102b38 <col:21, col:29> 'int' '>='
|   |   | |-ImplicitCastExpr 0x55e83d102b20 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x55e83d102ad8 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   |   | `-IntegerLiteral 0x55e83d102b00 <col:29> 'int' 0
|   |   `-BinaryOperator 0x55e83d102d18 <col:34, col:55> 'int' '>='
|   |     |-BinaryOperator 0x55e83d102cb0 <col:34, col:48> 'int' '-'
|   |     | |-ImplicitCastExpr 0x55e83d102c68 <col:34, col:38> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e83d102c50 <col:34, col:38> 'uint8_t':'unsigned char' <LValueToRValue>
|   |     | |   `-MemberExpr 0x55e83d102ba0 <col:34, col:38> 'uint8_t':'unsigned char' lvalue ->alloc 0x55e83d0d5b08
|   |     | |     `-ImplicitCastExpr 0x55e83d102b88 <col:34> 'struct sdshdr8 *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x55e83d102b60 <col:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
|   |     | `-ImplicitCastExpr 0x55e83d102c98 <col:44, col:48> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e83d102c80 <col:44, col:48> 'uint8_t':'unsigned char' <LValueToRValue>
|   |     |     `-MemberExpr 0x55e83d102c18 <col:44, col:48> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
|   |     |       `-ImplicitCastExpr 0x55e83d102c00 <col:44> 'struct sdshdr8 *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x55e83d102bd8 <col:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
|   |     `-ImplicitCastExpr 0x55e83d102d00 <col:55> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x55e83d102cd8 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   `-ParenExpr 0x55e83d1033a8 <col:64, col:109> 'int'
|     `-BinaryOperator 0x55e83d103380 <col:65, col:108> 'int' '&&'
|       |-BinaryOperator 0x55e83d103198 <col:65, col:72> 'int' '<'
|       | |-ImplicitCastExpr 0x55e83d103180 <col:65> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55e83d102d88 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|       | `-IntegerLiteral 0x55e83d103160 <col:72> 'int' 0
|       `-BinaryOperator 0x55e83d103358 <col:77, col:108> 'int' '>='
|         |-ImplicitCastExpr 0x55e83d103340 <col:77, col:81> 'unsigned int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55e83d103328 <col:77, col:81> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-MemberExpr 0x55e83d103200 <col:77, col:81> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
|         |     `-ImplicitCastExpr 0x55e83d1031e8 <col:77> 'struct sdshdr8 *' <LValueToRValue>
|         |       `-DeclRefExpr 0x55e83d1031c0 <col:77> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
|         `-CStyleCastExpr 0x55e83d103300 <col:88, col:108> 'unsigned int' <IntegralCast>
|           `-ParenExpr 0x55e83d1032e0 <col:102, col:108> 'int'
|             `-UnaryOperator 0x55e83d103278 <col:103, col:104> 'int' prefix '-'
|               `-ImplicitCastExpr 0x55e83d103260 <col:104> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x55e83d103238 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|-CStyleCastExpr 0x55e83d103490 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x55e83d103470 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x55e83d103410 <col:28> 'int' 0
`-CallExpr 0x55e83d1036d0 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x55e83d1036b8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d1034b8 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x55e83d103718 <<scratch space>:137:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d103558 <col:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
  |-ImplicitCastExpr 0x55e83d103730 <line:138:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d1035e0 <col:1> 'const char [6]' lvalue "sds.c"
  |-ImplicitCastExpr 0x55e83d103748 <line:139:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x55e83d103610 <col:1> 'int' 329
  `-ImplicitCastExpr 0x55e83d103760 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x55e83d103698 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x55e83d103678 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x55e83d103630 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
(([B31.10] && [B30.14]) || ([B29.4] && [B28.10])) ? [B26.2] : [B27.12]
   2: DeclRefExpr 0x55e83d1037f0 <sds.c:330:20> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
sh
   3: ImplicitCastExpr 0x55e83d103818 <sds.c:330:20> 'struct sdshdr8 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1037f0 <col:20> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B25.2] (ImplicitCastExpr, LValueToRValue, struct sdshdr8 *)
   4: MemberExpr 0x55e83d103830 <sds.c:330:20, col:24> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
`-ImplicitCastExpr 0x55e83d103818 <col:20> 'struct sdshdr8 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1037f0 <col:20> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B25.3]->len
   5: DeclRefExpr 0x55e83d103868 <sds.c:330:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   6: ImplicitCastExpr 0x55e83d103890 <sds.c:330:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d103868 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B25.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CompoundAssignOperator 0x55e83d1038a8 <sds.c:330:20, col:31> 'uint8_t':'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x55e83d103830 <col:20, col:24> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
| `-ImplicitCastExpr 0x55e83d103818 <col:20> 'struct sdshdr8 *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1037f0 <col:20> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
`-ImplicitCastExpr 0x55e83d103890 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d103868 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B25.4] += [B25.6]
   8: ImplicitCastExpr 0x55e83d103900 <sds.c:330:19, col:35> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x55e83d1038e0 <col:19, col:35> 'uint8_t':'unsigned char'
  `-CompoundAssignOperator 0x55e83d1038a8 <col:20, col:31> 'uint8_t':'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |-MemberExpr 0x55e83d103830 <col:20, col:24> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
    | `-ImplicitCastExpr 0x55e83d103818 <col:20> 'struct sdshdr8 *' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d1037f0 <col:20> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
    `-ImplicitCastExpr 0x55e83d103890 <col:31> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d103868 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
([B25.7]) (ImplicitCastExpr, IntegralCast, size_t)
   9: DeclRefExpr 0x55e83d1037c8 <sds.c:330:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
len
  10: BinaryOperator 0x55e83d103918 <sds.c:330:13, col:35> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d1037c8 <col:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d103900 <col:19, col:35> 'size_t':'unsigned long' <IntegralCast>
  `-ParenExpr 0x55e83d1038e0 <col:19, col:35> 'uint8_t':'unsigned char'
    `-CompoundAssignOperator 0x55e83d1038a8 <col:20, col:31> 'uint8_t':'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
      |-MemberExpr 0x55e83d103830 <col:20, col:24> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
      | `-ImplicitCastExpr 0x55e83d103818 <col:20> 'struct sdshdr8 *' <LValueToRValue>
      |   `-DeclRefExpr 0x55e83d1037f0 <col:20> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
      `-ImplicitCastExpr 0x55e83d103890 <col:31> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d103868 <col:31> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B25.9] = [B25.8]
   T: break;
   Preds (2): B26 B27(Unreachable)
   Succs (1): B1

 [B26]
   1: IntegerLiteral 0x55e83d103410 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x55e83d103490 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x55e83d103470 <col:27, col:29> 'int'
  `-IntegerLiteral 0x55e83d103410 <col:28> 'int' 0
(void)([B26.1]) (CStyleCastExpr, ToVoid, void)
   Preds (2): B28 B30
   Succs (1): B25

 [B27 (NORETURN)]
   1: DeclRefExpr 0x55e83d1034b8 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x55e83d1036b8 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1034b8 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B27.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x55e83d103558 <<scratch space>:137:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
"(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
   4: ImplicitCastExpr 0x55e83d103718 <<scratch space>:137:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d103558 <col:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
[B27.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x55e83d1035e0 <<scratch space>:138:1> 'const char [6]' lvalue "sds.c"
"sds.c"
   6: ImplicitCastExpr 0x55e83d103730 <<scratch space>:138:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d1035e0 <col:1> 'const char [6]' lvalue "sds.c"
[B27.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55e83d103610 <<scratch space>:139:1> 'int' 329
329
   8: ImplicitCastExpr 0x55e83d103748 <<scratch space>:139:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x55e83d103610 <col:1> 'int' 329
[B27.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x55e83d103630 </usr/include/assert.h:129:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
"void sdsIncrLen(sds, int)"
  10: PredefinedExpr 0x55e83d103678 </usr/include/assert.h:129:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x55e83d103630 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x55e83d103760 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x55e83d103698 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x55e83d103678 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x55e83d103630 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__extension__ [B27.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x55e83d1036d0 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x55e83d1036b8 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1034b8 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x55e83d103718 <<scratch space>:137:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d103558 <col:1> 'const char [91]' lvalue "(incr >= 0 && sh->alloc-sh->len >= incr) || (incr < 0 && sh->len >= (unsigned int)(-incr))"
|-ImplicitCastExpr 0x55e83d103730 <line:138:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d1035e0 <col:1> 'const char [6]' lvalue "sds.c"
|-ImplicitCastExpr 0x55e83d103748 <line:139:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x55e83d103610 <col:1> 'int' 329
`-ImplicitCastExpr 0x55e83d103760 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x55e83d103698 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x55e83d103678 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x55e83d103630 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
[B27.2]([B27.4], [B27.6], [B27.8], [B27.11])
   Preds (2): B28 B29
   Succs (1): B0

 [B28]
   1: DeclRefExpr 0x55e83d1031c0 <sds.c:329:77> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
sh
   2: ImplicitCastExpr 0x55e83d1031e8 <sds.c:329:77> 'struct sdshdr8 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1031c0 <col:77> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B28.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr8 *)
   3: MemberExpr 0x55e83d103200 <sds.c:329:77, col:81> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
`-ImplicitCastExpr 0x55e83d1031e8 <col:77> 'struct sdshdr8 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1031c0 <col:77> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B28.2]->len
   4: ImplicitCastExpr 0x55e83d103328 <sds.c:329:77, col:81> 'uint8_t':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55e83d103200 <col:77, col:81> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
  `-ImplicitCastExpr 0x55e83d1031e8 <col:77> 'struct sdshdr8 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1031c0 <col:77> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B28.3] (ImplicitCastExpr, LValueToRValue, uint8_t)
   5: ImplicitCastExpr 0x55e83d103340 <sds.c:329:77, col:81> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d103328 <col:77, col:81> 'uint8_t':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55e83d103200 <col:77, col:81> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
    `-ImplicitCastExpr 0x55e83d1031e8 <col:77> 'struct sdshdr8 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1031c0 <col:77> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B28.4] (ImplicitCastExpr, IntegralCast, unsigned int)
   6: DeclRefExpr 0x55e83d103238 <sds.c:329:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   7: ImplicitCastExpr 0x55e83d103260 <sds.c:329:104> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d103238 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B28.6] (ImplicitCastExpr, LValueToRValue, int)
   8: UnaryOperator 0x55e83d103278 <sds.c:329:103, col:104> 'int' prefix '-'
`-ImplicitCastExpr 0x55e83d103260 <col:104> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d103238 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
-[B28.7]
   9: CStyleCastExpr 0x55e83d103300 <sds.c:329:88, col:108> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55e83d1032e0 <col:102, col:108> 'int'
  `-UnaryOperator 0x55e83d103278 <col:103, col:104> 'int' prefix '-'
    `-ImplicitCastExpr 0x55e83d103260 <col:104> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d103238 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
(unsigned int)([B28.8]) (CStyleCastExpr, IntegralCast, unsigned int)
  10: BinaryOperator 0x55e83d103358 <sds.c:329:77, col:108> 'int' '>='
|-ImplicitCastExpr 0x55e83d103340 <col:77, col:81> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d103328 <col:77, col:81> 'uint8_t':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55e83d103200 <col:77, col:81> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
|     `-ImplicitCastExpr 0x55e83d1031e8 <col:77> 'struct sdshdr8 *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d1031c0 <col:77> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
`-CStyleCastExpr 0x55e83d103300 <col:88, col:108> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55e83d1032e0 <col:102, col:108> 'int'
    `-UnaryOperator 0x55e83d103278 <col:103, col:104> 'int' prefix '-'
      `-ImplicitCastExpr 0x55e83d103260 <col:104> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d103238 <col:104> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B28.5] >= [B28.9]
   T: (([B31.10] && [B30.14]) || ([B29.4] && [B28.10])) ? ... : ...
   Preds (1): B29
   Succs (2): B26 B27

 [B29]
   1: DeclRefExpr 0x55e83d102d88 <sds.c:329:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   2: ImplicitCastExpr 0x55e83d103180 <sds.c:329:65> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d102d88 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B29.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d103160 <sds.c:329:72> 'int' 0
0
   4: BinaryOperator 0x55e83d103198 <sds.c:329:65, col:72> 'int' '<'
|-ImplicitCastExpr 0x55e83d103180 <col:65> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d102d88 <col:65> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d103160 <col:72> 'int' 0
[B29.2] < [B29.3]
   T: [B29.4] && ...
   Preds (2): B30 B31
   Succs (2): B28 B27

 [B30]
   1: DeclRefExpr 0x55e83d102b60 <sds.c:329:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
sh
   2: ImplicitCastExpr 0x55e83d102b88 <sds.c:329:34> 'struct sdshdr8 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d102b60 <col:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.1] (ImplicitCastExpr, LValueToRValue, struct sdshdr8 *)
   3: MemberExpr 0x55e83d102ba0 <sds.c:329:34, col:38> 'uint8_t':'unsigned char' lvalue ->alloc 0x55e83d0d5b08
`-ImplicitCastExpr 0x55e83d102b88 <col:34> 'struct sdshdr8 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d102b60 <col:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.2]->alloc
   4: ImplicitCastExpr 0x55e83d102c50 <sds.c:329:34, col:38> 'uint8_t':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55e83d102ba0 <col:34, col:38> 'uint8_t':'unsigned char' lvalue ->alloc 0x55e83d0d5b08
  `-ImplicitCastExpr 0x55e83d102b88 <col:34> 'struct sdshdr8 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d102b60 <col:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.3] (ImplicitCastExpr, LValueToRValue, uint8_t)
   5: ImplicitCastExpr 0x55e83d102c68 <sds.c:329:34, col:38> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d102c50 <col:34, col:38> 'uint8_t':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55e83d102ba0 <col:34, col:38> 'uint8_t':'unsigned char' lvalue ->alloc 0x55e83d0d5b08
    `-ImplicitCastExpr 0x55e83d102b88 <col:34> 'struct sdshdr8 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d102b60 <col:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.4] (ImplicitCastExpr, IntegralCast, int)
   6: DeclRefExpr 0x55e83d102bd8 <sds.c:329:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
sh
   7: ImplicitCastExpr 0x55e83d102c00 <sds.c:329:44> 'struct sdshdr8 *' <LValueToRValue>
`-DeclRefExpr 0x55e83d102bd8 <col:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.6] (ImplicitCastExpr, LValueToRValue, struct sdshdr8 *)
   8: MemberExpr 0x55e83d102c18 <sds.c:329:44, col:48> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
`-ImplicitCastExpr 0x55e83d102c00 <col:44> 'struct sdshdr8 *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d102bd8 <col:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.7]->len
   9: ImplicitCastExpr 0x55e83d102c80 <sds.c:329:44, col:48> 'uint8_t':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55e83d102c18 <col:44, col:48> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
  `-ImplicitCastExpr 0x55e83d102c00 <col:44> 'struct sdshdr8 *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d102bd8 <col:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.8] (ImplicitCastExpr, LValueToRValue, uint8_t)
  10: ImplicitCastExpr 0x55e83d102c98 <sds.c:329:44, col:48> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d102c80 <col:44, col:48> 'uint8_t':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55e83d102c18 <col:44, col:48> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
    `-ImplicitCastExpr 0x55e83d102c00 <col:44> 'struct sdshdr8 *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d102bd8 <col:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.9] (ImplicitCastExpr, IntegralCast, int)
  11: BinaryOperator 0x55e83d102cb0 <sds.c:329:34, col:48> 'int' '-'
|-ImplicitCastExpr 0x55e83d102c68 <col:34, col:38> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d102c50 <col:34, col:38> 'uint8_t':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55e83d102ba0 <col:34, col:38> 'uint8_t':'unsigned char' lvalue ->alloc 0x55e83d0d5b08
|     `-ImplicitCastExpr 0x55e83d102b88 <col:34> 'struct sdshdr8 *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d102b60 <col:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
`-ImplicitCastExpr 0x55e83d102c98 <col:44, col:48> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d102c80 <col:44, col:48> 'uint8_t':'unsigned char' <LValueToRValue>
    `-MemberExpr 0x55e83d102c18 <col:44, col:48> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
      `-ImplicitCastExpr 0x55e83d102c00 <col:44> 'struct sdshdr8 *' <LValueToRValue>
        `-DeclRefExpr 0x55e83d102bd8 <col:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
[B30.5] - [B30.10]
  12: DeclRefExpr 0x55e83d102cd8 <sds.c:329:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
  13: ImplicitCastExpr 0x55e83d102d00 <sds.c:329:55> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d102cd8 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B30.12] (ImplicitCastExpr, LValueToRValue, int)
  14: BinaryOperator 0x55e83d102d18 <sds.c:329:34, col:55> 'int' '>='
|-BinaryOperator 0x55e83d102cb0 <col:34, col:48> 'int' '-'
| |-ImplicitCastExpr 0x55e83d102c68 <col:34, col:38> 'int' <IntegralCast>
| | `-ImplicitCastExpr 0x55e83d102c50 <col:34, col:38> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55e83d102ba0 <col:34, col:38> 'uint8_t':'unsigned char' lvalue ->alloc 0x55e83d0d5b08
| |     `-ImplicitCastExpr 0x55e83d102b88 <col:34> 'struct sdshdr8 *' <LValueToRValue>
| |       `-DeclRefExpr 0x55e83d102b60 <col:34> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
| `-ImplicitCastExpr 0x55e83d102c98 <col:44, col:48> 'int' <IntegralCast>
|   `-ImplicitCastExpr 0x55e83d102c80 <col:44, col:48> 'uint8_t':'unsigned char' <LValueToRValue>
|     `-MemberExpr 0x55e83d102c18 <col:44, col:48> 'uint8_t':'unsigned char' lvalue ->len 0x55e83d0d5ab0
|       `-ImplicitCastExpr 0x55e83d102c00 <col:44> 'struct sdshdr8 *' <LValueToRValue>
|         `-DeclRefExpr 0x55e83d102bd8 <col:44> 'struct sdshdr8 *' lvalue Var 0x55e83d1028c8 'sh' 'struct sdshdr8 *'
`-ImplicitCastExpr 0x55e83d102d00 <col:55> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d102cd8 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B30.11] >= [B30.13]
   T: ([B31.10] && [B30.14]) || ...
   Preds (1): B31
   Succs (2): B26 B29

 [B31]
  case 1:
   1: DeclRefExpr 0x55e83d102928 <sds.c:328:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d1029d0 <./sds.h:85:70, col:72> 'sds':'char *' <LValueToRValue>
`-ParenExpr 0x55e83d102950 <col:70, col:72> 'sds':'char *' lvalue
  `-DeclRefExpr 0x55e83d102928 <sds.c:328:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
([B31.1]) (ImplicitCastExpr, LValueToRValue, sds)
   3: UnaryExprOrTypeTraitExpr 0x55e83d102990 <./sds.h:85:75, col:98> 'unsigned long' sizeof 'struct sdshdr8':'struct sdshdr8'
sizeof(struct sdshdr8)
   4: BinaryOperator 0x55e83d1029e8 <./sds.h:85:70, col:99> 'sds':'char *' '-'
|-ImplicitCastExpr 0x55e83d1029d0 <col:70, col:72> 'sds':'char *' <LValueToRValue>
| `-ParenExpr 0x55e83d102950 <col:70, col:72> 'sds':'char *' lvalue
|   `-DeclRefExpr 0x55e83d102928 <sds.c:328:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
`-ParenExpr 0x55e83d1029b0 <./sds.h:85:74, col:99> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55e83d102990 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr8':'struct sdshdr8'
[B31.2] - ([B31.3])
   5: CStyleCastExpr 0x55e83d102a88 <./sds.h:85:49, col:100> 'struct sdshdr8 *' <BitCast>
`-ParenExpr 0x55e83d102a68 <col:69, col:100> 'sds':'char *'
  `-BinaryOperator 0x55e83d1029e8 <col:70, col:99> 'sds':'char *' '-'
    |-ImplicitCastExpr 0x55e83d1029d0 <col:70, col:72> 'sds':'char *' <LValueToRValue>
    | `-ParenExpr 0x55e83d102950 <col:70, col:72> 'sds':'char *' lvalue
    |   `-DeclRefExpr 0x55e83d102928 <sds.c:328:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
    `-ParenExpr 0x55e83d1029b0 <./sds.h:85:74, col:99> 'unsigned long'
      `-UnaryExprOrTypeTraitExpr 0x55e83d102990 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr8':'struct sdshdr8'
(struct sdshdr8 *)([B31.4]) (CStyleCastExpr, BitCast, struct sdshdr8 *)
   6: DeclStmt 0x55e83d102ab0 <./sds.h:85:26, col:101>col:44
`-VarDecl 0x55e83d1028c8 <col:26, col:100> col:44 used sh 'struct sdshdr8 *' cinit
  `-CStyleCastExpr 0x55e83d102a88 <col:49, col:100> 'struct sdshdr8 *' <BitCast>
    `-ParenExpr 0x55e83d102a68 <col:69, col:100> 'sds':'char *'
      `-BinaryOperator 0x55e83d1029e8 <col:70, col:99> 'sds':'char *' '-'
        |-ImplicitCastExpr 0x55e83d1029d0 <col:70, col:72> 'sds':'char *' <LValueToRValue>
        | `-ParenExpr 0x55e83d102950 <col:70, col:72> 'sds':'char *' lvalue
        |   `-DeclRefExpr 0x55e83d102928 <sds.c:328:27> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
        `-ParenExpr 0x55e83d1029b0 <./sds.h:85:74, col:99> 'unsigned long'
          `-UnaryExprOrTypeTraitExpr 0x55e83d102990 <col:75, col:98> 'unsigned long' sizeof 'struct sdshdr8':'struct sdshdr8'
struct sdshdr8 *sh = (struct sdshdr8 *)((s) - (sizeof(struct sdshdr8)));
   7: DeclRefExpr 0x55e83d102ad8 <sds.c:329:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   8: ImplicitCastExpr 0x55e83d102b20 <sds.c:329:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d102ad8 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B31.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55e83d102b00 <sds.c:329:29> 'int' 0
0
  10: BinaryOperator 0x55e83d102b38 <sds.c:329:21, col:29> 'int' '>='
|-ImplicitCastExpr 0x55e83d102b20 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d102ad8 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d102b00 <col:29> 'int' 0
[B31.8] >= [B31.9]
   T: [B31.10] && ...
   Preds (1): B2
   Succs (2): B30 B29

 [B32]
   1: ConditionalOperator 0x55e83d102458 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x55e83d101fb8 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x55e83d101f90 <sds.c:322:20, col:98> 'int' '||'
|   |-ParenExpr 0x55e83d101d20 <col:20, col:49> 'int'
|   | `-BinaryOperator 0x55e83d101cf8 <col:21, col:47> 'int' '&&'
|   |   |-BinaryOperator 0x55e83d101bc8 <col:21, col:28> 'int' '>'
|   |   | |-ImplicitCastExpr 0x55e83d101bb0 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x55e83d101b68 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   |   | `-IntegerLiteral 0x55e83d101b90 <col:28> 'int' 0
|   |   `-BinaryOperator 0x55e83d101cd0 <col:33, col:47> 'int' '<'
|   |     |-BinaryOperator 0x55e83d101c88 <col:33, col:40> 'int' '+'
|   |     | |-ImplicitCastExpr 0x55e83d101c58 <col:33> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e83d101c40 <col:33> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e83d101bf0 <col:33> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
|   |     | `-ImplicitCastExpr 0x55e83d101c70 <col:40> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e83d101c18 <col:40> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|   |     `-IntegerLiteral 0x55e83d101cb0 <col:47> 'int' 32
|   `-ParenExpr 0x55e83d101f70 <col:54, col:98> 'int'
|     `-BinaryOperator 0x55e83d101f48 <col:55, col:97> 'int' '&&'
|       |-BinaryOperator 0x55e83d101db0 <col:55, col:62> 'int' '<'
|       | |-ImplicitCastExpr 0x55e83d101d88 <col:55> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55e83d101d40 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|       | `-IntegerLiteral 0x55e83d101d68 <col:62> 'int' 0
|       `-BinaryOperator 0x55e83d101f20 <col:67, col:97> 'int' '>='
|         |-ImplicitCastExpr 0x55e83d101f08 <col:67> 'unsigned int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55e83d101ef0 <col:67> 'unsigned char' <LValueToRValue>
|         |   `-DeclRefExpr 0x55e83d101dd8 <col:67> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
|         `-CStyleCastExpr 0x55e83d101ec8 <col:77, col:97> 'unsigned int' <IntegralCast>
|           `-ParenExpr 0x55e83d101ea8 <col:91, col:97> 'int'
|             `-UnaryOperator 0x55e83d101e40 <col:92, col:93> 'int' prefix '-'
|               `-ImplicitCastExpr 0x55e83d101e28 <col:93> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x55e83d101e00 <col:93> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
|-CStyleCastExpr 0x55e83d102058 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x55e83d102038 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x55e83d101fd8 <col:28> 'int' 0
`-CallExpr 0x55e83d1023b0 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x55e83d102398 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d102080 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x55e83d1023f8 <<scratch space>:131:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d102128 <col:1> 'const char [80]' lvalue "(incr > 0 && oldlen+incr < 32) || (incr < 0 && oldlen >= (unsigned int)(-incr))"
  |-ImplicitCastExpr 0x55e83d102410 <line:132:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55e83d102218 <col:1> 'const char [6]' lvalue "sds.c"
  |-ImplicitCastExpr 0x55e83d102428 <line:133:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x55e83d102248 <col:1> 'int' 322
  `-ImplicitCastExpr 0x55e83d102440 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x55e83d102350 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x55e83d102330 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x55e83d1022e8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
(([B38.17] && [B37.8]) || ([B36.4] && [B35.8])) ? [B33.2] : [B34.12]
   2: IntegerLiteral 0x55e83d102508 <./sds.h:78:21> 'int' 0
0
   3: DeclRefExpr 0x55e83d102528 <sds.c:323:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
oldlen
   4: ImplicitCastExpr 0x55e83d102578 <sds.c:323:34> 'unsigned char' <LValueToRValue>
`-DeclRefExpr 0x55e83d102528 <col:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B32.3] (ImplicitCastExpr, LValueToRValue, unsigned char)
   5: ImplicitCastExpr 0x55e83d102590 <sds.c:323:34> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d102578 <col:34> 'unsigned char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d102528 <col:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B32.4] (ImplicitCastExpr, IntegralCast, int)
   6: DeclRefExpr 0x55e83d102550 <sds.c:323:41> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   7: ImplicitCastExpr 0x55e83d1025a8 <sds.c:323:41> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d102550 <col:41> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B32.6] (ImplicitCastExpr, LValueToRValue, int)
   8: BinaryOperator 0x55e83d1025c0 <sds.c:323:34, col:41> 'int' '+'
|-ImplicitCastExpr 0x55e83d102590 <col:34> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d102578 <col:34> 'unsigned char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d102528 <col:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
`-ImplicitCastExpr 0x55e83d1025a8 <col:41> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d102550 <col:41> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B32.5] + [B32.7]
   9: IntegerLiteral 0x55e83d102608 <./sds.h:84:23> 'int' 3
3
  10: BinaryOperator 0x55e83d102628 <sds.c:323:33, ./sds.h:84:23> 'int' '<<'
|-ParenExpr 0x55e83d1025e8 <sds.c:323:33, col:45> 'int'
| `-BinaryOperator 0x55e83d1025c0 <col:34, col:41> 'int' '+'
|   |-ImplicitCastExpr 0x55e83d102590 <col:34> 'int' <IntegralCast>
|   | `-ImplicitCastExpr 0x55e83d102578 <col:34> 'unsigned char' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e83d102528 <col:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
|   `-ImplicitCastExpr 0x55e83d1025a8 <col:41> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d102550 <col:41> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d102608 <./sds.h:84:23> 'int' 3
([B32.8]) << [B32.9]
  11: BinaryOperator 0x55e83d102670 <./sds.h:78:21, sds.c:323:63> 'int' '|'
|-IntegerLiteral 0x55e83d102508 <./sds.h:78:21> 'int' 0
`-ParenExpr 0x55e83d102650 <sds.c:323:32, col:63> 'int'
  `-BinaryOperator 0x55e83d102628 <col:33, ./sds.h:84:23> 'int' '<<'
    |-ParenExpr 0x55e83d1025e8 <sds.c:323:33, col:45> 'int'
    | `-BinaryOperator 0x55e83d1025c0 <col:34, col:41> 'int' '+'
    |   |-ImplicitCastExpr 0x55e83d102590 <col:34> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e83d102578 <col:34> 'unsigned char' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e83d102528 <col:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
    |   `-ImplicitCastExpr 0x55e83d1025a8 <col:41> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d102550 <col:41> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
    `-IntegerLiteral 0x55e83d102608 <./sds.h:84:23> 'int' 3
[B32.2] | ([B32.10])
  12: ImplicitCastExpr 0x55e83d102698 <./sds.h:78:21, sds.c:323:63> 'unsigned char' <IntegralCast>
`-BinaryOperator 0x55e83d102670 <./sds.h:78:21, sds.c:323:63> 'int' '|'
  |-IntegerLiteral 0x55e83d102508 <./sds.h:78:21> 'int' 0
  `-ParenExpr 0x55e83d102650 <sds.c:323:32, col:63> 'int'
    `-BinaryOperator 0x55e83d102628 <col:33, ./sds.h:84:23> 'int' '<<'
      |-ParenExpr 0x55e83d1025e8 <sds.c:323:33, col:45> 'int'
      | `-BinaryOperator 0x55e83d1025c0 <col:34, col:41> 'int' '+'
      |   |-ImplicitCastExpr 0x55e83d102590 <col:34> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x55e83d102578 <col:34> 'unsigned char' <LValueToRValue>
      |   |   `-DeclRefExpr 0x55e83d102528 <col:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
      |   `-ImplicitCastExpr 0x55e83d1025a8 <col:41> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x55e83d102550 <col:41> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
      `-IntegerLiteral 0x55e83d102608 <./sds.h:84:23> 'int' 3
[B32.11] (ImplicitCastExpr, IntegralCast, unsigned char)
  13: DeclRefExpr 0x55e83d1024a8 <sds.c:323:14> 'unsigned char *' lvalue Var 0x55e83d101880 'fp' 'unsigned char *'
fp
  14: ImplicitCastExpr 0x55e83d1024d0 <sds.c:323:14> 'unsigned char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1024a8 <col:14> 'unsigned char *' lvalue Var 0x55e83d101880 'fp' 'unsigned char *'
[B32.13] (ImplicitCastExpr, LValueToRValue, unsigned char *)
  15: UnaryOperator 0x55e83d1024e8 <sds.c:323:13, col:14> 'unsigned char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d1024d0 <col:14> 'unsigned char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1024a8 <col:14> 'unsigned char *' lvalue Var 0x55e83d101880 'fp' 'unsigned char *'
*[B32.14]
  16: BinaryOperator 0x55e83d1026b0 <sds.c:323:13, col:63> 'unsigned char' '='
|-UnaryOperator 0x55e83d1024e8 <col:13, col:14> 'unsigned char' lvalue prefix '*'
| `-ImplicitCastExpr 0x55e83d1024d0 <col:14> 'unsigned char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1024a8 <col:14> 'unsigned char *' lvalue Var 0x55e83d101880 'fp' 'unsigned char *'
`-ImplicitCastExpr 0x55e83d102698 <./sds.h:78:21, sds.c:323:63> 'unsigned char' <IntegralCast>
  `-BinaryOperator 0x55e83d102670 <./sds.h:78:21, sds.c:323:63> 'int' '|'
    |-IntegerLiteral 0x55e83d102508 <./sds.h:78:21> 'int' 0
    `-ParenExpr 0x55e83d102650 <sds.c:323:32, col:63> 'int'
      `-BinaryOperator 0x55e83d102628 <col:33, ./sds.h:84:23> 'int' '<<'
        |-ParenExpr 0x55e83d1025e8 <sds.c:323:33, col:45> 'int'
        | `-BinaryOperator 0x55e83d1025c0 <col:34, col:41> 'int' '+'
        |   |-ImplicitCastExpr 0x55e83d102590 <col:34> 'int' <IntegralCast>
        |   | `-ImplicitCastExpr 0x55e83d102578 <col:34> 'unsigned char' <LValueToRValue>
        |   |   `-DeclRefExpr 0x55e83d102528 <col:34> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
        |   `-ImplicitCastExpr 0x55e83d1025a8 <col:41> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x55e83d102550 <col:41> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
        `-IntegerLiteral 0x55e83d102608 <./sds.h:84:23> 'int' 3
[B32.15] = [B32.12]
  17: DeclRefExpr 0x55e83d102700 <sds.c:324:19> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
oldlen
  18: ImplicitCastExpr 0x55e83d102750 <sds.c:324:19> 'unsigned char' <LValueToRValue>
`-DeclRefExpr 0x55e83d102700 <col:19> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B32.17] (ImplicitCastExpr, LValueToRValue, unsigned char)
  19: ImplicitCastExpr 0x55e83d102768 <sds.c:324:19> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d102750 <col:19> 'unsigned char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d102700 <col:19> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B32.18] (ImplicitCastExpr, IntegralCast, int)
  20: DeclRefExpr 0x55e83d102728 <sds.c:324:26> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
  21: ImplicitCastExpr 0x55e83d102780 <sds.c:324:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d102728 <col:26> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B32.20] (ImplicitCastExpr, LValueToRValue, int)
  22: BinaryOperator 0x55e83d102798 <sds.c:324:19, col:26> 'int' '+'
|-ImplicitCastExpr 0x55e83d102768 <col:19> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d102750 <col:19> 'unsigned char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d102700 <col:19> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
`-ImplicitCastExpr 0x55e83d102780 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d102728 <col:26> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B32.19] + [B32.21]
  23: ImplicitCastExpr 0x55e83d1027c0 <sds.c:324:19, col:26> 'size_t':'unsigned long' <IntegralCast>
`-BinaryOperator 0x55e83d102798 <col:19, col:26> 'int' '+'
  |-ImplicitCastExpr 0x55e83d102768 <col:19> 'int' <IntegralCast>
  | `-ImplicitCastExpr 0x55e83d102750 <col:19> 'unsigned char' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d102700 <col:19> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
  `-ImplicitCastExpr 0x55e83d102780 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d102728 <col:26> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B32.22] (ImplicitCastExpr, IntegralCast, size_t)
  24: DeclRefExpr 0x55e83d1026d8 <sds.c:324:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
len
  25: BinaryOperator 0x55e83d1027d8 <sds.c:324:13, col:26> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d1026d8 <col:13> 'size_t':'unsigned long' lvalue Var 0x55e83d1016c8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d1027c0 <col:19, col:26> 'size_t':'unsigned long' <IntegralCast>
  `-BinaryOperator 0x55e83d102798 <col:19, col:26> 'int' '+'
    |-ImplicitCastExpr 0x55e83d102768 <col:19> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55e83d102750 <col:19> 'unsigned char' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d102700 <col:19> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
    `-ImplicitCastExpr 0x55e83d102780 <col:26> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d102728 <col:26> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B32.24] = [B32.23]
   T: break;
   Preds (2): B33 B34(Unreachable)
   Succs (1): B1

 [B33]
   1: IntegerLiteral 0x55e83d101fd8 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x55e83d102058 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x55e83d102038 <col:27, col:29> 'int'
  `-IntegerLiteral 0x55e83d101fd8 <col:28> 'int' 0
(void)([B33.1]) (CStyleCastExpr, ToVoid, void)
   Preds (2): B35 B37
   Succs (1): B32

 [B34 (NORETURN)]
   1: DeclRefExpr 0x55e83d102080 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x55e83d102398 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d102080 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B34.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x55e83d102128 <<scratch space>:131:1> 'const char [80]' lvalue "(incr > 0 && oldlen+incr < 32) || (incr < 0 && oldlen >= (unsigned int)(-incr))"
"(incr > 0 && oldlen+incr < 32) || (incr < 0 && oldlen >= (unsigned int)(-incr))"
   4: ImplicitCastExpr 0x55e83d1023f8 <<scratch space>:131:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d102128 <col:1> 'const char [80]' lvalue "(incr > 0 && oldlen+incr < 32) || (incr < 0 && oldlen >= (unsigned int)(-incr))"
[B34.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x55e83d102218 <<scratch space>:132:1> 'const char [6]' lvalue "sds.c"
"sds.c"
   6: ImplicitCastExpr 0x55e83d102410 <<scratch space>:132:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d102218 <col:1> 'const char [6]' lvalue "sds.c"
[B34.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55e83d102248 <<scratch space>:133:1> 'int' 322
322
   8: ImplicitCastExpr 0x55e83d102428 <<scratch space>:133:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x55e83d102248 <col:1> 'int' 322
[B34.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x55e83d1022e8 </usr/include/assert.h:129:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
"void sdsIncrLen(sds, int)"
  10: PredefinedExpr 0x55e83d102330 </usr/include/assert.h:129:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x55e83d1022e8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x55e83d102440 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x55e83d102350 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x55e83d102330 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x55e83d1022e8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
__extension__ [B34.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x55e83d1023b0 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x55e83d102398 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d102080 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55e83d096110 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x55e83d1023f8 <<scratch space>:131:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d102128 <col:1> 'const char [80]' lvalue "(incr > 0 && oldlen+incr < 32) || (incr < 0 && oldlen >= (unsigned int)(-incr))"
|-ImplicitCastExpr 0x55e83d102410 <line:132:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55e83d102218 <col:1> 'const char [6]' lvalue "sds.c"
|-ImplicitCastExpr 0x55e83d102428 <line:133:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x55e83d102248 <col:1> 'int' 322
`-ImplicitCastExpr 0x55e83d102440 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x55e83d102350 <col:30, col:44> 'const char [26]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x55e83d102330 <col:44> 'const char [26]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x55e83d1022e8 <col:44> 'const char [26]' lvalue "void sdsIncrLen(sds, int)"
[B34.2]([B34.4], [B34.6], [B34.8], [B34.11])
   Preds (2): B35 B36
   Succs (1): B0

 [B35]
   1: DeclRefExpr 0x55e83d101dd8 <sds.c:322:67> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
oldlen
   2: ImplicitCastExpr 0x55e83d101ef0 <sds.c:322:67> 'unsigned char' <LValueToRValue>
`-DeclRefExpr 0x55e83d101dd8 <col:67> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B35.1] (ImplicitCastExpr, LValueToRValue, unsigned char)
   3: ImplicitCastExpr 0x55e83d101f08 <sds.c:322:67> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d101ef0 <col:67> 'unsigned char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d101dd8 <col:67> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B35.2] (ImplicitCastExpr, IntegralCast, unsigned int)
   4: DeclRefExpr 0x55e83d101e00 <sds.c:322:93> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   5: ImplicitCastExpr 0x55e83d101e28 <sds.c:322:93> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d101e00 <col:93> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B35.4] (ImplicitCastExpr, LValueToRValue, int)
   6: UnaryOperator 0x55e83d101e40 <sds.c:322:92, col:93> 'int' prefix '-'
`-ImplicitCastExpr 0x55e83d101e28 <col:93> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d101e00 <col:93> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
-[B35.5]
   7: CStyleCastExpr 0x55e83d101ec8 <sds.c:322:77, col:97> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55e83d101ea8 <col:91, col:97> 'int'
  `-UnaryOperator 0x55e83d101e40 <col:92, col:93> 'int' prefix '-'
    `-ImplicitCastExpr 0x55e83d101e28 <col:93> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d101e00 <col:93> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
(unsigned int)([B35.6]) (CStyleCastExpr, IntegralCast, unsigned int)
   8: BinaryOperator 0x55e83d101f20 <sds.c:322:67, col:97> 'int' '>='
|-ImplicitCastExpr 0x55e83d101f08 <col:67> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d101ef0 <col:67> 'unsigned char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d101dd8 <col:67> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
`-CStyleCastExpr 0x55e83d101ec8 <col:77, col:97> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55e83d101ea8 <col:91, col:97> 'int'
    `-UnaryOperator 0x55e83d101e40 <col:92, col:93> 'int' prefix '-'
      `-ImplicitCastExpr 0x55e83d101e28 <col:93> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d101e00 <col:93> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B35.3] >= [B35.7]
   T: (([B38.17] && [B37.8]) || ([B36.4] && [B35.8])) ? ... : ...
   Preds (1): B36
   Succs (2): B33 B34

 [B36]
   1: DeclRefExpr 0x55e83d101d40 <sds.c:322:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   2: ImplicitCastExpr 0x55e83d101d88 <sds.c:322:55> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d101d40 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B36.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d101d68 <sds.c:322:62> 'int' 0
0
   4: BinaryOperator 0x55e83d101db0 <sds.c:322:55, col:62> 'int' '<'
|-ImplicitCastExpr 0x55e83d101d88 <col:55> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d101d40 <col:55> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d101d68 <col:62> 'int' 0
[B36.2] < [B36.3]
   T: [B36.4] && ...
   Preds (2): B37 B38
   Succs (2): B35 B34

 [B37]
   1: DeclRefExpr 0x55e83d101bf0 <sds.c:322:33> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
oldlen
   2: ImplicitCastExpr 0x55e83d101c40 <sds.c:322:33> 'unsigned char' <LValueToRValue>
`-DeclRefExpr 0x55e83d101bf0 <col:33> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B37.1] (ImplicitCastExpr, LValueToRValue, unsigned char)
   3: ImplicitCastExpr 0x55e83d101c58 <sds.c:322:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d101c40 <col:33> 'unsigned char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d101bf0 <col:33> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
[B37.2] (ImplicitCastExpr, IntegralCast, int)
   4: DeclRefExpr 0x55e83d101c18 <sds.c:322:40> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
   5: ImplicitCastExpr 0x55e83d101c70 <sds.c:322:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d101c18 <col:40> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B37.4] (ImplicitCastExpr, LValueToRValue, int)
   6: BinaryOperator 0x55e83d101c88 <sds.c:322:33, col:40> 'int' '+'
|-ImplicitCastExpr 0x55e83d101c58 <col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d101c40 <col:33> 'unsigned char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d101bf0 <col:33> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
`-ImplicitCastExpr 0x55e83d101c70 <col:40> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d101c18 <col:40> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B37.3] + [B37.5]
   7: IntegerLiteral 0x55e83d101cb0 <sds.c:322:47> 'int' 32
32
   8: BinaryOperator 0x55e83d101cd0 <sds.c:322:33, col:47> 'int' '<'
|-BinaryOperator 0x55e83d101c88 <col:33, col:40> 'int' '+'
| |-ImplicitCastExpr 0x55e83d101c58 <col:33> 'int' <IntegralCast>
| | `-ImplicitCastExpr 0x55e83d101c40 <col:33> 'unsigned char' <LValueToRValue>
| |   `-DeclRefExpr 0x55e83d101bf0 <col:33> 'unsigned char' lvalue Var 0x55e83d1019f8 'oldlen' 'unsigned char'
| `-ImplicitCastExpr 0x55e83d101c70 <col:40> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d101c18 <col:40> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d101cb0 <col:47> 'int' 32
[B37.6] < [B37.7]
   T: ([B38.17] && [B37.8]) || ...
   Preds (1): B38
   Succs (2): B33 B36

 [B38]
  case 0:
   1: DeclRefExpr 0x55e83d1018e0 <sds.c:320:50> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d101920 <sds.c:320:50> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1018e0 <col:50> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
[B38.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: CStyleCastExpr 0x55e83d101938 <sds.c:320:34, col:50> 'unsigned char *' <BitCast>
`-ImplicitCastExpr 0x55e83d101920 <col:50> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1018e0 <col:50> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
(unsigned char *)[B38.2] (CStyleCastExpr, BitCast, unsigned char *)
   4: IntegerLiteral 0x55e83d101980 <sds.c:320:53> 'int' 1
1
   5: BinaryOperator 0x55e83d1019a0 <sds.c:320:33, col:53> 'unsigned char *' '-'
|-ParenExpr 0x55e83d101960 <col:33, col:51> 'unsigned char *'
| `-CStyleCastExpr 0x55e83d101938 <col:34, col:50> 'unsigned char *' <BitCast>
|   `-ImplicitCastExpr 0x55e83d101920 <col:50> 'sds':'char *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d1018e0 <col:50> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
`-IntegerLiteral 0x55e83d101980 <col:53> 'int' 1
([B38.3]) - [B38.4]
   6: DeclStmt 0x55e83d1019c8 <sds.c:320:13, col:54>col:28
`-VarDecl 0x55e83d101880 <col:13, col:53> col:28 used fp 'unsigned char *' cinit
  `-BinaryOperator 0x55e83d1019a0 <col:33, col:53> 'unsigned char *' '-'
    |-ParenExpr 0x55e83d101960 <col:33, col:51> 'unsigned char *'
    | `-CStyleCastExpr 0x55e83d101938 <col:34, col:50> 'unsigned char *' <BitCast>
    |   `-ImplicitCastExpr 0x55e83d101920 <col:50> 'sds':'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d1018e0 <col:50> 'sds':'char *' lvalue ParmVar 0x55e83d101398 's' 'sds':'char *'
    `-IntegerLiteral 0x55e83d101980 <col:53> 'int' 1
unsigned char *fp = ((unsigned char *)s) - 1;
   7: DeclRefExpr 0x55e83d101a58 <sds.c:321:51> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
flags
   8: ImplicitCastExpr 0x55e83d101ac0 <./sds.h:87:28, col:30> 'unsigned char' <LValueToRValue>
`-ParenExpr 0x55e83d101a80 <col:28, col:30> 'unsigned char' lvalue
  `-DeclRefExpr 0x55e83d101a58 <sds.c:321:51> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
([B38.7]) (ImplicitCastExpr, LValueToRValue, unsigned char)
   9: ImplicitCastExpr 0x55e83d101ad8 <./sds.h:87:28, col:30> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d101ac0 <col:28, col:30> 'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55e83d101a80 <col:28, col:30> 'unsigned char' lvalue
    `-DeclRefExpr 0x55e83d101a58 <sds.c:321:51> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
[B38.8] (ImplicitCastExpr, IntegralCast, int)
  10: IntegerLiteral 0x55e83d101aa0 <./sds.h:84:23> 'int' 3
3
  11: BinaryOperator 0x55e83d101af0 <./sds.h:87:28, line:84:23> 'int' '>>'
|-ImplicitCastExpr 0x55e83d101ad8 <line:87:28, col:30> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d101ac0 <col:28, col:30> 'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55e83d101a80 <col:28, col:30> 'unsigned char' lvalue
|     `-DeclRefExpr 0x55e83d101a58 <sds.c:321:51> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
`-IntegerLiteral 0x55e83d101aa0 <./sds.h:84:23> 'int' 3
[B38.9] >> [B38.10]
  12: ImplicitCastExpr 0x55e83d101b38 <./sds.h:87:27, col:46> 'unsigned char' <IntegralCast>
`-ParenExpr 0x55e83d101b18 <col:27, col:46> 'int'
  `-BinaryOperator 0x55e83d101af0 <col:28, line:84:23> 'int' '>>'
    |-ImplicitCastExpr 0x55e83d101ad8 <line:87:28, col:30> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55e83d101ac0 <col:28, col:30> 'unsigned char' <LValueToRValue>
    |   `-ParenExpr 0x55e83d101a80 <col:28, col:30> 'unsigned char' lvalue
    |     `-DeclRefExpr 0x55e83d101a58 <sds.c:321:51> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
    `-IntegerLiteral 0x55e83d101aa0 <./sds.h:84:23> 'int' 3
([B38.11]) (ImplicitCastExpr, IntegralCast, unsigned char)
  13: DeclStmt 0x55e83d101b50 <sds.c:321:13, col:57>col:27
`-VarDecl 0x55e83d1019f8 <col:13, ./sds.h:87:46> sds.c:321:27 used oldlen 'unsigned char' cinit
  `-ImplicitCastExpr 0x55e83d101b38 <./sds.h:87:27, col:46> 'unsigned char' <IntegralCast>
    `-ParenExpr 0x55e83d101b18 <col:27, col:46> 'int'
      `-BinaryOperator 0x55e83d101af0 <col:28, line:84:23> 'int' '>>'
        |-ImplicitCastExpr 0x55e83d101ad8 <line:87:28, col:30> 'int' <IntegralCast>
        | `-ImplicitCastExpr 0x55e83d101ac0 <col:28, col:30> 'unsigned char' <LValueToRValue>
        |   `-ParenExpr 0x55e83d101a80 <col:28, col:30> 'unsigned char' lvalue
        |     `-DeclRefExpr 0x55e83d101a58 <sds.c:321:51> 'unsigned char' lvalue Var 0x55e83d101568 'flags' 'unsigned char'
        `-IntegerLiteral 0x55e83d101aa0 <./sds.h:84:23> 'int' 3
unsigned char oldlen = ((flags) >> 3);
  14: DeclRefExpr 0x55e83d101b68 <sds.c:322:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
incr
  15: ImplicitCastExpr 0x55e83d101bb0 <sds.c:322:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d101b68 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
[B38.14] (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x55e83d101b90 <sds.c:322:28> 'int' 0
0
  17: BinaryOperator 0x55e83d101bc8 <sds.c:322:21, col:28> 'int' '>'
|-ImplicitCastExpr 0x55e83d101bb0 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d101b68 <col:21> 'int' lvalue ParmVar 0x55e83d101410 'incr' 'int'
`-IntegerLiteral 0x55e83d101b90 <col:28> 'int' 0
[B38.15] > [B38.16]
   T: [B38.17] && ...
   Preds (1): B2
   Succs (2): B37 B36

 [B0 (EXIT)]
   Preds (6): B1 B6 B13 B20 B27 B34
