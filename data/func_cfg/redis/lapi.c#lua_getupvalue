extern const char *lua_getupvalue(lua_State *L, int funcindex, int n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: IntegerLiteral 0x556e5d356510 <./llimits.h:111:33> 'int' 0
0
   2: CStyleCastExpr 0x556e5d356540 <./llimits.h:111:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x556e5d356510 <col:33> 'int' 0
(void)[B1.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x556e5d356588 <lapi.c:1067:10> 'const char *' lvalue Var 0x556e5d355980 'name' 'const char *'
name
   4: ImplicitCastExpr 0x556e5d3565b0 <lapi.c:1067:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356588 <col:10> 'const char *' lvalue Var 0x556e5d355980 'name' 'const char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: ReturnStmt 0x556e5d3565c8 <lapi.c:1067:3, col:10>
`-ImplicitCastExpr 0x556e5d3565b0 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356588 <col:10> 'const char *' lvalue Var 0x556e5d355980 'name' 'const char *'
return [B1.4];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x556e5d355e50 <lapi.c:1063:25> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
val
   2: ImplicitCastExpr 0x556e5d355e98 <./lobject.h:162:22, col:27> 'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d355e78 <col:22, col:27> 'TValue *' lvalue
  `-DeclRefExpr 0x556e5d355e50 <lapi.c:1063:25> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
([B2.1]) (ImplicitCastExpr, LValueToRValue, TValue *)
   3: ImplicitCastExpr 0x556e5d355eb0 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x556e5d355e98 <col:22, col:27> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x556e5d355e78 <col:22, col:27> 'TValue *' lvalue
    `-DeclRefExpr 0x556e5d355e50 <lapi.c:1063:25> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
[B2.2] (ImplicitCastExpr, BitCast, const TValue *)
   4: DeclStmt 0x556e5d355ec8 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x556e5d355df0 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x556e5d355eb0 <col:22, col:27> 'const TValue *' <BitCast>
    `-ImplicitCastExpr 0x556e5d355e98 <col:22, col:27> 'TValue *' <LValueToRValue>
      `-ParenExpr 0x556e5d355e78 <col:22, col:27> 'TValue *' lvalue
        `-DeclRefExpr 0x556e5d355e50 <lapi.c:1063:25> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
const TValue *o2 = (val);
   5: DeclRefExpr 0x556e5d355f50 <lapi.c:1063:17> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x556e5d355f78 <lapi.c:1063:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d355f50 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
[B2.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x556e5d355f90 <lapi.c:1063:17, col:20> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d355f78 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d355f50 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
[B2.6]->top
   8: ImplicitCastExpr 0x556e5d355fe8 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d355fc8 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x556e5d355f90 <lapi.c:1063:17, col:20> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
    `-ImplicitCastExpr 0x556e5d355f78 <col:17> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d355f50 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
([B2.7]) (ImplicitCastExpr, LValueToRValue, StkId)
   9: DeclStmt 0x556e5d356000 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x556e5d355ef0 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x556e5d355fe8 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d355fc8 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x556e5d355f90 <lapi.c:1063:17, col:20> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
        `-ImplicitCastExpr 0x556e5d355f78 <col:17> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x556e5d355f50 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
TValue *o1 = (L->top);
  10: DeclRefExpr 0x556e5d356090 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
o2
  11: ImplicitCastExpr 0x556e5d3560b8 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356090 <col:17> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.10] (ImplicitCastExpr, LValueToRValue, const TValue *)
  12: MemberExpr 0x556e5d3560d0 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d3560b8 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356090 <col:17> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.11]->value
  13: ImplicitCastExpr 0x556e5d356108 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x556e5d3560d0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d3560b8 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d356090 <col:17> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.12] (ImplicitCastExpr, LValueToRValue, Value)
  14: DeclRefExpr 0x556e5d356018 <./lobject.h:163:5> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
o1
  15: ImplicitCastExpr 0x556e5d356040 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356018 <col:5> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
[B2.14] (ImplicitCastExpr, LValueToRValue, TValue *)
  16: MemberExpr 0x556e5d356058 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d356040 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356018 <col:5> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
[B2.15]->value
  17: BinaryOperator 0x556e5d356120 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x556e5d356058 <col:5, col:9> 'Value':'Value' lvalue ->value 0x556e5d2b7750
| `-ImplicitCastExpr 0x556e5d356040 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x556e5d356018 <col:5> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
`-ImplicitCastExpr 0x556e5d356108 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x556e5d3560d0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x556e5d2b7750
    `-ImplicitCastExpr 0x556e5d3560b8 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d356090 <col:17> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.16] = [B2.13]
  18: DeclRefExpr 0x556e5d3561c0 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
o2
  19: ImplicitCastExpr 0x556e5d3561e8 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3561c0 <col:35> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.18] (ImplicitCastExpr, LValueToRValue, const TValue *)
  20: MemberExpr 0x556e5d356200 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x556e5d2b77b0
`-ImplicitCastExpr 0x556e5d3561e8 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3561c0 <col:35> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.19]->tt
  21: ImplicitCastExpr 0x556e5d356238 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x556e5d356200 <col:35, col:39> 'const int' lvalue ->tt 0x556e5d2b77b0
  `-ImplicitCastExpr 0x556e5d3561e8 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d3561c0 <col:35> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.20] (ImplicitCastExpr, LValueToRValue, int)
  22: DeclRefExpr 0x556e5d356148 <./lobject.h:163:28> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
o1
  23: ImplicitCastExpr 0x556e5d356170 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356148 <col:28> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
[B2.22] (ImplicitCastExpr, LValueToRValue, TValue *)
  24: MemberExpr 0x556e5d356188 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x556e5d2b77b0
`-ImplicitCastExpr 0x556e5d356170 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356148 <col:28> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
[B2.23]->tt
  25: BinaryOperator 0x556e5d356250 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x556e5d356188 <col:28, col:32> 'int' lvalue ->tt 0x556e5d2b77b0
| `-ImplicitCastExpr 0x556e5d356170 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x556e5d356148 <col:28> 'TValue *' lvalue Var 0x556e5d355ef0 'o1' 'TValue *'
`-ImplicitCastExpr 0x556e5d356238 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x556e5d356200 <col:35, col:39> 'const int' lvalue ->tt 0x556e5d2b77b0
    `-ImplicitCastExpr 0x556e5d3561e8 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d3561c0 <col:35> 'const TValue *' lvalue Var 0x556e5d355df0 'o2' 'const TValue *'
[B2.24] = [B2.21]
  26: IntegerLiteral 0x556e5d356278 <./llimits.h:62:31> 'int' 0
0
  27: CStyleCastExpr 0x556e5d3562a8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x556e5d356278 <col:31> 'int' 0
(void)[B2.26] (CStyleCastExpr, ToVoid, void)
  28: DeclRefExpr 0x556e5d356338 <lapi.c:1064:18> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
L
  29: ImplicitCastExpr 0x556e5d356370 <lapi.c:1064:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356338 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
[B2.28] (ImplicitCastExpr, LValueToRValue, lua_State *)
  30: CStyleCastExpr 0x556e5d356388 <./luaconf.h:381:30, lapi.c:1064:18> 'void' <ToVoid>
`-ImplicitCastExpr 0x556e5d356370 <col:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356338 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
(void)[B2.29] (CStyleCastExpr, ToVoid, void)
  31: DeclRefExpr 0x556e5d3563d8 <lapi.c:1064:18> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
L
  32: ImplicitCastExpr 0x556e5d356400 <lapi.c:1064:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3563d8 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
[B2.31] (ImplicitCastExpr, LValueToRValue, lua_State *)
  33: MemberExpr 0x556e5d356418 <lapi.c:1064:18, line:45:66> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d356400 <line:1064:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3563d8 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
[B2.32]->top
  34: UnaryOperator 0x556e5d356450 <lapi.c:1064:18, line:45:69> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x556e5d356418 <line:1064:18, line:45:66> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
  `-ImplicitCastExpr 0x556e5d356400 <line:1064:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d3563d8 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
[B2.33]++
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclStmt 0x556e5d3559e0 <lapi.c:1058:3, col:19>col:15
`-VarDecl 0x556e5d355980 <col:3, col:15> col:15 used name 'const char *'
const char *name;
   2: DeclStmt 0x556e5d355a68 <lapi.c:1059:3, col:14>col:11
`-VarDecl 0x556e5d355a08 <col:3, col:11> col:11 used val 'TValue *'
TValue *val;
   3: IntegerLiteral 0x556e5d355a80 <./llimits.h:110:33> 'int' 0
0
   4: CStyleCastExpr 0x556e5d355ab0 <./llimits.h:110:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x556e5d355a80 <col:33> 'int' 0
(void)[B3.3] (CStyleCastExpr, ToVoid, void)
   5: DeclRefExpr 0x556e5d355b20 <lapi.c:1061:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
aux_upvalue
   6: ImplicitCastExpr 0x556e5d355d08 <lapi.c:1061:10> 'const char *(*)(StkId, int, TValue **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d355b20 <col:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
[B3.5] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(StkId, int, TValue **))
   7: DeclRefExpr 0x556e5d355b48 <lapi.c:1061:22> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
index2adr
   8: ImplicitCastExpr 0x556e5d355bc0 <lapi.c:1061:22> 'TValue *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d355b48 <col:22> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
[B3.7] (ImplicitCastExpr, FunctionToPointerDecay, TValue *(*)(lua_State *, int))
   9: DeclRefExpr 0x556e5d355b70 <lapi.c:1061:32> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x556e5d355c10 <lapi.c:1061:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d355b70 <col:32> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
[B3.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: DeclRefExpr 0x556e5d355b98 <lapi.c:1061:35> 'int' lvalue ParmVar 0x556e5d355798 'funcindex' 'int'
funcindex
  12: ImplicitCastExpr 0x556e5d355c28 <lapi.c:1061:35> 'int' <LValueToRValue>
`-DeclRefExpr 0x556e5d355b98 <col:35> 'int' lvalue ParmVar 0x556e5d355798 'funcindex' 'int'
[B3.11] (ImplicitCastExpr, LValueToRValue, int)
  13: CallExpr 0x556e5d355bd8 <lapi.c:1061:22, col:44> 'TValue *'
|-ImplicitCastExpr 0x556e5d355bc0 <col:22> 'TValue *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d355b48 <col:22> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
|-ImplicitCastExpr 0x556e5d355c10 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x556e5d355b70 <col:32> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
`-ImplicitCastExpr 0x556e5d355c28 <col:35> 'int' <LValueToRValue>
  `-DeclRefExpr 0x556e5d355b98 <col:35> 'int' lvalue ParmVar 0x556e5d355798 'funcindex' 'int'
[B3.8]([B3.10], [B3.12])
  14: DeclRefExpr 0x556e5d355c40 <lapi.c:1061:47> 'int' lvalue ParmVar 0x556e5d355810 'n' 'int'
n
  15: ImplicitCastExpr 0x556e5d355d60 <lapi.c:1061:47> 'int' <LValueToRValue>
`-DeclRefExpr 0x556e5d355c40 <col:47> 'int' lvalue ParmVar 0x556e5d355810 'n' 'int'
[B3.14] (ImplicitCastExpr, LValueToRValue, int)
  16: DeclRefExpr 0x556e5d355c68 <lapi.c:1061:51> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
val
  17: UnaryOperator 0x556e5d355c90 <lapi.c:1061:50, col:51> 'TValue **' prefix '&'
`-DeclRefExpr 0x556e5d355c68 <col:51> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
&[B3.16]
  18: CallExpr 0x556e5d355d20 <lapi.c:1061:10, col:54> 'const char *'
|-ImplicitCastExpr 0x556e5d355d08 <col:10> 'const char *(*)(StkId, int, TValue **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d355b20 <col:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
|-CallExpr 0x556e5d355bd8 <col:22, col:44> 'TValue *'
| |-ImplicitCastExpr 0x556e5d355bc0 <col:22> 'TValue *(*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x556e5d355b48 <col:22> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
| |-ImplicitCastExpr 0x556e5d355c10 <col:32> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x556e5d355b70 <col:32> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
| `-ImplicitCastExpr 0x556e5d355c28 <col:35> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x556e5d355b98 <col:35> 'int' lvalue ParmVar 0x556e5d355798 'funcindex' 'int'
|-ImplicitCastExpr 0x556e5d355d60 <col:47> 'int' <LValueToRValue>
| `-DeclRefExpr 0x556e5d355c40 <col:47> 'int' lvalue ParmVar 0x556e5d355810 'n' 'int'
`-UnaryOperator 0x556e5d355c90 <col:50, col:51> 'TValue **' prefix '&'
  `-DeclRefExpr 0x556e5d355c68 <col:51> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
[B3.6]([B3.13], [B3.15], [B3.17])
  19: DeclRefExpr 0x556e5d355af8 <lapi.c:1061:3> 'const char *' lvalue Var 0x556e5d355980 'name' 'const char *'
name
  20: BinaryOperator 0x556e5d355d78 <lapi.c:1061:3, col:54> 'const char *' '='
|-DeclRefExpr 0x556e5d355af8 <col:3> 'const char *' lvalue Var 0x556e5d355980 'name' 'const char *'
`-CallExpr 0x556e5d355d20 <col:10, col:54> 'const char *'
  |-ImplicitCastExpr 0x556e5d355d08 <col:10> 'const char *(*)(StkId, int, TValue **)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x556e5d355b20 <col:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
  |-CallExpr 0x556e5d355bd8 <col:22, col:44> 'TValue *'
  | |-ImplicitCastExpr 0x556e5d355bc0 <col:22> 'TValue *(*)(lua_State *, int)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x556e5d355b48 <col:22> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
  | |-ImplicitCastExpr 0x556e5d355c10 <col:32> 'lua_State *' <LValueToRValue>
  | | `-DeclRefExpr 0x556e5d355b70 <col:32> 'lua_State *' lvalue ParmVar 0x556e5d355720 'L' 'lua_State *'
  | `-ImplicitCastExpr 0x556e5d355c28 <col:35> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x556e5d355b98 <col:35> 'int' lvalue ParmVar 0x556e5d355798 'funcindex' 'int'
  |-ImplicitCastExpr 0x556e5d355d60 <col:47> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x556e5d355c40 <col:47> 'int' lvalue ParmVar 0x556e5d355810 'n' 'int'
  `-UnaryOperator 0x556e5d355c90 <col:50, col:51> 'TValue **' prefix '&'
    `-DeclRefExpr 0x556e5d355c68 <col:51> 'TValue *' lvalue Var 0x556e5d355a08 'val' 'TValue *'
[B3.19] = [B3.18]
  21: DeclRefExpr 0x556e5d355da0 <lapi.c:1062:7> 'const char *' lvalue Var 0x556e5d355980 'name' 'const char *'
name
  22: ImplicitCastExpr 0x556e5d355dc8 <lapi.c:1062:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x556e5d355da0 <col:7> 'const char *' lvalue Var 0x556e5d355980 'name' 'const char *'
[B3.21] (ImplicitCastExpr, LValueToRValue, const char *)
   T: if [B3.22]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1
