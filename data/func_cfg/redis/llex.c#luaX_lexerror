void luaX_lexerror(LexState *ls, const char *msg, int token)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x561ce74481b8 <llex.c:108:3> 'void (lua_State *, int)' Function 0x561ce74232a0 'luaD_throw' 'void (lua_State *, int)'
luaD_throw
   2: ImplicitCastExpr 0x561ce74482d8 <llex.c:108:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce74481b8 <col:3> 'void (lua_State *, int)' Function 0x561ce74232a0 'luaD_throw' 'void (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x561ce74481e0 <llex.c:108:14> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x561ce7448208 <llex.c:108:14> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce74481e0 <col:14> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: MemberExpr 0x561ce7448220 <llex.c:108:14, col:18> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
`-ImplicitCastExpr 0x561ce7448208 <col:14> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce74481e0 <col:14> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B1.4]->L
   6: ImplicitCastExpr 0x561ce7448328 <llex.c:108:14, col:18> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x561ce7448220 <col:14, col:18> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  `-ImplicitCastExpr 0x561ce7448208 <col:14> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x561ce74481e0 <col:14> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B1.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: IntegerLiteral 0x561ce7448258 <./lua.h:45:23> 'int' 3
3
   8: CallExpr 0x561ce74482f0 <llex.c:108:3, col:34> 'void'
|-ImplicitCastExpr 0x561ce74482d8 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce74481b8 <col:3> 'void (lua_State *, int)' Function 0x561ce74232a0 'luaD_throw' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x561ce7448328 <col:14, col:18> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x561ce7448220 <col:14, col:18> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
|   `-ImplicitCastExpr 0x561ce7448208 <col:14> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x561ce74481e0 <col:14> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
`-IntegerLiteral 0x561ce7448258 <./lua.h:45:23> 'int' 3
[B1.2]([B1.6], [B1.7])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x561ce7447e78 <llex.c:107:5> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
luaO_pushfstring
   2: ImplicitCastExpr 0x561ce74480c0 <llex.c:107:5> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7447e78 <col:5> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x561ce7447ea0 <llex.c:107:22> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x561ce7447ec8 <llex.c:107:22> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447ea0 <col:22> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: MemberExpr 0x561ce7447ee0 <llex.c:107:22, col:26> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
`-ImplicitCastExpr 0x561ce7447ec8 <col:22> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7447ea0 <col:22> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B2.4]->L
   6: ImplicitCastExpr 0x561ce7448120 <llex.c:107:22, col:26> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x561ce7447ee0 <col:22, col:26> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  `-ImplicitCastExpr 0x561ce7447ec8 <col:22> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x561ce7447ea0 <col:22> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B2.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: StringLiteral 0x561ce7447f58 <llex.c:107:29, ./luaconf.h:201:25> 'char [13]' lvalue "%s near '%s'"
"%s near '%s'"
   8: ImplicitCastExpr 0x561ce7448138 <llex.c:107:29, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x561ce7447f58 <llex.c:107:29, ./luaconf.h:201:25> 'char [13]' lvalue "%s near '%s'"
[B2.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x561ce7448150 <llex.c:107:29, ./luaconf.h:201:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x561ce7448138 <llex.c:107:29, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x561ce7447f58 <llex.c:107:29, ./luaconf.h:201:25> 'char [13]' lvalue "%s near '%s'"
[B2.8] (ImplicitCastExpr, BitCast, const char *)
  10: DeclRefExpr 0x561ce7447fa0 <llex.c:107:48> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
msg
  11: ImplicitCastExpr 0x561ce7448168 <llex.c:107:48> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447fa0 <col:48> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
[B2.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: DeclRefExpr 0x561ce7447fc8 <llex.c:107:53> 'const char *(LexState *, int)' Function 0x561ce7446df8 'txtToken' 'const char *(LexState *, int)'
txtToken
  13: ImplicitCastExpr 0x561ce7448040 <llex.c:107:53> 'const char *(*)(LexState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7447fc8 <col:53> 'const char *(LexState *, int)' Function 0x561ce7446df8 'txtToken' 'const char *(LexState *, int)'
[B2.12] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(LexState *, int))
  14: DeclRefExpr 0x561ce7447ff0 <llex.c:107:62> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
ls
  15: ImplicitCastExpr 0x561ce7448090 <llex.c:107:62> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447ff0 <col:62> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B2.14] (ImplicitCastExpr, LValueToRValue, LexState *)
  16: DeclRefExpr 0x561ce7448018 <llex.c:107:66> 'int' lvalue ParmVar 0x561ce7447580 'token' 'int'
token
  17: ImplicitCastExpr 0x561ce74480a8 <llex.c:107:66> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7448018 <col:66> 'int' lvalue ParmVar 0x561ce7447580 'token' 'int'
[B2.16] (ImplicitCastExpr, LValueToRValue, int)
  18: CallExpr 0x561ce7448058 <llex.c:107:53, col:71> 'const char *'
|-ImplicitCastExpr 0x561ce7448040 <col:53> 'const char *(*)(LexState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7447fc8 <col:53> 'const char *(LexState *, int)' Function 0x561ce7446df8 'txtToken' 'const char *(LexState *, int)'
|-ImplicitCastExpr 0x561ce7448090 <col:62> 'LexState *' <LValueToRValue>
| `-DeclRefExpr 0x561ce7447ff0 <col:62> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
`-ImplicitCastExpr 0x561ce74480a8 <col:66> 'int' <LValueToRValue>
  `-DeclRefExpr 0x561ce7448018 <col:66> 'int' lvalue ParmVar 0x561ce7447580 'token' 'int'
[B2.13]([B2.15], [B2.17])
  19: CallExpr 0x561ce74480d8 <llex.c:107:5, col:72> 'const char *'
|-ImplicitCastExpr 0x561ce74480c0 <col:5> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7447e78 <col:5> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x561ce7448120 <col:22, col:26> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x561ce7447ee0 <col:22, col:26> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
|   `-ImplicitCastExpr 0x561ce7447ec8 <col:22> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x561ce7447ea0 <col:22> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
|-ImplicitCastExpr 0x561ce7448150 <col:29, ./luaconf.h:201:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x561ce7448138 <llex.c:107:29, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x561ce7447f58 <llex.c:107:29, ./luaconf.h:201:25> 'char [13]' lvalue "%s near '%s'"
|-ImplicitCastExpr 0x561ce7448168 <llex.c:107:48> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x561ce7447fa0 <col:48> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
`-CallExpr 0x561ce7448058 <col:53, col:71> 'const char *'
  |-ImplicitCastExpr 0x561ce7448040 <col:53> 'const char *(*)(LexState *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x561ce7447fc8 <col:53> 'const char *(LexState *, int)' Function 0x561ce7446df8 'txtToken' 'const char *(LexState *, int)'
  |-ImplicitCastExpr 0x561ce7448090 <col:62> 'LexState *' <LValueToRValue>
  | `-DeclRefExpr 0x561ce7447ff0 <col:62> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
  `-ImplicitCastExpr 0x561ce74480a8 <col:66> 'int' <LValueToRValue>
    `-DeclRefExpr 0x561ce7448018 <col:66> 'int' lvalue ParmVar 0x561ce7447580 'token' 'int'
[B2.2]([B2.6], [B2.9], [B2.11], [B2.18])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclStmt 0x561ce74477f8 <llex.c:103:3, col:20>col:8
`-VarDecl 0x561ce7447798 <col:3, col:19> col:8 used buff 'char [80]'
char buff[80];
   2: DeclRefExpr 0x561ce7447810 <llex.c:104:3> 'void (char *, const char *, size_t)' Function 0x561ce7406d60 'luaO_chunkid' 'void (char *, const char *, size_t)'
luaO_chunkid
   3: ImplicitCastExpr 0x561ce7447a88 <llex.c:104:3> 'void (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7447810 <col:3> 'void (char *, const char *, size_t)' Function 0x561ce7406d60 'luaO_chunkid' 'void (char *, const char *, size_t)'
[B3.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char *, const char *, size_t))
   4: DeclRefExpr 0x561ce7447838 <llex.c:104:16> 'char [80]' lvalue Var 0x561ce7447798 'buff' 'char [80]'
buff
   5: ImplicitCastExpr 0x561ce7447ae0 <llex.c:104:16> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x561ce7447838 <col:16> 'char [80]' lvalue Var 0x561ce7447798 'buff' 'char [80]'
[B3.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: DeclRefExpr 0x561ce7447860 <llex.c:104:29> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
ls
   7: ImplicitCastExpr 0x561ce7447888 <llex.c:104:29> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447860 <col:29> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.6] (ImplicitCastExpr, LValueToRValue, LexState *)
   8: MemberExpr 0x561ce74478a0 <llex.c:104:29, col:33> 'TString *' lvalue ->source 0x561ce7426cb8
`-ImplicitCastExpr 0x561ce7447888 <col:29> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7447860 <col:29> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.7]->source
   9: ImplicitCastExpr 0x561ce7447918 <./lobject.h:210:39, col:42> 'TString *' <LValueToRValue>
`-ParenExpr 0x561ce74478d8 <col:39, col:42> 'TString *' lvalue
  `-MemberExpr 0x561ce74478a0 <llex.c:104:29, col:33> 'TString *' lvalue ->source 0x561ce7426cb8
    `-ImplicitCastExpr 0x561ce7447888 <col:29> 'LexState *' <LValueToRValue>
      `-DeclRefExpr 0x561ce7447860 <col:29> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
([B3.8]) (ImplicitCastExpr, LValueToRValue, TString *)
  10: IntegerLiteral 0x561ce74478f8 <./lobject.h:210:46> 'int' 1
1
  11: BinaryOperator 0x561ce7447930 <./lobject.h:210:39, col:46> 'TString *' '+'
|-ImplicitCastExpr 0x561ce7447918 <col:39, col:42> 'TString *' <LValueToRValue>
| `-ParenExpr 0x561ce74478d8 <col:39, col:42> 'TString *' lvalue
|   `-MemberExpr 0x561ce74478a0 <llex.c:104:29, col:33> 'TString *' lvalue ->source 0x561ce7426cb8
|     `-ImplicitCastExpr 0x561ce7447888 <col:29> 'LexState *' <LValueToRValue>
|       `-DeclRefExpr 0x561ce7447860 <col:29> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
`-IntegerLiteral 0x561ce74478f8 <./lobject.h:210:46> 'int' 1
[B3.9] + [B3.10]
  12: CStyleCastExpr 0x561ce74479c0 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x561ce74479a0 <col:26, col:30> 'TString *'
  `-BinaryOperator 0x561ce7447930 <./lobject.h:210:39, col:46> 'TString *' '+'
    |-ImplicitCastExpr 0x561ce7447918 <col:39, col:42> 'TString *' <LValueToRValue>
    | `-ParenExpr 0x561ce74478d8 <col:39, col:42> 'TString *' lvalue
    |   `-MemberExpr 0x561ce74478a0 <llex.c:104:29, col:33> 'TString *' lvalue ->source 0x561ce7426cb8
    |     `-ImplicitCastExpr 0x561ce7447888 <col:29> 'LexState *' <LValueToRValue>
    |       `-DeclRefExpr 0x561ce7447860 <col:29> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
    `-IntegerLiteral 0x561ce74478f8 <./lobject.h:210:46> 'int' 1
(const char *)([B3.11]) (CStyleCastExpr, BitCast, const char *)
  13: IntegerLiteral 0x561ce7447a08 <llex.c:75:25> 'int' 80
80
  14: ImplicitCastExpr 0x561ce7447af8 <llex.c:75:25> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x561ce7447a08 <col:25> 'int' 80
[B3.13] (ImplicitCastExpr, IntegralCast, size_t)
  15: CallExpr 0x561ce7447aa0 <llex.c:104:3, col:48> 'void'
|-ImplicitCastExpr 0x561ce7447a88 <col:3> 'void (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7447810 <col:3> 'void (char *, const char *, size_t)' Function 0x561ce7406d60 'luaO_chunkid' 'void (char *, const char *, size_t)'
|-ImplicitCastExpr 0x561ce7447ae0 <col:16> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x561ce7447838 <col:16> 'char [80]' lvalue Var 0x561ce7447798 'buff' 'char [80]'
|-ParenExpr 0x561ce74479e8 <./llimits.h:75:22, col:31> 'const char *'
| `-CStyleCastExpr 0x561ce74479c0 <col:23, col:30> 'const char *' <BitCast>
|   `-ParenExpr 0x561ce74479a0 <col:26, col:30> 'TString *'
|     `-BinaryOperator 0x561ce7447930 <./lobject.h:210:39, col:46> 'TString *' '+'
|       |-ImplicitCastExpr 0x561ce7447918 <col:39, col:42> 'TString *' <LValueToRValue>
|       | `-ParenExpr 0x561ce74478d8 <col:39, col:42> 'TString *' lvalue
|       |   `-MemberExpr 0x561ce74478a0 <llex.c:104:29, col:33> 'TString *' lvalue ->source 0x561ce7426cb8
|       |     `-ImplicitCastExpr 0x561ce7447888 <col:29> 'LexState *' <LValueToRValue>
|       |       `-DeclRefExpr 0x561ce7447860 <col:29> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
|       `-IntegerLiteral 0x561ce74478f8 <./lobject.h:210:46> 'int' 1
`-ImplicitCastExpr 0x561ce7447af8 <llex.c:75:25> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x561ce7447a08 <col:25> 'int' 80
[B3.3]([B3.5], ([B3.12]), [B3.14])
  16: DeclRefExpr 0x561ce7447b38 <llex.c:105:9> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
luaO_pushfstring
  17: ImplicitCastExpr 0x561ce7447d18 <llex.c:105:9> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7447b38 <col:9> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
[B3.16] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, ...))
  18: DeclRefExpr 0x561ce7447b60 <llex.c:105:26> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
ls
  19: ImplicitCastExpr 0x561ce7447b88 <llex.c:105:26> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447b60 <col:26> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.18] (ImplicitCastExpr, LValueToRValue, LexState *)
  20: MemberExpr 0x561ce7447ba0 <llex.c:105:26, col:30> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
`-ImplicitCastExpr 0x561ce7447b88 <col:26> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7447b60 <col:26> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.19]->L
  21: ImplicitCastExpr 0x561ce7447d80 <llex.c:105:26, col:30> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x561ce7447ba0 <col:26, col:30> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  `-ImplicitCastExpr 0x561ce7447b88 <col:26> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x561ce7447b60 <col:26> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.20] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
  22: StringLiteral 0x561ce7447c18 <llex.c:105:33> 'char [10]' lvalue "%s:%d: %s"
"%s:%d: %s"
  23: ImplicitCastExpr 0x561ce7447d98 <llex.c:105:33> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x561ce7447c18 <col:33> 'char [10]' lvalue "%s:%d: %s"
[B3.22] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  24: ImplicitCastExpr 0x561ce7447db0 <llex.c:105:33> 'const char *' <BitCast>
`-ImplicitCastExpr 0x561ce7447d98 <col:33> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x561ce7447c18 <col:33> 'char [10]' lvalue "%s:%d: %s"
[B3.23] (ImplicitCastExpr, BitCast, const char *)
  25: DeclRefExpr 0x561ce7447c50 <llex.c:105:46> 'char [80]' lvalue Var 0x561ce7447798 'buff' 'char [80]'
buff
  26: ImplicitCastExpr 0x561ce7447dc8 <llex.c:105:46> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x561ce7447c50 <col:46> 'char [80]' lvalue Var 0x561ce7447798 'buff' 'char [80]'
[B3.25] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  27: DeclRefExpr 0x561ce7447c78 <llex.c:105:52> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
ls
  28: ImplicitCastExpr 0x561ce7447ca0 <llex.c:105:52> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447c78 <col:52> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.27] (ImplicitCastExpr, LValueToRValue, LexState *)
  29: MemberExpr 0x561ce7447cb8 <llex.c:105:52, col:56> 'int' lvalue ->linenumber 0x561ce7426850
`-ImplicitCastExpr 0x561ce7447ca0 <col:52> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7447c78 <col:52> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.28]->linenumber
  30: ImplicitCastExpr 0x561ce7447de0 <llex.c:105:52, col:56> 'int' <LValueToRValue>
`-MemberExpr 0x561ce7447cb8 <col:52, col:56> 'int' lvalue ->linenumber 0x561ce7426850
  `-ImplicitCastExpr 0x561ce7447ca0 <col:52> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x561ce7447c78 <col:52> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
[B3.29] (ImplicitCastExpr, LValueToRValue, int)
  31: DeclRefExpr 0x561ce7447cf0 <llex.c:105:68> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
msg
  32: ImplicitCastExpr 0x561ce7447df8 <llex.c:105:68> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447cf0 <col:68> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
[B3.31] (ImplicitCastExpr, LValueToRValue, const char *)
  33: CallExpr 0x561ce7447d30 <llex.c:105:9, col:71> 'const char *'
|-ImplicitCastExpr 0x561ce7447d18 <col:9> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7447b38 <col:9> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x561ce7447d80 <col:26, col:30> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x561ce7447ba0 <col:26, col:30> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
|   `-ImplicitCastExpr 0x561ce7447b88 <col:26> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x561ce7447b60 <col:26> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
|-ImplicitCastExpr 0x561ce7447db0 <col:33> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x561ce7447d98 <col:33> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x561ce7447c18 <col:33> 'char [10]' lvalue "%s:%d: %s"
|-ImplicitCastExpr 0x561ce7447dc8 <col:46> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x561ce7447c50 <col:46> 'char [80]' lvalue Var 0x561ce7447798 'buff' 'char [80]'
|-ImplicitCastExpr 0x561ce7447de0 <col:52, col:56> 'int' <LValueToRValue>
| `-MemberExpr 0x561ce7447cb8 <col:52, col:56> 'int' lvalue ->linenumber 0x561ce7426850
|   `-ImplicitCastExpr 0x561ce7447ca0 <col:52> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x561ce7447c78 <col:52> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
`-ImplicitCastExpr 0x561ce7447df8 <col:68> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7447cf0 <col:68> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
[B3.17]([B3.21], [B3.24], [B3.26], [B3.30], [B3.32])
  34: DeclRefExpr 0x561ce7447b10 <llex.c:105:3> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
msg
  35: BinaryOperator 0x561ce7447e10 <llex.c:105:3, col:71> 'const char *' '='
|-DeclRefExpr 0x561ce7447b10 <col:3> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
`-CallExpr 0x561ce7447d30 <col:9, col:71> 'const char *'
  |-ImplicitCastExpr 0x561ce7447d18 <col:9> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x561ce7447b38 <col:9> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
  |-ImplicitCastExpr 0x561ce7447d80 <col:26, col:30> 'struct lua_State *' <LValueToRValue>
  | `-MemberExpr 0x561ce7447ba0 <col:26, col:30> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  |   `-ImplicitCastExpr 0x561ce7447b88 <col:26> 'LexState *' <LValueToRValue>
  |     `-DeclRefExpr 0x561ce7447b60 <col:26> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
  |-ImplicitCastExpr 0x561ce7447db0 <col:33> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x561ce7447d98 <col:33> 'char *' <ArrayToPointerDecay>
  |   `-StringLiteral 0x561ce7447c18 <col:33> 'char [10]' lvalue "%s:%d: %s"
  |-ImplicitCastExpr 0x561ce7447dc8 <col:46> 'char *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x561ce7447c50 <col:46> 'char [80]' lvalue Var 0x561ce7447798 'buff' 'char [80]'
  |-ImplicitCastExpr 0x561ce7447de0 <col:52, col:56> 'int' <LValueToRValue>
  | `-MemberExpr 0x561ce7447cb8 <col:52, col:56> 'int' lvalue ->linenumber 0x561ce7426850
  |   `-ImplicitCastExpr 0x561ce7447ca0 <col:52> 'LexState *' <LValueToRValue>
  |     `-DeclRefExpr 0x561ce7447c78 <col:52> 'LexState *' lvalue ParmVar 0x561ce7447490 'ls' 'LexState *'
  `-ImplicitCastExpr 0x561ce7447df8 <col:68> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x561ce7447cf0 <col:68> 'const char *' lvalue ParmVar 0x561ce7447508 'msg' 'const char *'
[B3.34] = [B3.33]
  36: DeclRefExpr 0x561ce7447e38 <llex.c:106:7> 'int' lvalue ParmVar 0x561ce7447580 'token' 'int'
token
  37: ImplicitCastExpr 0x561ce7447e60 <llex.c:106:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7447e38 <col:7> 'int' lvalue ParmVar 0x561ce7447580 'token' 'int'
[B3.36] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B3.37]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1
