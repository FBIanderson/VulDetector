extern int lua_getinfo(lua_State *L, const char *what, lua_Debug *ar)
 [B16 (ENTRY)]
   Succs (1): B15

 [B1]
   1: IntegerLiteral 0x555e9724ae50 <./llimits.h:111:33> 'int' 0
0
   2: CStyleCastExpr 0x555e9724ae80 <./llimits.h:111:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x555e9724ae50 <col:33> 'int' 0
(void)[B1.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x555e9724aec8 <ldebug.c:258:10> 'int' lvalue Var 0x555e97248b68 'status' 'int'
status
   4: ImplicitCastExpr 0x555e9724aef0 <ldebug.c:258:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9724aec8 <col:10> 'int' lvalue Var 0x555e97248b68 'status' 'int'
[B1.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ReturnStmt 0x555e9724af08 <ldebug.c:258:3, col:10>
`-ImplicitCastExpr 0x555e9724aef0 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x555e9724aec8 <col:10> 'int' lvalue Var 0x555e97248b68 'status' 'int'
return [B1.4];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e9724acc0 <ldebug.c:256:5> 'void (lua_State *, Closure *)' Function 0x555e97244c30 'collectvalidlines' 'void (lua_State *, Closure *)'
collectvalidlines
   2: ImplicitCastExpr 0x555e9724ad98 <ldebug.c:256:5> 'void (*)(lua_State *, Closure *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e9724acc0 <col:5> 'void (lua_State *, Closure *)' Function 0x555e97244c30 'collectvalidlines' 'void (lua_State *, Closure *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, Closure *))
   3: DeclRefExpr 0x555e9724ace8 <ldebug.c:256:23> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9724ade8 <ldebug.c:256:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9724ace8 <col:23> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x555e9724ad10 <ldebug.c:256:26> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
f
   6: ImplicitCastExpr 0x555e9724ae00 <ldebug.c:256:26> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e9724ad10 <col:26> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
[B2.5] (ImplicitCastExpr, LValueToRValue, Closure *)
   7: CallExpr 0x555e9724adb0 <ldebug.c:256:5, col:27> 'void'
|-ImplicitCastExpr 0x555e9724ad98 <col:5> 'void (*)(lua_State *, Closure *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e9724acc0 <col:5> 'void (lua_State *, Closure *)' Function 0x555e97244c30 'collectvalidlines' 'void (lua_State *, Closure *)'
|-ImplicitCastExpr 0x555e9724ade8 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e9724ace8 <col:23> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e9724ae00 <col:26> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x555e9724ad10 <col:26> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
[B2.2]([B2.4], [B2.6])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x555e9724abd8 <ldebug.c:255:7> 'char *(const char *, int)' Function 0x555e970fe708 'strchr' 'char *(const char *, int)'
strchr
   2: ImplicitCastExpr 0x555e9724ac58 <ldebug.c:255:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e9724abd8 <col:7> 'char *(const char *, int)' Function 0x555e970fe708 'strchr' 'char *(const char *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, int))
   3: DeclRefExpr 0x555e9724ac00 <ldebug.c:255:14> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
what
   4: ImplicitCastExpr 0x555e9724aca8 <ldebug.c:255:14> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9724ac00 <col:14> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: CharacterLiteral 0x555e9724ac28 <ldebug.c:255:20> 'int' 76
'L'
   6: CallExpr 0x555e9724ac70 <ldebug.c:255:7, col:23> 'char *'
|-ImplicitCastExpr 0x555e9724ac58 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e9724abd8 <col:7> 'char *(const char *, int)' Function 0x555e970fe708 'strchr' 'char *(const char *, int)'
|-ImplicitCastExpr 0x555e9724aca8 <col:14> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e9724ac00 <col:14> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
`-CharacterLiteral 0x555e9724ac28 <col:20> 'int' 76
[B3.2]([B3.4], [B3.5])
   T: if [B3.6]
   Preds (2): B4 B11
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x555e9724aaa0 <ldebug.c:253:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e9724aac8 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9724aaa0 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e9724aae0 <ldebug.c:253:14, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e9724aac8 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9724aaa0 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B4.2]->top
   4: UnaryOperator 0x555e9724ab18 <ldebug.c:253:14, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x555e9724aae0 <ldebug.c:253:14, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x555e97213368
  `-ImplicitCastExpr 0x555e9724aac8 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9724aaa0 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B4.3]++
   Preds (2): B5 B6
   Succs (1): B3

 [B5]
   1: IntegerLiteral 0x555e9724a9e0 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x555e9724aa10 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x555e9724a9e0 <col:38> 'int' 0
(void)[B5.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B7
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x555e9724a908 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x555e9721fb08 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x555e9724a978 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e9724a908 <col:5> 'void (lua_State *, int)' Function 0x555e9721fb08 'luaD_growstack' 'void (lua_State *, int)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x555e9724a930 <ldebug.c:253:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9724a9c8 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9724a930 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x555e9724a958 <./ldo.h:22:40> 'int' 1
1
   6: CallExpr 0x555e9724a990 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x555e9724a978 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e9724a908 <col:5> 'void (lua_State *, int)' Function 0x555e9721fb08 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x555e9724a9c8 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e9724a930 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
`-IntegerLiteral 0x555e9724a958 <./ldo.h:22:40> 'int' 1
[B6.2]([B6.4], [B6.5])
   Preds (1): B7
   Succs (1): B4

 [B7]
   1: DeclRefExpr 0x555e9724a628 <ldebug.c:253:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e9724a650 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9724a628 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B7.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e9724a668 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
`-ImplicitCastExpr 0x555e9724a650 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9724a628 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B7.2]->stack_last
   4: ImplicitCastExpr 0x555e9724a6b8 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e9724a668 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
  `-ImplicitCastExpr 0x555e9724a650 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9724a628 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: CStyleCastExpr 0x555e9724a6d0 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x555e9724a6b8 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x555e9724a668 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
    `-ImplicitCastExpr 0x555e9724a650 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9724a628 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
(char *)[B7.4] (CStyleCastExpr, BitCast, char *)
   6: DeclRefExpr 0x555e9724a6f8 <ldebug.c:253:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x555e9724a720 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9724a6f8 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B7.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: MemberExpr 0x555e9724a738 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e9724a720 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9724a6f8 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B7.7]->top
   9: ImplicitCastExpr 0x555e9724a788 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e9724a738 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
  `-ImplicitCastExpr 0x555e9724a720 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9724a6f8 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B7.8] (ImplicitCastExpr, LValueToRValue, StkId)
  10: CStyleCastExpr 0x555e9724a7a0 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x555e9724a788 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x555e9724a738 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
    `-ImplicitCastExpr 0x555e9724a720 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9724a6f8 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
(char *)[B7.9] (CStyleCastExpr, BitCast, char *)
  11: BinaryOperator 0x555e9724a7c8 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x555e9724a6d0 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x555e9724a6b8 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x555e9724a668 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
|     `-ImplicitCastExpr 0x555e9724a650 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x555e9724a628 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
`-CStyleCastExpr 0x555e9724a7a0 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x555e9724a788 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x555e9724a738 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
      `-ImplicitCastExpr 0x555e9724a720 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x555e9724a6f8 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B7.5] - [B7.10]
  12: IntegerLiteral 0x555e9724a7f0 <./ldo.h:22:40> 'int' 1
1
  13: UnaryExprOrTypeTraitExpr 0x555e9724a840 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  14: CStyleCastExpr 0x555e9724a878 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x555e9724a840 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B7.13] (CStyleCastExpr, IntegralCast, int)
  15: BinaryOperator 0x555e9724a8a0 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x555e9724a810 <col:49, col:51> 'int'
| `-IntegerLiteral 0x555e9724a7f0 <line:22:40> 'int' 1
`-CStyleCastExpr 0x555e9724a878 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x555e9724a840 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B7.12]) * [B7.14]
  16: ImplicitCastExpr 0x555e9724a8c8 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x555e9724a8a0 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x555e9724a810 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x555e9724a7f0 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x555e9724a878 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x555e9724a840 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B7.15] (ImplicitCastExpr, IntegralCast, long)
  17: BinaryOperator 0x555e9724a8e0 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x555e9724a7c8 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x555e9724a6d0 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x555e9724a6b8 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x555e9724a668 <ldebug.c:253:14, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x555e97213618
| |     `-ImplicitCastExpr 0x555e9724a650 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x555e9724a628 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
| `-CStyleCastExpr 0x555e9724a7a0 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x555e9724a788 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x555e9724a738 <ldebug.c:253:14, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x555e97213368
|       `-ImplicitCastExpr 0x555e9724a720 <ldebug.c:253:14> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x555e9724a6f8 <col:14> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e9724a8c8 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x555e9724a8a0 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x555e9724a810 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x555e9724a7f0 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x555e9724a878 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x555e9724a840 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B7.11] <= [B7.16]
   T: if [B7.17]
   Preds (2): B8 B9
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x555e9724a000 <ldebug.c:252:24> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e9724a028 <ldebug.c:252:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9724a000 <col:24> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B8.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e9724a040 <ldebug.c:252:24, col:27> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e9724a028 <col:24> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9724a000 <col:24> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B8.2]->top
   4: ImplicitCastExpr 0x555e9724a098 <./lobject.h:144:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e9724a078 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e9724a040 <ldebug.c:252:24, col:27> 'StkId':'TValue *' lvalue ->top 0x555e97213368
    `-ImplicitCastExpr 0x555e9724a028 <col:24> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9724a000 <col:24> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
([B8.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclStmt 0x555e9724a0b0 <./lobject.h:144:5, col:22>col:13
`-VarDecl 0x555e97249fa0 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x555e9724a098 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e9724a078 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e9724a040 <ldebug.c:252:24, col:27> 'StkId':'TValue *' lvalue ->top 0x555e97213368
        `-ImplicitCastExpr 0x555e9724a028 <col:24> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x555e9724a000 <col:24> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
TValue *i_o = (L->top);
   6: DeclRefExpr 0x555e9724a178 <ldebug.c:252:32> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
f
   7: ImplicitCastExpr 0x555e9724a220 <./llimits.h:75:26, col:30> 'Closure *' <LValueToRValue>
`-ParenExpr 0x555e9724a200 <col:26, col:30> 'Closure *' lvalue
  `-ParenExpr 0x555e9724a1a0 <./lobject.h:145:36, col:38> 'Closure *' lvalue
    `-DeclRefExpr 0x555e9724a178 <ldebug.c:252:32> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
(([B8.6])) (ImplicitCastExpr, LValueToRValue, Closure *)
   8: CStyleCastExpr 0x555e9724a238 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x555e9724a220 <col:26, col:30> 'Closure *' <LValueToRValue>
  `-ParenExpr 0x555e9724a200 <col:26, col:30> 'Closure *' lvalue
    `-ParenExpr 0x555e9724a1a0 <./lobject.h:145:36, col:38> 'Closure *' lvalue
      `-DeclRefExpr 0x555e9724a178 <ldebug.c:252:32> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
(GCObject *)[B8.7] (CStyleCastExpr, BitCast, GCObject *)
   9: DeclRefExpr 0x555e9724a0c8 <./lobject.h:145:5> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x555e9724a0f0 <./lobject.h:145:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e9724a0c8 <col:5> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
[B8.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x555e9724a108 <./lobject.h:145:5, col:10> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e9724a0f0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e9724a0c8 <col:5> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
[B8.10]->value
  12: MemberExpr 0x555e9724a140 <./lobject.h:145:5, col:16> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e9724a108 <col:5, col:10> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e9724a0f0 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x555e9724a0c8 <col:5> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
[B8.11].gc
  13: BinaryOperator 0x555e9724a280 <./lobject.h:145:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x555e9724a140 <./lobject.h:145:5, col:16> 'GCObject *' lvalue .gc 0x555e971cc250
| `-MemberExpr 0x555e9724a108 <col:5, col:10> 'Value':'Value' lvalue ->value 0x555e971cc550
|   `-ImplicitCastExpr 0x555e9724a0f0 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x555e9724a0c8 <col:5> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
`-ParenExpr 0x555e9724a260 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x555e9724a238 <col:23, col:30> 'GCObject *' <BitCast>
    `-ImplicitCastExpr 0x555e9724a220 <col:26, col:30> 'Closure *' <LValueToRValue>
      `-ParenExpr 0x555e9724a200 <col:26, col:30> 'Closure *' lvalue
        `-ParenExpr 0x555e9724a1a0 <./lobject.h:145:36, col:38> 'Closure *' lvalue
          `-DeclRefExpr 0x555e9724a178 <ldebug.c:252:32> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
[B8.12] = ([B8.8])
  14: IntegerLiteral 0x555e9724a4f0 <./lua.h:80:24> 'int' 6
6
  15: DeclRefExpr 0x555e9724a2a8 <./lobject.h:145:42> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x555e9724a4a0 <./lobject.h:145:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e9724a2a8 <col:42> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
[B8.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x555e9724a4b8 <./lobject.h:145:42, col:47> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e9724a4a0 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e9724a2a8 <col:42> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
[B8.16]->tt
  18: BinaryOperator 0x555e9724a510 <./lobject.h:145:42, ./lua.h:80:24> 'int' '='
|-MemberExpr 0x555e9724a4b8 <./lobject.h:145:42, col:47> 'int' lvalue ->tt 0x555e971cc5b0
| `-ImplicitCastExpr 0x555e9724a4a0 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x555e9724a2a8 <col:42> 'TValue *' lvalue Var 0x555e97249fa0 'i_o' 'TValue *'
`-IntegerLiteral 0x555e9724a4f0 <./lua.h:80:24> 'int' 6
[B8.17] = [B8.14]
  19: IntegerLiteral 0x555e9724a538 <./llimits.h:62:31> 'int' 0
0
  20: CStyleCastExpr 0x555e9724a568 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x555e9724a538 <col:31> 'int' 0
(void)[B8.19] (CStyleCastExpr, ToVoid, void)
   Preds (1): B10
   Succs (1): B7

 [B9]
   1: IntegerLiteral 0x555e97249f28 <./lua.h:74:19> 'int' 0
0
   2: DeclRefExpr 0x555e97249e40 <ldebug.c:251:32> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   3: ImplicitCastExpr 0x555e97249e68 <ldebug.c:251:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97249e40 <col:32> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B9.2] (ImplicitCastExpr, LValueToRValue, lua_State *)
   4: MemberExpr 0x555e97249e80 <ldebug.c:251:32, col:35> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e97249e68 <col:32> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97249e40 <col:32> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B9.3]->top
   5: ImplicitCastExpr 0x555e97249ed8 <./lobject.h:117:27, col:31> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97249eb8 <col:27, col:31> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97249e80 <ldebug.c:251:32, col:35> 'StkId':'TValue *' lvalue ->top 0x555e97213368
    `-ImplicitCastExpr 0x555e97249e68 <col:32> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e97249e40 <col:32> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
([B9.4]) (ImplicitCastExpr, LValueToRValue, StkId)
   6: MemberExpr 0x555e97249ef0 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e97249ed8 <col:27, col:31> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97249eb8 <col:27, col:31> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97249e80 <ldebug.c:251:32, col:35> 'StkId':'TValue *' lvalue ->top 0x555e97213368
      `-ImplicitCastExpr 0x555e97249e68 <col:32> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x555e97249e40 <col:32> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B9.5]->tt
   7: BinaryOperator 0x555e97249f48 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x555e97249ef0 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x555e971cc5b0
| `-ImplicitCastExpr 0x555e97249ed8 <col:27, col:31> 'StkId':'TValue *' <LValueToRValue>
|   `-ParenExpr 0x555e97249eb8 <col:27, col:31> 'StkId':'TValue *' lvalue
|     `-MemberExpr 0x555e97249e80 <ldebug.c:251:32, col:35> 'StkId':'TValue *' lvalue ->top 0x555e97213368
|       `-ImplicitCastExpr 0x555e97249e68 <col:32> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x555e97249e40 <col:32> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
`-IntegerLiteral 0x555e97249f28 <./lua.h:74:19> 'int' 0
[B9.6] = [B9.1]
   Preds (1): B10
   Succs (1): B7

 [B10]
   1: DeclRefExpr 0x555e97249d40 <ldebug.c:251:9> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
f
   2: ImplicitCastExpr 0x555e97249de8 <ldebug.c:251:9> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97249d40 <col:9> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
[B10.1] (ImplicitCastExpr, LValueToRValue, Closure *)
   3: IntegerLiteral 0x555e97249d68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x555e97249da0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e97249d68 <col:24> 'int' 0
(void *)[B10.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x555e97249e00 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Closure *' <BitCast>
`-ParenExpr 0x555e97249dc8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e97249da0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e97249d68 <col:24> 'int' 0
([B10.4]) (ImplicitCastExpr, BitCast, Closure *)
   6: BinaryOperator 0x555e97249e18 <ldebug.c:251:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x555e97249de8 <ldebug.c:251:9> 'Closure *' <LValueToRValue>
| `-DeclRefExpr 0x555e97249d40 <col:9> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
`-ImplicitCastExpr 0x555e97249e00 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Closure *' <BitCast>
  `-ParenExpr 0x555e97249dc8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x555e97249da0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x555e97249d68 <col:24> 'int' 0
[B10.2] == [B10.5]
   T: if [B10.6]
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x555e972499e0 <ldebug.c:249:12> 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)' Function 0x555e972469d8 'auxgetinfo' 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)'
auxgetinfo
   2: ImplicitCastExpr 0x555e97249b28 <ldebug.c:249:12> 'int (*)(lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e972499e0 <col:12> 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)' Function 0x555e972469d8 'auxgetinfo' 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, lua_Debug *, Closure *, CallInfo *))
   3: DeclRefExpr 0x555e97249a08 <ldebug.c:249:23> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e97249b90 <ldebug.c:249:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97249a08 <col:23> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x555e97249a30 <ldebug.c:249:26> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
what
   6: ImplicitCastExpr 0x555e97249ba8 <ldebug.c:249:26> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e97249a30 <col:26> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
[B11.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x555e97249a58 <ldebug.c:249:32> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
ar
   8: ImplicitCastExpr 0x555e97249bc0 <ldebug.c:249:32> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97249a58 <col:32> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B11.7] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   9: DeclRefExpr 0x555e97249a80 <ldebug.c:249:36> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
f
  10: ImplicitCastExpr 0x555e97249bd8 <ldebug.c:249:36> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x555e97249a80 <col:36> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
[B11.9] (ImplicitCastExpr, LValueToRValue, Closure *)
  11: DeclRefExpr 0x555e97249aa8 <ldebug.c:249:39> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
ci
  12: ImplicitCastExpr 0x555e97249bf0 <ldebug.c:249:39> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e97249aa8 <col:39> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B11.11] (ImplicitCastExpr, LValueToRValue, CallInfo *)
  13: CallExpr 0x555e97249b40 <ldebug.c:249:12, col:41> 'int'
|-ImplicitCastExpr 0x555e97249b28 <col:12> 'int (*)(lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e972499e0 <col:12> 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)' Function 0x555e972469d8 'auxgetinfo' 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)'
|-ImplicitCastExpr 0x555e97249b90 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e97249a08 <col:23> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e97249ba8 <col:26> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e97249a30 <col:26> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
|-ImplicitCastExpr 0x555e97249bc0 <col:32> 'lua_Debug *' <LValueToRValue>
| `-DeclRefExpr 0x555e97249a58 <col:32> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
|-ImplicitCastExpr 0x555e97249bd8 <col:36> 'Closure *' <LValueToRValue>
| `-DeclRefExpr 0x555e97249a80 <col:36> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
`-ImplicitCastExpr 0x555e97249bf0 <col:39> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e97249aa8 <col:39> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B11.2]([B11.4], [B11.6], [B11.8], [B11.10], [B11.12])
  14: DeclRefExpr 0x555e972499b8 <ldebug.c:249:3> 'int' lvalue Var 0x555e97248b68 'status' 'int'
status
  15: BinaryOperator 0x555e97249c08 <ldebug.c:249:3, col:41> 'int' '='
|-DeclRefExpr 0x555e972499b8 <col:3> 'int' lvalue Var 0x555e97248b68 'status' 'int'
`-CallExpr 0x555e97249b40 <col:12, col:41> 'int'
  |-ImplicitCastExpr 0x555e97249b28 <col:12> 'int (*)(lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x555e972499e0 <col:12> 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)' Function 0x555e972469d8 'auxgetinfo' 'int (lua_State *, const char *, lua_Debug *, Closure *, CallInfo *)'
  |-ImplicitCastExpr 0x555e97249b90 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x555e97249a08 <col:23> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
  |-ImplicitCastExpr 0x555e97249ba8 <col:26> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x555e97249a30 <col:26> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
  |-ImplicitCastExpr 0x555e97249bc0 <col:32> 'lua_Debug *' <LValueToRValue>
  | `-DeclRefExpr 0x555e97249a58 <col:32> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
  |-ImplicitCastExpr 0x555e97249bd8 <col:36> 'Closure *' <LValueToRValue>
  | `-DeclRefExpr 0x555e97249a80 <col:36> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
  `-ImplicitCastExpr 0x555e97249bf0 <col:39> 'CallInfo *' <LValueToRValue>
    `-DeclRefExpr 0x555e97249aa8 <col:39> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B11.14] = [B11.13]
  16: DeclRefExpr 0x555e97249c30 <ldebug.c:250:7> 'char *(const char *, int)' Function 0x555e970fe708 'strchr' 'char *(const char *, int)'
strchr
  17: ImplicitCastExpr 0x555e97249cd8 <ldebug.c:250:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97249c30 <col:7> 'char *(const char *, int)' Function 0x555e970fe708 'strchr' 'char *(const char *, int)'
[B11.16] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, int))
  18: DeclRefExpr 0x555e97249c58 <ldebug.c:250:14> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
what
  19: ImplicitCastExpr 0x555e97249d28 <ldebug.c:250:14> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e97249c58 <col:14> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
[B11.18] (ImplicitCastExpr, LValueToRValue, const char *)
  20: CharacterLiteral 0x555e97249c80 <ldebug.c:250:20> 'int' 102
'f'
  21: CallExpr 0x555e97249cf0 <ldebug.c:250:7, col:23> 'char *'
|-ImplicitCastExpr 0x555e97249cd8 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97249c30 <col:7> 'char *(const char *, int)' Function 0x555e970fe708 'strchr' 'char *(const char *, int)'
|-ImplicitCastExpr 0x555e97249d28 <col:14> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e97249c58 <col:14> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
`-CharacterLiteral 0x555e97249c80 <col:20> 'int' 102
[B11.17]([B11.19], [B11.20])
   T: if [B11.21]
   Preds (3): B12 B13 B14
   Succs (2): B10 B3

 [B12]
   1: DeclRefExpr 0x555e97249538 <ldebug.c:245:10> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e97249560 <ldebug.c:245:10> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97249538 <col:10> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B12.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e97249578 <ldebug.c:245:10, col:13> 'CallInfo *' lvalue ->base_ci 0x555e97213720
`-ImplicitCastExpr 0x555e97249560 <col:10> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97249538 <col:10> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B12.2]->base_ci
   4: ImplicitCastExpr 0x555e97249628 <ldebug.c:245:10, col:13> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e97249578 <col:10, col:13> 'CallInfo *' lvalue ->base_ci 0x555e97213720
  `-ImplicitCastExpr 0x555e97249560 <col:10> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e97249538 <col:10> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   5: DeclRefExpr 0x555e972495b0 <ldebug.c:245:23> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
ar
   6: ImplicitCastExpr 0x555e972495d8 <ldebug.c:245:23> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e972495b0 <col:23> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B12.5] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   7: MemberExpr 0x555e972495f0 <ldebug.c:245:23, col:27> 'int' lvalue ->i_ci 0x555e971c4948
`-ImplicitCastExpr 0x555e972495d8 <col:23> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e972495b0 <col:23> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B12.6]->i_ci
   8: ImplicitCastExpr 0x555e97249640 <ldebug.c:245:23, col:27> 'int' <LValueToRValue>
`-MemberExpr 0x555e972495f0 <col:23, col:27> 'int' lvalue ->i_ci 0x555e971c4948
  `-ImplicitCastExpr 0x555e972495d8 <col:23> 'lua_Debug *' <LValueToRValue>
    `-DeclRefExpr 0x555e972495b0 <col:23> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B12.7] (ImplicitCastExpr, LValueToRValue, int)
   9: BinaryOperator 0x555e97249658 <ldebug.c:245:10, col:27> 'CallInfo *' '+'
|-ImplicitCastExpr 0x555e97249628 <col:10, col:13> 'CallInfo *' <LValueToRValue>
| `-MemberExpr 0x555e97249578 <col:10, col:13> 'CallInfo *' lvalue ->base_ci 0x555e97213720
|   `-ImplicitCastExpr 0x555e97249560 <col:10> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97249538 <col:10> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e97249640 <col:23, col:27> 'int' <LValueToRValue>
  `-MemberExpr 0x555e972495f0 <col:23, col:27> 'int' lvalue ->i_ci 0x555e971c4948
    `-ImplicitCastExpr 0x555e972495d8 <col:23> 'lua_Debug *' <LValueToRValue>
      `-DeclRefExpr 0x555e972495b0 <col:23> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B12.4] + [B12.8]
  10: DeclRefExpr 0x555e97249510 <ldebug.c:245:5> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
ci
  11: BinaryOperator 0x555e97249680 <ldebug.c:245:5, col:27> 'CallInfo *' '='
|-DeclRefExpr 0x555e97249510 <col:5> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
`-BinaryOperator 0x555e97249658 <col:10, col:27> 'CallInfo *' '+'
  |-ImplicitCastExpr 0x555e97249628 <col:10, col:13> 'CallInfo *' <LValueToRValue>
  | `-MemberExpr 0x555e97249578 <col:10, col:13> 'CallInfo *' lvalue ->base_ci 0x555e97213720
  |   `-ImplicitCastExpr 0x555e97249560 <col:10> 'lua_State *' <LValueToRValue>
  |     `-DeclRefExpr 0x555e97249538 <col:10> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
  `-ImplicitCastExpr 0x555e97249640 <col:23, col:27> 'int' <LValueToRValue>
    `-MemberExpr 0x555e972495f0 <col:23, col:27> 'int' lvalue ->i_ci 0x555e971c4948
      `-ImplicitCastExpr 0x555e972495d8 <col:23> 'lua_Debug *' <LValueToRValue>
        `-DeclRefExpr 0x555e972495b0 <col:23> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B12.10] = [B12.9]
  12: IntegerLiteral 0x555e972496a8 <./llimits.h:62:31> 'int' 0
0
  13: CStyleCastExpr 0x555e972496d8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x555e972496a8 <col:31> 'int' 0
(void)[B12.12] (CStyleCastExpr, ToVoid, void)
  14: DeclRefExpr 0x555e97249748 <ldebug.c:247:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
ci
  15: ImplicitCastExpr 0x555e97249770 <ldebug.c:247:17> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B12.14] (ImplicitCastExpr, LValueToRValue, CallInfo *)
  16: MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B12.15]->func
  17: ImplicitCastExpr 0x555e972497e0 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e972497c0 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
      `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
([B12.16]) (ImplicitCastExpr, LValueToRValue, StkId)
  18: MemberExpr 0x555e972497f8 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e972497e0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e972497c0 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
        `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B12.17]->value
  19: MemberExpr 0x555e97249830 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e972497f8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e972497e0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e972497c0 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
          `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B12.18].gc
  20: ImplicitCastExpr 0x555e97249868 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e97249830 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e972497f8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e972497e0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e972497c0 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
            `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B12.19] (ImplicitCastExpr, LValueToRValue, GCObject *)
  21: MemberExpr 0x555e97249880 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e97249868 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e97249830 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e972497f8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e972497e0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e972497c0 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
              `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B12.20]->cl
  22: UnaryOperator 0x555e972498b8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e97249880 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e97249868 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e97249830 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e972497f8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e972497e0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e972497c0 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
                `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
&[B12.21]
  23: DeclRefExpr 0x555e97249720 <ldebug.c:247:5> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
f
  24: BinaryOperator 0x555e972498f8 <ldebug.c:247:5, ./llimits.h:63:27> 'Closure *' '='
|-DeclRefExpr 0x555e97249720 <ldebug.c:247:5> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
`-ParenExpr 0x555e972498d8 <./llimits.h:63:25, col:27> 'union Closure *'
  `-UnaryOperator 0x555e972498b8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    `-MemberExpr 0x555e97249880 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
      `-ImplicitCastExpr 0x555e97249868 <col:48, col:59> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x555e97249830 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
          `-MemberExpr 0x555e972497f8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
            `-ImplicitCastExpr 0x555e972497e0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
              `-ParenExpr 0x555e972497c0 <col:48, col:50> 'StkId':'TValue *' lvalue
                `-MemberExpr 0x555e97249788 <ldebug.c:247:17, col:21> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                  `-ImplicitCastExpr 0x555e97249770 <col:17> 'CallInfo *' <LValueToRValue>
                    `-DeclRefExpr 0x555e97249748 <col:17> 'CallInfo *' lvalue Var 0x555e97248d10 'ci' 'CallInfo *'
[B12.23] = ([B12.22])
   Preds (1): B13
   Succs (1): B11

 [B13]
   1: DeclRefExpr 0x555e97249438 <ldebug.c:244:12> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
ar
   2: ImplicitCastExpr 0x555e97249460 <ldebug.c:244:12> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e97249438 <col:12> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B13.1] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   3: MemberExpr 0x555e97249478 <ldebug.c:244:12, col:16> 'int' lvalue ->i_ci 0x555e971c4948
`-ImplicitCastExpr 0x555e97249460 <col:12> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e97249438 <col:12> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B13.2]->i_ci
   4: ImplicitCastExpr 0x555e972494d0 <ldebug.c:244:12, col:16> 'int' <LValueToRValue>
`-MemberExpr 0x555e97249478 <col:12, col:16> 'int' lvalue ->i_ci 0x555e971c4948
  `-ImplicitCastExpr 0x555e97249460 <col:12> 'lua_Debug *' <LValueToRValue>
    `-DeclRefExpr 0x555e97249438 <col:12> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
[B13.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x555e972494b0 <ldebug.c:244:24> 'int' 0
0
   6: BinaryOperator 0x555e972494e8 <ldebug.c:244:12, col:24> 'int' '!='
|-ImplicitCastExpr 0x555e972494d0 <col:12, col:16> 'int' <LValueToRValue>
| `-MemberExpr 0x555e97249478 <col:12, col:16> 'int' lvalue ->i_ci 0x555e971c4948
|   `-ImplicitCastExpr 0x555e97249460 <col:12> 'lua_Debug *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97249438 <col:12> 'lua_Debug *' lvalue ParmVar 0x555e972489f8 'ar' 'lua_Debug *'
`-IntegerLiteral 0x555e972494b0 <col:24> 'int' 0
[B13.4] != [B13.5]
   T: if [B13.6]
   Preds (1): B15
   Succs (2): B12 B11

 [B14]
   1: DeclRefExpr 0x555e97248fd8 <ldebug.c:238:18> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e97249000 <ldebug.c:238:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97248fd8 <col:18> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B14.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e97249018 <ldebug.c:238:18, col:21> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e97249000 <col:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97248fd8 <col:18> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B14.2]->top
   4: ImplicitCastExpr 0x555e97249070 <ldebug.c:238:18, col:21> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e97249018 <col:18, col:21> 'StkId':'TValue *' lvalue ->top 0x555e97213368
  `-ImplicitCastExpr 0x555e97249000 <col:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e97248fd8 <col:18> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B14.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: IntegerLiteral 0x555e97249050 <ldebug.c:238:27> 'int' 1
1
   6: BinaryOperator 0x555e97249088 <ldebug.c:238:18, col:27> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x555e97249070 <col:18, col:21> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x555e97249018 <col:18, col:21> 'StkId':'TValue *' lvalue ->top 0x555e97213368
|   `-ImplicitCastExpr 0x555e97249000 <col:18> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x555e97248fd8 <col:18> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
`-IntegerLiteral 0x555e97249050 <col:27> 'int' 1
[B14.4] - [B14.5]
   7: DeclStmt 0x555e972490b0 <ldebug.c:238:5, col:28>col:11
`-VarDecl 0x555e97248f78 <col:5, col:27> col:11 used func 'StkId':'TValue *' cinit
  `-BinaryOperator 0x555e97249088 <col:18, col:27> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x555e97249070 <col:18, col:21> 'StkId':'TValue *' <LValueToRValue>
    | `-MemberExpr 0x555e97249018 <col:18, col:21> 'StkId':'TValue *' lvalue ->top 0x555e97213368
    |   `-ImplicitCastExpr 0x555e97249000 <col:18> 'lua_State *' <LValueToRValue>
    |     `-DeclRefExpr 0x555e97248fd8 <col:18> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
    `-IntegerLiteral 0x555e97249050 <col:27> 'int' 1
StkId func = L->top - 1;
   8: DeclRefExpr 0x555e972490c8 <ldebug.c:239:19> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x555e97249100 <ldebug.c:239:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e972490c8 <col:19> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B14.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: CStyleCastExpr 0x555e97249118 <./luaconf.h:381:30, ldebug.c:239:19> 'void' <ToVoid>
`-ImplicitCastExpr 0x555e97249100 <col:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e972490c8 <col:19> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
(void)[B14.9] (CStyleCastExpr, ToVoid, void)
  11: DeclRefExpr 0x555e97249168 <ldebug.c:240:5> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
what
  12: UnaryOperator 0x555e97249190 <ldebug.c:240:5, col:9> 'const char *' postfix '++'
`-DeclRefExpr 0x555e97249168 <col:5> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
[B14.11]++
  13: DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
func
  14: ImplicitCastExpr 0x555e97249220 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97249200 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
([B14.13]) (ImplicitCastExpr, LValueToRValue, StkId)
  15: MemberExpr 0x555e97249238 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97249220 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97249200 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
[B14.14]->value
  16: MemberExpr 0x555e97249270 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e97249238 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97249220 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e97249200 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
[B14.15].gc
  17: ImplicitCastExpr 0x555e972492a8 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e97249270 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e97249238 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e97249220 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97249200 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
[B14.16] (ImplicitCastExpr, LValueToRValue, GCObject *)
  18: MemberExpr 0x555e972492c0 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e972492a8 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e97249270 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e97249238 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e97249220 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e97249200 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
[B14.17]->cl
  19: UnaryOperator 0x555e972492f8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e972492c0 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e972492a8 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e97249270 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e97249238 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e97249220 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e97249200 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
&[B14.18]
  20: DeclRefExpr 0x555e972491b0 <ldebug.c:241:5> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
f
  21: BinaryOperator 0x555e97249338 <ldebug.c:241:5, ./llimits.h:63:27> 'Closure *' '='
|-DeclRefExpr 0x555e972491b0 <ldebug.c:241:5> 'Closure *' lvalue Var 0x555e97248bf0 'f' 'Closure *'
`-ParenExpr 0x555e97249318 <./llimits.h:63:25, col:27> 'union Closure *'
  `-UnaryOperator 0x555e972492f8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    `-MemberExpr 0x555e972492c0 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
      `-ImplicitCastExpr 0x555e972492a8 <col:48, col:59> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x555e97249270 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
          `-MemberExpr 0x555e97249238 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
            `-ImplicitCastExpr 0x555e97249220 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
              `-ParenExpr 0x555e97249200 <col:48, col:50> 'StkId':'TValue *' lvalue
                `-DeclRefExpr 0x555e972491d8 <ldebug.c:241:17> 'StkId':'TValue *' lvalue Var 0x555e97248f78 'func' 'StkId':'TValue *'
[B14.20] = ([B14.19])
  22: DeclRefExpr 0x555e97249360 <ldebug.c:242:5> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
L
  23: ImplicitCastExpr 0x555e97249388 <ldebug.c:242:5> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97249360 <col:5> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B14.22] (ImplicitCastExpr, LValueToRValue, lua_State *)
  24: MemberExpr 0x555e972493a0 <ldebug.c:242:5, col:8> 'StkId':'TValue *' lvalue ->top 0x555e97213368
`-ImplicitCastExpr 0x555e97249388 <col:5> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e97249360 <col:5> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B14.23]->top
  25: UnaryOperator 0x555e972493d8 <ldebug.c:242:5, col:11> 'StkId':'TValue *' postfix '--'
`-MemberExpr 0x555e972493a0 <col:5, col:8> 'StkId':'TValue *' lvalue ->top 0x555e97213368
  `-ImplicitCastExpr 0x555e97249388 <col:5> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e97249360 <col:5> 'lua_State *' lvalue ParmVar 0x555e97248910 'L' 'lua_State *'
[B14.24]--
   Preds (1): B15
   Succs (1): B11

 [B15]
   1: DeclStmt 0x555e97248bc8 <ldebug.c:233:3, col:13>col:7
`-VarDecl 0x555e97248b68 <col:3, col:7> col:7 used status 'int'
int status;
   2: IntegerLiteral 0x555e97248c50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   3: CStyleCastExpr 0x555e97248c88 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e97248c50 <col:24> 'int' 0
(void *)[B15.2] (CStyleCastExpr, NullToPointer, void *)
   4: ImplicitCastExpr 0x555e97248cd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Closure *' <NullToPointer>
`-ParenExpr 0x555e97248cb0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e97248c88 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e97248c50 <col:24> 'int' 0
([B15.3]) (ImplicitCastExpr, NullToPointer, Closure *)
   5: DeclStmt 0x555e97248ce8 <ldebug.c:234:3, col:20>col:12
`-VarDecl 0x555e97248bf0 <col:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> ldebug.c:234:12 used f 'Closure *' cinit
  `-ImplicitCastExpr 0x555e97248cd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Closure *' <NullToPointer>
    `-ParenExpr 0x555e97248cb0 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x555e97248c88 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x555e97248c50 <col:24> 'int' 0
Closure *f = ((void *)0);
   6: IntegerLiteral 0x555e97248d70 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x555e97248da8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e97248d70 <col:24> 'int' 0
(void *)[B15.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x555e97248df0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'CallInfo *' <NullToPointer>
`-ParenExpr 0x555e97248dd0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e97248da8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e97248d70 <col:24> 'int' 0
([B15.7]) (ImplicitCastExpr, NullToPointer, CallInfo *)
   9: DeclStmt 0x555e97248e08 <ldebug.c:235:3, col:22>col:13
`-VarDecl 0x555e97248d10 <col:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> ldebug.c:235:13 used ci 'CallInfo *' cinit
  `-ImplicitCastExpr 0x555e97248df0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'CallInfo *' <NullToPointer>
    `-ParenExpr 0x555e97248dd0 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x555e97248da8 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x555e97248d70 <col:24> 'int' 0
CallInfo *ci = ((void *)0);
  10: IntegerLiteral 0x555e97248e20 <./llimits.h:110:33> 'int' 0
0
  11: CStyleCastExpr 0x555e97248e50 <./llimits.h:110:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x555e97248e20 <col:33> 'int' 0
(void)[B15.10] (CStyleCastExpr, ToVoid, void)
  12: DeclRefExpr 0x555e97248e98 <ldebug.c:237:8> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
what
  13: ImplicitCastExpr 0x555e97248ec0 <ldebug.c:237:8> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e97248e98 <col:8> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
[B15.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: UnaryOperator 0x555e97248ed8 <ldebug.c:237:7, col:8> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x555e97248ec0 <col:8> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x555e97248e98 <col:8> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
*[B15.13]
  15: ImplicitCastExpr 0x555e97248f10 <ldebug.c:237:7, col:8> 'char' <LValueToRValue>
`-UnaryOperator 0x555e97248ed8 <col:7, col:8> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x555e97248ec0 <col:8> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x555e97248e98 <col:8> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
[B15.14] (ImplicitCastExpr, LValueToRValue, char)
  16: ImplicitCastExpr 0x555e97248f28 <ldebug.c:237:7, col:8> 'int' <IntegralCast>
`-ImplicitCastExpr 0x555e97248f10 <col:7, col:8> 'char' <LValueToRValue>
  `-UnaryOperator 0x555e97248ed8 <col:7, col:8> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x555e97248ec0 <col:8> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x555e97248e98 <col:8> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
[B15.15] (ImplicitCastExpr, IntegralCast, int)
  17: CharacterLiteral 0x555e97248ef8 <ldebug.c:237:16> 'int' 62
'>'
  18: BinaryOperator 0x555e97248f40 <ldebug.c:237:7, col:16> 'int' '=='
|-ImplicitCastExpr 0x555e97248f28 <col:7, col:8> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x555e97248f10 <col:7, col:8> 'char' <LValueToRValue>
|   `-UnaryOperator 0x555e97248ed8 <col:7, col:8> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x555e97248ec0 <col:8> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x555e97248e98 <col:8> 'const char *' lvalue ParmVar 0x555e97248988 'what' 'const char *'
`-CharacterLiteral 0x555e97248ef8 <col:16> 'int' 62
[B15.16] == [B15.17]
   T: if [B15.18]
   Preds (1): B16
   Succs (2): B14 B13

 [B0 (EXIT)]
   Preds (1): B1
