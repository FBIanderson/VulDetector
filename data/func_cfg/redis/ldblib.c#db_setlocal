static int db_setlocal(lua_State *L)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x5615b248c6d0 <ldblib.c:171:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b2476c70 'luaL_checkany' 'void (lua_State *, int)':'void (lua_State *, int)'
luaL_checkany
   2: ImplicitCastExpr 0x5615b248c7a8 <ldblib.c:171:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248c6d0 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b2476c70 'luaL_checkany' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5615b248c6f8 <ldblib.c:171:17> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5615b248c7f8 <ldblib.c:171:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248c6f8 <col:17> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5615b248c720 <ldblib.c:171:20> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
arg
   6: ImplicitCastExpr 0x5615b248c768 <ldblib.c:171:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248c720 <col:20> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5615b248c748 <ldblib.c:171:24> 'int' 3
3
   8: BinaryOperator 0x5615b248c780 <ldblib.c:171:20, col:24> 'int' '+'
|-ImplicitCastExpr 0x5615b248c768 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c720 <col:20> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
`-IntegerLiteral 0x5615b248c748 <col:24> 'int' 3
[B1.6] + [B1.7]
   9: CallExpr 0x5615b248c7c0 <ldblib.c:171:3, col:25> 'void'
|-ImplicitCastExpr 0x5615b248c7a8 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248c6d0 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b2476c70 'luaL_checkany' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248c7f8 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c6f8 <col:17> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
`-BinaryOperator 0x5615b248c780 <col:20, col:24> 'int' '+'
  |-ImplicitCastExpr 0x5615b248c768 <col:20> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248c720 <col:20> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
  `-IntegerLiteral 0x5615b248c748 <col:24> 'int' 3
[B1.2]([B1.4], [B1.8])
  10: DeclRefExpr 0x5615b248c810 <ldblib.c:172:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f340 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
  11: ImplicitCastExpr 0x5615b248c8e8 <ldblib.c:172:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248c810 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f340 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  12: DeclRefExpr 0x5615b248c838 <ldblib.c:172:14> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x5615b248c938 <ldblib.c:172:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248c838 <col:14> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B1.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: DeclRefExpr 0x5615b248c860 <ldblib.c:172:17> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
arg
  15: ImplicitCastExpr 0x5615b248c8a8 <ldblib.c:172:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248c860 <col:17> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
[B1.14] (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x5615b248c888 <ldblib.c:172:21> 'int' 3
3
  17: BinaryOperator 0x5615b248c8c0 <ldblib.c:172:17, col:21> 'int' '+'
|-ImplicitCastExpr 0x5615b248c8a8 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c860 <col:17> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
`-IntegerLiteral 0x5615b248c888 <col:21> 'int' 3
[B1.15] + [B1.16]
  18: CallExpr 0x5615b248c900 <ldblib.c:172:3, col:22> 'void'
|-ImplicitCastExpr 0x5615b248c8e8 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248c810 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f340 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248c938 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c838 <col:14> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
`-BinaryOperator 0x5615b248c8c0 <col:17, col:21> 'int' '+'
  |-ImplicitCastExpr 0x5615b248c8a8 <col:17> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248c860 <col:17> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
  `-IntegerLiteral 0x5615b248c888 <col:21> 'int' 3
[B1.11]([B1.13], [B1.17])
  19: DeclRefExpr 0x5615b248c950 <ldblib.c:173:3> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x5615b2460088 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
lua_xmove
  20: ImplicitCastExpr 0x5615b248c9e8 <ldblib.c:173:3> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248c950 <col:3> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x5615b2460088 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
[B1.19] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_State *, int))
  21: DeclRefExpr 0x5615b248c978 <ldblib.c:173:13> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
  22: ImplicitCastExpr 0x5615b248ca40 <ldblib.c:173:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248c978 <col:13> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B1.21] (ImplicitCastExpr, LValueToRValue, lua_State *)
  23: DeclRefExpr 0x5615b248c9a0 <ldblib.c:173:16> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
L1
  24: ImplicitCastExpr 0x5615b248ca58 <ldblib.c:173:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248c9a0 <col:16> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
[B1.23] (ImplicitCastExpr, LValueToRValue, lua_State *)
  25: IntegerLiteral 0x5615b248c9c8 <ldblib.c:173:20> 'int' 1
1
  26: CallExpr 0x5615b248ca00 <ldblib.c:173:3, col:21> 'void'
|-ImplicitCastExpr 0x5615b248c9e8 <col:3> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248c950 <col:3> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x5615b2460088 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
|-ImplicitCastExpr 0x5615b248ca40 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c978 <col:13> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
|-ImplicitCastExpr 0x5615b248ca58 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c9a0 <col:16> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
`-IntegerLiteral 0x5615b248c9c8 <col:20> 'int' 1
[B1.20]([B1.22], [B1.24], [B1.25])
  27: DeclRefExpr 0x5615b248ca70 <ldblib.c:174:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
  28: ImplicitCastExpr 0x5615b248cda0 <ldblib.c:174:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248ca70 <col:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B1.27] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
  29: DeclRefExpr 0x5615b248ca98 <ldblib.c:174:18> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x5615b248cdf0 <ldblib.c:174:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248ca98 <col:18> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B1.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: DeclRefExpr 0x5615b248cac0 <ldblib.c:174:21> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24707f8 'lua_setlocal' 'const char *(lua_State *, const lua_Debug *, int)'
lua_setlocal
  32: ImplicitCastExpr 0x5615b248cd18 <ldblib.c:174:21> 'const char *(*)(lua_State *, const lua_Debug *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248cac0 <col:21> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24707f8 'lua_setlocal' 'const char *(lua_State *, const lua_Debug *, int)'
[B1.31] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const lua_Debug *, int))
  33: DeclRefExpr 0x5615b248cae8 <ldblib.c:174:34> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
L1
  34: ImplicitCastExpr 0x5615b248cd70 <ldblib.c:174:34> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248cae8 <col:34> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
[B1.33] (ImplicitCastExpr, LValueToRValue, lua_State *)
  35: DeclRefExpr 0x5615b248cb10 <ldblib.c:174:39> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
ar
  36: UnaryOperator 0x5615b248cb38 <ldblib.c:174:38, col:39> 'lua_Debug *' prefix '&'
`-DeclRefExpr 0x5615b248cb10 <col:39> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
&[B1.35]
  37: ImplicitCastExpr 0x5615b248cd88 <ldblib.c:174:38, col:39> 'const lua_Debug *' <BitCast>
`-UnaryOperator 0x5615b248cb38 <col:38, col:39> 'lua_Debug *' prefix '&'
  `-DeclRefExpr 0x5615b248cb10 <col:39> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
[B1.36] (ImplicitCastExpr, BitCast, const lua_Debug *)
  38: DeclRefExpr 0x5615b248cb58 <./lauxlib.h:104:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
  39: ImplicitCastExpr 0x5615b248cc50 <./lauxlib.h:104:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248cb58 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B1.38] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
  40: DeclRefExpr 0x5615b248cb80 <ldblib.c:174:57> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
  41: ImplicitCastExpr 0x5615b248cca0 <ldblib.c:174:57> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248cb80 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B1.40] (ImplicitCastExpr, LValueToRValue, lua_State *)
  42: DeclRefExpr 0x5615b248cba8 <ldblib.c:174:60> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
arg
  43: ImplicitCastExpr 0x5615b248cbf0 <ldblib.c:174:60> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248cba8 <col:60> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
[B1.42] (ImplicitCastExpr, LValueToRValue, int)
  44: IntegerLiteral 0x5615b248cbd0 <ldblib.c:174:64> 'int' 2
2
  45: BinaryOperator 0x5615b248cc08 <ldblib.c:174:60, col:64> 'int' '+'
|-ImplicitCastExpr 0x5615b248cbf0 <col:60> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248cba8 <col:60> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
`-IntegerLiteral 0x5615b248cbd0 <col:64> 'int' 2
[B1.43] + [B1.44]
  46: CallExpr 0x5615b248cc68 <./lauxlib.h:104:34, col:58> 'lua_Integer':'long'
|-ImplicitCastExpr 0x5615b248cc50 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248cb58 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248cca0 <ldblib.c:174:57> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248cb80 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
`-ParenExpr 0x5615b248cc30 <./lauxlib.h:104:55, col:57> 'int'
  `-BinaryOperator 0x5615b248cc08 <ldblib.c:174:60, col:64> 'int' '+'
    |-ImplicitCastExpr 0x5615b248cbf0 <col:60> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248cba8 <col:60> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
    `-IntegerLiteral 0x5615b248cbd0 <col:64> 'int' 2
[B1.39]([B1.41], ([B1.45]))
  47: CStyleCastExpr 0x5615b248ccd0 <./lauxlib.h:104:29, col:58> 'int' <IntegralCast>
`-CallExpr 0x5615b248cc68 <col:34, col:58> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x5615b248cc50 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248cb58 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x5615b248cca0 <ldblib.c:174:57> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248cb80 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
  `-ParenExpr 0x5615b248cc30 <./lauxlib.h:104:55, col:57> 'int'
    `-BinaryOperator 0x5615b248cc08 <ldblib.c:174:60, col:64> 'int' '+'
      |-ImplicitCastExpr 0x5615b248cbf0 <col:60> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x5615b248cba8 <col:60> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
      `-IntegerLiteral 0x5615b248cbd0 <col:64> 'int' 2
(int)[B1.46] (CStyleCastExpr, IntegralCast, int)
  48: CallExpr 0x5615b248cd30 <ldblib.c:174:21, col:66> 'const char *'
|-ImplicitCastExpr 0x5615b248cd18 <col:21> 'const char *(*)(lua_State *, const lua_Debug *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248cac0 <col:21> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24707f8 'lua_setlocal' 'const char *(lua_State *, const lua_Debug *, int)'
|-ImplicitCastExpr 0x5615b248cd70 <col:34> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248cae8 <col:34> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
|-ImplicitCastExpr 0x5615b248cd88 <col:38, col:39> 'const lua_Debug *' <BitCast>
| `-UnaryOperator 0x5615b248cb38 <col:38, col:39> 'lua_Debug *' prefix '&'
|   `-DeclRefExpr 0x5615b248cb10 <col:39> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
`-ParenExpr 0x5615b248ccf8 <./lauxlib.h:104:28, col:59> 'int'
  `-CStyleCastExpr 0x5615b248ccd0 <col:29, col:58> 'int' <IntegralCast>
    `-CallExpr 0x5615b248cc68 <col:34, col:58> 'lua_Integer':'long'
      |-ImplicitCastExpr 0x5615b248cc50 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5615b248cb58 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
      |-ImplicitCastExpr 0x5615b248cca0 <ldblib.c:174:57> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x5615b248cb80 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
      `-ParenExpr 0x5615b248cc30 <./lauxlib.h:104:55, col:57> 'int'
        `-BinaryOperator 0x5615b248cc08 <ldblib.c:174:60, col:64> 'int' '+'
          |-ImplicitCastExpr 0x5615b248cbf0 <col:60> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x5615b248cba8 <col:60> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
          `-IntegerLiteral 0x5615b248cbd0 <col:64> 'int' 2
[B1.32]([B1.34], [B1.37], ([B1.47]))
  49: CallExpr 0x5615b248cdb8 <ldblib.c:174:3, col:67> 'void'
|-ImplicitCastExpr 0x5615b248cda0 <col:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248ca70 <col:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5615b248cdf0 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248ca98 <col:18> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
`-CallExpr 0x5615b248cd30 <col:21, col:66> 'const char *'
  |-ImplicitCastExpr 0x5615b248cd18 <col:21> 'const char *(*)(lua_State *, const lua_Debug *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248cac0 <col:21> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24707f8 'lua_setlocal' 'const char *(lua_State *, const lua_Debug *, int)'
  |-ImplicitCastExpr 0x5615b248cd70 <col:34> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248cae8 <col:34> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
  |-ImplicitCastExpr 0x5615b248cd88 <col:38, col:39> 'const lua_Debug *' <BitCast>
  | `-UnaryOperator 0x5615b248cb38 <col:38, col:39> 'lua_Debug *' prefix '&'
  |   `-DeclRefExpr 0x5615b248cb10 <col:39> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
  `-ParenExpr 0x5615b248ccf8 <./lauxlib.h:104:28, col:59> 'int'
    `-CStyleCastExpr 0x5615b248ccd0 <col:29, col:58> 'int' <IntegralCast>
      `-CallExpr 0x5615b248cc68 <col:34, col:58> 'lua_Integer':'long'
        |-ImplicitCastExpr 0x5615b248cc50 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5615b248cb58 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
        |-ImplicitCastExpr 0x5615b248cca0 <ldblib.c:174:57> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5615b248cb80 <col:57> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
        `-ParenExpr 0x5615b248cc30 <./lauxlib.h:104:55, col:57> 'int'
          `-BinaryOperator 0x5615b248cc08 <ldblib.c:174:60, col:64> 'int' '+'
            |-ImplicitCastExpr 0x5615b248cbf0 <col:60> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x5615b248cba8 <col:60> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
            `-IntegerLiteral 0x5615b248cbd0 <col:64> 'int' 2
[B1.28]([B1.30], [B1.48])
  50: IntegerLiteral 0x5615b248ce08 <ldblib.c:175:10> 'int' 1
1
  51: ReturnStmt 0x5615b248ce28 <ldblib.c:175:3, col:10>
`-IntegerLiteral 0x5615b248ce08 <col:10> 'int' 1
return [B1.50];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5615b248c4c8 <ldblib.c:170:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x5615b248c5e0 <ldblib.c:170:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248c4c8 <col:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x5615b248c4f0 <ldblib.c:170:26> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5615b248c638 <ldblib.c:170:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248c4f0 <col:26> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5615b248c518 <ldblib.c:170:29> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
arg
   6: ImplicitCastExpr 0x5615b248c560 <ldblib.c:170:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248c518 <col:29> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
[B2.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5615b248c540 <ldblib.c:170:33> 'int' 1
1
   8: BinaryOperator 0x5615b248c578 <ldblib.c:170:29, col:33> 'int' '+'
|-ImplicitCastExpr 0x5615b248c560 <col:29> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c518 <col:29> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
`-IntegerLiteral 0x5615b248c540 <col:33> 'int' 1
[B2.6] + [B2.7]
   9: StringLiteral 0x5615b248c5a0 <ldblib.c:170:36> 'char [19]' lvalue "level out of range"
"level out of range"
  10: ImplicitCastExpr 0x5615b248c650 <ldblib.c:170:36> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5615b248c5a0 <col:36> 'char [19]' lvalue "level out of range"
[B2.9] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  11: ImplicitCastExpr 0x5615b248c668 <ldblib.c:170:36> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5615b248c650 <col:36> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5615b248c5a0 <col:36> 'char [19]' lvalue "level out of range"
[B2.10] (ImplicitCastExpr, BitCast, const char *)
  12: CallExpr 0x5615b248c5f8 <ldblib.c:170:12, col:56> 'int'
|-ImplicitCastExpr 0x5615b248c5e0 <col:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248c4c8 <col:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x5615b248c638 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c4f0 <col:26> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
|-BinaryOperator 0x5615b248c578 <col:29, col:33> 'int' '+'
| |-ImplicitCastExpr 0x5615b248c560 <col:29> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x5615b248c518 <col:29> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
| `-IntegerLiteral 0x5615b248c540 <col:33> 'int' 1
`-ImplicitCastExpr 0x5615b248c668 <col:36> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5615b248c650 <col:36> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5615b248c5a0 <col:36> 'char [19]' lvalue "level out of range"
[B2.2]([B2.4], [B2.8], [B2.11])
  13: ReturnStmt 0x5615b248c680 <ldblib.c:170:5, col:56>
`-CallExpr 0x5615b248c5f8 <col:12, col:56> 'int'
  |-ImplicitCastExpr 0x5615b248c5e0 <col:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248c4c8 <col:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x5615b248c638 <col:26> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248c4f0 <col:26> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
  |-BinaryOperator 0x5615b248c578 <col:29, col:33> 'int' '+'
  | |-ImplicitCastExpr 0x5615b248c560 <col:29> 'int' <LValueToRValue>
  | | `-DeclRefExpr 0x5615b248c518 <col:29> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
  | `-IntegerLiteral 0x5615b248c540 <col:33> 'int' 1
  `-ImplicitCastExpr 0x5615b248c668 <col:36> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x5615b248c650 <col:36> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x5615b248c5a0 <col:36> 'char [19]' lvalue "level out of range"
return [B2.12];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclStmt 0x5615b248bed8 <ldblib.c:166:3, col:10>col:7
`-VarDecl 0x5615b248be78 <col:3, col:7> col:7 used arg 'int'
int arg;
   2: DeclRefExpr 0x5615b248bf60 <ldblib.c:167:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
getthread
   3: ImplicitCastExpr 0x5615b248bff8 <ldblib.c:167:19> 'lua_State *(*)(lua_State *, int *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248bf60 <col:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
[B3.2] (ImplicitCastExpr, FunctionToPointerDecay, lua_State *(*)(lua_State *, int *))
   4: DeclRefExpr 0x5615b248bf88 <ldblib.c:167:29> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x5615b248c128 <ldblib.c:167:29> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248bf88 <col:29> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B3.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: DeclRefExpr 0x5615b248bfb0 <ldblib.c:167:33> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
arg
   7: UnaryOperator 0x5615b248bfd8 <ldblib.c:167:32, col:33> 'int *' prefix '&'
`-DeclRefExpr 0x5615b248bfb0 <col:33> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
&[B3.6]
   8: CallExpr 0x5615b248c0f0 <ldblib.c:167:19, col:36> 'lua_State *'
|-ImplicitCastExpr 0x5615b248bff8 <col:19> 'lua_State *(*)(lua_State *, int *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248bf60 <col:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
|-ImplicitCastExpr 0x5615b248c128 <col:29> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248bf88 <col:29> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
`-UnaryOperator 0x5615b248bfd8 <col:32, col:33> 'int *' prefix '&'
  `-DeclRefExpr 0x5615b248bfb0 <col:33> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
[B3.3]([B3.5], [B3.7])
   9: DeclStmt 0x5615b248c140 <ldblib.c:167:3, col:37>col:14
`-VarDecl 0x5615b248bf00 <col:3, col:36> col:14 used L1 'lua_State *' cinit
  `-CallExpr 0x5615b248c0f0 <col:19, col:36> 'lua_State *'
    |-ImplicitCastExpr 0x5615b248bff8 <col:19> 'lua_State *(*)(lua_State *, int *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5615b248bf60 <col:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
    |-ImplicitCastExpr 0x5615b248c128 <col:29> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248bf88 <col:29> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
    `-UnaryOperator 0x5615b248bfd8 <col:32, col:33> 'int *' prefix '&'
      `-DeclRefExpr 0x5615b248bfb0 <col:33> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
lua_State *L1 = getthread(L, &arg);
  10: DeclStmt 0x5615b248c1c8 <ldblib.c:168:3, col:15>col:13
`-VarDecl 0x5615b248c168 <col:3, col:13> col:13 used ar 'lua_Debug':'struct lua_Debug'
lua_Debug ar;
  11: DeclRefExpr 0x5615b248c1e0 <ldblib.c:169:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
lua_getstack
  12: ImplicitCastExpr 0x5615b248c438 <ldblib.c:169:8> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248c1e0 <col:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
[B3.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, lua_Debug *))
  13: DeclRefExpr 0x5615b248c208 <ldblib.c:169:21> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
L1
  14: ImplicitCastExpr 0x5615b248c490 <ldblib.c:169:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248c208 <col:21> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
[B3.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: DeclRefExpr 0x5615b248c230 <./lauxlib.h:104:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
  16: ImplicitCastExpr 0x5615b248c328 <./lauxlib.h:104:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248c230 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B3.15] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
  17: DeclRefExpr 0x5615b248c258 <ldblib.c:169:39> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
L
  18: ImplicitCastExpr 0x5615b248c378 <ldblib.c:169:39> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248c258 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
[B3.17] (ImplicitCastExpr, LValueToRValue, lua_State *)
  19: DeclRefExpr 0x5615b248c280 <ldblib.c:169:42> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
arg
  20: ImplicitCastExpr 0x5615b248c2c8 <ldblib.c:169:42> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248c280 <col:42> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
[B3.19] (ImplicitCastExpr, LValueToRValue, int)
  21: IntegerLiteral 0x5615b248c2a8 <ldblib.c:169:46> 'int' 1
1
  22: BinaryOperator 0x5615b248c2e0 <ldblib.c:169:42, col:46> 'int' '+'
|-ImplicitCastExpr 0x5615b248c2c8 <col:42> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c280 <col:42> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
`-IntegerLiteral 0x5615b248c2a8 <col:46> 'int' 1
[B3.20] + [B3.21]
  23: CallExpr 0x5615b248c340 <./lauxlib.h:104:34, col:58> 'lua_Integer':'long'
|-ImplicitCastExpr 0x5615b248c328 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248c230 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248c378 <ldblib.c:169:39> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c258 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
`-ParenExpr 0x5615b248c308 <./lauxlib.h:104:55, col:57> 'int'
  `-BinaryOperator 0x5615b248c2e0 <ldblib.c:169:42, col:46> 'int' '+'
    |-ImplicitCastExpr 0x5615b248c2c8 <col:42> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248c280 <col:42> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
    `-IntegerLiteral 0x5615b248c2a8 <col:46> 'int' 1
[B3.16]([B3.18], ([B3.22]))
  24: CStyleCastExpr 0x5615b248c3a8 <./lauxlib.h:104:29, col:58> 'int' <IntegralCast>
`-CallExpr 0x5615b248c340 <col:34, col:58> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x5615b248c328 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248c230 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x5615b248c378 <ldblib.c:169:39> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248c258 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
  `-ParenExpr 0x5615b248c308 <./lauxlib.h:104:55, col:57> 'int'
    `-BinaryOperator 0x5615b248c2e0 <ldblib.c:169:42, col:46> 'int' '+'
      |-ImplicitCastExpr 0x5615b248c2c8 <col:42> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x5615b248c280 <col:42> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
      `-IntegerLiteral 0x5615b248c2a8 <col:46> 'int' 1
(int)[B3.23] (CStyleCastExpr, IntegralCast, int)
  25: DeclRefExpr 0x5615b248c3f0 <ldblib.c:169:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
ar
  26: UnaryOperator 0x5615b248c418 <ldblib.c:169:50, col:51> 'lua_Debug *' prefix '&'
`-DeclRefExpr 0x5615b248c3f0 <col:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
&[B3.25]
  27: CallExpr 0x5615b248c450 <ldblib.c:169:8, col:53> 'int'
|-ImplicitCastExpr 0x5615b248c438 <col:8> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248c1e0 <col:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
|-ImplicitCastExpr 0x5615b248c490 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248c208 <col:21> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
|-ParenExpr 0x5615b248c3d0 <./lauxlib.h:104:28, col:59> 'int'
| `-CStyleCastExpr 0x5615b248c3a8 <col:29, col:58> 'int' <IntegralCast>
|   `-CallExpr 0x5615b248c340 <col:34, col:58> 'lua_Integer':'long'
|     |-ImplicitCastExpr 0x5615b248c328 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5615b248c230 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|     |-ImplicitCastExpr 0x5615b248c378 <ldblib.c:169:39> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x5615b248c258 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
|     `-ParenExpr 0x5615b248c308 <./lauxlib.h:104:55, col:57> 'int'
|       `-BinaryOperator 0x5615b248c2e0 <ldblib.c:169:42, col:46> 'int' '+'
|         |-ImplicitCastExpr 0x5615b248c2c8 <col:42> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x5615b248c280 <col:42> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
|         `-IntegerLiteral 0x5615b248c2a8 <col:46> 'int' 1
`-UnaryOperator 0x5615b248c418 <col:50, col:51> 'lua_Debug *' prefix '&'
  `-DeclRefExpr 0x5615b248c3f0 <col:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
[B3.12]([B3.14], ([B3.24]), [B3.26])
  28: UnaryOperator 0x5615b248c4a8 <ldblib.c:169:7, col:53> 'int' prefix '!'
`-CallExpr 0x5615b248c450 <col:8, col:53> 'int'
  |-ImplicitCastExpr 0x5615b248c438 <col:8> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248c1e0 <col:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
  |-ImplicitCastExpr 0x5615b248c490 <col:21> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248c208 <col:21> 'lua_State *' lvalue Var 0x5615b248bf00 'L1' 'lua_State *'
  |-ParenExpr 0x5615b248c3d0 <./lauxlib.h:104:28, col:59> 'int'
  | `-CStyleCastExpr 0x5615b248c3a8 <col:29, col:58> 'int' <IntegralCast>
  |   `-CallExpr 0x5615b248c340 <col:34, col:58> 'lua_Integer':'long'
  |     |-ImplicitCastExpr 0x5615b248c328 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  |     | `-DeclRefExpr 0x5615b248c230 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |     |-ImplicitCastExpr 0x5615b248c378 <ldblib.c:169:39> 'lua_State *' <LValueToRValue>
  |     | `-DeclRefExpr 0x5615b248c258 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248bd28 'L' 'lua_State *'
  |     `-ParenExpr 0x5615b248c308 <./lauxlib.h:104:55, col:57> 'int'
  |       `-BinaryOperator 0x5615b248c2e0 <ldblib.c:169:42, col:46> 'int' '+'
  |         |-ImplicitCastExpr 0x5615b248c2c8 <col:42> 'int' <LValueToRValue>
  |         | `-DeclRefExpr 0x5615b248c280 <col:42> 'int' lvalue Var 0x5615b248be78 'arg' 'int'
  |         `-IntegerLiteral 0x5615b248c2a8 <col:46> 'int' 1
  `-UnaryOperator 0x5615b248c418 <col:50, col:51> 'lua_Debug *' prefix '&'
    `-DeclRefExpr 0x5615b248c3f0 <col:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248c168 'ar' 'lua_Debug':'struct lua_Debug'
![B3.27]
   T: if [B3.28]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
