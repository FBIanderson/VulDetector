static TValue *newkey(lua_State *L, Table *t, const TValue *key)
 [B16 (ENTRY)]
   Succs (1): B15

 [B1]
   1: IntegerLiteral 0x5654000ef0a8 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x5654000ef0d8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5654000ef0a8 <col:31> 'int' 0
(void)[B1.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x5654000ef120 <ltable.c:428:15> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
   4: ImplicitCastExpr 0x5654000ef168 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ef148 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ef120 <ltable.c:428:15> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B1.3]) (ImplicitCastExpr, LValueToRValue, Node *)
   5: MemberExpr 0x5654000ef180 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ImplicitCastExpr 0x5654000ef168 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ef148 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ef120 <ltable.c:428:15> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B1.4]->i_val
   6: UnaryOperator 0x5654000ef1b8 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000ef180 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ImplicitCastExpr 0x5654000ef168 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ef148 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ef120 <ltable.c:428:15> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
&[B1.5]
   7: ReturnStmt 0x5654000ef1f8 <ltable.c:428:3, ./ltable.h:15:30>
`-ParenExpr 0x5654000ef1d8 <col:18, col:30> 'TValue *'
  `-UnaryOperator 0x5654000ef1b8 <col:19, col:25> 'TValue *' prefix '&'
    `-MemberExpr 0x5654000ef180 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
      `-ImplicitCastExpr 0x5654000ef168 <col:20, col:22> 'Node *' <LValueToRValue>
        `-ParenExpr 0x5654000ef148 <col:20, col:22> 'Node *' lvalue
          `-DeclRefExpr 0x5654000ef120 <ltable.c:428:15> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
return ([B1.6]);
   Preds (4): B2 B3 B4 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5654000eeef0 <./lgc.h:90:2> 'void (lua_State *, Table *)' Function 0x5654000c43d0 'luaC_barrierback' 'void (lua_State *, Table *)'
luaC_barrierback
   2: ImplicitCastExpr 0x5654000eefc8 <./lgc.h:90:2> 'void (*)(lua_State *, Table *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000eeef0 <col:2> 'void (lua_State *, Table *)' Function 0x5654000c43d0 'luaC_barrierback' 'void (lua_State *, Table *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, Table *))
   3: DeclRefExpr 0x5654000eef18 <ltable.c:426:17> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000ef018 <ltable.c:426:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000eef18 <col:17> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5654000eef40 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
t
   6: ImplicitCastExpr 0x5654000ef030 <ltable.c:426:20> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000eef40 <col:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B2.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: CallExpr 0x5654000eefe0 <./lgc.h:90:2, col:22> 'void'
|-ImplicitCastExpr 0x5654000eefc8 <col:2> 'void (*)(lua_State *, Table *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000eeef0 <col:2> 'void (lua_State *, Table *)' Function 0x5654000c43d0 'luaC_barrierback' 'void (lua_State *, Table *)'
|-ImplicitCastExpr 0x5654000ef018 <ltable.c:426:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000eef18 <col:17> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
`-ImplicitCastExpr 0x5654000ef030 <col:20> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000eef40 <col:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B2.2]([B2.4], [B2.6])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000eec58 <./llimits.h:75:26, col:30> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000eec38 <col:26, col:30> 'Table *' lvalue
  `-ParenExpr 0x5654000eebd8 <./lstate.h:162:38, col:40> 'Table *' lvalue
    `-DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
(([B3.1])) (ImplicitCastExpr, LValueToRValue, Table *)
   3: CStyleCastExpr 0x5654000eec70 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x5654000eec58 <col:26, col:30> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000eec38 <col:26, col:30> 'Table *' lvalue
    `-ParenExpr 0x5654000eebd8 <./lstate.h:162:38, col:40> 'Table *' lvalue
      `-DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
(GCObject *)[B3.2] (CStyleCastExpr, BitCast, GCObject *)
   4: MemberExpr 0x5654000eecf8 <./lgc.h:66:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
`-ParenExpr 0x5654000eecd8 <col:33, col:35> 'GCObject *'
  `-ParenExpr 0x5654000eecb8 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x5654000eec98 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x5654000eec70 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x5654000eec58 <col:26, col:30> 'Table *' <LValueToRValue>
          `-ParenExpr 0x5654000eec38 <col:26, col:30> 'Table *' lvalue
            `-ParenExpr 0x5654000eebd8 <./lstate.h:162:38, col:40> 'Table *' lvalue
              `-DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
((([B3.3])))->gch
   5: MemberExpr 0x5654000eed30 <./lgc.h:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
`-MemberExpr 0x5654000eecf8 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
  `-ParenExpr 0x5654000eecd8 <col:33, col:35> 'GCObject *'
    `-ParenExpr 0x5654000eecb8 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x5654000eec98 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x5654000eec70 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x5654000eec58 <col:26, col:30> 'Table *' <LValueToRValue>
            `-ParenExpr 0x5654000eec38 <col:26, col:30> 'Table *' lvalue
              `-ParenExpr 0x5654000eebd8 <./lstate.h:162:38, col:40> 'Table *' lvalue
                `-DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B3.4].marked
   6: ImplicitCastExpr 0x5654000eee50 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x5654000eed68 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x5654000eed30 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
    `-MemberExpr 0x5654000eecf8 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
      `-ParenExpr 0x5654000eecd8 <col:33, col:35> 'GCObject *'
        `-ParenExpr 0x5654000eecb8 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x5654000eec98 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x5654000eec70 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x5654000eec58 <col:26, col:30> 'Table *' <LValueToRValue>
                `-ParenExpr 0x5654000eec38 <col:26, col:30> 'Table *' lvalue
                  `-ParenExpr 0x5654000eebd8 <./lstate.h:162:38, col:40> 'Table *' lvalue
                    `-DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
([B3.5]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x5654000eee68 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5654000eee50 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x5654000eed68 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x5654000eed30 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
      `-MemberExpr 0x5654000eecf8 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
        `-ParenExpr 0x5654000eecd8 <col:33, col:35> 'GCObject *'
          `-ParenExpr 0x5654000eecb8 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x5654000eec98 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x5654000eec70 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x5654000eec58 <col:26, col:30> 'Table *' <LValueToRValue>
                  `-ParenExpr 0x5654000eec38 <col:26, col:30> 'Table *' lvalue
                    `-ParenExpr 0x5654000eebd8 <./lstate.h:162:38, col:40> 'Table *' lvalue
                      `-DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B3.6] (ImplicitCastExpr, IntegralCast, int)
   8: IntegerLiteral 0x5654000eed88 <./lgc.h:30:21> 'int' 1
1
   9: IntegerLiteral 0x5654000eeda8 <./lgc.h:56:18> 'int' 2
2
  10: BinaryOperator 0x5654000eede8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x5654000eed88 <col:21> 'int' 1
`-ParenExpr 0x5654000eedc8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x5654000eeda8 <line:56:18> 'int' 2
[B3.8] << ([B3.9])
  11: BinaryOperator 0x5654000eee80 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x5654000eee68 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5654000eee50 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x5654000eed68 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x5654000eed30 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
|       `-MemberExpr 0x5654000eecf8 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
|         `-ParenExpr 0x5654000eecd8 <col:33, col:35> 'GCObject *'
|           `-ParenExpr 0x5654000eecb8 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x5654000eec98 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x5654000eec70 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x5654000eec58 <col:26, col:30> 'Table *' <LValueToRValue>
|                   `-ParenExpr 0x5654000eec38 <col:26, col:30> 'Table *' lvalue
|                     `-ParenExpr 0x5654000eebd8 <./lstate.h:162:38, col:40> 'Table *' lvalue
|                       `-DeclRefExpr 0x5654000eebb0 <ltable.c:426:20> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
`-ParenExpr 0x5654000eee30 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x5654000eee10 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x5654000eede8 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x5654000eed88 <col:21> 'int' 1
      `-ParenExpr 0x5654000eedc8 <col:24, col:26> 'int'
        `-IntegerLiteral 0x5654000eeda8 <line:56:18> 'int' 2
[B3.7] & (([B3.10]))
   T: if (([B5.28]) && ([B4.17])) && ([B3.11])
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
key
   2: ImplicitCastExpr 0x5654000ee7a8 <./lobject.h:91:48, col:50> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5654000ee7c0 <./lobject.h:91:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B4.2]->value
   4: MemberExpr 0x5654000ee7f8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x565400089680
`-MemberExpr 0x5654000ee7c0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
      `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B4.3].gc
   5: ImplicitCastExpr 0x5654000ee870 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x5654000ee850 <col:35, col:37> 'GCObject *const' lvalue
  `-ParenExpr 0x5654000ee830 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
    `-MemberExpr 0x5654000ee7f8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x565400089680
      `-MemberExpr 0x5654000ee7c0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
        `-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
            `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
(([B4.4])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x5654000ee888 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
`-ImplicitCastExpr 0x5654000ee870 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x5654000ee850 <col:35, col:37> 'GCObject *const' lvalue
    `-ParenExpr 0x5654000ee830 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
      `-MemberExpr 0x5654000ee7f8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x565400089680
        `-MemberExpr 0x5654000ee7c0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
          `-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
              `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B4.5]->gch
   7: MemberExpr 0x5654000ee8c0 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
`-MemberExpr 0x5654000ee888 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
  `-ImplicitCastExpr 0x5654000ee870 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x5654000ee850 <col:35, col:37> 'GCObject *const' lvalue
      `-ParenExpr 0x5654000ee830 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
        `-MemberExpr 0x5654000ee7f8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x565400089680
          `-MemberExpr 0x5654000ee7c0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
            `-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
                `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B4.6].marked
   8: ImplicitCastExpr 0x5654000eeaf0 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x5654000ee8f8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x5654000ee8c0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
    `-MemberExpr 0x5654000ee888 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
      `-ImplicitCastExpr 0x5654000ee870 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x5654000ee850 <col:35, col:37> 'GCObject *const' lvalue
          `-ParenExpr 0x5654000ee830 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
            `-MemberExpr 0x5654000ee7f8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x565400089680
              `-MemberExpr 0x5654000ee7c0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
                `-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
                  `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
                    `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
([B4.7]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   9: ImplicitCastExpr 0x5654000eeb08 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5654000eeaf0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x5654000ee8f8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x5654000ee8c0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
      `-MemberExpr 0x5654000ee888 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
        `-ImplicitCastExpr 0x5654000ee870 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x5654000ee850 <col:35, col:37> 'GCObject *const' lvalue
            `-ParenExpr 0x5654000ee830 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
              `-MemberExpr 0x5654000ee7f8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x565400089680
                `-MemberExpr 0x5654000ee7c0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
                  `-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
                    `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
                      `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B4.8] (ImplicitCastExpr, IntegralCast, int)
  10: IntegerLiteral 0x5654000ee918 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x5654000ee938 <./lgc.h:54:19> 'int' 0
0
  12: BinaryOperator 0x5654000ee978 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x5654000ee918 <col:21> 'int' 1
`-ParenExpr 0x5654000ee958 <col:24, col:26> 'int'
  `-IntegerLiteral 0x5654000ee938 <line:54:19> 'int' 0
[B4.10] << ([B4.11])
  13: IntegerLiteral 0x5654000ee9c0 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x5654000ee9e0 <./lgc.h:55:19> 'int' 1
1
  15: BinaryOperator 0x5654000eea20 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x5654000ee9c0 <col:21> 'int' 1
`-ParenExpr 0x5654000eea00 <col:24, col:26> 'int'
  `-IntegerLiteral 0x5654000ee9e0 <line:55:19> 'int' 1
[B4.13] << ([B4.14])
  16: BinaryOperator 0x5654000eea68 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x5654000ee9a0 <col:20, col:27> 'int'
| `-BinaryOperator 0x5654000ee978 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x5654000ee918 <col:21> 'int' 1
|   `-ParenExpr 0x5654000ee958 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x5654000ee938 <line:54:19> 'int' 0
`-ParenExpr 0x5654000eea48 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x5654000eea20 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x5654000ee9c0 <col:21> 'int' 1
    `-ParenExpr 0x5654000eea00 <col:24, col:26> 'int'
      `-IntegerLiteral 0x5654000ee9e0 <line:55:19> 'int' 1
([B4.12]) | ([B4.15])
  17: BinaryOperator 0x5654000eeb20 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x5654000eeb08 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5654000eeaf0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x5654000ee8f8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x5654000ee8c0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5654000894b8
|       `-MemberExpr 0x5654000ee888 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5654000ac010
|         `-ImplicitCastExpr 0x5654000ee870 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x5654000ee850 <col:35, col:37> 'GCObject *const' lvalue
|             `-ParenExpr 0x5654000ee830 <./llimits.h:63:25, col:27> 'GCObject *const' lvalue
|               `-MemberExpr 0x5654000ee7f8 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x565400089680
|                 `-MemberExpr 0x5654000ee7c0 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x565400089980
|                   `-ImplicitCastExpr 0x5654000ee7a8 <col:48, col:50> 'const TValue *' <LValueToRValue>
|                     `-ParenExpr 0x5654000ee788 <col:48, col:50> 'const TValue *' lvalue
|                       `-DeclRefExpr 0x5654000ee760 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
`-ParenExpr 0x5654000eead0 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x5654000eeab0 <line:37:40, col:57> 'int'
    `-ParenExpr 0x5654000eea90 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x5654000eea68 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x5654000ee9a0 <col:20, col:27> 'int'
        | `-BinaryOperator 0x5654000ee978 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x5654000ee918 <col:21> 'int' 1
        |   `-ParenExpr 0x5654000ee958 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x5654000ee938 <line:54:19> 'int' 0
        `-ParenExpr 0x5654000eea48 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x5654000eea20 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x5654000ee9c0 <col:21> 'int' 1
            `-ParenExpr 0x5654000eea00 <col:24, col:26> 'int'
              `-IntegerLiteral 0x5654000ee9e0 <line:55:19> 'int' 1
[B4.9] & ((([B4.16])))
   T: (([B5.28]) && ([B4.17])) && ...
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x5654000ee330 <ltable.c:425:21> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
key
   2: ImplicitCastExpr 0x5654000ee358 <ltable.c:425:21> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000ee330 <col:21> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.1] (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5654000ee3b0 <ltable.c:425:21, col:26> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000ee358 <col:21> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ee330 <col:21> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.2]->value
   4: ImplicitCastExpr 0x5654000ee3e8 <ltable.c:425:21, col:26> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5654000ee3b0 <col:21, col:26> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000ee358 <col:21> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000ee330 <col:21> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.3] (ImplicitCastExpr, LValueToRValue, Value)
   5: DeclRefExpr 0x5654000ee1e8 <ltable.c:425:8> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
   6: ImplicitCastExpr 0x5654000ee230 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ee210 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ee1e8 <ltable.c:425:8> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B5.5]) (ImplicitCastExpr, LValueToRValue, Node *)
   7: MemberExpr 0x5654000ee248 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000ee230 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ee210 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ee1e8 <ltable.c:425:8> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B5.6]->i_key
   8: MemberExpr 0x5654000ee280 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000ee248 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000ee230 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ee210 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ee1e8 <ltable.c:425:8> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B5.7].nk
   9: UnaryOperator 0x5654000ee2b8 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x5654000ee280 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000ee248 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000ee230 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000ee210 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x5654000ee1e8 <ltable.c:425:8> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
&[B5.8]
  10: MemberExpr 0x5654000ee2f8 <./ltable.h:14:18, ltable.c:425:13> 'Value':'Value' lvalue ->value 0x565400098e60
`-ParenExpr 0x5654000ee2d8 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-UnaryOperator 0x5654000ee2b8 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
    `-MemberExpr 0x5654000ee280 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
      `-MemberExpr 0x5654000ee248 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000ee230 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000ee210 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x5654000ee1e8 <ltable.c:425:8> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B5.9])->value
  11: BinaryOperator 0x5654000ee400 <./ltable.h:14:18, ltable.c:425:26> 'Value':'Value' '='
|-MemberExpr 0x5654000ee2f8 <./ltable.h:14:18, ltable.c:425:13> 'Value':'Value' lvalue ->value 0x565400098e60
| `-ParenExpr 0x5654000ee2d8 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
|   `-UnaryOperator 0x5654000ee2b8 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
|     `-MemberExpr 0x5654000ee280 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|       `-MemberExpr 0x5654000ee248 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|         `-ImplicitCastExpr 0x5654000ee230 <col:20, col:22> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000ee210 <col:20, col:22> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000ee1e8 <ltable.c:425:8> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-ImplicitCastExpr 0x5654000ee3e8 <col:21, col:26> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5654000ee3b0 <col:21, col:26> 'const Value':'const Value' lvalue ->value 0x565400089980
    `-ImplicitCastExpr 0x5654000ee358 <col:21> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000ee330 <col:21> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.10] = [B5.4]
  12: DeclRefExpr 0x5654000ee570 <ltable.c:425:48> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
key
  13: ImplicitCastExpr 0x5654000ee598 <ltable.c:425:48> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000ee570 <col:48> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.12] (ImplicitCastExpr, LValueToRValue, const TValue *)
  14: MemberExpr 0x5654000ee5b0 <ltable.c:425:48, col:53> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000ee598 <col:48> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ee570 <col:48> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.13]->tt
  15: ImplicitCastExpr 0x5654000ee5e8 <ltable.c:425:48, col:53> 'int' <LValueToRValue>
`-MemberExpr 0x5654000ee5b0 <col:48, col:53> 'const int' lvalue ->tt 0x5654000899e0
  `-ImplicitCastExpr 0x5654000ee598 <col:48> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000ee570 <col:48> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.14] (ImplicitCastExpr, LValueToRValue, int)
  16: DeclRefExpr 0x5654000ee428 <ltable.c:425:38> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  17: ImplicitCastExpr 0x5654000ee470 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ee450 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ee428 <ltable.c:425:38> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B5.16]) (ImplicitCastExpr, LValueToRValue, Node *)
  18: MemberExpr 0x5654000ee488 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000ee470 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ee450 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ee428 <ltable.c:425:38> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B5.17]->i_key
  19: MemberExpr 0x5654000ee4c0 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000ee488 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000ee470 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ee450 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ee428 <ltable.c:425:38> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B5.18].nk
  20: UnaryOperator 0x5654000ee4f8 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x5654000ee4c0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000ee488 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000ee470 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000ee450 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x5654000ee428 <ltable.c:425:38> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
&[B5.19]
  21: MemberExpr 0x5654000ee538 <./ltable.h:14:18, ltable.c:425:43> 'int' lvalue ->tt 0x565400098ec0
`-ParenExpr 0x5654000ee518 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-UnaryOperator 0x5654000ee4f8 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
    `-MemberExpr 0x5654000ee4c0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
      `-MemberExpr 0x5654000ee488 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000ee470 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000ee450 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x5654000ee428 <ltable.c:425:38> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B5.20])->tt
  22: BinaryOperator 0x5654000ee600 <./ltable.h:14:18, ltable.c:425:53> 'int' '='
|-MemberExpr 0x5654000ee538 <./ltable.h:14:18, ltable.c:425:43> 'int' lvalue ->tt 0x565400098ec0
| `-ParenExpr 0x5654000ee518 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
|   `-UnaryOperator 0x5654000ee4f8 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
|     `-MemberExpr 0x5654000ee4c0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|       `-MemberExpr 0x5654000ee488 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|         `-ImplicitCastExpr 0x5654000ee470 <col:20, col:22> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000ee450 <col:20, col:22> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000ee428 <ltable.c:425:38> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-ImplicitCastExpr 0x5654000ee5e8 <col:48, col:53> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000ee5b0 <col:48, col:53> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000ee598 <col:48> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000ee570 <col:48> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.21] = [B5.15]
  23: DeclRefExpr 0x5654000ee628 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
key
  24: ImplicitCastExpr 0x5654000ee670 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000ee650 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000ee628 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
([B5.23]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  25: MemberExpr 0x5654000ee688 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000ee670 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000ee650 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000ee628 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B5.24]->tt
  26: ImplicitCastExpr 0x5654000ee700 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000ee6c0 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5654000ee688 <col:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000ee670 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000ee650 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5654000ee628 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
([B5.25]) (ImplicitCastExpr, LValueToRValue, int)
  27: IntegerLiteral 0x5654000ee6e0 <./lua.h:78:22> 'int' 4
4
  28: BinaryOperator 0x5654000ee718 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x5654000ee700 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000ee6c0 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5654000ee688 <col:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
|     `-ImplicitCastExpr 0x5654000ee670 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5654000ee650 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5654000ee628 <ltable.c:426:23> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
`-IntegerLiteral 0x5654000ee6e0 <./lua.h:78:22> 'int' 4
[B5.26] >= [B5.27]
   T: ([B5.28]) && ...
   Preds (3): B6 B7 B14
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x5654000edd88 <ltable.c:420:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
   2: ImplicitCastExpr 0x5654000eddd0 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000eddb0 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000edd88 <ltable.c:420:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000edde8 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000eddd0 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000eddb0 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000edd88 <ltable.c:420:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B6.2]->i_key
   4: MemberExpr 0x5654000ede20 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000edde8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000eddd0 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000eddb0 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000edd88 <ltable.c:420:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B6.3].nk
   5: MemberExpr 0x5654000ede58 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000ede20 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000edde8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000eddd0 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000eddb0 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000edd88 <ltable.c:420:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B6.4].next
   6: ImplicitCastExpr 0x5654000edeb0 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
`-ParenExpr 0x5654000ede90 <col:18, col:37> 'struct Node *' lvalue
  `-MemberExpr 0x5654000ede58 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
    `-MemberExpr 0x5654000ede20 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
      `-MemberExpr 0x5654000edde8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000eddd0 <col:19, col:21> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000eddb0 <col:19, col:21> 'Node *' lvalue
            `-DeclRefExpr 0x5654000edd88 <ltable.c:420:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B6.5]) (ImplicitCastExpr, LValueToRValue, struct Node *)
   7: DeclRefExpr 0x5654000edc60 <ltable.c:420:13> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
n
   8: ImplicitCastExpr 0x5654000edca8 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000edc88 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000edc60 <ltable.c:420:13> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
([B6.7]) (ImplicitCastExpr, LValueToRValue, Node *)
   9: MemberExpr 0x5654000edcc0 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000edca8 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000edc88 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000edc60 <ltable.c:420:13> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B6.8]->i_key
  10: MemberExpr 0x5654000edcf8 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000edcc0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000edca8 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000edc88 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000edc60 <ltable.c:420:13> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B6.9].nk
  11: MemberExpr 0x5654000edd30 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000edcf8 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000edcc0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000edca8 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000edc88 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000edc60 <ltable.c:420:13> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B6.10].next
  12: BinaryOperator 0x5654000edec8 <./ltable.h:16:18, col:37> 'struct Node *' '='
|-ParenExpr 0x5654000edd68 <col:18, col:37> 'struct Node *' lvalue
| `-MemberExpr 0x5654000edd30 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
|   `-MemberExpr 0x5654000edcf8 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|     `-MemberExpr 0x5654000edcc0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|       `-ImplicitCastExpr 0x5654000edca8 <col:19, col:21> 'Node *' <LValueToRValue>
|         `-ParenExpr 0x5654000edc88 <col:19, col:21> 'Node *' lvalue
|           `-DeclRefExpr 0x5654000edc60 <ltable.c:420:13> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
`-ImplicitCastExpr 0x5654000edeb0 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ede90 <col:18, col:37> 'struct Node *' lvalue
    `-MemberExpr 0x5654000ede58 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
      `-MemberExpr 0x5654000ede20 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
        `-MemberExpr 0x5654000edde8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000eddd0 <col:19, col:21> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000eddb0 <col:19, col:21> 'Node *' lvalue
              `-DeclRefExpr 0x5654000edd88 <ltable.c:420:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B6.11]) = [B6.6]
  13: DeclRefExpr 0x5654000ee018 <ltable.c:421:19> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
n
  14: ImplicitCastExpr 0x5654000ee040 <ltable.c:421:19> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ee018 <col:19> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B6.13] (ImplicitCastExpr, LValueToRValue, Node *)
  15: DeclRefExpr 0x5654000edef0 <ltable.c:421:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  16: ImplicitCastExpr 0x5654000edf38 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000edf18 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000edef0 <ltable.c:421:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B6.15]) (ImplicitCastExpr, LValueToRValue, Node *)
  17: MemberExpr 0x5654000edf50 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000edf38 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000edf18 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000edef0 <ltable.c:421:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B6.16]->i_key
  18: MemberExpr 0x5654000edf88 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000edf50 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000edf38 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000edf18 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000edef0 <ltable.c:421:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B6.17].nk
  19: MemberExpr 0x5654000edfc0 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000edf88 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000edf50 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000edf38 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000edf18 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000edef0 <ltable.c:421:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B6.18].next
  20: BinaryOperator 0x5654000ee058 <./ltable.h:16:18, ltable.c:421:19> 'struct Node *' '='
|-ParenExpr 0x5654000edff8 <./ltable.h:16:18, col:37> 'struct Node *' lvalue
| `-MemberExpr 0x5654000edfc0 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
|   `-MemberExpr 0x5654000edf88 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|     `-MemberExpr 0x5654000edf50 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|       `-ImplicitCastExpr 0x5654000edf38 <col:19, col:21> 'Node *' <LValueToRValue>
|         `-ParenExpr 0x5654000edf18 <col:19, col:21> 'Node *' lvalue
|           `-DeclRefExpr 0x5654000edef0 <ltable.c:421:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-ImplicitCastExpr 0x5654000ee040 <col:19> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ee018 <col:19> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
([B6.19]) = [B6.14]
  21: DeclRefExpr 0x5654000ee0a8 <ltable.c:422:12> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
n
  22: ImplicitCastExpr 0x5654000ee0d0 <ltable.c:422:12> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ee0a8 <col:12> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B6.21] (ImplicitCastExpr, LValueToRValue, Node *)
  23: DeclRefExpr 0x5654000ee080 <ltable.c:422:7> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  24: BinaryOperator 0x5654000ee0e8 <ltable.c:422:7, col:12> 'Node *' '='
|-DeclRefExpr 0x5654000ee080 <col:7> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-ImplicitCastExpr 0x5654000ee0d0 <col:12> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ee0a8 <col:12> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B6.23] = [B6.22]
   Preds (1): B11
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5654000ed740 <ltable.c:413:23> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000ed768 <ltable.c:413:23> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ed740 <col:23> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B7.1] (ImplicitCastExpr, LValueToRValue, Node *)
   3: DeclRefExpr 0x5654000ed618 <ltable.c:413:13> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
othern
   4: ImplicitCastExpr 0x5654000ed660 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ed640 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ed618 <ltable.c:413:13> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
([B7.3]) (ImplicitCastExpr, LValueToRValue, Node *)
   5: MemberExpr 0x5654000ed678 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000ed660 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ed640 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ed618 <ltable.c:413:13> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B7.4]->i_key
   6: MemberExpr 0x5654000ed6b0 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000ed678 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000ed660 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ed640 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ed618 <ltable.c:413:13> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B7.5].nk
   7: MemberExpr 0x5654000ed6e8 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000ed6b0 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000ed678 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000ed660 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000ed640 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000ed618 <ltable.c:413:13> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B7.6].next
   8: BinaryOperator 0x5654000ed780 <./ltable.h:16:18, ltable.c:413:23> 'struct Node *' '='
|-ParenExpr 0x5654000ed720 <./ltable.h:16:18, col:37> 'struct Node *' lvalue
| `-MemberExpr 0x5654000ed6e8 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
|   `-MemberExpr 0x5654000ed6b0 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|     `-MemberExpr 0x5654000ed678 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|       `-ImplicitCastExpr 0x5654000ed660 <col:19, col:21> 'Node *' <LValueToRValue>
|         `-ParenExpr 0x5654000ed640 <col:19, col:21> 'Node *' lvalue
|           `-DeclRefExpr 0x5654000ed618 <ltable.c:413:13> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
`-ImplicitCastExpr 0x5654000ed768 <col:23> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ed740 <col:23> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
([B7.7]) = [B7.2]
   9: DeclRefExpr 0x5654000ed808 <ltable.c:414:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  10: ImplicitCastExpr 0x5654000ed830 <ltable.c:414:13> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ed808 <col:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B7.9] (ImplicitCastExpr, LValueToRValue, Node *)
  11: UnaryOperator 0x5654000ed848 <ltable.c:414:12, col:13> 'Node':'struct Node' lvalue prefix '*'
`-ImplicitCastExpr 0x5654000ed830 <col:13> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ed808 <col:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
*[B7.10]
  12: ImplicitCastExpr 0x5654000ed868 <ltable.c:414:12, col:13> 'Node':'struct Node' <LValueToRValue>
`-UnaryOperator 0x5654000ed848 <col:12, col:13> 'Node':'struct Node' lvalue prefix '*'
  `-ImplicitCastExpr 0x5654000ed830 <col:13> 'Node *' <LValueToRValue>
    `-DeclRefExpr 0x5654000ed808 <col:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B7.11] (ImplicitCastExpr, LValueToRValue, Node)
  13: DeclRefExpr 0x5654000ed7a8 <ltable.c:414:8> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
n
  14: ImplicitCastExpr 0x5654000ed7d0 <ltable.c:414:8> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ed7a8 <col:8> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B7.13] (ImplicitCastExpr, LValueToRValue, Node *)
  15: UnaryOperator 0x5654000ed7e8 <ltable.c:414:7, col:8> 'Node':'struct Node' lvalue prefix '*'
`-ImplicitCastExpr 0x5654000ed7d0 <col:8> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ed7a8 <col:8> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
*[B7.14]
  16: BinaryOperator 0x5654000ed880 <ltable.c:414:7, col:13> 'Node':'struct Node' '='
|-UnaryOperator 0x5654000ed7e8 <col:7, col:8> 'Node':'struct Node' lvalue prefix '*'
| `-ImplicitCastExpr 0x5654000ed7d0 <col:8> 'Node *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000ed7a8 <col:8> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
`-ImplicitCastExpr 0x5654000ed868 <col:12, col:13> 'Node':'struct Node' <LValueToRValue>
  `-UnaryOperator 0x5654000ed848 <col:12, col:13> 'Node':'struct Node' lvalue prefix '*'
    `-ImplicitCastExpr 0x5654000ed830 <col:13> 'Node *' <LValueToRValue>
      `-DeclRefExpr 0x5654000ed808 <col:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B7.15] = [B7.12]
  17: IntegerLiteral 0x5654000ed9d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  18: CStyleCastExpr 0x5654000eda08 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5654000ed9d0 <col:24> 'int' 0
(void *)[B7.17] (CStyleCastExpr, NullToPointer, void *)
  19: ImplicitCastExpr 0x5654000eda50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Node *' <NullToPointer>
`-ParenExpr 0x5654000eda30 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5654000eda08 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5654000ed9d0 <col:24> 'int' 0
([B7.18]) (ImplicitCastExpr, NullToPointer, struct Node *)
  20: DeclRefExpr 0x5654000ed8a8 <ltable.c:415:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  21: ImplicitCastExpr 0x5654000ed8f0 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ed8d0 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ed8a8 <ltable.c:415:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B7.20]) (ImplicitCastExpr, LValueToRValue, Node *)
  22: MemberExpr 0x5654000ed908 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000ed8f0 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ed8d0 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ed8a8 <ltable.c:415:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B7.21]->i_key
  23: MemberExpr 0x5654000ed940 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000ed908 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000ed8f0 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ed8d0 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ed8a8 <ltable.c:415:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B7.22].nk
  24: MemberExpr 0x5654000ed978 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000ed940 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000ed908 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000ed8f0 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000ed8d0 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000ed8a8 <ltable.c:415:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B7.23].next
  25: BinaryOperator 0x5654000eda68 <./ltable.h:16:18, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'struct Node *' '='
|-ParenExpr 0x5654000ed9b0 <./ltable.h:16:18, col:37> 'struct Node *' lvalue
| `-MemberExpr 0x5654000ed978 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
|   `-MemberExpr 0x5654000ed940 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|     `-MemberExpr 0x5654000ed908 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|       `-ImplicitCastExpr 0x5654000ed8f0 <col:19, col:21> 'Node *' <LValueToRValue>
|         `-ParenExpr 0x5654000ed8d0 <col:19, col:21> 'Node *' lvalue
|           `-DeclRefExpr 0x5654000ed8a8 <ltable.c:415:13> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-ImplicitCastExpr 0x5654000eda50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Node *' <NullToPointer>
  `-ParenExpr 0x5654000eda30 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5654000eda08 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5654000ed9d0 <col:24> 'int' 0
([B7.24]) = [B7.19]
  26: IntegerLiteral 0x5654000edbc0 <./lua.h:74:19> 'int' 0
0
  27: DeclRefExpr 0x5654000eda90 <ltable.c:416:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  28: ImplicitCastExpr 0x5654000edad8 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000edab8 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000eda90 <ltable.c:416:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B7.27]) (ImplicitCastExpr, LValueToRValue, Node *)
  29: MemberExpr 0x5654000edaf0 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ImplicitCastExpr 0x5654000edad8 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000edab8 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000eda90 <ltable.c:416:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B7.28]->i_val
  30: UnaryOperator 0x5654000edb28 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000edaf0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ImplicitCastExpr 0x5654000edad8 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000edab8 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000eda90 <ltable.c:416:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
&[B7.29]
  31: MemberExpr 0x5654000edb88 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000edb68 <col:27, col:31> 'TValue *'
  `-ParenExpr 0x5654000edb48 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x5654000edb28 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000edaf0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
        `-ImplicitCastExpr 0x5654000edad8 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000edab8 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x5654000eda90 <ltable.c:416:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
(([B7.30]))->tt
  32: BinaryOperator 0x5654000edbe0 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x5654000edb88 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x5654000899e0
| `-ParenExpr 0x5654000edb68 <col:27, col:31> 'TValue *'
|   `-ParenExpr 0x5654000edb48 <./ltable.h:15:18, col:30> 'TValue *'
|     `-UnaryOperator 0x5654000edb28 <col:19, col:25> 'TValue *' prefix '&'
|       `-MemberExpr 0x5654000edaf0 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
|         `-ImplicitCastExpr 0x5654000edad8 <col:20, col:22> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000edab8 <col:20, col:22> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000eda90 <ltable.c:416:24> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-IntegerLiteral 0x5654000edbc0 <./lua.h:74:19> 'int' 0
[B7.31] = [B7.26]
   Preds (1): B10
   Succs (1): B5

 [B8]
   Preds (1): B9
   Succs (1): B10

 [B9]
   1: DeclRefExpr 0x5654000ed490 <ltable.c:412:50> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
othern
   2: ImplicitCastExpr 0x5654000ed4d8 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ed4b8 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ed490 <ltable.c:412:50> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
([B9.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000ed4f0 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000ed4d8 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ed4b8 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ed490 <ltable.c:412:50> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B9.2]->i_key
   4: MemberExpr 0x5654000ed528 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000ed4f0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000ed4d8 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ed4b8 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ed490 <ltable.c:412:50> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B9.3].nk
   5: MemberExpr 0x5654000ed560 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000ed528 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000ed4f0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000ed4d8 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000ed4b8 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000ed490 <ltable.c:412:50> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B9.4].next
   6: ImplicitCastExpr 0x5654000ed5b8 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
`-ParenExpr 0x5654000ed598 <col:18, col:37> 'struct Node *' lvalue
  `-MemberExpr 0x5654000ed560 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
    `-MemberExpr 0x5654000ed528 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
      `-MemberExpr 0x5654000ed4f0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000ed4d8 <col:19, col:21> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000ed4b8 <col:19, col:21> 'Node *' lvalue
            `-DeclRefExpr 0x5654000ed490 <ltable.c:412:50> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
([B9.5]) (ImplicitCastExpr, LValueToRValue, struct Node *)
   7: DeclRefExpr 0x5654000ed468 <ltable.c:412:35> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
othern
   8: BinaryOperator 0x5654000ed5d0 <ltable.c:412:35, ./ltable.h:16:37> 'Node *' '='
|-DeclRefExpr 0x5654000ed468 <ltable.c:412:35> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
`-ImplicitCastExpr 0x5654000ed5b8 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ed598 <col:18, col:37> 'struct Node *' lvalue
    `-MemberExpr 0x5654000ed560 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
      `-MemberExpr 0x5654000ed528 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
        `-MemberExpr 0x5654000ed4f0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000ed4d8 <col:19, col:21> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000ed4b8 <col:19, col:21> 'Node *' lvalue
              `-DeclRefExpr 0x5654000ed490 <ltable.c:412:50> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B9.7] = [B9.6]
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x5654000ed2c0 <ltable.c:412:20> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
othern
   2: ImplicitCastExpr 0x5654000ed308 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ed2e8 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ed2c0 <ltable.c:412:20> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
([B10.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000ed320 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000ed308 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ed2e8 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ed2c0 <ltable.c:412:20> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B10.2]->i_key
   4: MemberExpr 0x5654000ed358 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000ed320 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000ed308 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ed2e8 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ed2c0 <ltable.c:412:20> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B10.3].nk
   5: MemberExpr 0x5654000ed390 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000ed358 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000ed320 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000ed308 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000ed2e8 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000ed2c0 <ltable.c:412:20> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B10.4].next
   6: ImplicitCastExpr 0x5654000ed410 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
`-ParenExpr 0x5654000ed3c8 <col:18, col:37> 'struct Node *' lvalue
  `-MemberExpr 0x5654000ed390 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
    `-MemberExpr 0x5654000ed358 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
      `-MemberExpr 0x5654000ed320 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000ed308 <col:19, col:21> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000ed2e8 <col:19, col:21> 'Node *' lvalue
            `-DeclRefExpr 0x5654000ed2c0 <ltable.c:412:20> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
([B10.5]) (ImplicitCastExpr, LValueToRValue, struct Node *)
   7: DeclRefExpr 0x5654000ed3e8 <ltable.c:412:31> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
   8: ImplicitCastExpr 0x5654000ed428 <ltable.c:412:31> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ed3e8 <col:31> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B10.7] (ImplicitCastExpr, LValueToRValue, Node *)
   9: BinaryOperator 0x5654000ed440 <./ltable.h:16:18, ltable.c:412:31> 'int' '!='
|-ImplicitCastExpr 0x5654000ed410 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
| `-ParenExpr 0x5654000ed3c8 <col:18, col:37> 'struct Node *' lvalue
|   `-MemberExpr 0x5654000ed390 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
|     `-MemberExpr 0x5654000ed358 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|       `-MemberExpr 0x5654000ed320 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|         `-ImplicitCastExpr 0x5654000ed308 <col:19, col:21> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000ed2e8 <col:19, col:21> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000ed2c0 <ltable.c:412:20> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
`-ImplicitCastExpr 0x5654000ed428 <col:31> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ed3e8 <col:31> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B10.6] != [B10.8]
   T: while [B10.9]
   Preds (2): B8 B11
   Succs (2): B9 B7

 [B11]
   1: IntegerLiteral 0x5654000ecf58 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x5654000ecf88 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5654000ecf58 <col:31> 'int' 0
(void)[B11.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x5654000ecff8 <ltable.c:409:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
mainposition
   4: ImplicitCastExpr 0x5654000ed158 <ltable.c:409:14> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000ecff8 <col:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
[B11.3] (ImplicitCastExpr, FunctionToPointerDecay, Node *(*)(const Table *, const TValue *))
   5: DeclRefExpr 0x5654000ed020 <ltable.c:409:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
t
   6: ImplicitCastExpr 0x5654000ed1a8 <ltable.c:409:27> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000ed020 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B11.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: ImplicitCastExpr 0x5654000ed1c0 <ltable.c:409:27> 'const Table *' <BitCast>
`-ImplicitCastExpr 0x5654000ed1a8 <col:27> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ed020 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B11.6] (ImplicitCastExpr, BitCast, const Table *)
   8: DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
   9: ImplicitCastExpr 0x5654000ed090 <./ltable.h:18:23, col:25> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ed070 <col:23, col:25> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B11.8]) (ImplicitCastExpr, LValueToRValue, Node *)
  10: MemberExpr 0x5654000ed0a8 <./ltable.h:18:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000ed090 <col:23, col:25> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ed070 <col:23, col:25> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B11.9]->i_key
  11: MemberExpr 0x5654000ed0e0 <./ltable.h:18:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
`-MemberExpr 0x5654000ed0a8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000ed090 <col:23, col:25> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ed070 <col:23, col:25> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B11.10].tvk
  12: UnaryOperator 0x5654000ed118 <./ltable.h:18:22, col:34> 'TValue *' prefix '&'
`-MemberExpr 0x5654000ed0e0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
  `-MemberExpr 0x5654000ed0a8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000ed090 <col:23, col:25> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000ed070 <col:23, col:25> 'Node *' lvalue
        `-DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
&[B11.11]
  13: ImplicitCastExpr 0x5654000ed1d8 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000ed138 <col:21, col:37> 'TValue *'
  `-UnaryOperator 0x5654000ed118 <col:22, col:34> 'TValue *' prefix '&'
    `-MemberExpr 0x5654000ed0e0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
      `-MemberExpr 0x5654000ed0a8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000ed090 <col:23, col:25> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000ed070 <col:23, col:25> 'Node *' lvalue
            `-DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B11.12]) (ImplicitCastExpr, BitCast, const TValue *)
  14: CallExpr 0x5654000ed170 <ltable.c:409:14, col:42> 'Node *'
|-ImplicitCastExpr 0x5654000ed158 <col:14> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000ecff8 <col:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000ed1c0 <col:27> 'const Table *' <BitCast>
| `-ImplicitCastExpr 0x5654000ed1a8 <col:27> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000ed020 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
`-ImplicitCastExpr 0x5654000ed1d8 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
  `-ParenExpr 0x5654000ed138 <col:21, col:37> 'TValue *'
    `-UnaryOperator 0x5654000ed118 <col:22, col:34> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000ed0e0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
        `-MemberExpr 0x5654000ed0a8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000ed090 <col:23, col:25> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000ed070 <col:23, col:25> 'Node *' lvalue
              `-DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B11.4]([B11.7], [B11.13])
  15: DeclRefExpr 0x5654000ecfd0 <ltable.c:409:5> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
othern
  16: BinaryOperator 0x5654000ed1f0 <ltable.c:409:5, col:42> 'Node *' '='
|-DeclRefExpr 0x5654000ecfd0 <col:5> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
`-CallExpr 0x5654000ed170 <col:14, col:42> 'Node *'
  |-ImplicitCastExpr 0x5654000ed158 <col:14> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000ecff8 <col:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
  |-ImplicitCastExpr 0x5654000ed1c0 <col:27> 'const Table *' <BitCast>
  | `-ImplicitCastExpr 0x5654000ed1a8 <col:27> 'Table *' <LValueToRValue>
  |   `-DeclRefExpr 0x5654000ed020 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
  `-ImplicitCastExpr 0x5654000ed1d8 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
    `-ParenExpr 0x5654000ed138 <col:21, col:37> 'TValue *'
      `-UnaryOperator 0x5654000ed118 <col:22, col:34> 'TValue *' prefix '&'
        `-MemberExpr 0x5654000ed0e0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
          `-MemberExpr 0x5654000ed0a8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
            `-ImplicitCastExpr 0x5654000ed090 <col:23, col:25> 'Node *' <LValueToRValue>
              `-ParenExpr 0x5654000ed070 <col:23, col:25> 'Node *' lvalue
                `-DeclRefExpr 0x5654000ed048 <ltable.c:409:39> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B11.15] = [B11.14]
  17: DeclRefExpr 0x5654000ed218 <ltable.c:410:9> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
othern
  18: ImplicitCastExpr 0x5654000ed268 <ltable.c:410:9> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ed218 <col:9> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
[B11.17] (ImplicitCastExpr, LValueToRValue, Node *)
  19: DeclRefExpr 0x5654000ed240 <ltable.c:410:19> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  20: ImplicitCastExpr 0x5654000ed280 <ltable.c:410:19> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ed240 <col:19> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B11.19] (ImplicitCastExpr, LValueToRValue, Node *)
  21: BinaryOperator 0x5654000ed298 <ltable.c:410:9, col:19> 'int' '!='
|-ImplicitCastExpr 0x5654000ed268 <col:9> 'Node *' <LValueToRValue>
| `-DeclRefExpr 0x5654000ed218 <col:9> 'Node *' lvalue Var 0x5654000ec900 'othern' 'Node *'
`-ImplicitCastExpr 0x5654000ed280 <col:19> 'Node *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ed240 <col:19> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B11.18] != [B11.20]
   T: if [B11.21]
   Preds (1): B13
   Succs (2): B10 B6

 [B12]
   1: DeclRefExpr 0x5654000ecc10 <ltable.c:405:7> 'void (lua_State *, Table *, const TValue *)' Function 0x5654000e7f70 'rehash' 'void (lua_State *, Table *, const TValue *)'
rehash
   2: ImplicitCastExpr 0x5654000ecd08 <ltable.c:405:7> 'void (*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000ecc10 <col:7> 'void (lua_State *, Table *, const TValue *)' Function 0x5654000e7f70 'rehash' 'void (lua_State *, Table *, const TValue *)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, Table *, const TValue *))
   3: DeclRefExpr 0x5654000ecc38 <ltable.c:405:14> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000ecd60 <ltable.c:405:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000ecc38 <col:14> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5654000ecc60 <ltable.c:405:17> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
t
   6: ImplicitCastExpr 0x5654000ecd78 <ltable.c:405:17> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000ecc60 <col:17> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B12.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: DeclRefExpr 0x5654000ecc88 <ltable.c:405:20> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
key
   8: ImplicitCastExpr 0x5654000ecd90 <ltable.c:405:20> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000ecc88 <col:20> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B12.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: CallExpr 0x5654000ecd20 <ltable.c:405:7, col:23> 'void'
|-ImplicitCastExpr 0x5654000ecd08 <col:7> 'void (*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000ecc10 <col:7> 'void (lua_State *, Table *, const TValue *)' Function 0x5654000e7f70 'rehash' 'void (lua_State *, Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000ecd60 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000ecc38 <col:14> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
|-ImplicitCastExpr 0x5654000ecd78 <col:17> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000ecc60 <col:17> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
`-ImplicitCastExpr 0x5654000ecd90 <col:20> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ecc88 <col:20> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B12.2]([B12.4], [B12.6], [B12.8])
  10: DeclRefExpr 0x5654000ecda8 <ltable.c:406:14> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000c6520 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
luaH_set
  11: ImplicitCastExpr 0x5654000ece48 <ltable.c:406:14> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000ecda8 <col:14> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000c6520 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
[B12.10] (ImplicitCastExpr, FunctionToPointerDecay, TValue *(*)(lua_State *, Table *, const TValue *))
  12: DeclRefExpr 0x5654000ecdd0 <ltable.c:406:23> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x5654000ecea0 <ltable.c:406:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000ecdd0 <col:23> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
[B12.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: DeclRefExpr 0x5654000ecdf8 <ltable.c:406:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
t
  15: ImplicitCastExpr 0x5654000eceb8 <ltable.c:406:26> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000ecdf8 <col:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B12.14] (ImplicitCastExpr, LValueToRValue, Table *)
  16: DeclRefExpr 0x5654000ece20 <ltable.c:406:29> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
key
  17: ImplicitCastExpr 0x5654000eced0 <ltable.c:406:29> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000ece20 <col:29> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B12.16] (ImplicitCastExpr, LValueToRValue, const TValue *)
  18: CallExpr 0x5654000ece60 <ltable.c:406:14, col:32> 'TValue *'
|-ImplicitCastExpr 0x5654000ece48 <col:14> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000ecda8 <col:14> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000c6520 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000ecea0 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000ecdd0 <col:23> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
|-ImplicitCastExpr 0x5654000eceb8 <col:26> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000ecdf8 <col:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
`-ImplicitCastExpr 0x5654000eced0 <col:29> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ece20 <col:29> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B12.11]([B12.13], [B12.15], [B12.17])
  19: ReturnStmt 0x5654000ecee8 <ltable.c:406:7, col:32>
`-CallExpr 0x5654000ece60 <col:14, col:32> 'TValue *'
  |-ImplicitCastExpr 0x5654000ece48 <col:14> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000ecda8 <col:14> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5654000c6520 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
  |-ImplicitCastExpr 0x5654000ecea0 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5654000ecdd0 <col:23> 'lua_State *' lvalue ParmVar 0x5654000ec1f8 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5654000eceb8 <col:26> 'Table *' <LValueToRValue>
  | `-DeclRefExpr 0x5654000ecdf8 <col:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
  `-ImplicitCastExpr 0x5654000eced0 <col:29> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000ece20 <col:29> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
return [B12.18];
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclStmt 0x5654000ec960 <ltable.c:402:5, col:17>col:11
`-VarDecl 0x5654000ec900 <col:5, col:11> col:11 used othern 'Node *'
Node *othern;
   2: DeclRefExpr 0x5654000ec9e8 <ltable.c:403:15> 'Node *(Table *)' Function 0x5654000ebbb0 'getfreepos' 'Node *(Table *)'
getfreepos
   3: ImplicitCastExpr 0x5654000eca98 <ltable.c:403:15> 'Node *(*)(Table *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000ec9e8 <col:15> 'Node *(Table *)' Function 0x5654000ebbb0 'getfreepos' 'Node *(Table *)'
[B13.2] (ImplicitCastExpr, FunctionToPointerDecay, Node *(*)(Table *))
   4: DeclRefExpr 0x5654000eca10 <ltable.c:403:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
t
   5: ImplicitCastExpr 0x5654000ecae0 <ltable.c:403:26> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000eca10 <col:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B13.4] (ImplicitCastExpr, LValueToRValue, Table *)
   6: CallExpr 0x5654000ecab0 <ltable.c:403:15, col:27> 'Node *'
|-ImplicitCastExpr 0x5654000eca98 <col:15> 'Node *(*)(Table *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000ec9e8 <col:15> 'Node *(Table *)' Function 0x5654000ebbb0 'getfreepos' 'Node *(Table *)'
`-ImplicitCastExpr 0x5654000ecae0 <col:26> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000eca10 <col:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B13.3]([B13.5])
   7: DeclStmt 0x5654000ecaf8 <ltable.c:403:5, col:28>col:11
`-VarDecl 0x5654000ec988 <col:5, col:27> col:11 used n 'Node *' cinit
  `-CallExpr 0x5654000ecab0 <col:15, col:27> 'Node *'
    |-ImplicitCastExpr 0x5654000eca98 <col:15> 'Node *(*)(Table *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5654000ec9e8 <col:15> 'Node *(Table *)' Function 0x5654000ebbb0 'getfreepos' 'Node *(Table *)'
    `-ImplicitCastExpr 0x5654000ecae0 <col:26> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5654000eca10 <col:26> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
Node *n = getfreepos(t);
   8: DeclRefExpr 0x5654000ecb10 <ltable.c:404:9> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
n
   9: ImplicitCastExpr 0x5654000ecbb8 <ltable.c:404:9> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ecb10 <col:9> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
[B13.8] (ImplicitCastExpr, LValueToRValue, Node *)
  10: IntegerLiteral 0x5654000ecb38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  11: CStyleCastExpr 0x5654000ecb70 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5654000ecb38 <col:24> 'int' 0
(void *)[B13.10] (CStyleCastExpr, NullToPointer, void *)
  12: ImplicitCastExpr 0x5654000ecbd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Node *' <BitCast>
`-ParenExpr 0x5654000ecb98 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5654000ecb70 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5654000ecb38 <col:24> 'int' 0
([B13.11]) (ImplicitCastExpr, BitCast, Node *)
  13: BinaryOperator 0x5654000ecbe8 <ltable.c:404:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5654000ecbb8 <ltable.c:404:9> 'Node *' <LValueToRValue>
| `-DeclRefExpr 0x5654000ecb10 <col:9> 'Node *' lvalue Var 0x5654000ec988 'n' 'Node *'
`-ImplicitCastExpr 0x5654000ecbd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'Node *' <BitCast>
  `-ParenExpr 0x5654000ecb98 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5654000ecb70 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5654000ecb38 <col:24> 'int' 0
[B13.9] == [B13.12]
   T: if [B13.13]
   Preds (2): B14 B15
   Succs (2): B12 B11

 [B14]
   1: DeclRefExpr 0x5654000ec7e0 <ltable.c:401:29> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
   2: ImplicitCastExpr 0x5654000ec870 <ltable.c:401:29> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000ec7e0 <col:29> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B14.1] (ImplicitCastExpr, LValueToRValue, Node *)
   3: DeclRefExpr 0x5654000ec808 <ltable.c:73:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
dummynode_
   4: UnaryOperator 0x5654000ec830 <ltable.c:73:21, col:22> 'const Node *' prefix '&'
`-DeclRefExpr 0x5654000ec808 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
&[B14.3]
   5: ImplicitCastExpr 0x5654000ec888 <ltable.c:73:20, col:32> 'Node *' <BitCast>
`-ParenExpr 0x5654000ec850 <col:20, col:32> 'const Node *'
  `-UnaryOperator 0x5654000ec830 <col:21, col:22> 'const Node *' prefix '&'
    `-DeclRefExpr 0x5654000ec808 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
([B14.4]) (ImplicitCastExpr, BitCast, Node *)
   6: BinaryOperator 0x5654000ec8a0 <ltable.c:401:29, line:73:32> 'int' '=='
|-ImplicitCastExpr 0x5654000ec870 <line:401:29> 'Node *' <LValueToRValue>
| `-DeclRefExpr 0x5654000ec7e0 <col:29> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-ImplicitCastExpr 0x5654000ec888 <line:73:20, col:32> 'Node *' <BitCast>
  `-ParenExpr 0x5654000ec850 <col:20, col:32> 'const Node *'
    `-UnaryOperator 0x5654000ec830 <col:21, col:22> 'const Node *' prefix '&'
      `-DeclRefExpr 0x5654000ec808 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
[B14.2] == [B14.5]
   T: if [B15.18] || [B14.6]
   Preds (1): B15
   Succs (2): B13 B5

 [B15]
   1: DeclRefExpr 0x5654000ec4c8 <ltable.c:400:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
mainposition
   2: ImplicitCastExpr 0x5654000ec540 <ltable.c:400:14> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000ec4c8 <col:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
[B15.1] (ImplicitCastExpr, FunctionToPointerDecay, Node *(*)(const Table *, const TValue *))
   3: DeclRefExpr 0x5654000ec4f0 <ltable.c:400:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000ec590 <ltable.c:400:27> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000ec4f0 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B15.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: ImplicitCastExpr 0x5654000ec5a8 <ltable.c:400:27> 'const Table *' <BitCast>
`-ImplicitCastExpr 0x5654000ec590 <col:27> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ec4f0 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
[B15.4] (ImplicitCastExpr, BitCast, const Table *)
   6: DeclRefExpr 0x5654000ec518 <ltable.c:400:30> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
key
   7: ImplicitCastExpr 0x5654000ec5c0 <ltable.c:400:30> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000ec518 <col:30> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B15.6] (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: CallExpr 0x5654000ec558 <ltable.c:400:14, col:33> 'Node *'
|-ImplicitCastExpr 0x5654000ec540 <col:14> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000ec4c8 <col:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000ec5a8 <col:27> 'const Table *' <BitCast>
| `-ImplicitCastExpr 0x5654000ec590 <col:27> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000ec4f0 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
`-ImplicitCastExpr 0x5654000ec5c0 <col:30> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000ec518 <col:30> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
[B15.2]([B15.5], [B15.7])
   9: DeclStmt 0x5654000ec5d8 <ltable.c:400:3, col:34>col:9
`-VarDecl 0x5654000ec468 <col:3, col:33> col:9 used mp 'Node *' cinit
  `-CallExpr 0x5654000ec558 <col:14, col:33> 'Node *'
    |-ImplicitCastExpr 0x5654000ec540 <col:14> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5654000ec4c8 <col:14> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
    |-ImplicitCastExpr 0x5654000ec5a8 <col:27> 'const Table *' <BitCast>
    | `-ImplicitCastExpr 0x5654000ec590 <col:27> 'Table *' <LValueToRValue>
    |   `-DeclRefExpr 0x5654000ec4f0 <col:27> 'Table *' lvalue ParmVar 0x5654000ec268 't' 'Table *'
    `-ImplicitCastExpr 0x5654000ec5c0 <col:30> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000ec518 <col:30> 'const TValue *' lvalue ParmVar 0x5654000ec2d8 'key' 'const TValue *'
Node *mp = mainposition(t, key);
  10: DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
mp
  11: ImplicitCastExpr 0x5654000ec638 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000ec618 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B15.10]) (ImplicitCastExpr, LValueToRValue, Node *)
  12: MemberExpr 0x5654000ec650 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ImplicitCastExpr 0x5654000ec638 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000ec618 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
[B15.11]->i_val
  13: UnaryOperator 0x5654000ec688 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000ec650 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ImplicitCastExpr 0x5654000ec638 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000ec618 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
&[B15.12]
  14: MemberExpr 0x5654000ec6e8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000ec6c8 <col:19, col:21> 'TValue *'
  `-ParenExpr 0x5654000ec6a8 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x5654000ec688 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000ec650 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
        `-ImplicitCastExpr 0x5654000ec638 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000ec618 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
(([B15.13]))->tt
  15: ImplicitCastExpr 0x5654000ec760 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000ec720 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000ec6e8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ParenExpr 0x5654000ec6c8 <col:19, col:21> 'TValue *'
      `-ParenExpr 0x5654000ec6a8 <./ltable.h:15:18, col:30> 'TValue *'
        `-UnaryOperator 0x5654000ec688 <col:19, col:25> 'TValue *' prefix '&'
          `-MemberExpr 0x5654000ec650 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
            `-ImplicitCastExpr 0x5654000ec638 <col:20, col:22> 'Node *' <LValueToRValue>
              `-ParenExpr 0x5654000ec618 <col:20, col:22> 'Node *' lvalue
                `-DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
([B15.14]) (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x5654000ec740 <./lua.h:74:19> 'int' 0
0
  17: BinaryOperator 0x5654000ec778 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000ec760 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000ec720 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000ec6e8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ParenExpr 0x5654000ec6c8 <col:19, col:21> 'TValue *'
|       `-ParenExpr 0x5654000ec6a8 <./ltable.h:15:18, col:30> 'TValue *'
|         `-UnaryOperator 0x5654000ec688 <col:19, col:25> 'TValue *' prefix '&'
|           `-MemberExpr 0x5654000ec650 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
|             `-ImplicitCastExpr 0x5654000ec638 <col:20, col:22> 'Node *' <LValueToRValue>
|               `-ParenExpr 0x5654000ec618 <col:20, col:22> 'Node *' lvalue
|                 `-DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
`-IntegerLiteral 0x5654000ec740 <./lua.h:74:19> 'int' 0
[B15.15] == [B15.16]
  18: UnaryOperator 0x5654000ec7c0 <ltable.c:401:7, ./lobject.h:79:41> 'int' prefix '!'
`-ParenExpr 0x5654000ec7a0 <col:20, col:41> 'int'
  `-BinaryOperator 0x5654000ec778 <line:90:18, ./lua.h:74:19> 'int' '=='
    |-ImplicitCastExpr 0x5654000ec760 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x5654000ec720 <col:18, col:26> 'int' lvalue
    |   `-MemberExpr 0x5654000ec6e8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    |     `-ParenExpr 0x5654000ec6c8 <col:19, col:21> 'TValue *'
    |       `-ParenExpr 0x5654000ec6a8 <./ltable.h:15:18, col:30> 'TValue *'
    |         `-UnaryOperator 0x5654000ec688 <col:19, col:25> 'TValue *' prefix '&'
    |           `-MemberExpr 0x5654000ec650 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
    |             `-ImplicitCastExpr 0x5654000ec638 <col:20, col:22> 'Node *' <LValueToRValue>
    |               `-ParenExpr 0x5654000ec618 <col:20, col:22> 'Node *' lvalue
    |                 `-DeclRefExpr 0x5654000ec5f0 <ltable.c:401:21> 'Node *' lvalue Var 0x5654000ec468 'mp' 'Node *'
    `-IntegerLiteral 0x5654000ec740 <./lua.h:74:19> 'int' 0
!([B15.17])
   T: [B15.18] || ...
   Preds (1): B16
   Succs (2): B13 B14

 [B0 (EXIT)]
   Preds (2): B1 B12
