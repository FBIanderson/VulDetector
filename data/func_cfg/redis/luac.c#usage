static void usage(const char *message)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1 (NORETURN)]
   1: DeclRefExpr 0x55759c9d9688 <luac.c:54:2> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
fprintf
   2: ImplicitCastExpr 0x55759c9d98d8 <luac.c:54:2> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9d9688 <col:2> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *, const char *, ...))
   3: DeclRefExpr 0x55759c9d96b0 </usr/include/stdio.h:143:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
stderr
   4: ImplicitCastExpr 0x55759c9d9938 </usr/include/stdio.h:143:16> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d96b0 <col:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FILE *)
   5: StringLiteral 0x55759c9d9718 <luac.c:55:2, line:63:2> 'char [275]' lvalue "usage: %s [options] [filenames].\nAvailable options are:\n  -        process stdin\n  -l       list\n  -o name  output to file 'name' (default is \"%s\")\n  -p       parse only\n  -s       strip debug information\n  -v       show version information\n  --       stop handling options\n"
"usage: %s [options] [filenames].\nAvailable options are:\n  -        process stdin\n  -l       list\n  -o name  output to file 'name' (default is \"%s\")\n  -p       parse only\n  -s       strip debug information\n  -v       show version information\n  --       stop handling options\n"
   6: ImplicitCastExpr 0x55759c9d9950 <luac.c:55:2, line:63:2> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9d9718 <line:55:2, line:63:2> 'char [275]' lvalue "usage: %s [options] [filenames].\nAvailable options are:\n  -        process stdin\n  -l       list\n  -o name  output to file 'name' (default is \"%s\")\n  -p       parse only\n  -s       strip debug information\n  -v       show version information\n  --       stop handling options\n"
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55759c9d9968 <luac.c:55:2, line:63:2> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9d9950 <line:55:2, line:63:2> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9d9718 <line:55:2, line:63:2> 'char [275]' lvalue "usage: %s [options] [filenames].\nAvailable options are:\n  -        process stdin\n  -l       list\n  -o name  output to file 'name' (default is \"%s\")\n  -p       parse only\n  -s       strip debug information\n  -v       show version information\n  --       stop handling options\n"
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x55759c9d9888 <luac.c:64:2> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
progname
   9: ImplicitCastExpr 0x55759c9d9980 <luac.c:64:2> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d9888 <col:2> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
[B1.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x55759c9d98b0 <luac.c:64:11> 'char [9]' lvalue Var 0x55759c86eb68 'Output' 'char [9]'
Output
  11: ImplicitCastExpr 0x55759c9d9998 <luac.c:64:11> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x55759c9d98b0 <col:11> 'char [9]' lvalue Var 0x55759c86eb68 'Output' 'char [9]'
[B1.10] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  12: CallExpr 0x55759c9d98f0 <luac.c:54:2, line:64:17> 'int'
|-ImplicitCastExpr 0x55759c9d98d8 <line:54:2> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9d9688 <col:2> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
|-ImplicitCastExpr 0x55759c9d9938 </usr/include/stdio.h:143:16> 'FILE *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9d96b0 <col:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
|-ImplicitCastExpr 0x55759c9d9968 <luac.c:55:2, line:63:2> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55759c9d9950 <line:55:2, line:63:2> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55759c9d9718 <line:55:2, line:63:2> 'char [275]' lvalue "usage: %s [options] [filenames].\nAvailable options are:\n  -        process stdin\n  -l       list\n  -o name  output to file 'name' (default is \"%s\")\n  -p       parse only\n  -s       strip debug information\n  -v       show version information\n  --       stop handling options\n"
|-ImplicitCastExpr 0x55759c9d9980 <line:64:2> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9d9888 <col:2> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
`-ImplicitCastExpr 0x55759c9d9998 <col:11> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x55759c9d98b0 <col:11> 'char [9]' lvalue Var 0x55759c86eb68 'Output' 'char [9]'
[B1.2]([B1.4], [B1.7], [B1.9], [B1.11])
  13: DeclRefExpr 0x55759c9d99b0 <luac.c:65:2> 'void (int) __attribute__((noreturn))' Function 0x55759c85cd48 'exit' 'void (int) __attribute__((noreturn))'
exit
  14: ImplicitCastExpr 0x55759c9d99f8 <luac.c:65:2> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9d99b0 <col:2> 'void (int) __attribute__((noreturn))' Function 0x55759c85cd48 'exit' 'void (int) __attribute__((noreturn))'
[B1.13] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int) __attribute__((noreturn)))
  15: IntegerLiteral 0x55759c9d99d8 </usr/include/stdlib.h:91:22> 'int' 1
1
  16: CallExpr 0x55759c9d9a10 <luac.c:65:2, col:19> 'void'
|-ImplicitCastExpr 0x55759c9d99f8 <col:2> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9d99b0 <col:2> 'void (int) __attribute__((noreturn))' Function 0x55759c85cd48 'exit' 'void (int) __attribute__((noreturn))'
`-IntegerLiteral 0x55759c9d99d8 </usr/include/stdlib.h:91:22> 'int' 1
[B1.14]([B1.15])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55759c9d94a8 <luac.c:53:3> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
fprintf
   2: ImplicitCastExpr 0x55759c9d9578 <luac.c:53:3> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9d94a8 <col:3> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *, const char *, ...))
   3: DeclRefExpr 0x55759c9d94d0 </usr/include/stdio.h:143:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
stderr
   4: ImplicitCastExpr 0x55759c9d95d8 </usr/include/stdio.h:143:16> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d94d0 <col:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
[B2.3] (ImplicitCastExpr, LValueToRValue, FILE *)
   5: StringLiteral 0x55759c9d94f8 <luac.c:53:18> 'char [8]' lvalue "%s: %s\n"
"%s: %s\n"
   6: ImplicitCastExpr 0x55759c9d95f0 <luac.c:53:18> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9d94f8 <col:18> 'char [8]' lvalue "%s: %s\n"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55759c9d9608 <luac.c:53:18> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9d95f0 <col:18> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9d94f8 <col:18> 'char [8]' lvalue "%s: %s\n"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x55759c9d9528 <luac.c:53:29> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
progname
   9: ImplicitCastExpr 0x55759c9d9620 <luac.c:53:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d9528 <col:29> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
[B2.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x55759c9d9550 <luac.c:53:38> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
message
  11: ImplicitCastExpr 0x55759c9d9638 <luac.c:53:38> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d9550 <col:38> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
[B2.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: CallExpr 0x55759c9d9590 <luac.c:53:3, col:45> 'int'
|-ImplicitCastExpr 0x55759c9d9578 <col:3> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9d94a8 <col:3> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
|-ImplicitCastExpr 0x55759c9d95d8 </usr/include/stdio.h:143:16> 'FILE *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9d94d0 <col:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
|-ImplicitCastExpr 0x55759c9d9608 <luac.c:53:18> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55759c9d95f0 <col:18> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55759c9d94f8 <col:18> 'char [8]' lvalue "%s: %s\n"
|-ImplicitCastExpr 0x55759c9d9620 <col:29> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9d9528 <col:29> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
`-ImplicitCastExpr 0x55759c9d9638 <col:38> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9d9550 <col:38> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
[B2.2]([B2.4], [B2.7], [B2.9], [B2.11])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55759c9d9298 <luac.c:51:3> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
fprintf
   2: ImplicitCastExpr 0x55759c9d93d0 <luac.c:51:3> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9d9298 <col:3> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *, const char *, ...))
   3: DeclRefExpr 0x55759c9d92c0 </usr/include/stdio.h:143:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
stderr
   4: ImplicitCastExpr 0x55759c9d9430 </usr/include/stdio.h:143:16> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d92c0 <col:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
[B3.3] (ImplicitCastExpr, LValueToRValue, FILE *)
   5: StringLiteral 0x55759c9d9328 <luac.c:51:18, col:52> 'char [30]' lvalue "%s: unrecognized option '%s'\n"
"%s: unrecognized option '%s'\n"
   6: ImplicitCastExpr 0x55759c9d9448 <luac.c:51:18, col:52> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9d9328 <col:18, col:52> 'char [30]' lvalue "%s: unrecognized option '%s'\n"
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55759c9d9460 <luac.c:51:18, col:52> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9d9448 <col:18, col:52> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9d9328 <col:18, col:52> 'char [30]' lvalue "%s: unrecognized option '%s'\n"
[B3.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x55759c9d9380 <luac.c:51:57> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
progname
   9: ImplicitCastExpr 0x55759c9d9478 <luac.c:51:57> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d9380 <col:57> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
[B3.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x55759c9d93a8 <luac.c:51:66> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
message
  11: ImplicitCastExpr 0x55759c9d9490 <luac.c:51:66> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c9d93a8 <col:66> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
[B3.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: CallExpr 0x55759c9d93e8 <luac.c:51:3, col:73> 'int'
|-ImplicitCastExpr 0x55759c9d93d0 <col:3> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9d9298 <col:3> 'int (FILE *, const char *, ...)' Function 0x55759c845618 'fprintf' 'int (FILE *, const char *, ...)'
|-ImplicitCastExpr 0x55759c9d9430 </usr/include/stdio.h:143:16> 'FILE *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9d92c0 <col:16> 'FILE *' lvalue Var 0x55759c83e608 'stderr' 'FILE *'
|-ImplicitCastExpr 0x55759c9d9460 <luac.c:51:18, col:52> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55759c9d9448 <col:18, col:52> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55759c9d9328 <col:18, col:52> 'char [30]' lvalue "%s: unrecognized option '%s'\n"
|-ImplicitCastExpr 0x55759c9d9478 <col:57> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9d9380 <col:57> 'const char *' lvalue Var 0x55759c86edb8 'progname' 'const char *'
`-ImplicitCastExpr 0x55759c9d9490 <col:66> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9d93a8 <col:66> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
[B3.2]([B3.4], [B3.7], [B3.9], [B3.11])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x55759c86fa00 <luac.c:50:7> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
message
   2: ImplicitCastExpr 0x55759c86fa28 <luac.c:50:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55759c86fa00 <col:7> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
[B4.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55759c86fa40 <luac.c:50:6, col:7> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55759c86fa28 <col:7> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55759c86fa00 <col:7> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
*[B4.2]
   4: ImplicitCastExpr 0x55759c86fa78 <luac.c:50:6, col:7> 'char' <LValueToRValue>
`-UnaryOperator 0x55759c86fa40 <col:6, col:7> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55759c86fa28 <col:7> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55759c86fa00 <col:7> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55759c86fa90 <luac.c:50:6, col:7> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55759c86fa78 <col:6, col:7> 'char' <LValueToRValue>
  `-UnaryOperator 0x55759c86fa40 <col:6, col:7> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55759c86fa28 <col:7> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55759c86fa00 <col:7> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
[B4.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x55759c86fa60 <luac.c:50:16> 'int' 45
'-'
   7: BinaryOperator 0x55759c9d9270 <luac.c:50:6, col:16> 'int' '=='
|-ImplicitCastExpr 0x55759c86fa90 <col:6, col:7> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55759c86fa78 <col:6, col:7> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55759c86fa40 <col:6, col:7> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55759c86fa28 <col:7> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55759c86fa00 <col:7> 'const char *' lvalue ParmVar 0x55759c86f8d0 'message' 'const char *'
`-CharacterLiteral 0x55759c86fa60 <col:16> 'int' 45
[B4.5] == [B4.6]
   T: if [B4.7]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1
