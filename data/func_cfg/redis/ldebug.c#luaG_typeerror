void luaG_typeerror(lua_State *L, const TValue *o, const char *op)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x555e9726e880 <ldebug.c:577:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x555e9726e998 <ldebug.c:577:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e9726e880 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x555e9726e8a8 <ldebug.c:577:19> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9726e9f8 <ldebug.c:577:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e8a8 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x555e9726e908 <ldebug.c:577:22> 'char [25]' lvalue "attempt to %s a %s value"
"attempt to %s a %s value"
   6: ImplicitCastExpr 0x555e9726ea10 <ldebug.c:577:22> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e9726e908 <col:22> 'char [25]' lvalue "attempt to %s a %s value"
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x555e9726ea28 <ldebug.c:577:22> 'const char *' <BitCast>
`-ImplicitCastExpr 0x555e9726ea10 <col:22> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e9726e908 <col:22> 'char [25]' lvalue "attempt to %s a %s value"
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x555e9726e948 <ldebug.c:577:50> 'const char *' lvalue ParmVar 0x555e9726d9e0 'op' 'const char *'
op
   9: ImplicitCastExpr 0x555e9726ea40 <ldebug.c:577:50> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e948 <col:50> 'const char *' lvalue ParmVar 0x555e9726d9e0 'op' 'const char *'
[B1.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x555e9726e970 <ldebug.c:577:54> 'const char *' lvalue Var 0x555e9726dcb8 't' 'const char *'
t
  11: ImplicitCastExpr 0x555e9726ea58 <ldebug.c:577:54> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e970 <col:54> 'const char *' lvalue Var 0x555e9726dcb8 't' 'const char *'
[B1.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: CallExpr 0x555e9726e9b0 <ldebug.c:577:5, col:55> 'void'
|-ImplicitCastExpr 0x555e9726e998 <col:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e9726e880 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x555e9726e9f8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e8a8 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e9726ea28 <col:22> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x555e9726ea10 <col:22> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x555e9726e908 <col:22> 'char [25]' lvalue "attempt to %s a %s value"
|-ImplicitCastExpr 0x555e9726ea40 <col:50> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e948 <col:50> 'const char *' lvalue ParmVar 0x555e9726d9e0 'op' 'const char *'
`-ImplicitCastExpr 0x555e9726ea58 <col:54> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726e970 <col:54> 'const char *' lvalue Var 0x555e9726dcb8 't' 'const char *'
[B1.2]([B1.4], [B1.7], [B1.9], [B1.11])
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e9726e580 <ldebug.c:574:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x555e9726e768 <ldebug.c:574:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e9726e580 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x555e9726e5a8 <ldebug.c:574:19> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9726e7d8 <ldebug.c:574:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e5a8 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x555e9726e608 <ldebug.c:574:22, col:49> 'char [35]' lvalue "attempt to %s %s '%s' (a %s value)"
"attempt to %s %s '%s' (a %s value)"
   6: ImplicitCastExpr 0x555e9726e7f0 <ldebug.c:574:22, col:49> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e9726e608 <col:22, col:49> 'char [35]' lvalue "attempt to %s %s '%s' (a %s value)"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x555e9726e808 <ldebug.c:574:22, col:49> 'const char *' <BitCast>
`-ImplicitCastExpr 0x555e9726e7f0 <col:22, col:49> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e9726e608 <col:22, col:49> 'char [35]' lvalue "attempt to %s %s '%s' (a %s value)"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x555e9726e668 <ldebug.c:575:17> 'const char *' lvalue ParmVar 0x555e9726d9e0 'op' 'const char *'
op
   9: ImplicitCastExpr 0x555e9726e820 <ldebug.c:575:17> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e668 <col:17> 'const char *' lvalue ParmVar 0x555e9726d9e0 'op' 'const char *'
[B2.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x555e9726e690 <ldebug.c:575:21> 'const char *' lvalue Var 0x555e9726ded8 'kind' 'const char *'
kind
  11: ImplicitCastExpr 0x555e9726e838 <ldebug.c:575:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e690 <col:21> 'const char *' lvalue Var 0x555e9726ded8 'kind' 'const char *'
[B2.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: DeclRefExpr 0x555e9726e6b8 <ldebug.c:575:27> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
name
  13: ImplicitCastExpr 0x555e9726e850 <ldebug.c:575:27> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e6b8 <col:27> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
[B2.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: DeclRefExpr 0x555e9726e6e0 <ldebug.c:575:33> 'const char *' lvalue Var 0x555e9726dcb8 't' 'const char *'
t
  15: ImplicitCastExpr 0x555e9726e868 <ldebug.c:575:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e6e0 <col:33> 'const char *' lvalue Var 0x555e9726dcb8 't' 'const char *'
[B2.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: CallExpr 0x555e9726e780 <ldebug.c:574:5, line:575:34> 'void'
|-ImplicitCastExpr 0x555e9726e768 <line:574:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e9726e580 <col:5> 'void (lua_State *, const char *, ...)' Function 0x555e97218d30 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x555e9726e7d8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e5a8 <col:19> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e9726e808 <col:22, col:49> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x555e9726e7f0 <col:22, col:49> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x555e9726e608 <col:22, col:49> 'char [35]' lvalue "attempt to %s %s '%s' (a %s value)"
|-ImplicitCastExpr 0x555e9726e820 <line:575:17> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e668 <col:17> 'const char *' lvalue ParmVar 0x555e9726d9e0 'op' 'const char *'
|-ImplicitCastExpr 0x555e9726e838 <col:21> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e690 <col:21> 'const char *' lvalue Var 0x555e9726ded8 'kind' 'const char *'
|-ImplicitCastExpr 0x555e9726e850 <col:27> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e6b8 <col:27> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
`-ImplicitCastExpr 0x555e9726e868 <col:33> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726e6e0 <col:33> 'const char *' lvalue Var 0x555e9726dcb8 't' 'const char *'
[B2.2]([B2.4], [B2.7], [B2.9], [B2.11], [B2.13], [B2.15])
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: ConditionalOperator 0x555e9726e4f8 <ldebug.c:570:22, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'const char *'
|-ParenExpr 0x555e9726e0d8 <ldebug.c:570:22, col:42> 'int'
| `-CallExpr 0x555e9726e070 <col:23, col:41> 'int'
|   |-ImplicitCastExpr 0x555e9726e058 <col:23> 'int (*)(CallInfo *, const TValue *)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x555e9726df38 <col:23> 'int (CallInfo *, const TValue *)' Function 0x555e9726d3c8 'isinstack' 'int (CallInfo *, const TValue *)'
|   |-ImplicitCastExpr 0x555e9726e0a8 <col:33, col:36> 'CallInfo *' <LValueToRValue>
|   | `-MemberExpr 0x555e9726dfa0 <col:33, col:36> 'CallInfo *' lvalue ->ci 0x555e97213568
|   |   `-ImplicitCastExpr 0x555e9726df88 <col:33> 'lua_State *' <LValueToRValue>
|   |     `-DeclRefExpr 0x555e9726df60 <col:33> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
|   `-ImplicitCastExpr 0x555e9726e0c0 <col:40> 'const TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x555e9726dfd8 <col:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
|-CallExpr 0x555e9726e3e8 <line:571:26, col:75> 'const char *'
| |-ImplicitCastExpr 0x555e9726e3d0 <col:26> 'const char *(*)(lua_State *, CallInfo *, int, const char **)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x555e9726e0f8 <col:26> 'const char *(lua_State *, CallInfo *, int, const char **)' Function 0x555e972653a8 'getobjname' 'const char *(lua_State *, CallInfo *, int, const char **)'
| |-ImplicitCastExpr 0x555e9726e430 <col:37> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x555e9726e120 <col:37> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
| |-ImplicitCastExpr 0x555e9726e448 <col:40, col:43> 'CallInfo *' <LValueToRValue>
| | `-MemberExpr 0x555e9726e188 <col:40, col:43> 'CallInfo *' lvalue ->ci 0x555e97213568
| |   `-ImplicitCastExpr 0x555e9726e170 <col:40> 'lua_State *' <LValueToRValue>
| |     `-DeclRefExpr 0x555e9726e148 <col:40> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
| |-ParenExpr 0x555e9726e368 <./llimits.h:75:22, col:31> 'int'
| | `-CStyleCastExpr 0x555e9726e340 <col:23, col:30> 'int' <IntegralCast>
| |   `-ParenExpr 0x555e9726e320 <col:26, col:30> 'long'
| |     `-ParenExpr 0x555e9726e2b8 <line:80:31, col:33> 'long'
| |       `-BinaryOperator 0x555e9726e290 <ldebug.c:571:56, col:63> 'long' '-'
| |         |-ImplicitCastExpr 0x555e9726e260 <col:56> 'const TValue *' <LValueToRValue>
| |         | `-DeclRefExpr 0x555e9726e1c0 <col:56> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
| |         `-ImplicitCastExpr 0x555e9726e278 <col:60, col:63> 'StkId':'TValue *' <LValueToRValue>
| |           `-MemberExpr 0x555e9726e228 <col:60, col:63> 'StkId':'TValue *' lvalue ->base 0x555e972133c0
| |             `-ImplicitCastExpr 0x555e9726e210 <col:60> 'lua_State *' <LValueToRValue>
| |               `-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
| `-UnaryOperator 0x555e9726e3b0 <col:70, col:71> 'const char **' prefix '&'
|   `-DeclRefExpr 0x555e9726e388 <col:71> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
`-ImplicitCastExpr 0x555e9726e4e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x555e9726e4c0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x555e9726e498 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x555e9726e460 <col:24> 'int' 0
([B6.22]) ? [B4.19] : [B5.3]
   2: DeclStmt 0x555e9726e528 <ldebug.c:570:3, line:572:30>line:570:15
`-VarDecl 0x555e9726ded8 <col:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> ldebug.c:570:15 used kind 'const char *' cinit
  `-ConditionalOperator 0x555e9726e4f8 <col:22, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'const char *'
    |-ParenExpr 0x555e9726e0d8 <ldebug.c:570:22, col:42> 'int'
    | `-CallExpr 0x555e9726e070 <col:23, col:41> 'int'
    |   |-ImplicitCastExpr 0x555e9726e058 <col:23> 'int (*)(CallInfo *, const TValue *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x555e9726df38 <col:23> 'int (CallInfo *, const TValue *)' Function 0x555e9726d3c8 'isinstack' 'int (CallInfo *, const TValue *)'
    |   |-ImplicitCastExpr 0x555e9726e0a8 <col:33, col:36> 'CallInfo *' <LValueToRValue>
    |   | `-MemberExpr 0x555e9726dfa0 <col:33, col:36> 'CallInfo *' lvalue ->ci 0x555e97213568
    |   |   `-ImplicitCastExpr 0x555e9726df88 <col:33> 'lua_State *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555e9726df60 <col:33> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
    |   `-ImplicitCastExpr 0x555e9726e0c0 <col:40> 'const TValue *' <LValueToRValue>
    |     `-DeclRefExpr 0x555e9726dfd8 <col:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
    |-CallExpr 0x555e9726e3e8 <line:571:26, col:75> 'const char *'
    | |-ImplicitCastExpr 0x555e9726e3d0 <col:26> 'const char *(*)(lua_State *, CallInfo *, int, const char **)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555e9726e0f8 <col:26> 'const char *(lua_State *, CallInfo *, int, const char **)' Function 0x555e972653a8 'getobjname' 'const char *(lua_State *, CallInfo *, int, const char **)'
    | |-ImplicitCastExpr 0x555e9726e430 <col:37> 'lua_State *' <LValueToRValue>
    | | `-DeclRefExpr 0x555e9726e120 <col:37> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
    | |-ImplicitCastExpr 0x555e9726e448 <col:40, col:43> 'CallInfo *' <LValueToRValue>
    | | `-MemberExpr 0x555e9726e188 <col:40, col:43> 'CallInfo *' lvalue ->ci 0x555e97213568
    | |   `-ImplicitCastExpr 0x555e9726e170 <col:40> 'lua_State *' <LValueToRValue>
    | |     `-DeclRefExpr 0x555e9726e148 <col:40> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
    | |-ParenExpr 0x555e9726e368 <./llimits.h:75:22, col:31> 'int'
    | | `-CStyleCastExpr 0x555e9726e340 <col:23, col:30> 'int' <IntegralCast>
    | |   `-ParenExpr 0x555e9726e320 <col:26, col:30> 'long'
    | |     `-ParenExpr 0x555e9726e2b8 <line:80:31, col:33> 'long'
    | |       `-BinaryOperator 0x555e9726e290 <ldebug.c:571:56, col:63> 'long' '-'
    | |         |-ImplicitCastExpr 0x555e9726e260 <col:56> 'const TValue *' <LValueToRValue>
    | |         | `-DeclRefExpr 0x555e9726e1c0 <col:56> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
    | |         `-ImplicitCastExpr 0x555e9726e278 <col:60, col:63> 'StkId':'TValue *' <LValueToRValue>
    | |           `-MemberExpr 0x555e9726e228 <col:60, col:63> 'StkId':'TValue *' lvalue ->base 0x555e972133c0
    | |             `-ImplicitCastExpr 0x555e9726e210 <col:60> 'lua_State *' <LValueToRValue>
    | |               `-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
    | `-UnaryOperator 0x555e9726e3b0 <col:70, col:71> 'const char **' prefix '&'
    |   `-DeclRefExpr 0x555e9726e388 <col:71> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
    `-ImplicitCastExpr 0x555e9726e4e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
      `-ParenExpr 0x555e9726e4c0 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x555e9726e498 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x555e9726e460 <col:24> 'int' 0
const char *kind = (isinstack(L->ci, o)) ? getobjname(L, L->ci, ((int)((o - L->base))), &name) : ((void *)0);
   3: DeclRefExpr 0x555e9726e540 <ldebug.c:573:7> 'const char *' lvalue Var 0x555e9726ded8 'kind' 'const char *'
kind
   4: ImplicitCastExpr 0x555e9726e568 <ldebug.c:573:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e540 <col:7> 'const char *' lvalue Var 0x555e9726ded8 'kind' 'const char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, const char *)
   T: if [B3.4]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x555e9726e0f8 <ldebug.c:571:26> 'const char *(lua_State *, CallInfo *, int, const char **)' Function 0x555e972653a8 'getobjname' 'const char *(lua_State *, CallInfo *, int, const char **)'
getobjname
   2: ImplicitCastExpr 0x555e9726e3d0 <ldebug.c:571:26> 'const char *(*)(lua_State *, CallInfo *, int, const char **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e9726e0f8 <col:26> 'const char *(lua_State *, CallInfo *, int, const char **)' Function 0x555e972653a8 'getobjname' 'const char *(lua_State *, CallInfo *, int, const char **)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, CallInfo *, int, const char **))
   3: DeclRefExpr 0x555e9726e120 <ldebug.c:571:37> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9726e430 <ldebug.c:571:37> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e120 <col:37> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x555e9726e148 <ldebug.c:571:40> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x555e9726e170 <ldebug.c:571:40> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e148 <col:40> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x555e9726e188 <ldebug.c:571:40, col:43> 'CallInfo *' lvalue ->ci 0x555e97213568
`-ImplicitCastExpr 0x555e9726e170 <col:40> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726e148 <col:40> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.6]->ci
   8: ImplicitCastExpr 0x555e9726e448 <ldebug.c:571:40, col:43> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e9726e188 <col:40, col:43> 'CallInfo *' lvalue ->ci 0x555e97213568
  `-ImplicitCastExpr 0x555e9726e170 <col:40> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9726e148 <col:40> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.7] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   9: DeclRefExpr 0x555e9726e1c0 <ldebug.c:571:56> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
o
  10: ImplicitCastExpr 0x555e9726e260 <ldebug.c:571:56> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e1c0 <col:56> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
[B4.9] (ImplicitCastExpr, LValueToRValue, const TValue *)
  11: DeclRefExpr 0x555e9726e1e8 <ldebug.c:571:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x555e9726e210 <ldebug.c:571:60> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: MemberExpr 0x555e9726e228 <ldebug.c:571:60, col:63> 'StkId':'TValue *' lvalue ->base 0x555e972133c0
`-ImplicitCastExpr 0x555e9726e210 <col:60> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.12]->base
  14: ImplicitCastExpr 0x555e9726e278 <ldebug.c:571:60, col:63> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x555e9726e228 <col:60, col:63> 'StkId':'TValue *' lvalue ->base 0x555e972133c0
  `-ImplicitCastExpr 0x555e9726e210 <col:60> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.13] (ImplicitCastExpr, LValueToRValue, StkId)
  15: BinaryOperator 0x555e9726e290 <ldebug.c:571:56, col:63> 'long' '-'
|-ImplicitCastExpr 0x555e9726e260 <col:56> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e1c0 <col:56> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
`-ImplicitCastExpr 0x555e9726e278 <col:60, col:63> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x555e9726e228 <col:60, col:63> 'StkId':'TValue *' lvalue ->base 0x555e972133c0
    `-ImplicitCastExpr 0x555e9726e210 <col:60> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B4.10] - [B4.14]
  16: CStyleCastExpr 0x555e9726e340 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x555e9726e320 <col:26, col:30> 'long'
  `-ParenExpr 0x555e9726e2b8 <line:80:31, col:33> 'long'
    `-BinaryOperator 0x555e9726e290 <ldebug.c:571:56, col:63> 'long' '-'
      |-ImplicitCastExpr 0x555e9726e260 <col:56> 'const TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x555e9726e1c0 <col:56> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
      `-ImplicitCastExpr 0x555e9726e278 <col:60, col:63> 'StkId':'TValue *' <LValueToRValue>
        `-MemberExpr 0x555e9726e228 <col:60, col:63> 'StkId':'TValue *' lvalue ->base 0x555e972133c0
          `-ImplicitCastExpr 0x555e9726e210 <col:60> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
(int)(([B4.15])) (CStyleCastExpr, IntegralCast, int)
  17: DeclRefExpr 0x555e9726e388 <ldebug.c:571:71> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
name
  18: UnaryOperator 0x555e9726e3b0 <ldebug.c:571:70, col:71> 'const char **' prefix '&'
`-DeclRefExpr 0x555e9726e388 <col:71> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
&[B4.17]
  19: CallExpr 0x555e9726e3e8 <ldebug.c:571:26, col:75> 'const char *'
|-ImplicitCastExpr 0x555e9726e3d0 <col:26> 'const char *(*)(lua_State *, CallInfo *, int, const char **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e9726e0f8 <col:26> 'const char *(lua_State *, CallInfo *, int, const char **)' Function 0x555e972653a8 'getobjname' 'const char *(lua_State *, CallInfo *, int, const char **)'
|-ImplicitCastExpr 0x555e9726e430 <col:37> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e9726e120 <col:37> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e9726e448 <col:40, col:43> 'CallInfo *' <LValueToRValue>
| `-MemberExpr 0x555e9726e188 <col:40, col:43> 'CallInfo *' lvalue ->ci 0x555e97213568
|   `-ImplicitCastExpr 0x555e9726e170 <col:40> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x555e9726e148 <col:40> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
|-ParenExpr 0x555e9726e368 <./llimits.h:75:22, col:31> 'int'
| `-CStyleCastExpr 0x555e9726e340 <col:23, col:30> 'int' <IntegralCast>
|   `-ParenExpr 0x555e9726e320 <col:26, col:30> 'long'
|     `-ParenExpr 0x555e9726e2b8 <line:80:31, col:33> 'long'
|       `-BinaryOperator 0x555e9726e290 <ldebug.c:571:56, col:63> 'long' '-'
|         |-ImplicitCastExpr 0x555e9726e260 <col:56> 'const TValue *' <LValueToRValue>
|         | `-DeclRefExpr 0x555e9726e1c0 <col:56> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
|         `-ImplicitCastExpr 0x555e9726e278 <col:60, col:63> 'StkId':'TValue *' <LValueToRValue>
|           `-MemberExpr 0x555e9726e228 <col:60, col:63> 'StkId':'TValue *' lvalue ->base 0x555e972133c0
|             `-ImplicitCastExpr 0x555e9726e210 <col:60> 'lua_State *' <LValueToRValue>
|               `-DeclRefExpr 0x555e9726e1e8 <col:60> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
`-UnaryOperator 0x555e9726e3b0 <col:70, col:71> 'const char **' prefix '&'
  `-DeclRefExpr 0x555e9726e388 <col:71> 'const char *' lvalue Var 0x555e9726db90 'name' 'const char *'
[B4.2]([B4.4], [B4.8], ([B4.16]), [B4.18])
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: IntegerLiteral 0x555e9726e460 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x555e9726e498 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e9726e460 <col:24> 'int' 0
(void *)[B5.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x555e9726e4e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x555e9726e4c0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e9726e498 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e9726e460 <col:24> 'int' 0
([B5.2]) (ImplicitCastExpr, NullToPointer, const char *)
   Preds (1): B6
   Succs (1): B3

 [B6]
   1: IntegerLiteral 0x555e9726dbf0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x555e9726dc28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e9726dbf0 <col:24> 'int' 0
(void *)[B6.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x555e9726dc70 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x555e9726dc50 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e9726dc28 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e9726dbf0 <col:24> 'int' 0
([B6.2]) (ImplicitCastExpr, NullToPointer, const char *)
   4: DeclStmt 0x555e9726dc88 <ldebug.c:568:3, col:26>col:15
`-VarDecl 0x555e9726db90 <col:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> ldebug.c:568:15 used name 'const char *' cinit
  `-ImplicitCastExpr 0x555e9726dc70 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
    `-ParenExpr 0x555e9726dc50 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x555e9726dc28 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x555e9726dbf0 <col:24> 'int' 0
const char *name = ((void *)0);
   5: DeclRefExpr 0x555e9726dd18 <ldebug.c:569:19> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
luaT_typenames
   6: ImplicitCastExpr 0x555e9726de38 <ldebug.c:569:19> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x555e9726dd18 <col:19> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
[B6.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
   7: DeclRefExpr 0x555e9726dd40 <ldebug.c:569:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
o
   8: ImplicitCastExpr 0x555e9726dda0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x555e9726dd80 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x555e9726dd40 <ldebug.c:569:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
([B6.7]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: MemberExpr 0x555e9726ddb8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e9726dda0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x555e9726dd80 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x555e9726dd40 <ldebug.c:569:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
[B6.8]->tt
  10: ImplicitCastExpr 0x555e9726de50 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x555e9726ddf0 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x555e9726ddb8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
    `-ImplicitCastExpr 0x555e9726dda0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x555e9726dd80 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x555e9726dd40 <ldebug.c:569:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
([B6.9]) (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x555e9726de68 <ldebug.c:569:19, col:42> 'const char *const' lvalue
|-ImplicitCastExpr 0x555e9726de38 <col:19> 'const char *const *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x555e9726dd18 <col:19> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
`-ImplicitCastExpr 0x555e9726de50 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
  `-ParenExpr 0x555e9726ddf0 <col:18, col:26> 'const int' lvalue
    `-MemberExpr 0x555e9726ddb8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
      `-ImplicitCastExpr 0x555e9726dda0 <col:19, col:21> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x555e9726dd80 <col:19, col:21> 'const TValue *' lvalue
          `-DeclRefExpr 0x555e9726dd40 <ldebug.c:569:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
[B6.6][[B6.10]]
  12: ImplicitCastExpr 0x555e9726de90 <ldebug.c:569:19, col:42> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x555e9726de68 <col:19, col:42> 'const char *const' lvalue
  |-ImplicitCastExpr 0x555e9726de38 <col:19> 'const char *const *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x555e9726dd18 <col:19> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
  `-ImplicitCastExpr 0x555e9726de50 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    `-ParenExpr 0x555e9726ddf0 <col:18, col:26> 'const int' lvalue
      `-MemberExpr 0x555e9726ddb8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
        `-ImplicitCastExpr 0x555e9726dda0 <col:19, col:21> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x555e9726dd80 <col:19, col:21> 'const TValue *' lvalue
            `-DeclRefExpr 0x555e9726dd40 <ldebug.c:569:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
[B6.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: DeclStmt 0x555e9726dea8 <ldebug.c:569:3, col:43>col:15
`-VarDecl 0x555e9726dcb8 <col:3, col:42> col:15 used t 'const char *' cinit
  `-ImplicitCastExpr 0x555e9726de90 <col:19, col:42> 'const char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x555e9726de68 <col:19, col:42> 'const char *const' lvalue
      |-ImplicitCastExpr 0x555e9726de38 <col:19> 'const char *const *' <ArrayToPointerDecay>
      | `-DeclRefExpr 0x555e9726dd18 <col:19> 'const char *const []' lvalue Var 0x555e9720cbe8 'luaT_typenames' 'const char *const []'
      `-ImplicitCastExpr 0x555e9726de50 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
        `-ParenExpr 0x555e9726ddf0 <col:18, col:26> 'const int' lvalue
          `-MemberExpr 0x555e9726ddb8 <col:19, col:24> 'const int' lvalue ->tt 0x555e971cc5b0
            `-ImplicitCastExpr 0x555e9726dda0 <col:19, col:21> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x555e9726dd80 <col:19, col:21> 'const TValue *' lvalue
                `-DeclRefExpr 0x555e9726dd40 <ldebug.c:569:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
const char *t = luaT_typenames[((o)->tt)];
  14: DeclRefExpr 0x555e9726df38 <ldebug.c:570:23> 'int (CallInfo *, const TValue *)' Function 0x555e9726d3c8 'isinstack' 'int (CallInfo *, const TValue *)'
isinstack
  15: ImplicitCastExpr 0x555e9726e058 <ldebug.c:570:23> 'int (*)(CallInfo *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e9726df38 <col:23> 'int (CallInfo *, const TValue *)' Function 0x555e9726d3c8 'isinstack' 'int (CallInfo *, const TValue *)'
[B6.14] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(CallInfo *, const TValue *))
  16: DeclRefExpr 0x555e9726df60 <ldebug.c:570:33> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x555e9726df88 <ldebug.c:570:33> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9726df60 <col:33> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B6.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: MemberExpr 0x555e9726dfa0 <ldebug.c:570:33, col:36> 'CallInfo *' lvalue ->ci 0x555e97213568
`-ImplicitCastExpr 0x555e9726df88 <col:33> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726df60 <col:33> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B6.17]->ci
  19: ImplicitCastExpr 0x555e9726e0a8 <ldebug.c:570:33, col:36> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e9726dfa0 <col:33, col:36> 'CallInfo *' lvalue ->ci 0x555e97213568
  `-ImplicitCastExpr 0x555e9726df88 <col:33> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9726df60 <col:33> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
[B6.18] (ImplicitCastExpr, LValueToRValue, CallInfo *)
  20: DeclRefExpr 0x555e9726dfd8 <ldebug.c:570:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
o
  21: ImplicitCastExpr 0x555e9726e0c0 <ldebug.c:570:40> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x555e9726dfd8 <col:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
[B6.20] (ImplicitCastExpr, LValueToRValue, const TValue *)
  22: CallExpr 0x555e9726e070 <ldebug.c:570:23, col:41> 'int'
|-ImplicitCastExpr 0x555e9726e058 <col:23> 'int (*)(CallInfo *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e9726df38 <col:23> 'int (CallInfo *, const TValue *)' Function 0x555e9726d3c8 'isinstack' 'int (CallInfo *, const TValue *)'
|-ImplicitCastExpr 0x555e9726e0a8 <col:33, col:36> 'CallInfo *' <LValueToRValue>
| `-MemberExpr 0x555e9726dfa0 <col:33, col:36> 'CallInfo *' lvalue ->ci 0x555e97213568
|   `-ImplicitCastExpr 0x555e9726df88 <col:33> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x555e9726df60 <col:33> 'lua_State *' lvalue ParmVar 0x555e9726d8f8 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e9726e0c0 <col:40> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x555e9726dfd8 <col:40> 'const TValue *' lvalue ParmVar 0x555e9726d968 'o' 'const TValue *'
[B6.15]([B6.19], [B6.21])
   T: ([B6.22]) ? ... : ...
   Preds (1): B7
   Succs (2): B4 B5

 [B0 (EXIT)]
   Preds (2): B1 B2
