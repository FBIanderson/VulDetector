static int redisContextTimeoutMsec(redisContext *c, long *result)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x55f752fd7c60 <net.c:237:15> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
msec
   2: ImplicitCastExpr 0x55f752fd7c88 <net.c:237:15> 'long' <LValueToRValue>
`-DeclRefExpr 0x55f752fd7c60 <col:15> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
[B1.1] (ImplicitCastExpr, LValueToRValue, long)
   3: DeclRefExpr 0x55f752fd7c00 <net.c:237:6> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
result
   4: ImplicitCastExpr 0x55f752fd7c28 <net.c:237:6> 'long *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd7c00 <col:6> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
[B1.3] (ImplicitCastExpr, LValueToRValue, long *)
   5: UnaryOperator 0x55f752fd7c40 <net.c:237:5, col:6> 'long' lvalue prefix '*'
`-ImplicitCastExpr 0x55f752fd7c28 <col:6> 'long *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd7c00 <col:6> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
*[B1.4]
   6: BinaryOperator 0x55f752fd7ca0 <net.c:237:5, col:15> 'long' '='
|-UnaryOperator 0x55f752fd7c40 <col:5, col:6> 'long' lvalue prefix '*'
| `-ImplicitCastExpr 0x55f752fd7c28 <col:6> 'long *' <LValueToRValue>
|   `-DeclRefExpr 0x55f752fd7c00 <col:6> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
`-ImplicitCastExpr 0x55f752fd7c88 <col:15> 'long' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd7c60 <col:15> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
[B1.5] = [B1.2]
   7: IntegerLiteral 0x55f752fd7cc8 <./read.h:38:18> 'int' 0
0
   8: ReturnStmt 0x55f752fd7ce8 <net.c:238:5, ./read.h:38:18>
`-IntegerLiteral 0x55f752fd7cc8 <col:18> 'int' 0
return [B1.7];
   Preds (3): B2 B3 B8
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55f752fd7af0 <<built-in>:38:21> 'int' 2147483647
2147483647
   2: ImplicitCastExpr 0x55f752fd7b10 <<built-in>:38:21> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd7af0 <col:21> 'int' 2147483647
[B2.1] (ImplicitCastExpr, IntegralCast, long)
   3: DeclRefExpr 0x55f752fd7ac8 <net.c:233:13> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
msec
   4: BinaryOperator 0x55f752fd7b28 <net.c:233:13, <built-in>:38:21> 'long' '='
|-DeclRefExpr 0x55f752fd7ac8 <net.c:233:13> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
`-ImplicitCastExpr 0x55f752fd7b10 <<built-in>:38:21> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd7af0 <col:21> 'int' 2147483647
[B2.3] = [B2.2]
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55f752fd7a00 <net.c:232:25> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
msec
   2: ImplicitCastExpr 0x55f752fd7a48 <net.c:232:25> 'long' <LValueToRValue>
`-DeclRefExpr 0x55f752fd7a00 <col:25> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
[B3.1] (ImplicitCastExpr, LValueToRValue, long)
   3: IntegerLiteral 0x55f752fd7a28 <<built-in>:38:21> 'int' 2147483647
2147483647
   4: ImplicitCastExpr 0x55f752fd7a60 <<built-in>:38:21> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd7a28 <col:21> 'int' 2147483647
[B3.3] (ImplicitCastExpr, IntegralCast, long)
   5: BinaryOperator 0x55f752fd7a78 <net.c:232:25, <built-in>:38:21> 'int' '>'
|-ImplicitCastExpr 0x55f752fd7a48 <net.c:232:25> 'long' <LValueToRValue>
| `-DeclRefExpr 0x55f752fd7a00 <col:25> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
`-ImplicitCastExpr 0x55f752fd7a60 <<built-in>:38:21> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd7a28 <col:21> 'int' 2147483647
[B3.2] > [B3.4]
   T: if [B4.25] || [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55f752fd7670 <net.c:230:17> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
timeout
   2: ImplicitCastExpr 0x55f752fd7698 <net.c:230:17> 'const struct timeval *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd7670 <col:17> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B4.1] (ImplicitCastExpr, LValueToRValue, const struct timeval *)
   3: MemberExpr 0x55f752fd76b0 <net.c:230:17, col:26> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
`-ImplicitCastExpr 0x55f752fd7698 <col:17> 'const struct timeval *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd7670 <col:17> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B4.2]->tv_sec
   4: ImplicitCastExpr 0x55f752fd7708 <net.c:230:17, col:26> '__time_t':'long' <LValueToRValue>
`-MemberExpr 0x55f752fd76b0 <col:17, col:26> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
  `-ImplicitCastExpr 0x55f752fd7698 <col:17> 'const struct timeval *' <LValueToRValue>
    `-DeclRefExpr 0x55f752fd7670 <col:17> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B4.3] (ImplicitCastExpr, LValueToRValue, __time_t)
   5: IntegerLiteral 0x55f752fd76e8 <net.c:230:35> 'int' 1000
1000
   6: ImplicitCastExpr 0x55f752fd7720 <net.c:230:35> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd76e8 <col:35> 'int' 1000
[B4.5] (ImplicitCastExpr, IntegralCast, long)
   7: BinaryOperator 0x55f752fd7738 <net.c:230:17, col:35> 'long' '*'
|-ImplicitCastExpr 0x55f752fd7708 <col:17, col:26> '__time_t':'long' <LValueToRValue>
| `-MemberExpr 0x55f752fd76b0 <col:17, col:26> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
|   `-ImplicitCastExpr 0x55f752fd7698 <col:17> 'const struct timeval *' <LValueToRValue>
|     `-DeclRefExpr 0x55f752fd7670 <col:17> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
`-ImplicitCastExpr 0x55f752fd7720 <col:35> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd76e8 <col:35> 'int' 1000
[B4.4] * [B4.6]
   8: DeclRefExpr 0x55f752fd7780 <net.c:230:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
timeout
   9: ImplicitCastExpr 0x55f752fd77a8 <net.c:230:45> 'const struct timeval *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd7780 <col:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B4.8] (ImplicitCastExpr, LValueToRValue, const struct timeval *)
  10: MemberExpr 0x55f752fd77c0 <net.c:230:45, col:54> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
`-ImplicitCastExpr 0x55f752fd77a8 <col:45> 'const struct timeval *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd7780 <col:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B4.9]->tv_usec
  11: ImplicitCastExpr 0x55f752fd7818 <net.c:230:45, col:54> '__suseconds_t':'long' <LValueToRValue>
`-MemberExpr 0x55f752fd77c0 <col:45, col:54> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
  `-ImplicitCastExpr 0x55f752fd77a8 <col:45> 'const struct timeval *' <LValueToRValue>
    `-DeclRefExpr 0x55f752fd7780 <col:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B4.10] (ImplicitCastExpr, LValueToRValue, __suseconds_t)
  12: IntegerLiteral 0x55f752fd77f8 <net.c:230:64> 'int' 999
999
  13: ImplicitCastExpr 0x55f752fd7830 <net.c:230:64> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd77f8 <col:64> 'int' 999
[B4.12] (ImplicitCastExpr, IntegralCast, long)
  14: BinaryOperator 0x55f752fd7848 <net.c:230:45, col:64> 'long' '+'
|-ImplicitCastExpr 0x55f752fd7818 <col:45, col:54> '__suseconds_t':'long' <LValueToRValue>
| `-MemberExpr 0x55f752fd77c0 <col:45, col:54> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
|   `-ImplicitCastExpr 0x55f752fd77a8 <col:45> 'const struct timeval *' <LValueToRValue>
|     `-DeclRefExpr 0x55f752fd7780 <col:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
`-ImplicitCastExpr 0x55f752fd7830 <col:64> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd77f8 <col:64> 'int' 999
[B4.11] + [B4.13]
  15: IntegerLiteral 0x55f752fd7890 <net.c:230:71> 'int' 1000
1000
  16: ImplicitCastExpr 0x55f752fd78b0 <net.c:230:71> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd7890 <col:71> 'int' 1000
[B4.15] (ImplicitCastExpr, IntegralCast, long)
  17: BinaryOperator 0x55f752fd78c8 <net.c:230:44, col:71> 'long' '/'
|-ParenExpr 0x55f752fd7870 <col:44, col:67> 'long'
| `-BinaryOperator 0x55f752fd7848 <col:45, col:64> 'long' '+'
|   |-ImplicitCastExpr 0x55f752fd7818 <col:45, col:54> '__suseconds_t':'long' <LValueToRValue>
|   | `-MemberExpr 0x55f752fd77c0 <col:45, col:54> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
|   |   `-ImplicitCastExpr 0x55f752fd77a8 <col:45> 'const struct timeval *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f752fd7780 <col:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
|   `-ImplicitCastExpr 0x55f752fd7830 <col:64> 'long' <IntegralCast>
|     `-IntegerLiteral 0x55f752fd77f8 <col:64> 'int' 999
`-ImplicitCastExpr 0x55f752fd78b0 <col:71> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd7890 <col:71> 'int' 1000
([B4.14]) / [B4.16]
  18: BinaryOperator 0x55f752fd7910 <net.c:230:16, col:75> 'long' '+'
|-ParenExpr 0x55f752fd7760 <col:16, col:39> 'long'
| `-BinaryOperator 0x55f752fd7738 <col:17, col:35> 'long' '*'
|   |-ImplicitCastExpr 0x55f752fd7708 <col:17, col:26> '__time_t':'long' <LValueToRValue>
|   | `-MemberExpr 0x55f752fd76b0 <col:17, col:26> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
|   |   `-ImplicitCastExpr 0x55f752fd7698 <col:17> 'const struct timeval *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f752fd7670 <col:17> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
|   `-ImplicitCastExpr 0x55f752fd7720 <col:35> 'long' <IntegralCast>
|     `-IntegerLiteral 0x55f752fd76e8 <col:35> 'int' 1000
`-ParenExpr 0x55f752fd78f0 <col:43, col:75> 'long'
  `-BinaryOperator 0x55f752fd78c8 <col:44, col:71> 'long' '/'
    |-ParenExpr 0x55f752fd7870 <col:44, col:67> 'long'
    | `-BinaryOperator 0x55f752fd7848 <col:45, col:64> 'long' '+'
    |   |-ImplicitCastExpr 0x55f752fd7818 <col:45, col:54> '__suseconds_t':'long' <LValueToRValue>
    |   | `-MemberExpr 0x55f752fd77c0 <col:45, col:54> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
    |   |   `-ImplicitCastExpr 0x55f752fd77a8 <col:45> 'const struct timeval *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f752fd7780 <col:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
    |   `-ImplicitCastExpr 0x55f752fd7830 <col:64> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x55f752fd77f8 <col:64> 'int' 999
    `-ImplicitCastExpr 0x55f752fd78b0 <col:71> 'long' <IntegralCast>
      `-IntegerLiteral 0x55f752fd7890 <col:71> 'int' 1000
([B4.7]) + ([B4.17])
  19: DeclRefExpr 0x55f752fd7648 <net.c:230:9> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
msec
  20: BinaryOperator 0x55f752fd7938 <net.c:230:9, col:75> 'long' '='
|-DeclRefExpr 0x55f752fd7648 <col:9> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
`-BinaryOperator 0x55f752fd7910 <col:16, col:75> 'long' '+'
  |-ParenExpr 0x55f752fd7760 <col:16, col:39> 'long'
  | `-BinaryOperator 0x55f752fd7738 <col:17, col:35> 'long' '*'
  |   |-ImplicitCastExpr 0x55f752fd7708 <col:17, col:26> '__time_t':'long' <LValueToRValue>
  |   | `-MemberExpr 0x55f752fd76b0 <col:17, col:26> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
  |   |   `-ImplicitCastExpr 0x55f752fd7698 <col:17> 'const struct timeval *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x55f752fd7670 <col:17> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
  |   `-ImplicitCastExpr 0x55f752fd7720 <col:35> 'long' <IntegralCast>
  |     `-IntegerLiteral 0x55f752fd76e8 <col:35> 'int' 1000
  `-ParenExpr 0x55f752fd78f0 <col:43, col:75> 'long'
    `-BinaryOperator 0x55f752fd78c8 <col:44, col:71> 'long' '/'
      |-ParenExpr 0x55f752fd7870 <col:44, col:67> 'long'
      | `-BinaryOperator 0x55f752fd7848 <col:45, col:64> 'long' '+'
      |   |-ImplicitCastExpr 0x55f752fd7818 <col:45, col:54> '__suseconds_t':'long' <LValueToRValue>
      |   | `-MemberExpr 0x55f752fd77c0 <col:45, col:54> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
      |   |   `-ImplicitCastExpr 0x55f752fd77a8 <col:45> 'const struct timeval *' <LValueToRValue>
      |   |     `-DeclRefExpr 0x55f752fd7780 <col:45> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
      |   `-ImplicitCastExpr 0x55f752fd7830 <col:64> 'long' <IntegralCast>
      |     `-IntegerLiteral 0x55f752fd77f8 <col:64> 'int' 999
      `-ImplicitCastExpr 0x55f752fd78b0 <col:71> 'long' <IntegralCast>
        `-IntegerLiteral 0x55f752fd7890 <col:71> 'int' 1000
[B4.19] = [B4.18]
  21: DeclRefExpr 0x55f752fd7960 <net.c:232:13> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
msec
  22: ImplicitCastExpr 0x55f752fd79a8 <net.c:232:13> 'long' <LValueToRValue>
`-DeclRefExpr 0x55f752fd7960 <col:13> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
[B4.21] (ImplicitCastExpr, LValueToRValue, long)
  23: IntegerLiteral 0x55f752fd7988 <net.c:232:20> 'int' 0
0
  24: ImplicitCastExpr 0x55f752fd79c0 <net.c:232:20> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd7988 <col:20> 'int' 0
[B4.23] (ImplicitCastExpr, IntegralCast, long)
  25: BinaryOperator 0x55f752fd79d8 <net.c:232:13, col:20> 'int' '<'
|-ImplicitCastExpr 0x55f752fd79a8 <col:13> 'long' <LValueToRValue>
| `-DeclRefExpr 0x55f752fd7960 <col:13> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
`-ImplicitCastExpr 0x55f752fd79c0 <col:20> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd7988 <col:20> 'int' 0
[B4.22] < [B4.24]
   T: [B4.25] || ...
   Preds (1): B6
   Succs (2): B2 B3

 [B5]
   1: DeclRefExpr 0x55f752fd7530 <net.c:226:23> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
msec
   2: ImplicitCastExpr 0x55f752fd7558 <net.c:226:23> 'long' <LValueToRValue>
`-DeclRefExpr 0x55f752fd7530 <col:23> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
[B5.1] (ImplicitCastExpr, LValueToRValue, long)
   3: DeclRefExpr 0x55f752fd74d0 <net.c:226:14> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
result
   4: ImplicitCastExpr 0x55f752fd74f8 <net.c:226:14> 'long *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd74d0 <col:14> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
[B5.3] (ImplicitCastExpr, LValueToRValue, long *)
   5: UnaryOperator 0x55f752fd7510 <net.c:226:13, col:14> 'long' lvalue prefix '*'
`-ImplicitCastExpr 0x55f752fd74f8 <col:14> 'long *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd74d0 <col:14> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
*[B5.4]
   6: BinaryOperator 0x55f752fd7570 <net.c:226:13, col:23> 'long' '='
|-UnaryOperator 0x55f752fd7510 <col:13, col:14> 'long' lvalue prefix '*'
| `-ImplicitCastExpr 0x55f752fd74f8 <col:14> 'long *' <LValueToRValue>
|   `-DeclRefExpr 0x55f752fd74d0 <col:14> 'long *' lvalue ParmVar 0x55f752fd6c80 'result' 'long *'
`-ImplicitCastExpr 0x55f752fd7558 <col:23> 'long' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd7530 <col:23> 'long' lvalue Var 0x55f752fd6ff0 'msec' 'long'
[B5.5] = [B5.2]
   7: IntegerLiteral 0x55f752fd7598 <./read.h:37:20> 'int' 1
1
   8: UnaryOperator 0x55f752fd75b8 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd7598 <col:20> 'int' 1
-[B5.7]
   9: ReturnStmt 0x55f752fd75d8 <net.c:227:13, ./read.h:37:20>
`-UnaryOperator 0x55f752fd75b8 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd7598 <col:20> 'int' 1
return [B5.8];
   Preds (2): B6 B7
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x55f752fd72b0 <net.c:225:43> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
timeout
   2: ImplicitCastExpr 0x55f752fd72d8 <net.c:225:43> 'const struct timeval *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd72b0 <col:43> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B6.1] (ImplicitCastExpr, LValueToRValue, const struct timeval *)
   3: MemberExpr 0x55f752fd72f0 <net.c:225:43, col:52> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
`-ImplicitCastExpr 0x55f752fd72d8 <col:43> 'const struct timeval *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd72b0 <col:43> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B6.2]->tv_sec
   4: ImplicitCastExpr 0x55f752fd7468 <net.c:225:43, col:52> '__time_t':'long' <LValueToRValue>
`-MemberExpr 0x55f752fd72f0 <col:43, col:52> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
  `-ImplicitCastExpr 0x55f752fd72d8 <col:43> 'const struct timeval *' <LValueToRValue>
    `-DeclRefExpr 0x55f752fd72b0 <col:43> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B6.3] (ImplicitCastExpr, LValueToRValue, __time_t)
   5: IntegerLiteral 0x55f752fd7328 <<built-in>:39:22> 'long' 9223372036854775807
9223372036854775807L
   6: IntegerLiteral 0x55f752fd7368 <net.c:216:35> 'int' 999
999
   7: ImplicitCastExpr 0x55f752fd7388 <net.c:216:35> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd7368 <col:35> 'int' 999
[B6.6] (ImplicitCastExpr, IntegralCast, long)
   8: BinaryOperator 0x55f752fd73a0 <net.c:216:22, col:35> 'long' '-'
|-ParenExpr 0x55f752fd7348 <col:22, col:31> 'long'
| `-IntegerLiteral 0x55f752fd7328 <<built-in>:39:22> 'long' 9223372036854775807
`-ImplicitCastExpr 0x55f752fd7388 <net.c:216:35> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd7368 <col:35> 'int' 999
([B6.5]) - [B6.7]
   9: IntegerLiteral 0x55f752fd73e8 <net.c:216:42> 'int' 1000
1000
  10: ImplicitCastExpr 0x55f752fd7408 <net.c:216:42> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd73e8 <col:42> 'int' 1000
[B6.9] (ImplicitCastExpr, IntegralCast, long)
  11: BinaryOperator 0x55f752fd7420 <net.c:216:21, col:42> 'long' '/'
|-ParenExpr 0x55f752fd73c8 <col:21, col:38> 'long'
| `-BinaryOperator 0x55f752fd73a0 <col:22, col:35> 'long' '-'
|   |-ParenExpr 0x55f752fd7348 <col:22, col:31> 'long'
|   | `-IntegerLiteral 0x55f752fd7328 <<built-in>:39:22> 'long' 9223372036854775807
|   `-ImplicitCastExpr 0x55f752fd7388 <net.c:216:35> 'long' <IntegralCast>
|     `-IntegerLiteral 0x55f752fd7368 <col:35> 'int' 999
`-ImplicitCastExpr 0x55f752fd7408 <col:42> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd73e8 <col:42> 'int' 1000
([B6.8]) / [B6.10]
  12: BinaryOperator 0x55f752fd7480 <net.c:225:43, line:216:46> 'int' '>'
|-ImplicitCastExpr 0x55f752fd7468 <line:225:43, col:52> '__time_t':'long' <LValueToRValue>
| `-MemberExpr 0x55f752fd72f0 <col:43, col:52> 'const __time_t':'const long' lvalue ->tv_sec 0x55f752eea660
|   `-ImplicitCastExpr 0x55f752fd72d8 <col:43> 'const struct timeval *' <LValueToRValue>
|     `-DeclRefExpr 0x55f752fd72b0 <col:43> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
`-ParenExpr 0x55f752fd7448 <line:216:20, col:46> 'long'
  `-BinaryOperator 0x55f752fd7420 <col:21, col:42> 'long' '/'
    |-ParenExpr 0x55f752fd73c8 <col:21, col:38> 'long'
    | `-BinaryOperator 0x55f752fd73a0 <col:22, col:35> 'long' '-'
    |   |-ParenExpr 0x55f752fd7348 <col:22, col:31> 'long'
    |   | `-IntegerLiteral 0x55f752fd7328 <<built-in>:39:22> 'long' 9223372036854775807
    |   `-ImplicitCastExpr 0x55f752fd7388 <net.c:216:35> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x55f752fd7368 <col:35> 'int' 999
    `-ImplicitCastExpr 0x55f752fd7408 <col:42> 'long' <IntegralCast>
      `-IntegerLiteral 0x55f752fd73e8 <col:42> 'int' 1000
[B6.4] > ([B6.11])
   T: if [B7.7] || [B6.12]
   Preds (1): B7
   Succs (2): B5 B4

 [B7]
   1: DeclRefExpr 0x55f752fd71c0 <net.c:225:13> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
timeout
   2: ImplicitCastExpr 0x55f752fd71e8 <net.c:225:13> 'const struct timeval *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd71c0 <col:13> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B7.1] (ImplicitCastExpr, LValueToRValue, const struct timeval *)
   3: MemberExpr 0x55f752fd7200 <net.c:225:13, col:22> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
`-ImplicitCastExpr 0x55f752fd71e8 <col:13> 'const struct timeval *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd71c0 <col:13> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B7.2]->tv_usec
   4: ImplicitCastExpr 0x55f752fd7258 <net.c:225:13, col:22> '__suseconds_t':'long' <LValueToRValue>
`-MemberExpr 0x55f752fd7200 <col:13, col:22> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
  `-ImplicitCastExpr 0x55f752fd71e8 <col:13> 'const struct timeval *' <LValueToRValue>
    `-DeclRefExpr 0x55f752fd71c0 <col:13> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B7.3] (ImplicitCastExpr, LValueToRValue, __suseconds_t)
   5: IntegerLiteral 0x55f752fd7238 <net.c:225:32> 'int' 1000000
1000000
   6: ImplicitCastExpr 0x55f752fd7270 <net.c:225:32> 'long' <IntegralCast>
`-IntegerLiteral 0x55f752fd7238 <col:32> 'int' 1000000
[B7.5] (ImplicitCastExpr, IntegralCast, long)
   7: BinaryOperator 0x55f752fd7288 <net.c:225:13, col:32> 'int' '>'
|-ImplicitCastExpr 0x55f752fd7258 <col:13, col:22> '__suseconds_t':'long' <LValueToRValue>
| `-MemberExpr 0x55f752fd7200 <col:13, col:22> 'const __suseconds_t':'const long' lvalue ->tv_usec 0x55f752eea6b8
|   `-ImplicitCastExpr 0x55f752fd71e8 <col:13> 'const struct timeval *' <LValueToRValue>
|     `-DeclRefExpr 0x55f752fd71c0 <col:13> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
`-ImplicitCastExpr 0x55f752fd7270 <col:32> 'long' <IntegralCast>
  `-IntegerLiteral 0x55f752fd7238 <col:32> 'int' 1000000
[B7.4] > [B7.6]
   T: [B7.7] || ...
   Preds (1): B8
   Succs (2): B5 B6

 [B8]
   1: DeclRefExpr 0x55f752fd6f18 <net.c:220:37> 'redisContext *' lvalue ParmVar 0x55f752fd6bd8 'c' 'redisContext *'
c
   2: ImplicitCastExpr 0x55f752fd6f40 <net.c:220:37> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd6f18 <col:37> 'redisContext *' lvalue ParmVar 0x55f752fd6bd8 'c' 'redisContext *'
[B8.1] (ImplicitCastExpr, LValueToRValue, redisContext *)
   3: MemberExpr 0x55f752fd6f58 <net.c:220:37, col:40> 'struct timeval *' lvalue ->timeout 0x55f752f20080
`-ImplicitCastExpr 0x55f752fd6f40 <col:37> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd6f18 <col:37> 'redisContext *' lvalue ParmVar 0x55f752fd6bd8 'c' 'redisContext *'
[B8.2]->timeout
   4: ImplicitCastExpr 0x55f752fd6f90 <net.c:220:37, col:40> 'struct timeval *' <LValueToRValue>
`-MemberExpr 0x55f752fd6f58 <col:37, col:40> 'struct timeval *' lvalue ->timeout 0x55f752f20080
  `-ImplicitCastExpr 0x55f752fd6f40 <col:37> 'redisContext *' <LValueToRValue>
    `-DeclRefExpr 0x55f752fd6f18 <col:37> 'redisContext *' lvalue ParmVar 0x55f752fd6bd8 'c' 'redisContext *'
[B8.3] (ImplicitCastExpr, LValueToRValue, struct timeval *)
   5: ImplicitCastExpr 0x55f752fd6fa8 <net.c:220:37, col:40> 'const struct timeval *' <BitCast>
`-ImplicitCastExpr 0x55f752fd6f90 <col:37, col:40> 'struct timeval *' <LValueToRValue>
  `-MemberExpr 0x55f752fd6f58 <col:37, col:40> 'struct timeval *' lvalue ->timeout 0x55f752f20080
    `-ImplicitCastExpr 0x55f752fd6f40 <col:37> 'redisContext *' <LValueToRValue>
      `-DeclRefExpr 0x55f752fd6f18 <col:37> 'redisContext *' lvalue ParmVar 0x55f752fd6bd8 'c' 'redisContext *'
[B8.4] (ImplicitCastExpr, BitCast, const struct timeval *)
   6: DeclStmt 0x55f752fd6fc0 <net.c:220:5, col:47>col:27
`-VarDecl 0x55f752fd6eb8 <col:5, col:40> col:27 used timeout 'const struct timeval *' cinit
  `-ImplicitCastExpr 0x55f752fd6fa8 <col:37, col:40> 'const struct timeval *' <BitCast>
    `-ImplicitCastExpr 0x55f752fd6f90 <col:37, col:40> 'struct timeval *' <LValueToRValue>
      `-MemberExpr 0x55f752fd6f58 <col:37, col:40> 'struct timeval *' lvalue ->timeout 0x55f752f20080
        `-ImplicitCastExpr 0x55f752fd6f40 <col:37> 'redisContext *' <LValueToRValue>
          `-DeclRefExpr 0x55f752fd6f18 <col:37> 'redisContext *' lvalue ParmVar 0x55f752fd6bd8 'c' 'redisContext *'
const struct timeval *timeout = c->timeout;
   7: IntegerLiteral 0x55f752fd7050 <net.c:221:18> 'int' 1
1
   8: UnaryOperator 0x55f752fd7070 <net.c:221:17, col:18> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd7050 <col:18> 'int' 1
-[B8.7]
   9: ImplicitCastExpr 0x55f752fd7090 <net.c:221:17, col:18> 'long' <IntegralCast>
`-UnaryOperator 0x55f752fd7070 <col:17, col:18> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd7050 <col:18> 'int' 1
[B8.8] (ImplicitCastExpr, IntegralCast, long)
  10: DeclStmt 0x55f752fd70a8 <net.c:221:5, col:19>col:10
`-VarDecl 0x55f752fd6ff0 <col:5, col:18> col:10 used msec 'long' cinit
  `-ImplicitCastExpr 0x55f752fd7090 <col:17, col:18> 'long' <IntegralCast>
    `-UnaryOperator 0x55f752fd7070 <col:17, col:18> 'int' prefix '-'
      `-IntegerLiteral 0x55f752fd7050 <col:18> 'int' 1
long msec = -1;
  11: DeclRefExpr 0x55f752fd70c0 <net.c:224:9> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
timeout
  12: ImplicitCastExpr 0x55f752fd7168 <net.c:224:9> 'const struct timeval *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd70c0 <col:9> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
[B8.11] (ImplicitCastExpr, LValueToRValue, const struct timeval *)
  13: IntegerLiteral 0x55f752fd70e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  14: CStyleCastExpr 0x55f752fd7120 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55f752fd70e8 <col:24> 'int' 0
(void *)[B8.13] (CStyleCastExpr, NullToPointer, void *)
  15: ImplicitCastExpr 0x55f752fd7180 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const struct timeval *' <BitCast>
`-ParenExpr 0x55f752fd7148 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55f752fd7120 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55f752fd70e8 <col:24> 'int' 0
([B8.14]) (ImplicitCastExpr, BitCast, const struct timeval *)
  16: BinaryOperator 0x55f752fd7198 <net.c:224:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ImplicitCastExpr 0x55f752fd7168 <net.c:224:9> 'const struct timeval *' <LValueToRValue>
| `-DeclRefExpr 0x55f752fd70c0 <col:9> 'const struct timeval *' lvalue Var 0x55f752fd6eb8 'timeout' 'const struct timeval *'
`-ImplicitCastExpr 0x55f752fd7180 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const struct timeval *' <BitCast>
  `-ParenExpr 0x55f752fd7148 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55f752fd7120 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55f752fd70e8 <col:24> 'int' 0
[B8.12] != [B8.15]
   T: if [B8.16]
   Preds (1): B9
   Succs (2): B7 B1

 [B0 (EXIT)]
   Preds (2): B1 B5
