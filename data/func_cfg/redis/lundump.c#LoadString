static TString *LoadString(LoadState *S)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x56282186bc80 <lundump.c:84:11> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x562821843608 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
luaZ_openspace
   2: ImplicitCastExpr 0x56282186be18 <lundump.c:84:11> 'char *(*)(lua_State *, Mbuffer *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282186bc80 <col:11> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x562821843608 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(lua_State *, Mbuffer *, size_t))
   3: DeclRefExpr 0x56282186bca8 <lundump.c:84:26> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x56282186bcd0 <lundump.c:84:26> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186bca8 <col:26> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: MemberExpr 0x56282186bce8 <lundump.c:84:26, col:29> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x56282186bcd0 <col:26> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282186bca8 <col:26> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.4]->L
   6: ImplicitCastExpr 0x56282186be70 <lundump.c:84:26, col:29> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x56282186bce8 <col:26, col:29> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x56282186bcd0 <col:26> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282186bca8 <col:26> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x56282186bd20 <lundump.c:84:31> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
S
   8: ImplicitCastExpr 0x56282186bd48 <lundump.c:84:31> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186bd20 <col:31> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.7] (ImplicitCastExpr, LValueToRValue, LoadState *)
   9: MemberExpr 0x56282186bd60 <lundump.c:84:31, col:34> 'Mbuffer *' lvalue ->b 0x562821866830
`-ImplicitCastExpr 0x56282186bd48 <col:31> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282186bd20 <col:31> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.8]->b
  10: ImplicitCastExpr 0x56282186be88 <lundump.c:84:31, col:34> 'Mbuffer *' <LValueToRValue>
`-MemberExpr 0x56282186bd60 <col:31, col:34> 'Mbuffer *' lvalue ->b 0x562821866830
  `-ImplicitCastExpr 0x56282186bd48 <col:31> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282186bd20 <col:31> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.9] (ImplicitCastExpr, LValueToRValue, Mbuffer *)
  11: DeclRefExpr 0x56282186bd98 <lundump.c:84:36> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
size
  12: ImplicitCastExpr 0x56282186bea0 <lundump.c:84:36> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x56282186bd98 <col:36> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B1.11] (ImplicitCastExpr, LValueToRValue, size_t)
  13: CallExpr 0x56282186be30 <lundump.c:84:11, col:40> 'char *'
|-ImplicitCastExpr 0x56282186be18 <col:11> 'char *(*)(lua_State *, Mbuffer *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282186bc80 <col:11> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x562821843608 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
|-ImplicitCastExpr 0x56282186be70 <col:26, col:29> 'lua_State *' <LValueToRValue>
| `-MemberExpr 0x56282186bce8 <col:26, col:29> 'lua_State *' lvalue ->L 0x562821866780
|   `-ImplicitCastExpr 0x56282186bcd0 <col:26> 'LoadState *' <LValueToRValue>
|     `-DeclRefExpr 0x56282186bca8 <col:26> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
|-ImplicitCastExpr 0x56282186be88 <col:31, col:34> 'Mbuffer *' <LValueToRValue>
| `-MemberExpr 0x56282186bd60 <col:31, col:34> 'Mbuffer *' lvalue ->b 0x562821866830
|   `-ImplicitCastExpr 0x56282186bd48 <col:31> 'LoadState *' <LValueToRValue>
|     `-DeclRefExpr 0x56282186bd20 <col:31> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
`-ImplicitCastExpr 0x56282186bea0 <col:36> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x56282186bd98 <col:36> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B1.2]([B1.6], [B1.10], [B1.12])
  14: DeclStmt 0x56282186beb8 <lundump.c:84:3, col:41>col:9
`-VarDecl 0x56282186bc20 <col:3, col:40> col:9 used s 'char *' cinit
  `-CallExpr 0x56282186be30 <col:11, col:40> 'char *'
    |-ImplicitCastExpr 0x56282186be18 <col:11> 'char *(*)(lua_State *, Mbuffer *, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56282186bc80 <col:11> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x562821843608 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
    |-ImplicitCastExpr 0x56282186be70 <col:26, col:29> 'lua_State *' <LValueToRValue>
    | `-MemberExpr 0x56282186bce8 <col:26, col:29> 'lua_State *' lvalue ->L 0x562821866780
    |   `-ImplicitCastExpr 0x56282186bcd0 <col:26> 'LoadState *' <LValueToRValue>
    |     `-DeclRefExpr 0x56282186bca8 <col:26> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
    |-ImplicitCastExpr 0x56282186be88 <col:31, col:34> 'Mbuffer *' <LValueToRValue>
    | `-MemberExpr 0x56282186bd60 <col:31, col:34> 'Mbuffer *' lvalue ->b 0x562821866830
    |   `-ImplicitCastExpr 0x56282186bd48 <col:31> 'LoadState *' <LValueToRValue>
    |     `-DeclRefExpr 0x56282186bd20 <col:31> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
    `-ImplicitCastExpr 0x56282186bea0 <col:36> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x56282186bd98 <col:36> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
char *s = luaZ_openspace(S->L, S->b, size);
  15: DeclRefExpr 0x56282186bed0 <lundump.c:85:3> 'void (LoadState *, void *, size_t)' Function 0x562821869a00 'LoadBlock' 'void (LoadState *, void *, size_t)'
LoadBlock
  16: ImplicitCastExpr 0x56282186bf70 <lundump.c:85:3> 'void (*)(LoadState *, void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282186bed0 <col:3> 'void (LoadState *, void *, size_t)' Function 0x562821869a00 'LoadBlock' 'void (LoadState *, void *, size_t)'
[B1.15] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, void *, size_t))
  17: DeclRefExpr 0x56282186bef8 <lundump.c:85:13> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
S
  18: ImplicitCastExpr 0x56282186bfc8 <lundump.c:85:13> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186bef8 <col:13> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.17] (ImplicitCastExpr, LValueToRValue, LoadState *)
  19: DeclRefExpr 0x56282186bf20 <lundump.c:85:15> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
s
  20: ImplicitCastExpr 0x56282186bfe0 <lundump.c:85:15> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56282186bf20 <col:15> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
[B1.19] (ImplicitCastExpr, LValueToRValue, char *)
  21: ImplicitCastExpr 0x56282186bff8 <lundump.c:85:15> 'void *' <BitCast>
`-ImplicitCastExpr 0x56282186bfe0 <col:15> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x56282186bf20 <col:15> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
[B1.20] (ImplicitCastExpr, BitCast, void *)
  22: DeclRefExpr 0x56282186bf48 <lundump.c:85:17> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
size
  23: ImplicitCastExpr 0x56282186c010 <lundump.c:85:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x56282186bf48 <col:17> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B1.22] (ImplicitCastExpr, LValueToRValue, size_t)
  24: CallExpr 0x56282186bf88 <lundump.c:85:3, col:21> 'void'
|-ImplicitCastExpr 0x56282186bf70 <col:3> 'void (*)(LoadState *, void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282186bed0 <col:3> 'void (LoadState *, void *, size_t)' Function 0x562821869a00 'LoadBlock' 'void (LoadState *, void *, size_t)'
|-ImplicitCastExpr 0x56282186bfc8 <col:13> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x56282186bef8 <col:13> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
|-ImplicitCastExpr 0x56282186bff8 <col:15> 'void *' <BitCast>
| `-ImplicitCastExpr 0x56282186bfe0 <col:15> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x56282186bf20 <col:15> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
`-ImplicitCastExpr 0x56282186c010 <col:17> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x56282186bf48 <col:17> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B1.16]([B1.18], [B1.21], [B1.23])
  25: DeclRefExpr 0x56282186c028 <lundump.c:86:10> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
luaS_newlstr
  26: ImplicitCastExpr 0x56282186c1e8 <lundump.c:86:10> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282186c028 <col:10> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
[B1.25] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t))
  27: DeclRefExpr 0x56282186c050 <lundump.c:86:23> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
S
  28: ImplicitCastExpr 0x56282186c078 <lundump.c:86:23> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186c050 <col:23> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.27] (ImplicitCastExpr, LValueToRValue, LoadState *)
  29: MemberExpr 0x56282186c090 <lundump.c:86:23, col:26> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x56282186c078 <col:23> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282186c050 <col:23> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.28]->L
  30: ImplicitCastExpr 0x56282186c240 <lundump.c:86:23, col:26> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x56282186c090 <col:23, col:26> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x56282186c078 <col:23> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282186c050 <col:23> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B1.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: DeclRefExpr 0x56282186c0c8 <lundump.c:86:28> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
s
  32: ImplicitCastExpr 0x56282186c258 <lundump.c:86:28> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56282186c0c8 <col:28> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
[B1.31] (ImplicitCastExpr, LValueToRValue, char *)
  33: ImplicitCastExpr 0x56282186c270 <lundump.c:86:28> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56282186c258 <col:28> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x56282186c0c8 <col:28> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
[B1.32] (ImplicitCastExpr, BitCast, const char *)
  34: DeclRefExpr 0x56282186c0f0 <lundump.c:86:30> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
size
  35: ImplicitCastExpr 0x56282186c138 <lundump.c:86:30> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x56282186c0f0 <col:30> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B1.34] (ImplicitCastExpr, LValueToRValue, size_t)
  36: IntegerLiteral 0x56282186c118 <lundump.c:86:35> 'int' 1
1
  37: ImplicitCastExpr 0x56282186c150 <lundump.c:86:35> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x56282186c118 <col:35> 'int' 1
[B1.36] (ImplicitCastExpr, IntegralCast, unsigned long)
  38: BinaryOperator 0x56282186c168 <lundump.c:86:30, col:35> 'unsigned long' '-'
|-ImplicitCastExpr 0x56282186c138 <col:30> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x56282186c0f0 <col:30> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x56282186c150 <col:35> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x56282186c118 <col:35> 'int' 1
[B1.35] - [B1.37]
  39: CallExpr 0x56282186c200 <lundump.c:86:10, col:36> 'TString *'
|-ImplicitCastExpr 0x56282186c1e8 <col:10> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282186c028 <col:10> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x56282186c240 <col:23, col:26> 'lua_State *' <LValueToRValue>
| `-MemberExpr 0x56282186c090 <col:23, col:26> 'lua_State *' lvalue ->L 0x562821866780
|   `-ImplicitCastExpr 0x56282186c078 <col:23> 'LoadState *' <LValueToRValue>
|     `-DeclRefExpr 0x56282186c050 <col:23> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
|-ImplicitCastExpr 0x56282186c270 <col:28> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56282186c258 <col:28> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x56282186c0c8 <col:28> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
`-BinaryOperator 0x56282186c168 <col:30, col:35> 'unsigned long' '-'
  |-ImplicitCastExpr 0x56282186c138 <col:30> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x56282186c0f0 <col:30> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x56282186c150 <col:35> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x56282186c118 <col:35> 'int' 1
[B1.26]([B1.30], [B1.33], [B1.38])
  40: ReturnStmt 0x56282186c288 <lundump.c:86:3, col:36>
`-CallExpr 0x56282186c200 <col:10, col:36> 'TString *'
  |-ImplicitCastExpr 0x56282186c1e8 <col:10> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282186c028 <col:10> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
  |-ImplicitCastExpr 0x56282186c240 <col:23, col:26> 'lua_State *' <LValueToRValue>
  | `-MemberExpr 0x56282186c090 <col:23, col:26> 'lua_State *' lvalue ->L 0x562821866780
  |   `-ImplicitCastExpr 0x56282186c078 <col:23> 'LoadState *' <LValueToRValue>
  |     `-DeclRefExpr 0x56282186c050 <col:23> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
  |-ImplicitCastExpr 0x56282186c270 <col:28> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x56282186c258 <col:28> 'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x56282186c0c8 <col:28> 'char *' lvalue Var 0x56282186bc20 's' 'char *'
  `-BinaryOperator 0x56282186c168 <col:30, col:35> 'unsigned long' '-'
    |-ImplicitCastExpr 0x56282186c138 <col:30> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x56282186c0f0 <col:30> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x56282186c150 <col:35> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x56282186c118 <col:35> 'int' 1
return [B1.39];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x56282186bb58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x56282186bb90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56282186bb58 <col:24> 'int' 0
(void *)[B2.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x56282186bbd8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'TString *' <NullToPointer>
`-ParenExpr 0x56282186bbb8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56282186bb90 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56282186bb58 <col:24> 'int' 0
([B2.2]) (ImplicitCastExpr, NullToPointer, TString *)
   4: ReturnStmt 0x56282186bbf0 <lundump.c:81:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x56282186bbd8 <col:16, col:25> 'TString *' <NullToPointer>
  `-ParenExpr 0x56282186bbb8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56282186bb90 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56282186bb58 <col:24> 'int' 0
return [B2.3];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclStmt 0x56282186b878 <lundump.c:78:2, col:13>col:9
`-VarDecl 0x56282186b818 <col:2, col:9> col:9 used size 'size_t':'unsigned long'
size_t size;
   2: DeclRefExpr 0x56282186b890 <lundump.c:43:29> 'void (LoadState *, void *, size_t)' Function 0x562821869a00 'LoadBlock' 'void (LoadState *, void *, size_t)'
LoadBlock
   3: ImplicitCastExpr 0x56282186ba30 <lundump.c:43:29> 'void (*)(LoadState *, void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282186b890 <col:29> 'void (LoadState *, void *, size_t)' Function 0x562821869a00 'LoadBlock' 'void (LoadState *, void *, size_t)'
[B3.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, void *, size_t))
   4: DeclRefExpr 0x56282186b8b8 <lundump.c:79:10> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
S
   5: ImplicitCastExpr 0x56282186ba88 <lundump.c:79:10> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186b8b8 <col:10> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
[B3.4] (ImplicitCastExpr, LValueToRValue, LoadState *)
   6: DeclRefExpr 0x56282186b8e0 <lundump.c:79:12> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
size
   7: UnaryOperator 0x56282186b908 <lundump.c:45:33, line:79:12> 'size_t *' prefix '&'
`-DeclRefExpr 0x56282186b8e0 <col:12> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
&[B3.6]
   8: ImplicitCastExpr 0x56282186baa0 <lundump.c:45:33, line:79:12> 'void *' <BitCast>
`-UnaryOperator 0x56282186b908 <line:45:33, line:79:12> 'size_t *' prefix '&'
  `-DeclRefExpr 0x56282186b8e0 <col:12> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B3.7] (ImplicitCastExpr, BitCast, void *)
   9: IntegerLiteral 0x56282186b928 <lundump.c:45:36> 'int' 1
1
  10: ImplicitCastExpr 0x56282186b9f0 <lundump.c:43:43, col:45> 'unsigned long' <IntegralCast>
`-ParenExpr 0x56282186b948 <col:43, col:45> 'int'
  `-IntegerLiteral 0x56282186b928 <line:45:36> 'int' 1
([B3.9]) (ImplicitCastExpr, IntegralCast, unsigned long)
  11: UnaryExprOrTypeTraitExpr 0x56282186b9b0 <lundump.c:45:38, col:46> 'unsigned long' sizeof
`-ParenExpr 0x56282186b990 <col:44, col:46> 'size_t':'unsigned long' lvalue
  `-DeclRefExpr 0x56282186b968 <line:79:12> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
sizeof (size)
  12: BinaryOperator 0x56282186ba08 <lundump.c:43:43, col:52> 'unsigned long' '*'
|-ImplicitCastExpr 0x56282186b9f0 <col:43, col:45> 'unsigned long' <IntegralCast>
| `-ParenExpr 0x56282186b948 <col:43, col:45> 'int'
|   `-IntegerLiteral 0x56282186b928 <line:45:36> 'int' 1
`-ParenExpr 0x56282186b9d0 <line:43:47, col:52> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x56282186b9b0 <line:45:38, col:46> 'unsigned long' sizeof
    `-ParenExpr 0x56282186b990 <col:44, col:46> 'size_t':'unsigned long' lvalue
      `-DeclRefExpr 0x56282186b968 <line:79:12> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B3.10] * ([B3.11])
  13: CallExpr 0x56282186ba48 <lundump.c:43:29, col:53> 'void'
|-ImplicitCastExpr 0x56282186ba30 <col:29> 'void (*)(LoadState *, void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282186b890 <col:29> 'void (LoadState *, void *, size_t)' Function 0x562821869a00 'LoadBlock' 'void (LoadState *, void *, size_t)'
|-ImplicitCastExpr 0x56282186ba88 <line:79:10> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x56282186b8b8 <col:10> 'LoadState *' lvalue ParmVar 0x56282186b660 'S' 'LoadState *'
|-ImplicitCastExpr 0x56282186baa0 <line:45:33, line:79:12> 'void *' <BitCast>
| `-UnaryOperator 0x56282186b908 <line:45:33, line:79:12> 'size_t *' prefix '&'
|   `-DeclRefExpr 0x56282186b8e0 <col:12> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
`-BinaryOperator 0x56282186ba08 <line:43:43, col:52> 'unsigned long' '*'
  |-ImplicitCastExpr 0x56282186b9f0 <col:43, col:45> 'unsigned long' <IntegralCast>
  | `-ParenExpr 0x56282186b948 <col:43, col:45> 'int'
  |   `-IntegerLiteral 0x56282186b928 <line:45:36> 'int' 1
  `-ParenExpr 0x56282186b9d0 <line:43:47, col:52> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x56282186b9b0 <line:45:38, col:46> 'unsigned long' sizeof
      `-ParenExpr 0x56282186b990 <col:44, col:46> 'size_t':'unsigned long' lvalue
        `-DeclRefExpr 0x56282186b968 <line:79:12> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B3.3]([B3.5], [B3.8], [B3.12])
  14: DeclRefExpr 0x56282186bab8 <lundump.c:80:6> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
size
  15: ImplicitCastExpr 0x56282186bb00 <lundump.c:80:6> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x56282186bab8 <col:6> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
[B3.14] (ImplicitCastExpr, LValueToRValue, size_t)
  16: IntegerLiteral 0x56282186bae0 <lundump.c:80:12> 'int' 0
0
  17: ImplicitCastExpr 0x56282186bb18 <lundump.c:80:12> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x56282186bae0 <col:12> 'int' 0
[B3.16] (ImplicitCastExpr, IntegralCast, unsigned long)
  18: BinaryOperator 0x56282186bb30 <lundump.c:80:6, col:12> 'int' '=='
|-ImplicitCastExpr 0x56282186bb00 <col:6> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x56282186bab8 <col:6> 'size_t':'unsigned long' lvalue Var 0x56282186b818 'size' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x56282186bb18 <col:12> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x56282186bae0 <col:12> 'int' 0
[B3.15] == [B3.17]
   T: if [B3.18]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
