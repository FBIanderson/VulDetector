sds sdstrim(sds s, const char *cset)
 [B16 (ENTRY)]
   Succs (1): B15

 [B1]
   1: CharacterLiteral 0x55e83d116fc8 <sds.c:702:14> 'int' 0
'\x00'
   2: ImplicitCastExpr 0x55e83d116fe0 <sds.c:702:14> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d116fc8 <col:14> 'int' 0
[B1.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d116f20 <sds.c:702:5> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d116f70 <sds.c:702:5> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116f20 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d116f48 <sds.c:702:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
len
   6: ImplicitCastExpr 0x55e83d116f88 <sds.c:702:7> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d116f48 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
[B1.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: ArraySubscriptExpr 0x55e83d116fa0 <sds.c:702:5, col:10> 'char' lvalue
|-ImplicitCastExpr 0x55e83d116f70 <col:5> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d116f20 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d116f88 <col:7> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116f48 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
[B1.4][[B1.6]]
   8: BinaryOperator 0x55e83d116ff8 <sds.c:702:5, col:14> 'char' '='
|-ArraySubscriptExpr 0x55e83d116fa0 <col:5, col:10> 'char' lvalue
| |-ImplicitCastExpr 0x55e83d116f70 <col:5> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d116f20 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
| `-ImplicitCastExpr 0x55e83d116f88 <col:7> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d116f48 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d116fe0 <col:14> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d116fc8 <col:14> 'int' 0
[B1.7] = [B1.2]
   9: DeclRefExpr 0x55e83d117020 <sds.c:703:5> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
sdssetlen
  10: ImplicitCastExpr 0x55e83d117098 <sds.c:703:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d117020 <col:5> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
[B1.9] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds, size_t))
  11: DeclRefExpr 0x55e83d117048 <sds.c:703:15> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
  12: ImplicitCastExpr 0x55e83d1170e8 <sds.c:703:15> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d117048 <col:15> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B1.11] (ImplicitCastExpr, LValueToRValue, sds)
  13: DeclRefExpr 0x55e83d117070 <sds.c:703:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
len
  14: ImplicitCastExpr 0x55e83d117100 <sds.c:703:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d117070 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
[B1.13] (ImplicitCastExpr, LValueToRValue, size_t)
  15: CallExpr 0x55e83d1170b0 <sds.c:703:5, col:20> 'void'
|-ImplicitCastExpr 0x55e83d117098 <col:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d117020 <col:5> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
|-ImplicitCastExpr 0x55e83d1170e8 <col:15> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117048 <col:15> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d117100 <col:17> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d117070 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
[B1.10]([B1.12], [B1.14])
  16: DeclRefExpr 0x55e83d117118 <sds.c:704:12> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
  17: ImplicitCastExpr 0x55e83d117140 <sds.c:704:12> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d117118 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B1.16] (ImplicitCastExpr, LValueToRValue, sds)
  18: ReturnStmt 0x55e83d117158 <sds.c:704:5, col:12>
`-ImplicitCastExpr 0x55e83d117140 <col:12> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d117118 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
return [B1.17];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d116d30 <sds.c:701:18> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a8220 'memmove' 'void *(void *, const void *, unsigned long)'
memmove
   2: ImplicitCastExpr 0x55e83d116e18 <sds.c:701:18> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d116d30 <col:18> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a8220 'memmove' 'void *(void *, const void *, unsigned long)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
   3: DeclRefExpr 0x55e83d116d58 <sds.c:701:26> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d116e70 <sds.c:701:26> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116d58 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B2.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: ImplicitCastExpr 0x55e83d116e88 <sds.c:701:26> 'void *' <BitCast>
`-ImplicitCastExpr 0x55e83d116e70 <col:26> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116d58 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B2.4] (ImplicitCastExpr, BitCast, void *)
   6: DeclRefExpr 0x55e83d116d80 <sds.c:701:29> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   7: ImplicitCastExpr 0x55e83d116ea0 <sds.c:701:29> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116d80 <col:29> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B2.6] (ImplicitCastExpr, LValueToRValue, char *)
   8: ImplicitCastExpr 0x55e83d116eb8 <sds.c:701:29> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d116ea0 <col:29> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116d80 <col:29> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B2.7] (ImplicitCastExpr, BitCast, const void *)
   9: DeclRefExpr 0x55e83d116da8 <sds.c:701:33> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
len
  10: ImplicitCastExpr 0x55e83d116ed0 <sds.c:701:33> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d116da8 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
[B2.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: CallExpr 0x55e83d116e30 <sds.c:701:18, col:36> 'void *'
|-ImplicitCastExpr 0x55e83d116e18 <col:18> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d116d30 <col:18> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a8220 'memmove' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d116e88 <col:26> 'void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d116e70 <col:26> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d116d58 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
|-ImplicitCastExpr 0x55e83d116eb8 <col:29> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d116ea0 <col:29> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d116d80 <col:29> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
`-ImplicitCastExpr 0x55e83d116ed0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116da8 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
[B2.2]([B2.5], [B2.8], [B2.10])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: ConditionalOperator 0x55e83d116c18 <sds.c:700:11, col:37> 'long'
|-ParenExpr 0x55e83d116a78 <col:11, col:19> 'int'
| `-BinaryOperator 0x55e83d116a50 <col:12, col:17> 'int' '>'
|   |-ImplicitCastExpr 0x55e83d116a20 <col:12> 'char *' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d1169d0 <col:12> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
|   `-ImplicitCastExpr 0x55e83d116a38 <col:17> 'char *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d1169f8 <col:17> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
|-ImplicitCastExpr 0x55e83d116c00 <col:23> 'long' <IntegralCast>
| `-IntegerLiteral 0x55e83d116a98 <col:23> 'int' 0
`-ParenExpr 0x55e83d116be0 <col:27, col:37> 'long'
  `-BinaryOperator 0x55e83d116bb8 <col:28, col:36> 'long' '+'
    |-ParenExpr 0x55e83d116b60 <col:28, col:34> 'long'
    | `-BinaryOperator 0x55e83d116b38 <col:29, col:32> 'long' '-'
    |   |-ImplicitCastExpr 0x55e83d116b08 <col:29> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e83d116ab8 <col:29> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
    |   `-ImplicitCastExpr 0x55e83d116b20 <col:32> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d116ae0 <col:32> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
    `-ImplicitCastExpr 0x55e83d116ba0 <col:36> 'long' <IntegralCast>
      `-IntegerLiteral 0x55e83d116b80 <col:36> 'int' 1
([B6.5]) ? [B4.2] : ([B5.8])
   2: ImplicitCastExpr 0x55e83d116c48 <sds.c:700:11, col:37> 'size_t':'unsigned long' <IntegralCast>
`-ConditionalOperator 0x55e83d116c18 <col:11, col:37> 'long'
  |-ParenExpr 0x55e83d116a78 <col:11, col:19> 'int'
  | `-BinaryOperator 0x55e83d116a50 <col:12, col:17> 'int' '>'
  |   |-ImplicitCastExpr 0x55e83d116a20 <col:12> 'char *' <LValueToRValue>
  |   | `-DeclRefExpr 0x55e83d1169d0 <col:12> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
  |   `-ImplicitCastExpr 0x55e83d116a38 <col:17> 'char *' <LValueToRValue>
  |     `-DeclRefExpr 0x55e83d1169f8 <col:17> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
  |-ImplicitCastExpr 0x55e83d116c00 <col:23> 'long' <IntegralCast>
  | `-IntegerLiteral 0x55e83d116a98 <col:23> 'int' 0
  `-ParenExpr 0x55e83d116be0 <col:27, col:37> 'long'
    `-BinaryOperator 0x55e83d116bb8 <col:28, col:36> 'long' '+'
      |-ParenExpr 0x55e83d116b60 <col:28, col:34> 'long'
      | `-BinaryOperator 0x55e83d116b38 <col:29, col:32> 'long' '-'
      |   |-ImplicitCastExpr 0x55e83d116b08 <col:29> 'char *' <LValueToRValue>
      |   | `-DeclRefExpr 0x55e83d116ab8 <col:29> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
      |   `-ImplicitCastExpr 0x55e83d116b20 <col:32> 'char *' <LValueToRValue>
      |     `-DeclRefExpr 0x55e83d116ae0 <col:32> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
      `-ImplicitCastExpr 0x55e83d116ba0 <col:36> 'long' <IntegralCast>
        `-IntegerLiteral 0x55e83d116b80 <col:36> 'int' 1
[B3.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: DeclRefExpr 0x55e83d1169a8 <sds.c:700:5> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
len
   4: BinaryOperator 0x55e83d116c60 <sds.c:700:5, col:37> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d1169a8 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d1160b0 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d116c48 <col:11, col:37> 'size_t':'unsigned long' <IntegralCast>
  `-ConditionalOperator 0x55e83d116c18 <col:11, col:37> 'long'
    |-ParenExpr 0x55e83d116a78 <col:11, col:19> 'int'
    | `-BinaryOperator 0x55e83d116a50 <col:12, col:17> 'int' '>'
    |   |-ImplicitCastExpr 0x55e83d116a20 <col:12> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e83d1169d0 <col:12> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
    |   `-ImplicitCastExpr 0x55e83d116a38 <col:17> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d1169f8 <col:17> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
    |-ImplicitCastExpr 0x55e83d116c00 <col:23> 'long' <IntegralCast>
    | `-IntegerLiteral 0x55e83d116a98 <col:23> 'int' 0
    `-ParenExpr 0x55e83d116be0 <col:27, col:37> 'long'
      `-BinaryOperator 0x55e83d116bb8 <col:28, col:36> 'long' '+'
        |-ParenExpr 0x55e83d116b60 <col:28, col:34> 'long'
        | `-BinaryOperator 0x55e83d116b38 <col:29, col:32> 'long' '-'
        |   |-ImplicitCastExpr 0x55e83d116b08 <col:29> 'char *' <LValueToRValue>
        |   | `-DeclRefExpr 0x55e83d116ab8 <col:29> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
        |   `-ImplicitCastExpr 0x55e83d116b20 <col:32> 'char *' <LValueToRValue>
        |     `-DeclRefExpr 0x55e83d116ae0 <col:32> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
        `-ImplicitCastExpr 0x55e83d116ba0 <col:36> 'long' <IntegralCast>
          `-IntegerLiteral 0x55e83d116b80 <col:36> 'int' 1
[B3.3] = [B3.2]
   5: DeclRefExpr 0x55e83d116c88 <sds.c:701:9> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
   6: ImplicitCastExpr 0x55e83d116cd8 <sds.c:701:9> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116c88 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B3.5] (ImplicitCastExpr, LValueToRValue, sds)
   7: DeclRefExpr 0x55e83d116cb0 <sds.c:701:14> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   8: ImplicitCastExpr 0x55e83d116cf0 <sds.c:701:14> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116cb0 <col:14> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B3.7] (ImplicitCastExpr, LValueToRValue, char *)
   9: BinaryOperator 0x55e83d116d08 <sds.c:701:9, col:14> 'int' '!='
|-ImplicitCastExpr 0x55e83d116cd8 <col:9> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d116c88 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d116cf0 <col:14> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116cb0 <col:14> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B3.6] != [B3.8]
   T: if [B3.9]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x55e83d116a98 <sds.c:700:23> 'int' 0
0
   2: ImplicitCastExpr 0x55e83d116c00 <sds.c:700:23> 'long' <IntegralCast>
`-IntegerLiteral 0x55e83d116a98 <col:23> 'int' 0
[B4.1] (ImplicitCastExpr, IntegralCast, long)
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x55e83d116ab8 <sds.c:700:29> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
ep
   2: ImplicitCastExpr 0x55e83d116b08 <sds.c:700:29> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116ab8 <col:29> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B5.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x55e83d116ae0 <sds.c:700:32> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   4: ImplicitCastExpr 0x55e83d116b20 <sds.c:700:32> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116ae0 <col:32> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B5.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: BinaryOperator 0x55e83d116b38 <sds.c:700:29, col:32> 'long' '-'
|-ImplicitCastExpr 0x55e83d116b08 <col:29> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d116ab8 <col:29> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
`-ImplicitCastExpr 0x55e83d116b20 <col:32> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116ae0 <col:32> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B5.2] - [B5.4]
   6: IntegerLiteral 0x55e83d116b80 <sds.c:700:36> 'int' 1
1
   7: ImplicitCastExpr 0x55e83d116ba0 <sds.c:700:36> 'long' <IntegralCast>
`-IntegerLiteral 0x55e83d116b80 <col:36> 'int' 1
[B5.6] (ImplicitCastExpr, IntegralCast, long)
   8: BinaryOperator 0x55e83d116bb8 <sds.c:700:28, col:36> 'long' '+'
|-ParenExpr 0x55e83d116b60 <col:28, col:34> 'long'
| `-BinaryOperator 0x55e83d116b38 <col:29, col:32> 'long' '-'
|   |-ImplicitCastExpr 0x55e83d116b08 <col:29> 'char *' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d116ab8 <col:29> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
|   `-ImplicitCastExpr 0x55e83d116b20 <col:32> 'char *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d116ae0 <col:32> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
`-ImplicitCastExpr 0x55e83d116ba0 <col:36> 'long' <IntegralCast>
  `-IntegerLiteral 0x55e83d116b80 <col:36> 'int' 1
([B5.5]) + [B5.7]
   Preds (1): B6
   Succs (1): B3

 [B6]
   1: DeclRefExpr 0x55e83d1169d0 <sds.c:700:12> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   2: ImplicitCastExpr 0x55e83d116a20 <sds.c:700:12> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1169d0 <col:12> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B6.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x55e83d1169f8 <sds.c:700:17> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
ep
   4: ImplicitCastExpr 0x55e83d116a38 <sds.c:700:17> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1169f8 <col:17> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B6.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: BinaryOperator 0x55e83d116a50 <sds.c:700:12, col:17> 'int' '>'
|-ImplicitCastExpr 0x55e83d116a20 <col:12> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1169d0 <col:12> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
`-ImplicitCastExpr 0x55e83d116a38 <col:17> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1169f8 <col:17> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B6.2] > [B6.4]
   T: ([B6.5]) ? ... : ...
   Preds (2): B9 B10
   Succs (2): B4 B5

 [B7]
   Preds (1): B8
   Succs (1): B10

 [B8]
   1: DeclRefExpr 0x55e83d116940 <sds.c:699:41> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
ep
   2: UnaryOperator 0x55e83d116968 <sds.c:699:41, col:43> 'char *' postfix '--'
`-DeclRefExpr 0x55e83d116940 <col:41> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B8.1]--
   Preds (1): B9
   Succs (1): B7

 [B9]
   1: DeclRefExpr 0x55e83d116788 <sds.c:699:22> 'char *(const char *, int)' Function 0x55e83d0aef78 'strchr' 'char *(const char *, int)'
strchr
   2: ImplicitCastExpr 0x55e83d116880 <sds.c:699:22> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d116788 <col:22> 'char *(const char *, int)' Function 0x55e83d0aef78 'strchr' 'char *(const char *, int)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, int))
   3: DeclRefExpr 0x55e83d1167b0 <sds.c:699:29> 'const char *' lvalue ParmVar 0x55e83d115d40 'cset' 'const char *'
cset
   4: ImplicitCastExpr 0x55e83d1168d0 <sds.c:699:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1167b0 <col:29> 'const char *' lvalue ParmVar 0x55e83d115d40 'cset' 'const char *'
[B9.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x55e83d1167d8 <sds.c:699:36> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
ep
   6: ImplicitCastExpr 0x55e83d116800 <sds.c:699:36> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1167d8 <col:36> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B9.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: UnaryOperator 0x55e83d116830 <sds.c:699:35, col:36> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d116800 <col:36> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1167d8 <col:36> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
*[B9.6]
   8: ImplicitCastExpr 0x55e83d1168e8 <sds.c:699:35, col:36> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d116830 <col:35, col:36> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d116800 <col:36> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1167d8 <col:36> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B9.7] (ImplicitCastExpr, LValueToRValue, char)
   9: ImplicitCastExpr 0x55e83d116900 <sds.c:699:35, col:36> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1168e8 <col:35, col:36> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d116830 <col:35, col:36> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d116800 <col:36> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1167d8 <col:36> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B9.8] (ImplicitCastExpr, IntegralCast, int)
  10: CallExpr 0x55e83d116898 <sds.c:699:22, col:38> 'char *'
|-ImplicitCastExpr 0x55e83d116880 <col:22> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d116788 <col:22> 'char *(const char *, int)' Function 0x55e83d0aef78 'strchr' 'char *(const char *, int)'
|-ImplicitCastExpr 0x55e83d1168d0 <col:29> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1167b0 <col:29> 'const char *' lvalue ParmVar 0x55e83d115d40 'cset' 'const char *'
`-ImplicitCastExpr 0x55e83d116900 <col:35, col:36> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d1168e8 <col:35, col:36> 'char' <LValueToRValue>
    `-UnaryOperator 0x55e83d116830 <col:35, col:36> 'char' lvalue prefix '*'
      `-ImplicitCastExpr 0x55e83d116800 <col:36> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x55e83d1167d8 <col:36> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B9.2]([B9.4], [B9.9])
   T: while [B10.5] && [B9.10]
   Preds (1): B10
   Succs (2): B8 B6

 [B10]
   1: DeclRefExpr 0x55e83d1166e0 <sds.c:699:11> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
ep
   2: ImplicitCastExpr 0x55e83d116730 <sds.c:699:11> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1166e0 <col:11> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
[B10.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x55e83d116708 <sds.c:699:16> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   4: ImplicitCastExpr 0x55e83d116748 <sds.c:699:16> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116708 <col:16> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B10.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: BinaryOperator 0x55e83d116760 <sds.c:699:11, col:16> 'int' '>'
|-ImplicitCastExpr 0x55e83d116730 <col:11> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1166e0 <col:11> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
`-ImplicitCastExpr 0x55e83d116748 <col:16> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116708 <col:16> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B10.2] > [B10.4]
   T: [B10.5] && ...
   Preds (3): B7 B13 B14
   Succs (2): B9 B6

 [B11]
   Preds (1): B12
   Succs (1): B14

 [B12]
   1: DeclRefExpr 0x55e83d116678 <sds.c:698:43> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   2: UnaryOperator 0x55e83d1166a0 <sds.c:698:43, col:45> 'char *' postfix '++'
`-DeclRefExpr 0x55e83d116678 <col:43> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B12.1]++
   Preds (1): B13
   Succs (1): B11

 [B13]
   1: DeclRefExpr 0x55e83d1164b0 <sds.c:698:24> 'char *(const char *, int)' Function 0x55e83d0aef78 'strchr' 'char *(const char *, int)'
strchr
   2: ImplicitCastExpr 0x55e83d1165b8 <sds.c:698:24> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1164b0 <col:24> 'char *(const char *, int)' Function 0x55e83d0aef78 'strchr' 'char *(const char *, int)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, int))
   3: DeclRefExpr 0x55e83d1164d8 <sds.c:698:31> 'const char *' lvalue ParmVar 0x55e83d115d40 'cset' 'const char *'
cset
   4: ImplicitCastExpr 0x55e83d116608 <sds.c:698:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1164d8 <col:31> 'const char *' lvalue ParmVar 0x55e83d115d40 'cset' 'const char *'
[B13.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x55e83d116500 <sds.c:698:38> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   6: ImplicitCastExpr 0x55e83d116528 <sds.c:698:38> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116500 <col:38> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B13.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: UnaryOperator 0x55e83d116540 <sds.c:698:37, col:38> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d116528 <col:38> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116500 <col:38> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
*[B13.6]
   8: ImplicitCastExpr 0x55e83d116620 <sds.c:698:37, col:38> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d116540 <col:37, col:38> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d116528 <col:38> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d116500 <col:38> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B13.7] (ImplicitCastExpr, LValueToRValue, char)
   9: ImplicitCastExpr 0x55e83d116638 <sds.c:698:37, col:38> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d116620 <col:37, col:38> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d116540 <col:37, col:38> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d116528 <col:38> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d116500 <col:38> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B13.8] (ImplicitCastExpr, IntegralCast, int)
  10: CallExpr 0x55e83d1165d0 <sds.c:698:24, col:40> 'char *'
|-ImplicitCastExpr 0x55e83d1165b8 <col:24> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1164b0 <col:24> 'char *(const char *, int)' Function 0x55e83d0aef78 'strchr' 'char *(const char *, int)'
|-ImplicitCastExpr 0x55e83d116608 <col:31> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1164d8 <col:31> 'const char *' lvalue ParmVar 0x55e83d115d40 'cset' 'const char *'
`-ImplicitCastExpr 0x55e83d116638 <col:37, col:38> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d116620 <col:37, col:38> 'char' <LValueToRValue>
    `-UnaryOperator 0x55e83d116540 <col:37, col:38> 'char' lvalue prefix '*'
      `-ImplicitCastExpr 0x55e83d116528 <col:38> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x55e83d116500 <col:38> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B13.2]([B13.4], [B13.9])
   T: while [B14.5] && [B13.10]
   Preds (1): B14
   Succs (2): B12 B10

 [B14]
   1: DeclRefExpr 0x55e83d116408 <sds.c:698:11> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
   2: ImplicitCastExpr 0x55e83d116458 <sds.c:698:11> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116408 <col:11> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
[B14.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x55e83d116430 <sds.c:698:17> 'char *' lvalue Var 0x55e83d115f10 'end' 'char *'
end
   4: ImplicitCastExpr 0x55e83d116470 <sds.c:698:17> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116430 <col:17> 'char *' lvalue Var 0x55e83d115f10 'end' 'char *'
[B14.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: BinaryOperator 0x55e83d116488 <sds.c:698:11, col:17> 'int' '<='
|-ImplicitCastExpr 0x55e83d116458 <col:11> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d116408 <col:11> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
`-ImplicitCastExpr 0x55e83d116470 <col:17> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116430 <col:17> 'char *' lvalue Var 0x55e83d115f10 'end' 'char *'
[B14.2] <= [B14.4]
   T: [B14.5] && ...
   Preds (2): B11 B15
   Succs (2): B13 B10

 [B15]
   1: DeclStmt 0x55e83d134b30 <sds.c:693:11>col:11
`-VarDecl 0x55e83d115e98 <col:5, col:11> col:11 used start 'char *'
char *start;
   2: DeclStmt 0x55e83d134b18 <sds.c:693:19>col:19
`-VarDecl 0x55e83d115f10 <col:5, col:19> col:19 used end 'char *'
char *end;
   3: DeclStmt 0x55e83d134b00 <sds.c:693:25>col:25
`-VarDecl 0x55e83d115f88 <col:5, col:25> col:25 used sp 'char *'
char *sp;
   4: DeclStmt 0x55e83d134ae8 <sds.c:693:30>col:30
`-VarDecl 0x55e83d116000 <col:5, col:30> col:30 used ep 'char *'
char *ep;
   5: DeclStmt 0x55e83d116110 <sds.c:694:5, col:15>col:12
`-VarDecl 0x55e83d1160b0 <col:5, col:12> col:12 used len 'size_t':'unsigned long'
size_t len;
   6: DeclRefExpr 0x55e83d116178 <sds.c:696:18> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
   7: ImplicitCastExpr 0x55e83d1161a0 <sds.c:696:18> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116178 <col:18> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B15.6] (ImplicitCastExpr, LValueToRValue, sds)
   8: DeclRefExpr 0x55e83d116150 <sds.c:696:10> 'char *' lvalue Var 0x55e83d115e98 'start' 'char *'
start
   9: BinaryOperator 0x55e83d1161b8 <sds.c:696:10, col:18> 'char *' '='
|-DeclRefExpr 0x55e83d116150 <col:10> 'char *' lvalue Var 0x55e83d115e98 'start' 'char *'
`-ImplicitCastExpr 0x55e83d1161a0 <col:18> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d116178 <col:18> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B15.8] = [B15.7]
  10: DeclRefExpr 0x55e83d116128 <sds.c:696:5> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
sp
  11: BinaryOperator 0x55e83d1161e0 <sds.c:696:5, col:18> 'char *' '='
|-DeclRefExpr 0x55e83d116128 <col:5> 'char *' lvalue Var 0x55e83d115f88 'sp' 'char *'
`-BinaryOperator 0x55e83d1161b8 <col:10, col:18> 'char *' '='
  |-DeclRefExpr 0x55e83d116150 <col:10> 'char *' lvalue Var 0x55e83d115e98 'start' 'char *'
  `-ImplicitCastExpr 0x55e83d1161a0 <col:18> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d116178 <col:18> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B15.10] = [B15.9]
  12: DeclRefExpr 0x55e83d116258 <sds.c:697:16> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
  13: ImplicitCastExpr 0x55e83d116330 <sds.c:697:16> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d116258 <col:16> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B15.12] (ImplicitCastExpr, LValueToRValue, sds)
  14: DeclRefExpr 0x55e83d116280 <sds.c:697:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
  15: ImplicitCastExpr 0x55e83d1162d0 <sds.c:697:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d116280 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B15.14] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
  16: DeclRefExpr 0x55e83d1162a8 <sds.c:697:25> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
s
  17: ImplicitCastExpr 0x55e83d116318 <sds.c:697:25> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1162a8 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B15.16] (ImplicitCastExpr, LValueToRValue, sds)
  18: CallExpr 0x55e83d1162e8 <sds.c:697:18, col:26> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d1162d0 <col:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d116280 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d116318 <col:25> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1162a8 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B15.15]([B15.17])
  19: BinaryOperator 0x55e83d116348 <sds.c:697:16, col:26> 'sds':'char *' '+'
|-ImplicitCastExpr 0x55e83d116330 <col:16> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d116258 <col:16> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
`-CallExpr 0x55e83d1162e8 <col:18, col:26> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55e83d1162d0 <col:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d116280 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
  `-ImplicitCastExpr 0x55e83d116318 <col:25> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1162a8 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
[B15.13] + [B15.18]
  20: IntegerLiteral 0x55e83d116370 <sds.c:697:28> 'int' 1
1
  21: BinaryOperator 0x55e83d116390 <sds.c:697:16, col:28> 'sds':'char *' '-'
|-BinaryOperator 0x55e83d116348 <col:16, col:26> 'sds':'char *' '+'
| |-ImplicitCastExpr 0x55e83d116330 <col:16> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d116258 <col:16> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
| `-CallExpr 0x55e83d1162e8 <col:18, col:26> 'size_t':'unsigned long'
|   |-ImplicitCastExpr 0x55e83d1162d0 <col:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x55e83d116280 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
|   `-ImplicitCastExpr 0x55e83d116318 <col:25> 'sds':'char *' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d1162a8 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
`-IntegerLiteral 0x55e83d116370 <col:28> 'int' 1
[B15.19] - [B15.20]
  22: DeclRefExpr 0x55e83d116230 <sds.c:697:10> 'char *' lvalue Var 0x55e83d115f10 'end' 'char *'
end
  23: BinaryOperator 0x55e83d1163b8 <sds.c:697:10, col:28> 'char *' '='
|-DeclRefExpr 0x55e83d116230 <col:10> 'char *' lvalue Var 0x55e83d115f10 'end' 'char *'
`-BinaryOperator 0x55e83d116390 <col:16, col:28> 'sds':'char *' '-'
  |-BinaryOperator 0x55e83d116348 <col:16, col:26> 'sds':'char *' '+'
  | |-ImplicitCastExpr 0x55e83d116330 <col:16> 'sds':'char *' <LValueToRValue>
  | | `-DeclRefExpr 0x55e83d116258 <col:16> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
  | `-CallExpr 0x55e83d1162e8 <col:18, col:26> 'size_t':'unsigned long'
  |   |-ImplicitCastExpr 0x55e83d1162d0 <col:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  |   | `-DeclRefExpr 0x55e83d116280 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
  |   `-ImplicitCastExpr 0x55e83d116318 <col:25> 'sds':'char *' <LValueToRValue>
  |     `-DeclRefExpr 0x55e83d1162a8 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
  `-IntegerLiteral 0x55e83d116370 <col:28> 'int' 1
[B15.22] = [B15.21]
  24: DeclRefExpr 0x55e83d116208 <sds.c:697:5> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
ep
  25: BinaryOperator 0x55e83d1163e0 <sds.c:697:5, col:28> 'char *' '='
|-DeclRefExpr 0x55e83d116208 <col:5> 'char *' lvalue Var 0x55e83d116000 'ep' 'char *'
`-BinaryOperator 0x55e83d1163b8 <col:10, col:28> 'char *' '='
  |-DeclRefExpr 0x55e83d116230 <col:10> 'char *' lvalue Var 0x55e83d115f10 'end' 'char *'
  `-BinaryOperator 0x55e83d116390 <col:16, col:28> 'sds':'char *' '-'
    |-BinaryOperator 0x55e83d116348 <col:16, col:26> 'sds':'char *' '+'
    | |-ImplicitCastExpr 0x55e83d116330 <col:16> 'sds':'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x55e83d116258 <col:16> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
    | `-CallExpr 0x55e83d1162e8 <col:18, col:26> 'size_t':'unsigned long'
    |   |-ImplicitCastExpr 0x55e83d1162d0 <col:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x55e83d116280 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
    |   `-ImplicitCastExpr 0x55e83d116318 <col:25> 'sds':'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d1162a8 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d115cc8 's' 'sds':'char *'
    `-IntegerLiteral 0x55e83d116370 <col:28> 'int' 1
[B15.24] = [B15.23]
   Preds (1): B16
   Succs (1): B14

 [B0 (EXIT)]
   Preds (1): B1
