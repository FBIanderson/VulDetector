static int db_getlocal(lua_State *L)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: DeclRefExpr 0x5615b248bb90 <ldblib.c:159:5> 'void (lua_State *)':'void (lua_State *)' Function 0x5615b2462ce8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
   2: ImplicitCastExpr 0x5615b248bbe0 <ldblib.c:159:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248bb90 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x5615b2462ce8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   3: DeclRefExpr 0x5615b248bbb8 <ldblib.c:159:17> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5615b248bc28 <ldblib.c:159:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248bbb8 <col:17> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x5615b248bbf8 <ldblib.c:159:5, col:18> 'void'
|-ImplicitCastExpr 0x5615b248bbe0 <col:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248bb90 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x5615b2462ce8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x5615b248bc28 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5615b248bbb8 <col:17> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B1.2]([B1.4])
   6: IntegerLiteral 0x5615b248bc40 <ldblib.c:160:12> 'int' 1
1
   7: ReturnStmt 0x5615b248bc60 <ldblib.c:160:5, col:12>
`-IntegerLiteral 0x5615b248bc40 <col:12> 'int' 1
return [B1.6];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5615b248b818 <ldblib.c:153:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x5615b2460088 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
lua_xmove
   2: ImplicitCastExpr 0x5615b248b8b0 <ldblib.c:153:5> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248b818 <col:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x5615b2460088 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_State *, int))
   3: DeclRefExpr 0x5615b248b840 <ldblib.c:153:15> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
L1
   4: ImplicitCastExpr 0x5615b248b908 <ldblib.c:153:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b840 <col:15> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5615b248b868 <ldblib.c:153:19> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x5615b248b920 <ldblib.c:153:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b868 <col:19> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B2.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x5615b248b890 <ldblib.c:153:22> 'int' 1
1
   8: CallExpr 0x5615b248b8c8 <ldblib.c:153:5, col:23> 'void'
|-ImplicitCastExpr 0x5615b248b8b0 <col:5> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248b818 <col:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x5615b2460088 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
|-ImplicitCastExpr 0x5615b248b908 <col:15> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b840 <col:15> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
|-ImplicitCastExpr 0x5615b248b920 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b868 <col:19> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
`-IntegerLiteral 0x5615b248b890 <col:22> 'int' 1
[B2.2]([B2.4], [B2.6], [B2.7])
   9: DeclRefExpr 0x5615b248b938 <ldblib.c:154:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
  10: ImplicitCastExpr 0x5615b248b9b0 <ldblib.c:154:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248b938 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B2.9] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
  11: DeclRefExpr 0x5615b248b960 <ldblib.c:154:20> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x5615b248ba00 <ldblib.c:154:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b960 <col:20> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B2.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: DeclRefExpr 0x5615b248b988 <ldblib.c:154:23> 'const char *' lvalue Var 0x5615b248ae80 'name' 'const char *'
name
  14: ImplicitCastExpr 0x5615b248ba18 <ldblib.c:154:23> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b988 <col:23> 'const char *' lvalue Var 0x5615b248ae80 'name' 'const char *'
[B2.13] (ImplicitCastExpr, LValueToRValue, const char *)
  15: CallExpr 0x5615b248b9c8 <ldblib.c:154:5, col:27> 'void'
|-ImplicitCastExpr 0x5615b248b9b0 <col:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248b938 <col:5> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x5615b2463780 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x5615b248ba00 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b960 <col:20> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
`-ImplicitCastExpr 0x5615b248ba18 <col:23> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5615b248b988 <col:23> 'const char *' lvalue Var 0x5615b248ae80 'name' 'const char *'
[B2.10]([B2.12], [B2.14])
  16: DeclRefExpr 0x5615b248ba30 <ldblib.c:155:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f510 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
  17: ImplicitCastExpr 0x5615b248bac0 <ldblib.c:155:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248ba30 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f510 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B2.16] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  18: DeclRefExpr 0x5615b248ba58 <ldblib.c:155:19> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
  19: ImplicitCastExpr 0x5615b248bb10 <ldblib.c:155:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248ba58 <col:19> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B2.18] (ImplicitCastExpr, LValueToRValue, lua_State *)
  20: IntegerLiteral 0x5615b248ba80 <ldblib.c:155:23> 'int' 2
2
  21: UnaryOperator 0x5615b248baa0 <ldblib.c:155:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x5615b248ba80 <col:23> 'int' 2
-[B2.20]
  22: CallExpr 0x5615b248bad8 <ldblib.c:155:5, col:24> 'void'
|-ImplicitCastExpr 0x5615b248bac0 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248ba30 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x5615b245f510 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248bb10 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248ba58 <col:19> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
`-UnaryOperator 0x5615b248baa0 <col:22, col:23> 'int' prefix '-'
  `-IntegerLiteral 0x5615b248ba80 <col:23> 'int' 2
[B2.17]([B2.19], [B2.21])
  23: IntegerLiteral 0x5615b248bb28 <ldblib.c:156:12> 'int' 2
2
  24: ReturnStmt 0x5615b248bb48 <ldblib.c:156:5, col:12>
`-IntegerLiteral 0x5615b248bb28 <col:12> 'int' 2
return [B2.23];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5615b248b470 <ldblib.c:151:10> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24705a8 'lua_getlocal' 'const char *(lua_State *, const lua_Debug *, int)'
lua_getlocal
   2: ImplicitCastExpr 0x5615b248b728 <ldblib.c:151:10> 'const char *(*)(lua_State *, const lua_Debug *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248b470 <col:10> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24705a8 'lua_getlocal' 'const char *(lua_State *, const lua_Debug *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const lua_Debug *, int))
   3: DeclRefExpr 0x5615b248b498 <ldblib.c:151:23> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
L1
   4: ImplicitCastExpr 0x5615b248b780 <ldblib.c:151:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b498 <col:23> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5615b248b4c0 <ldblib.c:151:28> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
ar
   6: UnaryOperator 0x5615b248b4e8 <ldblib.c:151:27, col:28> 'lua_Debug *' prefix '&'
`-DeclRefExpr 0x5615b248b4c0 <col:28> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
&[B3.5]
   7: ImplicitCastExpr 0x5615b248b798 <ldblib.c:151:27, col:28> 'const lua_Debug *' <BitCast>
`-UnaryOperator 0x5615b248b4e8 <col:27, col:28> 'lua_Debug *' prefix '&'
  `-DeclRefExpr 0x5615b248b4c0 <col:28> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
[B3.6] (ImplicitCastExpr, BitCast, const lua_Debug *)
   8: DeclRefExpr 0x5615b248b508 <./lauxlib.h:104:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
   9: ImplicitCastExpr 0x5615b248b600 <./lauxlib.h:104:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248b508 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B3.8] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
  10: DeclRefExpr 0x5615b248b530 <ldblib.c:151:46> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x5615b248b650 <ldblib.c:151:46> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b530 <col:46> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B3.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: DeclRefExpr 0x5615b248b558 <ldblib.c:151:49> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
arg
  13: ImplicitCastExpr 0x5615b248b5a0 <ldblib.c:151:49> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248b558 <col:49> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
[B3.12] (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x5615b248b580 <ldblib.c:151:53> 'int' 2
2
  15: BinaryOperator 0x5615b248b5b8 <ldblib.c:151:49, col:53> 'int' '+'
|-ImplicitCastExpr 0x5615b248b5a0 <col:49> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b558 <col:49> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
`-IntegerLiteral 0x5615b248b580 <col:53> 'int' 2
[B3.13] + [B3.14]
  16: CallExpr 0x5615b248b618 <./lauxlib.h:104:34, col:58> 'lua_Integer':'long'
|-ImplicitCastExpr 0x5615b248b600 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248b508 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248b650 <ldblib.c:151:46> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b530 <col:46> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
`-ParenExpr 0x5615b248b5e0 <./lauxlib.h:104:55, col:57> 'int'
  `-BinaryOperator 0x5615b248b5b8 <ldblib.c:151:49, col:53> 'int' '+'
    |-ImplicitCastExpr 0x5615b248b5a0 <col:49> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248b558 <col:49> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
    `-IntegerLiteral 0x5615b248b580 <col:53> 'int' 2
[B3.9]([B3.11], ([B3.15]))
  17: CStyleCastExpr 0x5615b248b680 <./lauxlib.h:104:29, col:58> 'int' <IntegralCast>
`-CallExpr 0x5615b248b618 <col:34, col:58> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x5615b248b600 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248b508 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x5615b248b650 <ldblib.c:151:46> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248b530 <col:46> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
  `-ParenExpr 0x5615b248b5e0 <./lauxlib.h:104:55, col:57> 'int'
    `-BinaryOperator 0x5615b248b5b8 <ldblib.c:151:49, col:53> 'int' '+'
      |-ImplicitCastExpr 0x5615b248b5a0 <col:49> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x5615b248b558 <col:49> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
      `-IntegerLiteral 0x5615b248b580 <col:53> 'int' 2
(int)[B3.16] (CStyleCastExpr, IntegralCast, int)
  18: CallExpr 0x5615b248b740 <ldblib.c:151:10, col:55> 'const char *'
|-ImplicitCastExpr 0x5615b248b728 <col:10> 'const char *(*)(lua_State *, const lua_Debug *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248b470 <col:10> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24705a8 'lua_getlocal' 'const char *(lua_State *, const lua_Debug *, int)'
|-ImplicitCastExpr 0x5615b248b780 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b498 <col:23> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
|-ImplicitCastExpr 0x5615b248b798 <col:27, col:28> 'const lua_Debug *' <BitCast>
| `-UnaryOperator 0x5615b248b4e8 <col:27, col:28> 'lua_Debug *' prefix '&'
|   `-DeclRefExpr 0x5615b248b4c0 <col:28> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
`-ParenExpr 0x5615b248b6a8 <./lauxlib.h:104:28, col:59> 'int'
  `-CStyleCastExpr 0x5615b248b680 <col:29, col:58> 'int' <IntegralCast>
    `-CallExpr 0x5615b248b618 <col:34, col:58> 'lua_Integer':'long'
      |-ImplicitCastExpr 0x5615b248b600 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5615b248b508 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
      |-ImplicitCastExpr 0x5615b248b650 <ldblib.c:151:46> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x5615b248b530 <col:46> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
      `-ParenExpr 0x5615b248b5e0 <./lauxlib.h:104:55, col:57> 'int'
        `-BinaryOperator 0x5615b248b5b8 <ldblib.c:151:49, col:53> 'int' '+'
          |-ImplicitCastExpr 0x5615b248b5a0 <col:49> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x5615b248b558 <col:49> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
          `-IntegerLiteral 0x5615b248b580 <col:53> 'int' 2
[B3.2]([B3.4], [B3.7], ([B3.17]))
  19: DeclRefExpr 0x5615b248b448 <ldblib.c:151:3> 'const char *' lvalue Var 0x5615b248ae80 'name' 'const char *'
name
  20: BinaryOperator 0x5615b248b7b0 <ldblib.c:151:3, col:55> 'const char *' '='
|-DeclRefExpr 0x5615b248b448 <col:3> 'const char *' lvalue Var 0x5615b248ae80 'name' 'const char *'
`-CallExpr 0x5615b248b740 <col:10, col:55> 'const char *'
  |-ImplicitCastExpr 0x5615b248b728 <col:10> 'const char *(*)(lua_State *, const lua_Debug *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248b470 <col:10> 'const char *(lua_State *, const lua_Debug *, int)' Function 0x5615b24705a8 'lua_getlocal' 'const char *(lua_State *, const lua_Debug *, int)'
  |-ImplicitCastExpr 0x5615b248b780 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248b498 <col:23> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
  |-ImplicitCastExpr 0x5615b248b798 <col:27, col:28> 'const lua_Debug *' <BitCast>
  | `-UnaryOperator 0x5615b248b4e8 <col:27, col:28> 'lua_Debug *' prefix '&'
  |   `-DeclRefExpr 0x5615b248b4c0 <col:28> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
  `-ParenExpr 0x5615b248b6a8 <./lauxlib.h:104:28, col:59> 'int'
    `-CStyleCastExpr 0x5615b248b680 <col:29, col:58> 'int' <IntegralCast>
      `-CallExpr 0x5615b248b618 <col:34, col:58> 'lua_Integer':'long'
        |-ImplicitCastExpr 0x5615b248b600 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5615b248b508 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
        |-ImplicitCastExpr 0x5615b248b650 <ldblib.c:151:46> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5615b248b530 <col:46> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
        `-ParenExpr 0x5615b248b5e0 <./lauxlib.h:104:55, col:57> 'int'
          `-BinaryOperator 0x5615b248b5b8 <ldblib.c:151:49, col:53> 'int' '+'
            |-ImplicitCastExpr 0x5615b248b5a0 <col:49> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x5615b248b558 <col:49> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
            `-IntegerLiteral 0x5615b248b580 <col:53> 'int' 2
[B3.19] = [B3.18]
  21: DeclRefExpr 0x5615b248b7d8 <ldblib.c:152:7> 'const char *' lvalue Var 0x5615b248ae80 'name' 'const char *'
name
  22: ImplicitCastExpr 0x5615b248b800 <ldblib.c:152:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b7d8 <col:7> 'const char *' lvalue Var 0x5615b248ae80 'name' 'const char *'
[B3.21] (ImplicitCastExpr, LValueToRValue, const char *)
   T: if [B3.22]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5615b248b208 <ldblib.c:150:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x5615b248b358 <ldblib.c:150:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248b208 <col:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x5615b248b230 <ldblib.c:150:26> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5615b248b3b0 <ldblib.c:150:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248b230 <col:26> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5615b248b258 <ldblib.c:150:29> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
arg
   6: ImplicitCastExpr 0x5615b248b2a0 <ldblib.c:150:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248b258 <col:29> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5615b248b280 <ldblib.c:150:33> 'int' 1
1
   8: BinaryOperator 0x5615b248b2b8 <ldblib.c:150:29, col:33> 'int' '+'
|-ImplicitCastExpr 0x5615b248b2a0 <col:29> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b258 <col:29> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
`-IntegerLiteral 0x5615b248b280 <col:33> 'int' 1
[B4.6] + [B4.7]
   9: StringLiteral 0x5615b248b318 <ldblib.c:150:36> 'char [19]' lvalue "level out of range"
"level out of range"
  10: ImplicitCastExpr 0x5615b248b3c8 <ldblib.c:150:36> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5615b248b318 <col:36> 'char [19]' lvalue "level out of range"
[B4.9] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  11: ImplicitCastExpr 0x5615b248b3e0 <ldblib.c:150:36> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5615b248b3c8 <col:36> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5615b248b318 <col:36> 'char [19]' lvalue "level out of range"
[B4.10] (ImplicitCastExpr, BitCast, const char *)
  12: CallExpr 0x5615b248b370 <ldblib.c:150:12, col:56> 'int'
|-ImplicitCastExpr 0x5615b248b358 <col:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248b208 <col:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x5615b248b3b0 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248b230 <col:26> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
|-BinaryOperator 0x5615b248b2b8 <col:29, col:33> 'int' '+'
| |-ImplicitCastExpr 0x5615b248b2a0 <col:29> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x5615b248b258 <col:29> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
| `-IntegerLiteral 0x5615b248b280 <col:33> 'int' 1
`-ImplicitCastExpr 0x5615b248b3e0 <col:36> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5615b248b3c8 <col:36> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5615b248b318 <col:36> 'char [19]' lvalue "level out of range"
[B4.2]([B4.4], [B4.8], [B4.11])
  13: ReturnStmt 0x5615b248b3f8 <ldblib.c:150:5, col:56>
`-CallExpr 0x5615b248b370 <col:12, col:56> 'int'
  |-ImplicitCastExpr 0x5615b248b358 <col:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248b208 <col:12> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5615b24755f0 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x5615b248b3b0 <col:26> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248b230 <col:26> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
  |-BinaryOperator 0x5615b248b2b8 <col:29, col:33> 'int' '+'
  | |-ImplicitCastExpr 0x5615b248b2a0 <col:29> 'int' <LValueToRValue>
  | | `-DeclRefExpr 0x5615b248b258 <col:29> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
  | `-IntegerLiteral 0x5615b248b280 <col:33> 'int' 1
  `-ImplicitCastExpr 0x5615b248b3e0 <col:36> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x5615b248b3c8 <col:36> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x5615b248b318 <col:36> 'char [19]' lvalue "level out of range"
return [B4.12];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclStmt 0x5615b248ac40 <ldblib.c:145:3, col:10>col:7
`-VarDecl 0x5615b248abe0 <col:3, col:7> col:7 used arg 'int'
int arg;
   2: DeclRefExpr 0x5615b248acc8 <ldblib.c:146:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
getthread
   3: ImplicitCastExpr 0x5615b248ad60 <ldblib.c:146:19> 'lua_State *(*)(lua_State *, int *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248acc8 <col:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
[B5.2] (ImplicitCastExpr, FunctionToPointerDecay, lua_State *(*)(lua_State *, int *))
   4: DeclRefExpr 0x5615b248acf0 <ldblib.c:146:29> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x5615b248adb0 <ldblib.c:146:29> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248acf0 <col:29> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B5.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: DeclRefExpr 0x5615b248ad18 <ldblib.c:146:33> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
arg
   7: UnaryOperator 0x5615b248ad40 <ldblib.c:146:32, col:33> 'int *' prefix '&'
`-DeclRefExpr 0x5615b248ad18 <col:33> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
&[B5.6]
   8: CallExpr 0x5615b248ad78 <ldblib.c:146:19, col:36> 'lua_State *'
|-ImplicitCastExpr 0x5615b248ad60 <col:19> 'lua_State *(*)(lua_State *, int *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248acc8 <col:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
|-ImplicitCastExpr 0x5615b248adb0 <col:29> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248acf0 <col:29> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
`-UnaryOperator 0x5615b248ad40 <col:32, col:33> 'int *' prefix '&'
  `-DeclRefExpr 0x5615b248ad18 <col:33> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
[B5.3]([B5.5], [B5.7])
   9: DeclStmt 0x5615b248adc8 <ldblib.c:146:3, col:37>col:14
`-VarDecl 0x5615b248ac68 <col:3, col:36> col:14 used L1 'lua_State *' cinit
  `-CallExpr 0x5615b248ad78 <col:19, col:36> 'lua_State *'
    |-ImplicitCastExpr 0x5615b248ad60 <col:19> 'lua_State *(*)(lua_State *, int *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5615b248acc8 <col:19> 'lua_State *(lua_State *, int *)' Function 0x5615b2484e40 'getthread' 'lua_State *(lua_State *, int *)'
    |-ImplicitCastExpr 0x5615b248adb0 <col:29> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248acf0 <col:29> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
    `-UnaryOperator 0x5615b248ad40 <col:32, col:33> 'int *' prefix '&'
      `-DeclRefExpr 0x5615b248ad18 <col:33> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
lua_State *L1 = getthread(L, &arg);
  10: DeclStmt 0x5615b248ae50 <ldblib.c:147:3, col:15>col:13
`-VarDecl 0x5615b248adf0 <col:3, col:13> col:13 used ar 'lua_Debug':'struct lua_Debug'
lua_Debug ar;
  11: DeclStmt 0x5615b248aee0 <ldblib.c:148:3, col:19>col:15
`-VarDecl 0x5615b248ae80 <col:3, col:15> col:15 used name 'const char *'
const char *name;
  12: DeclRefExpr 0x5615b248aef8 <ldblib.c:149:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
lua_getstack
  13: ImplicitCastExpr 0x5615b248b178 <ldblib.c:149:8> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248aef8 <col:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
[B5.12] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, lua_Debug *))
  14: DeclRefExpr 0x5615b248af20 <ldblib.c:149:21> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
L1
  15: ImplicitCastExpr 0x5615b248b1d0 <ldblib.c:149:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248af20 <col:21> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
[B5.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: DeclRefExpr 0x5615b248af48 <./lauxlib.h:104:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
  17: ImplicitCastExpr 0x5615b248b068 <./lauxlib.h:104:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5615b248af48 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B5.16] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
  18: DeclRefExpr 0x5615b248af70 <ldblib.c:149:39> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
L
  19: ImplicitCastExpr 0x5615b248b0b8 <ldblib.c:149:39> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5615b248af70 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
[B5.18] (ImplicitCastExpr, LValueToRValue, lua_State *)
  20: DeclRefExpr 0x5615b248af98 <ldblib.c:149:42> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
arg
  21: ImplicitCastExpr 0x5615b248afe0 <ldblib.c:149:42> 'int' <LValueToRValue>
`-DeclRefExpr 0x5615b248af98 <col:42> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
[B5.20] (ImplicitCastExpr, LValueToRValue, int)
  22: IntegerLiteral 0x5615b248afc0 <ldblib.c:149:46> 'int' 1
1
  23: BinaryOperator 0x5615b248b020 <ldblib.c:149:42, col:46> 'int' '+'
|-ImplicitCastExpr 0x5615b248afe0 <col:42> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5615b248af98 <col:42> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
`-IntegerLiteral 0x5615b248afc0 <col:46> 'int' 1
[B5.21] + [B5.22]
  24: CallExpr 0x5615b248b080 <./lauxlib.h:104:34, col:58> 'lua_Integer':'long'
|-ImplicitCastExpr 0x5615b248b068 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248af48 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x5615b248b0b8 <ldblib.c:149:39> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248af70 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
`-ParenExpr 0x5615b248b048 <./lauxlib.h:104:55, col:57> 'int'
  `-BinaryOperator 0x5615b248b020 <ldblib.c:149:42, col:46> 'int' '+'
    |-ImplicitCastExpr 0x5615b248afe0 <col:42> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x5615b248af98 <col:42> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
    `-IntegerLiteral 0x5615b248afc0 <col:46> 'int' 1
[B5.17]([B5.19], ([B5.23]))
  25: CStyleCastExpr 0x5615b248b0e8 <./lauxlib.h:104:29, col:58> 'int' <IntegralCast>
`-CallExpr 0x5615b248b080 <col:34, col:58> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x5615b248b068 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248af48 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x5615b248b0b8 <ldblib.c:149:39> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248af70 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
  `-ParenExpr 0x5615b248b048 <./lauxlib.h:104:55, col:57> 'int'
    `-BinaryOperator 0x5615b248b020 <ldblib.c:149:42, col:46> 'int' '+'
      |-ImplicitCastExpr 0x5615b248afe0 <col:42> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x5615b248af98 <col:42> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
      `-IntegerLiteral 0x5615b248afc0 <col:46> 'int' 1
(int)[B5.24] (CStyleCastExpr, IntegralCast, int)
  26: DeclRefExpr 0x5615b248b130 <ldblib.c:149:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
ar
  27: UnaryOperator 0x5615b248b158 <ldblib.c:149:50, col:51> 'lua_Debug *' prefix '&'
`-DeclRefExpr 0x5615b248b130 <col:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
&[B5.26]
  28: CallExpr 0x5615b248b190 <ldblib.c:149:8, col:53> 'int'
|-ImplicitCastExpr 0x5615b248b178 <col:8> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5615b248aef8 <col:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
|-ImplicitCastExpr 0x5615b248b1d0 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5615b248af20 <col:21> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
|-ParenExpr 0x5615b248b110 <./lauxlib.h:104:28, col:59> 'int'
| `-CStyleCastExpr 0x5615b248b0e8 <col:29, col:58> 'int' <IntegralCast>
|   `-CallExpr 0x5615b248b080 <col:34, col:58> 'lua_Integer':'long'
|     |-ImplicitCastExpr 0x5615b248b068 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5615b248af48 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|     |-ImplicitCastExpr 0x5615b248b0b8 <ldblib.c:149:39> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x5615b248af70 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
|     `-ParenExpr 0x5615b248b048 <./lauxlib.h:104:55, col:57> 'int'
|       `-BinaryOperator 0x5615b248b020 <ldblib.c:149:42, col:46> 'int' '+'
|         |-ImplicitCastExpr 0x5615b248afe0 <col:42> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x5615b248af98 <col:42> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
|         `-IntegerLiteral 0x5615b248afc0 <col:46> 'int' 1
`-UnaryOperator 0x5615b248b158 <col:50, col:51> 'lua_Debug *' prefix '&'
  `-DeclRefExpr 0x5615b248b130 <col:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
[B5.13]([B5.15], ([B5.25]), [B5.27])
  29: UnaryOperator 0x5615b248b1e8 <ldblib.c:149:7, col:53> 'int' prefix '!'
`-CallExpr 0x5615b248b190 <col:8, col:53> 'int'
  |-ImplicitCastExpr 0x5615b248b178 <col:8> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5615b248aef8 <col:8> 'int (lua_State *, int, lua_Debug *)' Function 0x5615b246ff78 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
  |-ImplicitCastExpr 0x5615b248b1d0 <col:21> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5615b248af20 <col:21> 'lua_State *' lvalue Var 0x5615b248ac68 'L1' 'lua_State *'
  |-ParenExpr 0x5615b248b110 <./lauxlib.h:104:28, col:59> 'int'
  | `-CStyleCastExpr 0x5615b248b0e8 <col:29, col:58> 'int' <IntegralCast>
  |   `-CallExpr 0x5615b248b080 <col:34, col:58> 'lua_Integer':'long'
  |     |-ImplicitCastExpr 0x5615b248b068 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  |     | `-DeclRefExpr 0x5615b248af48 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x5615b24762b0 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |     |-ImplicitCastExpr 0x5615b248b0b8 <ldblib.c:149:39> 'lua_State *' <LValueToRValue>
  |     | `-DeclRefExpr 0x5615b248af70 <col:39> 'lua_State *' lvalue ParmVar 0x5615b248aa90 'L' 'lua_State *'
  |     `-ParenExpr 0x5615b248b048 <./lauxlib.h:104:55, col:57> 'int'
  |       `-BinaryOperator 0x5615b248b020 <ldblib.c:149:42, col:46> 'int' '+'
  |         |-ImplicitCastExpr 0x5615b248afe0 <col:42> 'int' <LValueToRValue>
  |         | `-DeclRefExpr 0x5615b248af98 <col:42> 'int' lvalue Var 0x5615b248abe0 'arg' 'int'
  |         `-IntegerLiteral 0x5615b248afc0 <col:46> 'int' 1
  `-UnaryOperator 0x5615b248b158 <col:50, col:51> 'lua_Debug *' prefix '&'
    `-DeclRefExpr 0x5615b248b130 <col:51> 'lua_Debug':'struct lua_Debug' lvalue Var 0x5615b248adf0 'ar' 'lua_Debug':'struct lua_Debug'
![B5.28]
   T: if [B5.29]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (3): B1 B2 B4
