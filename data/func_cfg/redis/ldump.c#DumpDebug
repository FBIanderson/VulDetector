static void DumpDebug(const Proto *f, DumpState *D)
 [B18 (ENTRY)]
   Succs (1): B17

 [B1]
   1: DeclRefExpr 0x562132ddd0a0 <ldump.c:126:17> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
   2: UnaryOperator 0x562132ddd0c8 <ldump.c:126:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x562132ddd0a0 <col:17> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B1.1]++
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: DeclRefExpr 0x562132ddd0e8 <ldump.c:126:22> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
DumpString
   2: ImplicitCastExpr 0x562132ddd230 <ldump.c:126:22> 'void (*)(const TString *, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddd0e8 <col:22> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const TString *, DumpState *))
   3: DeclRefExpr 0x562132ddd110 <ldump.c:126:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
   4: ImplicitCastExpr 0x562132ddd138 <ldump.c:126:33> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddd110 <col:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B2.3] (ImplicitCastExpr, LValueToRValue, const Proto *)
   5: MemberExpr 0x562132ddd150 <ldump.c:126:33, col:36> 'TString **const' lvalue ->upvalues 0x562132db8ca0
`-ImplicitCastExpr 0x562132ddd138 <col:33> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddd110 <col:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B2.4]->upvalues
   6: ImplicitCastExpr 0x562132ddd1b0 <ldump.c:126:33, col:36> 'TString **' <LValueToRValue>
`-MemberExpr 0x562132ddd150 <col:33, col:36> 'TString **const' lvalue ->upvalues 0x562132db8ca0
  `-ImplicitCastExpr 0x562132ddd138 <col:33> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddd110 <col:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B2.5] (ImplicitCastExpr, LValueToRValue, TString **)
   7: DeclRefExpr 0x562132ddd188 <ldump.c:126:45> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
   8: ImplicitCastExpr 0x562132ddd1c8 <ldump.c:126:45> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddd188 <col:45> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B2.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x562132ddd1e0 <ldump.c:126:33, col:46> 'TString *' lvalue
|-ImplicitCastExpr 0x562132ddd1b0 <col:33, col:36> 'TString **' <LValueToRValue>
| `-MemberExpr 0x562132ddd150 <col:33, col:36> 'TString **const' lvalue ->upvalues 0x562132db8ca0
|   `-ImplicitCastExpr 0x562132ddd138 <col:33> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562132ddd110 <col:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
`-ImplicitCastExpr 0x562132ddd1c8 <col:45> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddd188 <col:45> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B2.6][[B2.8]]
  10: ImplicitCastExpr 0x562132ddd280 <ldump.c:126:33, col:46> 'TString *' <LValueToRValue>
`-ArraySubscriptExpr 0x562132ddd1e0 <col:33, col:46> 'TString *' lvalue
  |-ImplicitCastExpr 0x562132ddd1b0 <col:33, col:36> 'TString **' <LValueToRValue>
  | `-MemberExpr 0x562132ddd150 <col:33, col:36> 'TString **const' lvalue ->upvalues 0x562132db8ca0
  |   `-ImplicitCastExpr 0x562132ddd138 <col:33> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x562132ddd110 <col:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
  `-ImplicitCastExpr 0x562132ddd1c8 <col:45> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562132ddd188 <col:45> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B2.9] (ImplicitCastExpr, LValueToRValue, TString *)
  11: ImplicitCastExpr 0x562132ddd298 <ldump.c:126:33, col:46> 'const TString *' <BitCast>
`-ImplicitCastExpr 0x562132ddd280 <col:33, col:46> 'TString *' <LValueToRValue>
  `-ArraySubscriptExpr 0x562132ddd1e0 <col:33, col:46> 'TString *' lvalue
    |-ImplicitCastExpr 0x562132ddd1b0 <col:33, col:36> 'TString **' <LValueToRValue>
    | `-MemberExpr 0x562132ddd150 <col:33, col:36> 'TString **const' lvalue ->upvalues 0x562132db8ca0
    |   `-ImplicitCastExpr 0x562132ddd138 <col:33> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x562132ddd110 <col:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
    `-ImplicitCastExpr 0x562132ddd1c8 <col:45> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562132ddd188 <col:45> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B2.10] (ImplicitCastExpr, BitCast, const TString *)
  12: DeclRefExpr 0x562132ddd208 <ldump.c:126:48> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
  13: ImplicitCastExpr 0x562132ddd2b0 <ldump.c:126:48> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddd208 <col:48> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B2.12] (ImplicitCastExpr, LValueToRValue, DumpState *)
  14: CallExpr 0x562132ddd248 <ldump.c:126:22, col:49> 'void'
|-ImplicitCastExpr 0x562132ddd230 <col:22> 'void (*)(const TString *, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddd0e8 <col:22> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
|-ImplicitCastExpr 0x562132ddd298 <col:33, col:46> 'const TString *' <BitCast>
| `-ImplicitCastExpr 0x562132ddd280 <col:33, col:46> 'TString *' <LValueToRValue>
|   `-ArraySubscriptExpr 0x562132ddd1e0 <col:33, col:46> 'TString *' lvalue
|     |-ImplicitCastExpr 0x562132ddd1b0 <col:33, col:36> 'TString **' <LValueToRValue>
|     | `-MemberExpr 0x562132ddd150 <col:33, col:36> 'TString **const' lvalue ->upvalues 0x562132db8ca0
|     |   `-ImplicitCastExpr 0x562132ddd138 <col:33> 'const Proto *' <LValueToRValue>
|     |     `-DeclRefExpr 0x562132ddd110 <col:33> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
|     `-ImplicitCastExpr 0x562132ddd1c8 <col:45> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddd188 <col:45> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-ImplicitCastExpr 0x562132ddd2b0 <col:48> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddd208 <col:48> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B2.2]([B2.11], [B2.13])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x562132ddcff8 <ldump.c:126:12> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
   2: ImplicitCastExpr 0x562132ddd048 <ldump.c:126:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddcff8 <col:12> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562132ddd020 <ldump.c:126:14> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
   4: ImplicitCastExpr 0x562132ddd060 <ldump.c:126:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddd020 <col:14> 'int' lvalue Var 0x562132ddb910 'n' 'int'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562132ddd078 <ldump.c:126:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562132ddd048 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132ddcff8 <col:12> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-ImplicitCastExpr 0x562132ddd060 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddd020 <col:14> 'int' lvalue Var 0x562132ddb910 'n' 'int'
[B3.2] < [B3.4]
   T: for (...; [B3.5]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: ConditionalOperator 0x562132ddce38 <ldump.c:124:5, col:25> 'int'
|-ImplicitCastExpr 0x562132ddce08 <col:5, col:14> 'int' <LValueToRValue>
| `-ParenExpr 0x562132ddcd50 <col:5, col:14> 'int' lvalue
|   `-MemberExpr 0x562132ddcd18 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
|     `-ImplicitCastExpr 0x562132ddcd00 <col:6> 'DumpState *' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddccd8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
|-IntegerLiteral 0x562132ddcd70 <col:18> 'int' 0
`-ImplicitCastExpr 0x562132ddce20 <col:22, col:25> 'int' <LValueToRValue>
  `-MemberExpr 0x562132ddcdd0 <col:22, col:25> 'const int' lvalue ->sizeupvalues 0x562132db8f18
    `-ImplicitCastExpr 0x562132ddcdb8 <col:22> 'const Proto *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddcd90 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B7.4] ? [B5.1] : [B6.4]
   2: DeclRefExpr 0x562132ddccb0 <ldump.c:124:2> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
   3: BinaryOperator 0x562132ddce68 <ldump.c:124:2, col:25> 'int' '='
|-DeclRefExpr 0x562132ddccb0 <col:2> 'int' lvalue Var 0x562132ddb910 'n' 'int'
`-ConditionalOperator 0x562132ddce38 <col:5, col:25> 'int'
  |-ImplicitCastExpr 0x562132ddce08 <col:5, col:14> 'int' <LValueToRValue>
  | `-ParenExpr 0x562132ddcd50 <col:5, col:14> 'int' lvalue
  |   `-MemberExpr 0x562132ddcd18 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
  |     `-ImplicitCastExpr 0x562132ddcd00 <col:6> 'DumpState *' <LValueToRValue>
  |       `-DeclRefExpr 0x562132ddccd8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
  |-IntegerLiteral 0x562132ddcd70 <col:18> 'int' 0
  `-ImplicitCastExpr 0x562132ddce20 <col:22, col:25> 'int' <LValueToRValue>
    `-MemberExpr 0x562132ddcdd0 <col:22, col:25> 'const int' lvalue ->sizeupvalues 0x562132db8f18
      `-ImplicitCastExpr 0x562132ddcdb8 <col:22> 'const Proto *' <LValueToRValue>
        `-DeclRefExpr 0x562132ddcd90 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B4.2] = [B4.1]
   4: DeclRefExpr 0x562132ddce90 <ldump.c:125:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
DumpInt
   5: ImplicitCastExpr 0x562132ddcf08 <ldump.c:125:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddce90 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
[B4.4] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
   6: DeclRefExpr 0x562132ddceb8 <ldump.c:125:10> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
   7: ImplicitCastExpr 0x562132ddcf58 <ldump.c:125:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddceb8 <col:10> 'int' lvalue Var 0x562132ddb910 'n' 'int'
[B4.6] (ImplicitCastExpr, LValueToRValue, int)
   8: DeclRefExpr 0x562132ddcee0 <ldump.c:125:12> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
   9: ImplicitCastExpr 0x562132ddcf70 <ldump.c:125:12> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddcee0 <col:12> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B4.8] (ImplicitCastExpr, LValueToRValue, DumpState *)
  10: CallExpr 0x562132ddcf20 <ldump.c:125:2, col:13> 'void'
|-ImplicitCastExpr 0x562132ddcf08 <col:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddce90 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132ddcf58 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132ddceb8 <col:10> 'int' lvalue Var 0x562132ddb910 'n' 'int'
`-ImplicitCastExpr 0x562132ddcf70 <col:12> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddcee0 <col:12> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B4.5]([B4.7], [B4.9])
  11: IntegerLiteral 0x562132ddcfb0 <ldump.c:126:9> 'int' 0
0
  12: DeclRefExpr 0x562132ddcf88 <ldump.c:126:7> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
  13: BinaryOperator 0x562132ddcfd0 <ldump.c:126:7, col:9> 'int' '='
|-DeclRefExpr 0x562132ddcf88 <col:7> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-IntegerLiteral 0x562132ddcfb0 <col:9> 'int' 0
[B4.12] = [B4.11]
   Preds (2): B5 B6
   Succs (1): B3

 [B5]
   1: IntegerLiteral 0x562132ddcd70 <ldump.c:124:18> 'int' 0
0
   Preds (1): B7
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x562132ddcd90 <ldump.c:124:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
   2: ImplicitCastExpr 0x562132ddcdb8 <ldump.c:124:22> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddcd90 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B6.1] (ImplicitCastExpr, LValueToRValue, const Proto *)
   3: MemberExpr 0x562132ddcdd0 <ldump.c:124:22, col:25> 'const int' lvalue ->sizeupvalues 0x562132db8f18
`-ImplicitCastExpr 0x562132ddcdb8 <col:22> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddcd90 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B6.2]->sizeupvalues
   4: ImplicitCastExpr 0x562132ddce20 <ldump.c:124:22, col:25> 'int' <LValueToRValue>
`-MemberExpr 0x562132ddcdd0 <col:22, col:25> 'const int' lvalue ->sizeupvalues 0x562132db8f18
  `-ImplicitCastExpr 0x562132ddcdb8 <col:22> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddcd90 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   Preds (1): B7
   Succs (1): B4

 [B7]
   1: DeclRefExpr 0x562132ddccd8 <ldump.c:124:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
   2: ImplicitCastExpr 0x562132ddcd00 <ldump.c:124:6> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddccd8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B7.1] (ImplicitCastExpr, LValueToRValue, DumpState *)
   3: MemberExpr 0x562132ddcd18 <ldump.c:124:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
`-ImplicitCastExpr 0x562132ddcd00 <col:6> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddccd8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B7.2]->strip
   4: ImplicitCastExpr 0x562132ddce08 <ldump.c:124:5, col:14> 'int' <LValueToRValue>
`-ParenExpr 0x562132ddcd50 <col:5, col:14> 'int' lvalue
  `-MemberExpr 0x562132ddcd18 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
    `-ImplicitCastExpr 0x562132ddcd00 <col:6> 'DumpState *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddccd8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
([B7.3]) (ImplicitCastExpr, LValueToRValue, int)
   T: [B7.4] ? ... : ...
   Preds (1): B10
   Succs (2): B5 B6

 [B8]
   1: DeclRefExpr 0x562132ddc5f0 <ldump.c:118:17> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
   2: UnaryOperator 0x562132ddc618 <ldump.c:118:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x562132ddc5f0 <col:17> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B8.1]++
   Preds (1): B9
   Succs (1): B10

 [B9]
   1: DeclRefExpr 0x562132ddc638 <ldump.c:120:3> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
DumpString
   2: ImplicitCastExpr 0x562132ddc7b8 <ldump.c:120:3> 'void (*)(const TString *, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddc638 <col:3> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const TString *, DumpState *))
   3: DeclRefExpr 0x562132ddc660 <ldump.c:120:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
   4: ImplicitCastExpr 0x562132ddc688 <ldump.c:120:14> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.3] (ImplicitCastExpr, LValueToRValue, const Proto *)
   5: MemberExpr 0x562132ddc6a0 <ldump.c:120:14, col:17> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
`-ImplicitCastExpr 0x562132ddc688 <col:14> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.4]->locvars
   6: ImplicitCastExpr 0x562132ddc700 <ldump.c:120:14, col:17> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x562132ddc6a0 <col:14, col:17> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
  `-ImplicitCastExpr 0x562132ddc688 <col:14> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.5] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
   7: DeclRefExpr 0x562132ddc6d8 <ldump.c:120:25> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
   8: ImplicitCastExpr 0x562132ddc718 <ldump.c:120:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddc6d8 <col:25> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x562132ddc730 <ldump.c:120:14, col:26> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x562132ddc700 <col:14, col:17> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x562132ddc6a0 <col:14, col:17> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
|   `-ImplicitCastExpr 0x562132ddc688 <col:14> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
`-ImplicitCastExpr 0x562132ddc718 <col:25> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddc6d8 <col:25> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.6][[B9.8]]
  10: MemberExpr 0x562132ddc758 <ldump.c:120:14, col:28> 'TString *' lvalue .varname 0x562132db94e0
`-ArraySubscriptExpr 0x562132ddc730 <col:14, col:26> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x562132ddc700 <col:14, col:17> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x562132ddc6a0 <col:14, col:17> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
  |   `-ImplicitCastExpr 0x562132ddc688 <col:14> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
  `-ImplicitCastExpr 0x562132ddc718 <col:25> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562132ddc6d8 <col:25> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.9].varname
  11: ImplicitCastExpr 0x562132ddc808 <ldump.c:120:14, col:28> 'TString *' <LValueToRValue>
`-MemberExpr 0x562132ddc758 <col:14, col:28> 'TString *' lvalue .varname 0x562132db94e0
  `-ArraySubscriptExpr 0x562132ddc730 <col:14, col:26> 'struct LocVar':'struct LocVar' lvalue
    |-ImplicitCastExpr 0x562132ddc700 <col:14, col:17> 'struct LocVar *' <LValueToRValue>
    | `-MemberExpr 0x562132ddc6a0 <col:14, col:17> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
    |   `-ImplicitCastExpr 0x562132ddc688 <col:14> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
    `-ImplicitCastExpr 0x562132ddc718 <col:25> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562132ddc6d8 <col:25> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.10] (ImplicitCastExpr, LValueToRValue, TString *)
  12: ImplicitCastExpr 0x562132ddc820 <ldump.c:120:14, col:28> 'const TString *' <BitCast>
`-ImplicitCastExpr 0x562132ddc808 <col:14, col:28> 'TString *' <LValueToRValue>
  `-MemberExpr 0x562132ddc758 <col:14, col:28> 'TString *' lvalue .varname 0x562132db94e0
    `-ArraySubscriptExpr 0x562132ddc730 <col:14, col:26> 'struct LocVar':'struct LocVar' lvalue
      |-ImplicitCastExpr 0x562132ddc700 <col:14, col:17> 'struct LocVar *' <LValueToRValue>
      | `-MemberExpr 0x562132ddc6a0 <col:14, col:17> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
      |   `-ImplicitCastExpr 0x562132ddc688 <col:14> 'const Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
      `-ImplicitCastExpr 0x562132ddc718 <col:25> 'int' <LValueToRValue>
        `-DeclRefExpr 0x562132ddc6d8 <col:25> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.11] (ImplicitCastExpr, BitCast, const TString *)
  13: DeclRefExpr 0x562132ddc790 <ldump.c:120:36> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
  14: ImplicitCastExpr 0x562132ddc838 <ldump.c:120:36> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddc790 <col:36> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B9.13] (ImplicitCastExpr, LValueToRValue, DumpState *)
  15: CallExpr 0x562132ddc7d0 <ldump.c:120:3, col:37> 'void'
|-ImplicitCastExpr 0x562132ddc7b8 <col:3> 'void (*)(const TString *, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddc638 <col:3> 'void (const TString *, DumpState *)' Function 0x562132dd7400 'DumpString' 'void (const TString *, DumpState *)'
|-ImplicitCastExpr 0x562132ddc820 <col:14, col:28> 'const TString *' <BitCast>
| `-ImplicitCastExpr 0x562132ddc808 <col:14, col:28> 'TString *' <LValueToRValue>
|   `-MemberExpr 0x562132ddc758 <col:14, col:28> 'TString *' lvalue .varname 0x562132db94e0
|     `-ArraySubscriptExpr 0x562132ddc730 <col:14, col:26> 'struct LocVar':'struct LocVar' lvalue
|       |-ImplicitCastExpr 0x562132ddc700 <col:14, col:17> 'struct LocVar *' <LValueToRValue>
|       | `-MemberExpr 0x562132ddc6a0 <col:14, col:17> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
|       |   `-ImplicitCastExpr 0x562132ddc688 <col:14> 'const Proto *' <LValueToRValue>
|       |     `-DeclRefExpr 0x562132ddc660 <col:14> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
|       `-ImplicitCastExpr 0x562132ddc718 <col:25> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x562132ddc6d8 <col:25> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-ImplicitCastExpr 0x562132ddc838 <col:36> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddc790 <col:36> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B9.2]([B9.12], [B9.14])
  16: DeclRefExpr 0x562132ddc850 <ldump.c:121:3> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
DumpInt
  17: ImplicitCastExpr 0x562132ddc9d0 <ldump.c:121:3> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddc850 <col:3> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
[B9.16] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
  18: DeclRefExpr 0x562132ddc878 <ldump.c:121:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
  19: ImplicitCastExpr 0x562132ddc8a0 <ldump.c:121:11> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddc878 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.18] (ImplicitCastExpr, LValueToRValue, const Proto *)
  20: MemberExpr 0x562132ddc8b8 <ldump.c:121:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
`-ImplicitCastExpr 0x562132ddc8a0 <col:11> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddc878 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.19]->locvars
  21: ImplicitCastExpr 0x562132ddc918 <ldump.c:121:11, col:14> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x562132ddc8b8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
  `-ImplicitCastExpr 0x562132ddc8a0 <col:11> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddc878 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.20] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
  22: DeclRefExpr 0x562132ddc8f0 <ldump.c:121:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
  23: ImplicitCastExpr 0x562132ddc930 <ldump.c:121:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddc8f0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.22] (ImplicitCastExpr, LValueToRValue, int)
  24: ArraySubscriptExpr 0x562132ddc948 <ldump.c:121:11, col:23> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x562132ddc918 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x562132ddc8b8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
|   `-ImplicitCastExpr 0x562132ddc8a0 <col:11> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562132ddc878 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
`-ImplicitCastExpr 0x562132ddc930 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddc8f0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.21][[B9.23]]
  25: MemberExpr 0x562132ddc970 <ldump.c:121:11, col:25> 'int' lvalue .startpc 0x562132db9540
`-ArraySubscriptExpr 0x562132ddc948 <col:11, col:23> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x562132ddc918 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x562132ddc8b8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
  |   `-ImplicitCastExpr 0x562132ddc8a0 <col:11> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x562132ddc878 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
  `-ImplicitCastExpr 0x562132ddc930 <col:22> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562132ddc8f0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.24].startpc
  26: ImplicitCastExpr 0x562132ddca20 <ldump.c:121:11, col:25> 'int' <LValueToRValue>
`-MemberExpr 0x562132ddc970 <col:11, col:25> 'int' lvalue .startpc 0x562132db9540
  `-ArraySubscriptExpr 0x562132ddc948 <col:11, col:23> 'struct LocVar':'struct LocVar' lvalue
    |-ImplicitCastExpr 0x562132ddc918 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
    | `-MemberExpr 0x562132ddc8b8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
    |   `-ImplicitCastExpr 0x562132ddc8a0 <col:11> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x562132ddc878 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
    `-ImplicitCastExpr 0x562132ddc930 <col:22> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562132ddc8f0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.25] (ImplicitCastExpr, LValueToRValue, int)
  27: DeclRefExpr 0x562132ddc9a8 <ldump.c:121:33> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
  28: ImplicitCastExpr 0x562132ddca38 <ldump.c:121:33> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddc9a8 <col:33> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B9.27] (ImplicitCastExpr, LValueToRValue, DumpState *)
  29: CallExpr 0x562132ddc9e8 <ldump.c:121:3, col:34> 'void'
|-ImplicitCastExpr 0x562132ddc9d0 <col:3> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddc850 <col:3> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132ddca20 <col:11, col:25> 'int' <LValueToRValue>
| `-MemberExpr 0x562132ddc970 <col:11, col:25> 'int' lvalue .startpc 0x562132db9540
|   `-ArraySubscriptExpr 0x562132ddc948 <col:11, col:23> 'struct LocVar':'struct LocVar' lvalue
|     |-ImplicitCastExpr 0x562132ddc918 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
|     | `-MemberExpr 0x562132ddc8b8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
|     |   `-ImplicitCastExpr 0x562132ddc8a0 <col:11> 'const Proto *' <LValueToRValue>
|     |     `-DeclRefExpr 0x562132ddc878 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
|     `-ImplicitCastExpr 0x562132ddc930 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddc8f0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-ImplicitCastExpr 0x562132ddca38 <col:33> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddc9a8 <col:33> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B9.17]([B9.26], [B9.28])
  30: DeclRefExpr 0x562132ddca50 <ldump.c:122:3> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
DumpInt
  31: ImplicitCastExpr 0x562132ddcbd0 <ldump.c:122:3> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddca50 <col:3> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
[B9.30] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
  32: DeclRefExpr 0x562132ddca78 <ldump.c:122:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
  33: ImplicitCastExpr 0x562132ddcaa0 <ldump.c:122:11> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddca78 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.32] (ImplicitCastExpr, LValueToRValue, const Proto *)
  34: MemberExpr 0x562132ddcab8 <ldump.c:122:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
`-ImplicitCastExpr 0x562132ddcaa0 <col:11> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddca78 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.33]->locvars
  35: ImplicitCastExpr 0x562132ddcb18 <ldump.c:122:11, col:14> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x562132ddcab8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
  `-ImplicitCastExpr 0x562132ddcaa0 <col:11> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddca78 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B9.34] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
  36: DeclRefExpr 0x562132ddcaf0 <ldump.c:122:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
  37: ImplicitCastExpr 0x562132ddcb30 <ldump.c:122:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddcaf0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.36] (ImplicitCastExpr, LValueToRValue, int)
  38: ArraySubscriptExpr 0x562132ddcb48 <ldump.c:122:11, col:23> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x562132ddcb18 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x562132ddcab8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
|   `-ImplicitCastExpr 0x562132ddcaa0 <col:11> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562132ddca78 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
`-ImplicitCastExpr 0x562132ddcb30 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddcaf0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.35][[B9.37]]
  39: MemberExpr 0x562132ddcb70 <ldump.c:122:11, col:25> 'int' lvalue .endpc 0x562132db95a0
`-ArraySubscriptExpr 0x562132ddcb48 <col:11, col:23> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x562132ddcb18 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x562132ddcab8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
  |   `-ImplicitCastExpr 0x562132ddcaa0 <col:11> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x562132ddca78 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
  `-ImplicitCastExpr 0x562132ddcb30 <col:22> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562132ddcaf0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.38].endpc
  40: ImplicitCastExpr 0x562132ddcc20 <ldump.c:122:11, col:25> 'int' <LValueToRValue>
`-MemberExpr 0x562132ddcb70 <col:11, col:25> 'int' lvalue .endpc 0x562132db95a0
  `-ArraySubscriptExpr 0x562132ddcb48 <col:11, col:23> 'struct LocVar':'struct LocVar' lvalue
    |-ImplicitCastExpr 0x562132ddcb18 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
    | `-MemberExpr 0x562132ddcab8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
    |   `-ImplicitCastExpr 0x562132ddcaa0 <col:11> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x562132ddca78 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
    `-ImplicitCastExpr 0x562132ddcb30 <col:22> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562132ddcaf0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B9.39] (ImplicitCastExpr, LValueToRValue, int)
  41: DeclRefExpr 0x562132ddcba8 <ldump.c:122:31> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
  42: ImplicitCastExpr 0x562132ddcc38 <ldump.c:122:31> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddcba8 <col:31> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B9.41] (ImplicitCastExpr, LValueToRValue, DumpState *)
  43: CallExpr 0x562132ddcbe8 <ldump.c:122:3, col:32> 'void'
|-ImplicitCastExpr 0x562132ddcbd0 <col:3> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddca50 <col:3> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132ddcc20 <col:11, col:25> 'int' <LValueToRValue>
| `-MemberExpr 0x562132ddcb70 <col:11, col:25> 'int' lvalue .endpc 0x562132db95a0
|   `-ArraySubscriptExpr 0x562132ddcb48 <col:11, col:23> 'struct LocVar':'struct LocVar' lvalue
|     |-ImplicitCastExpr 0x562132ddcb18 <col:11, col:14> 'struct LocVar *' <LValueToRValue>
|     | `-MemberExpr 0x562132ddcab8 <col:11, col:14> 'struct LocVar *const' lvalue ->locvars 0x562132db8b60
|     |   `-ImplicitCastExpr 0x562132ddcaa0 <col:11> 'const Proto *' <LValueToRValue>
|     |     `-DeclRefExpr 0x562132ddca78 <col:11> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
|     `-ImplicitCastExpr 0x562132ddcb30 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddcaf0 <col:22> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-ImplicitCastExpr 0x562132ddcc38 <col:31> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddcba8 <col:31> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B9.31]([B9.40], [B9.42])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x562132ddc548 <ldump.c:118:12> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
   2: ImplicitCastExpr 0x562132ddc598 <ldump.c:118:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddc548 <col:12> 'int' lvalue Var 0x562132ddb898 'i' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562132ddc570 <ldump.c:118:14> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
   4: ImplicitCastExpr 0x562132ddc5b0 <ldump.c:118:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddc570 <col:14> 'int' lvalue Var 0x562132ddb910 'n' 'int'
[B10.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562132ddc5c8 <ldump.c:118:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562132ddc598 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132ddc548 <col:12> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-ImplicitCastExpr 0x562132ddc5b0 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562132ddc570 <col:14> 'int' lvalue Var 0x562132ddb910 'n' 'int'
[B10.2] < [B10.4]
   T: for (...; [B10.5]; ...)
   Preds (2): B8 B11
   Succs (2): B9 B7

 [B11]
   1: ConditionalOperator 0x562132ddbf50 <ldump.c:116:5, col:25> 'int'
|-ImplicitCastExpr 0x562132ddbf20 <col:5, col:14> 'int' <LValueToRValue>
| `-ParenExpr 0x562132ddbe68 <col:5, col:14> 'int' lvalue
|   `-MemberExpr 0x562132ddbe30 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
|     `-ImplicitCastExpr 0x562132ddbe18 <col:6> 'DumpState *' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddbdf0 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
|-IntegerLiteral 0x562132ddbe88 <col:18> 'int' 0
`-ImplicitCastExpr 0x562132ddbf38 <col:22, col:25> 'int' <LValueToRValue>
  `-MemberExpr 0x562132ddbee8 <col:22, col:25> 'const int' lvalue ->sizelocvars 0x562132db90f8
    `-ImplicitCastExpr 0x562132ddbed0 <col:22> 'const Proto *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddbea8 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B14.20] ? [B12.1] : [B13.4]
   2: DeclRefExpr 0x562132ddbdc8 <ldump.c:116:2> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
   3: BinaryOperator 0x562132ddbf80 <ldump.c:116:2, col:25> 'int' '='
|-DeclRefExpr 0x562132ddbdc8 <col:2> 'int' lvalue Var 0x562132ddb910 'n' 'int'
`-ConditionalOperator 0x562132ddbf50 <col:5, col:25> 'int'
  |-ImplicitCastExpr 0x562132ddbf20 <col:5, col:14> 'int' <LValueToRValue>
  | `-ParenExpr 0x562132ddbe68 <col:5, col:14> 'int' lvalue
  |   `-MemberExpr 0x562132ddbe30 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
  |     `-ImplicitCastExpr 0x562132ddbe18 <col:6> 'DumpState *' <LValueToRValue>
  |       `-DeclRefExpr 0x562132ddbdf0 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
  |-IntegerLiteral 0x562132ddbe88 <col:18> 'int' 0
  `-ImplicitCastExpr 0x562132ddbf38 <col:22, col:25> 'int' <LValueToRValue>
    `-MemberExpr 0x562132ddbee8 <col:22, col:25> 'const int' lvalue ->sizelocvars 0x562132db90f8
      `-ImplicitCastExpr 0x562132ddbed0 <col:22> 'const Proto *' <LValueToRValue>
        `-DeclRefExpr 0x562132ddbea8 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B11.2] = [B11.1]
   4: DeclRefExpr 0x562132ddbfa8 <ldump.c:117:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
DumpInt
   5: ImplicitCastExpr 0x562132ddc020 <ldump.c:117:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddbfa8 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
[B11.4] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int, DumpState *))
   6: DeclRefExpr 0x562132ddbfd0 <ldump.c:117:10> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
   7: ImplicitCastExpr 0x562132ddc070 <ldump.c:117:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddbfd0 <col:10> 'int' lvalue Var 0x562132ddb910 'n' 'int'
[B11.6] (ImplicitCastExpr, LValueToRValue, int)
   8: DeclRefExpr 0x562132ddbff8 <ldump.c:117:12> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
   9: ImplicitCastExpr 0x562132ddc088 <ldump.c:117:12> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddbff8 <col:12> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B11.8] (ImplicitCastExpr, LValueToRValue, DumpState *)
  10: CallExpr 0x562132ddc038 <ldump.c:117:2, col:13> 'void'
|-ImplicitCastExpr 0x562132ddc020 <col:2> 'void (*)(int, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddbfa8 <col:2> 'void (int, DumpState *)' Function 0x562132dd6378 'DumpInt' 'void (int, DumpState *)'
|-ImplicitCastExpr 0x562132ddc070 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132ddbfd0 <col:10> 'int' lvalue Var 0x562132ddb910 'n' 'int'
`-ImplicitCastExpr 0x562132ddc088 <col:12> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddbff8 <col:12> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B11.5]([B11.7], [B11.9])
  11: IntegerLiteral 0x562132ddc0c8 <ldump.c:118:9> 'int' 0
0
  12: DeclRefExpr 0x562132ddc0a0 <ldump.c:118:7> 'int' lvalue Var 0x562132ddb898 'i' 'int'
i
  13: BinaryOperator 0x562132ddc520 <ldump.c:118:7, col:9> 'int' '='
|-DeclRefExpr 0x562132ddc0a0 <col:7> 'int' lvalue Var 0x562132ddb898 'i' 'int'
`-IntegerLiteral 0x562132ddc0c8 <col:9> 'int' 0
[B11.12] = [B11.11]
   Preds (2): B12 B13
   Succs (1): B10

 [B12]
   1: IntegerLiteral 0x562132ddbe88 <ldump.c:116:18> 'int' 0
0
   Preds (1): B14
   Succs (1): B11

 [B13]
   1: DeclRefExpr 0x562132ddbea8 <ldump.c:116:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
   2: ImplicitCastExpr 0x562132ddbed0 <ldump.c:116:22> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddbea8 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B13.1] (ImplicitCastExpr, LValueToRValue, const Proto *)
   3: MemberExpr 0x562132ddbee8 <ldump.c:116:22, col:25> 'const int' lvalue ->sizelocvars 0x562132db90f8
`-ImplicitCastExpr 0x562132ddbed0 <col:22> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddbea8 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B13.2]->sizelocvars
   4: ImplicitCastExpr 0x562132ddbf38 <ldump.c:116:22, col:25> 'int' <LValueToRValue>
`-MemberExpr 0x562132ddbee8 <col:22, col:25> 'const int' lvalue ->sizelocvars 0x562132db90f8
  `-ImplicitCastExpr 0x562132ddbed0 <col:22> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddbea8 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B13.3] (ImplicitCastExpr, LValueToRValue, int)
   Preds (1): B14
   Succs (1): B11

 [B14]
   1: ConditionalOperator 0x562132ddbb28 <ldump.c:114:5, col:25> 'int'
|-ImplicitCastExpr 0x562132ddbaf8 <col:5, col:14> 'int' <LValueToRValue>
| `-ParenExpr 0x562132ddba40 <col:5, col:14> 'int' lvalue
|   `-MemberExpr 0x562132ddba08 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
|     `-ImplicitCastExpr 0x562132ddb9f0 <col:6> 'DumpState *' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddb9c8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
|-IntegerLiteral 0x562132ddba60 <col:18> 'int' 0
`-ImplicitCastExpr 0x562132ddbb10 <col:22, col:25> 'int' <LValueToRValue>
  `-MemberExpr 0x562132ddbac0 <col:22, col:25> 'const int' lvalue ->sizelineinfo 0x562132db9038
    `-ImplicitCastExpr 0x562132ddbaa8 <col:22> 'const Proto *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddba80 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B17.6] ? [B15.1] : [B16.4]
   2: DeclRefExpr 0x562132ddb9a0 <ldump.c:114:2> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
   3: BinaryOperator 0x562132ddbb58 <ldump.c:114:2, col:25> 'int' '='
|-DeclRefExpr 0x562132ddb9a0 <col:2> 'int' lvalue Var 0x562132ddb910 'n' 'int'
`-ConditionalOperator 0x562132ddbb28 <col:5, col:25> 'int'
  |-ImplicitCastExpr 0x562132ddbaf8 <col:5, col:14> 'int' <LValueToRValue>
  | `-ParenExpr 0x562132ddba40 <col:5, col:14> 'int' lvalue
  |   `-MemberExpr 0x562132ddba08 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
  |     `-ImplicitCastExpr 0x562132ddb9f0 <col:6> 'DumpState *' <LValueToRValue>
  |       `-DeclRefExpr 0x562132ddb9c8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
  |-IntegerLiteral 0x562132ddba60 <col:18> 'int' 0
  `-ImplicitCastExpr 0x562132ddbb10 <col:22, col:25> 'int' <LValueToRValue>
    `-MemberExpr 0x562132ddbac0 <col:22, col:25> 'const int' lvalue ->sizelineinfo 0x562132db9038
      `-ImplicitCastExpr 0x562132ddbaa8 <col:22> 'const Proto *' <LValueToRValue>
        `-DeclRefExpr 0x562132ddba80 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B14.2] = [B14.1]
   4: DeclRefExpr 0x562132ddbb80 <ldump.c:115:2> 'void (const void *, int, size_t, DumpState *)' Function 0x562132dd6dd0 'DumpVector' 'void (const void *, int, size_t, DumpState *)'
DumpVector
   5: ImplicitCastExpr 0x562132ddbd08 <ldump.c:115:2> 'void (*)(const void *, int, size_t, DumpState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562132ddbb80 <col:2> 'void (const void *, int, size_t, DumpState *)' Function 0x562132dd6dd0 'DumpVector' 'void (const void *, int, size_t, DumpState *)'
[B14.4] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const void *, int, size_t, DumpState *))
   6: DeclRefExpr 0x562132ddbba8 <ldump.c:115:13> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
   7: ImplicitCastExpr 0x562132ddbbd0 <ldump.c:115:13> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddbba8 <col:13> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B14.6] (ImplicitCastExpr, LValueToRValue, const Proto *)
   8: MemberExpr 0x562132ddbbe8 <ldump.c:115:13, col:16> 'int *const' lvalue ->lineinfo 0x562132db89b0
`-ImplicitCastExpr 0x562132ddbbd0 <col:13> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddbba8 <col:13> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B14.7]->lineinfo
   9: ImplicitCastExpr 0x562132ddbd68 <ldump.c:115:13, col:16> 'int *' <LValueToRValue>
`-MemberExpr 0x562132ddbbe8 <col:13, col:16> 'int *const' lvalue ->lineinfo 0x562132db89b0
  `-ImplicitCastExpr 0x562132ddbbd0 <col:13> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddbba8 <col:13> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B14.8] (ImplicitCastExpr, LValueToRValue, int *)
  10: ImplicitCastExpr 0x562132ddbd80 <ldump.c:115:13, col:16> 'const void *' <BitCast>
`-ImplicitCastExpr 0x562132ddbd68 <col:13, col:16> 'int *' <LValueToRValue>
  `-MemberExpr 0x562132ddbbe8 <col:13, col:16> 'int *const' lvalue ->lineinfo 0x562132db89b0
    `-ImplicitCastExpr 0x562132ddbbd0 <col:13> 'const Proto *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddbba8 <col:13> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B14.9] (ImplicitCastExpr, BitCast, const void *)
  11: DeclRefExpr 0x562132ddbc20 <ldump.c:115:25> 'int' lvalue Var 0x562132ddb910 'n' 'int'
n
  12: ImplicitCastExpr 0x562132ddbd98 <ldump.c:115:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x562132ddbc20 <col:25> 'int' lvalue Var 0x562132ddb910 'n' 'int'
[B14.11] (ImplicitCastExpr, LValueToRValue, int)
  13: UnaryExprOrTypeTraitExpr 0x562132ddbc60 <ldump.c:115:27, col:37> 'unsigned long' sizeof 'int'
sizeof(int)
  14: DeclRefExpr 0x562132ddbc80 <ldump.c:115:39> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
  15: ImplicitCastExpr 0x562132ddbdb0 <ldump.c:115:39> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddbc80 <col:39> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B14.14] (ImplicitCastExpr, LValueToRValue, DumpState *)
  16: CallExpr 0x562132ddbd20 <ldump.c:115:2, col:40> 'void'
|-ImplicitCastExpr 0x562132ddbd08 <col:2> 'void (*)(const void *, int, size_t, DumpState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562132ddbb80 <col:2> 'void (const void *, int, size_t, DumpState *)' Function 0x562132dd6dd0 'DumpVector' 'void (const void *, int, size_t, DumpState *)'
|-ImplicitCastExpr 0x562132ddbd80 <col:13, col:16> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x562132ddbd68 <col:13, col:16> 'int *' <LValueToRValue>
|   `-MemberExpr 0x562132ddbbe8 <col:13, col:16> 'int *const' lvalue ->lineinfo 0x562132db89b0
|     `-ImplicitCastExpr 0x562132ddbbd0 <col:13> 'const Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x562132ddbba8 <col:13> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
|-ImplicitCastExpr 0x562132ddbd98 <col:25> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562132ddbc20 <col:25> 'int' lvalue Var 0x562132ddb910 'n' 'int'
|-UnaryExprOrTypeTraitExpr 0x562132ddbc60 <col:27, col:37> 'unsigned long' sizeof 'int'
`-ImplicitCastExpr 0x562132ddbdb0 <col:39> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddbc80 <col:39> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B14.5]([B14.10], [B14.12], [B14.13], [B14.15])
  17: DeclRefExpr 0x562132ddbdf0 <ldump.c:116:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
  18: ImplicitCastExpr 0x562132ddbe18 <ldump.c:116:6> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddbdf0 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B14.17] (ImplicitCastExpr, LValueToRValue, DumpState *)
  19: MemberExpr 0x562132ddbe30 <ldump.c:116:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
`-ImplicitCastExpr 0x562132ddbe18 <col:6> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddbdf0 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B14.18]->strip
  20: ImplicitCastExpr 0x562132ddbf20 <ldump.c:116:5, col:14> 'int' <LValueToRValue>
`-ParenExpr 0x562132ddbe68 <col:5, col:14> 'int' lvalue
  `-MemberExpr 0x562132ddbe30 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
    `-ImplicitCastExpr 0x562132ddbe18 <col:6> 'DumpState *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddbdf0 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
([B14.19]) (ImplicitCastExpr, LValueToRValue, int)
   T: [B14.20] ? ... : ...
   Preds (2): B15 B16
   Succs (2): B12 B13

 [B15]
   1: IntegerLiteral 0x562132ddba60 <ldump.c:114:18> 'int' 0
0
   Preds (1): B17
   Succs (1): B14

 [B16]
   1: DeclRefExpr 0x562132ddba80 <ldump.c:114:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
f
   2: ImplicitCastExpr 0x562132ddbaa8 <ldump.c:114:22> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x562132ddba80 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B16.1] (ImplicitCastExpr, LValueToRValue, const Proto *)
   3: MemberExpr 0x562132ddbac0 <ldump.c:114:22, col:25> 'const int' lvalue ->sizelineinfo 0x562132db9038
`-ImplicitCastExpr 0x562132ddbaa8 <col:22> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddba80 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B16.2]->sizelineinfo
   4: ImplicitCastExpr 0x562132ddbb10 <ldump.c:114:22, col:25> 'int' <LValueToRValue>
`-MemberExpr 0x562132ddbac0 <col:22, col:25> 'const int' lvalue ->sizelineinfo 0x562132db9038
  `-ImplicitCastExpr 0x562132ddbaa8 <col:22> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562132ddba80 <col:22> 'const Proto *' lvalue ParmVar 0x562132ddb6d0 'f' 'const Proto *'
[B16.3] (ImplicitCastExpr, LValueToRValue, int)
   Preds (1): B17
   Succs (1): B14

 [B17]
   1: DeclStmt 0x562132de6880 <ldump.c:113:6>col:6
`-VarDecl 0x562132ddb898 <col:2, col:6> col:6 used i 'int'
int i;
   2: DeclStmt 0x562132de67e8 <ldump.c:113:8>col:8
`-VarDecl 0x562132ddb910 <col:2, col:8> col:8 used n 'int'
int n;
   3: DeclRefExpr 0x562132ddb9c8 <ldump.c:114:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
D
   4: ImplicitCastExpr 0x562132ddb9f0 <ldump.c:114:6> 'DumpState *' <LValueToRValue>
`-DeclRefExpr 0x562132ddb9c8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B17.3] (ImplicitCastExpr, LValueToRValue, DumpState *)
   5: MemberExpr 0x562132ddba08 <ldump.c:114:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
`-ImplicitCastExpr 0x562132ddb9f0 <col:6> 'DumpState *' <LValueToRValue>
  `-DeclRefExpr 0x562132ddb9c8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
[B17.4]->strip
   6: ImplicitCastExpr 0x562132ddbaf8 <ldump.c:114:5, col:14> 'int' <LValueToRValue>
`-ParenExpr 0x562132ddba40 <col:5, col:14> 'int' lvalue
  `-MemberExpr 0x562132ddba08 <col:6, col:9> 'int' lvalue ->strip 0x562132dd4e98
    `-ImplicitCastExpr 0x562132ddb9f0 <col:6> 'DumpState *' <LValueToRValue>
      `-DeclRefExpr 0x562132ddb9c8 <col:6> 'DumpState *' lvalue ParmVar 0x562132ddb740 'D' 'DumpState *'
([B17.5]) (ImplicitCastExpr, LValueToRValue, int)
   T: [B17.6] ? ... : ...
   Preds (1): B18
   Succs (2): B15 B16

 [B0 (EXIT)]
   Preds (1): B3
