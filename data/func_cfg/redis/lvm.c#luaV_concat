void luaV_concat(lua_State *L, int total, int last)
 [B29 (ENTRY)]
   Succs (1): B27

 [B1]
   1: DeclRefExpr 0x5590ecef5c78 <lvm.c:313:12> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
total
   2: ImplicitCastExpr 0x5590ecef5cc0 <lvm.c:313:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5c78 <col:12> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x5590ecef5ca0 <lvm.c:313:20> 'int' 1
1
   4: BinaryOperator 0x5590ecef5cd8 <lvm.c:313:12, col:20> 'int' '>'
|-ImplicitCastExpr 0x5590ecef5cc0 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef5c78 <col:12> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
`-IntegerLiteral 0x5590ecef5ca0 <col:20> 'int' 1
[B1.2] > [B1.3]
   T: do ... while [B1.4]
   Preds (1): B2
   Succs (2): B28 B0

 [B2]
   1: DeclRefExpr 0x5590ecef5a70 <lvm.c:311:5> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
total
   2: DeclRefExpr 0x5590ecef5a98 <lvm.c:311:14> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   3: ImplicitCastExpr 0x5590ecef5ae0 <lvm.c:311:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5a98 <col:14> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B2.2] (ImplicitCastExpr, LValueToRValue, int)
   4: IntegerLiteral 0x5590ecef5ac0 <lvm.c:311:16> 'int' 1
1
   5: BinaryOperator 0x5590ecef5af8 <lvm.c:311:14, col:16> 'int' '-'
|-ImplicitCastExpr 0x5590ecef5ae0 <col:14> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef5a98 <col:14> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
`-IntegerLiteral 0x5590ecef5ac0 <col:16> 'int' 1
[B2.3] - [B2.4]
   6: CompoundAssignOperator 0x5590ecef5b20 <lvm.c:311:5, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x5590ecef5a70 <col:5> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
`-BinaryOperator 0x5590ecef5af8 <col:14, col:16> 'int' '-'
  |-ImplicitCastExpr 0x5590ecef5ae0 <col:14> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef5a98 <col:14> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
  `-IntegerLiteral 0x5590ecef5ac0 <col:16> 'int' 1
[B2.1] -= [B2.5]
   7: DeclRefExpr 0x5590ecef5b58 <lvm.c:312:5> 'int' lvalue ParmVar 0x5590ecef1868 'last' 'int'
last
   8: DeclRefExpr 0x5590ecef5b80 <lvm.c:312:13> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   9: ImplicitCastExpr 0x5590ecef5bc8 <lvm.c:312:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5b80 <col:13> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B2.8] (ImplicitCastExpr, LValueToRValue, int)
  10: IntegerLiteral 0x5590ecef5ba8 <lvm.c:312:15> 'int' 1
1
  11: BinaryOperator 0x5590ecef5be0 <lvm.c:312:13, col:15> 'int' '-'
|-ImplicitCastExpr 0x5590ecef5bc8 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef5b80 <col:13> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
`-IntegerLiteral 0x5590ecef5ba8 <col:15> 'int' 1
[B2.9] - [B2.10]
  12: CompoundAssignOperator 0x5590ecef5c08 <lvm.c:312:5, col:15> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x5590ecef5b58 <col:5> 'int' lvalue ParmVar 0x5590ecef1868 'last' 'int'
`-BinaryOperator 0x5590ecef5be0 <col:13, col:15> 'int' '-'
  |-ImplicitCastExpr 0x5590ecef5bc8 <col:13> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef5b80 <col:13> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
  `-IntegerLiteral 0x5590ecef5ba8 <col:15> 'int' 1
[B2.7] -= [B2.11]
   Preds (4): B3 B16 B20 B21
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5590ecef5458 <lvm.c:309:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef54a8 <lvm.c:309:22> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5458 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B3.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclRefExpr 0x5590ecef5480 <lvm.c:309:26> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   4: ImplicitCastExpr 0x5590ecef54c0 <lvm.c:309:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5480 <col:26> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5590ecef54d8 <lvm.c:309:22, col:26> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef54a8 <col:22> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef5458 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-ImplicitCastExpr 0x5590ecef54c0 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef5480 <col:26> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B3.2] - [B3.4]
   6: DeclStmt 0x5590ecef5520 <./lobject.h:129:5, col:22>col:13
`-VarDecl 0x5590ecef53f8 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ParenExpr 0x5590ecef5500 <col:17, col:21> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecef54d8 <lvm.c:309:22, col:26> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5590ecef54a8 <col:22> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef5458 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      `-ImplicitCastExpr 0x5590ecef54c0 <col:26> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef5480 <col:26> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
TValue *i_o = (top - n);
   7: DeclRefExpr 0x5590ecef55e8 <lvm.c:309:29> 'TString *(lua_State *, const char *, size_t)' Function 0x5590ecec69a0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
luaS_newlstr
   8: ImplicitCastExpr 0x5590ecef5688 <lvm.c:309:29> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef55e8 <col:29> 'TString *(lua_State *, const char *, size_t)' Function 0x5590ecec69a0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
[B3.7] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t))
   9: DeclRefExpr 0x5590ecef5610 <lvm.c:309:42> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x5590ecef56e0 <lvm.c:309:42> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5610 <col:42> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B3.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: DeclRefExpr 0x5590ecef5638 <lvm.c:309:45> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
buffer
  12: ImplicitCastExpr 0x5590ecef56f8 <lvm.c:309:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5638 <col:45> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
[B3.11] (ImplicitCastExpr, LValueToRValue, char *)
  13: ImplicitCastExpr 0x5590ecef5710 <lvm.c:309:45> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5590ecef56f8 <col:45> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef5638 <col:45> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
[B3.12] (ImplicitCastExpr, BitCast, const char *)
  14: DeclRefExpr 0x5590ecef5660 <lvm.c:309:53> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
tl
  15: ImplicitCastExpr 0x5590ecef5728 <lvm.c:309:53> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5660 <col:53> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B3.14] (ImplicitCastExpr, LValueToRValue, size_t)
  16: CallExpr 0x5590ecef56a0 <lvm.c:309:29, col:55> 'TString *'
|-ImplicitCastExpr 0x5590ecef5688 <col:29> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef55e8 <col:29> 'TString *(lua_State *, const char *, size_t)' Function 0x5590ecec69a0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x5590ecef56e0 <col:42> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef5610 <col:42> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef5710 <col:45> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5590ecef56f8 <col:45> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef5638 <col:45> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
`-ImplicitCastExpr 0x5590ecef5728 <col:53> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef5660 <col:53> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B3.8]([B3.10], [B3.13], [B3.15])
  17: CStyleCastExpr 0x5590ecef57c0 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ParenExpr 0x5590ecef57a0 <col:26, col:30> 'TString *'
  `-ParenExpr 0x5590ecef5740 <./lobject.h:130:36, col:38> 'TString *'
    `-CallExpr 0x5590ecef56a0 <lvm.c:309:29, col:55> 'TString *'
      |-ImplicitCastExpr 0x5590ecef5688 <col:29> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5590ecef55e8 <col:29> 'TString *(lua_State *, const char *, size_t)' Function 0x5590ecec69a0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
      |-ImplicitCastExpr 0x5590ecef56e0 <col:42> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef5610 <col:42> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
      |-ImplicitCastExpr 0x5590ecef5710 <col:45> 'const char *' <BitCast>
      | `-ImplicitCastExpr 0x5590ecef56f8 <col:45> 'char *' <LValueToRValue>
      |   `-DeclRefExpr 0x5590ecef5638 <col:45> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
      `-ImplicitCastExpr 0x5590ecef5728 <col:53> 'size_t':'unsigned long' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef5660 <col:53> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
(GCObject *)(([B3.16])) (CStyleCastExpr, BitCast, GCObject *)
  18: DeclRefExpr 0x5590ecef5538 <./lobject.h:130:5> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
i_o
  19: ImplicitCastExpr 0x5590ecef5560 <./lobject.h:130:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5538 <col:5> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
[B3.18] (ImplicitCastExpr, LValueToRValue, TValue *)
  20: MemberExpr 0x5590ecef5578 <./lobject.h:130:5, col:10> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef5560 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef5538 <col:5> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
[B3.19]->value
  21: MemberExpr 0x5590ecef55b0 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef5578 <col:5, col:10> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef5560 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef5538 <col:5> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
[B3.20].gc
  22: BinaryOperator 0x5590ecef5808 <./lobject.h:130:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x5590ecef55b0 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x5590ece76aa0
| `-MemberExpr 0x5590ecef5578 <col:5, col:10> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef5560 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef5538 <col:5> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef57e8 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x5590ecef57c0 <col:23, col:30> 'GCObject *' <BitCast>
    `-ParenExpr 0x5590ecef57a0 <col:26, col:30> 'TString *'
      `-ParenExpr 0x5590ecef5740 <./lobject.h:130:36, col:38> 'TString *'
        `-CallExpr 0x5590ecef56a0 <lvm.c:309:29, col:55> 'TString *'
          |-ImplicitCastExpr 0x5590ecef5688 <col:29> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x5590ecef55e8 <col:29> 'TString *(lua_State *, const char *, size_t)' Function 0x5590ecec69a0 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
          |-ImplicitCastExpr 0x5590ecef56e0 <col:42> 'lua_State *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecef5610 <col:42> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
          |-ImplicitCastExpr 0x5590ecef5710 <col:45> 'const char *' <BitCast>
          | `-ImplicitCastExpr 0x5590ecef56f8 <col:45> 'char *' <LValueToRValue>
          |   `-DeclRefExpr 0x5590ecef5638 <col:45> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
          `-ImplicitCastExpr 0x5590ecef5728 <col:53> 'size_t':'unsigned long' <LValueToRValue>
            `-DeclRefExpr 0x5590ecef5660 <col:53> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B3.21] = ([B3.17])
  23: IntegerLiteral 0x5590ecef58a8 <./lua.h:78:22> 'int' 4
4
  24: DeclRefExpr 0x5590ecef5830 <./lobject.h:130:42> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
i_o
  25: ImplicitCastExpr 0x5590ecef5858 <./lobject.h:130:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5830 <col:42> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
[B3.24] (ImplicitCastExpr, LValueToRValue, TValue *)
  26: MemberExpr 0x5590ecef5870 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef5858 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef5830 <col:42> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
[B3.25]->tt
  27: BinaryOperator 0x5590ecef58c8 <./lobject.h:130:42, ./lua.h:78:22> 'int' '='
|-MemberExpr 0x5590ecef5870 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef5858 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef5830 <col:42> 'TValue *' lvalue Var 0x5590ecef53f8 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef58a8 <./lua.h:78:22> 'int' 4
[B3.26] = [B3.23]
  28: IntegerLiteral 0x5590ecef58f0 <./llimits.h:62:31> 'int' 0
0
  29: CStyleCastExpr 0x5590ecef5920 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecef58f0 <col:31> 'int' 0
(void)[B3.28] (CStyleCastExpr, ToVoid, void)
   Preds (1): B6
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5590ecef4ac8 <lvm.c:304:22> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
i
   2: UnaryOperator 0x5590ecef4af0 <lvm.c:304:22, col:23> 'int' postfix '--'
`-DeclRefExpr 0x5590ecef4ac8 <col:22> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B4.1]--
   Preds (1): B5
   Succs (1): B6

 [B5]
   1: DeclRefExpr 0x5590ecef4b80 <lvm.c:305:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef4bd0 <lvm.c:305:28> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B5.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclRefExpr 0x5590ecef4ba8 <lvm.c:305:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
i
   4: ImplicitCastExpr 0x5590ecef4be8 <lvm.c:305:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.2] - [B5.4]
   6: MemberExpr 0x5590ecef4c48 <./lobject.h:94:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
      `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
([B5.5])->value
   7: MemberExpr 0x5590ecef4c80 <./lobject.h:94:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.6].gc
   8: ImplicitCastExpr 0x5590ecef4cb8 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
    `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
          `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.7] (ImplicitCastExpr, LValueToRValue, GCObject *)
   9: MemberExpr 0x5590ecef4cd0 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590ecef4cb8 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
      `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
        `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
          |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
          `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
            `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.8]->ts
  10: UnaryOperator 0x5590ecef4d08 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590ecef4cd0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590ecef4cb8 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
        `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
          `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
            |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
            | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
            `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
              `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
&[B5.9]
  11: MemberExpr 0x5590ecef4d48 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
`-ParenExpr 0x5590ecef4d28 <./llimits.h:63:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590ecef4d08 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590ecef4cd0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590ecef4cb8 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
            `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
              `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
                |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
([B5.10])->tsv
  12: UnaryOperator 0x5590ecef4d80 <./lobject.h:95:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
`-MemberExpr 0x5590ecef4d48 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
  `-ParenExpr 0x5590ecef4d28 <./llimits.h:63:25, col:27> 'union TString *'
    `-UnaryOperator 0x5590ecef4d08 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x5590ecef4cd0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
        `-ImplicitCastExpr 0x5590ecef4cb8 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
              `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
                `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
                  |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                  | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                  `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
&[B5.11]
  13: MemberExpr 0x5590ecef4dc0 <./lobject.h:95:20, lvm.c:305:36> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
`-ParenExpr 0x5590ecef4da0 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
  `-UnaryOperator 0x5590ecef4d80 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
    `-MemberExpr 0x5590ecef4d48 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
      `-ParenExpr 0x5590ecef4d28 <./llimits.h:63:25, col:27> 'union TString *'
        `-UnaryOperator 0x5590ecef4d08 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
          `-MemberExpr 0x5590ecef4cd0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
            `-ImplicitCastExpr 0x5590ecef4cb8 <col:49, col:60> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                  `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
                    `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
                      |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                      | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                      `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
                        `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
([B5.12])->len
  14: ImplicitCastExpr 0x5590ecef4df8 <./lobject.h:95:20, lvm.c:305:36> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x5590ecef4dc0 <./lobject.h:95:20, lvm.c:305:36> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
  `-ParenExpr 0x5590ecef4da0 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
    `-UnaryOperator 0x5590ecef4d80 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
      `-MemberExpr 0x5590ecef4d48 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
        `-ParenExpr 0x5590ecef4d28 <./llimits.h:63:25, col:27> 'union TString *'
          `-UnaryOperator 0x5590ecef4d08 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
            `-MemberExpr 0x5590ecef4cd0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
              `-ImplicitCastExpr 0x5590ecef4cb8 <col:49, col:60> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                  `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                    `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
                      `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
                        |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                        | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                        `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.13] (ImplicitCastExpr, LValueToRValue, size_t)
  15: DeclStmt 0x5590ecef4e10 <lvm.c:305:9, col:39>col:16
`-VarDecl 0x5590ecef4b20 <col:9, col:36> col:16 used l 'size_t':'unsigned long' cinit
  `-ImplicitCastExpr 0x5590ecef4df8 <./lobject.h:95:20, lvm.c:305:36> 'size_t':'unsigned long' <LValueToRValue>
    `-MemberExpr 0x5590ecef4dc0 <./lobject.h:95:20, lvm.c:305:36> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
      `-ParenExpr 0x5590ecef4da0 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
        `-UnaryOperator 0x5590ecef4d80 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
          `-MemberExpr 0x5590ecef4d48 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
            `-ParenExpr 0x5590ecef4d28 <./llimits.h:63:25, col:27> 'union TString *'
              `-UnaryOperator 0x5590ecef4d08 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
                `-MemberExpr 0x5590ecef4cd0 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
                  `-ImplicitCastExpr 0x5590ecef4cb8 <col:49, col:60> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x5590ecef4c80 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                      `-MemberExpr 0x5590ecef4c48 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                        `-ParenExpr 0x5590ecef4c28 <col:49, col:51> 'StkId':'TValue *'
                          `-BinaryOperator 0x5590ecef4c00 <lvm.c:305:28, col:32> 'StkId':'TValue *' '-'
                            |-ImplicitCastExpr 0x5590ecef4bd0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                            | `-DeclRefExpr 0x5590ecef4b80 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                            `-ImplicitCastExpr 0x5590ecef4be8 <col:32> 'int' <LValueToRValue>
                              `-DeclRefExpr 0x5590ecef4ba8 <col:32> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
size_t l = (&(&(top - i)->value.gc->ts)->tsv)->len;
  16: DeclRefExpr 0x5590ecef4e28 <lvm.c:306:9> 'void *(void *, const void *, unsigned long)' Function 0x5590ecdc7560 'memcpy' 'void *(void *, const void *, unsigned long)'
memcpy
  17: ImplicitCastExpr 0x5590ecef5248 <lvm.c:306:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef4e28 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x5590ecdc7560 'memcpy' 'void *(void *, const void *, unsigned long)'
[B5.16] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
  18: DeclRefExpr 0x5590ecef4e50 <lvm.c:306:16> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
buffer
  19: ImplicitCastExpr 0x5590ecef4ea0 <lvm.c:306:16> 'char *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4e50 <col:16> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
[B5.18] (ImplicitCastExpr, LValueToRValue, char *)
  20: DeclRefExpr 0x5590ecef4e78 <lvm.c:306:23> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
tl
  21: ImplicitCastExpr 0x5590ecef4eb8 <lvm.c:306:23> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4e78 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B5.20] (ImplicitCastExpr, LValueToRValue, size_t)
  22: BinaryOperator 0x5590ecef4ed0 <lvm.c:306:16, col:23> 'char *' '+'
|-ImplicitCastExpr 0x5590ecef4ea0 <col:16> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef4e50 <col:16> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
`-ImplicitCastExpr 0x5590ecef4eb8 <col:23> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef4e78 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B5.19] + [B5.21]
  23: ImplicitCastExpr 0x5590ecef52a0 <lvm.c:306:16, col:23> 'void *' <BitCast>
`-BinaryOperator 0x5590ecef4ed0 <col:16, col:23> 'char *' '+'
  |-ImplicitCastExpr 0x5590ecef4ea0 <col:16> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef4e50 <col:16> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
  `-ImplicitCastExpr 0x5590ecef4eb8 <col:23> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef4e78 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B5.22] (ImplicitCastExpr, BitCast, void *)
  24: DeclRefExpr 0x5590ecef4ef8 <lvm.c:306:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
  25: ImplicitCastExpr 0x5590ecef4f48 <lvm.c:306:34> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B5.24] (ImplicitCastExpr, LValueToRValue, StkId)
  26: DeclRefExpr 0x5590ecef4f20 <lvm.c:306:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
i
  27: ImplicitCastExpr 0x5590ecef4f60 <lvm.c:306:38> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.26] (ImplicitCastExpr, LValueToRValue, int)
  28: BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.25] - [B5.27]
  29: MemberExpr 0x5590ecef4fc0 <./lobject.h:94:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
      `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
([B5.28])->value
  30: MemberExpr 0x5590ecef4ff8 <./lobject.h:94:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.29].gc
  31: ImplicitCastExpr 0x5590ecef5030 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef4ff8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
    `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
          `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.30] (ImplicitCastExpr, LValueToRValue, GCObject *)
  32: MemberExpr 0x5590ecef5048 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590ecef5030 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef4ff8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
      `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
        `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
          |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
          `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
            `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B5.31]->ts
  33: UnaryOperator 0x5590ecef5080 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590ecef5048 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590ecef5030 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef4ff8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
        `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
          `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
            |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
            | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
            `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
              `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
&[B5.32]
  34: IntegerLiteral 0x5590ecef50e0 <./lobject.h:210:46> 'int' 1
1
  35: BinaryOperator 0x5590ecef5100 <./lobject.h:210:39, col:46> 'union TString *' '+'
|-ParenExpr 0x5590ecef50c0 <col:39, col:42> 'union TString *'
| `-ParenExpr 0x5590ecef50a0 <./llimits.h:63:25, col:27> 'union TString *'
|   `-UnaryOperator 0x5590ecef5080 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|     `-MemberExpr 0x5590ecef5048 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
|       `-ImplicitCastExpr 0x5590ecef5030 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         `-MemberExpr 0x5590ecef4ff8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
|           `-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
|             `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
|               `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
|                 |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|                 `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
|                   `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
`-IntegerLiteral 0x5590ecef50e0 <./lobject.h:210:46> 'int' 1
(([B5.33])) + [B5.34]
  36: CStyleCastExpr 0x5590ecef5190 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x5590ecef5170 <col:26, col:30> 'union TString *'
  `-BinaryOperator 0x5590ecef5100 <./lobject.h:210:39, col:46> 'union TString *' '+'
    |-ParenExpr 0x5590ecef50c0 <col:39, col:42> 'union TString *'
    | `-ParenExpr 0x5590ecef50a0 <./llimits.h:63:25, col:27> 'union TString *'
    |   `-UnaryOperator 0x5590ecef5080 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    |     `-MemberExpr 0x5590ecef5048 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
    |       `-ImplicitCastExpr 0x5590ecef5030 <col:49, col:60> 'GCObject *' <LValueToRValue>
    |         `-MemberExpr 0x5590ecef4ff8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
    |           `-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
    |             `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
    |               `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
    |                 |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
    |                 | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    |                 `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
    |                   `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
    `-IntegerLiteral 0x5590ecef50e0 <./lobject.h:210:46> 'int' 1
(const char *)([B5.35]) (CStyleCastExpr, BitCast, const char *)
  37: ImplicitCastExpr 0x5590ecef52b8 <./llimits.h:75:22, col:31> 'const void *' <BitCast>
`-ParenExpr 0x5590ecef51b8 <col:22, col:31> 'const char *'
  `-CStyleCastExpr 0x5590ecef5190 <col:23, col:30> 'const char *' <BitCast>
    `-ParenExpr 0x5590ecef5170 <col:26, col:30> 'union TString *'
      `-BinaryOperator 0x5590ecef5100 <./lobject.h:210:39, col:46> 'union TString *' '+'
        |-ParenExpr 0x5590ecef50c0 <col:39, col:42> 'union TString *'
        | `-ParenExpr 0x5590ecef50a0 <./llimits.h:63:25, col:27> 'union TString *'
        |   `-UnaryOperator 0x5590ecef5080 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
        |     `-MemberExpr 0x5590ecef5048 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
        |       `-ImplicitCastExpr 0x5590ecef5030 <col:49, col:60> 'GCObject *' <LValueToRValue>
        |         `-MemberExpr 0x5590ecef4ff8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
        |           `-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
        |             `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
        |               `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
        |                 |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
        |                 | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        |                 `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
        |                   `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
        `-IntegerLiteral 0x5590ecef50e0 <./lobject.h:210:46> 'int' 1
([B5.36]) (ImplicitCastExpr, BitCast, const void *)
  38: DeclRefExpr 0x5590ecef51d8 <lvm.c:306:42> 'size_t':'unsigned long' lvalue Var 0x5590ecef4b20 'l' 'size_t':'unsigned long'
l
  39: ImplicitCastExpr 0x5590ecef52d0 <lvm.c:306:42> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef51d8 <col:42> 'size_t':'unsigned long' lvalue Var 0x5590ecef4b20 'l' 'size_t':'unsigned long'
[B5.38] (ImplicitCastExpr, LValueToRValue, size_t)
  40: CallExpr 0x5590ecef5260 <lvm.c:306:9, col:43> 'void *'
|-ImplicitCastExpr 0x5590ecef5248 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef4e28 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x5590ecdc7560 'memcpy' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x5590ecef52a0 <col:16, col:23> 'void *' <BitCast>
| `-BinaryOperator 0x5590ecef4ed0 <col:16, col:23> 'char *' '+'
|   |-ImplicitCastExpr 0x5590ecef4ea0 <col:16> 'char *' <LValueToRValue>
|   | `-DeclRefExpr 0x5590ecef4e50 <col:16> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
|   `-ImplicitCastExpr 0x5590ecef4eb8 <col:23> 'size_t':'unsigned long' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef4e78 <col:23> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
|-ImplicitCastExpr 0x5590ecef52b8 <./llimits.h:75:22, col:31> 'const void *' <BitCast>
| `-ParenExpr 0x5590ecef51b8 <col:22, col:31> 'const char *'
|   `-CStyleCastExpr 0x5590ecef5190 <col:23, col:30> 'const char *' <BitCast>
|     `-ParenExpr 0x5590ecef5170 <col:26, col:30> 'union TString *'
|       `-BinaryOperator 0x5590ecef5100 <./lobject.h:210:39, col:46> 'union TString *' '+'
|         |-ParenExpr 0x5590ecef50c0 <col:39, col:42> 'union TString *'
|         | `-ParenExpr 0x5590ecef50a0 <./llimits.h:63:25, col:27> 'union TString *'
|         |   `-UnaryOperator 0x5590ecef5080 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|         |     `-MemberExpr 0x5590ecef5048 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
|         |       `-ImplicitCastExpr 0x5590ecef5030 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         |         `-MemberExpr 0x5590ecef4ff8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
|         |           `-MemberExpr 0x5590ecef4fc0 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
|         |             `-ParenExpr 0x5590ecef4fa0 <col:49, col:51> 'StkId':'TValue *'
|         |               `-BinaryOperator 0x5590ecef4f78 <lvm.c:306:34, col:38> 'StkId':'TValue *' '-'
|         |                 |-ImplicitCastExpr 0x5590ecef4f48 <col:34> 'StkId':'TValue *' <LValueToRValue>
|         |                 | `-DeclRefExpr 0x5590ecef4ef8 <col:34> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|         |                 `-ImplicitCastExpr 0x5590ecef4f60 <col:38> 'int' <LValueToRValue>
|         |                   `-DeclRefExpr 0x5590ecef4f20 <col:38> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
|         `-IntegerLiteral 0x5590ecef50e0 <./lobject.h:210:46> 'int' 1
`-ImplicitCastExpr 0x5590ecef52d0 <lvm.c:306:42> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef51d8 <col:42> 'size_t':'unsigned long' lvalue Var 0x5590ecef4b20 'l' 'size_t':'unsigned long'
[B5.17]([B5.23], [B5.37], [B5.39])
  41: DeclRefExpr 0x5590ecef52e8 <lvm.c:307:9> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
tl
  42: DeclRefExpr 0x5590ecef5310 <lvm.c:307:15> 'size_t':'unsigned long' lvalue Var 0x5590ecef4b20 'l' 'size_t':'unsigned long'
l
  43: ImplicitCastExpr 0x5590ecef5338 <lvm.c:307:15> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef5310 <col:15> 'size_t':'unsigned long' lvalue Var 0x5590ecef4b20 'l' 'size_t':'unsigned long'
[B5.42] (ImplicitCastExpr, LValueToRValue, size_t)
  44: CompoundAssignOperator 0x5590ecef5350 <lvm.c:307:9, col:15> 'size_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5590ecef52e8 <col:9> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590ecef5338 <col:15> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef5310 <col:15> 'size_t':'unsigned long' lvalue Var 0x5590ecef4b20 'l' 'size_t':'unsigned long'
[B5.41] += [B5.43]
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x5590ecef4a40 <lvm.c:304:17> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
i
   2: ImplicitCastExpr 0x5590ecef4a88 <lvm.c:304:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4a40 <col:17> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x5590ecef4a68 <lvm.c:304:19> 'int' 0
0
   4: BinaryOperator 0x5590ecef4aa0 <lvm.c:304:17, col:19> 'int' '>'
|-ImplicitCastExpr 0x5590ecef4a88 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef4a40 <col:17> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
`-IntegerLiteral 0x5590ecef4a68 <col:19> 'int' 0
[B6.2] > [B6.3]
   T: for (...; [B6.4]; ...)
   Preds (2): B4 B7
   Succs (2): B5 B3

 [B7]
   1: DeclRefExpr 0x5590ecef46a0 <lvm.c:302:16> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x5590ece971b8 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
luaZ_openspace
   2: ImplicitCastExpr 0x5590ecef4878 <lvm.c:302:16> 'char *(*)(lua_State *, Mbuffer *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef46a0 <col:16> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x5590ece971b8 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(lua_State *, Mbuffer *, size_t))
   3: DeclRefExpr 0x5590ecef46c8 <lvm.c:302:31> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef48d0 <lvm.c:302:31> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef46c8 <col:31> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef46f0 <lvm.c:302:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x5590ecef4718 <lvm.c:302:37> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef46f0 <col:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B7.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x5590ecef4730 <lvm.c:302:37, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
`-ImplicitCastExpr 0x5590ecef4718 <lvm.c:302:37> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef46f0 <col:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B7.6]->l_G
   8: ImplicitCastExpr 0x5590ecef4788 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
`-ParenExpr 0x5590ecef4768 <col:14, col:21> 'global_State *' lvalue
  `-MemberExpr 0x5590ecef4730 <lvm.c:302:37, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
    `-ImplicitCastExpr 0x5590ecef4718 <lvm.c:302:37> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecef46f0 <col:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
([B7.7]) (ImplicitCastExpr, LValueToRValue, global_State *)
   9: MemberExpr 0x5590ecef47a0 <./lstate.h:130:14, lvm.c:302:41> 'Mbuffer':'struct Mbuffer' lvalue ->buff 0x5590ece9f618
`-ImplicitCastExpr 0x5590ecef4788 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x5590ecef4768 <col:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x5590ecef4730 <lvm.c:302:37, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
      `-ImplicitCastExpr 0x5590ecef4718 <lvm.c:302:37> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef46f0 <col:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B7.8]->buff
  10: UnaryOperator 0x5590ecef47d8 <lvm.c:302:34, col:41> 'Mbuffer *' prefix '&'
`-MemberExpr 0x5590ecef47a0 <./lstate.h:130:14, lvm.c:302:41> 'Mbuffer':'struct Mbuffer' lvalue ->buff 0x5590ece9f618
  `-ImplicitCastExpr 0x5590ecef4788 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x5590ecef4768 <col:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x5590ecef4730 <lvm.c:302:37, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
        `-ImplicitCastExpr 0x5590ecef4718 <lvm.c:302:37> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5590ecef46f0 <col:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
&[B7.9]
  11: DeclRefExpr 0x5590ecef47f8 <lvm.c:302:47> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
tl
  12: ImplicitCastExpr 0x5590ecef48e8 <lvm.c:302:47> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef47f8 <col:47> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B7.11] (ImplicitCastExpr, LValueToRValue, size_t)
  13: CallExpr 0x5590ecef4890 <lvm.c:302:16, col:49> 'char *'
|-ImplicitCastExpr 0x5590ecef4878 <col:16> 'char *(*)(lua_State *, Mbuffer *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef46a0 <col:16> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x5590ece971b8 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
|-ImplicitCastExpr 0x5590ecef48d0 <col:31> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef46c8 <col:31> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
|-UnaryOperator 0x5590ecef47d8 <col:34, col:41> 'Mbuffer *' prefix '&'
| `-MemberExpr 0x5590ecef47a0 <./lstate.h:130:14, lvm.c:302:41> 'Mbuffer':'struct Mbuffer' lvalue ->buff 0x5590ece9f618
|   `-ImplicitCastExpr 0x5590ecef4788 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
|     `-ParenExpr 0x5590ecef4768 <col:14, col:21> 'global_State *' lvalue
|       `-MemberExpr 0x5590ecef4730 <lvm.c:302:37, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
|         `-ImplicitCastExpr 0x5590ecef4718 <lvm.c:302:37> 'lua_State *' <LValueToRValue>
|           `-DeclRefExpr 0x5590ecef46f0 <col:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecef48e8 <col:47> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef47f8 <col:47> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B7.2]([B7.4], [B7.10], [B7.12])
  14: DeclRefExpr 0x5590ecef4678 <lvm.c:302:7> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
buffer
  15: BinaryOperator 0x5590ecef4900 <lvm.c:302:7, col:49> 'char *' '='
|-DeclRefExpr 0x5590ecef4678 <col:7> 'char *' lvalue Var 0x5590ecef3778 'buffer' 'char *'
`-CallExpr 0x5590ecef4890 <col:16, col:49> 'char *'
  |-ImplicitCastExpr 0x5590ecef4878 <col:16> 'char *(*)(lua_State *, Mbuffer *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecef46a0 <col:16> 'char *(lua_State *, Mbuffer *, size_t)' Function 0x5590ece971b8 'luaZ_openspace' 'char *(lua_State *, Mbuffer *, size_t)'
  |-ImplicitCastExpr 0x5590ecef48d0 <col:31> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef46c8 <col:31> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
  |-UnaryOperator 0x5590ecef47d8 <col:34, col:41> 'Mbuffer *' prefix '&'
  | `-MemberExpr 0x5590ecef47a0 <./lstate.h:130:14, lvm.c:302:41> 'Mbuffer':'struct Mbuffer' lvalue ->buff 0x5590ece9f618
  |   `-ImplicitCastExpr 0x5590ecef4788 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
  |     `-ParenExpr 0x5590ecef4768 <col:14, col:21> 'global_State *' lvalue
  |       `-MemberExpr 0x5590ecef4730 <lvm.c:302:37, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
  |         `-ImplicitCastExpr 0x5590ecef4718 <lvm.c:302:37> 'lua_State *' <LValueToRValue>
  |           `-DeclRefExpr 0x5590ecef46f0 <col:37> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
  `-ImplicitCastExpr 0x5590ecef48e8 <col:47> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef47f8 <col:47> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B7.14] = [B7.13]
  16: IntegerLiteral 0x5590ecef4950 <lvm.c:303:12> 'int' 0
0
  17: ImplicitCastExpr 0x5590ecef4970 <lvm.c:303:12> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x5590ecef4950 <col:12> 'int' 0
[B7.16] (ImplicitCastExpr, IntegralCast, size_t)
  18: DeclRefExpr 0x5590ecef4928 <lvm.c:303:7> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
tl
  19: BinaryOperator 0x5590ecef4988 <lvm.c:303:7, col:12> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x5590ecef4928 <col:7> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590ecef4970 <col:12> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x5590ecef4950 <col:12> 'int' 0
[B7.18] = [B7.17]
  20: DeclRefExpr 0x5590ecef49d8 <lvm.c:304:14> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
  21: ImplicitCastExpr 0x5590ecef4a00 <lvm.c:304:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef49d8 <col:14> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B7.20] (ImplicitCastExpr, LValueToRValue, int)
  22: DeclRefExpr 0x5590ecef49b0 <lvm.c:304:12> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
i
  23: BinaryOperator 0x5590ecef4a18 <lvm.c:304:12, col:14> 'int' '='
|-DeclRefExpr 0x5590ecef49b0 <col:12> 'int' lvalue Var 0x5590ecef3808 'i' 'int'
`-ImplicitCastExpr 0x5590ecef4a00 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef49d8 <col:14> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B7.22] = [B7.21]
   Preds (2): B12 B14
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x5590ecef3db8 <lvm.c:297:54> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   2: UnaryOperator 0x5590ecef3de0 <lvm.c:297:54, col:55> 'int' postfix '++'
`-DeclRefExpr 0x5590ecef3db8 <col:54> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B8.1]++
   Preds (1): B9
   Succs (1): B14

 [B9]
   1: DeclRefExpr 0x5590ecef4578 <lvm.c:300:9> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
tl
   2: DeclRefExpr 0x5590ecef45a0 <lvm.c:300:15> 'size_t':'unsigned long' lvalue Var 0x5590ecef3e10 'l' 'size_t':'unsigned long'
l
   3: ImplicitCastExpr 0x5590ecef45c8 <lvm.c:300:15> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef45a0 <col:15> 'size_t':'unsigned long' lvalue Var 0x5590ecef3e10 'l' 'size_t':'unsigned long'
[B9.2] (ImplicitCastExpr, LValueToRValue, size_t)
   4: CompoundAssignOperator 0x5590ecef45e0 <lvm.c:300:9, col:15> 'size_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5590ecef4578 <col:9> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5590ecef45c8 <col:15> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef45a0 <col:15> 'size_t':'unsigned long' lvalue Var 0x5590ecef3e10 'l' 'size_t':'unsigned long'
[B9.1] += [B9.3]
   Preds (2): B10 B11
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x5590ecef43d8 <lvm.c:299:34> 'void (lua_State *, const char *, ...)' Function 0x5590ecea4d80 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x5590ecef44a8 <lvm.c:299:34> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef43d8 <col:34> 'void (lua_State *, const char *, ...)' Function 0x5590ecea4d80 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5590ecef4400 <lvm.c:299:48> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef44f8 <lvm.c:299:48> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4400 <col:48> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5590ecef4468 <lvm.c:299:51> 'char [23]' lvalue "string length overflow"
"string length overflow"
   6: ImplicitCastExpr 0x5590ecef4510 <lvm.c:299:51> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5590ecef4468 <col:51> 'char [23]' lvalue "string length overflow"
[B10.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5590ecef4528 <lvm.c:299:51> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5590ecef4510 <col:51> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5590ecef4468 <col:51> 'char [23]' lvalue "string length overflow"
[B10.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5590ecef44c0 <lvm.c:299:34, col:75> 'void'
|-ImplicitCastExpr 0x5590ecef44a8 <col:34> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef43d8 <col:34> 'void (lua_State *, const char *, ...)' Function 0x5590ecea4d80 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5590ecef44f8 <col:48> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef4400 <col:48> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecef4528 <col:51> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5590ecef4510 <col:51> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5590ecef4468 <col:51> 'char [23]' lvalue "string length overflow"
[B10.2]([B10.4], [B10.7])
   Preds (1): B11
   Succs (1): B9

 [B11]
   1: DeclRefExpr 0x5590ecef3e70 <lvm.c:298:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef3ec0 <lvm.c:298:28> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B11.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclRefExpr 0x5590ecef3e98 <lvm.c:298:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   4: ImplicitCastExpr 0x5590ecef3ed8 <lvm.c:298:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B11.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5590ecef3ef0 <lvm.c:298:28, col:32> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B11.2] - [B11.4]
   6: IntegerLiteral 0x5590ecef3f18 <lvm.c:298:34> 'int' 1
1
   7: BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
|-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
| | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
| `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
`-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
[B11.5] - [B11.6]
   8: MemberExpr 0x5590ecef3f80 <./lobject.h:94:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
    |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
    | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
    | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
    `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
([B11.7])->value
   9: MemberExpr 0x5590ecef3fb8 <./lobject.h:94:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
      |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
      | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
      | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
      `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
[B11.8].gc
  10: ImplicitCastExpr 0x5590ecef3ff0 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
    `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
        |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
        | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
        | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
        `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
[B11.9] (ImplicitCastExpr, LValueToRValue, GCObject *)
  11: MemberExpr 0x5590ecef4008 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590ecef3ff0 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
      `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
        `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
          |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
          | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
          | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
          | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
          `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
[B11.10]->ts
  12: UnaryOperator 0x5590ecef4040 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590ecef4008 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590ecef3ff0 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
        `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
          `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
            |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
            | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
            | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
            | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
            |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
            `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
&[B11.11]
  13: MemberExpr 0x5590ecef4080 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
`-ParenExpr 0x5590ecef4060 <./llimits.h:63:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590ecef4040 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590ecef4008 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590ecef3ff0 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
            `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
              `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
                |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
                | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
                |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
                `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
([B11.12])->tsv
  14: UnaryOperator 0x5590ecef40b8 <./lobject.h:95:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
`-MemberExpr 0x5590ecef4080 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
  `-ParenExpr 0x5590ecef4060 <./llimits.h:63:25, col:27> 'union TString *'
    `-UnaryOperator 0x5590ecef4040 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x5590ecef4008 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
        `-ImplicitCastExpr 0x5590ecef3ff0 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
              `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
                `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
                  |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
                  | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                  | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                  | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
                  |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
                  `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
&[B11.13]
  15: MemberExpr 0x5590ecef4120 <./lobject.h:95:20, lvm.c:298:38> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
`-ParenExpr 0x5590ecef40d8 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
  `-UnaryOperator 0x5590ecef40b8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
    `-MemberExpr 0x5590ecef4080 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
      `-ParenExpr 0x5590ecef4060 <./llimits.h:63:25, col:27> 'union TString *'
        `-UnaryOperator 0x5590ecef4040 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
          `-MemberExpr 0x5590ecef4008 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
            `-ImplicitCastExpr 0x5590ecef3ff0 <col:49, col:60> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                  `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
                    `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
                      |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
                      | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                      | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                      | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
                      |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
                      `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
([B11.14])->len
  16: ImplicitCastExpr 0x5590ecef4158 <./lobject.h:95:20, lvm.c:298:38> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x5590ecef4120 <./lobject.h:95:20, lvm.c:298:38> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
  `-ParenExpr 0x5590ecef40d8 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
    `-UnaryOperator 0x5590ecef40b8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
      `-MemberExpr 0x5590ecef4080 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
        `-ParenExpr 0x5590ecef4060 <./llimits.h:63:25, col:27> 'union TString *'
          `-UnaryOperator 0x5590ecef4040 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
            `-MemberExpr 0x5590ecef4008 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
              `-ImplicitCastExpr 0x5590ecef3ff0 <col:49, col:60> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                  `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                    `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
                      `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
                        |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
                        | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                        | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                        | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
                        |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
                        `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
[B11.15] (ImplicitCastExpr, LValueToRValue, size_t)
  17: DeclStmt 0x5590ecef4170 <lvm.c:298:9, col:41>col:16
`-VarDecl 0x5590ecef3e10 <col:9, col:38> col:16 used l 'size_t':'unsigned long' cinit
  `-ImplicitCastExpr 0x5590ecef4158 <./lobject.h:95:20, lvm.c:298:38> 'size_t':'unsigned long' <LValueToRValue>
    `-MemberExpr 0x5590ecef4120 <./lobject.h:95:20, lvm.c:298:38> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
      `-ParenExpr 0x5590ecef40d8 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
        `-UnaryOperator 0x5590ecef40b8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
          `-MemberExpr 0x5590ecef4080 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
            `-ParenExpr 0x5590ecef4060 <./llimits.h:63:25, col:27> 'union TString *'
              `-UnaryOperator 0x5590ecef4040 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
                `-MemberExpr 0x5590ecef4008 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
                  `-ImplicitCastExpr 0x5590ecef3ff0 <col:49, col:60> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x5590ecef3fb8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                      `-MemberExpr 0x5590ecef3f80 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                        `-ParenExpr 0x5590ecef3f60 <col:49, col:51> 'StkId':'TValue *'
                          `-BinaryOperator 0x5590ecef3f38 <lvm.c:298:28, col:34> 'StkId':'TValue *' '-'
                            |-BinaryOperator 0x5590ecef3ef0 <col:28, col:32> 'StkId':'TValue *' '-'
                            | |-ImplicitCastExpr 0x5590ecef3ec0 <col:28> 'StkId':'TValue *' <LValueToRValue>
                            | | `-DeclRefExpr 0x5590ecef3e70 <col:28> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                            | `-ImplicitCastExpr 0x5590ecef3ed8 <col:32> 'int' <LValueToRValue>
                            |   `-DeclRefExpr 0x5590ecef3e98 <col:32> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
                            `-IntegerLiteral 0x5590ecef3f18 <col:34> 'int' 1
size_t l = (&(&(top - n - 1)->value.gc->ts)->tsv)->len;
  18: DeclRefExpr 0x5590ecef4188 <lvm.c:299:13> 'size_t':'unsigned long' lvalue Var 0x5590ecef3e10 'l' 'size_t':'unsigned long'
l
  19: ImplicitCastExpr 0x5590ecef4398 <lvm.c:299:13> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4188 <col:13> 'size_t':'unsigned long' lvalue Var 0x5590ecef3e10 'l' 'size_t':'unsigned long'
[B11.18] (ImplicitCastExpr, LValueToRValue, size_t)
  20: IntegerLiteral 0x5590ecef41b0 <./llimits.h:30:38> 'int' 0
0
  21: CStyleCastExpr 0x5590ecef41e0 <./llimits.h:30:30, col:38> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x5590ecef41b0 <col:38> 'int' 0
(size_t)[B11.20] (CStyleCastExpr, IntegralCast, size_t)
  22: UnaryOperator 0x5590ecef4208 <./llimits.h:30:29, col:38> 'size_t':'unsigned long' prefix '~'
`-CStyleCastExpr 0x5590ecef41e0 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x5590ecef41b0 <col:38> 'int' 0
~[B11.21]
  23: CStyleCastExpr 0x5590ecef4288 <./llimits.h:30:20, col:39> 'size_t':'unsigned long' <NoOp>
`-ParenExpr 0x5590ecef4268 <col:28, col:39> 'size_t':'unsigned long'
  `-UnaryOperator 0x5590ecef4208 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
    `-CStyleCastExpr 0x5590ecef41e0 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x5590ecef41b0 <col:38> 'int' 0
(size_t)([B11.22]) (CStyleCastExpr, NoOp, size_t)
  24: IntegerLiteral 0x5590ecef42b0 <./llimits.h:30:41> 'int' 2
2
  25: ImplicitCastExpr 0x5590ecef42d0 <./llimits.h:30:41> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x5590ecef42b0 <col:41> 'int' 2
[B11.24] (ImplicitCastExpr, IntegralCast, unsigned long)
  26: BinaryOperator 0x5590ecef42e8 <./llimits.h:30:20, col:41> 'unsigned long' '-'
|-CStyleCastExpr 0x5590ecef4288 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
| `-ParenExpr 0x5590ecef4268 <col:28, col:39> 'size_t':'unsigned long'
|   `-UnaryOperator 0x5590ecef4208 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     `-CStyleCastExpr 0x5590ecef41e0 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x5590ecef41b0 <col:38> 'int' 0
`-ImplicitCastExpr 0x5590ecef42d0 <col:41> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x5590ecef42b0 <col:41> 'int' 2
[B11.23] - [B11.25]
  27: DeclRefExpr 0x5590ecef4330 <lvm.c:299:30> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
tl
  28: ImplicitCastExpr 0x5590ecef4358 <lvm.c:299:30> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5590ecef4330 <col:30> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B11.27] (ImplicitCastExpr, LValueToRValue, size_t)
  29: BinaryOperator 0x5590ecef4370 <./llimits.h:30:19, lvm.c:299:30> 'unsigned long' '-'
|-ParenExpr 0x5590ecef4310 <./llimits.h:30:19, col:42> 'unsigned long'
| `-BinaryOperator 0x5590ecef42e8 <col:20, col:41> 'unsigned long' '-'
|   |-CStyleCastExpr 0x5590ecef4288 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   | `-ParenExpr 0x5590ecef4268 <col:28, col:39> 'size_t':'unsigned long'
|   |   `-UnaryOperator 0x5590ecef4208 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |     `-CStyleCastExpr 0x5590ecef41e0 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x5590ecef41b0 <col:38> 'int' 0
|   `-ImplicitCastExpr 0x5590ecef42d0 <col:41> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x5590ecef42b0 <col:41> 'int' 2
`-ImplicitCastExpr 0x5590ecef4358 <lvm.c:299:30> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef4330 <col:30> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
([B11.26]) - [B11.28]
  30: BinaryOperator 0x5590ecef43b0 <lvm.c:299:13, col:30> 'int' '>='
|-ImplicitCastExpr 0x5590ecef4398 <col:13> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef4188 <col:13> 'size_t':'unsigned long' lvalue Var 0x5590ecef3e10 'l' 'size_t':'unsigned long'
`-BinaryOperator 0x5590ecef4370 <./llimits.h:30:19, lvm.c:299:30> 'unsigned long' '-'
  |-ParenExpr 0x5590ecef4310 <./llimits.h:30:19, col:42> 'unsigned long'
  | `-BinaryOperator 0x5590ecef42e8 <col:20, col:41> 'unsigned long' '-'
  |   |-CStyleCastExpr 0x5590ecef4288 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
  |   | `-ParenExpr 0x5590ecef4268 <col:28, col:39> 'size_t':'unsigned long'
  |   |   `-UnaryOperator 0x5590ecef4208 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
  |   |     `-CStyleCastExpr 0x5590ecef41e0 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  |   |       `-IntegerLiteral 0x5590ecef41b0 <col:38> 'int' 0
  |   `-ImplicitCastExpr 0x5590ecef42d0 <col:41> 'unsigned long' <IntegralCast>
  |     `-IntegerLiteral 0x5590ecef42b0 <col:41> 'int' 2
  `-ImplicitCastExpr 0x5590ecef4358 <lvm.c:299:30> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef4330 <col:30> 'size_t':'unsigned long' lvalue Var 0x5590ecef3478 'tl' 'size_t':'unsigned long'
[B11.19] >= [B11.29]
   T: if [B11.30]
   Preds (2): B12 B13
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x5590ecef3b80 <./lvm.h:16:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
luaV_tostring
   2: ImplicitCastExpr 0x5590ecef3cc0 <./lvm.h:16:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef3b80 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, StkId))
   3: DeclRefExpr 0x5590ecef3ba8 <lvm.c:297:41> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef3d10 <lvm.c:297:41> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3ba8 <col:41> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef3bd0 <lvm.c:297:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   6: ImplicitCastExpr 0x5590ecef3c20 <lvm.c:297:44> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3bd0 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B12.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: DeclRefExpr 0x5590ecef3bf8 <lvm.c:297:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   8: ImplicitCastExpr 0x5590ecef3c38 <lvm.c:297:48> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3bf8 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B12.7] (ImplicitCastExpr, LValueToRValue, int)
   9: BinaryOperator 0x5590ecef3c50 <lvm.c:297:44, col:48> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef3c20 <col:44> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef3bd0 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-ImplicitCastExpr 0x5590ecef3c38 <col:48> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef3bf8 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B12.6] - [B12.8]
  10: IntegerLiteral 0x5590ecef3c78 <lvm.c:297:50> 'int' 1
1
  11: BinaryOperator 0x5590ecef3c98 <lvm.c:297:44, col:50> 'StkId':'TValue *' '-'
|-BinaryOperator 0x5590ecef3c50 <col:44, col:48> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x5590ecef3c20 <col:44> 'StkId':'TValue *' <LValueToRValue>
| | `-DeclRefExpr 0x5590ecef3bd0 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
| `-ImplicitCastExpr 0x5590ecef3c38 <col:48> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef3bf8 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
`-IntegerLiteral 0x5590ecef3c78 <col:50> 'int' 1
[B12.9] - [B12.10]
  12: CallExpr 0x5590ecef3cd8 <./lvm.h:16:54, col:72> 'int'
|-ImplicitCastExpr 0x5590ecef3cc0 <col:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef3b80 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
|-ImplicitCastExpr 0x5590ecef3d10 <lvm.c:297:41> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef3ba8 <col:41> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
`-BinaryOperator 0x5590ecef3c98 <col:44, col:50> 'StkId':'TValue *' '-'
  |-BinaryOperator 0x5590ecef3c50 <col:44, col:48> 'StkId':'TValue *' '-'
  | |-ImplicitCastExpr 0x5590ecef3c20 <col:44> 'StkId':'TValue *' <LValueToRValue>
  | | `-DeclRefExpr 0x5590ecef3bd0 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  | `-ImplicitCastExpr 0x5590ecef3c38 <col:48> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x5590ecef3bf8 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
  `-IntegerLiteral 0x5590ecef3c78 <col:50> 'int' 1
[B12.2]([B12.4], [B12.11])
   T: for (...; [B14.5] && (([B13.11]) || ([B12.12])); ...)
   Preds (1): B13
   Succs (2): B11 B7

 [B13]
   1: DeclRefExpr 0x5590ecef3998 <lvm.c:297:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef39e8 <lvm.c:297:44> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3998 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B13.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclRefExpr 0x5590ecef39c0 <lvm.c:297:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   4: ImplicitCastExpr 0x5590ecef3a00 <lvm.c:297:48> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef39c0 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B13.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5590ecef3a18 <lvm.c:297:44, col:48> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef39e8 <col:44> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef3998 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-ImplicitCastExpr 0x5590ecef3a00 <col:48> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef39c0 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B13.2] - [B13.4]
   6: IntegerLiteral 0x5590ecef3a40 <lvm.c:297:50> 'int' 1
1
   7: BinaryOperator 0x5590ecef3a60 <lvm.c:297:44, col:50> 'StkId':'TValue *' '-'
|-BinaryOperator 0x5590ecef3a18 <col:44, col:48> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x5590ecef39e8 <col:44> 'StkId':'TValue *' <LValueToRValue>
| | `-DeclRefExpr 0x5590ecef3998 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
| `-ImplicitCastExpr 0x5590ecef3a00 <col:48> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef39c0 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
`-IntegerLiteral 0x5590ecef3a40 <col:50> 'int' 1
[B13.5] - [B13.6]
   8: MemberExpr 0x5590ecef3aa8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ParenExpr 0x5590ecef3a88 <col:19, col:21> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef3a60 <lvm.c:297:44, col:50> 'StkId':'TValue *' '-'
    |-BinaryOperator 0x5590ecef3a18 <col:44, col:48> 'StkId':'TValue *' '-'
    | |-ImplicitCastExpr 0x5590ecef39e8 <col:44> 'StkId':'TValue *' <LValueToRValue>
    | | `-DeclRefExpr 0x5590ecef3998 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    | `-ImplicitCastExpr 0x5590ecef3a00 <col:48> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5590ecef39c0 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
    `-IntegerLiteral 0x5590ecef3a40 <col:50> 'int' 1
([B13.7])->tt
   9: ImplicitCastExpr 0x5590ecef3b20 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef3ae0 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecef3aa8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ParenExpr 0x5590ecef3a88 <col:19, col:21> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef3a60 <lvm.c:297:44, col:50> 'StkId':'TValue *' '-'
        |-BinaryOperator 0x5590ecef3a18 <col:44, col:48> 'StkId':'TValue *' '-'
        | |-ImplicitCastExpr 0x5590ecef39e8 <col:44> 'StkId':'TValue *' <LValueToRValue>
        | | `-DeclRefExpr 0x5590ecef3998 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        | `-ImplicitCastExpr 0x5590ecef3a00 <col:48> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x5590ecef39c0 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
        `-IntegerLiteral 0x5590ecef3a40 <col:50> 'int' 1
([B13.8]) (ImplicitCastExpr, LValueToRValue, int)
  10: IntegerLiteral 0x5590ecef3b00 <./lua.h:78:22> 'int' 4
4
  11: BinaryOperator 0x5590ecef3b38 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x5590ecef3b20 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef3ae0 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecef3aa8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ParenExpr 0x5590ecef3a88 <col:19, col:21> 'StkId':'TValue *'
|       `-BinaryOperator 0x5590ecef3a60 <lvm.c:297:44, col:50> 'StkId':'TValue *' '-'
|         |-BinaryOperator 0x5590ecef3a18 <col:44, col:48> 'StkId':'TValue *' '-'
|         | |-ImplicitCastExpr 0x5590ecef39e8 <col:44> 'StkId':'TValue *' <LValueToRValue>
|         | | `-DeclRefExpr 0x5590ecef3998 <col:44> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|         | `-ImplicitCastExpr 0x5590ecef3a00 <col:48> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x5590ecef39c0 <col:48> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
|         `-IntegerLiteral 0x5590ecef3a40 <col:50> 'int' 1
`-IntegerLiteral 0x5590ecef3b00 <./lua.h:78:22> 'int' 4
[B13.9] == [B13.10]
   T: ([B13.11]) || ...
   Preds (1): B14
   Succs (2): B11 B12

 [B14]
   1: DeclRefExpr 0x5590ecef38f0 <lvm.c:297:19> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
   2: ImplicitCastExpr 0x5590ecef3940 <lvm.c:297:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef38f0 <col:19> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
[B14.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5590ecef3918 <lvm.c:297:23> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
total
   4: ImplicitCastExpr 0x5590ecef3958 <lvm.c:297:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3918 <col:23> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
[B14.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5590ecef3970 <lvm.c:297:19, col:23> 'int' '<'
|-ImplicitCastExpr 0x5590ecef3940 <col:19> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef38f0 <col:19> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
`-ImplicitCastExpr 0x5590ecef3958 <col:23> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef3918 <col:23> 'int' lvalue ParmVar 0x5590ecef17f0 'total' 'int'
[B14.2] < [B14.4]
   T: [B14.5] && ...
   Preds (2): B8 B15
   Succs (2): B13 B7

 [B15]
   1: DeclRefExpr 0x5590ecef34d8 <lvm.c:293:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef3520 <lvm.c:293:27> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B15.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: IntegerLiteral 0x5590ecef3500 <lvm.c:293:31> 'int' 1
1
   4: BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
[B15.2] - [B15.3]
   5: MemberExpr 0x5590ecef3580 <./lobject.h:94:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
([B15.4])->value
   6: MemberExpr 0x5590ecef35b8 <./lobject.h:94:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
[B15.5].gc
   7: ImplicitCastExpr 0x5590ecef35f0 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
    `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
[B15.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x5590ecef3608 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590ecef35f0 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
      `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
        `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
          |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
          `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
[B15.7]->ts
   9: UnaryOperator 0x5590ecef3640 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590ecef3608 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590ecef35f0 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
        `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
          `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
            |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
            | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
            `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
&[B15.8]
  10: MemberExpr 0x5590ecef3680 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
`-ParenExpr 0x5590ecef3660 <./llimits.h:63:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590ecef3640 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590ecef3608 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590ecef35f0 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
            `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
              `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
                |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
                | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
([B15.9])->tsv
  11: UnaryOperator 0x5590ecef36b8 <./lobject.h:95:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
`-MemberExpr 0x5590ecef3680 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
  `-ParenExpr 0x5590ecef3660 <./llimits.h:63:25, col:27> 'union TString *'
    `-UnaryOperator 0x5590ecef3640 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x5590ecef3608 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
        `-ImplicitCastExpr 0x5590ecef35f0 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
              `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
                `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
                  |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
                  | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                  `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
&[B15.10]
  12: MemberExpr 0x5590ecef36f8 <./lobject.h:95:20, lvm.c:293:35> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
`-ParenExpr 0x5590ecef36d8 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
  `-UnaryOperator 0x5590ecef36b8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
    `-MemberExpr 0x5590ecef3680 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
      `-ParenExpr 0x5590ecef3660 <./llimits.h:63:25, col:27> 'union TString *'
        `-UnaryOperator 0x5590ecef3640 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
          `-MemberExpr 0x5590ecef3608 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
            `-ImplicitCastExpr 0x5590ecef35f0 <col:49, col:60> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                  `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
                    `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
                      |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
                      | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                      `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
([B15.11])->len
  13: ImplicitCastExpr 0x5590ecef3730 <./lobject.h:95:20, lvm.c:293:35> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x5590ecef36f8 <./lobject.h:95:20, lvm.c:293:35> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
  `-ParenExpr 0x5590ecef36d8 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
    `-UnaryOperator 0x5590ecef36b8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
      `-MemberExpr 0x5590ecef3680 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
        `-ParenExpr 0x5590ecef3660 <./llimits.h:63:25, col:27> 'union TString *'
          `-UnaryOperator 0x5590ecef3640 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
            `-MemberExpr 0x5590ecef3608 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
              `-ImplicitCastExpr 0x5590ecef35f0 <col:49, col:60> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                  `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                    `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
                      `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
                        |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
                        | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                        `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
[B15.12] (ImplicitCastExpr, LValueToRValue, size_t)
  14: DeclStmt 0x5590ecef3748 <lvm.c:293:7, col:38>col:14
`-VarDecl 0x5590ecef3478 <col:7, col:35> col:14 used tl 'size_t':'unsigned long' cinit
  `-ImplicitCastExpr 0x5590ecef3730 <./lobject.h:95:20, lvm.c:293:35> 'size_t':'unsigned long' <LValueToRValue>
    `-MemberExpr 0x5590ecef36f8 <./lobject.h:95:20, lvm.c:293:35> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
      `-ParenExpr 0x5590ecef36d8 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
        `-UnaryOperator 0x5590ecef36b8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
          `-MemberExpr 0x5590ecef3680 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
            `-ParenExpr 0x5590ecef3660 <./llimits.h:63:25, col:27> 'union TString *'
              `-UnaryOperator 0x5590ecef3640 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
                `-MemberExpr 0x5590ecef3608 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
                  `-ImplicitCastExpr 0x5590ecef35f0 <col:49, col:60> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x5590ecef35b8 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                      `-MemberExpr 0x5590ecef3580 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                        `-ParenExpr 0x5590ecef3560 <col:49, col:51> 'StkId':'TValue *'
                          `-BinaryOperator 0x5590ecef3538 <lvm.c:293:27, col:31> 'StkId':'TValue *' '-'
                            |-ImplicitCastExpr 0x5590ecef3520 <col:27> 'StkId':'TValue *' <LValueToRValue>
                            | `-DeclRefExpr 0x5590ecef34d8 <col:27> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                            `-IntegerLiteral 0x5590ecef3500 <col:31> 'int' 1
size_t tl = (&(&(top - 1)->value.gc->ts)->tsv)->len;
  15: DeclStmt 0x5590ecef37d8 <lvm.c:294:7, col:19>col:13
`-VarDecl 0x5590ecef3778 <col:7, col:13> col:13 used buffer 'char *'
char *buffer;
  16: DeclStmt 0x5590ecef3868 <lvm.c:295:7, col:12>col:11
`-VarDecl 0x5590ecef3808 <col:7, col:11> col:11 used i 'int'
int i;
  17: IntegerLiteral 0x5590ecef38a8 <lvm.c:297:16> 'int' 1
1
  18: DeclRefExpr 0x5590ecef3880 <lvm.c:297:12> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
n
  19: BinaryOperator 0x5590ecef38c8 <lvm.c:297:12, col:16> 'int' '='
|-DeclRefExpr 0x5590ecef3880 <col:12> 'int' lvalue Var 0x5590ecef1be0 'n' 'int'
`-IntegerLiteral 0x5590ecef38a8 <col:16> 'int' 1
[B15.18] = [B15.17]
   Preds (1): B19
   Succs (1): B14

 [B16]
   1: BinaryOperator 0x5590ecef33b8 <./lvm.h:16:24, col:73> 'int' '||'
|-ParenExpr 0x5590ecef3238 <col:24, col:48> 'int'
| `-BinaryOperator 0x5590ecef3210 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|   |-ImplicitCastExpr 0x5590ecef31f8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
|   | `-ParenExpr 0x5590ecef31b8 <col:18, col:26> 'int' lvalue
|   |   `-MemberExpr 0x5590ecef3180 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|   |     `-ParenExpr 0x5590ecef3160 <col:19, col:21> 'StkId':'TValue *'
|   |       `-BinaryOperator 0x5590ecef3138 <lvm.c:290:25, col:31> 'StkId':'TValue *' '-'
|   |         |-ImplicitCastExpr 0x5590ecef3120 <col:25> 'StkId':'TValue *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x5590ecef30d8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|   |         `-IntegerLiteral 0x5590ecef3100 <col:31> 'int' 2
|   `-IntegerLiteral 0x5590ecef31d8 <./lua.h:78:22> 'int' 4
`-ParenExpr 0x5590ecef3398 <./lvm.h:16:53, col:73> 'int'
  `-CallExpr 0x5590ecef3348 <col:54, col:72> 'int'
    |-ImplicitCastExpr 0x5590ecef3330 <col:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590ecef3258 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
    |-ImplicitCastExpr 0x5590ecef3380 <lvm.c:290:22> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef3280 <col:22> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
    `-BinaryOperator 0x5590ecef3308 <col:25, col:31> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5590ecef32f0 <col:25> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef32a8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      `-IntegerLiteral 0x5590ecef32d0 <col:31> 'int' 2
([B18.8]) || ([B17.9])
   2: CStyleCastExpr 0x5590ecef3440 <lvm.c:290:7, ./lvm.h:16:74> 'void' <ToVoid>
`-ParenExpr 0x5590ecef3420 <col:23, col:74> 'int'
  `-BinaryOperator 0x5590ecef33b8 <col:24, col:73> 'int' '||'
    |-ParenExpr 0x5590ecef3238 <col:24, col:48> 'int'
    | `-BinaryOperator 0x5590ecef3210 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
    |   |-ImplicitCastExpr 0x5590ecef31f8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   | `-ParenExpr 0x5590ecef31b8 <col:18, col:26> 'int' lvalue
    |   |   `-MemberExpr 0x5590ecef3180 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    |   |     `-ParenExpr 0x5590ecef3160 <col:19, col:21> 'StkId':'TValue *'
    |   |       `-BinaryOperator 0x5590ecef3138 <lvm.c:290:25, col:31> 'StkId':'TValue *' '-'
    |   |         |-ImplicitCastExpr 0x5590ecef3120 <col:25> 'StkId':'TValue *' <LValueToRValue>
    |   |         | `-DeclRefExpr 0x5590ecef30d8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    |   |         `-IntegerLiteral 0x5590ecef3100 <col:31> 'int' 2
    |   `-IntegerLiteral 0x5590ecef31d8 <./lua.h:78:22> 'int' 4
    `-ParenExpr 0x5590ecef3398 <./lvm.h:16:53, col:73> 'int'
      `-CallExpr 0x5590ecef3348 <col:54, col:72> 'int'
        |-ImplicitCastExpr 0x5590ecef3330 <col:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5590ecef3258 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
        |-ImplicitCastExpr 0x5590ecef3380 <lvm.c:290:22> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef3280 <col:22> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
        `-BinaryOperator 0x5590ecef3308 <col:25, col:31> 'StkId':'TValue *' '-'
          |-ImplicitCastExpr 0x5590ecef32f0 <col:25> 'StkId':'TValue *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecef32a8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
          `-IntegerLiteral 0x5590ecef32d0 <col:31> 'int' 2
(void)([B16.1]) (CStyleCastExpr, ToVoid, void)
   Preds (2): B17 B18
   Succs (1): B2

 [B17]
   1: DeclRefExpr 0x5590ecef3258 <./lvm.h:16:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
luaV_tostring
   2: ImplicitCastExpr 0x5590ecef3330 <./lvm.h:16:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef3258 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
[B17.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, StkId))
   3: DeclRefExpr 0x5590ecef3280 <lvm.c:290:22> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef3380 <lvm.c:290:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef3280 <col:22> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B17.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef32a8 <lvm.c:290:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   6: ImplicitCastExpr 0x5590ecef32f0 <lvm.c:290:25> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef32a8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B17.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: IntegerLiteral 0x5590ecef32d0 <lvm.c:290:31> 'int' 2
2
   8: BinaryOperator 0x5590ecef3308 <lvm.c:290:25, col:31> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef32f0 <col:25> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef32a8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef32d0 <col:31> 'int' 2
[B17.6] - [B17.7]
   9: CallExpr 0x5590ecef3348 <./lvm.h:16:54, col:72> 'int'
|-ImplicitCastExpr 0x5590ecef3330 <col:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef3258 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
|-ImplicitCastExpr 0x5590ecef3380 <lvm.c:290:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef3280 <col:22> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
`-BinaryOperator 0x5590ecef3308 <col:25, col:31> 'StkId':'TValue *' '-'
  |-ImplicitCastExpr 0x5590ecef32f0 <col:25> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef32a8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  `-IntegerLiteral 0x5590ecef32d0 <col:31> 'int' 2
[B17.2]([B17.4], [B17.8])
   Preds (1): B18
   Succs (1): B16

 [B18]
   1: DeclRefExpr 0x5590ecef30d8 <lvm.c:290:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef3120 <lvm.c:290:25> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef30d8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B18.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: IntegerLiteral 0x5590ecef3100 <lvm.c:290:31> 'int' 2
2
   4: BinaryOperator 0x5590ecef3138 <lvm.c:290:25, col:31> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef3120 <col:25> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef30d8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef3100 <col:31> 'int' 2
[B18.2] - [B18.3]
   5: MemberExpr 0x5590ecef3180 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ParenExpr 0x5590ecef3160 <col:19, col:21> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef3138 <lvm.c:290:25, col:31> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef3120 <col:25> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef30d8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-IntegerLiteral 0x5590ecef3100 <col:31> 'int' 2
([B18.4])->tt
   6: ImplicitCastExpr 0x5590ecef31f8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef31b8 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecef3180 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ParenExpr 0x5590ecef3160 <col:19, col:21> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef3138 <lvm.c:290:25, col:31> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef3120 <col:25> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef30d8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-IntegerLiteral 0x5590ecef3100 <col:31> 'int' 2
([B18.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5590ecef31d8 <./lua.h:78:22> 'int' 4
4
   8: BinaryOperator 0x5590ecef3210 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x5590ecef31f8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef31b8 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecef3180 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ParenExpr 0x5590ecef3160 <col:19, col:21> 'StkId':'TValue *'
|       `-BinaryOperator 0x5590ecef3138 <lvm.c:290:25, col:31> 'StkId':'TValue *' '-'
|         |-ImplicitCastExpr 0x5590ecef3120 <col:25> 'StkId':'TValue *' <LValueToRValue>
|         | `-DeclRefExpr 0x5590ecef30d8 <col:25> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|         `-IntegerLiteral 0x5590ecef3100 <col:31> 'int' 2
`-IntegerLiteral 0x5590ecef31d8 <./lua.h:78:22> 'int' 4
[B18.6] == [B18.7]
   T: ([B18.8]) || ...
   Preds (1): B19
   Succs (2): B16 B17

 [B19]
   1: DeclRefExpr 0x5590ecef2da8 <lvm.c:289:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef2df0 <lvm.c:289:24> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B19.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: IntegerLiteral 0x5590ecef2dd0 <lvm.c:289:28> 'int' 1
1
   4: BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
[B19.2] - [B19.3]
   5: MemberExpr 0x5590ecef2e50 <./lobject.h:94:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
([B19.4])->value
   6: MemberExpr 0x5590ecef2e88 <./lobject.h:94:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
[B19.5].gc
   7: ImplicitCastExpr 0x5590ecef2ec0 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
    `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
[B19.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x5590ecef2ed8 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590ecef2ec0 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
      `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
        `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
          |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
          `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
[B19.7]->ts
   9: UnaryOperator 0x5590ecef2f10 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590ecef2ed8 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590ecef2ec0 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
        `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
          `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
            |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
            | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
            `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
&[B19.8]
  10: MemberExpr 0x5590ecef2f50 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
`-ParenExpr 0x5590ecef2f30 <./llimits.h:63:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590ecef2f10 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590ecef2ed8 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590ecef2ec0 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
            `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
              `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
                |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
                | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
([B19.9])->tsv
  11: UnaryOperator 0x5590ecef2fe8 <./lobject.h:95:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
`-MemberExpr 0x5590ecef2f50 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
  `-ParenExpr 0x5590ecef2f30 <./llimits.h:63:25, col:27> 'union TString *'
    `-UnaryOperator 0x5590ecef2f10 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x5590ecef2ed8 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
        `-ImplicitCastExpr 0x5590ecef2ec0 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
              `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
                `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
                  |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
                  | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                  `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
&[B19.10]
  12: MemberExpr 0x5590ecef3028 <./lobject.h:95:20, lvm.c:289:32> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
`-ParenExpr 0x5590ecef3008 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
  `-UnaryOperator 0x5590ecef2fe8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
    `-MemberExpr 0x5590ecef2f50 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
      `-ParenExpr 0x5590ecef2f30 <./llimits.h:63:25, col:27> 'union TString *'
        `-UnaryOperator 0x5590ecef2f10 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
          `-MemberExpr 0x5590ecef2ed8 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
            `-ImplicitCastExpr 0x5590ecef2ec0 <col:49, col:60> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                  `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
                    `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
                      |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
                      | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                      `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
([B19.11])->len
  13: ImplicitCastExpr 0x5590ecef3080 <./lobject.h:95:20, lvm.c:289:32> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x5590ecef3028 <./lobject.h:95:20, lvm.c:289:32> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
  `-ParenExpr 0x5590ecef3008 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
    `-UnaryOperator 0x5590ecef2fe8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
      `-MemberExpr 0x5590ecef2f50 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
        `-ParenExpr 0x5590ecef2f30 <./llimits.h:63:25, col:27> 'union TString *'
          `-UnaryOperator 0x5590ecef2f10 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
            `-MemberExpr 0x5590ecef2ed8 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
              `-ImplicitCastExpr 0x5590ecef2ec0 <col:49, col:60> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
                  `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
                    `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
                      `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
                        |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
                        | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
                        `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
[B19.12] (ImplicitCastExpr, LValueToRValue, size_t)
  14: IntegerLiteral 0x5590ecef3060 <lvm.c:289:39> 'int' 0
0
  15: ImplicitCastExpr 0x5590ecef3098 <lvm.c:289:39> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x5590ecef3060 <col:39> 'int' 0
[B19.14] (ImplicitCastExpr, IntegralCast, unsigned long)
  16: BinaryOperator 0x5590ecef30b0 <./lobject.h:95:20, lvm.c:289:39> 'int' '=='
|-ImplicitCastExpr 0x5590ecef3080 <./lobject.h:95:20, lvm.c:289:32> 'size_t':'unsigned long' <LValueToRValue>
| `-MemberExpr 0x5590ecef3028 <./lobject.h:95:20, lvm.c:289:32> 'size_t':'unsigned long' lvalue ->len 0x5590ece8bab0
|   `-ParenExpr 0x5590ecef3008 <./lobject.h:95:20, col:40> 'struct (anonymous struct at ./lobject.h:201:3) *'
|     `-UnaryOperator 0x5590ecef2fe8 <col:21, col:37> 'struct (anonymous struct at ./lobject.h:201:3) *' prefix '&'
|       `-MemberExpr 0x5590ecef2f50 <./llimits.h:63:25, ./lobject.h:95:37> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x5590ece8bb50
|         `-ParenExpr 0x5590ecef2f30 <./llimits.h:63:25, col:27> 'union TString *'
|           `-UnaryOperator 0x5590ecef2f10 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|             `-MemberExpr 0x5590ecef2ed8 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
|               `-ImplicitCastExpr 0x5590ecef2ec0 <col:49, col:60> 'GCObject *' <LValueToRValue>
|                 `-MemberExpr 0x5590ecef2e88 <col:49, col:60> 'GCObject *' lvalue .gc 0x5590ece76aa0
|                   `-MemberExpr 0x5590ecef2e50 <col:49, col:54> 'Value':'Value' lvalue ->value 0x5590ece76da0
|                     `-ParenExpr 0x5590ecef2e30 <col:49, col:51> 'StkId':'TValue *'
|                       `-BinaryOperator 0x5590ecef2e08 <lvm.c:289:24, col:28> 'StkId':'TValue *' '-'
|                         |-ImplicitCastExpr 0x5590ecef2df0 <col:24> 'StkId':'TValue *' <LValueToRValue>
|                         | `-DeclRefExpr 0x5590ecef2da8 <col:24> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|                         `-IntegerLiteral 0x5590ecef2dd0 <col:28> 'int' 1
`-ImplicitCastExpr 0x5590ecef3098 <col:39> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x5590ecef3060 <col:39> 'int' 0
[B19.13] == [B19.15]
   T: if [B19.16]
   Preds (1): B22
   Succs (2): B18 B15

 [B20]
   1: DeclRefExpr 0x5590ecef2b30 <lvm.c:288:9> 'void (lua_State *, StkId, StkId)' Function 0x5590ecea4410 'luaG_concaterror' 'void (lua_State *, StkId, StkId)'
luaG_concaterror
   2: ImplicitCastExpr 0x5590ecef2ce8 <lvm.c:288:9> 'void (*)(lua_State *, StkId, StkId)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef2b30 <col:9> 'void (lua_State *, StkId, StkId)' Function 0x5590ecea4410 'luaG_concaterror' 'void (lua_State *, StkId, StkId)'
[B20.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, StkId, StkId))
   3: DeclRefExpr 0x5590ecef2b58 <lvm.c:288:26> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef2d40 <lvm.c:288:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2b58 <col:26> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B20.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef2b80 <lvm.c:288:29> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   6: ImplicitCastExpr 0x5590ecef2bc8 <lvm.c:288:29> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2b80 <col:29> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B20.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: IntegerLiteral 0x5590ecef2ba8 <lvm.c:288:33> 'int' 2
2
   8: BinaryOperator 0x5590ecef2be0 <lvm.c:288:29, col:33> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2bc8 <col:29> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2b80 <col:29> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2ba8 <col:33> 'int' 2
[B20.6] - [B20.7]
   9: DeclRefExpr 0x5590ecef2c08 <lvm.c:288:36> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
  10: ImplicitCastExpr 0x5590ecef2c50 <lvm.c:288:36> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2c08 <col:36> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B20.9] (ImplicitCastExpr, LValueToRValue, StkId)
  11: IntegerLiteral 0x5590ecef2c30 <lvm.c:288:40> 'int' 1
1
  12: BinaryOperator 0x5590ecef2c68 <lvm.c:288:36, col:40> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2c50 <col:36> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2c08 <col:36> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2c30 <col:40> 'int' 1
[B20.10] - [B20.11]
  13: CallExpr 0x5590ecef2d00 <lvm.c:288:9, col:41> 'void'
|-ImplicitCastExpr 0x5590ecef2ce8 <col:9> 'void (*)(lua_State *, StkId, StkId)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef2b30 <col:9> 'void (lua_State *, StkId, StkId)' Function 0x5590ecea4410 'luaG_concaterror' 'void (lua_State *, StkId, StkId)'
|-ImplicitCastExpr 0x5590ecef2d40 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2b58 <col:26> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
|-BinaryOperator 0x5590ecef2be0 <col:29, col:33> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x5590ecef2bc8 <col:29> 'StkId':'TValue *' <LValueToRValue>
| | `-DeclRefExpr 0x5590ecef2b80 <col:29> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
| `-IntegerLiteral 0x5590ecef2ba8 <col:33> 'int' 2
`-BinaryOperator 0x5590ecef2c68 <col:36, col:40> 'StkId':'TValue *' '-'
  |-ImplicitCastExpr 0x5590ecef2c50 <col:36> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef2c08 <col:36> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  `-IntegerLiteral 0x5590ecef2c30 <col:40> 'int' 1
[B20.2]([B20.4], [B20.8], [B20.12])
   Preds (1): B21
   Succs (1): B2

 [B21]
   1: DeclRefExpr 0x5590ecef27e0 <lvm.c:287:12> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
call_binTM
   2: ImplicitCastExpr 0x5590ecef2a48 <lvm.c:287:12> 'int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef27e0 <col:12> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
[B21.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS))
   3: DeclRefExpr 0x5590ecef2808 <lvm.c:287:23> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef2ab0 <lvm.c:287:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2808 <col:23> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B21.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef2830 <lvm.c:287:26> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   6: ImplicitCastExpr 0x5590ecef2878 <lvm.c:287:26> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2830 <col:26> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B21.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: IntegerLiteral 0x5590ecef2858 <lvm.c:287:30> 'int' 2
2
   8: BinaryOperator 0x5590ecef2890 <lvm.c:287:26, col:30> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2878 <col:26> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2830 <col:26> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2858 <col:30> 'int' 2
[B21.6] - [B21.7]
   9: ImplicitCastExpr 0x5590ecef2ac8 <lvm.c:287:26, col:30> 'const TValue *' <BitCast>
`-BinaryOperator 0x5590ecef2890 <col:26, col:30> 'StkId':'TValue *' '-'
  |-ImplicitCastExpr 0x5590ecef2878 <col:26> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef2830 <col:26> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  `-IntegerLiteral 0x5590ecef2858 <col:30> 'int' 2
[B21.8] (ImplicitCastExpr, BitCast, const TValue *)
  10: DeclRefExpr 0x5590ecef28b8 <lvm.c:287:33> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
  11: ImplicitCastExpr 0x5590ecef2900 <lvm.c:287:33> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef28b8 <col:33> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B21.10] (ImplicitCastExpr, LValueToRValue, StkId)
  12: IntegerLiteral 0x5590ecef28e0 <lvm.c:287:37> 'int' 1
1
  13: BinaryOperator 0x5590ecef2918 <lvm.c:287:33, col:37> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2900 <col:33> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef28b8 <col:33> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef28e0 <col:37> 'int' 1
[B21.11] - [B21.12]
  14: ImplicitCastExpr 0x5590ecef2ae0 <lvm.c:287:33, col:37> 'const TValue *' <BitCast>
`-BinaryOperator 0x5590ecef2918 <col:33, col:37> 'StkId':'TValue *' '-'
  |-ImplicitCastExpr 0x5590ecef2900 <col:33> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef28b8 <col:33> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  `-IntegerLiteral 0x5590ecef28e0 <col:37> 'int' 1
[B21.13] (ImplicitCastExpr, BitCast, const TValue *)
  15: DeclRefExpr 0x5590ecef2940 <lvm.c:287:40> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
  16: ImplicitCastExpr 0x5590ecef2988 <lvm.c:287:40> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2940 <col:40> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B21.15] (ImplicitCastExpr, LValueToRValue, StkId)
  17: IntegerLiteral 0x5590ecef2968 <lvm.c:287:44> 'int' 2
2
  18: BinaryOperator 0x5590ecef29a0 <lvm.c:287:40, col:44> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2988 <col:40> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2940 <col:40> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2968 <col:44> 'int' 2
[B21.16] - [B21.17]
  19: DeclRefExpr 0x5590ecef29c8 <lvm.c:287:47> 'int' EnumConstant 0x5590ece94778 'TM_CONCAT' 'int'
TM_CONCAT
  20: ImplicitCastExpr 0x5590ecef2af8 <lvm.c:287:47> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590ecef29c8 <col:47> 'int' EnumConstant 0x5590ece94778 'TM_CONCAT' 'int'
[B21.19] (ImplicitCastExpr, IntegralCast, TMS)
  21: CallExpr 0x5590ecef2a60 <lvm.c:287:12, col:56> 'int'
|-ImplicitCastExpr 0x5590ecef2a48 <col:12> 'int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef27e0 <col:12> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
|-ImplicitCastExpr 0x5590ecef2ab0 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2808 <col:23> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef2ac8 <col:26, col:30> 'const TValue *' <BitCast>
| `-BinaryOperator 0x5590ecef2890 <col:26, col:30> 'StkId':'TValue *' '-'
|   |-ImplicitCastExpr 0x5590ecef2878 <col:26> 'StkId':'TValue *' <LValueToRValue>
|   | `-DeclRefExpr 0x5590ecef2830 <col:26> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|   `-IntegerLiteral 0x5590ecef2858 <col:30> 'int' 2
|-ImplicitCastExpr 0x5590ecef2ae0 <col:33, col:37> 'const TValue *' <BitCast>
| `-BinaryOperator 0x5590ecef2918 <col:33, col:37> 'StkId':'TValue *' '-'
|   |-ImplicitCastExpr 0x5590ecef2900 <col:33> 'StkId':'TValue *' <LValueToRValue>
|   | `-DeclRefExpr 0x5590ecef28b8 <col:33> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|   `-IntegerLiteral 0x5590ecef28e0 <col:37> 'int' 1
|-BinaryOperator 0x5590ecef29a0 <col:40, col:44> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x5590ecef2988 <col:40> 'StkId':'TValue *' <LValueToRValue>
| | `-DeclRefExpr 0x5590ecef2940 <col:40> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
| `-IntegerLiteral 0x5590ecef2968 <col:44> 'int' 2
`-ImplicitCastExpr 0x5590ecef2af8 <col:47> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x5590ecef29c8 <col:47> 'int' EnumConstant 0x5590ece94778 'TM_CONCAT' 'int'
[B21.2]([B21.4], [B21.9], [B21.14], [B21.18], [B21.20])
  22: UnaryOperator 0x5590ecef2b10 <lvm.c:287:11, col:56> 'int' prefix '!'
`-CallExpr 0x5590ecef2a60 <col:12, col:56> 'int'
  |-ImplicitCastExpr 0x5590ecef2a48 <col:12> 'int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecef27e0 <col:12> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
  |-ImplicitCastExpr 0x5590ecef2ab0 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef2808 <col:23> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590ecef2ac8 <col:26, col:30> 'const TValue *' <BitCast>
  | `-BinaryOperator 0x5590ecef2890 <col:26, col:30> 'StkId':'TValue *' '-'
  |   |-ImplicitCastExpr 0x5590ecef2878 <col:26> 'StkId':'TValue *' <LValueToRValue>
  |   | `-DeclRefExpr 0x5590ecef2830 <col:26> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  |   `-IntegerLiteral 0x5590ecef2858 <col:30> 'int' 2
  |-ImplicitCastExpr 0x5590ecef2ae0 <col:33, col:37> 'const TValue *' <BitCast>
  | `-BinaryOperator 0x5590ecef2918 <col:33, col:37> 'StkId':'TValue *' '-'
  |   |-ImplicitCastExpr 0x5590ecef2900 <col:33> 'StkId':'TValue *' <LValueToRValue>
  |   | `-DeclRefExpr 0x5590ecef28b8 <col:33> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  |   `-IntegerLiteral 0x5590ecef28e0 <col:37> 'int' 1
  |-BinaryOperator 0x5590ecef29a0 <col:40, col:44> 'StkId':'TValue *' '-'
  | |-ImplicitCastExpr 0x5590ecef2988 <col:40> 'StkId':'TValue *' <LValueToRValue>
  | | `-DeclRefExpr 0x5590ecef2940 <col:40> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  | `-IntegerLiteral 0x5590ecef2968 <col:44> 'int' 2
  `-ImplicitCastExpr 0x5590ecef2af8 <col:47> 'TMS':'TMS' <IntegralCast>
    `-DeclRefExpr 0x5590ecef29c8 <col:47> 'int' EnumConstant 0x5590ece94778 'TM_CONCAT' 'int'
![B21.21]
   T: if [B21.22]
   Preds (2): B22 B25
   Succs (2): B20 B2

 [B22]
   1: BinaryOperator 0x5590ecef2750 <./lvm.h:16:24, col:73> 'int' '||'
|-ParenExpr 0x5590ecef2578 <col:24, col:48> 'int'
| `-BinaryOperator 0x5590ecef2550 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|   |-ImplicitCastExpr 0x5590ecef2538 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
|   | `-ParenExpr 0x5590ecef24f8 <col:18, col:26> 'int' lvalue
|   |   `-MemberExpr 0x5590ecef24c0 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|   |     `-ParenExpr 0x5590ecef24a0 <col:19, col:21> 'StkId':'TValue *'
|   |       `-BinaryOperator 0x5590ecef2478 <lvm.c:286:67, col:71> 'StkId':'TValue *' '-'
|   |         |-ImplicitCastExpr 0x5590ecef2460 <col:67> 'StkId':'TValue *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x5590ecef2418 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|   |         `-IntegerLiteral 0x5590ecef2440 <col:71> 'int' 1
|   `-IntegerLiteral 0x5590ecef2518 <./lua.h:78:22> 'int' 4
`-ParenExpr 0x5590ecef2730 <./lvm.h:16:53, col:73> 'int'
  `-CallExpr 0x5590ecef26e0 <col:54, col:72> 'int'
    |-ImplicitCastExpr 0x5590ecef26c8 <col:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590ecef2598 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
    |-ImplicitCastExpr 0x5590ecef2718 <lvm.c:286:64> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef25c0 <col:64> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
    `-BinaryOperator 0x5590ecef2648 <col:67, col:71> 'StkId':'TValue *' '-'
      |-ImplicitCastExpr 0x5590ecef2630 <col:67> 'StkId':'TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef25e8 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
      `-IntegerLiteral 0x5590ecef2610 <col:71> 'int' 1
([B24.8]) || ([B23.9])
   2: UnaryOperator 0x5590ecef2798 <lvm.c:286:54, ./lvm.h:16:74> 'int' prefix '!'
`-ParenExpr 0x5590ecef2778 <col:23, col:74> 'int'
  `-BinaryOperator 0x5590ecef2750 <col:24, col:73> 'int' '||'
    |-ParenExpr 0x5590ecef2578 <col:24, col:48> 'int'
    | `-BinaryOperator 0x5590ecef2550 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
    |   |-ImplicitCastExpr 0x5590ecef2538 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   | `-ParenExpr 0x5590ecef24f8 <col:18, col:26> 'int' lvalue
    |   |   `-MemberExpr 0x5590ecef24c0 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    |   |     `-ParenExpr 0x5590ecef24a0 <col:19, col:21> 'StkId':'TValue *'
    |   |       `-BinaryOperator 0x5590ecef2478 <lvm.c:286:67, col:71> 'StkId':'TValue *' '-'
    |   |         |-ImplicitCastExpr 0x5590ecef2460 <col:67> 'StkId':'TValue *' <LValueToRValue>
    |   |         | `-DeclRefExpr 0x5590ecef2418 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    |   |         `-IntegerLiteral 0x5590ecef2440 <col:71> 'int' 1
    |   `-IntegerLiteral 0x5590ecef2518 <./lua.h:78:22> 'int' 4
    `-ParenExpr 0x5590ecef2730 <./lvm.h:16:53, col:73> 'int'
      `-CallExpr 0x5590ecef26e0 <col:54, col:72> 'int'
        |-ImplicitCastExpr 0x5590ecef26c8 <col:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5590ecef2598 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
        |-ImplicitCastExpr 0x5590ecef2718 <lvm.c:286:64> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef25c0 <col:64> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
        `-BinaryOperator 0x5590ecef2648 <col:67, col:71> 'StkId':'TValue *' '-'
          |-ImplicitCastExpr 0x5590ecef2630 <col:67> 'StkId':'TValue *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecef25e8 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
          `-IntegerLiteral 0x5590ecef2610 <col:71> 'int' 1
!([B22.1])
   T: if [B25.2] || [B22.2]
   Preds (2): B23 B24
   Succs (2): B21 B19

 [B23]
   1: DeclRefExpr 0x5590ecef2598 <./lvm.h:16:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
luaV_tostring
   2: ImplicitCastExpr 0x5590ecef26c8 <./lvm.h:16:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef2598 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
[B23.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, StkId))
   3: DeclRefExpr 0x5590ecef25c0 <lvm.c:286:64> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef2718 <lvm.c:286:64> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef25c0 <col:64> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B23.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef25e8 <lvm.c:286:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   6: ImplicitCastExpr 0x5590ecef2630 <lvm.c:286:67> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef25e8 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B23.5] (ImplicitCastExpr, LValueToRValue, StkId)
   7: IntegerLiteral 0x5590ecef2610 <lvm.c:286:71> 'int' 1
1
   8: BinaryOperator 0x5590ecef2648 <lvm.c:286:67, col:71> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2630 <col:67> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef25e8 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2610 <col:71> 'int' 1
[B23.6] - [B23.7]
   9: CallExpr 0x5590ecef26e0 <./lvm.h:16:54, col:72> 'int'
|-ImplicitCastExpr 0x5590ecef26c8 <col:54> 'int (*)(lua_State *, StkId)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef2598 <col:54> 'int (lua_State *, StkId)' Function 0x5590eced0b98 'luaV_tostring' 'int (lua_State *, StkId)'
|-ImplicitCastExpr 0x5590ecef2718 <lvm.c:286:64> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef25c0 <col:64> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
`-BinaryOperator 0x5590ecef2648 <col:67, col:71> 'StkId':'TValue *' '-'
  |-ImplicitCastExpr 0x5590ecef2630 <col:67> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef25e8 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
  `-IntegerLiteral 0x5590ecef2610 <col:71> 'int' 1
[B23.2]([B23.4], [B23.8])
   Preds (1): B24
   Succs (1): B22

 [B24]
   1: DeclRefExpr 0x5590ecef2418 <lvm.c:286:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef2460 <lvm.c:286:67> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2418 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B24.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: IntegerLiteral 0x5590ecef2440 <lvm.c:286:71> 'int' 1
1
   4: BinaryOperator 0x5590ecef2478 <lvm.c:286:67, col:71> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2460 <col:67> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2418 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2440 <col:71> 'int' 1
[B24.2] - [B24.3]
   5: MemberExpr 0x5590ecef24c0 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ParenExpr 0x5590ecef24a0 <col:19, col:21> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef2478 <lvm.c:286:67, col:71> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef2460 <col:67> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef2418 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-IntegerLiteral 0x5590ecef2440 <col:71> 'int' 1
([B24.4])->tt
   6: ImplicitCastExpr 0x5590ecef2538 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef24f8 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecef24c0 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ParenExpr 0x5590ecef24a0 <col:19, col:21> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef2478 <lvm.c:286:67, col:71> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef2460 <col:67> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef2418 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-IntegerLiteral 0x5590ecef2440 <col:71> 'int' 1
([B24.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5590ecef2518 <./lua.h:78:22> 'int' 4
4
   8: BinaryOperator 0x5590ecef2550 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x5590ecef2538 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef24f8 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecef24c0 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ParenExpr 0x5590ecef24a0 <col:19, col:21> 'StkId':'TValue *'
|       `-BinaryOperator 0x5590ecef2478 <lvm.c:286:67, col:71> 'StkId':'TValue *' '-'
|         |-ImplicitCastExpr 0x5590ecef2460 <col:67> 'StkId':'TValue *' <LValueToRValue>
|         | `-DeclRefExpr 0x5590ecef2418 <col:67> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|         `-IntegerLiteral 0x5590ecef2440 <col:71> 'int' 1
`-IntegerLiteral 0x5590ecef2518 <./lua.h:78:22> 'int' 4
[B24.6] == [B24.7]
   T: ([B24.8]) || ...
   Preds (1): B25
   Succs (2): B22 B23

 [B25]
   1: BinaryOperator 0x5590ecef23b0 <./lobject.h:81:23, line:80:47> 'int' '||'
|-ParenExpr 0x5590ecef2210 <line:81:23, col:47> 'int'
| `-BinaryOperator 0x5590ecef21e8 <line:90:18, ./lua.h:78:22> 'int' '=='
|   |-ImplicitCastExpr 0x5590ecef21d0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
|   | `-ParenExpr 0x5590ecef2190 <col:18, col:26> 'int' lvalue
|   |   `-MemberExpr 0x5590ecef2158 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|   |     `-ParenExpr 0x5590ecef2138 <col:19, col:21> 'StkId':'TValue *'
|   |       `-BinaryOperator 0x5590ecef2110 <lvm.c:286:22, col:26> 'StkId':'TValue *' '-'
|   |         |-ImplicitCastExpr 0x5590ecef1cc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x5590ecef1c78 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|   |         `-IntegerLiteral 0x5590ecef1ca0 <col:26> 'int' 2
|   `-IntegerLiteral 0x5590ecef21b0 <./lua.h:78:22> 'int' 4
`-ParenExpr 0x5590ecef2390 <./lobject.h:80:23, col:47> 'int'
  `-BinaryOperator 0x5590ecef2368 <line:90:18, ./lua.h:77:22> 'int' '=='
    |-ImplicitCastExpr 0x5590ecef2350 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x5590ecef2310 <col:18, col:26> 'int' lvalue
    |   `-MemberExpr 0x5590ecef22d8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    |     `-ParenExpr 0x5590ecef22b8 <col:19, col:21> 'StkId':'TValue *'
    |       `-BinaryOperator 0x5590ecef2290 <lvm.c:286:43, col:47> 'StkId':'TValue *' '-'
    |         |-ImplicitCastExpr 0x5590ecef2278 <col:43> 'StkId':'TValue *' <LValueToRValue>
    |         | `-DeclRefExpr 0x5590ecef2230 <col:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    |         `-IntegerLiteral 0x5590ecef2258 <col:47> 'int' 2
    `-IntegerLiteral 0x5590ecef2330 <./lua.h:77:22> 'int' 3
([B27.20]) || ([B26.8])
   2: UnaryOperator 0x5590ecef23f8 <lvm.c:286:9, col:49> 'int' prefix '!'
`-ParenExpr 0x5590ecef23d8 <col:10, col:49> 'int'
  `-BinaryOperator 0x5590ecef23b0 <./lobject.h:81:23, line:80:47> 'int' '||'
    |-ParenExpr 0x5590ecef2210 <line:81:23, col:47> 'int'
    | `-BinaryOperator 0x5590ecef21e8 <line:90:18, ./lua.h:78:22> 'int' '=='
    |   |-ImplicitCastExpr 0x5590ecef21d0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   | `-ParenExpr 0x5590ecef2190 <col:18, col:26> 'int' lvalue
    |   |   `-MemberExpr 0x5590ecef2158 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    |   |     `-ParenExpr 0x5590ecef2138 <col:19, col:21> 'StkId':'TValue *'
    |   |       `-BinaryOperator 0x5590ecef2110 <lvm.c:286:22, col:26> 'StkId':'TValue *' '-'
    |   |         |-ImplicitCastExpr 0x5590ecef1cc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
    |   |         | `-DeclRefExpr 0x5590ecef1c78 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    |   |         `-IntegerLiteral 0x5590ecef1ca0 <col:26> 'int' 2
    |   `-IntegerLiteral 0x5590ecef21b0 <./lua.h:78:22> 'int' 4
    `-ParenExpr 0x5590ecef2390 <./lobject.h:80:23, col:47> 'int'
      `-BinaryOperator 0x5590ecef2368 <line:90:18, ./lua.h:77:22> 'int' '=='
        |-ImplicitCastExpr 0x5590ecef2350 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
        | `-ParenExpr 0x5590ecef2310 <col:18, col:26> 'int' lvalue
        |   `-MemberExpr 0x5590ecef22d8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
        |     `-ParenExpr 0x5590ecef22b8 <col:19, col:21> 'StkId':'TValue *'
        |       `-BinaryOperator 0x5590ecef2290 <lvm.c:286:43, col:47> 'StkId':'TValue *' '-'
        |         |-ImplicitCastExpr 0x5590ecef2278 <col:43> 'StkId':'TValue *' <LValueToRValue>
        |         | `-DeclRefExpr 0x5590ecef2230 <col:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        |         `-IntegerLiteral 0x5590ecef2258 <col:47> 'int' 2
        `-IntegerLiteral 0x5590ecef2330 <./lua.h:77:22> 'int' 3
!([B25.1])
   T: [B25.2] || ...
   Preds (2): B26 B27
   Succs (2): B21 B24

 [B26]
   1: DeclRefExpr 0x5590ecef2230 <lvm.c:286:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
   2: ImplicitCastExpr 0x5590ecef2278 <lvm.c:286:43> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef2230 <col:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B26.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: IntegerLiteral 0x5590ecef2258 <lvm.c:286:47> 'int' 2
2
   4: BinaryOperator 0x5590ecef2290 <lvm.c:286:43, col:47> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef2278 <col:43> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef2230 <col:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef2258 <col:47> 'int' 2
[B26.2] - [B26.3]
   5: MemberExpr 0x5590ecef22d8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ParenExpr 0x5590ecef22b8 <col:19, col:21> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef2290 <lvm.c:286:43, col:47> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef2278 <col:43> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef2230 <col:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-IntegerLiteral 0x5590ecef2258 <col:47> 'int' 2
([B26.4])->tt
   6: ImplicitCastExpr 0x5590ecef2350 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef2310 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecef22d8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ParenExpr 0x5590ecef22b8 <col:19, col:21> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef2290 <lvm.c:286:43, col:47> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef2278 <col:43> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef2230 <col:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-IntegerLiteral 0x5590ecef2258 <col:47> 'int' 2
([B26.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5590ecef2330 <./lua.h:77:22> 'int' 3
3
   8: BinaryOperator 0x5590ecef2368 <./lobject.h:90:18, ./lua.h:77:22> 'int' '=='
|-ImplicitCastExpr 0x5590ecef2350 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef2310 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecef22d8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ParenExpr 0x5590ecef22b8 <col:19, col:21> 'StkId':'TValue *'
|       `-BinaryOperator 0x5590ecef2290 <lvm.c:286:43, col:47> 'StkId':'TValue *' '-'
|         |-ImplicitCastExpr 0x5590ecef2278 <col:43> 'StkId':'TValue *' <LValueToRValue>
|         | `-DeclRefExpr 0x5590ecef2230 <col:43> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|         `-IntegerLiteral 0x5590ecef2258 <col:47> 'int' 2
`-IntegerLiteral 0x5590ecef2330 <./lua.h:77:22> 'int' 3
[B26.6] == [B26.7]
   Preds (1): B27
   Succs (1): B25

 [B27]
   1: DeclRefExpr 0x5590ecef1a70 <lvm.c:284:17> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5590ecef1a98 <lvm.c:284:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef1a70 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B27.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5590ecef1ab0 <lvm.c:284:17, col:20> 'StkId':'TValue *' lvalue ->base 0x5590ecea0040
`-ImplicitCastExpr 0x5590ecef1a98 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef1a70 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B27.2]->base
   4: ImplicitCastExpr 0x5590ecef1b10 <lvm.c:284:17, col:20> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecef1ab0 <col:17, col:20> 'StkId':'TValue *' lvalue ->base 0x5590ecea0040
  `-ImplicitCastExpr 0x5590ecef1a98 <col:17> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef1a70 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
[B27.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclRefExpr 0x5590ecef1ae8 <lvm.c:284:27> 'int' lvalue ParmVar 0x5590ecef1868 'last' 'int'
last
   6: ImplicitCastExpr 0x5590ecef1b28 <lvm.c:284:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecef1ae8 <col:27> 'int' lvalue ParmVar 0x5590ecef1868 'last' 'int'
[B27.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x5590ecef1b40 <lvm.c:284:17, col:27> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5590ecef1b10 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590ecef1ab0 <col:17, col:20> 'StkId':'TValue *' lvalue ->base 0x5590ecea0040
|   `-ImplicitCastExpr 0x5590ecef1a98 <col:17> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef1a70 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecef1b28 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef1ae8 <col:27> 'int' lvalue ParmVar 0x5590ecef1868 'last' 'int'
[B27.4] + [B27.6]
   8: IntegerLiteral 0x5590ecef1b68 <lvm.c:284:34> 'int' 1
1
   9: BinaryOperator 0x5590ecef1b88 <lvm.c:284:17, col:34> 'StkId':'TValue *' '+'
|-BinaryOperator 0x5590ecef1b40 <col:17, col:27> 'StkId':'TValue *' '+'
| |-ImplicitCastExpr 0x5590ecef1b10 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
| | `-MemberExpr 0x5590ecef1ab0 <col:17, col:20> 'StkId':'TValue *' lvalue ->base 0x5590ecea0040
| |   `-ImplicitCastExpr 0x5590ecef1a98 <col:17> 'lua_State *' <LValueToRValue>
| |     `-DeclRefExpr 0x5590ecef1a70 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
| `-ImplicitCastExpr 0x5590ecef1b28 <col:27> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef1ae8 <col:27> 'int' lvalue ParmVar 0x5590ecef1868 'last' 'int'
`-IntegerLiteral 0x5590ecef1b68 <col:34> 'int' 1
[B27.7] + [B27.8]
  10: DeclStmt 0x5590ecef1bb0 <lvm.c:284:5, col:35>col:11
`-VarDecl 0x5590ecef1a10 <col:5, col:34> col:11 used top 'StkId':'TValue *' cinit
  `-BinaryOperator 0x5590ecef1b88 <col:17, col:34> 'StkId':'TValue *' '+'
    |-BinaryOperator 0x5590ecef1b40 <col:17, col:27> 'StkId':'TValue *' '+'
    | |-ImplicitCastExpr 0x5590ecef1b10 <col:17, col:20> 'StkId':'TValue *' <LValueToRValue>
    | | `-MemberExpr 0x5590ecef1ab0 <col:17, col:20> 'StkId':'TValue *' lvalue ->base 0x5590ecea0040
    | |   `-ImplicitCastExpr 0x5590ecef1a98 <col:17> 'lua_State *' <LValueToRValue>
    | |     `-DeclRefExpr 0x5590ecef1a70 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecef1778 'L' 'lua_State *'
    | `-ImplicitCastExpr 0x5590ecef1b28 <col:27> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5590ecef1ae8 <col:27> 'int' lvalue ParmVar 0x5590ecef1868 'last' 'int'
    `-IntegerLiteral 0x5590ecef1b68 <col:34> 'int' 1
StkId top = L->base + last + 1;
  11: IntegerLiteral 0x5590ecef1c40 <lvm.c:285:13> 'int' 2
2
  12: DeclStmt 0x5590ecef1c60 <lvm.c:285:5, col:14>col:9
`-VarDecl 0x5590ecef1be0 <col:5, col:13> col:9 used n 'int' cinit
  `-IntegerLiteral 0x5590ecef1c40 <col:13> 'int' 2
int n = 2;
  13: DeclRefExpr 0x5590ecef1c78 <lvm.c:286:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
top
  14: ImplicitCastExpr 0x5590ecef1cc0 <lvm.c:286:22> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef1c78 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
[B27.13] (ImplicitCastExpr, LValueToRValue, StkId)
  15: IntegerLiteral 0x5590ecef1ca0 <lvm.c:286:26> 'int' 2
2
  16: BinaryOperator 0x5590ecef2110 <lvm.c:286:22, col:26> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecef1cc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef1c78 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecef1ca0 <col:26> 'int' 2
[B27.14] - [B27.15]
  17: MemberExpr 0x5590ecef2158 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ParenExpr 0x5590ecef2138 <col:19, col:21> 'StkId':'TValue *'
  `-BinaryOperator 0x5590ecef2110 <lvm.c:286:22, col:26> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x5590ecef1cc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecef1c78 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
    `-IntegerLiteral 0x5590ecef1ca0 <col:26> 'int' 2
([B27.16])->tt
  18: ImplicitCastExpr 0x5590ecef21d0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef2190 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecef2158 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ParenExpr 0x5590ecef2138 <col:19, col:21> 'StkId':'TValue *'
      `-BinaryOperator 0x5590ecef2110 <lvm.c:286:22, col:26> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x5590ecef1cc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
        | `-DeclRefExpr 0x5590ecef1c78 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
        `-IntegerLiteral 0x5590ecef1ca0 <col:26> 'int' 2
([B27.17]) (ImplicitCastExpr, LValueToRValue, int)
  19: IntegerLiteral 0x5590ecef21b0 <./lua.h:78:22> 'int' 4
4
  20: BinaryOperator 0x5590ecef21e8 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x5590ecef21d0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef2190 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecef2158 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ParenExpr 0x5590ecef2138 <col:19, col:21> 'StkId':'TValue *'
|       `-BinaryOperator 0x5590ecef2110 <lvm.c:286:22, col:26> 'StkId':'TValue *' '-'
|         |-ImplicitCastExpr 0x5590ecef1cc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
|         | `-DeclRefExpr 0x5590ecef1c78 <col:22> 'StkId':'TValue *' lvalue Var 0x5590ecef1a10 'top' 'StkId':'TValue *'
|         `-IntegerLiteral 0x5590ecef1ca0 <col:26> 'int' 2
`-IntegerLiteral 0x5590ecef21b0 <./lua.h:78:22> 'int' 4
[B27.18] == [B27.19]
   T: ([B27.20]) || ...
   Preds (2): B28 B29
   Succs (2): B25 B26

 [B28]
   Preds (1): B1
   Succs (1): B27

 [B0 (EXIT)]
   Preds (1): B1
