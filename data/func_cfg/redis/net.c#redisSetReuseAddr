static int redisSetReuseAddr(redisContext *c)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: IntegerLiteral 0x55f752fd2e70 <./read.h:38:18> 'int' 0
0
   2: ReturnStmt 0x55f752fd2e90 <net.c:113:5, ./read.h:38:18>
`-IntegerLiteral 0x55f752fd2e70 <col:18> 'int' 0
return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55f752fd2b20 <net.c:109:9> 'void (redisContext *, int, const char *)' Function 0x55f752fd14e0 '__redisSetErrorFromErrno' 'void (redisContext *, int, const char *)'
__redisSetErrorFromErrno
   2: ImplicitCastExpr 0x55f752fd2c10 <net.c:109:9> 'void (*)(redisContext *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f752fd2b20 <col:9> 'void (redisContext *, int, const char *)' Function 0x55f752fd14e0 '__redisSetErrorFromErrno' 'void (redisContext *, int, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(redisContext *, int, const char *))
   3: DeclRefExpr 0x55f752fd2b48 <net.c:109:34> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x55f752fd2c68 <net.c:109:34> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd2b48 <col:34> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
[B2.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: IntegerLiteral 0x55f752fd2b70 <./read.h:44:22> 'int' 1
1
   6: IntegerLiteral 0x55f752fd2b90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x55f752fd2bc8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55f752fd2b90 <col:24> 'int' 0
(void *)[B2.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x55f752fd2c80 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x55f752fd2bf0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55f752fd2bc8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55f752fd2b90 <col:24> 'int' 0
([B2.7]) (ImplicitCastExpr, NullToPointer, const char *)
   9: CallExpr 0x55f752fd2c28 <net.c:109:9, col:53> 'void'
|-ImplicitCastExpr 0x55f752fd2c10 <col:9> 'void (*)(redisContext *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f752fd2b20 <col:9> 'void (redisContext *, int, const char *)' Function 0x55f752fd14e0 '__redisSetErrorFromErrno' 'void (redisContext *, int, const char *)'
|-ImplicitCastExpr 0x55f752fd2c68 <col:34> 'redisContext *' <LValueToRValue>
| `-DeclRefExpr 0x55f752fd2b48 <col:34> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
|-IntegerLiteral 0x55f752fd2b70 <./read.h:44:22> 'int' 1
`-ImplicitCastExpr 0x55f752fd2c80 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x55f752fd2bf0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55f752fd2bc8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55f752fd2b90 <col:24> 'int' 0
[B2.2]([B2.4], [B2.5], [B2.8])
  10: DeclRefExpr 0x55f752fd2c98 <net.c:110:9> 'void (redisContext *)' Function 0x55f752fce8c0 'redisNetClose' 'void (redisContext *)'
redisNetClose
  11: ImplicitCastExpr 0x55f752fd2d48 <net.c:110:9> 'void (*)(redisContext *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f752fd2c98 <col:9> 'void (redisContext *)' Function 0x55f752fce8c0 'redisNetClose' 'void (redisContext *)'
[B2.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(redisContext *))
  12: DeclRefExpr 0x55f752fd2cc0 <net.c:110:23> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
c
  13: ImplicitCastExpr 0x55f752fd2da0 <net.c:110:23> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd2cc0 <col:23> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
[B2.12] (ImplicitCastExpr, LValueToRValue, redisContext *)
  14: CallExpr 0x55f752fd2d60 <net.c:110:9, col:24> 'void'
|-ImplicitCastExpr 0x55f752fd2d48 <col:9> 'void (*)(redisContext *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f752fd2c98 <col:9> 'void (redisContext *)' Function 0x55f752fce8c0 'redisNetClose' 'void (redisContext *)'
`-ImplicitCastExpr 0x55f752fd2da0 <col:23> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd2cc0 <col:23> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
[B2.11]([B2.13])
  15: IntegerLiteral 0x55f752fd2db8 <./read.h:37:20> 'int' 1
1
  16: UnaryOperator 0x55f752fd2dd8 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd2db8 <col:20> 'int' 1
-[B2.15]
  17: ReturnStmt 0x55f752fd2df8 <net.c:111:9, ./read.h:37:20>
`-UnaryOperator 0x55f752fd2dd8 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd2db8 <col:20> 'int' 1
return [B2.16];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: IntegerLiteral 0x55f752fd27e0 <net.c:107:14> 'int' 1
1
   2: DeclStmt 0x55f752fd2800 <net.c:107:5, col:15>col:9
`-VarDecl 0x55f752fd2780 <col:5, col:14> col:9 used on 'int' cinit
  `-IntegerLiteral 0x55f752fd27e0 <col:14> 'int' 1
int on = 1;
   3: DeclRefExpr 0x55f752fd2818 <net.c:108:9> 'int (int, int, int, const void *, socklen_t)' Function 0x55f752f8f9d8 'setsockopt' 'int (int, int, int, const void *, socklen_t)'
setsockopt
   4: ImplicitCastExpr 0x55f752fd2a08 <net.c:108:9> 'int (*)(int, int, int, const void *, socklen_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f752fd2818 <col:9> 'int (int, int, int, const void *, socklen_t)' Function 0x55f752f8f9d8 'setsockopt' 'int (int, int, int, const void *, socklen_t)'
[B3.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int, int, int, const void *, socklen_t))
   5: DeclRefExpr 0x55f752fd2840 <net.c:108:20> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
c
   6: ImplicitCastExpr 0x55f752fd2868 <net.c:108:20> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd2840 <col:20> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
[B3.5] (ImplicitCastExpr, LValueToRValue, redisContext *)
   7: MemberExpr 0x55f752fd2880 <net.c:108:20, col:23> 'redisFD':'int' lvalue ->fd 0x55f752f1fe58
`-ImplicitCastExpr 0x55f752fd2868 <col:20> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd2840 <col:20> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
[B3.6]->fd
   8: ImplicitCastExpr 0x55f752fd2a70 <net.c:108:20, col:23> 'redisFD':'int' <LValueToRValue>
`-MemberExpr 0x55f752fd2880 <col:20, col:23> 'redisFD':'int' lvalue ->fd 0x55f752f1fe58
  `-ImplicitCastExpr 0x55f752fd2868 <col:20> 'redisContext *' <LValueToRValue>
    `-DeclRefExpr 0x55f752fd2840 <col:20> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
[B3.7] (ImplicitCastExpr, LValueToRValue, redisFD)
   9: IntegerLiteral 0x55f752fd28b8 </usr/include/x86_64-linux-gnu/bits/socket-constants.h:23:20> 'int' 1
1
  10: IntegerLiteral 0x55f752fd28d8 </usr/include/x86_64-linux-gnu/bits/socket-constants.h:34:22> 'int' 2
2
  11: DeclRefExpr 0x55f752fd28f8 <net.c:108:54> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
on
  12: UnaryOperator 0x55f752fd2920 <net.c:108:53, col:54> 'int *' prefix '&'
`-DeclRefExpr 0x55f752fd28f8 <col:54> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
&[B3.11]
  13: ImplicitCastExpr 0x55f752fd2a88 <net.c:108:53, col:54> 'const void *' <BitCast>
`-UnaryOperator 0x55f752fd2920 <col:53, col:54> 'int *' prefix '&'
  `-DeclRefExpr 0x55f752fd28f8 <col:54> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
[B3.12] (ImplicitCastExpr, BitCast, const void *)
  14: UnaryExprOrTypeTraitExpr 0x55f752fd2988 <net.c:108:58, col:67> 'unsigned long' sizeof
`-ParenExpr 0x55f752fd2968 <col:64, col:67> 'int' lvalue
  `-DeclRefExpr 0x55f752fd2940 <col:65> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
sizeof (on)
  15: ImplicitCastExpr 0x55f752fd2aa0 <net.c:108:58, col:67> 'socklen_t':'unsigned int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x55f752fd2988 <col:58, col:67> 'unsigned long' sizeof
  `-ParenExpr 0x55f752fd2968 <col:64, col:67> 'int' lvalue
    `-DeclRefExpr 0x55f752fd2940 <col:65> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
[B3.14] (ImplicitCastExpr, IntegralCast, socklen_t)
  16: CallExpr 0x55f752fd2a20 <net.c:108:9, col:68> 'int'
|-ImplicitCastExpr 0x55f752fd2a08 <col:9> 'int (*)(int, int, int, const void *, socklen_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f752fd2818 <col:9> 'int (int, int, int, const void *, socklen_t)' Function 0x55f752f8f9d8 'setsockopt' 'int (int, int, int, const void *, socklen_t)'
|-ImplicitCastExpr 0x55f752fd2a70 <col:20, col:23> 'redisFD':'int' <LValueToRValue>
| `-MemberExpr 0x55f752fd2880 <col:20, col:23> 'redisFD':'int' lvalue ->fd 0x55f752f1fe58
|   `-ImplicitCastExpr 0x55f752fd2868 <col:20> 'redisContext *' <LValueToRValue>
|     `-DeclRefExpr 0x55f752fd2840 <col:20> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
|-IntegerLiteral 0x55f752fd28b8 </usr/include/x86_64-linux-gnu/bits/socket-constants.h:23:20> 'int' 1
|-IntegerLiteral 0x55f752fd28d8 <line:34:22> 'int' 2
|-ImplicitCastExpr 0x55f752fd2a88 <net.c:108:53, col:54> 'const void *' <BitCast>
| `-UnaryOperator 0x55f752fd2920 <col:53, col:54> 'int *' prefix '&'
|   `-DeclRefExpr 0x55f752fd28f8 <col:54> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
`-ImplicitCastExpr 0x55f752fd2aa0 <col:58, col:67> 'socklen_t':'unsigned int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x55f752fd2988 <col:58, col:67> 'unsigned long' sizeof
    `-ParenExpr 0x55f752fd2968 <col:64, col:67> 'int' lvalue
      `-DeclRefExpr 0x55f752fd2940 <col:65> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
[B3.4]([B3.8], [B3.9], [B3.10], [B3.13], [B3.15])
  17: IntegerLiteral 0x55f752fd2ab8 <net.c:108:74> 'int' 1
1
  18: UnaryOperator 0x55f752fd2ad8 <net.c:108:73, col:74> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd2ab8 <col:74> 'int' 1
-[B3.17]
  19: BinaryOperator 0x55f752fd2af8 <net.c:108:9, col:74> 'int' '=='
|-CallExpr 0x55f752fd2a20 <col:9, col:68> 'int'
| |-ImplicitCastExpr 0x55f752fd2a08 <col:9> 'int (*)(int, int, int, const void *, socklen_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55f752fd2818 <col:9> 'int (int, int, int, const void *, socklen_t)' Function 0x55f752f8f9d8 'setsockopt' 'int (int, int, int, const void *, socklen_t)'
| |-ImplicitCastExpr 0x55f752fd2a70 <col:20, col:23> 'redisFD':'int' <LValueToRValue>
| | `-MemberExpr 0x55f752fd2880 <col:20, col:23> 'redisFD':'int' lvalue ->fd 0x55f752f1fe58
| |   `-ImplicitCastExpr 0x55f752fd2868 <col:20> 'redisContext *' <LValueToRValue>
| |     `-DeclRefExpr 0x55f752fd2840 <col:20> 'redisContext *' lvalue ParmVar 0x55f752fd2630 'c' 'redisContext *'
| |-IntegerLiteral 0x55f752fd28b8 </usr/include/x86_64-linux-gnu/bits/socket-constants.h:23:20> 'int' 1
| |-IntegerLiteral 0x55f752fd28d8 <line:34:22> 'int' 2
| |-ImplicitCastExpr 0x55f752fd2a88 <net.c:108:53, col:54> 'const void *' <BitCast>
| | `-UnaryOperator 0x55f752fd2920 <col:53, col:54> 'int *' prefix '&'
| |   `-DeclRefExpr 0x55f752fd28f8 <col:54> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
| `-ImplicitCastExpr 0x55f752fd2aa0 <col:58, col:67> 'socklen_t':'unsigned int' <IntegralCast>
|   `-UnaryExprOrTypeTraitExpr 0x55f752fd2988 <col:58, col:67> 'unsigned long' sizeof
|     `-ParenExpr 0x55f752fd2968 <col:64, col:67> 'int' lvalue
|       `-DeclRefExpr 0x55f752fd2940 <col:65> 'int' lvalue Var 0x55f752fd2780 'on' 'int'
`-UnaryOperator 0x55f752fd2ad8 <col:73, col:74> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd2ab8 <col:74> 'int' 1
[B3.16] == [B3.18]
   T: if [B3.19]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
