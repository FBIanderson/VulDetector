int sdsull2str(char *s, unsigned long long v)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: DeclRefExpr 0x55e83d10e600 <sds.c:489:12> 'size_t':'unsigned long' lvalue Var 0x55e83d10dbe0 'l' 'size_t':'unsigned long'
l
   2: ImplicitCastExpr 0x55e83d10e628 <sds.c:489:12> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e600 <col:12> 'size_t':'unsigned long' lvalue Var 0x55e83d10dbe0 'l' 'size_t':'unsigned long'
[B1.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: ImplicitCastExpr 0x55e83d10e640 <sds.c:489:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d10e628 <col:12> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e600 <col:12> 'size_t':'unsigned long' lvalue Var 0x55e83d10dbe0 'l' 'size_t':'unsigned long'
[B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: ReturnStmt 0x55e83d10e658 <sds.c:489:5, col:12>
`-ImplicitCastExpr 0x55e83d10e640 <col:12> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d10e628 <col:12> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d10e600 <col:12> 'size_t':'unsigned long' lvalue Var 0x55e83d10dbe0 'l' 'size_t':'unsigned long'
return [B1.3];
   Preds (1): B4
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: DeclRefExpr 0x55e83d10e2b0 <sds.c:483:16> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
s
   2: ImplicitCastExpr 0x55e83d10e2d8 <sds.c:483:16> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e2b0 <col:16> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B3.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: UnaryOperator 0x55e83d10e2f0 <sds.c:483:15, col:16> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d10e2d8 <col:16> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e2b0 <col:16> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
*[B3.2]
   4: ImplicitCastExpr 0x55e83d10e310 <sds.c:483:15, col:16> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d10e2f0 <col:15, col:16> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d10e2d8 <col:16> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d10e2b0 <col:16> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, char)
   5: DeclRefExpr 0x55e83d10e278 <sds.c:483:9> 'char' lvalue Var 0x55e83d10db40 'aux' 'char'
aux
   6: BinaryOperator 0x55e83d10e328 <sds.c:483:9, col:16> 'char' '='
|-DeclRefExpr 0x55e83d10e278 <col:9> 'char' lvalue Var 0x55e83d10db40 'aux' 'char'
`-ImplicitCastExpr 0x55e83d10e310 <col:15, col:16> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d10e2f0 <col:15, col:16> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d10e2d8 <col:16> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d10e2b0 <col:16> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B3.5] = [B3.4]
   7: DeclRefExpr 0x55e83d10e3b0 <sds.c:484:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
   8: ImplicitCastExpr 0x55e83d10e3d8 <sds.c:484:15> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e3b0 <col:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B3.7] (ImplicitCastExpr, LValueToRValue, char *)
   9: UnaryOperator 0x55e83d10e3f0 <sds.c:484:14, col:15> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d10e3d8 <col:15> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e3b0 <col:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
*[B3.8]
  10: ImplicitCastExpr 0x55e83d10e410 <sds.c:484:14, col:15> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d10e3f0 <col:14, col:15> 'char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d10e3d8 <col:15> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d10e3b0 <col:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B3.9] (ImplicitCastExpr, LValueToRValue, char)
  11: DeclRefExpr 0x55e83d10e350 <sds.c:484:10> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
s
  12: ImplicitCastExpr 0x55e83d10e378 <sds.c:484:10> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e350 <col:10> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B3.11] (ImplicitCastExpr, LValueToRValue, char *)
  13: UnaryOperator 0x55e83d10e390 <sds.c:484:9, col:10> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d10e378 <col:10> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e350 <col:10> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
*[B3.12]
  14: BinaryOperator 0x55e83d10e428 <sds.c:484:9, col:15> 'char' '='
|-UnaryOperator 0x55e83d10e390 <col:9, col:10> 'char' lvalue prefix '*'
| `-ImplicitCastExpr 0x55e83d10e378 <col:10> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d10e350 <col:10> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
`-ImplicitCastExpr 0x55e83d10e410 <col:14, col:15> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d10e3f0 <col:14, col:15> 'char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d10e3d8 <col:15> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d10e3b0 <col:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B3.13] = [B3.10]
  15: DeclRefExpr 0x55e83d10e4b0 <sds.c:485:14> 'char' lvalue Var 0x55e83d10db40 'aux' 'char'
aux
  16: ImplicitCastExpr 0x55e83d10e4d8 <sds.c:485:14> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e4b0 <col:14> 'char' lvalue Var 0x55e83d10db40 'aux' 'char'
[B3.15] (ImplicitCastExpr, LValueToRValue, char)
  17: DeclRefExpr 0x55e83d10e450 <sds.c:485:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
  18: ImplicitCastExpr 0x55e83d10e478 <sds.c:485:10> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e450 <col:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B3.17] (ImplicitCastExpr, LValueToRValue, char *)
  19: UnaryOperator 0x55e83d10e490 <sds.c:485:9, col:10> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d10e478 <col:10> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e450 <col:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
*[B3.18]
  20: BinaryOperator 0x55e83d10e4f0 <sds.c:485:9, col:14> 'char' '='
|-UnaryOperator 0x55e83d10e490 <col:9, col:10> 'char' lvalue prefix '*'
| `-ImplicitCastExpr 0x55e83d10e478 <col:10> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d10e450 <col:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
`-ImplicitCastExpr 0x55e83d10e4d8 <col:14> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e4b0 <col:14> 'char' lvalue Var 0x55e83d10db40 'aux' 'char'
[B3.19] = [B3.16]
  21: DeclRefExpr 0x55e83d10e518 <sds.c:486:9> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
s
  22: UnaryOperator 0x55e83d10e540 <sds.c:486:9, col:10> 'char *' postfix '++'
`-DeclRefExpr 0x55e83d10e518 <col:9> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B3.21]++
  23: DeclRefExpr 0x55e83d10e560 <sds.c:487:9> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
  24: UnaryOperator 0x55e83d10e588 <sds.c:487:9, col:10> 'char *' postfix '--'
`-DeclRefExpr 0x55e83d10e560 <col:9> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B3.23]--
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55e83d10e1d0 <sds.c:482:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
s
   2: ImplicitCastExpr 0x55e83d10e220 <sds.c:482:11> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e1d0 <col:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B4.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x55e83d10e1f8 <sds.c:482:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
   4: ImplicitCastExpr 0x55e83d10e238 <sds.c:482:15> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e1f8 <col:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: BinaryOperator 0x55e83d10e250 <sds.c:482:11, col:15> 'int' '<'
|-ImplicitCastExpr 0x55e83d10e220 <col:11> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d10e1d0 <col:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
`-ImplicitCastExpr 0x55e83d10e238 <col:15> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e1f8 <col:15> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B4.2] < [B4.4]
   T: while [B4.5]
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x55e83d10dfe8 <sds.c:477:9> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
   2: ImplicitCastExpr 0x55e83d10e038 <sds.c:477:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10dfe8 <col:9> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B5.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x55e83d10e010 <sds.c:477:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
s
   4: ImplicitCastExpr 0x55e83d10e050 <sds.c:477:11> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e010 <col:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B5.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: BinaryOperator 0x55e83d10e068 <sds.c:477:9, col:11> 'long' '-'
|-ImplicitCastExpr 0x55e83d10e038 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d10dfe8 <col:9> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
`-ImplicitCastExpr 0x55e83d10e050 <col:11> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e010 <col:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B5.2] - [B5.4]
   6: ImplicitCastExpr 0x55e83d10e090 <sds.c:477:9, col:11> 'size_t':'unsigned long' <IntegralCast>
`-BinaryOperator 0x55e83d10e068 <col:9, col:11> 'long' '-'
  |-ImplicitCastExpr 0x55e83d10e038 <col:9> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d10dfe8 <col:9> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
  `-ImplicitCastExpr 0x55e83d10e050 <col:11> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d10e010 <col:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B5.5] (ImplicitCastExpr, IntegralCast, size_t)
   7: DeclRefExpr 0x55e83d10dfc0 <sds.c:477:5> 'size_t':'unsigned long' lvalue Var 0x55e83d10dbe0 'l' 'size_t':'unsigned long'
l
   8: BinaryOperator 0x55e83d10e0a8 <sds.c:477:5, col:11> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d10dfc0 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d10dbe0 'l' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d10e090 <col:9, col:11> 'size_t':'unsigned long' <IntegralCast>
  `-BinaryOperator 0x55e83d10e068 <col:9, col:11> 'long' '-'
    |-ImplicitCastExpr 0x55e83d10e038 <col:9> 'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d10dfe8 <col:9> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
    `-ImplicitCastExpr 0x55e83d10e050 <col:11> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d10e010 <col:11> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B5.7] = [B5.6]
   9: CharacterLiteral 0x55e83d10e130 <sds.c:478:10> 'int' 0
'\x00'
  10: ImplicitCastExpr 0x55e83d10e148 <sds.c:478:10> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d10e130 <col:10> 'int' 0
[B5.9] (ImplicitCastExpr, IntegralCast, char)
  11: DeclRefExpr 0x55e83d10e0d0 <sds.c:478:6> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
  12: ImplicitCastExpr 0x55e83d10e0f8 <sds.c:478:6> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e0d0 <col:6> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B5.11] (ImplicitCastExpr, LValueToRValue, char *)
  13: UnaryOperator 0x55e83d10e110 <sds.c:478:5, col:6> 'char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d10e0f8 <col:6> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e0d0 <col:6> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
*[B5.12]
  14: BinaryOperator 0x55e83d10e160 <sds.c:478:5, col:10> 'char' '='
|-UnaryOperator 0x55e83d10e110 <col:5, col:6> 'char' lvalue prefix '*'
| `-ImplicitCastExpr 0x55e83d10e0f8 <col:6> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d10e0d0 <col:6> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
`-ImplicitCastExpr 0x55e83d10e148 <col:10> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d10e130 <col:10> 'int' 0
[B5.13] = [B5.10]
  15: DeclRefExpr 0x55e83d10e188 <sds.c:481:5> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
  16: UnaryOperator 0x55e83d10e1b0 <sds.c:481:5, col:6> 'char *' postfix '--'
`-DeclRefExpr 0x55e83d10e188 <col:5> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B5.15]--
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55e83d10df60 <sds.c:474:13> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
v
   2: ImplicitCastExpr 0x55e83d10df88 <sds.c:474:13> 'unsigned long long' <LValueToRValue>
`-DeclRefExpr 0x55e83d10df60 <col:13> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
[B6.1] (ImplicitCastExpr, LValueToRValue, unsigned long long)
   T: do ... while [B6.2]
   Preds (1): B7
   Succs (2): B8 B5

 [B7]
   1: CharacterLiteral 0x55e83d10dd50 <sds.c:472:16> 'int' 48
'0'
   2: ImplicitCastExpr 0x55e83d10de28 <sds.c:472:16> 'unsigned long long' <IntegralCast>
`-CharacterLiteral 0x55e83d10dd50 <col:16> 'int' 48
[B7.1] (ImplicitCastExpr, IntegralCast, unsigned long long)
   3: DeclRefExpr 0x55e83d10dd68 <sds.c:472:21> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
v
   4: ImplicitCastExpr 0x55e83d10ddb0 <sds.c:472:21> 'unsigned long long' <LValueToRValue>
`-DeclRefExpr 0x55e83d10dd68 <col:21> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
[B7.3] (ImplicitCastExpr, LValueToRValue, unsigned long long)
   5: IntegerLiteral 0x55e83d10dd90 <sds.c:472:23> 'int' 10
10
   6: ImplicitCastExpr 0x55e83d10ddc8 <sds.c:472:23> 'unsigned long long' <IntegralCast>
`-IntegerLiteral 0x55e83d10dd90 <col:23> 'int' 10
[B7.5] (ImplicitCastExpr, IntegralCast, unsigned long long)
   7: BinaryOperator 0x55e83d10dde0 <sds.c:472:21, col:23> 'unsigned long long' '%'
|-ImplicitCastExpr 0x55e83d10ddb0 <col:21> 'unsigned long long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d10dd68 <col:21> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
`-ImplicitCastExpr 0x55e83d10ddc8 <col:23> 'unsigned long long' <IntegralCast>
  `-IntegerLiteral 0x55e83d10dd90 <col:23> 'int' 10
[B7.4] % [B7.6]
   8: BinaryOperator 0x55e83d10de40 <sds.c:472:16, col:25> 'unsigned long long' '+'
|-ImplicitCastExpr 0x55e83d10de28 <col:16> 'unsigned long long' <IntegralCast>
| `-CharacterLiteral 0x55e83d10dd50 <col:16> 'int' 48
`-ParenExpr 0x55e83d10de08 <col:20, col:25> 'unsigned long long'
  `-BinaryOperator 0x55e83d10dde0 <col:21, col:23> 'unsigned long long' '%'
    |-ImplicitCastExpr 0x55e83d10ddb0 <col:21> 'unsigned long long' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d10dd68 <col:21> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
    `-ImplicitCastExpr 0x55e83d10ddc8 <col:23> 'unsigned long long' <IntegralCast>
      `-IntegerLiteral 0x55e83d10dd90 <col:23> 'int' 10
[B7.2] + ([B7.7])
   9: ImplicitCastExpr 0x55e83d10de68 <sds.c:472:16, col:25> 'char' <IntegralCast>
`-BinaryOperator 0x55e83d10de40 <col:16, col:25> 'unsigned long long' '+'
  |-ImplicitCastExpr 0x55e83d10de28 <col:16> 'unsigned long long' <IntegralCast>
  | `-CharacterLiteral 0x55e83d10dd50 <col:16> 'int' 48
  `-ParenExpr 0x55e83d10de08 <col:20, col:25> 'unsigned long long'
    `-BinaryOperator 0x55e83d10dde0 <col:21, col:23> 'unsigned long long' '%'
      |-ImplicitCastExpr 0x55e83d10ddb0 <col:21> 'unsigned long long' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d10dd68 <col:21> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
      `-ImplicitCastExpr 0x55e83d10ddc8 <col:23> 'unsigned long long' <IntegralCast>
        `-IntegerLiteral 0x55e83d10dd90 <col:23> 'int' 10
[B7.8] (ImplicitCastExpr, IntegralCast, char)
  10: DeclRefExpr 0x55e83d10dce8 <sds.c:472:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
  11: UnaryOperator 0x55e83d10dd10 <sds.c:472:10, col:11> 'char *' postfix '++'
`-DeclRefExpr 0x55e83d10dce8 <col:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
[B7.10]++
  12: UnaryOperator 0x55e83d10dd30 <sds.c:472:9, col:11> 'char' lvalue prefix '*'
`-UnaryOperator 0x55e83d10dd10 <col:10, col:11> 'char *' postfix '++'
  `-DeclRefExpr 0x55e83d10dce8 <col:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
*[B7.11]
  13: BinaryOperator 0x55e83d10de80 <sds.c:472:9, col:25> 'char' '='
|-UnaryOperator 0x55e83d10dd30 <col:9, col:11> 'char' lvalue prefix '*'
| `-UnaryOperator 0x55e83d10dd10 <col:10, col:11> 'char *' postfix '++'
|   `-DeclRefExpr 0x55e83d10dce8 <col:10> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
`-ImplicitCastExpr 0x55e83d10de68 <col:16, col:25> 'char' <IntegralCast>
  `-BinaryOperator 0x55e83d10de40 <col:16, col:25> 'unsigned long long' '+'
    |-ImplicitCastExpr 0x55e83d10de28 <col:16> 'unsigned long long' <IntegralCast>
    | `-CharacterLiteral 0x55e83d10dd50 <col:16> 'int' 48
    `-ParenExpr 0x55e83d10de08 <col:20, col:25> 'unsigned long long'
      `-BinaryOperator 0x55e83d10dde0 <col:21, col:23> 'unsigned long long' '%'
        |-ImplicitCastExpr 0x55e83d10ddb0 <col:21> 'unsigned long long' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d10dd68 <col:21> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
        `-ImplicitCastExpr 0x55e83d10ddc8 <col:23> 'unsigned long long' <IntegralCast>
          `-IntegerLiteral 0x55e83d10dd90 <col:23> 'int' 10
[B7.12] = [B7.9]
  14: DeclRefExpr 0x55e83d10dea8 <sds.c:473:9> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
v
  15: IntegerLiteral 0x55e83d10ded0 <sds.c:473:14> 'int' 10
10
  16: ImplicitCastExpr 0x55e83d10def0 <sds.c:473:14> 'unsigned long long' <IntegralCast>
`-IntegerLiteral 0x55e83d10ded0 <col:14> 'int' 10
[B7.15] (ImplicitCastExpr, IntegralCast, unsigned long long)
  17: CompoundAssignOperator 0x55e83d10df08 <sds.c:473:9, col:14> 'unsigned long long' '/=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|-DeclRefExpr 0x55e83d10dea8 <col:9> 'unsigned long long' lvalue ParmVar 0x55e83d10d930 'v' 'unsigned long long'
`-ImplicitCastExpr 0x55e83d10def0 <col:14> 'unsigned long long' <IntegralCast>
  `-IntegerLiteral 0x55e83d10ded0 <col:14> 'int' 10
[B7.14] /= [B7.16]
   Preds (2): B8 B9
   Succs (1): B6

 [B8]
   Preds (1): B6
   Succs (1): B7

 [B9]
   1: DeclStmt 0x55e83d134048 <sds.c:465:11>col:11
`-VarDecl 0x55e83d10dad0 <col:5, col:11> col:11 used p 'char *'
char *p;
   2: DeclStmt 0x55e83d134030 <sds.c:465:14>col:14
`-VarDecl 0x55e83d10db40 <col:5, col:14> col:14 used aux 'char'
char aux;
   3: DeclStmt 0x55e83d10dc40 <sds.c:466:5, col:13>col:12
`-VarDecl 0x55e83d10dbe0 <col:5, col:12> col:12 used l 'size_t':'unsigned long'
size_t l;
   4: DeclRefExpr 0x55e83d10dc80 <sds.c:470:9> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
s
   5: ImplicitCastExpr 0x55e83d10dca8 <sds.c:470:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d10dc80 <col:9> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B9.4] (ImplicitCastExpr, LValueToRValue, char *)
   6: DeclRefExpr 0x55e83d10dc58 <sds.c:470:5> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
p
   7: BinaryOperator 0x55e83d10dcc0 <sds.c:470:5, col:9> 'char *' '='
|-DeclRefExpr 0x55e83d10dc58 <col:5> 'char *' lvalue Var 0x55e83d10dad0 'p' 'char *'
`-ImplicitCastExpr 0x55e83d10dca8 <col:9> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10dc80 <col:9> 'char *' lvalue ParmVar 0x55e83d10d8b8 's' 'char *'
[B9.6] = [B9.5]
   Preds (1): B10
   Succs (1): B7

 [B0 (EXIT)]
   Preds (1): B1
