static int str_find_aux(lua_State *L, int find)
 [B23 (ENTRY)]
   Succs (1): B22

 [B1]
   1: DeclRefExpr 0x55fb421e9a68 <lstrlib.c:533:3> 'void (lua_State *)':'void (lua_State *)' Function 0x55fb42192f78 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
   2: ImplicitCastExpr 0x55fb421e9b18 <lstrlib.c:533:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e9a68 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x55fb42192f78 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   3: DeclRefExpr 0x55fb421e9a90 <lstrlib.c:533:15> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421e9b60 <lstrlib.c:533:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e9a90 <col:15> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x55fb421e9b30 <lstrlib.c:533:3, col:16> 'void'
|-ImplicitCastExpr 0x55fb421e9b18 <col:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e9a68 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x55fb42192f78 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x55fb421e9b60 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e9a90 <col:15> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B1.2]([B1.4])
   6: IntegerLiteral 0x55fb421e9b78 <lstrlib.c:534:10> 'int' 1
1
   7: ReturnStmt 0x55fb421e9b98 <lstrlib.c:534:3, col:10>
`-IntegerLiteral 0x55fb421e9b78 <col:10> 'int' 1
return [B1.6];
   Preds (2): B2 B15
   Succs (1): B0

 [B2]
   1: BinaryOperator 0x55fb421e99a0 <lstrlib.c:531:14, col:36> 'int' '&&'
|-BinaryOperator 0x55fb421e9918 <col:14, col:24> 'int' '<'
| |-UnaryOperator 0x55fb421e9880 <col:14, col:16> 'const char *' postfix '++'
| | `-DeclRefExpr 0x55fb421e9858 <col:14> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
| `-ImplicitCastExpr 0x55fb421e9900 <col:21, col:24> 'const char *' <LValueToRValue>
|   `-MemberExpr 0x55fb421e98c8 <col:21, col:24> 'const char *' lvalue .src_end 0x55fb421c3648
|     `-DeclRefExpr 0x55fb421e98a0 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
`-UnaryOperator 0x55fb421e9980 <col:35, col:36> 'int' prefix '!'
  `-ImplicitCastExpr 0x55fb421e9968 <col:36> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e9940 <col:36> 'int' lvalue Var 0x55fb421e85d0 'anchor' 'int'
[B4.6] && [B3.3]
   T: do ... while [B2.1]
   Preds (2): B3 B4
   Succs (2): B9 B1

 [B3]
   1: DeclRefExpr 0x55fb421e9940 <lstrlib.c:531:36> 'int' lvalue Var 0x55fb421e85d0 'anchor' 'int'
anchor
   2: ImplicitCastExpr 0x55fb421e9968 <lstrlib.c:531:36> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421e9940 <col:36> 'int' lvalue Var 0x55fb421e85d0 'anchor' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x55fb421e9980 <lstrlib.c:531:35, col:36> 'int' prefix '!'
`-ImplicitCastExpr 0x55fb421e9968 <col:36> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e9940 <col:36> 'int' lvalue Var 0x55fb421e85d0 'anchor' 'int'
![B3.2]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55fb421e9858 <lstrlib.c:531:14> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
s1
   2: UnaryOperator 0x55fb421e9880 <lstrlib.c:531:14, col:16> 'const char *' postfix '++'
`-DeclRefExpr 0x55fb421e9858 <col:14> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
[B4.1]++
   3: DeclRefExpr 0x55fb421e98a0 <lstrlib.c:531:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
   4: MemberExpr 0x55fb421e98c8 <lstrlib.c:531:21, col:24> 'const char *' lvalue .src_end 0x55fb421c3648
`-DeclRefExpr 0x55fb421e98a0 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
[B4.3].src_end
   5: ImplicitCastExpr 0x55fb421e9900 <lstrlib.c:531:21, col:24> 'const char *' <LValueToRValue>
`-MemberExpr 0x55fb421e98c8 <col:21, col:24> 'const char *' lvalue .src_end 0x55fb421c3648
  `-DeclRefExpr 0x55fb421e98a0 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
[B4.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: BinaryOperator 0x55fb421e9918 <lstrlib.c:531:14, col:24> 'int' '<'
|-UnaryOperator 0x55fb421e9880 <col:14, col:16> 'const char *' postfix '++'
| `-DeclRefExpr 0x55fb421e9858 <col:14> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
`-ImplicitCastExpr 0x55fb421e9900 <col:21, col:24> 'const char *' <LValueToRValue>
  `-MemberExpr 0x55fb421e98c8 <col:21, col:24> 'const char *' lvalue .src_end 0x55fb421c3648
    `-DeclRefExpr 0x55fb421e98a0 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
[B4.2] < [B4.5]
   T: [B4.6] && ...
   Preds (1): B8
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55fb421e9648 <lstrlib.c:529:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
push_captures
   2: ImplicitCastExpr 0x55fb421e9708 <lstrlib.c:529:18> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e9648 <col:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(MatchState *, const char *, const char *))
   3: DeclRefExpr 0x55fb421e9670 <lstrlib.c:529:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
   4: UnaryOperator 0x55fb421e9698 <lstrlib.c:529:32, col:33> 'MatchState *' prefix '&'
`-DeclRefExpr 0x55fb421e9670 <col:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
&[B5.3]
   5: DeclRefExpr 0x55fb421e96b8 <lstrlib.c:529:37> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
s1
   6: ImplicitCastExpr 0x55fb421e9760 <lstrlib.c:529:37> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e96b8 <col:37> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
[B5.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x55fb421e96e0 <lstrlib.c:529:41> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
res
   8: ImplicitCastExpr 0x55fb421e9778 <lstrlib.c:529:41> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e96e0 <col:41> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
[B5.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: CallExpr 0x55fb421e9720 <lstrlib.c:529:18, col:44> 'int'
|-ImplicitCastExpr 0x55fb421e9708 <col:18> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e9648 <col:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
|-UnaryOperator 0x55fb421e9698 <col:32, col:33> 'MatchState *' prefix '&'
| `-DeclRefExpr 0x55fb421e9670 <col:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
|-ImplicitCastExpr 0x55fb421e9760 <col:37> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e96b8 <col:37> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
`-ImplicitCastExpr 0x55fb421e9778 <col:41> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e96e0 <col:41> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
[B5.2]([B5.4], [B5.6], [B5.8])
  10: ReturnStmt 0x55fb421e9790 <lstrlib.c:529:11, col:44>
`-CallExpr 0x55fb421e9720 <col:18, col:44> 'int'
  |-ImplicitCastExpr 0x55fb421e9708 <col:18> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421e9648 <col:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
  |-UnaryOperator 0x55fb421e9698 <col:32, col:33> 'MatchState *' prefix '&'
  | `-DeclRefExpr 0x55fb421e9670 <col:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
  |-ImplicitCastExpr 0x55fb421e9760 <col:37> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421e96b8 <col:37> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
  `-ImplicitCastExpr 0x55fb421e9778 <col:41> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e96e0 <col:41> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
return [B5.9];
   Preds (1): B7
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x55fb421e90a8 <lstrlib.c:524:11> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x55fb421e9200 <lstrlib.c:524:11> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e90a8 <col:11> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x55fb421e90d0 <lstrlib.c:524:27> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421e9250 <lstrlib.c:524:27> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e90d0 <col:27> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55fb421e90f8 <lstrlib.c:524:30> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
s1
   6: ImplicitCastExpr 0x55fb421e9148 <lstrlib.c:524:30> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e90f8 <col:30> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
[B6.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x55fb421e9120 <lstrlib.c:524:33> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
   8: ImplicitCastExpr 0x55fb421e9160 <lstrlib.c:524:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e9120 <col:33> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B6.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: BinaryOperator 0x55fb421e9178 <lstrlib.c:524:30, col:33> 'long' '-'
|-ImplicitCastExpr 0x55fb421e9148 <col:30> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e90f8 <col:30> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
`-ImplicitCastExpr 0x55fb421e9160 <col:33> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e9120 <col:33> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B6.6] - [B6.8]
  10: IntegerLiteral 0x55fb421e91a0 <lstrlib.c:524:35> 'int' 1
1
  11: ImplicitCastExpr 0x55fb421e91c0 <lstrlib.c:524:35> 'long' <IntegralCast>
`-IntegerLiteral 0x55fb421e91a0 <col:35> 'int' 1
[B6.10] (ImplicitCastExpr, IntegralCast, long)
  12: BinaryOperator 0x55fb421e91d8 <lstrlib.c:524:30, col:35> 'long' '+'
|-BinaryOperator 0x55fb421e9178 <col:30, col:33> 'long' '-'
| |-ImplicitCastExpr 0x55fb421e9148 <col:30> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421e90f8 <col:30> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
| `-ImplicitCastExpr 0x55fb421e9160 <col:33> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55fb421e9120 <col:33> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
`-ImplicitCastExpr 0x55fb421e91c0 <col:35> 'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421e91a0 <col:35> 'int' 1
[B6.9] + [B6.11]
  13: CallExpr 0x55fb421e9218 <lstrlib.c:524:11, col:36> 'void'
|-ImplicitCastExpr 0x55fb421e9200 <col:11> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e90a8 <col:11> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x55fb421e9250 <col:27> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e90d0 <col:27> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
`-BinaryOperator 0x55fb421e91d8 <col:30, col:35> 'long' '+'
  |-BinaryOperator 0x55fb421e9178 <col:30, col:33> 'long' '-'
  | |-ImplicitCastExpr 0x55fb421e9148 <col:30> 'const char *' <LValueToRValue>
  | | `-DeclRefExpr 0x55fb421e90f8 <col:30> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
  | `-ImplicitCastExpr 0x55fb421e9160 <col:33> 'const char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55fb421e9120 <col:33> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
  `-ImplicitCastExpr 0x55fb421e91c0 <col:35> 'long' <IntegralCast>
    `-IntegerLiteral 0x55fb421e91a0 <col:35> 'int' 1
[B6.2]([B6.4], [B6.12])
  14: DeclRefExpr 0x55fb421e9268 <lstrlib.c:525:11> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
  15: ImplicitCastExpr 0x55fb421e9360 <lstrlib.c:525:11> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e9268 <col:11> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B6.14] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
  16: DeclRefExpr 0x55fb421e9290 <lstrlib.c:525:27> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x55fb421e93b0 <lstrlib.c:525:27> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e9290 <col:27> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B6.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: DeclRefExpr 0x55fb421e92b8 <lstrlib.c:525:30> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
res
  19: ImplicitCastExpr 0x55fb421e9308 <lstrlib.c:525:30> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e92b8 <col:30> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
[B6.18] (ImplicitCastExpr, LValueToRValue, const char *)
  20: DeclRefExpr 0x55fb421e92e0 <lstrlib.c:525:34> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
  21: ImplicitCastExpr 0x55fb421e9320 <lstrlib.c:525:34> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e92e0 <col:34> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B6.20] (ImplicitCastExpr, LValueToRValue, const char *)
  22: BinaryOperator 0x55fb421e9338 <lstrlib.c:525:30, col:34> 'long' '-'
|-ImplicitCastExpr 0x55fb421e9308 <col:30> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e92b8 <col:30> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
`-ImplicitCastExpr 0x55fb421e9320 <col:34> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e92e0 <col:34> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B6.19] - [B6.21]
  23: CallExpr 0x55fb421e9378 <lstrlib.c:525:11, col:35> 'void'
|-ImplicitCastExpr 0x55fb421e9360 <col:11> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e9268 <col:11> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x55fb421e93b0 <col:27> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e9290 <col:27> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
`-BinaryOperator 0x55fb421e9338 <col:30, col:34> 'long' '-'
  |-ImplicitCastExpr 0x55fb421e9308 <col:30> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421e92b8 <col:30> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
  `-ImplicitCastExpr 0x55fb421e9320 <col:34> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e92e0 <col:34> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B6.15]([B6.17], [B6.22])
  24: DeclRefExpr 0x55fb421e93c8 <lstrlib.c:526:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
push_captures
  25: ImplicitCastExpr 0x55fb421e9538 <lstrlib.c:526:18> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e93c8 <col:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
[B6.24] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(MatchState *, const char *, const char *))
  26: DeclRefExpr 0x55fb421e93f0 <lstrlib.c:526:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
  27: UnaryOperator 0x55fb421e9418 <lstrlib.c:526:32, col:33> 'MatchState *' prefix '&'
`-DeclRefExpr 0x55fb421e93f0 <col:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
&[B6.26]
  28: IntegerLiteral 0x55fb421e9438 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  29: CStyleCastExpr 0x55fb421e9470 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421e9438 <col:24> 'int' 0
(void *)[B6.28] (CStyleCastExpr, NullToPointer, void *)
  30: ImplicitCastExpr 0x55fb421e9590 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x55fb421e9498 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb421e9470 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421e9438 <col:24> 'int' 0
([B6.29]) (ImplicitCastExpr, NullToPointer, const char *)
  31: IntegerLiteral 0x55fb421e94b8 <lstrlib.c:526:43> 'int' 0
0
  32: ImplicitCastExpr 0x55fb421e95a8 <lstrlib.c:526:43> 'const char *' <NullToPointer>
`-IntegerLiteral 0x55fb421e94b8 <col:43> 'int' 0
[B6.31] (ImplicitCastExpr, NullToPointer, const char *)
  33: CallExpr 0x55fb421e9550 <lstrlib.c:526:18, col:44> 'int'
|-ImplicitCastExpr 0x55fb421e9538 <col:18> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e93c8 <col:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
|-UnaryOperator 0x55fb421e9418 <col:32, col:33> 'MatchState *' prefix '&'
| `-DeclRefExpr 0x55fb421e93f0 <col:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
|-ImplicitCastExpr 0x55fb421e9590 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
| `-ParenExpr 0x55fb421e9498 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x55fb421e9470 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55fb421e9438 <col:24> 'int' 0
`-ImplicitCastExpr 0x55fb421e95a8 <lstrlib.c:526:43> 'const char *' <NullToPointer>
  `-IntegerLiteral 0x55fb421e94b8 <col:43> 'int' 0
[B6.25]([B6.27], [B6.30], [B6.32])
  34: IntegerLiteral 0x55fb421e95c0 <lstrlib.c:526:48> 'int' 2
2
  35: BinaryOperator 0x55fb421e95e0 <lstrlib.c:526:18, col:48> 'int' '+'
|-CallExpr 0x55fb421e9550 <col:18, col:44> 'int'
| |-ImplicitCastExpr 0x55fb421e9538 <col:18> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55fb421e93c8 <col:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
| |-UnaryOperator 0x55fb421e9418 <col:32, col:33> 'MatchState *' prefix '&'
| | `-DeclRefExpr 0x55fb421e93f0 <col:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
| |-ImplicitCastExpr 0x55fb421e9590 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
| | `-ParenExpr 0x55fb421e9498 <col:16, col:25> 'void *'
| |   `-CStyleCastExpr 0x55fb421e9470 <col:17, col:24> 'void *' <NullToPointer>
| |     `-IntegerLiteral 0x55fb421e9438 <col:24> 'int' 0
| `-ImplicitCastExpr 0x55fb421e95a8 <lstrlib.c:526:43> 'const char *' <NullToPointer>
|   `-IntegerLiteral 0x55fb421e94b8 <col:43> 'int' 0
`-IntegerLiteral 0x55fb421e95c0 <col:48> 'int' 2
[B6.33] + [B6.34]
  36: ReturnStmt 0x55fb421e9608 <lstrlib.c:526:11, col:48>
`-BinaryOperator 0x55fb421e95e0 <col:18, col:48> 'int' '+'
  |-CallExpr 0x55fb421e9550 <col:18, col:44> 'int'
  | |-ImplicitCastExpr 0x55fb421e9538 <col:18> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x55fb421e93c8 <col:18> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
  | |-UnaryOperator 0x55fb421e9418 <col:32, col:33> 'MatchState *' prefix '&'
  | | `-DeclRefExpr 0x55fb421e93f0 <col:33> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
  | |-ImplicitCastExpr 0x55fb421e9590 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  | | `-ParenExpr 0x55fb421e9498 <col:16, col:25> 'void *'
  | |   `-CStyleCastExpr 0x55fb421e9470 <col:17, col:24> 'void *' <NullToPointer>
  | |     `-IntegerLiteral 0x55fb421e9438 <col:24> 'int' 0
  | `-ImplicitCastExpr 0x55fb421e95a8 <lstrlib.c:526:43> 'const char *' <NullToPointer>
  |   `-IntegerLiteral 0x55fb421e94b8 <col:43> 'int' 0
  `-IntegerLiteral 0x55fb421e95c0 <col:48> 'int' 2
return [B6.35];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x55fb421e9068 <lstrlib.c:523:13> 'int' lvalue ParmVar 0x55fb421e6cc0 'find' 'int'
find
   2: ImplicitCastExpr 0x55fb421e9090 <lstrlib.c:523:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421e9068 <col:13> 'int' lvalue ParmVar 0x55fb421e6cc0 'find' 'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B7.2]
   Preds (1): B8
   Succs (2): B6 B5

 [B8]
   1: DeclStmt 0x55fb421e8cc8 <lstrlib.c:520:7, col:22>col:19
`-VarDecl 0x55fb421e8c68 <col:7, col:19> col:19 used res 'const char *'
const char *res;
   2: IntegerLiteral 0x55fb421e8d40 <lstrlib.c:521:18> 'int' 0
0
   3: DeclRefExpr 0x55fb421e8ce0 <lstrlib.c:521:7> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
   4: MemberExpr 0x55fb421e8d08 <lstrlib.c:521:7, col:10> 'int' lvalue .level 0x55fb421c3700
`-DeclRefExpr 0x55fb421e8ce0 <col:7> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
[B8.3].level
   5: BinaryOperator 0x55fb421e8d60 <lstrlib.c:521:7, col:18> 'int' '='
|-MemberExpr 0x55fb421e8d08 <col:7, col:10> 'int' lvalue .level 0x55fb421c3700
| `-DeclRefExpr 0x55fb421e8ce0 <col:7> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
`-IntegerLiteral 0x55fb421e8d40 <col:18> 'int' 0
[B8.4] = [B8.2]
   6: DeclRefExpr 0x55fb421e8e18 <lstrlib.c:522:16> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
match
   7: ImplicitCastExpr 0x55fb421e8ed8 <lstrlib.c:522:16> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e8e18 <col:16> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
[B8.6] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(MatchState *, const char *, const char *))
   8: DeclRefExpr 0x55fb421e8e40 <lstrlib.c:522:23> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
   9: UnaryOperator 0x55fb421e8e68 <lstrlib.c:522:22, col:23> 'MatchState *' prefix '&'
`-DeclRefExpr 0x55fb421e8e40 <col:23> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
&[B8.8]
  10: DeclRefExpr 0x55fb421e8e88 <lstrlib.c:522:27> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
s1
  11: ImplicitCastExpr 0x55fb421e8f30 <lstrlib.c:522:27> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8e88 <col:27> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
[B8.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: DeclRefExpr 0x55fb421e8eb0 <lstrlib.c:522:31> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
p
  13: ImplicitCastExpr 0x55fb421e8f48 <lstrlib.c:522:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8eb0 <col:31> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B8.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: CallExpr 0x55fb421e8ef0 <lstrlib.c:522:16, col:32> 'const char *'
|-ImplicitCastExpr 0x55fb421e8ed8 <col:16> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e8e18 <col:16> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
|-UnaryOperator 0x55fb421e8e68 <col:22, col:23> 'MatchState *' prefix '&'
| `-DeclRefExpr 0x55fb421e8e40 <col:23> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
|-ImplicitCastExpr 0x55fb421e8f30 <col:27> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e8e88 <col:27> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
`-ImplicitCastExpr 0x55fb421e8f48 <col:31> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e8eb0 <col:31> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B8.7]([B8.9], [B8.11], [B8.13])
  15: DeclRefExpr 0x55fb421e8df0 <lstrlib.c:522:12> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
res
  16: BinaryOperator 0x55fb421e8f60 <lstrlib.c:522:12, col:32> 'const char *' '='
|-DeclRefExpr 0x55fb421e8df0 <col:12> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
`-CallExpr 0x55fb421e8ef0 <col:16, col:32> 'const char *'
  |-ImplicitCastExpr 0x55fb421e8ed8 <col:16> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421e8e18 <col:16> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
  |-UnaryOperator 0x55fb421e8e68 <col:22, col:23> 'MatchState *' prefix '&'
  | `-DeclRefExpr 0x55fb421e8e40 <col:23> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
  |-ImplicitCastExpr 0x55fb421e8f30 <col:27> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421e8e88 <col:27> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
  `-ImplicitCastExpr 0x55fb421e8f48 <col:31> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e8eb0 <col:31> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B8.15] = [B8.14]
  17: IntegerLiteral 0x55fb421e8fa8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  18: CStyleCastExpr 0x55fb421e8fe0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421e8fa8 <col:24> 'int' 0
(void *)[B8.17] (CStyleCastExpr, NullToPointer, void *)
  19: ImplicitCastExpr 0x55fb421e9028 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x55fb421e9008 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb421e8fe0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421e8fa8 <col:24> 'int' 0
([B8.18]) (ImplicitCastExpr, BitCast, const char *)
  20: BinaryOperator 0x55fb421e9040 <lstrlib.c:522:11, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ParenExpr 0x55fb421e8f88 <lstrlib.c:522:11, col:33> 'const char *'
| `-BinaryOperator 0x55fb421e8f60 <col:12, col:32> 'const char *' '='
|   |-DeclRefExpr 0x55fb421e8df0 <col:12> 'const char *' lvalue Var 0x55fb421e8c68 'res' 'const char *'
|   `-CallExpr 0x55fb421e8ef0 <col:16, col:32> 'const char *'
|     |-ImplicitCastExpr 0x55fb421e8ed8 <col:16> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55fb421e8e18 <col:16> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
|     |-UnaryOperator 0x55fb421e8e68 <col:22, col:23> 'MatchState *' prefix '&'
|     | `-DeclRefExpr 0x55fb421e8e40 <col:23> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
|     |-ImplicitCastExpr 0x55fb421e8f30 <col:27> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55fb421e8e88 <col:27> 'const char *' lvalue Var 0x55fb421e8850 's1' 'const char *'
|     `-ImplicitCastExpr 0x55fb421e8f48 <col:31> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55fb421e8eb0 <col:31> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
`-ImplicitCastExpr 0x55fb421e9028 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x55fb421e9008 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55fb421e8fe0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55fb421e8fa8 <col:24> 'int' 0
([B8.16]) != [B8.19]
   T: if [B8.20]
   Preds (2): B9 B10
   Succs (2): B7 B4

 [B9]
   Preds (1): B2
   Succs (1): B8

 [B10]
   1: ConditionalOperator 0x55fb421e87f0 <lstrlib.c:514:18, col:43> 'int'
|-ParenExpr 0x55fb421e8700 <col:18, col:28> 'int'
| `-BinaryOperator 0x55fb421e86d8 <col:19, col:25> 'int' '=='
|   |-ImplicitCastExpr 0x55fb421e86c0 <col:19, col:20> 'int' <IntegralCast>
|   | `-ImplicitCastExpr 0x55fb421e86a8 <col:19, col:20> 'char' <LValueToRValue>
|   |   `-UnaryOperator 0x55fb421e8670 <col:19, col:20> 'const char' lvalue prefix '*'
|   |     `-ImplicitCastExpr 0x55fb421e8658 <col:20> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x55fb421e8630 <col:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
|   `-CharacterLiteral 0x55fb421e8690 <col:25> 'int' 94
|-ParenExpr 0x55fb421e87b0 <col:32, col:39> 'int'
| `-BinaryOperator 0x55fb421e8788 <col:33, col:38> 'int' ','
|   |-UnaryOperator 0x55fb421e8748 <col:33, col:34> 'const char *' postfix '++'
|   | `-DeclRefExpr 0x55fb421e8720 <col:33> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
|   `-IntegerLiteral 0x55fb421e8768 <col:38> 'int' 1
`-IntegerLiteral 0x55fb421e87d0 <col:43> 'int' 0
([B13.8]) ? ([B11.4]) : [B12.1]
   2: DeclStmt 0x55fb421e8820 <lstrlib.c:514:5, col:44>col:9
`-VarDecl 0x55fb421e85d0 <col:5, col:43> col:9 used anchor 'int' cinit
  `-ConditionalOperator 0x55fb421e87f0 <col:18, col:43> 'int'
    |-ParenExpr 0x55fb421e8700 <col:18, col:28> 'int'
    | `-BinaryOperator 0x55fb421e86d8 <col:19, col:25> 'int' '=='
    |   |-ImplicitCastExpr 0x55fb421e86c0 <col:19, col:20> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55fb421e86a8 <col:19, col:20> 'char' <LValueToRValue>
    |   |   `-UnaryOperator 0x55fb421e8670 <col:19, col:20> 'const char' lvalue prefix '*'
    |   |     `-ImplicitCastExpr 0x55fb421e8658 <col:20> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55fb421e8630 <col:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
    |   `-CharacterLiteral 0x55fb421e8690 <col:25> 'int' 94
    |-ParenExpr 0x55fb421e87b0 <col:32, col:39> 'int'
    | `-BinaryOperator 0x55fb421e8788 <col:33, col:38> 'int' ','
    |   |-UnaryOperator 0x55fb421e8748 <col:33, col:34> 'const char *' postfix '++'
    |   | `-DeclRefExpr 0x55fb421e8720 <col:33> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
    |   `-IntegerLiteral 0x55fb421e8768 <col:38> 'int' 1
    `-IntegerLiteral 0x55fb421e87d0 <col:43> 'int' 0
int anchor = (*p == '^') ? (p++ , 1) : 0;
   3: DeclRefExpr 0x55fb421e88b0 <lstrlib.c:515:20> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
   4: ImplicitCastExpr 0x55fb421e8900 <lstrlib.c:515:20> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e88b0 <col:20> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B10.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x55fb421e88d8 <lstrlib.c:515:22> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
init
   6: ImplicitCastExpr 0x55fb421e8918 <lstrlib.c:515:22> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e88d8 <col:22> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B10.5] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   7: BinaryOperator 0x55fb421e8930 <lstrlib.c:515:20, col:22> 'const char *' '+'
|-ImplicitCastExpr 0x55fb421e8900 <col:20> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e88b0 <col:20> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
`-ImplicitCastExpr 0x55fb421e8918 <col:22> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e88d8 <col:22> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B10.4] + [B10.6]
   8: DeclStmt 0x55fb421e8958 <lstrlib.c:515:5, col:26>col:17
`-VarDecl 0x55fb421e8850 <col:5, col:22> col:17 used s1 'const char *' cinit
  `-BinaryOperator 0x55fb421e8930 <col:20, col:22> 'const char *' '+'
    |-ImplicitCastExpr 0x55fb421e8900 <col:20> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421e88b0 <col:20> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
    `-ImplicitCastExpr 0x55fb421e8918 <col:22> 'ptrdiff_t':'long' <LValueToRValue>
      `-DeclRefExpr 0x55fb421e88d8 <col:22> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
const char *s1 = s + init;
   9: DeclRefExpr 0x55fb421e89d0 <lstrlib.c:516:12> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x55fb421e89f8 <lstrlib.c:516:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e89d0 <col:12> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B10.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: DeclRefExpr 0x55fb421e8970 <lstrlib.c:516:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
  12: MemberExpr 0x55fb421e8998 <lstrlib.c:516:5, col:8> 'lua_State *' lvalue .L 0x55fb421c36a0
`-DeclRefExpr 0x55fb421e8970 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
[B10.11].L
  13: BinaryOperator 0x55fb421e8a10 <lstrlib.c:516:5, col:12> 'lua_State *' '='
|-MemberExpr 0x55fb421e8998 <col:5, col:8> 'lua_State *' lvalue .L 0x55fb421c36a0
| `-DeclRefExpr 0x55fb421e8970 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
`-ImplicitCastExpr 0x55fb421e89f8 <col:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e89d0 <col:12> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B10.12] = [B10.10]
  14: DeclRefExpr 0x55fb421e8a98 <lstrlib.c:517:19> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
  15: ImplicitCastExpr 0x55fb421e8ac0 <lstrlib.c:517:19> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8a98 <col:19> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B10.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: DeclRefExpr 0x55fb421e8a38 <lstrlib.c:517:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
  17: MemberExpr 0x55fb421e8a60 <lstrlib.c:517:5, col:8> 'const char *' lvalue .src_init 0x55fb421c35e8
`-DeclRefExpr 0x55fb421e8a38 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
[B10.16].src_init
  18: BinaryOperator 0x55fb421e8ad8 <lstrlib.c:517:5, col:19> 'const char *' '='
|-MemberExpr 0x55fb421e8a60 <col:5, col:8> 'const char *' lvalue .src_init 0x55fb421c35e8
| `-DeclRefExpr 0x55fb421e8a38 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
`-ImplicitCastExpr 0x55fb421e8ac0 <col:19> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e8a98 <col:19> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B10.17] = [B10.15]
  19: DeclRefExpr 0x55fb421e8b80 <lstrlib.c:518:18> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
  20: ImplicitCastExpr 0x55fb421e8bd0 <lstrlib.c:518:18> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8b80 <col:18> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B10.19] (ImplicitCastExpr, LValueToRValue, const char *)
  21: DeclRefExpr 0x55fb421e8ba8 <lstrlib.c:518:20> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
l1
  22: ImplicitCastExpr 0x55fb421e8be8 <lstrlib.c:518:20> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8ba8 <col:20> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B10.21] (ImplicitCastExpr, LValueToRValue, size_t)
  23: BinaryOperator 0x55fb421e8c00 <lstrlib.c:518:18, col:20> 'const char *' '+'
|-ImplicitCastExpr 0x55fb421e8bd0 <col:18> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e8b80 <col:18> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
`-ImplicitCastExpr 0x55fb421e8be8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e8ba8 <col:20> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B10.20] + [B10.22]
  24: DeclRefExpr 0x55fb421e8b20 <lstrlib.c:518:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
ms
  25: MemberExpr 0x55fb421e8b48 <lstrlib.c:518:5, col:8> 'const char *' lvalue .src_end 0x55fb421c3648
`-DeclRefExpr 0x55fb421e8b20 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
[B10.24].src_end
  26: BinaryOperator 0x55fb421e8c28 <lstrlib.c:518:5, col:20> 'const char *' '='
|-MemberExpr 0x55fb421e8b48 <col:5, col:8> 'const char *' lvalue .src_end 0x55fb421c3648
| `-DeclRefExpr 0x55fb421e8b20 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421e8540 'ms' 'MatchState':'struct MatchState'
`-BinaryOperator 0x55fb421e8c00 <col:18, col:20> 'const char *' '+'
  |-ImplicitCastExpr 0x55fb421e8bd0 <col:18> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421e8b80 <col:18> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
  `-ImplicitCastExpr 0x55fb421e8be8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e8ba8 <col:20> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B10.25] = [B10.23]
   Preds (2): B11 B12
   Succs (1): B8

 [B11]
   1: DeclRefExpr 0x55fb421e8720 <lstrlib.c:514:33> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
p
   2: UnaryOperator 0x55fb421e8748 <lstrlib.c:514:33, col:34> 'const char *' postfix '++'
`-DeclRefExpr 0x55fb421e8720 <col:33> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B11.1]++
   3: IntegerLiteral 0x55fb421e8768 <lstrlib.c:514:38> 'int' 1
1
   4: BinaryOperator 0x55fb421e8788 <lstrlib.c:514:33, col:38> 'int' ','
|-UnaryOperator 0x55fb421e8748 <col:33, col:34> 'const char *' postfix '++'
| `-DeclRefExpr 0x55fb421e8720 <col:33> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
`-IntegerLiteral 0x55fb421e8768 <col:38> 'int' 1
... , [B11.3]
   Preds (1): B13
   Succs (1): B10

 [B12]
   1: IntegerLiteral 0x55fb421e87d0 <lstrlib.c:514:43> 'int' 0
0
   Preds (1): B13
   Succs (1): B10

 [B13]
   1: DeclStmt 0x55fb421e85a0 <lstrlib.c:513:5, col:18>col:16
`-VarDecl 0x55fb421e8540 <col:5, col:16> col:16 used ms 'MatchState':'struct MatchState'
MatchState ms;
   2: DeclRefExpr 0x55fb421e8630 <lstrlib.c:514:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
p
   3: ImplicitCastExpr 0x55fb421e8658 <lstrlib.c:514:20> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8630 <col:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B13.2] (ImplicitCastExpr, LValueToRValue, const char *)
   4: UnaryOperator 0x55fb421e8670 <lstrlib.c:514:19, col:20> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55fb421e8658 <col:20> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e8630 <col:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
*[B13.3]
   5: ImplicitCastExpr 0x55fb421e86a8 <lstrlib.c:514:19, col:20> 'char' <LValueToRValue>
`-UnaryOperator 0x55fb421e8670 <col:19, col:20> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55fb421e8658 <col:20> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e8630 <col:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B13.4] (ImplicitCastExpr, LValueToRValue, char)
   6: ImplicitCastExpr 0x55fb421e86c0 <lstrlib.c:514:19, col:20> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55fb421e86a8 <col:19, col:20> 'char' <LValueToRValue>
  `-UnaryOperator 0x55fb421e8670 <col:19, col:20> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55fb421e8658 <col:20> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55fb421e8630 <col:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B13.5] (ImplicitCastExpr, IntegralCast, int)
   7: CharacterLiteral 0x55fb421e8690 <lstrlib.c:514:25> 'int' 94
'^'
   8: BinaryOperator 0x55fb421e86d8 <lstrlib.c:514:19, col:25> 'int' '=='
|-ImplicitCastExpr 0x55fb421e86c0 <col:19, col:20> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55fb421e86a8 <col:19, col:20> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55fb421e8670 <col:19, col:20> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55fb421e8658 <col:20> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55fb421e8630 <col:20> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
`-CharacterLiteral 0x55fb421e8690 <col:25> 'int' 94
[B13.6] == [B13.7]
   T: ([B13.8]) ? ... : ...
   Preds (2): B16 B18
   Succs (2): B11 B12

 [B14]
   1: DeclRefExpr 0x55fb421e80c0 <lstrlib.c:507:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x55fb421e8218 <lstrlib.c:507:7> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e80c0 <col:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B14.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x55fb421e80e8 <lstrlib.c:507:23> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421e8268 <lstrlib.c:507:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e80e8 <col:23> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B14.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55fb421e8110 <lstrlib.c:507:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
s2
   6: ImplicitCastExpr 0x55fb421e8160 <lstrlib.c:507:26> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8110 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
[B14.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x55fb421e8138 <lstrlib.c:507:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
   8: ImplicitCastExpr 0x55fb421e8178 <lstrlib.c:507:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8138 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B14.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: BinaryOperator 0x55fb421e8190 <lstrlib.c:507:26, col:29> 'long' '-'
|-ImplicitCastExpr 0x55fb421e8160 <col:26> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e8110 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
`-ImplicitCastExpr 0x55fb421e8178 <col:29> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e8138 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B14.6] - [B14.8]
  10: IntegerLiteral 0x55fb421e81b8 <lstrlib.c:507:31> 'int' 1
1
  11: ImplicitCastExpr 0x55fb421e81d8 <lstrlib.c:507:31> 'long' <IntegralCast>
`-IntegerLiteral 0x55fb421e81b8 <col:31> 'int' 1
[B14.10] (ImplicitCastExpr, IntegralCast, long)
  12: BinaryOperator 0x55fb421e81f0 <lstrlib.c:507:26, col:31> 'long' '+'
|-BinaryOperator 0x55fb421e8190 <col:26, col:29> 'long' '-'
| |-ImplicitCastExpr 0x55fb421e8160 <col:26> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421e8110 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
| `-ImplicitCastExpr 0x55fb421e8178 <col:29> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55fb421e8138 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
`-ImplicitCastExpr 0x55fb421e81d8 <col:31> 'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421e81b8 <col:31> 'int' 1
[B14.9] + [B14.11]
  13: CallExpr 0x55fb421e8230 <lstrlib.c:507:7, col:32> 'void'
|-ImplicitCastExpr 0x55fb421e8218 <col:7> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e80c0 <col:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x55fb421e8268 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e80e8 <col:23> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
`-BinaryOperator 0x55fb421e81f0 <col:26, col:31> 'long' '+'
  |-BinaryOperator 0x55fb421e8190 <col:26, col:29> 'long' '-'
  | |-ImplicitCastExpr 0x55fb421e8160 <col:26> 'const char *' <LValueToRValue>
  | | `-DeclRefExpr 0x55fb421e8110 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
  | `-ImplicitCastExpr 0x55fb421e8178 <col:29> 'const char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55fb421e8138 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
  `-ImplicitCastExpr 0x55fb421e81d8 <col:31> 'long' <IntegralCast>
    `-IntegerLiteral 0x55fb421e81b8 <col:31> 'int' 1
[B14.2]([B14.4], [B14.12])
  14: DeclRefExpr 0x55fb421e8280 <lstrlib.c:508:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
  15: ImplicitCastExpr 0x55fb421e83f8 <lstrlib.c:508:7> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e8280 <col:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B14.14] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
  16: DeclRefExpr 0x55fb421e82a8 <lstrlib.c:508:23> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x55fb421e8448 <lstrlib.c:508:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e82a8 <col:23> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B14.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: DeclRefExpr 0x55fb421e82d0 <lstrlib.c:508:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
s2
  19: ImplicitCastExpr 0x55fb421e8320 <lstrlib.c:508:26> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e82d0 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
[B14.18] (ImplicitCastExpr, LValueToRValue, const char *)
  20: DeclRefExpr 0x55fb421e82f8 <lstrlib.c:508:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
  21: ImplicitCastExpr 0x55fb421e8338 <lstrlib.c:508:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e82f8 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B14.20] (ImplicitCastExpr, LValueToRValue, const char *)
  22: BinaryOperator 0x55fb421e8350 <lstrlib.c:508:26, col:29> 'long' '-'
|-ImplicitCastExpr 0x55fb421e8320 <col:26> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e82d0 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
`-ImplicitCastExpr 0x55fb421e8338 <col:29> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e82f8 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B14.19] - [B14.21]
  23: ImplicitCastExpr 0x55fb421e83b8 <lstrlib.c:508:26, col:29> 'unsigned long' <IntegralCast>
`-BinaryOperator 0x55fb421e8350 <col:26, col:29> 'long' '-'
  |-ImplicitCastExpr 0x55fb421e8320 <col:26> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421e82d0 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
  `-ImplicitCastExpr 0x55fb421e8338 <col:29> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e82f8 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B14.22] (ImplicitCastExpr, IntegralCast, unsigned long)
  24: DeclRefExpr 0x55fb421e8378 <lstrlib.c:508:31> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
l2
  25: ImplicitCastExpr 0x55fb421e83a0 <lstrlib.c:508:31> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8378 <col:31> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
[B14.24] (ImplicitCastExpr, LValueToRValue, size_t)
  26: BinaryOperator 0x55fb421e83d0 <lstrlib.c:508:26, col:31> 'unsigned long' '+'
|-ImplicitCastExpr 0x55fb421e83b8 <col:26, col:29> 'unsigned long' <IntegralCast>
| `-BinaryOperator 0x55fb421e8350 <col:26, col:29> 'long' '-'
|   |-ImplicitCastExpr 0x55fb421e8320 <col:26> 'const char *' <LValueToRValue>
|   | `-DeclRefExpr 0x55fb421e82d0 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
|   `-ImplicitCastExpr 0x55fb421e8338 <col:29> 'const char *' <LValueToRValue>
|     `-DeclRefExpr 0x55fb421e82f8 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
`-ImplicitCastExpr 0x55fb421e83a0 <col:31> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e8378 <col:31> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
[B14.23] + [B14.25]
  27: ImplicitCastExpr 0x55fb421e8460 <lstrlib.c:508:26, col:31> 'lua_Integer':'long' <IntegralCast>
`-BinaryOperator 0x55fb421e83d0 <col:26, col:31> 'unsigned long' '+'
  |-ImplicitCastExpr 0x55fb421e83b8 <col:26, col:29> 'unsigned long' <IntegralCast>
  | `-BinaryOperator 0x55fb421e8350 <col:26, col:29> 'long' '-'
  |   |-ImplicitCastExpr 0x55fb421e8320 <col:26> 'const char *' <LValueToRValue>
  |   | `-DeclRefExpr 0x55fb421e82d0 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
  |   `-ImplicitCastExpr 0x55fb421e8338 <col:29> 'const char *' <LValueToRValue>
  |     `-DeclRefExpr 0x55fb421e82f8 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
  `-ImplicitCastExpr 0x55fb421e83a0 <col:31> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e8378 <col:31> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
[B14.26] (ImplicitCastExpr, IntegralCast, lua_Integer)
  28: CallExpr 0x55fb421e8410 <lstrlib.c:508:7, col:33> 'void'
|-ImplicitCastExpr 0x55fb421e83f8 <col:7> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e8280 <col:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x55fb421e8448 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e82a8 <col:23> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
`-ImplicitCastExpr 0x55fb421e8460 <col:26, col:31> 'lua_Integer':'long' <IntegralCast>
  `-BinaryOperator 0x55fb421e83d0 <col:26, col:31> 'unsigned long' '+'
    |-ImplicitCastExpr 0x55fb421e83b8 <col:26, col:29> 'unsigned long' <IntegralCast>
    | `-BinaryOperator 0x55fb421e8350 <col:26, col:29> 'long' '-'
    |   |-ImplicitCastExpr 0x55fb421e8320 <col:26> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fb421e82d0 <col:26> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
    |   `-ImplicitCastExpr 0x55fb421e8338 <col:29> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x55fb421e82f8 <col:29> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
    `-ImplicitCastExpr 0x55fb421e83a0 <col:31> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55fb421e8378 <col:31> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
[B14.15]([B14.17], [B14.27])
  29: IntegerLiteral 0x55fb421e8478 <lstrlib.c:509:14> 'int' 2
2
  30: ReturnStmt 0x55fb421e8498 <lstrlib.c:509:7, col:14>
`-IntegerLiteral 0x55fb421e8478 <col:14> 'int' 2
return [B14.29];
   Preds (1): B15
   Succs (1): B0

 [B15]
   1: DeclRefExpr 0x55fb421e7da0 <lstrlib.c:505:22> 'const char *(const char *, size_t, const char *, size_t)' Function 0x55fb421e3ae0 'lmemfind' 'const char *(const char *, size_t, const char *, size_t)'
lmemfind
   2: ImplicitCastExpr 0x55fb421e7fd8 <lstrlib.c:505:22> 'const char *(*)(const char *, size_t, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e7da0 <col:22> 'const char *(const char *, size_t, const char *, size_t)' Function 0x55fb421e3ae0 'lmemfind' 'const char *(const char *, size_t, const char *, size_t)'
[B15.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(const char *, size_t, const char *, size_t))
   3: DeclRefExpr 0x55fb421e7dc8 <lstrlib.c:505:31> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
s
   4: ImplicitCastExpr 0x55fb421e7e18 <lstrlib.c:505:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7dc8 <col:31> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
[B15.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x55fb421e7df0 <lstrlib.c:505:33> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
init
   6: ImplicitCastExpr 0x55fb421e7e30 <lstrlib.c:505:33> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7df0 <col:33> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B15.5] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   7: BinaryOperator 0x55fb421e7e48 <lstrlib.c:505:31, col:33> 'const char *' '+'
|-ImplicitCastExpr 0x55fb421e7e18 <col:31> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7dc8 <col:31> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
`-ImplicitCastExpr 0x55fb421e7e30 <col:33> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e7df0 <col:33> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B15.4] + [B15.6]
   8: DeclRefExpr 0x55fb421e7e70 <lstrlib.c:505:39> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
l1
   9: ImplicitCastExpr 0x55fb421e7ec0 <lstrlib.c:505:39> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7e70 <col:39> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B15.8] (ImplicitCastExpr, LValueToRValue, size_t)
  10: DeclRefExpr 0x55fb421e7e98 <lstrlib.c:505:42> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
init
  11: ImplicitCastExpr 0x55fb421e7ed8 <lstrlib.c:505:42> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7e98 <col:42> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B15.10] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  12: ImplicitCastExpr 0x55fb421e7ef0 <lstrlib.c:505:42> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55fb421e7ed8 <col:42> 'ptrdiff_t':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e7e98 <col:42> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B15.11] (ImplicitCastExpr, IntegralCast, unsigned long)
  13: BinaryOperator 0x55fb421e7f08 <lstrlib.c:505:39, col:42> 'unsigned long' '-'
|-ImplicitCastExpr 0x55fb421e7ec0 <col:39> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7e70 <col:39> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55fb421e7ef0 <col:42> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55fb421e7ed8 <col:42> 'ptrdiff_t':'long' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e7e98 <col:42> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B15.9] - [B15.12]
  14: DeclRefExpr 0x55fb421e7f30 <lstrlib.c:505:48> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
p
  15: ImplicitCastExpr 0x55fb421e8038 <lstrlib.c:505:48> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7f30 <col:48> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B15.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: DeclRefExpr 0x55fb421e7f58 <lstrlib.c:505:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
l2
  17: ImplicitCastExpr 0x55fb421e8050 <lstrlib.c:505:51> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7f58 <col:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
[B15.16] (ImplicitCastExpr, LValueToRValue, size_t)
  18: CallExpr 0x55fb421e7ff0 <lstrlib.c:505:22, col:53> 'const char *'
|-ImplicitCastExpr 0x55fb421e7fd8 <col:22> 'const char *(*)(const char *, size_t, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e7da0 <col:22> 'const char *(const char *, size_t, const char *, size_t)' Function 0x55fb421e3ae0 'lmemfind' 'const char *(const char *, size_t, const char *, size_t)'
|-BinaryOperator 0x55fb421e7e48 <col:31, col:33> 'const char *' '+'
| |-ImplicitCastExpr 0x55fb421e7e18 <col:31> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421e7dc8 <col:31> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
| `-ImplicitCastExpr 0x55fb421e7e30 <col:33> 'ptrdiff_t':'long' <LValueToRValue>
|   `-DeclRefExpr 0x55fb421e7df0 <col:33> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
|-BinaryOperator 0x55fb421e7f08 <col:39, col:42> 'unsigned long' '-'
| |-ImplicitCastExpr 0x55fb421e7ec0 <col:39> 'size_t':'unsigned long' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421e7e70 <col:39> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
| `-ImplicitCastExpr 0x55fb421e7ef0 <col:42> 'unsigned long' <IntegralCast>
|   `-ImplicitCastExpr 0x55fb421e7ed8 <col:42> 'ptrdiff_t':'long' <LValueToRValue>
|     `-DeclRefExpr 0x55fb421e7e98 <col:42> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
|-ImplicitCastExpr 0x55fb421e8038 <col:48> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7f30 <col:48> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
`-ImplicitCastExpr 0x55fb421e8050 <col:51> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e7f58 <col:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
[B15.2]([B15.7], [B15.13], [B15.15], [B15.17])
  19: DeclStmt 0x55fb421e8068 <lstrlib.c:505:5, col:54>col:17
`-VarDecl 0x55fb421e7d40 <col:5, col:53> col:17 used s2 'const char *' cinit
  `-CallExpr 0x55fb421e7ff0 <col:22, col:53> 'const char *'
    |-ImplicitCastExpr 0x55fb421e7fd8 <col:22> 'const char *(*)(const char *, size_t, const char *, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421e7da0 <col:22> 'const char *(const char *, size_t, const char *, size_t)' Function 0x55fb421e3ae0 'lmemfind' 'const char *(const char *, size_t, const char *, size_t)'
    |-BinaryOperator 0x55fb421e7e48 <col:31, col:33> 'const char *' '+'
    | |-ImplicitCastExpr 0x55fb421e7e18 <col:31> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x55fb421e7dc8 <col:31> 'const char *' lvalue Var 0x55fb421e6f30 's' 'const char *'
    | `-ImplicitCastExpr 0x55fb421e7e30 <col:33> 'ptrdiff_t':'long' <LValueToRValue>
    |   `-DeclRefExpr 0x55fb421e7df0 <col:33> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
    |-BinaryOperator 0x55fb421e7f08 <col:39, col:42> 'unsigned long' '-'
    | |-ImplicitCastExpr 0x55fb421e7ec0 <col:39> 'size_t':'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x55fb421e7e70 <col:39> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
    | `-ImplicitCastExpr 0x55fb421e7ef0 <col:42> 'unsigned long' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fb421e7ed8 <col:42> 'ptrdiff_t':'long' <LValueToRValue>
    |     `-DeclRefExpr 0x55fb421e7e98 <col:42> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
    |-ImplicitCastExpr 0x55fb421e8038 <col:48> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421e7f30 <col:48> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
    `-ImplicitCastExpr 0x55fb421e8050 <col:51> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55fb421e7f58 <col:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
const char *s2 = lmemfind(s + init, l1 - init, p, l2);
  20: DeclRefExpr 0x55fb421e8080 <lstrlib.c:506:9> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
s2
  21: ImplicitCastExpr 0x55fb421e80a8 <lstrlib.c:506:9> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e8080 <col:9> 'const char *' lvalue Var 0x55fb421e7d40 's2' 'const char *'
[B15.20] (ImplicitCastExpr, LValueToRValue, const char *)
   T: if [B15.21]
   Preds (2): B16 B17
   Succs (2): B14 B1

 [B16]
   1: DeclRefExpr 0x55fb421e7a30 <lstrlib.c:503:7> 'char *(const char *, const char *)' Function 0x55fb42165508 'strpbrk' 'char *(const char *, const char *)'
strpbrk
   2: ImplicitCastExpr 0x55fb421e7b48 <lstrlib.c:503:7> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e7a30 <col:7> 'char *(const char *, const char *)' Function 0x55fb42165508 'strpbrk' 'char *(const char *, const char *)'
[B16.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *, const char *))
   3: DeclRefExpr 0x55fb421e7a58 <lstrlib.c:503:15> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
p
   4: ImplicitCastExpr 0x55fb421e7b98 <lstrlib.c:503:15> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7a58 <col:15> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
[B16.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x55fb421e7ab8 <lstrlib.c:183:18> 'char [11]' lvalue "^$*+?.([%-"
"^$*+?.([%-"
   6: ImplicitCastExpr 0x55fb421e7bb0 <lstrlib.c:183:18> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55fb421e7ab8 <col:18> 'char [11]' lvalue "^$*+?.([%-"
[B16.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55fb421e7bc8 <lstrlib.c:183:18> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55fb421e7bb0 <col:18> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55fb421e7ab8 <col:18> 'char [11]' lvalue "^$*+?.([%-"
[B16.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x55fb421e7b60 <lstrlib.c:503:7, col:26> 'char *'
|-ImplicitCastExpr 0x55fb421e7b48 <col:7> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e7a30 <col:7> 'char *(const char *, const char *)' Function 0x55fb42165508 'strpbrk' 'char *(const char *, const char *)'
|-ImplicitCastExpr 0x55fb421e7b98 <col:15> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7a58 <col:15> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
`-ImplicitCastExpr 0x55fb421e7bc8 <line:183:18> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55fb421e7bb0 <col:18> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55fb421e7ab8 <col:18> 'char [11]' lvalue "^$*+?.([%-"
[B16.2]([B16.4], [B16.7])
   9: IntegerLiteral 0x55fb421e7be0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  10: CStyleCastExpr 0x55fb421e7c18 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421e7be0 <col:24> 'int' 0
(void *)[B16.9] (CStyleCastExpr, NullToPointer, void *)
  11: ImplicitCastExpr 0x55fb421e7c60 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
`-ParenExpr 0x55fb421e7c40 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb421e7c18 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421e7be0 <col:24> 'int' 0
([B16.10]) (ImplicitCastExpr, BitCast, char *)
  12: BinaryOperator 0x55fb421e7c78 <lstrlib.c:503:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-CallExpr 0x55fb421e7b60 <lstrlib.c:503:7, col:26> 'char *'
| |-ImplicitCastExpr 0x55fb421e7b48 <col:7> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55fb421e7a30 <col:7> 'char *(const char *, const char *)' Function 0x55fb42165508 'strpbrk' 'char *(const char *, const char *)'
| |-ImplicitCastExpr 0x55fb421e7b98 <col:15> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421e7a58 <col:15> 'const char *' lvalue Var 0x55fb421e70e8 'p' 'const char *'
| `-ImplicitCastExpr 0x55fb421e7bc8 <line:183:18> 'const char *' <BitCast>
|   `-ImplicitCastExpr 0x55fb421e7bb0 <col:18> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x55fb421e7ab8 <col:18> 'char [11]' lvalue "^$*+?.([%-"
`-ImplicitCastExpr 0x55fb421e7c60 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
  `-ParenExpr 0x55fb421e7c40 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55fb421e7c18 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55fb421e7be0 <col:24> 'int' 0
[B16.8] == [B16.11]
   T: if [B18.2] && ([B17.6] || [B16.12])
   Preds (1): B17
   Succs (2): B15 B13

 [B17]
   1: DeclRefExpr 0x55fb421e78f8 <lstrlib.c:502:16> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42191958 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_toboolean
   2: ImplicitCastExpr 0x55fb421e79c8 <lstrlib.c:502:16> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e78f8 <col:16> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42191958 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
[B17.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x55fb421e7920 <lstrlib.c:502:30> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421e7a18 <lstrlib.c:502:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7920 <col:30> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B17.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55fb421e7948 <lstrlib.c:502:33> 'int' 4
4
   6: CallExpr 0x55fb421e79e0 <lstrlib.c:502:16, col:34> 'int'
|-ImplicitCastExpr 0x55fb421e79c8 <col:16> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e78f8 <col:16> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55fb42191958 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421e7a18 <col:30> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7920 <col:30> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
`-IntegerLiteral 0x55fb421e7948 <col:33> 'int' 4
[B17.2]([B17.4], [B17.5])
   T: [B17.6] || ...
   Preds (1): B18
   Succs (2): B15 B16

 [B18]
   1: DeclRefExpr 0x55fb421e78d0 <lstrlib.c:502:7> 'int' lvalue ParmVar 0x55fb421e6cc0 'find' 'int'
find
   2: ImplicitCastExpr 0x55fb421e7ce8 <lstrlib.c:502:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421e78d0 <col:7> 'int' lvalue ParmVar 0x55fb421e6cc0 'find' 'int'
[B18.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B18.2] && ...
   Preds (3): B19 B20 B21
   Succs (2): B17 B13

 [B19]
   1: DeclRefExpr 0x55fb421e77c0 <lstrlib.c:501:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
l1
   2: ImplicitCastExpr 0x55fb421e77f8 <lstrlib.c:501:51> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e77c0 <col:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B19.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: CStyleCastExpr 0x55fb421e7810 <lstrlib.c:501:40, col:51> 'ptrdiff_t':'long' <IntegralCast>
`-ImplicitCastExpr 0x55fb421e77f8 <col:51> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e77c0 <col:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
(ptrdiff_t)[B19.2] (CStyleCastExpr, IntegralCast, ptrdiff_t)
   4: DeclRefExpr 0x55fb421e7798 <lstrlib.c:501:33> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
init
   5: BinaryOperator 0x55fb421e7838 <lstrlib.c:501:33, col:51> 'ptrdiff_t':'long' '='
|-DeclRefExpr 0x55fb421e7798 <col:33> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
`-CStyleCastExpr 0x55fb421e7810 <col:40, col:51> 'ptrdiff_t':'long' <IntegralCast>
  `-ImplicitCastExpr 0x55fb421e77f8 <col:51> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55fb421e77c0 <col:51> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B19.4] = [B19.3]
   Preds (1): B20
   Succs (1): B18

 [B20]
   1: DeclRefExpr 0x55fb421e7668 <lstrlib.c:501:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
init
   2: ImplicitCastExpr 0x55fb421e76f0 <lstrlib.c:501:20, col:25> 'ptrdiff_t':'long' <LValueToRValue>
`-ParenExpr 0x55fb421e76d0 <col:20, col:25> 'ptrdiff_t':'long' lvalue
  `-DeclRefExpr 0x55fb421e7668 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
([B20.1]) (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   3: CStyleCastExpr 0x55fb421e7708 <lstrlib.c:501:12, col:25> 'size_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55fb421e76f0 <col:20, col:25> 'ptrdiff_t':'long' <LValueToRValue>
  `-ParenExpr 0x55fb421e76d0 <col:20, col:25> 'ptrdiff_t':'long' lvalue
    `-DeclRefExpr 0x55fb421e7668 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
(size_t)[B20.2] (CStyleCastExpr, IntegralCast, size_t)
   4: DeclRefExpr 0x55fb421e7730 <lstrlib.c:501:29> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
l1
   5: ImplicitCastExpr 0x55fb421e7758 <lstrlib.c:501:29> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7730 <col:29> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B20.4] (ImplicitCastExpr, LValueToRValue, size_t)
   6: BinaryOperator 0x55fb421e7770 <lstrlib.c:501:12, col:29> 'int' '>'
|-CStyleCastExpr 0x55fb421e7708 <col:12, col:25> 'size_t':'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55fb421e76f0 <col:20, col:25> 'ptrdiff_t':'long' <LValueToRValue>
|   `-ParenExpr 0x55fb421e76d0 <col:20, col:25> 'ptrdiff_t':'long' lvalue
|     `-DeclRefExpr 0x55fb421e7668 <col:21> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421e7758 <col:29> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e7730 <col:29> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B20.3] > [B20.5]
   T: if [B20.6]
   Preds (1): B22
   Succs (2): B19 B18

 [B21]
   1: IntegerLiteral 0x55fb421e7608 <lstrlib.c:500:24> 'int' 0
0
   2: ImplicitCastExpr 0x55fb421e7628 <lstrlib.c:500:24> 'ptrdiff_t':'long' <IntegralCast>
`-IntegerLiteral 0x55fb421e7608 <col:24> 'int' 0
[B21.1] (ImplicitCastExpr, IntegralCast, ptrdiff_t)
   3: DeclRefExpr 0x55fb421e75e0 <lstrlib.c:500:17> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
init
   4: BinaryOperator 0x55fb421e7640 <lstrlib.c:500:17, col:24> 'ptrdiff_t':'long' '='
|-DeclRefExpr 0x55fb421e75e0 <col:17> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421e7628 <col:24> 'ptrdiff_t':'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421e7608 <col:24> 'int' 0
[B21.3] = [B21.2]
   Preds (1): B22
   Succs (1): B18

 [B22]
   1: DeclStmt 0x55fb42215200 <lstrlib.c:496:10>col:10
`-VarDecl 0x55fb421e6e18 <col:3, col:10> col:10 used l1 'size_t':'unsigned long'
size_t l1;
   2: DeclStmt 0x55fb422151e8 <lstrlib.c:496:14>col:14
`-VarDecl 0x55fb421e6e88 <col:3, col:14> col:14 used l2 'size_t':'unsigned long'
size_t l2;
   3: DeclRefExpr 0x55fb421e6f90 <lstrlib.c:497:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   4: ImplicitCastExpr 0x55fb421e7048 <lstrlib.c:497:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e6f90 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B22.3] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   5: DeclRefExpr 0x55fb421e6fb8 <lstrlib.c:497:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55fb421e70a0 <lstrlib.c:497:37> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e6fb8 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B22.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x55fb421e6fe0 <lstrlib.c:497:40> 'int' 1
1
   8: DeclRefExpr 0x55fb421e7000 <lstrlib.c:497:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
l1
   9: UnaryOperator 0x55fb421e7028 <lstrlib.c:497:43, col:44> 'size_t *' prefix '&'
`-DeclRefExpr 0x55fb421e7000 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
&[B22.8]
  10: CallExpr 0x55fb421e7060 <lstrlib.c:497:19, col:46> 'const char *'
|-ImplicitCastExpr 0x55fb421e7048 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e6f90 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55fb421e70a0 <col:37> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e6fb8 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
|-IntegerLiteral 0x55fb421e6fe0 <col:40> 'int' 1
`-UnaryOperator 0x55fb421e7028 <col:43, col:44> 'size_t *' prefix '&'
  `-DeclRefExpr 0x55fb421e7000 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B22.4]([B22.6], [B22.7], [B22.9])
  11: DeclStmt 0x55fb421e70b8 <lstrlib.c:497:3, col:47>col:15
`-VarDecl 0x55fb421e6f30 <col:3, col:46> col:15 used s 'const char *' cinit
  `-CallExpr 0x55fb421e7060 <col:19, col:46> 'const char *'
    |-ImplicitCastExpr 0x55fb421e7048 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421e6f90 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
    |-ImplicitCastExpr 0x55fb421e70a0 <col:37> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421e6fb8 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
    |-IntegerLiteral 0x55fb421e6fe0 <col:40> 'int' 1
    `-UnaryOperator 0x55fb421e7028 <col:43, col:44> 'size_t *' prefix '&'
      `-DeclRefExpr 0x55fb421e7000 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
const char *s = luaL_checklstring(L, 1, &l1);
  12: DeclRefExpr 0x55fb421e7148 <lstrlib.c:498:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
  13: ImplicitCastExpr 0x55fb421e7200 <lstrlib.c:498:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e7148 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B22.12] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
  14: DeclRefExpr 0x55fb421e7170 <lstrlib.c:498:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
  15: ImplicitCastExpr 0x55fb421e7258 <lstrlib.c:498:37> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7170 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B22.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: IntegerLiteral 0x55fb421e7198 <lstrlib.c:498:40> 'int' 2
2
  17: DeclRefExpr 0x55fb421e71b8 <lstrlib.c:498:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
l2
  18: UnaryOperator 0x55fb421e71e0 <lstrlib.c:498:43, col:44> 'size_t *' prefix '&'
`-DeclRefExpr 0x55fb421e71b8 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
&[B22.17]
  19: CallExpr 0x55fb421e7218 <lstrlib.c:498:19, col:46> 'const char *'
|-ImplicitCastExpr 0x55fb421e7200 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e7148 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55fb421e7258 <col:37> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7170 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
|-IntegerLiteral 0x55fb421e7198 <col:40> 'int' 2
`-UnaryOperator 0x55fb421e71e0 <col:43, col:44> 'size_t *' prefix '&'
  `-DeclRefExpr 0x55fb421e71b8 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
[B22.13]([B22.15], [B22.16], [B22.18])
  20: DeclStmt 0x55fb421e7270 <lstrlib.c:498:3, col:47>col:15
`-VarDecl 0x55fb421e70e8 <col:3, col:46> col:15 used p 'const char *' cinit
  `-CallExpr 0x55fb421e7218 <col:19, col:46> 'const char *'
    |-ImplicitCastExpr 0x55fb421e7200 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421e7148 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
    |-ImplicitCastExpr 0x55fb421e7258 <col:37> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421e7170 <col:37> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
    |-IntegerLiteral 0x55fb421e7198 <col:40> 'int' 2
    `-UnaryOperator 0x55fb421e71e0 <col:43, col:44> 'size_t *' prefix '&'
      `-DeclRefExpr 0x55fb421e71b8 <col:44> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e88 'l2' 'size_t':'unsigned long'
const char *p = luaL_checklstring(L, 2, &l2);
  21: DeclRefExpr 0x55fb421e72f8 <lstrlib.c:499:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
posrelat
  22: ImplicitCastExpr 0x55fb421e7460 <lstrlib.c:499:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e72f8 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
[B22.21] (ImplicitCastExpr, FunctionToPointerDecay, ptrdiff_t (*)(ptrdiff_t, size_t))
  23: DeclRefExpr 0x55fb421e7320 <lstrlib.c:499:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
luaL_optinteger
  24: ImplicitCastExpr 0x55fb421e73b0 <lstrlib.c:499:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421e7320 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
[B22.23] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int, lua_Integer))
  25: DeclRefExpr 0x55fb421e7348 <lstrlib.c:499:45> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
L
  26: ImplicitCastExpr 0x55fb421e7408 <lstrlib.c:499:45> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7348 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
[B22.25] (ImplicitCastExpr, LValueToRValue, lua_State *)
  27: IntegerLiteral 0x55fb421e7370 <lstrlib.c:499:48> 'int' 3
3
  28: IntegerLiteral 0x55fb421e7390 <lstrlib.c:499:51> 'int' 1
1
  29: ImplicitCastExpr 0x55fb421e7420 <lstrlib.c:499:51> 'lua_Integer':'long' <IntegralCast>
`-IntegerLiteral 0x55fb421e7390 <col:51> 'int' 1
[B22.28] (ImplicitCastExpr, IntegralCast, lua_Integer)
  30: CallExpr 0x55fb421e73c8 <lstrlib.c:499:29, col:52> 'lua_Integer':'long'
|-ImplicitCastExpr 0x55fb421e73b0 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e7320 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|-ImplicitCastExpr 0x55fb421e7408 <col:45> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7348 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
|-IntegerLiteral 0x55fb421e7370 <col:48> 'int' 3
`-ImplicitCastExpr 0x55fb421e7420 <col:51> 'lua_Integer':'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421e7390 <col:51> 'int' 1
[B22.24]([B22.26], [B22.27], [B22.29])
  31: DeclRefExpr 0x55fb421e7438 <lstrlib.c:499:55> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
l1
  32: ImplicitCastExpr 0x55fb421e74b0 <lstrlib.c:499:55> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7438 <col:55> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B22.31] (ImplicitCastExpr, LValueToRValue, size_t)
  33: CallExpr 0x55fb421e7478 <lstrlib.c:499:20, col:57> 'ptrdiff_t':'long'
|-ImplicitCastExpr 0x55fb421e7460 <col:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421e72f8 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
|-CallExpr 0x55fb421e73c8 <col:29, col:52> 'lua_Integer':'long'
| |-ImplicitCastExpr 0x55fb421e73b0 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55fb421e7320 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
| |-ImplicitCastExpr 0x55fb421e7408 <col:45> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55fb421e7348 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
| |-IntegerLiteral 0x55fb421e7370 <col:48> 'int' 3
| `-ImplicitCastExpr 0x55fb421e7420 <col:51> 'lua_Integer':'long' <IntegralCast>
|   `-IntegerLiteral 0x55fb421e7390 <col:51> 'int' 1
`-ImplicitCastExpr 0x55fb421e74b0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421e7438 <col:55> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
[B22.22]([B22.30], [B22.32])
  34: IntegerLiteral 0x55fb421e74c8 <lstrlib.c:499:61> 'int' 1
1
  35: ImplicitCastExpr 0x55fb421e74e8 <lstrlib.c:499:61> 'long' <IntegralCast>
`-IntegerLiteral 0x55fb421e74c8 <col:61> 'int' 1
[B22.34] (ImplicitCastExpr, IntegralCast, long)
  36: BinaryOperator 0x55fb421e7500 <lstrlib.c:499:20, col:61> 'long' '-'
|-CallExpr 0x55fb421e7478 <col:20, col:57> 'ptrdiff_t':'long'
| |-ImplicitCastExpr 0x55fb421e7460 <col:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55fb421e72f8 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
| |-CallExpr 0x55fb421e73c8 <col:29, col:52> 'lua_Integer':'long'
| | |-ImplicitCastExpr 0x55fb421e73b0 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| | | `-DeclRefExpr 0x55fb421e7320 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
| | |-ImplicitCastExpr 0x55fb421e7408 <col:45> 'lua_State *' <LValueToRValue>
| | | `-DeclRefExpr 0x55fb421e7348 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
| | |-IntegerLiteral 0x55fb421e7370 <col:48> 'int' 3
| | `-ImplicitCastExpr 0x55fb421e7420 <col:51> 'lua_Integer':'long' <IntegralCast>
| |   `-IntegerLiteral 0x55fb421e7390 <col:51> 'int' 1
| `-ImplicitCastExpr 0x55fb421e74b0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55fb421e7438 <col:55> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55fb421e74e8 <col:61> 'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421e74c8 <col:61> 'int' 1
[B22.33] - [B22.35]
  37: DeclStmt 0x55fb421e7528 <lstrlib.c:499:3, col:62>col:13
`-VarDecl 0x55fb421e7298 <col:3, col:61> col:13 used init 'ptrdiff_t':'long' cinit
  `-BinaryOperator 0x55fb421e7500 <col:20, col:61> 'long' '-'
    |-CallExpr 0x55fb421e7478 <col:20, col:57> 'ptrdiff_t':'long'
    | |-ImplicitCastExpr 0x55fb421e7460 <col:20> 'ptrdiff_t (*)(ptrdiff_t, size_t)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fb421e72f8 <col:20> 'ptrdiff_t (ptrdiff_t, size_t)' Function 0x55fb421b1120 'posrelat' 'ptrdiff_t (ptrdiff_t, size_t)'
    | |-CallExpr 0x55fb421e73c8 <col:29, col:52> 'lua_Integer':'long'
    | | |-ImplicitCastExpr 0x55fb421e73b0 <col:29> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x55fb421e7320 <col:29> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x55fb421a63b8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
    | | |-ImplicitCastExpr 0x55fb421e7408 <col:45> 'lua_State *' <LValueToRValue>
    | | | `-DeclRefExpr 0x55fb421e7348 <col:45> 'lua_State *' lvalue ParmVar 0x55fb421e6c48 'L' 'lua_State *'
    | | |-IntegerLiteral 0x55fb421e7370 <col:48> 'int' 3
    | | `-ImplicitCastExpr 0x55fb421e7420 <col:51> 'lua_Integer':'long' <IntegralCast>
    | |   `-IntegerLiteral 0x55fb421e7390 <col:51> 'int' 1
    | `-ImplicitCastExpr 0x55fb421e74b0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x55fb421e7438 <col:55> 'size_t':'unsigned long' lvalue Var 0x55fb421e6e18 'l1' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55fb421e74e8 <col:61> 'long' <IntegralCast>
      `-IntegerLiteral 0x55fb421e74c8 <col:61> 'int' 1
ptrdiff_t init = posrelat(luaL_optinteger(L, 3, 1), l1) - 1;
  38: DeclRefExpr 0x55fb421e7540 <lstrlib.c:500:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
init
  39: ImplicitCastExpr 0x55fb421e7588 <lstrlib.c:500:7> 'ptrdiff_t':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421e7540 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
[B22.38] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  40: IntegerLiteral 0x55fb421e7568 <lstrlib.c:500:14> 'int' 0
0
  41: ImplicitCastExpr 0x55fb421e75a0 <lstrlib.c:500:14> 'long' <IntegralCast>
`-IntegerLiteral 0x55fb421e7568 <col:14> 'int' 0
[B22.40] (ImplicitCastExpr, IntegralCast, long)
  42: BinaryOperator 0x55fb421e75b8 <lstrlib.c:500:7, col:14> 'int' '<'
|-ImplicitCastExpr 0x55fb421e7588 <col:7> 'ptrdiff_t':'long' <LValueToRValue>
| `-DeclRefExpr 0x55fb421e7540 <col:7> 'ptrdiff_t':'long' lvalue Var 0x55fb421e7298 'init' 'ptrdiff_t':'long'
`-ImplicitCastExpr 0x55fb421e75a0 <col:14> 'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421e7568 <col:14> 'int' 0
[B22.39] < [B22.41]
   T: if [B22.42]
   Preds (1): B23
   Succs (2): B21 B20

 [B0 (EXIT)]
   Preds (4): B1 B5 B6 B14
