static void getfunc(lua_State *L, int opt)
 [B12 (ENTRY)]
   Succs (1): B11

 [B1]
   1: DeclRefExpr 0x562da28142e8 <lbaselib.c:127:7> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x562da2814400 <lbaselib.c:127:7> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da28142e8 <col:7> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x562da2814310 <lbaselib.c:127:18> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2814458 <lbaselib.c:127:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2814310 <col:18> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x562da2814378 <lbaselib.c:127:21> 'char [50]' lvalue "no function environment for tail call at level %d"
"no function environment for tail call at level %d"
   6: ImplicitCastExpr 0x562da2814470 <lbaselib.c:127:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2814378 <col:21> 'char [50]' lvalue "no function environment for tail call at level %d"
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x562da2814488 <lbaselib.c:127:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2814470 <col:21> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2814378 <col:21> 'char [50]' lvalue "no function environment for tail call at level %d"
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x562da28143d8 <lbaselib.c:128:21> 'int' lvalue Var 0x562da28133c8 'level' 'int'
level
   9: ImplicitCastExpr 0x562da28144a0 <lbaselib.c:128:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da28143d8 <col:21> 'int' lvalue Var 0x562da28133c8 'level' 'int'
[B1.8] (ImplicitCastExpr, LValueToRValue, int)
  10: CallExpr 0x562da2814418 <lbaselib.c:127:7, line:128:26> 'int'
|-ImplicitCastExpr 0x562da2814400 <line:127:7> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da28142e8 <col:7> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x562da2814458 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2814310 <col:18> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
|-ImplicitCastExpr 0x562da2814488 <col:21> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2814470 <col:21> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da2814378 <col:21> 'char [50]' lvalue "no function environment for tail call at level %d"
`-ImplicitCastExpr 0x562da28144a0 <line:128:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da28143d8 <col:21> 'int' lvalue Var 0x562da28133c8 'level' 'int'
[B1.2]([B1.4], [B1.7], [B1.9])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x562da2813fa8 <lbaselib.c:125:5> 'int (lua_State *, const char *, lua_Debug *)' Function 0x562da27f74c8 'lua_getinfo' 'int (lua_State *, const char *, lua_Debug *)'
lua_getinfo
   2: ImplicitCastExpr 0x562da28140c8 <lbaselib.c:125:5> 'int (*)(lua_State *, const char *, lua_Debug *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2813fa8 <col:5> 'int (lua_State *, const char *, lua_Debug *)' Function 0x562da27f74c8 'lua_getinfo' 'int (lua_State *, const char *, lua_Debug *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, lua_Debug *))
   3: DeclRefExpr 0x562da2813fd0 <lbaselib.c:125:17> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2814120 <lbaselib.c:125:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2813fd0 <col:17> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x562da2813ff8 <lbaselib.c:125:20> 'char [2]' lvalue "f"
"f"
   6: ImplicitCastExpr 0x562da2814138 <lbaselib.c:125:20> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2813ff8 <col:20> 'char [2]' lvalue "f"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x562da2814150 <lbaselib.c:125:20> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2814138 <col:20> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2813ff8 <col:20> 'char [2]' lvalue "f"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x562da2814028 <lbaselib.c:125:26> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da2813338 'ar' 'lua_Debug':'struct lua_Debug'
ar
   9: UnaryOperator 0x562da2814050 <lbaselib.c:125:25, col:26> 'lua_Debug *' prefix '&'
`-DeclRefExpr 0x562da2814028 <col:26> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da2813338 'ar' 'lua_Debug':'struct lua_Debug'
&[B2.8]
  10: CallExpr 0x562da28140e0 <lbaselib.c:125:5, col:28> 'int'
|-ImplicitCastExpr 0x562da28140c8 <col:5> 'int (*)(lua_State *, const char *, lua_Debug *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2813fa8 <col:5> 'int (lua_State *, const char *, lua_Debug *)' Function 0x562da27f74c8 'lua_getinfo' 'int (lua_State *, const char *, lua_Debug *)'
|-ImplicitCastExpr 0x562da2814120 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2813fd0 <col:17> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
|-ImplicitCastExpr 0x562da2814150 <col:20> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2814138 <col:20> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da2813ff8 <col:20> 'char [2]' lvalue "f"
`-UnaryOperator 0x562da2814050 <col:25, col:26> 'lua_Debug *' prefix '&'
  `-DeclRefExpr 0x562da2814028 <col:26> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da2813338 'ar' 'lua_Debug':'struct lua_Debug'
[B2.2]([B2.4], [B2.7], [B2.9])
  11: DeclRefExpr 0x562da2814168 <./lua.h:267:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
  12: ImplicitCastExpr 0x562da2814218 <./lua.h:267:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2814168 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B2.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  13: DeclRefExpr 0x562da2814190 <lbaselib.c:126:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x562da2814268 <lbaselib.c:126:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2814190 <col:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B2.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: IntegerLiteral 0x562da28141b8 <lbaselib.c:126:23> 'int' 1
1
  16: UnaryOperator 0x562da28141d8 <lbaselib.c:126:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x562da28141b8 <col:23> 'int' 1
-[B2.15]
  17: CallExpr 0x562da2814230 <./lua.h:267:26, col:41> 'int'
|-ImplicitCastExpr 0x562da2814218 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2814168 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da2814268 <lbaselib.c:126:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2814190 <col:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
`-ParenExpr 0x562da28141f8 <./lua.h:267:38, col:40> 'int'
  `-UnaryOperator 0x562da28141d8 <lbaselib.c:126:22, col:23> 'int' prefix '-'
    `-IntegerLiteral 0x562da28141b8 <col:23> 'int' 1
[B2.12]([B2.14], ([B2.16]))
  18: IntegerLiteral 0x562da2814280 <./lua.h:74:19> 'int' 0
0
  19: BinaryOperator 0x562da28142a0 <./lua.h:267:26, line:74:19> 'int' '=='
|-CallExpr 0x562da2814230 <line:267:26, col:41> 'int'
| |-ImplicitCastExpr 0x562da2814218 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da2814168 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x562da2814268 <lbaselib.c:126:19> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x562da2814190 <col:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
| `-ParenExpr 0x562da28141f8 <./lua.h:267:38, col:40> 'int'
|   `-UnaryOperator 0x562da28141d8 <lbaselib.c:126:22, col:23> 'int' prefix '-'
|     `-IntegerLiteral 0x562da28141b8 <col:23> 'int' 1
`-IntegerLiteral 0x562da2814280 <./lua.h:74:19> 'int' 0
[B2.17] == [B2.18]
   T: if ([B2.19])
   Preds (2): B3 B4
   Succs (2): B1 B0

 [B3]
   1: DeclRefExpr 0x562da2813de8 <lbaselib.c:124:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x562da2813ed0 <lbaselib.c:124:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2813de8 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x562da2813e10 <lbaselib.c:124:21> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2813f28 <lbaselib.c:124:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2813e10 <col:21> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2813e38 <lbaselib.c:124:24> 'int' 1
1
   6: StringLiteral 0x562da2813e98 <lbaselib.c:124:27> 'char [14]' lvalue "invalid level"
"invalid level"
   7: ImplicitCastExpr 0x562da2813f40 <lbaselib.c:124:27> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2813e98 <col:27> 'char [14]' lvalue "invalid level"
[B3.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x562da2813f58 <lbaselib.c:124:27> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2813f40 <col:27> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2813e98 <col:27> 'char [14]' lvalue "invalid level"
[B3.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x562da2813ee8 <lbaselib.c:124:7, col:42> 'int'
|-ImplicitCastExpr 0x562da2813ed0 <col:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2813de8 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x562da2813f28 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2813e10 <col:21> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
|-IntegerLiteral 0x562da2813e38 <col:24> 'int' 1
`-ImplicitCastExpr 0x562da2813f58 <col:27> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562da2813f40 <col:27> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x562da2813e98 <col:27> 'char [14]' lvalue "invalid level"
[B3.2]([B3.4], [B3.5], [B3.8])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: BinaryOperator 0x562da2813aa0 <./lauxlib.h:101:11, col:58> 'int' '||'
|-ParenExpr 0x562da28138a8 <col:11, col:16> 'int'
| `-BinaryOperator 0x562da2813880 <lbaselib.c:122:22, col:31> 'int' '>='
|   |-ImplicitCastExpr 0x562da2813868 <col:22> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x562da2813820 <col:22> 'int' lvalue Var 0x562da28133c8 'level' 'int'
|   `-IntegerLiteral 0x562da2813848 <col:31> 'int' 0
`-CallExpr 0x562da2813a18 <./lauxlib.h:101:21, col:58> 'int'
  |-ImplicitCastExpr 0x562da2813a00 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da28138c8 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x562da2813a58 <lbaselib.c:122:19> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da28138f0 <col:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
  |-ParenExpr 0x562da2813938 <./lauxlib.h:101:38, col:45> 'int'
  | `-IntegerLiteral 0x562da2813918 <lbaselib.c:122:34> 'int' 1
  `-ImplicitCastExpr 0x562da2813a88 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x562da2813a70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
      `-ParenExpr 0x562da28139e0 <col:48, col:57> 'char [27]' lvalue
        `-StringLiteral 0x562da2813998 <lbaselib.c:122:37> 'char [27]' lvalue "level must be non-negative"
([B6.6]) || [B5.9]
   2: CStyleCastExpr 0x562da2813bb0 <./lauxlib.h:101:4, col:59> 'void' <ToVoid>
`-ParenExpr 0x562da2813b90 <col:10, col:59> 'int'
  `-BinaryOperator 0x562da2813aa0 <col:11, col:58> 'int' '||'
    |-ParenExpr 0x562da28138a8 <col:11, col:16> 'int'
    | `-BinaryOperator 0x562da2813880 <lbaselib.c:122:22, col:31> 'int' '>='
    |   |-ImplicitCastExpr 0x562da2813868 <col:22> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562da2813820 <col:22> 'int' lvalue Var 0x562da28133c8 'level' 'int'
    |   `-IntegerLiteral 0x562da2813848 <col:31> 'int' 0
    `-CallExpr 0x562da2813a18 <./lauxlib.h:101:21, col:58> 'int'
      |-ImplicitCastExpr 0x562da2813a00 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da28138c8 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
      |-ImplicitCastExpr 0x562da2813a58 <lbaselib.c:122:19> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x562da28138f0 <col:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
      |-ParenExpr 0x562da2813938 <./lauxlib.h:101:38, col:45> 'int'
      | `-IntegerLiteral 0x562da2813918 <lbaselib.c:122:34> 'int' 1
      `-ImplicitCastExpr 0x562da2813a88 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
        `-ImplicitCastExpr 0x562da2813a70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
          `-ParenExpr 0x562da28139e0 <col:48, col:57> 'char [27]' lvalue
            `-StringLiteral 0x562da2813998 <lbaselib.c:122:37> 'char [27]' lvalue "level must be non-negative"
(void)([B4.1]) (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x562da2813bf8 <lbaselib.c:123:9> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
lua_getstack
   4: ImplicitCastExpr 0x562da2813d18 <lbaselib.c:123:9> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2813bf8 <col:9> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
[B4.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, lua_Debug *))
   5: DeclRefExpr 0x562da2813c20 <lbaselib.c:123:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x562da2813d70 <lbaselib.c:123:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2813c20 <col:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B4.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x562da2813c48 <lbaselib.c:123:25> 'int' lvalue Var 0x562da28133c8 'level' 'int'
level
   8: ImplicitCastExpr 0x562da2813d88 <lbaselib.c:123:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2813c48 <col:25> 'int' lvalue Var 0x562da28133c8 'level' 'int'
[B4.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x562da2813c70 <lbaselib.c:123:33> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da2813338 'ar' 'lua_Debug':'struct lua_Debug'
ar
  10: UnaryOperator 0x562da2813c98 <lbaselib.c:123:32, col:33> 'lua_Debug *' prefix '&'
`-DeclRefExpr 0x562da2813c70 <col:33> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da2813338 'ar' 'lua_Debug':'struct lua_Debug'
&[B4.9]
  11: CallExpr 0x562da2813d30 <lbaselib.c:123:9, col:35> 'int'
|-ImplicitCastExpr 0x562da2813d18 <col:9> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2813bf8 <col:9> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
|-ImplicitCastExpr 0x562da2813d70 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2813c20 <col:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
|-ImplicitCastExpr 0x562da2813d88 <col:25> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da2813c48 <col:25> 'int' lvalue Var 0x562da28133c8 'level' 'int'
`-UnaryOperator 0x562da2813c98 <col:32, col:33> 'lua_Debug *' prefix '&'
  `-DeclRefExpr 0x562da2813c70 <col:33> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da2813338 'ar' 'lua_Debug':'struct lua_Debug'
[B4.4]([B4.6], [B4.8], [B4.10])
  12: IntegerLiteral 0x562da2813da0 <lbaselib.c:123:40> 'int' 0
0
  13: BinaryOperator 0x562da2813dc0 <lbaselib.c:123:9, col:40> 'int' '=='
|-CallExpr 0x562da2813d30 <col:9, col:35> 'int'
| |-ImplicitCastExpr 0x562da2813d18 <col:9> 'int (*)(lua_State *, int, lua_Debug *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da2813bf8 <col:9> 'int (lua_State *, int, lua_Debug *)' Function 0x562da27f71d8 'lua_getstack' 'int (lua_State *, int, lua_Debug *)'
| |-ImplicitCastExpr 0x562da2813d70 <col:22> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x562da2813c20 <col:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
| |-ImplicitCastExpr 0x562da2813d88 <col:25> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x562da2813c48 <col:25> 'int' lvalue Var 0x562da28133c8 'level' 'int'
| `-UnaryOperator 0x562da2813c98 <col:32, col:33> 'lua_Debug *' prefix '&'
|   `-DeclRefExpr 0x562da2813c70 <col:33> 'lua_Debug':'struct lua_Debug' lvalue Var 0x562da2813338 'ar' 'lua_Debug':'struct lua_Debug'
`-IntegerLiteral 0x562da2813da0 <col:40> 'int' 0
[B4.11] == [B4.12]
   T: if [B4.13]
   Preds (2): B5 B6
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x562da28138c8 <./lauxlib.h:101:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x562da2813a00 <./lauxlib.h:101:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da28138c8 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x562da28138f0 <lbaselib.c:122:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2813a58 <lbaselib.c:122:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da28138f0 <col:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2813918 <lbaselib.c:122:34> 'int' 1
1
   6: StringLiteral 0x562da2813998 <lbaselib.c:122:37> 'char [27]' lvalue "level must be non-negative"
"level must be non-negative"
   7: ImplicitCastExpr 0x562da2813a70 <./lauxlib.h:101:48, col:57> 'char *' <ArrayToPointerDecay>
`-ParenExpr 0x562da28139e0 <col:48, col:57> 'char [27]' lvalue
  `-StringLiteral 0x562da2813998 <lbaselib.c:122:37> 'char [27]' lvalue "level must be non-negative"
([B5.6]) (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x562da2813a88 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2813a70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
  `-ParenExpr 0x562da28139e0 <col:48, col:57> 'char [27]' lvalue
    `-StringLiteral 0x562da2813998 <lbaselib.c:122:37> 'char [27]' lvalue "level must be non-negative"
[B5.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x562da2813a18 <./lauxlib.h:101:21, col:58> 'int'
|-ImplicitCastExpr 0x562da2813a00 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da28138c8 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x562da2802070 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x562da2813a58 <lbaselib.c:122:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da28138f0 <col:19> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
|-ParenExpr 0x562da2813938 <./lauxlib.h:101:38, col:45> 'int'
| `-IntegerLiteral 0x562da2813918 <lbaselib.c:122:34> 'int' 1
`-ImplicitCastExpr 0x562da2813a88 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562da2813a70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
    `-ParenExpr 0x562da28139e0 <col:48, col:57> 'char [27]' lvalue
      `-StringLiteral 0x562da2813998 <lbaselib.c:122:37> 'char [27]' lvalue "level must be non-negative"
[B5.2]([B5.4], ([B5.5]), [B5.8])
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: ConditionalOperator 0x562da28137d8 <lbaselib.c:121:17, ./lauxlib.h:104:59> 'int'
|-ImplicitCastExpr 0x562da28137c0 <lbaselib.c:121:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da2813428 <col:17> 'int' lvalue ParmVar 0x562da2812fb0 'opt' 'int'
|-ParenExpr 0x562da28135e8 <./lauxlib.h:105:28, col:62> 'int'
| `-CStyleCastExpr 0x562da28135c0 <col:29, col:61> 'int' <IntegralCast>
|   `-CallExpr 0x562da2813538 <col:34, col:61> 'lua_Integer':'long'
|     |-ImplicitCastExpr 0x562da2813520 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x562da2813450 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|     |-ImplicitCastExpr 0x562da2813578 <lbaselib.c:121:35> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x562da2813478 <col:35> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
|     |-ParenExpr 0x562da28134c0 <./lauxlib.h:105:53, col:55> 'int'
|     | `-IntegerLiteral 0x562da28134a0 <lbaselib.c:121:38> 'int' 1
|     `-ImplicitCastExpr 0x562da2813590 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
|       `-ParenExpr 0x562da2813500 <col:58, col:60> 'int'
|         `-IntegerLiteral 0x562da28134e0 <lbaselib.c:121:41> 'int' 1
`-ParenExpr 0x562da28137a0 <./lauxlib.h:104:28, col:59> 'int'
  `-CStyleCastExpr 0x562da2813778 <col:29, col:58> 'int' <IntegralCast>
    `-CallExpr 0x562da2813710 <col:34, col:58> 'lua_Integer':'long'
      |-ImplicitCastExpr 0x562da28136f8 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562da2813608 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
      |-ImplicitCastExpr 0x562da2813748 <lbaselib.c:121:60> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x562da2813630 <col:60> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
      `-ParenExpr 0x562da2813678 <./lauxlib.h:104:55, col:57> 'int'
        `-IntegerLiteral 0x562da2813658 <lbaselib.c:121:63> 'int' 1
[B9.3] ? ([B7.9]) : ([B8.7])
   2: DeclStmt 0x562da2813808 <lbaselib.c:121:5, col:65>col:9
`-VarDecl 0x562da28133c8 <col:5, ./lauxlib.h:104:59> lbaselib.c:121:9 used level 'int' cinit
  `-ConditionalOperator 0x562da28137d8 <col:17, ./lauxlib.h:104:59> 'int'
    |-ImplicitCastExpr 0x562da28137c0 <lbaselib.c:121:17> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x562da2813428 <col:17> 'int' lvalue ParmVar 0x562da2812fb0 'opt' 'int'
    |-ParenExpr 0x562da28135e8 <./lauxlib.h:105:28, col:62> 'int'
    | `-CStyleCastExpr 0x562da28135c0 <col:29, col:61> 'int' <IntegralCast>
    |   `-CallExpr 0x562da2813538 <col:34, col:61> 'lua_Integer':'long'
    |     |-ImplicitCastExpr 0x562da2813520 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x562da2813450 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
    |     |-ImplicitCastExpr 0x562da2813578 <lbaselib.c:121:35> 'lua_State *' <LValueToRValue>
    |     | `-DeclRefExpr 0x562da2813478 <col:35> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
    |     |-ParenExpr 0x562da28134c0 <./lauxlib.h:105:53, col:55> 'int'
    |     | `-IntegerLiteral 0x562da28134a0 <lbaselib.c:121:38> 'int' 1
    |     `-ImplicitCastExpr 0x562da2813590 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
    |       `-ParenExpr 0x562da2813500 <col:58, col:60> 'int'
    |         `-IntegerLiteral 0x562da28134e0 <lbaselib.c:121:41> 'int' 1
    `-ParenExpr 0x562da28137a0 <./lauxlib.h:104:28, col:59> 'int'
      `-CStyleCastExpr 0x562da2813778 <col:29, col:58> 'int' <IntegralCast>
        `-CallExpr 0x562da2813710 <col:34, col:58> 'lua_Integer':'long'
          |-ImplicitCastExpr 0x562da28136f8 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x562da2813608 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
          |-ImplicitCastExpr 0x562da2813748 <lbaselib.c:121:60> 'lua_State *' <LValueToRValue>
          | `-DeclRefExpr 0x562da2813630 <col:60> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
          `-ParenExpr 0x562da2813678 <./lauxlib.h:104:55, col:57> 'int'
            `-IntegerLiteral 0x562da2813658 <lbaselib.c:121:63> 'int' 1
int level = opt ? ((int)luaL_optinteger(L, (1), (1))) : ((int)luaL_checkinteger(L, (1)));
   3: DeclRefExpr 0x562da2813820 <lbaselib.c:122:22> 'int' lvalue Var 0x562da28133c8 'level' 'int'
level
   4: ImplicitCastExpr 0x562da2813868 <lbaselib.c:122:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2813820 <col:22> 'int' lvalue Var 0x562da28133c8 'level' 'int'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x562da2813848 <lbaselib.c:122:31> 'int' 0
0
   6: BinaryOperator 0x562da2813880 <lbaselib.c:122:22, col:31> 'int' '>='
|-ImplicitCastExpr 0x562da2813868 <col:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da2813820 <col:22> 'int' lvalue Var 0x562da28133c8 'level' 'int'
`-IntegerLiteral 0x562da2813848 <col:31> 'int' 0
[B6.4] >= [B6.5]
   T: ([B6.6]) || ...
   Preds (2): B7 B8
   Succs (2): B4 B5

 [B7]
   1: DeclRefExpr 0x562da2813450 <./lauxlib.h:105:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
luaL_optinteger
   2: ImplicitCastExpr 0x562da2813520 <./lauxlib.h:105:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2813450 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int, lua_Integer))
   3: DeclRefExpr 0x562da2813478 <lbaselib.c:121:35> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2813578 <lbaselib.c:121:35> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2813478 <col:35> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da28134a0 <lbaselib.c:121:38> 'int' 1
1
   6: IntegerLiteral 0x562da28134e0 <lbaselib.c:121:41> 'int' 1
1
   7: ImplicitCastExpr 0x562da2813590 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
`-ParenExpr 0x562da2813500 <col:58, col:60> 'int'
  `-IntegerLiteral 0x562da28134e0 <lbaselib.c:121:41> 'int' 1
([B7.6]) (ImplicitCastExpr, IntegralCast, lua_Integer)
   8: CallExpr 0x562da2813538 <./lauxlib.h:105:34, col:61> 'lua_Integer':'long'
|-ImplicitCastExpr 0x562da2813520 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2813450 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|-ImplicitCastExpr 0x562da2813578 <lbaselib.c:121:35> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2813478 <col:35> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
|-ParenExpr 0x562da28134c0 <./lauxlib.h:105:53, col:55> 'int'
| `-IntegerLiteral 0x562da28134a0 <lbaselib.c:121:38> 'int' 1
`-ImplicitCastExpr 0x562da2813590 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
  `-ParenExpr 0x562da2813500 <col:58, col:60> 'int'
    `-IntegerLiteral 0x562da28134e0 <lbaselib.c:121:41> 'int' 1
[B7.2]([B7.4], ([B7.5]), [B7.7])
   9: CStyleCastExpr 0x562da28135c0 <./lauxlib.h:105:29, col:61> 'int' <IntegralCast>
`-CallExpr 0x562da2813538 <col:34, col:61> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x562da2813520 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da2813450 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
  |-ImplicitCastExpr 0x562da2813578 <lbaselib.c:121:35> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da2813478 <col:35> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
  |-ParenExpr 0x562da28134c0 <./lauxlib.h:105:53, col:55> 'int'
  | `-IntegerLiteral 0x562da28134a0 <lbaselib.c:121:38> 'int' 1
  `-ImplicitCastExpr 0x562da2813590 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
    `-ParenExpr 0x562da2813500 <col:58, col:60> 'int'
      `-IntegerLiteral 0x562da28134e0 <lbaselib.c:121:41> 'int' 1
(int)[B7.8] (CStyleCastExpr, IntegralCast, int)
   Preds (1): B9
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x562da2813608 <./lauxlib.h:104:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
   2: ImplicitCastExpr 0x562da28136f8 <./lauxlib.h:104:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2813608 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
   3: DeclRefExpr 0x562da2813630 <lbaselib.c:121:60> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2813748 <lbaselib.c:121:60> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2813630 <col:60> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2813658 <lbaselib.c:121:63> 'int' 1
1
   6: CallExpr 0x562da2813710 <./lauxlib.h:104:34, col:58> 'lua_Integer':'long'
|-ImplicitCastExpr 0x562da28136f8 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2813608 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x562da2813748 <lbaselib.c:121:60> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2813630 <col:60> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
`-ParenExpr 0x562da2813678 <./lauxlib.h:104:55, col:57> 'int'
  `-IntegerLiteral 0x562da2813658 <lbaselib.c:121:63> 'int' 1
[B8.2]([B8.4], ([B8.5]))
   7: CStyleCastExpr 0x562da2813778 <./lauxlib.h:104:29, col:58> 'int' <IntegralCast>
`-CallExpr 0x562da2813710 <col:34, col:58> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x562da28136f8 <col:34> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da2813608 <col:34> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x562da2802d80 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x562da2813748 <lbaselib.c:121:60> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da2813630 <col:60> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
  `-ParenExpr 0x562da2813678 <./lauxlib.h:104:55, col:57> 'int'
    `-IntegerLiteral 0x562da2813658 <lbaselib.c:121:63> 'int' 1
(int)[B8.6] (CStyleCastExpr, IntegralCast, int)
   Preds (1): B9
   Succs (1): B6

 [B9]
   1: DeclStmt 0x562da2813398 <lbaselib.c:120:5, col:17>col:15
`-VarDecl 0x562da2813338 <col:5, col:15> col:15 used ar 'lua_Debug':'struct lua_Debug'
lua_Debug ar;
   2: DeclRefExpr 0x562da2813428 <lbaselib.c:121:17> 'int' lvalue ParmVar 0x562da2812fb0 'opt' 'int'
opt
   3: ImplicitCastExpr 0x562da28137c0 <lbaselib.c:121:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2813428 <col:17> 'int' lvalue ParmVar 0x562da2812fb0 'opt' 'int'
[B9.2] (ImplicitCastExpr, LValueToRValue, int)
   T: [B9.3] ? ... : ...
   Preds (1): B11
   Succs (2): B7 B8

 [B10]
   1: DeclRefExpr 0x562da2813250 <lbaselib.c:118:29> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
   2: ImplicitCastExpr 0x562da28132c0 <lbaselib.c:118:29> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2813250 <col:29> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x562da2813278 <lbaselib.c:118:43> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2813310 <lbaselib.c:118:43> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2813278 <col:43> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da28132a0 <lbaselib.c:118:46> 'int' 1
1
   6: CallExpr 0x562da28132d8 <lbaselib.c:118:29, col:47> 'void'
|-ImplicitCastExpr 0x562da28132c0 <col:29> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2813250 <col:29> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da2813310 <col:43> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2813278 <col:43> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
`-IntegerLiteral 0x562da28132a0 <col:46> 'int' 1
[B10.2]([B10.4], [B10.5])
   Preds (1): B11
   Succs (1): B0

 [B11]
   1: DeclRefExpr 0x562da28130f0 <./lua.h:264:30> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   2: ImplicitCastExpr 0x562da2813180 <./lua.h:264:30> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da28130f0 <col:30> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x562da2813118 <lbaselib.c:118:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da28131d0 <lbaselib.c:118:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2813118 <col:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2813140 <lbaselib.c:118:25> 'int' 1
1
   6: CallExpr 0x562da2813198 <./lua.h:264:30, col:45> 'int'
|-ImplicitCastExpr 0x562da2813180 <col:30> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da28130f0 <col:30> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da28131d0 <lbaselib.c:118:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2813118 <col:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
`-ParenExpr 0x562da2813160 <./lua.h:264:42, col:44> 'int'
  `-IntegerLiteral 0x562da2813140 <lbaselib.c:118:25> 'int' 1
[B11.2]([B11.4], ([B11.5]))
   7: IntegerLiteral 0x562da28131e8 <./lua.h:80:24> 'int' 6
6
   8: BinaryOperator 0x562da2813208 <./lua.h:264:30, line:80:24> 'int' '=='
|-CallExpr 0x562da2813198 <line:264:30, col:45> 'int'
| |-ImplicitCastExpr 0x562da2813180 <col:30> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562da28130f0 <col:30> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ed530 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x562da28131d0 <lbaselib.c:118:22> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x562da2813118 <col:22> 'lua_State *' lvalue ParmVar 0x562da2812f38 'L' 'lua_State *'
| `-ParenExpr 0x562da2813160 <./lua.h:264:42, col:44> 'int'
|   `-IntegerLiteral 0x562da2813140 <lbaselib.c:118:25> 'int' 1
`-IntegerLiteral 0x562da28131e8 <./lua.h:80:24> 'int' 6
[B11.6] == [B11.7]
   T: if ([B11.8])
   Preds (1): B12
   Succs (2): B10 B9

 [B0 (EXIT)]
   Preds (3): B1 B2 B10
