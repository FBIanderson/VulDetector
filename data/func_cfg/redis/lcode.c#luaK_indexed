void luaK_indexed(FuncState *fs, expdesc *t, expdesc *k)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768decf0 <lcode.c:622:16> 'int (FuncState *, expdesc *)' Function 0x5637768d3f88 'luaK_exp2RK' 'int (FuncState *, expdesc *)'
luaK_exp2RK
   2: ImplicitCastExpr 0x5637768ded68 <lcode.c:622:16> 'int (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768decf0 <col:16> 'int (FuncState *, expdesc *)' Function 0x5637768d3f88 'luaK_exp2RK' 'int (FuncState *, expdesc *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FuncState *, expdesc *))
   3: DeclRefExpr 0x5637768ded18 <lcode.c:622:28> 'FuncState *' lvalue ParmVar 0x5637768de990 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768dedb8 <lcode.c:622:28> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768ded18 <col:28> 'FuncState *' lvalue ParmVar 0x5637768de990 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768ded40 <lcode.c:622:32> 'expdesc *' lvalue ParmVar 0x5637768dea70 'k' 'expdesc *'
k
   6: ImplicitCastExpr 0x5637768dedd0 <lcode.c:622:32> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768ded40 <col:32> 'expdesc *' lvalue ParmVar 0x5637768dea70 'k' 'expdesc *'
[B1.5] (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: CallExpr 0x5637768ded80 <lcode.c:622:16, col:33> 'int'
|-ImplicitCastExpr 0x5637768ded68 <col:16> 'int (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768decf0 <col:16> 'int (FuncState *, expdesc *)' Function 0x5637768d3f88 'luaK_exp2RK' 'int (FuncState *, expdesc *)'
|-ImplicitCastExpr 0x5637768dedb8 <col:28> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768ded18 <col:28> 'FuncState *' lvalue ParmVar 0x5637768de990 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768dedd0 <col:32> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ded40 <col:32> 'expdesc *' lvalue ParmVar 0x5637768dea70 'k' 'expdesc *'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x5637768dec08 <lcode.c:622:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
t
   9: ImplicitCastExpr 0x5637768dec30 <lcode.c:622:3> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768dec08 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
[B1.8] (ImplicitCastExpr, LValueToRValue, expdesc *)
  10: MemberExpr 0x5637768dec48 <lcode.c:622:3, col:6> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768dec30 <col:3> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768dec08 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
[B1.9]->u
  11: MemberExpr 0x5637768dec80 <lcode.c:622:3, col:8> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768dec48 <col:3, col:6> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768dec30 <col:3> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768dec08 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
[B1.10].s
  12: MemberExpr 0x5637768decb8 <lcode.c:622:3, col:10> 'int' lvalue .aux 0x56377687d658
`-MemberExpr 0x5637768dec80 <col:3, col:8> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768dec48 <col:3, col:6> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768dec30 <col:3> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768dec08 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
[B1.11].aux
  13: BinaryOperator 0x5637768dede8 <lcode.c:622:3, col:33> 'int' '='
|-MemberExpr 0x5637768decb8 <col:3, col:10> 'int' lvalue .aux 0x56377687d658
| `-MemberExpr 0x5637768dec80 <col:3, col:8> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
|   `-MemberExpr 0x5637768dec48 <col:3, col:6> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
|     `-ImplicitCastExpr 0x5637768dec30 <col:3> 'expdesc *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768dec08 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
`-CallExpr 0x5637768ded80 <col:16, col:33> 'int'
  |-ImplicitCastExpr 0x5637768ded68 <col:16> 'int (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5637768decf0 <col:16> 'int (FuncState *, expdesc *)' Function 0x5637768d3f88 'luaK_exp2RK' 'int (FuncState *, expdesc *)'
  |-ImplicitCastExpr 0x5637768dedb8 <col:28> 'FuncState *' <LValueToRValue>
  | `-DeclRefExpr 0x5637768ded18 <col:28> 'FuncState *' lvalue ParmVar 0x5637768de990 'fs' 'FuncState *'
  `-ImplicitCastExpr 0x5637768dedd0 <col:32> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ded40 <col:32> 'expdesc *' lvalue ParmVar 0x5637768dea70 'k' 'expdesc *'
[B1.12] = [B1.7]
  14: DeclRefExpr 0x5637768dee88 <lcode.c:623:10> 'int' EnumConstant 0x563776878098 'VINDEXED' 'int'
VINDEXED
  15: ImplicitCastExpr 0x5637768deeb0 <lcode.c:623:10> 'expkind':'expkind' <IntegralCast>
`-DeclRefExpr 0x5637768dee88 <col:10> 'int' EnumConstant 0x563776878098 'VINDEXED' 'int'
[B1.14] (ImplicitCastExpr, IntegralCast, expkind)
  16: DeclRefExpr 0x5637768dee10 <lcode.c:623:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
t
  17: ImplicitCastExpr 0x5637768dee38 <lcode.c:623:3> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768dee10 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
[B1.16] (ImplicitCastExpr, LValueToRValue, expdesc *)
  18: MemberExpr 0x5637768dee50 <lcode.c:623:3, col:6> 'expkind':'expkind' lvalue ->k 0x56377687d440
`-ImplicitCastExpr 0x5637768dee38 <col:3> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768dee10 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
[B1.17]->k
  19: BinaryOperator 0x5637768deec8 <lcode.c:623:3, col:10> 'expkind':'expkind' '='
|-MemberExpr 0x5637768dee50 <col:3, col:6> 'expkind':'expkind' lvalue ->k 0x56377687d440
| `-ImplicitCastExpr 0x5637768dee38 <col:3> 'expdesc *' <LValueToRValue>
|   `-DeclRefExpr 0x5637768dee10 <col:3> 'expdesc *' lvalue ParmVar 0x5637768dea00 't' 'expdesc *'
`-ImplicitCastExpr 0x5637768deeb0 <col:10> 'expkind':'expkind' <IntegralCast>
  `-DeclRefExpr 0x5637768dee88 <col:10> 'int' EnumConstant 0x563776878098 'VINDEXED' 'int'
[B1.18] = [B1.15]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
