static int luaB_collectgarbage(lua_State *L)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x562da2817a78 <lbaselib.c:198:11> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x562da2804548 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
luaL_checkoption
   2: ImplicitCastExpr 0x562da2817b98 <lbaselib.c:198:11> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2817a78 <col:11> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x562da2804548 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *, const char *const *))
   3: DeclRefExpr 0x562da2817aa0 <lbaselib.c:198:28> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2818ce8 <lbaselib.c:198:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2817aa0 <col:28> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2817ac8 <lbaselib.c:198:31> 'int' 1
1
   6: StringLiteral 0x562da2817ae8 <lbaselib.c:198:34> 'char [8]' lvalue "collect"
"collect"
   7: ImplicitCastExpr 0x562da2818d00 <lbaselib.c:198:34> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2817ae8 <col:34> 'char [8]' lvalue "collect"
[B1.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x562da2818d18 <lbaselib.c:198:34> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2818d00 <col:34> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2817ae8 <col:34> 'char [8]' lvalue "collect"
[B1.7] (ImplicitCastExpr, BitCast, const char *)
   9: DeclRefExpr 0x562da2817b18 <lbaselib.c:198:45> 'const char *const [8]' lvalue Var 0x562da2817060 'opts' 'const char *const [8]'
opts
  10: ImplicitCastExpr 0x562da2818d30 <lbaselib.c:198:45> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x562da2817b18 <col:45> 'const char *const [8]' lvalue Var 0x562da2817060 'opts' 'const char *const [8]'
[B1.9] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
  11: CallExpr 0x562da2818ca0 <lbaselib.c:198:11, col:49> 'int'
|-ImplicitCastExpr 0x562da2817b98 <col:11> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2817a78 <col:11> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x562da2804548 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
|-ImplicitCastExpr 0x562da2818ce8 <col:28> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2817aa0 <col:28> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
|-IntegerLiteral 0x562da2817ac8 <col:31> 'int' 1
|-ImplicitCastExpr 0x562da2818d18 <col:34> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2818d00 <col:34> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da2817ae8 <col:34> 'char [8]' lvalue "collect"
`-ImplicitCastExpr 0x562da2818d30 <col:45> 'const char *const *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x562da2817b18 <col:45> 'const char *const [8]' lvalue Var 0x562da2817060 'opts' 'const char *const [8]'
[B1.2]([B1.4], [B1.5], [B1.8], [B1.10])
  12: DeclStmt 0x562da2818d48 <lbaselib.c:198:3, col:50>col:7
`-VarDecl 0x562da2817a18 <col:3, col:49> col:7 used o 'int' cinit
  `-CallExpr 0x562da2818ca0 <col:11, col:49> 'int'
    |-ImplicitCastExpr 0x562da2817b98 <col:11> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da2817a78 <col:11> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x562da2804548 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
    |-ImplicitCastExpr 0x562da2818ce8 <col:28> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da2817aa0 <col:28> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
    |-IntegerLiteral 0x562da2817ac8 <col:31> 'int' 1
    |-ImplicitCastExpr 0x562da2818d18 <col:34> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da2818d00 <col:34> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da2817ae8 <col:34> 'char [8]' lvalue "collect"
    `-ImplicitCastExpr 0x562da2818d30 <col:45> 'const char *const *' <ArrayToPointerDecay>
      `-DeclRefExpr 0x562da2817b18 <col:45> 'const char *const [8]' lvalue Var 0x562da2817060 'opts' 'const char *const [8]'
int o = luaL_checkoption(L, 1, "collect", opts);
  13: DeclRefExpr 0x562da2818dd8 <./lauxlib.h:105:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
luaL_optinteger
  14: ImplicitCastExpr 0x562da2818ea8 <./lauxlib.h:105:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2818dd8 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
[B1.13] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int, lua_Integer))
  15: DeclRefExpr 0x562da2818e00 <lbaselib.c:199:24> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x562da2818f00 <lbaselib.c:199:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2818e00 <col:24> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
[B1.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: IntegerLiteral 0x562da2818e28 <lbaselib.c:199:27> 'int' 2
2
  18: IntegerLiteral 0x562da2818e68 <lbaselib.c:199:30> 'int' 0
0
  19: ImplicitCastExpr 0x562da2818f18 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
`-ParenExpr 0x562da2818e88 <col:58, col:60> 'int'
  `-IntegerLiteral 0x562da2818e68 <lbaselib.c:199:30> 'int' 0
([B1.18]) (ImplicitCastExpr, IntegralCast, lua_Integer)
  20: CallExpr 0x562da2818ec0 <./lauxlib.h:105:34, col:61> 'lua_Integer':'long'
|-ImplicitCastExpr 0x562da2818ea8 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2818dd8 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|-ImplicitCastExpr 0x562da2818f00 <lbaselib.c:199:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2818e00 <col:24> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
|-ParenExpr 0x562da2818e48 <./lauxlib.h:105:53, col:55> 'int'
| `-IntegerLiteral 0x562da2818e28 <lbaselib.c:199:27> 'int' 2
`-ImplicitCastExpr 0x562da2818f18 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
  `-ParenExpr 0x562da2818e88 <col:58, col:60> 'int'
    `-IntegerLiteral 0x562da2818e68 <lbaselib.c:199:30> 'int' 0
[B1.14]([B1.16], ([B1.17]), [B1.19])
  21: CStyleCastExpr 0x562da2818f48 <./lauxlib.h:105:29, col:61> 'int' <IntegralCast>
`-CallExpr 0x562da2818ec0 <col:34, col:61> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x562da2818ea8 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da2818dd8 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
  |-ImplicitCastExpr 0x562da2818f00 <lbaselib.c:199:24> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da2818e00 <col:24> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
  |-ParenExpr 0x562da2818e48 <./lauxlib.h:105:53, col:55> 'int'
  | `-IntegerLiteral 0x562da2818e28 <lbaselib.c:199:27> 'int' 2
  `-ImplicitCastExpr 0x562da2818f18 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
    `-ParenExpr 0x562da2818e88 <col:58, col:60> 'int'
      `-IntegerLiteral 0x562da2818e68 <lbaselib.c:199:30> 'int' 0
(int)[B1.20] (CStyleCastExpr, IntegralCast, int)
  22: DeclStmt 0x562da2818f90 <lbaselib.c:199:3, col:32>col:7
`-VarDecl 0x562da2818d78 <col:3, ./lauxlib.h:105:62> lbaselib.c:199:7 used ex 'int' cinit
  `-ParenExpr 0x562da2818f70 <./lauxlib.h:105:28, col:62> 'int'
    `-CStyleCastExpr 0x562da2818f48 <col:29, col:61> 'int' <IntegralCast>
      `-CallExpr 0x562da2818ec0 <col:34, col:61> 'lua_Integer':'long'
        |-ImplicitCastExpr 0x562da2818ea8 <col:34> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x562da2818dd8 <col:34> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x562da2803098 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
        |-ImplicitCastExpr 0x562da2818f00 <lbaselib.c:199:24> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x562da2818e00 <col:24> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
        |-ParenExpr 0x562da2818e48 <./lauxlib.h:105:53, col:55> 'int'
        | `-IntegerLiteral 0x562da2818e28 <lbaselib.c:199:27> 'int' 2
        `-ImplicitCastExpr 0x562da2818f18 <./lauxlib.h:105:58, col:60> 'lua_Integer':'long' <IntegralCast>
          `-ParenExpr 0x562da2818e88 <col:58, col:60> 'int'
            `-IntegerLiteral 0x562da2818e68 <lbaselib.c:199:30> 'int' 0
int ex = ((int)luaL_optinteger(L, (2), (0)));
  23: DeclRefExpr 0x562da2819020 <lbaselib.c:200:13> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
lua_gc
  24: ImplicitCastExpr 0x562da2819140 <lbaselib.c:200:13> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2819020 <col:13> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
[B1.23] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int))
  25: DeclRefExpr 0x562da2819048 <lbaselib.c:200:20> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
L
  26: ImplicitCastExpr 0x562da2819198 <lbaselib.c:200:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2819048 <col:20> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
[B1.25] (ImplicitCastExpr, LValueToRValue, lua_State *)
  27: DeclRefExpr 0x562da2819070 <lbaselib.c:200:23> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
optsnum
  28: ImplicitCastExpr 0x562da28190c0 <lbaselib.c:200:23> 'const int *' <ArrayToPointerDecay>
`-DeclRefExpr 0x562da2819070 <col:23> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
[B1.27] (ImplicitCastExpr, ArrayToPointerDecay, const int *)
  29: DeclRefExpr 0x562da2819098 <lbaselib.c:200:31> 'int' lvalue Var 0x562da2817a18 'o' 'int'
o
  30: ImplicitCastExpr 0x562da28190d8 <lbaselib.c:200:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2819098 <col:31> 'int' lvalue Var 0x562da2817a18 'o' 'int'
[B1.29] (ImplicitCastExpr, LValueToRValue, int)
  31: ArraySubscriptExpr 0x562da28190f0 <lbaselib.c:200:23, col:32> 'const int' lvalue
|-ImplicitCastExpr 0x562da28190c0 <col:23> 'const int *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x562da2819070 <col:23> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
`-ImplicitCastExpr 0x562da28190d8 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2819098 <col:31> 'int' lvalue Var 0x562da2817a18 'o' 'int'
[B1.28][[B1.30]]
  32: ImplicitCastExpr 0x562da28191b0 <lbaselib.c:200:23, col:32> 'int' <LValueToRValue>
`-ArraySubscriptExpr 0x562da28190f0 <col:23, col:32> 'const int' lvalue
  |-ImplicitCastExpr 0x562da28190c0 <col:23> 'const int *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x562da2819070 <col:23> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
  `-ImplicitCastExpr 0x562da28190d8 <col:31> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da2819098 <col:31> 'int' lvalue Var 0x562da2817a18 'o' 'int'
[B1.31] (ImplicitCastExpr, LValueToRValue, int)
  33: DeclRefExpr 0x562da2819118 <lbaselib.c:200:35> 'int' lvalue Var 0x562da2818d78 'ex' 'int'
ex
  34: ImplicitCastExpr 0x562da28191c8 <lbaselib.c:200:35> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2819118 <col:35> 'int' lvalue Var 0x562da2818d78 'ex' 'int'
[B1.33] (ImplicitCastExpr, LValueToRValue, int)
  35: CallExpr 0x562da2819158 <lbaselib.c:200:13, col:37> 'int'
|-ImplicitCastExpr 0x562da2819140 <col:13> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2819020 <col:13> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
|-ImplicitCastExpr 0x562da2819198 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2819048 <col:20> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
|-ImplicitCastExpr 0x562da28191b0 <col:23, col:32> 'int' <LValueToRValue>
| `-ArraySubscriptExpr 0x562da28190f0 <col:23, col:32> 'const int' lvalue
|   |-ImplicitCastExpr 0x562da28190c0 <col:23> 'const int *' <ArrayToPointerDecay>
|   | `-DeclRefExpr 0x562da2819070 <col:23> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
|   `-ImplicitCastExpr 0x562da28190d8 <col:31> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x562da2819098 <col:31> 'int' lvalue Var 0x562da2817a18 'o' 'int'
`-ImplicitCastExpr 0x562da28191c8 <col:35> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2819118 <col:35> 'int' lvalue Var 0x562da2818d78 'ex' 'int'
[B1.24]([B1.26], [B1.32], [B1.34])
  36: DeclStmt 0x562da28191e0 <lbaselib.c:200:3, col:38>col:7
`-VarDecl 0x562da2818fc0 <col:3, col:37> col:7 used res 'int' cinit
  `-CallExpr 0x562da2819158 <col:13, col:37> 'int'
    |-ImplicitCastExpr 0x562da2819140 <col:13> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da2819020 <col:13> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
    |-ImplicitCastExpr 0x562da2819198 <col:20> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da2819048 <col:20> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
    |-ImplicitCastExpr 0x562da28191b0 <col:23, col:32> 'int' <LValueToRValue>
    | `-ArraySubscriptExpr 0x562da28190f0 <col:23, col:32> 'const int' lvalue
    |   |-ImplicitCastExpr 0x562da28190c0 <col:23> 'const int *' <ArrayToPointerDecay>
    |   | `-DeclRefExpr 0x562da2819070 <col:23> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
    |   `-ImplicitCastExpr 0x562da28190d8 <col:31> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x562da2819098 <col:31> 'int' lvalue Var 0x562da2817a18 'o' 'int'
    `-ImplicitCastExpr 0x562da28191c8 <col:35> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562da2819118 <col:35> 'int' lvalue Var 0x562da2818d78 'ex' 'int'
int res = lua_gc(L, optsnum[o], ex);
  37: DeclRefExpr 0x562da28191f8 <lbaselib.c:201:11> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
optsnum
  38: ImplicitCastExpr 0x562da2819248 <lbaselib.c:201:11> 'const int *' <ArrayToPointerDecay>
`-DeclRefExpr 0x562da28191f8 <col:11> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
[B1.37] (ImplicitCastExpr, ArrayToPointerDecay, const int *)
  39: DeclRefExpr 0x562da2819220 <lbaselib.c:201:19> 'int' lvalue Var 0x562da2817a18 'o' 'int'
o
  40: ImplicitCastExpr 0x562da2819260 <lbaselib.c:201:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2819220 <col:19> 'int' lvalue Var 0x562da2817a18 'o' 'int'
[B1.39] (ImplicitCastExpr, LValueToRValue, int)
  41: ArraySubscriptExpr 0x562da2819278 <lbaselib.c:201:11, col:20> 'const int' lvalue
|-ImplicitCastExpr 0x562da2819248 <col:11> 'const int *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x562da28191f8 <col:11> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
`-ImplicitCastExpr 0x562da2819260 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2819220 <col:19> 'int' lvalue Var 0x562da2817a18 'o' 'int'
[B1.38][[B1.40]]
  42: ImplicitCastExpr 0x562da28192a0 <lbaselib.c:201:11, col:20> 'int' <LValueToRValue>
`-ArraySubscriptExpr 0x562da2819278 <col:11, col:20> 'const int' lvalue
  |-ImplicitCastExpr 0x562da2819248 <col:11> 'const int *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x562da28191f8 <col:11> 'const int [7]' lvalue Var 0x562da2817700 'optsnum' 'const int [7]'
  `-ImplicitCastExpr 0x562da2819260 <col:19> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da2819220 <col:19> 'int' lvalue Var 0x562da2817a18 'o' 'int'
[B1.41] (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B1.42]
   Preds (2): B5 B6
   Succs (3): B3 B4 B2

 [B2]
  default:
   1: DeclRefExpr 0x562da2819908 <lbaselib.c:212:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   2: ImplicitCastExpr 0x562da2819980 <lbaselib.c:212:7> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da2819908 <col:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   3: DeclRefExpr 0x562da2819930 <lbaselib.c:212:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da28199d0 <lbaselib.c:212:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da2819930 <col:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da2819958 <lbaselib.c:212:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
res
   6: ImplicitCastExpr 0x562da28199e8 <lbaselib.c:212:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2819958 <col:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
[B2.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ImplicitCastExpr 0x562da2819a00 <lbaselib.c:212:25> 'lua_Number':'double' <IntegralToFloating>
`-ImplicitCastExpr 0x562da28199e8 <col:25> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2819958 <col:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
[B2.6] (ImplicitCastExpr, IntegralToFloating, lua_Number)
   8: CallExpr 0x562da2819998 <lbaselib.c:212:7, col:28> 'void'
|-ImplicitCastExpr 0x562da2819980 <col:7> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da2819908 <col:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x562da28199d0 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da2819930 <col:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da2819a00 <col:25> 'lua_Number':'double' <IntegralToFloating>
  `-ImplicitCastExpr 0x562da28199e8 <col:25> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da2819958 <col:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
[B2.2]([B2.4], [B2.7])
   9: IntegerLiteral 0x562da2819a18 <lbaselib.c:213:14> 'int' 1
1
  10: ReturnStmt 0x562da2819a38 <lbaselib.c:213:7, col:14>
`-IntegerLiteral 0x562da2819a18 <col:14> 'int' 1
return [B2.9];
   Preds (1): B1
   Succs (1): B0

 [B3]
  case 5:
   1: DeclRefExpr 0x562da28197b8 <lbaselib.c:208:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27f12b0 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushboolean
   2: ImplicitCastExpr 0x562da2819830 <lbaselib.c:208:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da28197b8 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27f12b0 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x562da28197e0 <lbaselib.c:208:23> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da2819880 <lbaselib.c:208:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da28197e0 <col:23> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da2819808 <lbaselib.c:208:26> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
res
   6: ImplicitCastExpr 0x562da2819898 <lbaselib.c:208:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2819808 <col:26> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x562da2819848 <lbaselib.c:208:7, col:29> 'void'
|-ImplicitCastExpr 0x562da2819830 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da28197b8 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27f12b0 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da2819880 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da28197e0 <col:23> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da2819898 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2819808 <col:26> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
[B3.2]([B3.4], [B3.6])
   8: IntegerLiteral 0x562da28198b0 <lbaselib.c:209:14> 'int' 1
1
   9: ReturnStmt 0x562da28198d0 <lbaselib.c:209:7, col:14>
`-IntegerLiteral 0x562da28198b0 <col:14> 'int' 1
return [B3.8];
   Preds (1): B1
   Succs (1): B0

 [B4]
  case 3:
   1: DeclRefExpr 0x562da28193b8 <lbaselib.c:203:15> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
lua_gc
   2: ImplicitCastExpr 0x562da2819448 <lbaselib.c:203:15> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da28193b8 <col:15> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int))
   3: DeclRefExpr 0x562da28193e0 <lbaselib.c:203:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da28194a0 <lbaselib.c:203:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da28193e0 <col:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da2819408 <./lua.h:225:23> 'int' 4
4
   6: IntegerLiteral 0x562da2819428 <lbaselib.c:203:39> 'int' 0
0
   7: CallExpr 0x562da2819460 <lbaselib.c:203:15, col:40> 'int'
|-ImplicitCastExpr 0x562da2819448 <col:15> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da28193b8 <col:15> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
|-ImplicitCastExpr 0x562da28194a0 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da28193e0 <col:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
|-IntegerLiteral 0x562da2819408 <./lua.h:225:23> 'int' 4
`-IntegerLiteral 0x562da2819428 <lbaselib.c:203:39> 'int' 0
[B4.2]([B4.4], [B4.5], [B4.6])
   8: DeclStmt 0x562da28194b8 <lbaselib.c:203:7, col:41>col:11
`-VarDecl 0x562da2819358 <col:7, col:40> col:11 used b 'int' cinit
  `-CallExpr 0x562da2819460 <col:15, col:40> 'int'
    |-ImplicitCastExpr 0x562da2819448 <col:15> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da28193b8 <col:15> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x562da27f5dc0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
    |-ImplicitCastExpr 0x562da28194a0 <col:22> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da28193e0 <col:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
    |-IntegerLiteral 0x562da2819408 <./lua.h:225:23> 'int' 4
    `-IntegerLiteral 0x562da2819428 <lbaselib.c:203:39> 'int' 0
int b = lua_gc(L, 4, 0);
   9: DeclRefExpr 0x562da28194d0 <lbaselib.c:204:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
  10: ImplicitCastExpr 0x562da2819698 <lbaselib.c:204:7> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da28194d0 <col:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B4.9] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
  11: DeclRefExpr 0x562da28194f8 <lbaselib.c:204:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x562da28196e8 <lbaselib.c:204:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da28194f8 <col:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
[B4.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: DeclRefExpr 0x562da2819520 <lbaselib.c:204:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
res
  14: ImplicitCastExpr 0x562da2819640 <lbaselib.c:204:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2819520 <col:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
[B4.13] (ImplicitCastExpr, LValueToRValue, int)
  15: ImplicitCastExpr 0x562da2819658 <lbaselib.c:204:25> 'double' <IntegralToFloating>
`-ImplicitCastExpr 0x562da2819640 <col:25> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2819520 <col:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
[B4.14] (ImplicitCastExpr, IntegralToFloating, double)
  16: DeclRefExpr 0x562da2819548 <lbaselib.c:204:44> 'int' lvalue Var 0x562da2819358 'b' 'int'
b
  17: ImplicitCastExpr 0x562da2819580 <lbaselib.c:204:44> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da2819548 <col:44> 'int' lvalue Var 0x562da2819358 'b' 'int'
[B4.16] (ImplicitCastExpr, LValueToRValue, int)
  18: CStyleCastExpr 0x562da2819598 <lbaselib.c:204:32, col:44> 'lua_Number':'double' <IntegralToFloating>
`-ImplicitCastExpr 0x562da2819580 <col:44> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da2819548 <col:44> 'int' lvalue Var 0x562da2819358 'b' 'int'
(lua_Number)[B4.17] (CStyleCastExpr, IntegralToFloating, lua_Number)
  19: IntegerLiteral 0x562da28195c0 <lbaselib.c:204:46> 'int' 1024
1024
  20: ImplicitCastExpr 0x562da28195e0 <lbaselib.c:204:46> 'double' <IntegralToFloating>
`-IntegerLiteral 0x562da28195c0 <col:46> 'int' 1024
[B4.19] (ImplicitCastExpr, IntegralToFloating, double)
  21: BinaryOperator 0x562da28195f8 <lbaselib.c:204:32, col:46> 'double' '/'
|-CStyleCastExpr 0x562da2819598 <col:32, col:44> 'lua_Number':'double' <IntegralToFloating>
| `-ImplicitCastExpr 0x562da2819580 <col:44> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x562da2819548 <col:44> 'int' lvalue Var 0x562da2819358 'b' 'int'
`-ImplicitCastExpr 0x562da28195e0 <col:46> 'double' <IntegralToFloating>
  `-IntegerLiteral 0x562da28195c0 <col:46> 'int' 1024
[B4.18] / [B4.20]
  22: BinaryOperator 0x562da2819670 <lbaselib.c:204:25, col:50> 'double' '+'
|-ImplicitCastExpr 0x562da2819658 <col:25> 'double' <IntegralToFloating>
| `-ImplicitCastExpr 0x562da2819640 <col:25> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x562da2819520 <col:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
`-ParenExpr 0x562da2819620 <col:31, col:50> 'double'
  `-BinaryOperator 0x562da28195f8 <col:32, col:46> 'double' '/'
    |-CStyleCastExpr 0x562da2819598 <col:32, col:44> 'lua_Number':'double' <IntegralToFloating>
    | `-ImplicitCastExpr 0x562da2819580 <col:44> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x562da2819548 <col:44> 'int' lvalue Var 0x562da2819358 'b' 'int'
    `-ImplicitCastExpr 0x562da28195e0 <col:46> 'double' <IntegralToFloating>
      `-IntegerLiteral 0x562da28195c0 <col:46> 'int' 1024
[B4.15] + ([B4.21])
  23: CallExpr 0x562da28196b0 <lbaselib.c:204:7, col:51> 'void'
|-ImplicitCastExpr 0x562da2819698 <col:7> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da28194d0 <col:7> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x562da27effa0 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x562da28196e8 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da28194f8 <col:22> 'lua_State *' lvalue ParmVar 0x562da2816f00 'L' 'lua_State *'
`-BinaryOperator 0x562da2819670 <col:25, col:50> 'double' '+'
  |-ImplicitCastExpr 0x562da2819658 <col:25> 'double' <IntegralToFloating>
  | `-ImplicitCastExpr 0x562da2819640 <col:25> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x562da2819520 <col:25> 'int' lvalue Var 0x562da2818fc0 'res' 'int'
  `-ParenExpr 0x562da2819620 <col:31, col:50> 'double'
    `-BinaryOperator 0x562da28195f8 <col:32, col:46> 'double' '/'
      |-CStyleCastExpr 0x562da2819598 <col:32, col:44> 'lua_Number':'double' <IntegralToFloating>
      | `-ImplicitCastExpr 0x562da2819580 <col:44> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x562da2819548 <col:44> 'int' lvalue Var 0x562da2819358 'b' 'int'
      `-ImplicitCastExpr 0x562da28195e0 <col:46> 'double' <IntegralToFloating>
        `-IntegerLiteral 0x562da28195c0 <col:46> 'int' 1024
[B4.10]([B4.12], [B4.22])
  24: IntegerLiteral 0x562da2819700 <lbaselib.c:205:14> 'int' 1
1
  25: ReturnStmt 0x562da2819720 <lbaselib.c:205:7, col:14>
`-IntegerLiteral 0x562da2819700 <col:14> 'int' 1
return [B4.24];
   Preds (1): B1
   Succs (1): B0

 [B5]
   1: IntegerLiteral 0x562da2817760 <./lua.h:221:21> 'int' 0
0
   2: IntegerLiteral 0x562da2817780 <./lua.h:222:24> 'int' 1
1
   3: IntegerLiteral 0x562da28177a0 <./lua.h:223:24> 'int' 2
2
   4: IntegerLiteral 0x562da28177c0 <./lua.h:224:22> 'int' 3
3
   5: IntegerLiteral 0x562da28177e0 <./lua.h:226:21> 'int' 5
5
   6: IntegerLiteral 0x562da2817800 <./lua.h:227:25> 'int' 6
6
   7: IntegerLiteral 0x562da2817820 <./lua.h:228:26> 'int' 7
7
   8: InitListExpr 0x562da28178b8 <lbaselib.c:196:32, line:197:62> 'const int [7]'
|-IntegerLiteral 0x562da2817760 <./lua.h:221:21> 'int' 0
|-IntegerLiteral 0x562da2817780 <line:222:24> 'int' 1
|-IntegerLiteral 0x562da28177a0 <line:223:24> 'int' 2
|-IntegerLiteral 0x562da28177c0 <line:224:22> 'int' 3
|-IntegerLiteral 0x562da28177e0 <line:226:21> 'int' 5
|-IntegerLiteral 0x562da2817800 <line:227:25> 'int' 6
`-IntegerLiteral 0x562da2817820 <line:228:26> 'int' 7
{[B5.1], [B5.2], [B5.3], [B5.4], [B5.5], [B5.6], [B5.7]}
   9: DeclStmt 0x562da28179e8 <lbaselib.c:196:3, line:197:63>line:196:20
`-VarDecl 0x562da2817700 <col:3, line:197:62> line:196:20 used optsnum 'const int [7]' static cinit
  `-InitListExpr 0x562da28178b8 <col:32, line:197:62> 'const int [7]'
    |-IntegerLiteral 0x562da2817760 <./lua.h:221:21> 'int' 0
    |-IntegerLiteral 0x562da2817780 <line:222:24> 'int' 1
    |-IntegerLiteral 0x562da28177a0 <line:223:24> 'int' 2
    |-IntegerLiteral 0x562da28177c0 <line:224:22> 'int' 3
    |-IntegerLiteral 0x562da28177e0 <line:226:21> 'int' 5
    |-IntegerLiteral 0x562da2817800 <line:227:25> 'int' 6
    `-IntegerLiteral 0x562da2817820 <line:228:26> 'int' 7
static const int optsnum[] = {0, 1, 2, 3, 5, 6, 7};
   Preds (1): B6
   Succs (1): B1

 [B6]
   T: static init optsnum
   Preds (2): B7 B8
   Succs (2): B1 B5

 [B7]
   1: StringLiteral 0x562da28170f8 <lbaselib.c:194:38> 'char [5]' lvalue "stop"
"stop"
   2: ImplicitCastExpr 0x562da2817410 <lbaselib.c:194:38> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da28170f8 <col:38> 'char [5]' lvalue "stop"
[B7.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x562da2817428 <lbaselib.c:194:38> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2817410 <col:38> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da28170f8 <col:38> 'char [5]' lvalue "stop"
[B7.2] (ImplicitCastExpr, BitCast, const char *)
   4: StringLiteral 0x562da2817128 <lbaselib.c:194:46> 'char [8]' lvalue "restart"
"restart"
   5: ImplicitCastExpr 0x562da2817448 <lbaselib.c:194:46> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2817128 <col:46> 'char [8]' lvalue "restart"
[B7.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: ImplicitCastExpr 0x562da2817460 <lbaselib.c:194:46> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2817448 <col:46> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2817128 <col:46> 'char [8]' lvalue "restart"
[B7.5] (ImplicitCastExpr, BitCast, const char *)
   7: StringLiteral 0x562da2817158 <lbaselib.c:194:57> 'char [8]' lvalue "collect"
"collect"
   8: ImplicitCastExpr 0x562da2817488 <lbaselib.c:194:57> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2817158 <col:57> 'char [8]' lvalue "collect"
[B7.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x562da28174a0 <lbaselib.c:194:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2817488 <col:57> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2817158 <col:57> 'char [8]' lvalue "collect"
[B7.8] (ImplicitCastExpr, BitCast, const char *)
  10: StringLiteral 0x562da28171c8 <lbaselib.c:195:5> 'char [6]' lvalue "count"
"count"
  11: ImplicitCastExpr 0x562da28174d8 <lbaselib.c:195:5> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da28171c8 <col:5> 'char [6]' lvalue "count"
[B7.10] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  12: ImplicitCastExpr 0x562da28174f0 <lbaselib.c:195:5> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da28174d8 <col:5> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da28171c8 <col:5> 'char [6]' lvalue "count"
[B7.11] (ImplicitCastExpr, BitCast, const char *)
  13: StringLiteral 0x562da28171f8 <lbaselib.c:195:14> 'char [5]' lvalue "step"
"step"
  14: ImplicitCastExpr 0x562da2817508 <lbaselib.c:195:14> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da28171f8 <col:14> 'char [5]' lvalue "step"
[B7.13] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  15: ImplicitCastExpr 0x562da2817520 <lbaselib.c:195:14> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2817508 <col:14> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da28171f8 <col:14> 'char [5]' lvalue "step"
[B7.14] (ImplicitCastExpr, BitCast, const char *)
  16: StringLiteral 0x562da2817228 <lbaselib.c:195:22> 'char [9]' lvalue "setpause"
"setpause"
  17: ImplicitCastExpr 0x562da2817578 <lbaselib.c:195:22> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2817228 <col:22> 'char [9]' lvalue "setpause"
[B7.16] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  18: ImplicitCastExpr 0x562da2817590 <lbaselib.c:195:22> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da2817578 <col:22> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2817228 <col:22> 'char [9]' lvalue "setpause"
[B7.17] (ImplicitCastExpr, BitCast, const char *)
  19: StringLiteral 0x562da2817298 <lbaselib.c:195:34> 'char [11]' lvalue "setstepmul"
"setstepmul"
  20: ImplicitCastExpr 0x562da28175a8 <lbaselib.c:195:34> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da2817298 <col:34> 'char [11]' lvalue "setstepmul"
[B7.19] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  21: ImplicitCastExpr 0x562da28175c0 <lbaselib.c:195:34> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da28175a8 <col:34> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da2817298 <col:34> 'char [11]' lvalue "setstepmul"
[B7.20] (ImplicitCastExpr, BitCast, const char *)
  22: IntegerLiteral 0x562da28172d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  23: CStyleCastExpr 0x562da2817308 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562da28172d0 <col:24> 'int' 0
(void *)[B7.22] (CStyleCastExpr, NullToPointer, void *)
  24: ImplicitCastExpr 0x562da28175d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
`-ParenExpr 0x562da2817330 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562da2817308 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562da28172d0 <col:24> 'int' 0
([B7.23]) (ImplicitCastExpr, NullToPointer, const char *const)
  25: InitListExpr 0x562da28173d0 <lbaselib.c:194:37, line:195:52> 'const char *const [8]'
|-ImplicitCastExpr 0x562da2817428 <line:194:38> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2817410 <col:38> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da28170f8 <col:38> 'char [5]' lvalue "stop"
|-ImplicitCastExpr 0x562da2817460 <col:46> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2817448 <col:46> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da2817128 <col:46> 'char [8]' lvalue "restart"
|-ImplicitCastExpr 0x562da28174a0 <col:57> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2817488 <col:57> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da2817158 <col:57> 'char [8]' lvalue "collect"
|-ImplicitCastExpr 0x562da28174f0 <line:195:5> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da28174d8 <col:5> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da28171c8 <col:5> 'char [6]' lvalue "count"
|-ImplicitCastExpr 0x562da2817520 <col:14> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2817508 <col:14> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da28171f8 <col:14> 'char [5]' lvalue "step"
|-ImplicitCastExpr 0x562da2817590 <col:22> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da2817578 <col:22> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da2817228 <col:22> 'char [9]' lvalue "setpause"
|-ImplicitCastExpr 0x562da28175c0 <col:34> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da28175a8 <col:34> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da2817298 <col:34> 'char [11]' lvalue "setstepmul"
`-ImplicitCastExpr 0x562da28175d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
  `-ParenExpr 0x562da2817330 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562da2817308 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562da28172d0 <col:24> 'int' 0
{[B7.3], [B7.6], [B7.9], [B7.12], [B7.15], [B7.18], [B7.21], [B7.24]}
  26: DeclStmt 0x562da2817668 <lbaselib.c:194:3, line:195:53>line:194:28
`-VarDecl 0x562da2817060 <col:3, line:195:52> line:194:28 used opts 'const char *const [8]' static cinit
  `-InitListExpr 0x562da28173d0 <col:37, line:195:52> 'const char *const [8]'
    |-ImplicitCastExpr 0x562da2817428 <line:194:38> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da2817410 <col:38> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da28170f8 <col:38> 'char [5]' lvalue "stop"
    |-ImplicitCastExpr 0x562da2817460 <col:46> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da2817448 <col:46> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da2817128 <col:46> 'char [8]' lvalue "restart"
    |-ImplicitCastExpr 0x562da28174a0 <col:57> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da2817488 <col:57> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da2817158 <col:57> 'char [8]' lvalue "collect"
    |-ImplicitCastExpr 0x562da28174f0 <line:195:5> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da28174d8 <col:5> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da28171c8 <col:5> 'char [6]' lvalue "count"
    |-ImplicitCastExpr 0x562da2817520 <col:14> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da2817508 <col:14> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da28171f8 <col:14> 'char [5]' lvalue "step"
    |-ImplicitCastExpr 0x562da2817590 <col:22> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da2817578 <col:22> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da2817228 <col:22> 'char [9]' lvalue "setpause"
    |-ImplicitCastExpr 0x562da28175c0 <col:34> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x562da28175a8 <col:34> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x562da2817298 <col:34> 'char [11]' lvalue "setstepmul"
    `-ImplicitCastExpr 0x562da28175d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
      `-ParenExpr 0x562da2817330 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x562da2817308 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x562da28172d0 <col:24> 'int' 0
static const char *const opts[] = {"stop", "restart", "collect", "count", "step", "setpause", "setstepmul", ((void *)0)};
   Preds (1): B8
   Succs (1): B6

 [B8]
   T: static init opts
   Preds (1): B9
   Succs (2): B6 B7

 [B0 (EXIT)]
   Preds (3): B2 B3 B4
