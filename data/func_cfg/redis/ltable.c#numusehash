static int numusehash(const Table *t, int *nums, int *pnasize)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x5654000dd128 <ltable.c:258:4> 'int *' lvalue ParmVar 0x5654000dc470 'pnasize' 'int *'
pnasize
   2: ImplicitCastExpr 0x5654000dd150 <ltable.c:258:4> 'int *' <LValueToRValue>
`-DeclRefExpr 0x5654000dd128 <col:4> 'int *' lvalue ParmVar 0x5654000dc470 'pnasize' 'int *'
[B1.1] (ImplicitCastExpr, LValueToRValue, int *)
   3: UnaryOperator 0x5654000dd168 <ltable.c:258:3, col:4> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x5654000dd150 <col:4> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x5654000dd128 <col:4> 'int *' lvalue ParmVar 0x5654000dc470 'pnasize' 'int *'
*[B1.2]
   4: DeclRefExpr 0x5654000dd188 <ltable.c:258:15> 'int' lvalue Var 0x5654000dc728 'ause' 'int'
ause
   5: ImplicitCastExpr 0x5654000dd1b0 <ltable.c:258:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000dd188 <col:15> 'int' lvalue Var 0x5654000dc728 'ause' 'int'
[B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: CompoundAssignOperator 0x5654000dd1c8 <ltable.c:258:3, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|-UnaryOperator 0x5654000dd168 <col:3, col:4> 'int' lvalue prefix '*'
| `-ImplicitCastExpr 0x5654000dd150 <col:4> 'int *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000dd128 <col:4> 'int *' lvalue ParmVar 0x5654000dc470 'pnasize' 'int *'
`-ImplicitCastExpr 0x5654000dd1b0 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000dd188 <col:15> 'int' lvalue Var 0x5654000dc728 'ause' 'int'
[B1.3] += [B1.5]
   7: DeclRefExpr 0x5654000dd200 <ltable.c:259:10> 'int' lvalue Var 0x5654000dc678 'totaluse' 'int'
totaluse
   8: ImplicitCastExpr 0x5654000dd228 <ltable.c:259:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000dd200 <col:10> 'int' lvalue Var 0x5654000dc678 'totaluse' 'int'
[B1.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ReturnStmt 0x5654000dd240 <ltable.c:259:3, col:10>
`-ImplicitCastExpr 0x5654000dd228 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000dd200 <col:10> 'int' lvalue Var 0x5654000dc678 'totaluse' 'int'
return [B1.8];
   Preds (1): B5
   Succs (1): B0

 [B2]
   Preds (2): B3 B4
   Succs (1): B5

 [B3]
   1: DeclRefExpr 0x5654000dcd98 <ltable.c:254:7> 'int' lvalue Var 0x5654000dc728 'ause' 'int'
ause
   2: DeclRefExpr 0x5654000dcdc0 <ltable.c:254:15> 'int (const TValue *, int *)' Function 0x5654000da978 'countint' 'int (const TValue *, int *)'
countint
   3: ImplicitCastExpr 0x5654000dcf78 <ltable.c:254:15> 'int (*)(const TValue *, int *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000dcdc0 <col:15> 'int (const TValue *, int *)' Function 0x5654000da978 'countint' 'int (const TValue *, int *)'
[B3.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const TValue *, int *))
   4: DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
n
   5: ImplicitCastExpr 0x5654000dce30 <./ltable.h:18:23, col:25> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000dce10 <col:23, col:25> 'Node *' lvalue
  `-DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
([B3.4]) (ImplicitCastExpr, LValueToRValue, Node *)
   6: MemberExpr 0x5654000dce48 <./ltable.h:18:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000dce30 <col:23, col:25> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000dce10 <col:23, col:25> 'Node *' lvalue
    `-DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
[B3.5]->i_key
   7: MemberExpr 0x5654000dce80 <./ltable.h:18:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
`-MemberExpr 0x5654000dce48 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000dce30 <col:23, col:25> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000dce10 <col:23, col:25> 'Node *' lvalue
      `-DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
[B3.6].tvk
   8: UnaryOperator 0x5654000dceb8 <./ltable.h:18:22, col:34> 'TValue *' prefix '&'
`-MemberExpr 0x5654000dce80 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
  `-MemberExpr 0x5654000dce48 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000dce30 <col:23, col:25> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000dce10 <col:23, col:25> 'Node *' lvalue
        `-DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
&[B3.7]
   9: ImplicitCastExpr 0x5654000dcfe0 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000dced8 <col:21, col:37> 'TValue *'
  `-UnaryOperator 0x5654000dceb8 <col:22, col:34> 'TValue *' prefix '&'
    `-MemberExpr 0x5654000dce80 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
      `-MemberExpr 0x5654000dce48 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000dce30 <col:23, col:25> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000dce10 <col:23, col:25> 'Node *' lvalue
            `-DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
([B3.8]) (ImplicitCastExpr, BitCast, const TValue *)
  10: DeclRefExpr 0x5654000dcef8 <ltable.c:254:37> 'int *' lvalue ParmVar 0x5654000dc3f8 'nums' 'int *'
nums
  11: ImplicitCastExpr 0x5654000dcff8 <ltable.c:254:37> 'int *' <LValueToRValue>
`-DeclRefExpr 0x5654000dcef8 <col:37> 'int *' lvalue ParmVar 0x5654000dc3f8 'nums' 'int *'
[B3.10] (ImplicitCastExpr, LValueToRValue, int *)
  12: CallExpr 0x5654000dcf90 <ltable.c:254:15, col:41> 'int'
|-ImplicitCastExpr 0x5654000dcf78 <col:15> 'int (*)(const TValue *, int *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000dcdc0 <col:15> 'int (const TValue *, int *)' Function 0x5654000da978 'countint' 'int (const TValue *, int *)'
|-ImplicitCastExpr 0x5654000dcfe0 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
| `-ParenExpr 0x5654000dced8 <col:21, col:37> 'TValue *'
|   `-UnaryOperator 0x5654000dceb8 <col:22, col:34> 'TValue *' prefix '&'
|     `-MemberExpr 0x5654000dce80 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
|       `-MemberExpr 0x5654000dce48 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|         `-ImplicitCastExpr 0x5654000dce30 <col:23, col:25> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000dce10 <col:23, col:25> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
`-ImplicitCastExpr 0x5654000dcff8 <col:37> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x5654000dcef8 <col:37> 'int *' lvalue ParmVar 0x5654000dc3f8 'nums' 'int *'
[B3.3]([B3.9], [B3.11])
  13: CompoundAssignOperator 0x5654000dd010 <ltable.c:254:7, col:41> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x5654000dcd98 <col:7> 'int' lvalue Var 0x5654000dc728 'ause' 'int'
`-CallExpr 0x5654000dcf90 <col:15, col:41> 'int'
  |-ImplicitCastExpr 0x5654000dcf78 <col:15> 'int (*)(const TValue *, int *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000dcdc0 <col:15> 'int (const TValue *, int *)' Function 0x5654000da978 'countint' 'int (const TValue *, int *)'
  |-ImplicitCastExpr 0x5654000dcfe0 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
  | `-ParenExpr 0x5654000dced8 <col:21, col:37> 'TValue *'
  |   `-UnaryOperator 0x5654000dceb8 <col:22, col:34> 'TValue *' prefix '&'
  |     `-MemberExpr 0x5654000dce80 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
  |       `-MemberExpr 0x5654000dce48 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  |         `-ImplicitCastExpr 0x5654000dce30 <col:23, col:25> 'Node *' <LValueToRValue>
  |           `-ParenExpr 0x5654000dce10 <col:23, col:25> 'Node *' lvalue
  |             `-DeclRefExpr 0x5654000dcde8 <ltable.c:254:33> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
  `-ImplicitCastExpr 0x5654000dcff8 <col:37> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x5654000dcef8 <col:37> 'int *' lvalue ParmVar 0x5654000dc3f8 'nums' 'int *'
[B3.1] += [B3.12]
  14: DeclRefExpr 0x5654000dd048 <ltable.c:255:7> 'int' lvalue Var 0x5654000dc678 'totaluse' 'int'
totaluse
  15: UnaryOperator 0x5654000dd070 <ltable.c:255:7, col:15> 'int' postfix '++'
`-DeclRefExpr 0x5654000dd048 <col:7> 'int' lvalue Var 0x5654000dc678 'totaluse' 'int'
[B3.14]++
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5654000dca78 <ltable.c:252:16> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
t
   2: ImplicitCastExpr 0x5654000dcaa0 <ltable.c:252:16> 'const Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000dca78 <col:16> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
[B4.1] (ImplicitCastExpr, LValueToRValue, const Table *)
   3: MemberExpr 0x5654000dcab8 <ltable.c:252:16, col:19> 'Node *const' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000dcaa0 <col:16> 'const Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000dca78 <col:16> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
[B4.2]->node
   4: ImplicitCastExpr 0x5654000dcb18 <ltable.c:252:16, col:19> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000dcab8 <col:16, col:19> 'Node *const' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000dcaa0 <col:16> 'const Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000dca78 <col:16> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
[B4.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: DeclRefExpr 0x5654000dcaf0 <ltable.c:252:24> 'int' lvalue Var 0x5654000dc7d8 'i' 'int'
i
   6: ImplicitCastExpr 0x5654000dcb30 <ltable.c:252:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000dcaf0 <col:24> 'int' lvalue Var 0x5654000dc7d8 'i' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x5654000dcb48 <ltable.c:252:16, col:25> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x5654000dcb18 <col:16, col:19> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000dcab8 <col:16, col:19> 'Node *const' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000dcaa0 <col:16> 'const Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000dca78 <col:16> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
`-ImplicitCastExpr 0x5654000dcb30 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000dcaf0 <col:24> 'int' lvalue Var 0x5654000dc7d8 'i' 'int'
[B4.4][[B4.6]]
   8: UnaryOperator 0x5654000dcb70 <ltable.c:252:15, col:25> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x5654000dcb48 <col:16, col:25> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x5654000dcb18 <col:16, col:19> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x5654000dcab8 <col:16, col:19> 'Node *const' lvalue ->node 0x56540009ad58
  |   `-ImplicitCastExpr 0x5654000dcaa0 <col:16> 'const Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x5654000dca78 <col:16> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
  `-ImplicitCastExpr 0x5654000dcb30 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000dcaf0 <col:24> 'int' lvalue Var 0x5654000dc7d8 'i' 'int'
&[B4.7]
   9: DeclStmt 0x5654000dcb90 <ltable.c:252:5, col:26>col:11
`-VarDecl 0x5654000dca18 <col:5, col:25> col:11 used n 'Node *' cinit
  `-UnaryOperator 0x5654000dcb70 <col:15, col:25> 'Node *' prefix '&'
    `-ArraySubscriptExpr 0x5654000dcb48 <col:16, col:25> 'Node':'struct Node' lvalue
      |-ImplicitCastExpr 0x5654000dcb18 <col:16, col:19> 'Node *' <LValueToRValue>
      | `-MemberExpr 0x5654000dcab8 <col:16, col:19> 'Node *const' lvalue ->node 0x56540009ad58
      |   `-ImplicitCastExpr 0x5654000dcaa0 <col:16> 'const Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x5654000dca78 <col:16> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
      `-ImplicitCastExpr 0x5654000dcb30 <col:24> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5654000dcaf0 <col:24> 'int' lvalue Var 0x5654000dc7d8 'i' 'int'
Node *n = &t->node[i];
  10: DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
n
  11: ImplicitCastExpr 0x5654000dcbf0 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000dcbd0 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
([B4.10]) (ImplicitCastExpr, LValueToRValue, Node *)
  12: MemberExpr 0x5654000dcc08 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ImplicitCastExpr 0x5654000dcbf0 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000dcbd0 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
[B4.11]->i_val
  13: UnaryOperator 0x5654000dcc40 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000dcc08 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ImplicitCastExpr 0x5654000dcbf0 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000dcbd0 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
&[B4.12]
  14: MemberExpr 0x5654000dcca0 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000dcc80 <col:19, col:21> 'TValue *'
  `-ParenExpr 0x5654000dcc60 <./ltable.h:15:18, col:30> 'TValue *'
    `-UnaryOperator 0x5654000dcc40 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000dcc08 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
        `-ImplicitCastExpr 0x5654000dcbf0 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000dcbd0 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
(([B4.13]))->tt
  15: ImplicitCastExpr 0x5654000dcd18 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000dccd8 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000dcca0 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ParenExpr 0x5654000dcc80 <col:19, col:21> 'TValue *'
      `-ParenExpr 0x5654000dcc60 <./ltable.h:15:18, col:30> 'TValue *'
        `-UnaryOperator 0x5654000dcc40 <col:19, col:25> 'TValue *' prefix '&'
          `-MemberExpr 0x5654000dcc08 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
            `-ImplicitCastExpr 0x5654000dcbf0 <col:20, col:22> 'Node *' <LValueToRValue>
              `-ParenExpr 0x5654000dcbd0 <col:20, col:22> 'Node *' lvalue
                `-DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
([B4.14]) (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x5654000dccf8 <./lua.h:74:19> 'int' 0
0
  17: BinaryOperator 0x5654000dcd30 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000dcd18 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000dccd8 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000dcca0 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ParenExpr 0x5654000dcc80 <col:19, col:21> 'TValue *'
|       `-ParenExpr 0x5654000dcc60 <./ltable.h:15:18, col:30> 'TValue *'
|         `-UnaryOperator 0x5654000dcc40 <col:19, col:25> 'TValue *' prefix '&'
|           `-MemberExpr 0x5654000dcc08 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
|             `-ImplicitCastExpr 0x5654000dcbf0 <col:20, col:22> 'Node *' <LValueToRValue>
|               `-ParenExpr 0x5654000dcbd0 <col:20, col:22> 'Node *' lvalue
|                 `-DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
`-IntegerLiteral 0x5654000dccf8 <./lua.h:74:19> 'int' 0
[B4.15] == [B4.16]
  18: UnaryOperator 0x5654000dcd78 <ltable.c:253:9, ./lobject.h:79:41> 'int' prefix '!'
`-ParenExpr 0x5654000dcd58 <col:20, col:41> 'int'
  `-BinaryOperator 0x5654000dcd30 <line:90:18, ./lua.h:74:19> 'int' '=='
    |-ImplicitCastExpr 0x5654000dcd18 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x5654000dccd8 <col:18, col:26> 'int' lvalue
    |   `-MemberExpr 0x5654000dcca0 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    |     `-ParenExpr 0x5654000dcc80 <col:19, col:21> 'TValue *'
    |       `-ParenExpr 0x5654000dcc60 <./ltable.h:15:18, col:30> 'TValue *'
    |         `-UnaryOperator 0x5654000dcc40 <col:19, col:25> 'TValue *' prefix '&'
    |           `-MemberExpr 0x5654000dcc08 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
    |             `-ImplicitCastExpr 0x5654000dcbf0 <col:20, col:22> 'Node *' <LValueToRValue>
    |               `-ParenExpr 0x5654000dcbd0 <col:20, col:22> 'Node *' lvalue
    |                 `-DeclRefExpr 0x5654000dcba8 <ltable.c:253:23> 'Node *' lvalue Var 0x5654000dca18 'n' 'Node *'
    `-IntegerLiteral 0x5654000dccf8 <./lua.h:74:19> 'int' 0
!([B4.17])
   T: if [B4.18]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x5654000dc9c0 <ltable.c:251:10> 'int' lvalue Var 0x5654000dc7d8 'i' 'int'
i
   2: UnaryOperator 0x5654000dc9e8 <ltable.c:251:10, col:11> 'int' postfix '--'
`-DeclRefExpr 0x5654000dc9c0 <col:10> 'int' lvalue Var 0x5654000dc7d8 'i' 'int'
[B5.1]--
   T: while [B5.2]
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: IntegerLiteral 0x5654000dc6d8 <ltable.c:248:18> 'int' 0
0
   2: DeclStmt 0x5654000dc6f8 <ltable.c:248:3, col:19>col:7
`-VarDecl 0x5654000dc678 <col:3, col:18> col:7 used totaluse 'int' cinit
  `-IntegerLiteral 0x5654000dc6d8 <col:18> 'int' 0
int totaluse = 0;
   3: IntegerLiteral 0x5654000dc788 <ltable.c:249:14> 'int' 0
0
   4: DeclStmt 0x5654000dc7a8 <ltable.c:249:3, col:15>col:7
`-VarDecl 0x5654000dc728 <col:3, col:14> col:7 used ause 'int' cinit
  `-IntegerLiteral 0x5654000dc788 <col:14> 'int' 0
int ause = 0;
   5: IntegerLiteral 0x5654000dc838 <./lobject.h:359:19> 'int' 1
1
   6: DeclRefExpr 0x5654000dc858 <ltable.c:250:20> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
t
   7: ImplicitCastExpr 0x5654000dc8a0 <./lobject.h:360:28, col:30> 'const Table *' <LValueToRValue>
`-ParenExpr 0x5654000dc880 <col:28, col:30> 'const Table *' lvalue
  `-DeclRefExpr 0x5654000dc858 <ltable.c:250:20> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
([B6.6]) (ImplicitCastExpr, LValueToRValue, const Table *)
   8: MemberExpr 0x5654000dc8b8 <./lobject.h:360:28, col:33> 'const lu_byte':'const unsigned char' lvalue ->lsizenode 0x56540009abf0
`-ImplicitCastExpr 0x5654000dc8a0 <col:28, col:30> 'const Table *' <LValueToRValue>
  `-ParenExpr 0x5654000dc880 <col:28, col:30> 'const Table *' lvalue
    `-DeclRefExpr 0x5654000dc858 <ltable.c:250:20> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
[B6.7]->lsizenode
   9: ImplicitCastExpr 0x5654000dc910 <./lobject.h:359:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x5654000dc8f0 <col:22, col:24> 'const lu_byte':'const unsigned char' lvalue
  `-MemberExpr 0x5654000dc8b8 <line:360:28, col:33> 'const lu_byte':'const unsigned char' lvalue ->lsizenode 0x56540009abf0
    `-ImplicitCastExpr 0x5654000dc8a0 <col:28, col:30> 'const Table *' <LValueToRValue>
      `-ParenExpr 0x5654000dc880 <col:28, col:30> 'const Table *' lvalue
        `-DeclRefExpr 0x5654000dc858 <ltable.c:250:20> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
([B6.8]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  10: ImplicitCastExpr 0x5654000dc928 <./lobject.h:359:22, col:24> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5654000dc910 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x5654000dc8f0 <col:22, col:24> 'const lu_byte':'const unsigned char' lvalue
    `-MemberExpr 0x5654000dc8b8 <line:360:28, col:33> 'const lu_byte':'const unsigned char' lvalue ->lsizenode 0x56540009abf0
      `-ImplicitCastExpr 0x5654000dc8a0 <col:28, col:30> 'const Table *' <LValueToRValue>
        `-ParenExpr 0x5654000dc880 <col:28, col:30> 'const Table *' lvalue
          `-DeclRefExpr 0x5654000dc858 <ltable.c:250:20> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
[B6.9] (ImplicitCastExpr, IntegralCast, int)
  11: BinaryOperator 0x5654000dc940 <./lobject.h:359:19, col:24> 'int' '<<'
|-IntegerLiteral 0x5654000dc838 <col:19> 'int' 1
`-ImplicitCastExpr 0x5654000dc928 <col:22, col:24> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x5654000dc910 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
    `-ParenExpr 0x5654000dc8f0 <col:22, col:24> 'const lu_byte':'const unsigned char' lvalue
      `-MemberExpr 0x5654000dc8b8 <line:360:28, col:33> 'const lu_byte':'const unsigned char' lvalue ->lsizenode 0x56540009abf0
        `-ImplicitCastExpr 0x5654000dc8a0 <col:28, col:30> 'const Table *' <LValueToRValue>
          `-ParenExpr 0x5654000dc880 <col:28, col:30> 'const Table *' lvalue
            `-DeclRefExpr 0x5654000dc858 <ltable.c:250:20> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
[B6.5] << [B6.10]
  12: DeclStmt 0x5654000dc9a8 <ltable.c:250:3, col:22>col:7
`-VarDecl 0x5654000dc7d8 <col:3, ./lobject.h:360:43> ltable.c:250:7 used i 'int' cinit
  `-ParenExpr 0x5654000dc988 <./lobject.h:360:21, col:43> 'int'
    `-ParenExpr 0x5654000dc968 <line:359:18, col:25> 'int'
      `-BinaryOperator 0x5654000dc940 <col:19, col:24> 'int' '<<'
        |-IntegerLiteral 0x5654000dc838 <col:19> 'int' 1
        `-ImplicitCastExpr 0x5654000dc928 <col:22, col:24> 'int' <IntegralCast>
          `-ImplicitCastExpr 0x5654000dc910 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
            `-ParenExpr 0x5654000dc8f0 <col:22, col:24> 'const lu_byte':'const unsigned char' lvalue
              `-MemberExpr 0x5654000dc8b8 <line:360:28, col:33> 'const lu_byte':'const unsigned char' lvalue ->lsizenode 0x56540009abf0
                `-ImplicitCastExpr 0x5654000dc8a0 <col:28, col:30> 'const Table *' <LValueToRValue>
                  `-ParenExpr 0x5654000dc880 <col:28, col:30> 'const Table *' lvalue
                    `-DeclRefExpr 0x5654000dc858 <ltable.c:250:20> 'const Table *' lvalue ParmVar 0x5654000dc380 't' 'const Table *'
int i = ((1 << ((t)->lsizenode)));
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (1): B1
