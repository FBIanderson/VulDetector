static int pmain(lua_State *L)
 [B28 (ENTRY)]
   Succs (1): B27

 [B1]
   1: IntegerLiteral 0x55cfe6374978 <lua.c:373:10> 'int' 0
0
   2: ReturnStmt 0x55cfe6374998 <lua.c:373:3, col:10>
`-IntegerLiteral 0x55cfe6374978 <col:10> 'int' 0
return [B1.1];
   Preds (6): B2 B3 B5 B6 B7 B8
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55cfe6374768 <lua.c:371:10> 'int (lua_State *, const char *)' Function 0x55cfe6361f58 'dofile' 'int (lua_State *, const char *)'
dofile
   2: ImplicitCastExpr 0x55cfe6374838 <lua.c:371:10> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6374768 <col:10> 'int (lua_State *, const char *)' Function 0x55cfe6361f58 'dofile' 'int (lua_State *, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *))
   3: DeclRefExpr 0x55cfe6374790 <lua.c:371:17> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6374888 <lua.c:371:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6374790 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55cfe63747b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x55cfe63747f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55cfe63747b8 <col:24> 'int' 0
(void *)[B2.5] (CStyleCastExpr, NullToPointer, void *)
   7: ImplicitCastExpr 0x55cfe63748a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x55cfe6374818 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55cfe63747f0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55cfe63747b8 <col:24> 'int' 0
([B2.6]) (ImplicitCastExpr, NullToPointer, const char *)
   8: CallExpr 0x55cfe6374850 <lua.c:371:10, col:24> 'int'
|-ImplicitCastExpr 0x55cfe6374838 <col:10> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6374768 <col:10> 'int (lua_State *, const char *)' Function 0x55cfe6361f58 'dofile' 'int (lua_State *, const char *)'
|-ImplicitCastExpr 0x55cfe6374888 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6374790 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
`-ImplicitCastExpr 0x55cfe63748a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x55cfe6374818 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55cfe63747f0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55cfe63747b8 <col:24> 'int' 0
[B2.2]([B2.4], [B2.7])
   Preds (1): B4(Unreachable)
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55cfe6374610 <lua.c:368:7> 'void (void)' Function 0x55cfe6360718 'print_version' 'void (void)'
print_version
   2: ImplicitCastExpr 0x55cfe6374638 <lua.c:368:7> 'void (*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6374610 <col:7> 'void (void)' Function 0x55cfe6360718 'print_version' 'void (void)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void))
   3: CallExpr 0x55cfe6374650 <lua.c:368:7, col:21> 'void'
`-ImplicitCastExpr 0x55cfe6374638 <col:7> 'void (*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55cfe6374610 <col:7> 'void (void)' Function 0x55cfe6360718 'print_version' 'void (void)'
[B3.2]()
   4: DeclRefExpr 0x55cfe6374678 <lua.c:369:7> 'void (lua_State *)' Function 0x55cfe636b920 'dotty' 'void (lua_State *)'
dotty
   5: ImplicitCastExpr 0x55cfe63746e8 <lua.c:369:7> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6374678 <col:7> 'void (lua_State *)' Function 0x55cfe636b920 'dotty' 'void (lua_State *)'
[B3.4] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   6: DeclRefExpr 0x55cfe63746c0 <lua.c:369:13> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55cfe6374730 <lua.c:369:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe63746c0 <col:13> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B3.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: CallExpr 0x55cfe6374700 <lua.c:369:7, col:14> 'void'
|-ImplicitCastExpr 0x55cfe63746e8 <col:7> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6374678 <col:7> 'void (lua_State *)' Function 0x55cfe636b920 'dotty' 'void (lua_State *)'
`-ImplicitCastExpr 0x55cfe6374730 <col:13> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63746c0 <col:13> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B3.5]([B3.7])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: IntegerLiteral 0x55cfe63745f0 <./luaconf.h:235:28> 'int' 1
1
   T: if [B4.1]
   Preds (1): B5
   Succs (2): B3 B2(Unreachable)

 [B5]
   1: DeclRefExpr 0x55cfe6374568 <lua.c:366:38> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
has_v
   2: ImplicitCastExpr 0x55cfe6374590 <lua.c:366:38> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6374568 <col:38> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x55cfe63745a8 <lua.c:366:37, col:38> 'int' prefix '!'
`-ImplicitCastExpr 0x55cfe6374590 <col:38> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6374568 <col:38> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
![B5.2]
   T: if [B7.4] && [B6.3] && [B5.3]
   Preds (1): B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x55cfe63744e0 <lua.c:366:28> 'int' lvalue Var 0x55cfe6372b90 'has_e' 'int'
has_e
   2: ImplicitCastExpr 0x55cfe6374508 <lua.c:366:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe63744e0 <col:28> 'int' lvalue Var 0x55cfe6372b90 'has_e' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x55cfe6374520 <lua.c:366:27, col:28> 'int' prefix '!'
`-ImplicitCastExpr 0x55cfe6374508 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63744e0 <col:28> 'int' lvalue Var 0x55cfe6372b90 'has_e' 'int'
![B6.2]
   T: [B7.4] && [B6.3] && ...
   Preds (1): B7
   Succs (2): B5 B1

 [B7]
   1: DeclRefExpr 0x55cfe6374458 <lua.c:366:12> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
script
   2: ImplicitCastExpr 0x55cfe63744a0 <lua.c:366:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6374458 <col:12> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55cfe6374480 <lua.c:366:22> 'int' 0
0
   4: BinaryOperator 0x55cfe63744b8 <lua.c:366:12, col:22> 'int' '=='
|-ImplicitCastExpr 0x55cfe63744a0 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6374458 <col:12> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
`-IntegerLiteral 0x55cfe6374480 <col:22> 'int' 0
[B7.2] == [B7.3]
   T: [B7.4] && ...
   Preds (1): B9
   Succs (2): B6 B1

 [B8]
   1: DeclRefExpr 0x55cfe6374380 <lua.c:365:5> 'void (lua_State *)' Function 0x55cfe636b920 'dotty' 'void (lua_State *)'
dotty
   2: ImplicitCastExpr 0x55cfe63743f8 <lua.c:365:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6374380 <col:5> 'void (lua_State *)' Function 0x55cfe636b920 'dotty' 'void (lua_State *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   3: DeclRefExpr 0x55cfe63743a8 <lua.c:365:11> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6374440 <lua.c:365:11> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe63743a8 <col:11> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x55cfe6374410 <lua.c:365:5, col:12> 'void'
|-ImplicitCastExpr 0x55cfe63743f8 <col:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6374380 <col:5> 'void (lua_State *)' Function 0x55cfe636b920 'dotty' 'void (lua_State *)'
`-ImplicitCastExpr 0x55cfe6374440 <col:11> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63743a8 <col:11> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B8.2]([B8.4])
   Preds (1): B9
   Succs (1): B1

 [B9]
   1: DeclRefExpr 0x55cfe6374340 <lua.c:364:7> 'int' lvalue Var 0x55cfe6372a60 'has_i' 'int'
has_i
   2: ImplicitCastExpr 0x55cfe6374368 <lua.c:364:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6374340 <col:7> 'int' lvalue Var 0x55cfe6372a60 'has_i' 'int'
[B9.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B9.2]
   Preds (1): B11
   Succs (2): B8 B7

 [B10]
   1: IntegerLiteral 0x55cfe63742d0 <lua.c:363:30> 'int' 0
0
   2: ReturnStmt 0x55cfe63742f0 <lua.c:363:23, col:30>
`-IntegerLiteral 0x55cfe63742d0 <col:30> 'int' 0
return [B10.1];
   Preds (1): B11
   Succs (1): B0

 [B11]
   1: DeclRefExpr 0x55cfe63741f8 <lua.c:363:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
   2: ImplicitCastExpr 0x55cfe6374220 <lua.c:363:7> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe63741f8 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B11.1] (ImplicitCastExpr, LValueToRValue, struct Smain *)
   3: MemberExpr 0x55cfe6374238 <lua.c:363:7, col:10> 'int' lvalue ->status 0x55cfe6372438
`-ImplicitCastExpr 0x55cfe6374220 <col:7> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63741f8 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B11.2]->status
   4: ImplicitCastExpr 0x55cfe6374290 <lua.c:363:7, col:10> 'int' <LValueToRValue>
`-MemberExpr 0x55cfe6374238 <col:7, col:10> 'int' lvalue ->status 0x55cfe6372438
  `-ImplicitCastExpr 0x55cfe6374220 <col:7> 'struct Smain *' <LValueToRValue>
    `-DeclRefExpr 0x55cfe63741f8 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B11.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55cfe6374270 <lua.c:363:20> 'int' 0
0
   6: BinaryOperator 0x55cfe63742a8 <lua.c:363:7, col:20> 'int' '!='
|-ImplicitCastExpr 0x55cfe6374290 <col:7, col:10> 'int' <LValueToRValue>
| `-MemberExpr 0x55cfe6374238 <col:7, col:10> 'int' lvalue ->status 0x55cfe6372438
|   `-ImplicitCastExpr 0x55cfe6374220 <col:7> 'struct Smain *' <LValueToRValue>
|     `-DeclRefExpr 0x55cfe63741f8 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
`-IntegerLiteral 0x55cfe6374270 <col:20> 'int' 0
[B11.4] != [B11.5]
   T: if [B11.6]
   Preds (2): B12 B13
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x55cfe6374058 <lua.c:362:17> 'int (lua_State *, char **, int)' Function 0x55cfe636d110 'handle_script' 'int (lua_State *, char **, int)'
handle_script
   2: ImplicitCastExpr 0x55cfe63740f8 <lua.c:362:17> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6374058 <col:17> 'int (lua_State *, char **, int)' Function 0x55cfe636d110 'handle_script' 'int (lua_State *, char **, int)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, char **, int))
   3: DeclRefExpr 0x55cfe6374080 <lua.c:362:31> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6374150 <lua.c:362:31> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6374080 <col:31> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe63740a8 <lua.c:362:34> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
argv
   6: ImplicitCastExpr 0x55cfe6374168 <lua.c:362:34> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe63740a8 <col:34> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
[B12.5] (ImplicitCastExpr, LValueToRValue, char **)
   7: DeclRefExpr 0x55cfe63740d0 <lua.c:362:40> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
script
   8: ImplicitCastExpr 0x55cfe6374180 <lua.c:362:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe63740d0 <col:40> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B12.7] (ImplicitCastExpr, LValueToRValue, int)
   9: CallExpr 0x55cfe6374110 <lua.c:362:17, col:46> 'int'
|-ImplicitCastExpr 0x55cfe63740f8 <col:17> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6374058 <col:17> 'int (lua_State *, char **, int)' Function 0x55cfe636d110 'handle_script' 'int (lua_State *, char **, int)'
|-ImplicitCastExpr 0x55cfe6374150 <col:31> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6374080 <col:31> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
|-ImplicitCastExpr 0x55cfe6374168 <col:34> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe63740a8 <col:34> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
`-ImplicitCastExpr 0x55cfe6374180 <col:40> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63740d0 <col:40> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B12.2]([B12.4], [B12.6], [B12.8])
  10: DeclRefExpr 0x55cfe6373fe0 <lua.c:362:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
  11: ImplicitCastExpr 0x55cfe6374008 <lua.c:362:5> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373fe0 <col:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B12.10] (ImplicitCastExpr, LValueToRValue, struct Smain *)
  12: MemberExpr 0x55cfe6374020 <lua.c:362:5, col:8> 'int' lvalue ->status 0x55cfe6372438
`-ImplicitCastExpr 0x55cfe6374008 <col:5> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6373fe0 <col:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B12.11]->status
  13: BinaryOperator 0x55cfe6374198 <lua.c:362:5, col:46> 'int' '='
|-MemberExpr 0x55cfe6374020 <col:5, col:8> 'int' lvalue ->status 0x55cfe6372438
| `-ImplicitCastExpr 0x55cfe6374008 <col:5> 'struct Smain *' <LValueToRValue>
|   `-DeclRefExpr 0x55cfe6373fe0 <col:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
`-CallExpr 0x55cfe6374110 <col:17, col:46> 'int'
  |-ImplicitCastExpr 0x55cfe63740f8 <col:17> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe6374058 <col:17> 'int (lua_State *, char **, int)' Function 0x55cfe636d110 'handle_script' 'int (lua_State *, char **, int)'
  |-ImplicitCastExpr 0x55cfe6374150 <col:31> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6374080 <col:31> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
  |-ImplicitCastExpr 0x55cfe6374168 <col:34> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe63740a8 <col:34> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
  `-ImplicitCastExpr 0x55cfe6374180 <col:40> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55cfe63740d0 <col:40> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B12.12] = [B12.9]
   Preds (1): B13
   Succs (1): B11

 [B13]
   1: DeclRefExpr 0x55cfe6373fa0 <lua.c:361:7> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
script
   2: ImplicitCastExpr 0x55cfe6373fc8 <lua.c:361:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373fa0 <col:7> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B13.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B13.2]
   Preds (1): B15
   Succs (2): B12 B11

 [B14]
   1: IntegerLiteral 0x55cfe6373f30 <lua.c:360:30> 'int' 0
0
   2: ReturnStmt 0x55cfe6373f50 <lua.c:360:23, col:30>
`-IntegerLiteral 0x55cfe6373f30 <col:30> 'int' 0
return [B14.1];
   Preds (1): B15
   Succs (1): B0

 [B15]
   1: ConditionalOperator 0x55cfe6373d78 <lua.c:359:32, col:59> 'int'
|-ParenExpr 0x55cfe6373c88 <col:32, col:43> 'int'
| `-BinaryOperator 0x55cfe6373c60 <col:33, col:42> 'int' '>'
|   |-ImplicitCastExpr 0x55cfe6373c48 <col:33> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55cfe6373c00 <col:33> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
|   `-IntegerLiteral 0x55cfe6373c28 <col:42> 'int' 0
|-ImplicitCastExpr 0x55cfe6373d48 <col:47> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6373ca8 <col:47> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
`-ImplicitCastExpr 0x55cfe6373d60 <col:56, col:59> 'int' <LValueToRValue>
  `-MemberExpr 0x55cfe6373d10 <col:56, col:59> 'int' lvalue ->argc 0x55cfe6372378
    `-ImplicitCastExpr 0x55cfe6373cf8 <col:56> 'struct Smain *' <LValueToRValue>
      `-DeclRefExpr 0x55cfe6373cd0 <col:56> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
([B18.10]) ? [B16.2] : [B17.4]
   2: CallExpr 0x55cfe6373dc0 <lua.c:359:15, col:63> 'int'
|-ImplicitCastExpr 0x55cfe6373da8 <col:15> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6373b88 <col:15> 'int (lua_State *, char **, int)' Function 0x55cfe6370488 'runargs' 'int (lua_State *, char **, int)'
|-ImplicitCastExpr 0x55cfe6373e00 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6373bb0 <col:23> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
|-ImplicitCastExpr 0x55cfe6373e18 <col:26> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6373bd8 <col:26> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
`-ConditionalOperator 0x55cfe6373d78 <col:32, col:59> 'int'
  |-ParenExpr 0x55cfe6373c88 <col:32, col:43> 'int'
  | `-BinaryOperator 0x55cfe6373c60 <col:33, col:42> 'int' '>'
  |   |-ImplicitCastExpr 0x55cfe6373c48 <col:33> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x55cfe6373c00 <col:33> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
  |   `-IntegerLiteral 0x55cfe6373c28 <col:42> 'int' 0
  |-ImplicitCastExpr 0x55cfe6373d48 <col:47> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6373ca8 <col:47> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
  `-ImplicitCastExpr 0x55cfe6373d60 <col:56, col:59> 'int' <LValueToRValue>
    `-MemberExpr 0x55cfe6373d10 <col:56, col:59> 'int' lvalue ->argc 0x55cfe6372378
      `-ImplicitCastExpr 0x55cfe6373cf8 <col:56> 'struct Smain *' <LValueToRValue>
        `-DeclRefExpr 0x55cfe6373cd0 <col:56> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B18.2]([B18.4], [B18.6], [B15.1])
   3: DeclRefExpr 0x55cfe6373b10 <lua.c:359:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
   4: ImplicitCastExpr 0x55cfe6373b38 <lua.c:359:3> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373b10 <col:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B15.3] (ImplicitCastExpr, LValueToRValue, struct Smain *)
   5: MemberExpr 0x55cfe6373b50 <lua.c:359:3, col:6> 'int' lvalue ->status 0x55cfe6372438
`-ImplicitCastExpr 0x55cfe6373b38 <col:3> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6373b10 <col:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B15.4]->status
   6: BinaryOperator 0x55cfe6373e30 <lua.c:359:3, col:63> 'int' '='
|-MemberExpr 0x55cfe6373b50 <col:3, col:6> 'int' lvalue ->status 0x55cfe6372438
| `-ImplicitCastExpr 0x55cfe6373b38 <col:3> 'struct Smain *' <LValueToRValue>
|   `-DeclRefExpr 0x55cfe6373b10 <col:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
`-CallExpr 0x55cfe6373dc0 <col:15, col:63> 'int'
  |-ImplicitCastExpr 0x55cfe6373da8 <col:15> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe6373b88 <col:15> 'int (lua_State *, char **, int)' Function 0x55cfe6370488 'runargs' 'int (lua_State *, char **, int)'
  |-ImplicitCastExpr 0x55cfe6373e00 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6373bb0 <col:23> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
  |-ImplicitCastExpr 0x55cfe6373e18 <col:26> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6373bd8 <col:26> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
  `-ConditionalOperator 0x55cfe6373d78 <col:32, col:59> 'int'
    |-ParenExpr 0x55cfe6373c88 <col:32, col:43> 'int'
    | `-BinaryOperator 0x55cfe6373c60 <col:33, col:42> 'int' '>'
    |   |-ImplicitCastExpr 0x55cfe6373c48 <col:33> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cfe6373c00 <col:33> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
    |   `-IntegerLiteral 0x55cfe6373c28 <col:42> 'int' 0
    |-ImplicitCastExpr 0x55cfe6373d48 <col:47> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe6373ca8 <col:47> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
    `-ImplicitCastExpr 0x55cfe6373d60 <col:56, col:59> 'int' <LValueToRValue>
      `-MemberExpr 0x55cfe6373d10 <col:56, col:59> 'int' lvalue ->argc 0x55cfe6372378
        `-ImplicitCastExpr 0x55cfe6373cf8 <col:56> 'struct Smain *' <LValueToRValue>
          `-DeclRefExpr 0x55cfe6373cd0 <col:56> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B15.5] = [B15.2]
   7: DeclRefExpr 0x55cfe6373e58 <lua.c:360:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
   8: ImplicitCastExpr 0x55cfe6373e80 <lua.c:360:7> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373e58 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B15.7] (ImplicitCastExpr, LValueToRValue, struct Smain *)
   9: MemberExpr 0x55cfe6373e98 <lua.c:360:7, col:10> 'int' lvalue ->status 0x55cfe6372438
`-ImplicitCastExpr 0x55cfe6373e80 <col:7> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6373e58 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B15.8]->status
  10: ImplicitCastExpr 0x55cfe6373ef0 <lua.c:360:7, col:10> 'int' <LValueToRValue>
`-MemberExpr 0x55cfe6373e98 <col:7, col:10> 'int' lvalue ->status 0x55cfe6372438
  `-ImplicitCastExpr 0x55cfe6373e80 <col:7> 'struct Smain *' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6373e58 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B15.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x55cfe6373ed0 <lua.c:360:20> 'int' 0
0
  12: BinaryOperator 0x55cfe6373f08 <lua.c:360:7, col:20> 'int' '!='
|-ImplicitCastExpr 0x55cfe6373ef0 <col:7, col:10> 'int' <LValueToRValue>
| `-MemberExpr 0x55cfe6373e98 <col:7, col:10> 'int' lvalue ->status 0x55cfe6372438
|   `-ImplicitCastExpr 0x55cfe6373e80 <col:7> 'struct Smain *' <LValueToRValue>
|     `-DeclRefExpr 0x55cfe6373e58 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
`-IntegerLiteral 0x55cfe6373ed0 <col:20> 'int' 0
[B15.10] != [B15.11]
   T: if [B15.12]
   Preds (2): B16 B17
   Succs (2): B14 B13

 [B16]
   1: DeclRefExpr 0x55cfe6373ca8 <lua.c:359:47> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
script
   2: ImplicitCastExpr 0x55cfe6373d48 <lua.c:359:47> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373ca8 <col:47> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B16.1] (ImplicitCastExpr, LValueToRValue, int)
   Preds (1): B18
   Succs (1): B15

 [B17]
   1: DeclRefExpr 0x55cfe6373cd0 <lua.c:359:56> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
   2: ImplicitCastExpr 0x55cfe6373cf8 <lua.c:359:56> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373cd0 <col:56> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B17.1] (ImplicitCastExpr, LValueToRValue, struct Smain *)
   3: MemberExpr 0x55cfe6373d10 <lua.c:359:56, col:59> 'int' lvalue ->argc 0x55cfe6372378
`-ImplicitCastExpr 0x55cfe6373cf8 <col:56> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6373cd0 <col:56> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B17.2]->argc
   4: ImplicitCastExpr 0x55cfe6373d60 <lua.c:359:56, col:59> 'int' <LValueToRValue>
`-MemberExpr 0x55cfe6373d10 <col:56, col:59> 'int' lvalue ->argc 0x55cfe6372378
  `-ImplicitCastExpr 0x55cfe6373cf8 <col:56> 'struct Smain *' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6373cd0 <col:56> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B17.3] (ImplicitCastExpr, LValueToRValue, int)
   Preds (1): B18
   Succs (1): B15

 [B18]
   1: DeclRefExpr 0x55cfe6373b88 <lua.c:359:15> 'int (lua_State *, char **, int)' Function 0x55cfe6370488 'runargs' 'int (lua_State *, char **, int)'
runargs
   2: ImplicitCastExpr 0x55cfe6373da8 <lua.c:359:15> 'int (*)(lua_State *, char **, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6373b88 <col:15> 'int (lua_State *, char **, int)' Function 0x55cfe6370488 'runargs' 'int (lua_State *, char **, int)'
[B18.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, char **, int))
   3: DeclRefExpr 0x55cfe6373bb0 <lua.c:359:23> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6373e00 <lua.c:359:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373bb0 <col:23> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B18.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55cfe6373bd8 <lua.c:359:26> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
argv
   6: ImplicitCastExpr 0x55cfe6373e18 <lua.c:359:26> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373bd8 <col:26> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
[B18.5] (ImplicitCastExpr, LValueToRValue, char **)
   7: DeclRefExpr 0x55cfe6373c00 <lua.c:359:33> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
script
   8: ImplicitCastExpr 0x55cfe6373c48 <lua.c:359:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373c00 <col:33> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B18.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55cfe6373c28 <lua.c:359:42> 'int' 0
0
  10: BinaryOperator 0x55cfe6373c60 <lua.c:359:33, col:42> 'int' '>'
|-ImplicitCastExpr 0x55cfe6373c48 <col:33> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6373c00 <col:33> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
`-IntegerLiteral 0x55cfe6373c28 <col:42> 'int' 0
[B18.8] > [B18.9]
   T: ([B18.10]) ? ... : ...
   Preds (2): B19 B20
   Succs (2): B16 B17

 [B19]
   1: DeclRefExpr 0x55cfe6373a70 <lua.c:358:14> 'void (void)' Function 0x55cfe6360718 'print_version' 'void (void)'
print_version
   2: ImplicitCastExpr 0x55cfe6373a98 <lua.c:358:14> 'void (*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6373a70 <col:14> 'void (void)' Function 0x55cfe6360718 'print_version' 'void (void)'
[B19.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void))
   3: CallExpr 0x55cfe6373ab0 <lua.c:358:14, col:28> 'void'
`-ImplicitCastExpr 0x55cfe6373a98 <col:14> 'void (*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55cfe6373a70 <col:14> 'void (void)' Function 0x55cfe6360718 'print_version' 'void (void)'
[B19.2]()
   Preds (1): B20
   Succs (1): B18

 [B20]
   1: DeclRefExpr 0x55cfe6373a30 <lua.c:358:7> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
has_v
   2: ImplicitCastExpr 0x55cfe6373a58 <lua.c:358:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373a30 <col:7> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
[B20.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B20.2]
   Preds (1): B22
   Succs (2): B19 B18

 [B21]
   1: DeclRefExpr 0x55cfe6373870 <lua.c:354:5> 'void (void)' Function 0x55cfe635c770 'print_usage' 'void (void)'
print_usage
   2: ImplicitCastExpr 0x55cfe6373898 <lua.c:354:5> 'void (*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6373870 <col:5> 'void (void)' Function 0x55cfe635c770 'print_usage' 'void (void)'
[B21.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void))
   3: CallExpr 0x55cfe63738b0 <lua.c:354:5, col:17> 'void'
`-ImplicitCastExpr 0x55cfe6373898 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55cfe6373870 <col:5> 'void (void)' Function 0x55cfe635c770 'print_usage' 'void (void)'
[B21.2]()
   4: IntegerLiteral 0x55cfe6373950 <lua.c:355:17> 'int' 1
1
   5: DeclRefExpr 0x55cfe63738d8 <lua.c:355:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
   6: ImplicitCastExpr 0x55cfe6373900 <lua.c:355:5> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe63738d8 <col:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B21.5] (ImplicitCastExpr, LValueToRValue, struct Smain *)
   7: MemberExpr 0x55cfe6373918 <lua.c:355:5, col:8> 'int' lvalue ->status 0x55cfe6372438
`-ImplicitCastExpr 0x55cfe6373900 <col:5> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63738d8 <col:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B21.6]->status
   8: BinaryOperator 0x55cfe6373970 <lua.c:355:5, col:17> 'int' '='
|-MemberExpr 0x55cfe6373918 <col:5, col:8> 'int' lvalue ->status 0x55cfe6372438
| `-ImplicitCastExpr 0x55cfe6373900 <col:5> 'struct Smain *' <LValueToRValue>
|   `-DeclRefExpr 0x55cfe63738d8 <col:5> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
`-IntegerLiteral 0x55cfe6373950 <col:17> 'int' 1
[B21.7] = [B21.4]
   9: IntegerLiteral 0x55cfe6373998 <lua.c:356:12> 'int' 0
0
  10: ReturnStmt 0x55cfe63739b8 <lua.c:356:5, col:12>
`-IntegerLiteral 0x55cfe6373998 <col:12> 'int' 0
return [B21.9];
   Preds (1): B22
   Succs (1): B0

 [B22]
   1: DeclRefExpr 0x55cfe63735c8 <lua.c:352:12> 'int (char **, int *, int *, int *)' Function 0x55cfe636e7e8 'collectargs' 'int (char **, int *, int *, int *)'
collectargs
   2: ImplicitCastExpr 0x55cfe6373748 <lua.c:352:12> 'int (*)(char **, int *, int *, int *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe63735c8 <col:12> 'int (char **, int *, int *, int *)' Function 0x55cfe636e7e8 'collectargs' 'int (char **, int *, int *, int *)'
[B22.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char **, int *, int *, int *))
   3: DeclRefExpr 0x55cfe63735f0 <lua.c:352:24> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
argv
   4: ImplicitCastExpr 0x55cfe63737a8 <lua.c:352:24> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe63735f0 <col:24> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
[B22.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: DeclRefExpr 0x55cfe6373618 <lua.c:352:31> 'int' lvalue Var 0x55cfe6372a60 'has_i' 'int'
has_i
   6: UnaryOperator 0x55cfe6373640 <lua.c:352:30, col:31> 'int *' prefix '&'
`-DeclRefExpr 0x55cfe6373618 <col:31> 'int' lvalue Var 0x55cfe6372a60 'has_i' 'int'
&[B22.5]
   7: DeclRefExpr 0x55cfe6373660 <lua.c:352:39> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
has_v
   8: UnaryOperator 0x55cfe63736b0 <lua.c:352:38, col:39> 'int *' prefix '&'
`-DeclRefExpr 0x55cfe6373660 <col:39> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
&[B22.7]
   9: DeclRefExpr 0x55cfe63736d0 <lua.c:352:47> 'int' lvalue Var 0x55cfe6372b90 'has_e' 'int'
has_e
  10: UnaryOperator 0x55cfe63736f8 <lua.c:352:46, col:47> 'int *' prefix '&'
`-DeclRefExpr 0x55cfe63736d0 <col:47> 'int' lvalue Var 0x55cfe6372b90 'has_e' 'int'
&[B22.9]
  11: CallExpr 0x55cfe6373760 <lua.c:352:12, col:52> 'int'
|-ImplicitCastExpr 0x55cfe6373748 <col:12> 'int (*)(char **, int *, int *, int *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe63735c8 <col:12> 'int (char **, int *, int *, int *)' Function 0x55cfe636e7e8 'collectargs' 'int (char **, int *, int *, int *)'
|-ImplicitCastExpr 0x55cfe63737a8 <col:24> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe63735f0 <col:24> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
|-UnaryOperator 0x55cfe6373640 <col:30, col:31> 'int *' prefix '&'
| `-DeclRefExpr 0x55cfe6373618 <col:31> 'int' lvalue Var 0x55cfe6372a60 'has_i' 'int'
|-UnaryOperator 0x55cfe63736b0 <col:38, col:39> 'int *' prefix '&'
| `-DeclRefExpr 0x55cfe6373660 <col:39> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
`-UnaryOperator 0x55cfe63736f8 <col:46, col:47> 'int *' prefix '&'
  `-DeclRefExpr 0x55cfe63736d0 <col:47> 'int' lvalue Var 0x55cfe6372b90 'has_e' 'int'
[B22.2]([B22.4], [B22.6], [B22.8], [B22.10])
  12: DeclRefExpr 0x55cfe63735a0 <lua.c:352:3> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
script
  13: BinaryOperator 0x55cfe63737c0 <lua.c:352:3, col:52> 'int' '='
|-DeclRefExpr 0x55cfe63735a0 <col:3> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
`-CallExpr 0x55cfe6373760 <col:12, col:52> 'int'
  |-ImplicitCastExpr 0x55cfe6373748 <col:12> 'int (*)(char **, int *, int *, int *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe63735c8 <col:12> 'int (char **, int *, int *, int *)' Function 0x55cfe636e7e8 'collectargs' 'int (char **, int *, int *, int *)'
  |-ImplicitCastExpr 0x55cfe63737a8 <col:24> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe63735f0 <col:24> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
  |-UnaryOperator 0x55cfe6373640 <col:30, col:31> 'int *' prefix '&'
  | `-DeclRefExpr 0x55cfe6373618 <col:31> 'int' lvalue Var 0x55cfe6372a60 'has_i' 'int'
  |-UnaryOperator 0x55cfe63736b0 <col:38, col:39> 'int *' prefix '&'
  | `-DeclRefExpr 0x55cfe6373660 <col:39> 'int' lvalue Var 0x55cfe6372af8 'has_v' 'int'
  `-UnaryOperator 0x55cfe63736f8 <col:46, col:47> 'int *' prefix '&'
    `-DeclRefExpr 0x55cfe63736d0 <col:47> 'int' lvalue Var 0x55cfe6372b90 'has_e' 'int'
[B22.12] = [B22.11]
  14: DeclRefExpr 0x55cfe63737e8 <lua.c:353:7> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
script
  15: ImplicitCastExpr 0x55cfe6373830 <lua.c:353:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55cfe63737e8 <col:7> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
[B22.14] (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x55cfe6373810 <lua.c:353:16> 'int' 0
0
  17: BinaryOperator 0x55cfe6373848 <lua.c:353:7, col:16> 'int' '<'
|-ImplicitCastExpr 0x55cfe6373830 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55cfe63737e8 <col:7> 'int' lvalue Var 0x55cfe63729d0 'script' 'int'
`-IntegerLiteral 0x55cfe6373810 <col:16> 'int' 0
[B22.15] < [B22.16]
   T: if [B22.17]
   Preds (1): B24
   Succs (2): B21 B20

 [B23]
   1: IntegerLiteral 0x55cfe6373530 <lua.c:351:30> 'int' 0
0
   2: ReturnStmt 0x55cfe6373550 <lua.c:351:23, col:30>
`-IntegerLiteral 0x55cfe6373530 <col:30> 'int' 0
return [B23.1];
   Preds (1): B24
   Succs (1): B0

 [B24]
   1: DeclRefExpr 0x55cfe6372ff8 <lua.c:347:3> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x55cfe63429a0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
lua_gc
   2: ImplicitCastExpr 0x55cfe6373088 <lua.c:347:3> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6372ff8 <col:3> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x55cfe63429a0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
[B24.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int))
   3: DeclRefExpr 0x55cfe6373020 <lua.c:347:10> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe63730e0 <lua.c:347:10> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373020 <col:10> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B24.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55cfe6373048 <./lua.h:221:21> 'int' 0
0
   6: IntegerLiteral 0x55cfe6373068 <lua.c:347:25> 'int' 0
0
   7: CallExpr 0x55cfe63730a0 <lua.c:347:3, col:26> 'int'
|-ImplicitCastExpr 0x55cfe6373088 <col:3> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6372ff8 <col:3> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x55cfe63429a0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
|-ImplicitCastExpr 0x55cfe63730e0 <col:10> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6373020 <col:10> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
|-IntegerLiteral 0x55cfe6373048 <./lua.h:221:21> 'int' 0
`-IntegerLiteral 0x55cfe6373068 <lua.c:347:25> 'int' 0
[B24.2]([B24.4], [B24.5], [B24.6])
   8: DeclRefExpr 0x55cfe63730f8 <lua.c:348:3> 'void (lua_State *)':'void (lua_State *)' Function 0x55cfe635a7f0 'luaL_openlibs' 'void (lua_State *)':'void (lua_State *)'
luaL_openlibs
   9: ImplicitCastExpr 0x55cfe63731a8 <lua.c:348:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe63730f8 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x55cfe635a7f0 'luaL_openlibs' 'void (lua_State *)':'void (lua_State *)'
[B24.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
  10: DeclRefExpr 0x55cfe6373120 <lua.c:348:17> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x55cfe63731f0 <lua.c:348:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373120 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B24.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: CallExpr 0x55cfe63731c0 <lua.c:348:3, col:18> 'void'
|-ImplicitCastExpr 0x55cfe63731a8 <col:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe63730f8 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x55cfe635a7f0 'luaL_openlibs' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x55cfe63731f0 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6373120 <col:17> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B24.9]([B24.11])
  13: DeclRefExpr 0x55cfe6373208 <lua.c:349:3> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x55cfe63429a0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
lua_gc
  14: ImplicitCastExpr 0x55cfe6373298 <lua.c:349:3> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6373208 <col:3> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x55cfe63429a0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
[B24.13] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int))
  15: DeclRefExpr 0x55cfe6373230 <lua.c:349:10> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x55cfe63732f0 <lua.c:349:10> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373230 <col:10> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B24.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: IntegerLiteral 0x55cfe6373258 <./lua.h:222:24> 'int' 1
1
  18: IntegerLiteral 0x55cfe6373278 <lua.c:349:28> 'int' 0
0
  19: CallExpr 0x55cfe63732b0 <lua.c:349:3, col:29> 'int'
|-ImplicitCastExpr 0x55cfe6373298 <col:3> 'int (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6373208 <col:3> 'int (lua_State *, int, int)':'int (lua_State *, int, int)' Function 0x55cfe63429a0 'lua_gc' 'int (lua_State *, int, int)':'int (lua_State *, int, int)'
|-ImplicitCastExpr 0x55cfe63732f0 <col:10> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6373230 <col:10> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
|-IntegerLiteral 0x55cfe6373258 <./lua.h:222:24> 'int' 1
`-IntegerLiteral 0x55cfe6373278 <lua.c:349:28> 'int' 0
[B24.14]([B24.16], [B24.17], [B24.18])
  20: DeclRefExpr 0x55cfe6373380 <lua.c:350:15> 'int (lua_State *)' Function 0x55cfe6371ac8 'handle_luainit' 'int (lua_State *)'
handle_luainit
  21: ImplicitCastExpr 0x55cfe63733d0 <lua.c:350:15> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6373380 <col:15> 'int (lua_State *)' Function 0x55cfe6371ac8 'handle_luainit' 'int (lua_State *)'
[B24.20] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
  22: DeclRefExpr 0x55cfe63733a8 <lua.c:350:30> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
  23: ImplicitCastExpr 0x55cfe6373418 <lua.c:350:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe63733a8 <col:30> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B24.22] (ImplicitCastExpr, LValueToRValue, lua_State *)
  24: CallExpr 0x55cfe63733e8 <lua.c:350:15, col:31> 'int'
|-ImplicitCastExpr 0x55cfe63733d0 <col:15> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6373380 <col:15> 'int (lua_State *)' Function 0x55cfe6371ac8 'handle_luainit' 'int (lua_State *)'
`-ImplicitCastExpr 0x55cfe6373418 <col:30> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe63733a8 <col:30> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B24.21]([B24.23])
  25: DeclRefExpr 0x55cfe6373308 <lua.c:350:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
  26: ImplicitCastExpr 0x55cfe6373330 <lua.c:350:3> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373308 <col:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B24.25] (ImplicitCastExpr, LValueToRValue, struct Smain *)
  27: MemberExpr 0x55cfe6373348 <lua.c:350:3, col:6> 'int' lvalue ->status 0x55cfe6372438
`-ImplicitCastExpr 0x55cfe6373330 <col:3> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6373308 <col:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B24.26]->status
  28: BinaryOperator 0x55cfe6373430 <lua.c:350:3, col:31> 'int' '='
|-MemberExpr 0x55cfe6373348 <col:3, col:6> 'int' lvalue ->status 0x55cfe6372438
| `-ImplicitCastExpr 0x55cfe6373330 <col:3> 'struct Smain *' <LValueToRValue>
|   `-DeclRefExpr 0x55cfe6373308 <col:3> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
`-CallExpr 0x55cfe63733e8 <col:15, col:31> 'int'
  |-ImplicitCastExpr 0x55cfe63733d0 <col:15> 'int (*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe6373380 <col:15> 'int (lua_State *)' Function 0x55cfe6371ac8 'handle_luainit' 'int (lua_State *)'
  `-ImplicitCastExpr 0x55cfe6373418 <col:30> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55cfe63733a8 <col:30> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B24.27] = [B24.24]
  29: DeclRefExpr 0x55cfe6373458 <lua.c:351:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
  30: ImplicitCastExpr 0x55cfe6373480 <lua.c:351:7> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6373458 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B24.29] (ImplicitCastExpr, LValueToRValue, struct Smain *)
  31: MemberExpr 0x55cfe6373498 <lua.c:351:7, col:10> 'int' lvalue ->status 0x55cfe6372438
`-ImplicitCastExpr 0x55cfe6373480 <col:7> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6373458 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B24.30]->status
  32: ImplicitCastExpr 0x55cfe63734f0 <lua.c:351:7, col:10> 'int' <LValueToRValue>
`-MemberExpr 0x55cfe6373498 <col:7, col:10> 'int' lvalue ->status 0x55cfe6372438
  `-ImplicitCastExpr 0x55cfe6373480 <col:7> 'struct Smain *' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6373458 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B24.31] (ImplicitCastExpr, LValueToRValue, int)
  33: IntegerLiteral 0x55cfe63734d0 <lua.c:351:20> 'int' 0
0
  34: BinaryOperator 0x55cfe6373508 <lua.c:351:7, col:20> 'int' '!='
|-ImplicitCastExpr 0x55cfe63734f0 <col:7, col:10> 'int' <LValueToRValue>
| `-MemberExpr 0x55cfe6373498 <col:7, col:10> 'int' lvalue ->status 0x55cfe6372438
|   `-ImplicitCastExpr 0x55cfe6373480 <col:7> 'struct Smain *' <LValueToRValue>
|     `-DeclRefExpr 0x55cfe6373458 <col:7> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
`-IntegerLiteral 0x55cfe63734d0 <col:20> 'int' 0
[B24.32] != [B24.33]
   T: if [B24.34]
   Preds (3): B25 B26 B27
   Succs (2): B23 B22

 [B25]
   1: DeclRefExpr 0x55cfe6372ee0 <lua.c:346:41> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
argv
   2: ImplicitCastExpr 0x55cfe6372f28 <lua.c:346:41> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe6372ee0 <col:41> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
[B25.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: IntegerLiteral 0x55cfe6372f08 <lua.c:346:46> 'int' 0
0
   4: ArraySubscriptExpr 0x55cfe6372f40 <lua.c:346:41, col:47> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe6372f28 <col:41> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6372ee0 <col:41> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
`-IntegerLiteral 0x55cfe6372f08 <col:46> 'int' 0
[B25.2][[B25.3]]
   5: ImplicitCastExpr 0x55cfe6372f68 <lua.c:346:41, col:47> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe6372f40 <col:41, col:47> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe6372f28 <col:41> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6372ee0 <col:41> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
  `-IntegerLiteral 0x55cfe6372f08 <col:46> 'int' 0
[B25.4] (ImplicitCastExpr, LValueToRValue, char *)
   6: ImplicitCastExpr 0x55cfe6372f80 <lua.c:346:41, col:47> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55cfe6372f68 <col:41, col:47> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55cfe6372f40 <col:41, col:47> 'char *' lvalue
    |-ImplicitCastExpr 0x55cfe6372f28 <col:41> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55cfe6372ee0 <col:41> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
    `-IntegerLiteral 0x55cfe6372f08 <col:46> 'int' 0
[B25.5] (ImplicitCastExpr, BitCast, const char *)
   7: DeclRefExpr 0x55cfe6372eb8 <lua.c:346:30> 'const char *' lvalue Var 0x55cfe635a9b8 'progname' 'const char *'
progname
   8: BinaryOperator 0x55cfe6372f98 <lua.c:346:30, col:47> 'const char *' '='
|-DeclRefExpr 0x55cfe6372eb8 <col:30> 'const char *' lvalue Var 0x55cfe635a9b8 'progname' 'const char *'
`-ImplicitCastExpr 0x55cfe6372f80 <col:41, col:47> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55cfe6372f68 <col:41, col:47> 'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55cfe6372f40 <col:41, col:47> 'char *' lvalue
      |-ImplicitCastExpr 0x55cfe6372f28 <col:41> 'char **' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe6372ee0 <col:41> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
      `-IntegerLiteral 0x55cfe6372f08 <col:46> 'int' 0
[B25.7] = [B25.6]
   Preds (1): B26
   Succs (1): B24

 [B26]
   1: DeclRefExpr 0x55cfe6372d60 <lua.c:346:18> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
argv
   2: ImplicitCastExpr 0x55cfe6372da8 <lua.c:346:18> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe6372d60 <col:18> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
[B26.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: IntegerLiteral 0x55cfe6372d88 <lua.c:346:23> 'int' 0
0
   4: ArraySubscriptExpr 0x55cfe6372dc0 <lua.c:346:18, col:24> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe6372da8 <col:18> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6372d60 <col:18> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
`-IntegerLiteral 0x55cfe6372d88 <col:23> 'int' 0
[B26.2][[B26.3]]
   5: ImplicitCastExpr 0x55cfe6372e08 <lua.c:346:18, col:24> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe6372dc0 <col:18, col:24> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe6372da8 <col:18> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6372d60 <col:18> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
  `-IntegerLiteral 0x55cfe6372d88 <col:23> 'int' 0
[B26.4] (ImplicitCastExpr, LValueToRValue, char *)
   6: IntegerLiteral 0x55cfe6372de8 <lua.c:346:26> 'int' 0
0
   7: ArraySubscriptExpr 0x55cfe6372e20 <lua.c:346:18, col:27> 'char' lvalue
|-ImplicitCastExpr 0x55cfe6372e08 <col:18, col:24> 'char *' <LValueToRValue>
| `-ArraySubscriptExpr 0x55cfe6372dc0 <col:18, col:24> 'char *' lvalue
|   |-ImplicitCastExpr 0x55cfe6372da8 <col:18> 'char **' <LValueToRValue>
|   | `-DeclRefExpr 0x55cfe6372d60 <col:18> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
|   `-IntegerLiteral 0x55cfe6372d88 <col:23> 'int' 0
`-IntegerLiteral 0x55cfe6372de8 <col:26> 'int' 0
[B26.5][[B26.6]]
   8: ImplicitCastExpr 0x55cfe6372e60 <lua.c:346:18, col:27> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe6372e20 <col:18, col:27> 'char' lvalue
  |-ImplicitCastExpr 0x55cfe6372e08 <col:18, col:24> 'char *' <LValueToRValue>
  | `-ArraySubscriptExpr 0x55cfe6372dc0 <col:18, col:24> 'char *' lvalue
  |   |-ImplicitCastExpr 0x55cfe6372da8 <col:18> 'char **' <LValueToRValue>
  |   | `-DeclRefExpr 0x55cfe6372d60 <col:18> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
  |   `-IntegerLiteral 0x55cfe6372d88 <col:23> 'int' 0
  `-IntegerLiteral 0x55cfe6372de8 <col:26> 'int' 0
[B26.7] (ImplicitCastExpr, LValueToRValue, char)
   9: ImplicitCastExpr 0x55cfe6372e78 <lua.c:346:18, col:27> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55cfe6372e60 <col:18, col:27> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55cfe6372e20 <col:18, col:27> 'char' lvalue
    |-ImplicitCastExpr 0x55cfe6372e08 <col:18, col:24> 'char *' <LValueToRValue>
    | `-ArraySubscriptExpr 0x55cfe6372dc0 <col:18, col:24> 'char *' lvalue
    |   |-ImplicitCastExpr 0x55cfe6372da8 <col:18> 'char **' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cfe6372d60 <col:18> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
    |   `-IntegerLiteral 0x55cfe6372d88 <col:23> 'int' 0
    `-IntegerLiteral 0x55cfe6372de8 <col:26> 'int' 0
[B26.8] (ImplicitCastExpr, IntegralCast, int)
   T: if [B27.29] && [B26.9]
   Preds (1): B27
   Succs (2): B25 B24

 [B27]
   1: DeclRefExpr 0x55cfe6372700 <lua.c:341:37> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55cfe633c158 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
lua_touserdata
   2: ImplicitCastExpr 0x55cfe63727c8 <lua.c:341:37> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55cfe6372700 <col:37> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55cfe633c158 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
[B27.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, int))
   3: DeclRefExpr 0x55cfe6372728 <lua.c:341:52> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55cfe6372818 <lua.c:341:52> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6372728 <col:52> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B27.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55cfe6372750 <lua.c:341:55> 'int' 1
1
   6: CallExpr 0x55cfe63727e0 <lua.c:341:37, col:56> 'void *'
|-ImplicitCastExpr 0x55cfe63727c8 <col:37> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55cfe6372700 <col:37> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55cfe633c158 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
|-ImplicitCastExpr 0x55cfe6372818 <col:52> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6372728 <col:52> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
`-IntegerLiteral 0x55cfe6372750 <col:55> 'int' 1
[B27.2]([B27.4], [B27.5])
   7: CStyleCastExpr 0x55cfe6372858 <lua.c:341:21, col:56> 'struct Smain *' <BitCast>
`-CallExpr 0x55cfe63727e0 <col:37, col:56> 'void *'
  |-ImplicitCastExpr 0x55cfe63727c8 <col:37> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55cfe6372700 <col:37> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55cfe633c158 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
  |-ImplicitCastExpr 0x55cfe6372818 <col:52> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6372728 <col:52> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
  `-IntegerLiteral 0x55cfe6372750 <col:55> 'int' 1
(struct Smain *)[B27.6] (CStyleCastExpr, BitCast, struct Smain *)
   8: DeclStmt 0x55cfe6372880 <lua.c:341:3, col:57>col:17
`-VarDecl 0x55cfe63726a0 <col:3, col:56> col:17 used s 'struct Smain *' cinit
  `-CStyleCastExpr 0x55cfe6372858 <col:21, col:56> 'struct Smain *' <BitCast>
    `-CallExpr 0x55cfe63727e0 <col:37, col:56> 'void *'
      |-ImplicitCastExpr 0x55cfe63727c8 <col:37> 'void *(*)(lua_State *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55cfe6372700 <col:37> 'void *(lua_State *, int)':'void *(lua_State *, int)' Function 0x55cfe633c158 'lua_touserdata' 'void *(lua_State *, int)':'void *(lua_State *, int)'
      |-ImplicitCastExpr 0x55cfe6372818 <col:52> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x55cfe6372728 <col:52> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
      `-IntegerLiteral 0x55cfe6372750 <col:55> 'int' 1
struct Smain *s = (struct Smain *)lua_touserdata(L, 1);
   9: DeclRefExpr 0x55cfe6372910 <lua.c:342:17> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
s
  10: ImplicitCastExpr 0x55cfe6372938 <lua.c:342:17> 'struct Smain *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6372910 <col:17> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B27.9] (ImplicitCastExpr, LValueToRValue, struct Smain *)
  11: MemberExpr 0x55cfe6372950 <lua.c:342:17, col:20> 'char **' lvalue ->argv 0x55cfe63723d8
`-ImplicitCastExpr 0x55cfe6372938 <col:17> 'struct Smain *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6372910 <col:17> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B27.10]->argv
  12: ImplicitCastExpr 0x55cfe6372988 <lua.c:342:17, col:20> 'char **' <LValueToRValue>
`-MemberExpr 0x55cfe6372950 <col:17, col:20> 'char **' lvalue ->argv 0x55cfe63723d8
  `-ImplicitCastExpr 0x55cfe6372938 <col:17> 'struct Smain *' <LValueToRValue>
    `-DeclRefExpr 0x55cfe6372910 <col:17> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
[B27.11] (ImplicitCastExpr, LValueToRValue, char **)
  13: DeclStmt 0x55cfe63729a0 <lua.c:342:3, col:24>col:10
`-VarDecl 0x55cfe63728b0 <col:3, col:20> col:10 used argv 'char **' cinit
  `-ImplicitCastExpr 0x55cfe6372988 <col:17, col:20> 'char **' <LValueToRValue>
    `-MemberExpr 0x55cfe6372950 <col:17, col:20> 'char **' lvalue ->argv 0x55cfe63723d8
      `-ImplicitCastExpr 0x55cfe6372938 <col:17> 'struct Smain *' <LValueToRValue>
        `-DeclRefExpr 0x55cfe6372910 <col:17> 'struct Smain *' lvalue Var 0x55cfe63726a0 's' 'struct Smain *'
char **argv = s->argv;
  14: DeclStmt 0x55cfe6372a30 <lua.c:343:3, col:13>col:7
`-VarDecl 0x55cfe63729d0 <col:3, col:7> col:7 used script 'int'
int script;
  15: IntegerLiteral 0x55cfe6372ac0 <lua.c:344:15> 'int' 0
0
  16: DeclStmt 0x55cfe6382410 <lua.c:344:7, col:15>col:7
`-VarDecl 0x55cfe6372a60 <col:3, col:15> col:7 used has_i 'int' cinit
  `-IntegerLiteral 0x55cfe6372ac0 <col:15> 'int' 0
int has_i = 0;
  17: IntegerLiteral 0x55cfe6372b58 <lua.c:344:26> 'int' 0
0
  18: DeclStmt 0x55cfe63823f8 <lua.c:344:18, col:26>col:18
`-VarDecl 0x55cfe6372af8 <col:3, col:26> col:18 used has_v 'int' cinit
  `-IntegerLiteral 0x55cfe6372b58 <col:26> 'int' 0
int has_v = 0;
  19: IntegerLiteral 0x55cfe6372bf0 <lua.c:344:37> 'int' 0
0
  20: DeclStmt 0x55cfe63823e0 <lua.c:344:29, col:37>col:29
`-VarDecl 0x55cfe6372b90 <col:3, col:37> col:29 used has_e 'int' cinit
  `-IntegerLiteral 0x55cfe6372bf0 <col:37> 'int' 0
int has_e = 0;
  21: DeclRefExpr 0x55cfe6372c70 <lua.c:345:13> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
L
  22: ImplicitCastExpr 0x55cfe6372c98 <lua.c:345:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55cfe6372c70 <col:13> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B27.21] (ImplicitCastExpr, LValueToRValue, lua_State *)
  23: DeclRefExpr 0x55cfe6372c48 <lua.c:345:3> 'lua_State *' lvalue Var 0x55cfe635a8a8 'globalL' 'lua_State *'
globalL
  24: BinaryOperator 0x55cfe6372cb0 <lua.c:345:3, col:13> 'lua_State *' '='
|-DeclRefExpr 0x55cfe6372c48 <col:3> 'lua_State *' lvalue Var 0x55cfe635a8a8 'globalL' 'lua_State *'
`-ImplicitCastExpr 0x55cfe6372c98 <col:13> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55cfe6372c70 <col:13> 'lua_State *' lvalue ParmVar 0x55cfe6372490 'L' 'lua_State *'
[B27.23] = [B27.22]
  25: DeclRefExpr 0x55cfe6372cd8 <lua.c:346:7> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
argv
  26: ImplicitCastExpr 0x55cfe6372d20 <lua.c:346:7> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55cfe6372cd8 <col:7> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
[B27.25] (ImplicitCastExpr, LValueToRValue, char **)
  27: IntegerLiteral 0x55cfe6372d00 <lua.c:346:12> 'int' 0
0
  28: ArraySubscriptExpr 0x55cfe6372d38 <lua.c:346:7, col:13> 'char *' lvalue
|-ImplicitCastExpr 0x55cfe6372d20 <col:7> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55cfe6372cd8 <col:7> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
`-IntegerLiteral 0x55cfe6372d00 <col:12> 'int' 0
[B27.26][[B27.27]]
  29: ImplicitCastExpr 0x55cfe6372e48 <lua.c:346:7, col:13> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55cfe6372d38 <col:7, col:13> 'char *' lvalue
  |-ImplicitCastExpr 0x55cfe6372d20 <col:7> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55cfe6372cd8 <col:7> 'char **' lvalue Var 0x55cfe63728b0 'argv' 'char **'
  `-IntegerLiteral 0x55cfe6372d00 <col:12> 'int' 0
[B27.28] (ImplicitCastExpr, LValueToRValue, char *)
   T: [B27.29] && ...
   Preds (1): B28
   Succs (2): B26 B24

 [B0 (EXIT)]
   Preds (5): B1 B10 B14 B21 B23
