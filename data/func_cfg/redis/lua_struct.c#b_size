static int b_size(lua_State *L)
 [B13 (ENTRY)]
   Succs (1): B12

 [B1]
   1: DeclRefExpr 0x559201209e28 <lua_struct.c:383:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5592011a7790 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x559201209ea0 <lua_struct.c:383:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x559201209e28 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5592011a7790 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x559201209e50 <lua_struct.c:383:19> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x559201209ef0 <lua_struct.c:383:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x559201209e50 <col:19> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x559201209e78 <lua_struct.c:383:22> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
pos
   6: ImplicitCastExpr 0x559201209f08 <lua_struct.c:383:22> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x559201209e78 <col:22> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
[B1.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: ImplicitCastExpr 0x559201209f20 <lua_struct.c:383:22> 'lua_Integer':'long' <IntegralCast>
`-ImplicitCastExpr 0x559201209f08 <col:22> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x559201209e78 <col:22> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
[B1.6] (ImplicitCastExpr, IntegralCast, lua_Integer)
   8: CallExpr 0x559201209eb8 <lua_struct.c:383:3, col:25> 'void'
|-ImplicitCastExpr 0x559201209ea0 <col:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x559201209e28 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5592011a7790 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x559201209ef0 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x559201209e50 <col:19> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
`-ImplicitCastExpr 0x559201209f20 <col:22> 'lua_Integer':'long' <IntegralCast>
  `-ImplicitCastExpr 0x559201209f08 <col:22> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x559201209e78 <col:22> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
[B1.2]([B1.4], [B1.7])
   9: IntegerLiteral 0x559201209f38 <lua_struct.c:384:10> 'int' 1
1
  10: ReturnStmt 0x559201209f58 <lua_struct.c:384:3, col:10>
`-IntegerLiteral 0x559201209f38 <col:10> 'int' 1
return [B1.9];
   Preds (1): B11
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B11

 [B3]
   1: DeclRefExpr 0x559201209d28 <lua_struct.c:381:5> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
pos
   2: DeclRefExpr 0x559201209d50 <lua_struct.c:381:12> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
size
   3: ImplicitCastExpr 0x559201209d78 <lua_struct.c:381:12> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x559201209d50 <col:12> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
[B3.2] (ImplicitCastExpr, LValueToRValue, size_t)
   4: CompoundAssignOperator 0x559201209d90 <lua_struct.c:381:5, col:12> 'size_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x559201209d28 <col:5> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x559201209d78 <col:12> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x559201209d50 <col:12> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
[B3.1] += [B3.3]
   Preds (2): B4 B5
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x559201209b30 <lua_struct.c:380:7> 'void (lua_State *, int, const char **, Header *)' Function 0x5592011f9030 'controloptions' 'void (lua_State *, int, const char **, Header *)'
controloptions
   2: ImplicitCastExpr 0x559201209c60 <lua_struct.c:380:7> 'void (*)(lua_State *, int, const char **, Header *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x559201209b30 <col:7> 'void (lua_State *, int, const char **, Header *)' Function 0x5592011f9030 'controloptions' 'void (lua_State *, int, const char **, Header *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, const char **, Header *))
   3: DeclRefExpr 0x559201209b58 <lua_struct.c:380:22> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x559201209cc0 <lua_struct.c:380:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x559201209b58 <col:22> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x559201209b80 <lua_struct.c:380:25> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
opt
   6: ImplicitCastExpr 0x559201209cd8 <lua_struct.c:380:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x559201209b80 <col:25> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: DeclRefExpr 0x559201209bd0 <lua_struct.c:380:31> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
fmt
   8: UnaryOperator 0x559201209bf8 <lua_struct.c:380:30, col:31> 'const char **' prefix '&'
`-DeclRefExpr 0x559201209bd0 <col:31> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
&[B4.7]
   9: DeclRefExpr 0x559201209c18 <lua_struct.c:380:37> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
h
  10: UnaryOperator 0x559201209c40 <lua_struct.c:380:36, col:37> 'Header *' prefix '&'
`-DeclRefExpr 0x559201209c18 <col:37> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
&[B4.9]
  11: CallExpr 0x559201209c78 <lua_struct.c:380:7, col:38> 'void'
|-ImplicitCastExpr 0x559201209c60 <col:7> 'void (*)(lua_State *, int, const char **, Header *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x559201209b30 <col:7> 'void (lua_State *, int, const char **, Header *)' Function 0x5592011f9030 'controloptions' 'void (lua_State *, int, const char **, Header *)'
|-ImplicitCastExpr 0x559201209cc0 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x559201209b58 <col:22> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
|-ImplicitCastExpr 0x559201209cd8 <col:25> 'int' <LValueToRValue>
| `-DeclRefExpr 0x559201209b80 <col:25> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
|-UnaryOperator 0x559201209bf8 <col:30, col:31> 'const char **' prefix '&'
| `-DeclRefExpr 0x559201209bd0 <col:31> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
`-UnaryOperator 0x559201209c40 <col:36, col:37> 'Header *' prefix '&'
  `-DeclRefExpr 0x559201209c18 <col:37> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
[B4.2]([B4.4], [B4.6], [B4.8], [B4.10])
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x559201209840 </usr/include/ctype.h:89:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
__ctype_b_loc
   2: ImplicitCastExpr 0x559201209868 </usr/include/ctype.h:89:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned short **(*)(void))
   3: CallExpr 0x559201209880 </usr/include/ctype.h:89:6, col:21> 'const unsigned short **'
`-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
[B5.2]()
   4: UnaryOperator 0x5592012098a8 </usr/include/ctype.h:89:5, col:21> 'const unsigned short *' lvalue prefix '*'
`-CallExpr 0x559201209880 <col:6, col:21> 'const unsigned short **'
  `-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
*[B5.3]
   5: ImplicitCastExpr 0x5592012099d8 </usr/include/ctype.h:89:4, col:22> 'const unsigned short *' <LValueToRValue>
`-ParenExpr 0x5592012098c8 <col:4, col:22> 'const unsigned short *' lvalue
  `-UnaryOperator 0x5592012098a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    `-CallExpr 0x559201209880 <col:6, col:21> 'const unsigned short **'
      `-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
([B5.4]) (ImplicitCastExpr, LValueToRValue, const unsigned short *)
   6: DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
opt
   7: ImplicitCastExpr 0x559201209998 </usr/include/ctype.h:89:30, col:32> 'int' <LValueToRValue>
`-ParenExpr 0x559201209978 <col:30, col:32> 'int' lvalue
  `-ParenExpr 0x559201209910 <line:189:31, col:33> 'int' lvalue
    `-DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
(([B5.6])) (ImplicitCastExpr, LValueToRValue, int)
   8: CStyleCastExpr 0x5592012099b0 </usr/include/ctype.h:89:24, col:32> 'int' <NoOp>
`-ImplicitCastExpr 0x559201209998 <col:30, col:32> 'int' <LValueToRValue>
  `-ParenExpr 0x559201209978 <col:30, col:32> 'int' lvalue
    `-ParenExpr 0x559201209910 <line:189:31, col:33> 'int' lvalue
      `-DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
(int)[B5.7] (CStyleCastExpr, NoOp, int)
   9: ArraySubscriptExpr 0x5592012099f0 </usr/include/ctype.h:89:4, col:33> 'const unsigned short' lvalue
|-ImplicitCastExpr 0x5592012099d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
| `-ParenExpr 0x5592012098c8 <col:4, col:22> 'const unsigned short *' lvalue
|   `-UnaryOperator 0x5592012098a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     `-CallExpr 0x559201209880 <col:6, col:21> 'const unsigned short **'
|       `-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
`-CStyleCastExpr 0x5592012099b0 <col:24, col:32> 'int' <NoOp>
  `-ImplicitCastExpr 0x559201209998 <col:30, col:32> 'int' <LValueToRValue>
    `-ParenExpr 0x559201209978 <col:30, col:32> 'int' lvalue
      `-ParenExpr 0x559201209910 <line:189:31, col:33> 'int' lvalue
        `-DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B5.5][[B5.8]]
  10: ImplicitCastExpr 0x559201209a80 </usr/include/ctype.h:89:4, col:33> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x5592012099f0 <col:4, col:33> 'const unsigned short' lvalue
  |-ImplicitCastExpr 0x5592012099d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  | `-ParenExpr 0x5592012098c8 <col:4, col:22> 'const unsigned short *' lvalue
  |   `-UnaryOperator 0x5592012098a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     `-CallExpr 0x559201209880 <col:6, col:21> 'const unsigned short **'
  |       `-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
  `-CStyleCastExpr 0x5592012099b0 <col:24, col:32> 'int' <NoOp>
    `-ImplicitCastExpr 0x559201209998 <col:30, col:32> 'int' <LValueToRValue>
      `-ParenExpr 0x559201209978 <col:30, col:32> 'int' lvalue
        `-ParenExpr 0x559201209910 <line:189:31, col:33> 'int' lvalue
          `-DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B5.9] (ImplicitCastExpr, LValueToRValue, unsigned short)
  11: ImplicitCastExpr 0x559201209a98 </usr/include/ctype.h:89:4, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x559201209a80 <col:4, col:33> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x5592012099f0 <col:4, col:33> 'const unsigned short' lvalue
    |-ImplicitCastExpr 0x5592012099d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    | `-ParenExpr 0x5592012098c8 <col:4, col:22> 'const unsigned short *' lvalue
    |   `-UnaryOperator 0x5592012098a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     `-CallExpr 0x559201209880 <col:6, col:21> 'const unsigned short **'
    |       `-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
    `-CStyleCastExpr 0x5592012099b0 <col:24, col:32> 'int' <NoOp>
      `-ImplicitCastExpr 0x559201209998 <col:30, col:32> 'int' <LValueToRValue>
        `-ParenExpr 0x559201209978 <col:30, col:32> 'int' lvalue
          `-ParenExpr 0x559201209910 <line:189:31, col:33> 'int' lvalue
            `-DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B5.10] (ImplicitCastExpr, IntegralCast, int)
  12: DeclRefExpr 0x559201209a18 </usr/include/ctype.h:189:36> 'int' EnumConstant 0x55920114a320 '_ISalnum' 'int'
_ISalnum
  13: CStyleCastExpr 0x559201209a58 </usr/include/ctype.h:89:37, line:189:36> 'unsigned short' <IntegralCast>
`-DeclRefExpr 0x559201209a18 <col:36> 'int' EnumConstant 0x55920114a320 '_ISalnum' 'int'
(unsigned short)[B5.12] (CStyleCastExpr, IntegralCast, unsigned short)
  14: ImplicitCastExpr 0x559201209ab0 </usr/include/ctype.h:89:37, line:189:36> 'int' <IntegralCast>
`-CStyleCastExpr 0x559201209a58 <line:89:37, line:189:36> 'unsigned short' <IntegralCast>
  `-DeclRefExpr 0x559201209a18 <col:36> 'int' EnumConstant 0x55920114a320 '_ISalnum' 'int'
[B5.13] (ImplicitCastExpr, IntegralCast, int)
  15: BinaryOperator 0x559201209ac8 </usr/include/ctype.h:89:4, line:189:36> 'int' '&'
|-ImplicitCastExpr 0x559201209a98 <line:89:4, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x559201209a80 <col:4, col:33> 'unsigned short' <LValueToRValue>
|   `-ArraySubscriptExpr 0x5592012099f0 <col:4, col:33> 'const unsigned short' lvalue
|     |-ImplicitCastExpr 0x5592012099d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     | `-ParenExpr 0x5592012098c8 <col:4, col:22> 'const unsigned short *' lvalue
|     |   `-UnaryOperator 0x5592012098a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     `-CallExpr 0x559201209880 <col:6, col:21> 'const unsigned short **'
|     |       `-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |         `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
|     `-CStyleCastExpr 0x5592012099b0 <col:24, col:32> 'int' <NoOp>
|       `-ImplicitCastExpr 0x559201209998 <col:30, col:32> 'int' <LValueToRValue>
|         `-ParenExpr 0x559201209978 <col:30, col:32> 'int' lvalue
|           `-ParenExpr 0x559201209910 <line:189:31, col:33> 'int' lvalue
|             `-DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
`-ImplicitCastExpr 0x559201209ab0 </usr/include/ctype.h:89:37, line:189:36> 'int' <IntegralCast>
  `-CStyleCastExpr 0x559201209a58 <line:89:37, line:189:36> 'unsigned short' <IntegralCast>
    `-DeclRefExpr 0x559201209a18 <col:36> 'int' EnumConstant 0x55920114a320 '_ISalnum' 'int'
[B5.11] & [B5.14]
  16: UnaryOperator 0x559201209b10 <lua_struct.c:379:9, /usr/include/ctype.h:89:62> 'int' prefix '!'
`-ParenExpr 0x559201209af0 <col:3, col:62> 'int'
  `-BinaryOperator 0x559201209ac8 <col:4, line:189:36> 'int' '&'
    |-ImplicitCastExpr 0x559201209a98 <line:89:4, col:33> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x559201209a80 <col:4, col:33> 'unsigned short' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x5592012099f0 <col:4, col:33> 'const unsigned short' lvalue
    |     |-ImplicitCastExpr 0x5592012099d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    |     | `-ParenExpr 0x5592012098c8 <col:4, col:22> 'const unsigned short *' lvalue
    |     |   `-UnaryOperator 0x5592012098a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     |     `-CallExpr 0x559201209880 <col:6, col:21> 'const unsigned short **'
    |     |       `-ImplicitCastExpr 0x559201209868 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |     |         `-DeclRefExpr 0x559201209840 <col:6> 'const unsigned short **(void)' Function 0x55920114a4a0 '__ctype_b_loc' 'const unsigned short **(void)'
    |     `-CStyleCastExpr 0x5592012099b0 <col:24, col:32> 'int' <NoOp>
    |       `-ImplicitCastExpr 0x559201209998 <col:30, col:32> 'int' <LValueToRValue>
    |         `-ParenExpr 0x559201209978 <col:30, col:32> 'int' lvalue
    |           `-ParenExpr 0x559201209910 <line:189:31, col:33> 'int' lvalue
    |             `-DeclRefExpr 0x5592012098e8 <lua_struct.c:379:18> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
    `-ImplicitCastExpr 0x559201209ab0 </usr/include/ctype.h:89:37, line:189:36> 'int' <IntegralCast>
      `-CStyleCastExpr 0x559201209a58 <line:89:37, line:189:36> 'unsigned short' <IntegralCast>
        `-DeclRefExpr 0x559201209a18 <col:36> 'int' EnumConstant 0x55920114a320 '_ISalnum' 'int'
!([B5.15])
   T: if [B5.16]
   Preds (4): B6 B7 B8 B9
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x559201209638 <lua_struct.c:378:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x559201209730 <lua_struct.c:378:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x559201209638 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x559201209660 <lua_struct.c:378:21> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x559201209788 <lua_struct.c:378:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x559201209660 <col:21> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x559201209688 <lua_struct.c:378:24> 'int' 1
1
   6: StringLiteral 0x5592012096e8 <lua_struct.c:378:27> 'char [30]' lvalue "option 'c0' has no fixed size"
"option 'c0' has no fixed size"
   7: ImplicitCastExpr 0x5592012097a0 <lua_struct.c:378:27> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5592012096e8 <col:27> 'char [30]' lvalue "option 'c0' has no fixed size"
[B6.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x5592012097b8 <lua_struct.c:378:27> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5592012097a0 <col:27> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5592012096e8 <col:27> 'char [30]' lvalue "option 'c0' has no fixed size"
[B6.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x559201209748 <lua_struct.c:378:7, col:58> 'int'
|-ImplicitCastExpr 0x559201209730 <col:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x559201209638 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x559201209788 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x559201209660 <col:21> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
|-IntegerLiteral 0x559201209688 <col:24> 'int' 1
`-ImplicitCastExpr 0x5592012097b8 <col:27> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5592012097a0 <col:27> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5592012096e8 <col:27> 'char [30]' lvalue "option 'c0' has no fixed size"
[B6.2]([B6.4], [B6.5], [B6.8])
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x559201209570 <lua_struct.c:377:28> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
size
   2: ImplicitCastExpr 0x5592012095b8 <lua_struct.c:377:28> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x559201209570 <col:28> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
[B7.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: IntegerLiteral 0x559201209598 <lua_struct.c:377:36> 'int' 0
0
   4: ImplicitCastExpr 0x5592012095d0 <lua_struct.c:377:36> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x559201209598 <col:36> 'int' 0
[B7.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: BinaryOperator 0x5592012095e8 <lua_struct.c:377:28, col:36> 'int' '=='
|-ImplicitCastExpr 0x5592012095b8 <col:28> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x559201209570 <col:28> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x5592012095d0 <col:36> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x559201209598 <col:36> 'int' 0
[B7.2] == [B7.4]
   T: if [B8.4] && [B7.5]
   Preds (1): B8
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x5592012094f0 <lua_struct.c:377:14> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
opt
   2: ImplicitCastExpr 0x559201209530 <lua_struct.c:377:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x5592012094f0 <col:14> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: CharacterLiteral 0x559201209518 <lua_struct.c:377:21> 'int' 99
'c'
   4: BinaryOperator 0x559201209548 <lua_struct.c:377:14, col:21> 'int' '=='
|-ImplicitCastExpr 0x559201209530 <col:14> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5592012094f0 <col:14> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
`-CharacterLiteral 0x559201209518 <col:21> 'int' 99
[B8.2] == [B8.3]
   T: [B8.4] && ...
   Preds (1): B10
   Succs (2): B7 B5

 [B9]
   1: DeclRefExpr 0x559201209358 <lua_struct.c:376:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x559201209450 <lua_struct.c:376:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x559201209358 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x559201209380 <lua_struct.c:376:21> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5592012094a8 <lua_struct.c:376:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x559201209380 <col:21> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5592012093a8 <lua_struct.c:376:24> 'int' 1
1
   6: StringLiteral 0x559201209408 <lua_struct.c:376:27> 'char [29]' lvalue "option 's' has no fixed size"
"option 's' has no fixed size"
   7: ImplicitCastExpr 0x5592012094c0 <lua_struct.c:376:27> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x559201209408 <col:27> 'char [29]' lvalue "option 's' has no fixed size"
[B9.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x5592012094d8 <lua_struct.c:376:27> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5592012094c0 <col:27> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x559201209408 <col:27> 'char [29]' lvalue "option 's' has no fixed size"
[B9.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x559201209468 <lua_struct.c:376:7, col:57> 'int'
|-ImplicitCastExpr 0x559201209450 <col:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x559201209358 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x5592012094a8 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x559201209380 <col:21> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
|-IntegerLiteral 0x5592012093a8 <col:24> 'int' 1
`-ImplicitCastExpr 0x5592012094d8 <col:27> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5592012094c0 <col:27> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x559201209408 <col:27> 'char [29]' lvalue "option 's' has no fixed size"
[B9.2]([B9.4], [B9.5], [B9.8])
   Preds (1): B10
   Succs (1): B5

 [B10]
   1: DeclRefExpr 0x559201208e38 <lua_struct.c:372:16> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
fmt
   2: UnaryOperator 0x559201208e60 <lua_struct.c:372:16, col:19> 'const char *' postfix '++'
`-DeclRefExpr 0x559201208e38 <col:16> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
[B10.1]++
   3: UnaryOperator 0x559201208e80 <lua_struct.c:372:15, col:19> 'const char' lvalue prefix '*'
`-UnaryOperator 0x559201208e60 <col:16, col:19> 'const char *' postfix '++'
  `-DeclRefExpr 0x559201208e38 <col:16> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
*[B10.2]
   4: ImplicitCastExpr 0x559201208ea0 <lua_struct.c:372:15, col:19> 'char' <LValueToRValue>
`-UnaryOperator 0x559201208e80 <col:15, col:19> 'const char' lvalue prefix '*'
  `-UnaryOperator 0x559201208e60 <col:16, col:19> 'const char *' postfix '++'
    `-DeclRefExpr 0x559201208e38 <col:16> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
[B10.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x559201208eb8 <lua_struct.c:372:15, col:19> 'int' <IntegralCast>
`-ImplicitCastExpr 0x559201208ea0 <col:15, col:19> 'char' <LValueToRValue>
  `-UnaryOperator 0x559201208e80 <col:15, col:19> 'const char' lvalue prefix '*'
    `-UnaryOperator 0x559201208e60 <col:16, col:19> 'const char *' postfix '++'
      `-DeclRefExpr 0x559201208e38 <col:16> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
[B10.4] (ImplicitCastExpr, IntegralCast, int)
   6: DeclStmt 0x559201208ed0 <lua_struct.c:372:5, col:21>col:9
`-VarDecl 0x559201208dd8 <col:5, col:19> col:9 used opt 'int' cinit
  `-ImplicitCastExpr 0x559201208eb8 <col:15, col:19> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x559201208ea0 <col:15, col:19> 'char' <LValueToRValue>
      `-UnaryOperator 0x559201208e80 <col:15, col:19> 'const char' lvalue prefix '*'
        `-UnaryOperator 0x559201208e60 <col:16, col:19> 'const char *' postfix '++'
          `-DeclRefExpr 0x559201208e38 <col:16> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
int opt = *fmt++;
   7: DeclRefExpr 0x559201208f58 <lua_struct.c:373:19> 'size_t (lua_State *, char, const char **)' Function 0x5592011f6fd0 'optsize' 'size_t (lua_State *, char, const char **)'
optsize
   8: ImplicitCastExpr 0x559201209018 <lua_struct.c:373:19> 'size_t (*)(lua_State *, char, const char **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x559201208f58 <col:19> 'size_t (lua_State *, char, const char **)' Function 0x5592011f6fd0 'optsize' 'size_t (lua_State *, char, const char **)'
[B10.7] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(lua_State *, char, const char **))
   9: DeclRefExpr 0x559201208f80 <lua_struct.c:373:27> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x559201209070 <lua_struct.c:373:27> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x559201208f80 <col:27> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
[B10.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: DeclRefExpr 0x559201208fa8 <lua_struct.c:373:30> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
opt
  12: ImplicitCastExpr 0x559201209088 <lua_struct.c:373:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x559201208fa8 <col:30> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B10.11] (ImplicitCastExpr, LValueToRValue, int)
  13: ImplicitCastExpr 0x5592012090a0 <lua_struct.c:373:30> 'char' <IntegralCast>
`-ImplicitCastExpr 0x559201209088 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x559201208fa8 <col:30> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B10.12] (ImplicitCastExpr, IntegralCast, char)
  14: DeclRefExpr 0x559201208fd0 <lua_struct.c:373:36> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
fmt
  15: UnaryOperator 0x559201208ff8 <lua_struct.c:373:35, col:36> 'const char **' prefix '&'
`-DeclRefExpr 0x559201208fd0 <col:36> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
&[B10.14]
  16: CallExpr 0x559201209030 <lua_struct.c:373:19, col:39> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x559201209018 <col:19> 'size_t (*)(lua_State *, char, const char **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x559201208f58 <col:19> 'size_t (lua_State *, char, const char **)' Function 0x5592011f6fd0 'optsize' 'size_t (lua_State *, char, const char **)'
|-ImplicitCastExpr 0x559201209070 <col:27> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x559201208f80 <col:27> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
|-ImplicitCastExpr 0x5592012090a0 <col:30> 'char' <IntegralCast>
| `-ImplicitCastExpr 0x559201209088 <col:30> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x559201208fa8 <col:30> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
`-UnaryOperator 0x559201208ff8 <col:35, col:36> 'const char **' prefix '&'
  `-DeclRefExpr 0x559201208fd0 <col:36> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
[B10.8]([B10.10], [B10.13], [B10.15])
  17: DeclStmt 0x5592012090b8 <lua_struct.c:373:5, col:40>col:12
`-VarDecl 0x559201208ef8 <col:5, col:39> col:12 used size 'size_t':'unsigned long' cinit
  `-CallExpr 0x559201209030 <col:19, col:39> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x559201209018 <col:19> 'size_t (*)(lua_State *, char, const char **)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x559201208f58 <col:19> 'size_t (lua_State *, char, const char **)' Function 0x5592011f6fd0 'optsize' 'size_t (lua_State *, char, const char **)'
    |-ImplicitCastExpr 0x559201209070 <col:27> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x559201208f80 <col:27> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
    |-ImplicitCastExpr 0x5592012090a0 <col:30> 'char' <IntegralCast>
    | `-ImplicitCastExpr 0x559201209088 <col:30> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x559201208fa8 <col:30> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
    `-UnaryOperator 0x559201208ff8 <col:35, col:36> 'const char **' prefix '&'
      `-DeclRefExpr 0x559201208fd0 <col:36> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
size_t size = optsize(L, opt, &fmt);
  18: DeclRefExpr 0x5592012090d0 <lua_struct.c:374:5> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
pos
  19: DeclRefExpr 0x5592012090f8 <lua_struct.c:374:12> 'int (size_t, Header *, int, size_t)' Function 0x5592011f8588 'gettoalign' 'int (size_t, Header *, int, size_t)'
gettoalign
  20: ImplicitCastExpr 0x5592012091e0 <lua_struct.c:374:12> 'int (*)(size_t, Header *, int, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5592012090f8 <col:12> 'int (size_t, Header *, int, size_t)' Function 0x5592011f8588 'gettoalign' 'int (size_t, Header *, int, size_t)'
[B10.19] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(size_t, Header *, int, size_t))
  21: DeclRefExpr 0x559201209120 <lua_struct.c:374:23> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
pos
  22: ImplicitCastExpr 0x559201209240 <lua_struct.c:374:23> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x559201209120 <col:23> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
[B10.21] (ImplicitCastExpr, LValueToRValue, size_t)
  23: DeclRefExpr 0x559201209148 <lua_struct.c:374:29> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
h
  24: UnaryOperator 0x559201209170 <lua_struct.c:374:28, col:29> 'Header *' prefix '&'
`-DeclRefExpr 0x559201209148 <col:29> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
&[B10.23]
  25: DeclRefExpr 0x559201209190 <lua_struct.c:374:32> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
opt
  26: ImplicitCastExpr 0x559201209258 <lua_struct.c:374:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x559201209190 <col:32> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B10.25] (ImplicitCastExpr, LValueToRValue, int)
  27: DeclRefExpr 0x5592012091b8 <lua_struct.c:374:37> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
size
  28: ImplicitCastExpr 0x559201209270 <lua_struct.c:374:37> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x5592012091b8 <col:37> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
[B10.27] (ImplicitCastExpr, LValueToRValue, size_t)
  29: CallExpr 0x5592012091f8 <lua_struct.c:374:12, col:41> 'int'
|-ImplicitCastExpr 0x5592012091e0 <col:12> 'int (*)(size_t, Header *, int, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5592012090f8 <col:12> 'int (size_t, Header *, int, size_t)' Function 0x5592011f8588 'gettoalign' 'int (size_t, Header *, int, size_t)'
|-ImplicitCastExpr 0x559201209240 <col:23> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x559201209120 <col:23> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
|-UnaryOperator 0x559201209170 <col:28, col:29> 'Header *' prefix '&'
| `-DeclRefExpr 0x559201209148 <col:29> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
|-ImplicitCastExpr 0x559201209258 <col:32> 'int' <LValueToRValue>
| `-DeclRefExpr 0x559201209190 <col:32> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
`-ImplicitCastExpr 0x559201209270 <col:37> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x5592012091b8 <col:37> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
[B10.20]([B10.22], [B10.24], [B10.26], [B10.28])
  30: ImplicitCastExpr 0x559201209288 <lua_struct.c:374:12, col:41> 'unsigned long' <IntegralCast>
`-CallExpr 0x5592012091f8 <col:12, col:41> 'int'
  |-ImplicitCastExpr 0x5592012091e0 <col:12> 'int (*)(size_t, Header *, int, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5592012090f8 <col:12> 'int (size_t, Header *, int, size_t)' Function 0x5592011f8588 'gettoalign' 'int (size_t, Header *, int, size_t)'
  |-ImplicitCastExpr 0x559201209240 <col:23> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x559201209120 <col:23> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
  |-UnaryOperator 0x559201209170 <col:28, col:29> 'Header *' prefix '&'
  | `-DeclRefExpr 0x559201209148 <col:29> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
  |-ImplicitCastExpr 0x559201209258 <col:32> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x559201209190 <col:32> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
  `-ImplicitCastExpr 0x559201209270 <col:37> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x5592012091b8 <col:37> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
[B10.29] (ImplicitCastExpr, IntegralCast, unsigned long)
  31: CompoundAssignOperator 0x5592012092a0 <lua_struct.c:374:5, col:41> 'size_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x5592012090d0 <col:5> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x559201209288 <col:12, col:41> 'unsigned long' <IntegralCast>
  `-CallExpr 0x5592012091f8 <col:12, col:41> 'int'
    |-ImplicitCastExpr 0x5592012091e0 <col:12> 'int (*)(size_t, Header *, int, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5592012090f8 <col:12> 'int (size_t, Header *, int, size_t)' Function 0x5592011f8588 'gettoalign' 'int (size_t, Header *, int, size_t)'
    |-ImplicitCastExpr 0x559201209240 <col:23> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x559201209120 <col:23> 'size_t':'unsigned long' lvalue Var 0x5592012089f0 'pos' 'size_t':'unsigned long'
    |-UnaryOperator 0x559201209170 <col:28, col:29> 'Header *' prefix '&'
    | `-DeclRefExpr 0x559201209148 <col:29> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
    |-ImplicitCastExpr 0x559201209258 <col:32> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x559201209190 <col:32> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
    `-ImplicitCastExpr 0x559201209270 <col:37> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x5592012091b8 <col:37> 'size_t':'unsigned long' lvalue Var 0x559201208ef8 'size' 'size_t':'unsigned long'
[B10.18] += [B10.30]
  32: DeclRefExpr 0x5592012092d8 <lua_struct.c:375:9> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
opt
  33: ImplicitCastExpr 0x559201209318 <lua_struct.c:375:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x5592012092d8 <col:9> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
[B10.32] (ImplicitCastExpr, LValueToRValue, int)
  34: CharacterLiteral 0x559201209300 <lua_struct.c:375:16> 'int' 115
's'
  35: BinaryOperator 0x559201209330 <lua_struct.c:375:9, col:16> 'int' '=='
|-ImplicitCastExpr 0x559201209318 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5592012092d8 <col:9> 'int' lvalue Var 0x559201208dd8 'opt' 'int'
`-CharacterLiteral 0x559201209300 <col:16> 'int' 115
[B10.33] == [B10.34]
   T: if [B10.35]
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x559201208d48 <lua_struct.c:371:11> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
fmt
   2: ImplicitCastExpr 0x559201208d70 <lua_struct.c:371:11> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x559201208d48 <col:11> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
[B11.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x559201208d88 <lua_struct.c:371:10, col:11> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x559201208d70 <col:11> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x559201208d48 <col:11> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
*[B11.2]
   4: ImplicitCastExpr 0x559201208da8 <lua_struct.c:371:10, col:11> 'char' <LValueToRValue>
`-UnaryOperator 0x559201208d88 <col:10, col:11> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x559201208d70 <col:11> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x559201208d48 <col:11> 'const char *' lvalue Var 0x5592012087b0 'fmt' 'const char *'
[B11.3] (ImplicitCastExpr, LValueToRValue, char)
   T: while [B11.4]
   Preds (2): B2 B12
   Succs (2): B10 B1

 [B12]
   1: DeclStmt 0x559201208780 <lua_struct.c:367:3, col:11>col:10
`-VarDecl 0x559201208720 <col:3, col:10> col:10 used h 'Header':'struct Header'
Header h;
   2: DeclRefExpr 0x559201208810 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x5592011e6700 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   3: ImplicitCastExpr 0x559201208920 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x559201208810 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x5592011e6700 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B12.2] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   4: DeclRefExpr 0x559201208838 <lua_struct.c:368:38> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x559201208978 <lua_struct.c:368:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x559201208838 <col:38> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
[B12.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x559201208860 <lua_struct.c:368:41> 'int' 1
1
   7: IntegerLiteral 0x5592012088a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x5592012088d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5592012088a0 <col:24> 'int' 0
(void *)[B12.7] (CStyleCastExpr, NullToPointer, void *)
   9: ImplicitCastExpr 0x559201208990 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x559201208900 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5592012088d8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5592012088a0 <col:24> 'int' 0
([B12.8]) (ImplicitCastExpr, NullToPointer, size_t *)
  10: CallExpr 0x559201208938 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x559201208920 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x559201208810 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x5592011e6700 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x559201208978 <lua_struct.c:368:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x559201208838 <col:38> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
|-ParenExpr 0x559201208880 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x559201208860 <lua_struct.c:368:41> 'int' 1
`-ImplicitCastExpr 0x559201208990 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x559201208900 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5592012088d8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5592012088a0 <col:24> 'int' 0
[B12.3]([B12.5], ([B12.6]), [B12.9])
  11: DeclStmt 0x5592012089c8 <lua_struct.c:368:3, col:43>col:15
`-VarDecl 0x5592012087b0 <col:3, ./lauxlib.h:102:63> lua_struct.c:368:15 used fmt 'const char *' cinit
  `-ParenExpr 0x5592012089a8 <./lauxlib.h:102:31, col:63> 'const char *'
    `-CallExpr 0x559201208938 <col:32, col:62> 'const char *'
      |-ImplicitCastExpr 0x559201208920 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x559201208810 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x5592011e6700 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
      |-ImplicitCastExpr 0x559201208978 <lua_struct.c:368:38> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x559201208838 <col:38> 'lua_State *' lvalue ParmVar 0x5592012085d8 'L' 'lua_State *'
      |-ParenExpr 0x559201208880 <./lauxlib.h:102:53, col:55> 'int'
      | `-IntegerLiteral 0x559201208860 <lua_struct.c:368:41> 'int' 1
      `-ImplicitCastExpr 0x559201208990 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x559201208900 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x5592012088d8 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x5592012088a0 <col:24> 'int' 0
const char *fmt = (luaL_checklstring(L, (1), ((void *)0)));
  12: IntegerLiteral 0x559201208a50 <lua_struct.c:369:16> 'int' 0
0
  13: ImplicitCastExpr 0x559201208a70 <lua_struct.c:369:16> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x559201208a50 <col:16> 'int' 0
[B12.12] (ImplicitCastExpr, IntegralCast, size_t)
  14: DeclStmt 0x559201208a88 <lua_struct.c:369:3, col:17>col:10
`-VarDecl 0x5592012089f0 <col:3, col:16> col:10 used pos 'size_t':'unsigned long' cinit
  `-ImplicitCastExpr 0x559201208a70 <col:16> 'size_t':'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x559201208a50 <col:16> 'int' 0
size_t pos = 0;
  15: DeclRefExpr 0x559201208b40 <lua_struct.c:107:42> 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)' lvalue Var 0x5592011f3f50 'native' 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)'
native
  16: MemberExpr 0x559201208b68 <lua_struct.c:107:42, col:49> 'const char' lvalue .endian 0x5592011f3eb0
`-DeclRefExpr 0x559201208b40 <col:42> 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)' lvalue Var 0x5592011f3f50 'native' 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)'
[B12.15].endian
  17: ImplicitCastExpr 0x559201208bc0 <lua_struct.c:107:42, col:49> 'char' <LValueToRValue>
`-MemberExpr 0x559201208b68 <col:42, col:49> 'const char' lvalue .endian 0x5592011f3eb0
  `-DeclRefExpr 0x559201208b40 <col:42> 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)' lvalue Var 0x5592011f3f50 'native' 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)'
[B12.16] (ImplicitCastExpr, LValueToRValue, char)
  18: ImplicitCastExpr 0x559201208bd8 <lua_struct.c:107:42, col:49> 'int' <IntegralCast>
`-ImplicitCastExpr 0x559201208bc0 <col:42, col:49> 'char' <LValueToRValue>
  `-MemberExpr 0x559201208b68 <col:42, col:49> 'const char' lvalue .endian 0x5592011f3eb0
    `-DeclRefExpr 0x559201208b40 <col:42> 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)' lvalue Var 0x5592011f3f50 'native' 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)'
[B12.17] (ImplicitCastExpr, IntegralCast, int)
  19: DeclRefExpr 0x559201208aa0 <lua_struct.c:370:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
h
  20: UnaryOperator 0x559201208ac8 <lua_struct.c:370:18, col:19> 'Header *' prefix '&'
`-DeclRefExpr 0x559201208aa0 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
&[B12.19]
  21: MemberExpr 0x559201208b08 <lua_struct.c:107:28, col:33> 'int' lvalue ->endian 0x5592011f5168
`-ParenExpr 0x559201208ae8 <col:28, col:30> 'Header *'
  `-UnaryOperator 0x559201208ac8 <line:370:18, col:19> 'Header *' prefix '&'
    `-DeclRefExpr 0x559201208aa0 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
([B12.20])->endian
  22: BinaryOperator 0x559201208bf0 <lua_struct.c:107:28, col:49> 'int' '='
|-MemberExpr 0x559201208b08 <col:28, col:33> 'int' lvalue ->endian 0x5592011f5168
| `-ParenExpr 0x559201208ae8 <col:28, col:30> 'Header *'
|   `-UnaryOperator 0x559201208ac8 <line:370:18, col:19> 'Header *' prefix '&'
|     `-DeclRefExpr 0x559201208aa0 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
`-ImplicitCastExpr 0x559201208bd8 <line:107:42, col:49> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x559201208bc0 <col:42, col:49> 'char' <LValueToRValue>
    `-MemberExpr 0x559201208b68 <col:42, col:49> 'const char' lvalue .endian 0x5592011f3eb0
      `-DeclRefExpr 0x559201208b40 <col:42> 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)' lvalue Var 0x5592011f3f50 'native' 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)'
[B12.21] = [B12.18]
  23: IntegerLiteral 0x559201208cb8 <lua_struct.c:107:70> 'int' 1
1
  24: DeclRefExpr 0x559201208c18 <lua_struct.c:370:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
h
  25: UnaryOperator 0x559201208c40 <lua_struct.c:370:18, col:19> 'Header *' prefix '&'
`-DeclRefExpr 0x559201208c18 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
&[B12.24]
  26: MemberExpr 0x559201208c80 <lua_struct.c:107:57, col:62> 'int' lvalue ->align 0x5592011f51c8
`-ParenExpr 0x559201208c60 <col:57, col:59> 'Header *'
  `-UnaryOperator 0x559201208c40 <line:370:18, col:19> 'Header *' prefix '&'
    `-DeclRefExpr 0x559201208c18 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
([B12.25])->align
  27: BinaryOperator 0x559201208cd8 <lua_struct.c:107:57, col:70> 'int' '='
|-MemberExpr 0x559201208c80 <col:57, col:62> 'int' lvalue ->align 0x5592011f51c8
| `-ParenExpr 0x559201208c60 <col:57, col:59> 'Header *'
|   `-UnaryOperator 0x559201208c40 <line:370:18, col:19> 'Header *' prefix '&'
|     `-DeclRefExpr 0x559201208c18 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
`-IntegerLiteral 0x559201208cb8 <line:107:70> 'int' 1
[B12.26] = [B12.23]
  28: BinaryOperator 0x559201208d00 <lua_struct.c:107:28, col:70> 'int' ','
|-BinaryOperator 0x559201208bf0 <col:28, col:49> 'int' '='
| |-MemberExpr 0x559201208b08 <col:28, col:33> 'int' lvalue ->endian 0x5592011f5168
| | `-ParenExpr 0x559201208ae8 <col:28, col:30> 'Header *'
| |   `-UnaryOperator 0x559201208ac8 <line:370:18, col:19> 'Header *' prefix '&'
| |     `-DeclRefExpr 0x559201208aa0 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
| `-ImplicitCastExpr 0x559201208bd8 <line:107:42, col:49> 'int' <IntegralCast>
|   `-ImplicitCastExpr 0x559201208bc0 <col:42, col:49> 'char' <LValueToRValue>
|     `-MemberExpr 0x559201208b68 <col:42, col:49> 'const char' lvalue .endian 0x5592011f3eb0
|       `-DeclRefExpr 0x559201208b40 <col:42> 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)' lvalue Var 0x5592011f3f50 'native' 'const union (anonymous union at lua_struct.c:80:8)':'const union (anonymous at lua_struct.c:80:8)'
`-BinaryOperator 0x559201208cd8 <col:57, col:70> 'int' '='
  |-MemberExpr 0x559201208c80 <col:57, col:62> 'int' lvalue ->align 0x5592011f51c8
  | `-ParenExpr 0x559201208c60 <col:57, col:59> 'Header *'
  |   `-UnaryOperator 0x559201208c40 <line:370:18, col:19> 'Header *' prefix '&'
  |     `-DeclRefExpr 0x559201208c18 <col:19> 'Header':'struct Header' lvalue Var 0x559201208720 'h' 'Header':'struct Header'
  `-IntegerLiteral 0x559201208cb8 <line:107:70> 'int' 1
... , [B12.27]
   Preds (1): B13
   Succs (1): B11

 [B0 (EXIT)]
   Preds (1): B1
