Proto *luaU_undump(lua_State *L, ZIO *Z, Mbuffer *buff, const char *name)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x56282187ca78 <lundump.c:204:6> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x56282187caa0 <lundump.c:204:6> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56282187ca78 <col:6> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
[B1.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: DeclRefExpr 0x56282187ca18 <lundump.c:204:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
   4: MemberExpr 0x56282187ca40 <lundump.c:204:2, col:4> 'lua_State *' lvalue .L 0x562821866780
`-DeclRefExpr 0x56282187ca18 <col:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
[B1.3].L
   5: BinaryOperator 0x56282187cab8 <lundump.c:204:2, col:6> 'lua_State *' '='
|-MemberExpr 0x56282187ca40 <col:2, col:4> 'lua_State *' lvalue .L 0x562821866780
| `-DeclRefExpr 0x56282187ca18 <col:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
`-ImplicitCastExpr 0x56282187caa0 <col:6> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56282187ca78 <col:6> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
[B1.4] = [B1.2]
   6: DeclRefExpr 0x56282187cb40 <lundump.c:205:6> 'ZIO *' lvalue ParmVar 0x56282187c028 'Z' 'ZIO *'
Z
   7: ImplicitCastExpr 0x56282187cb68 <lundump.c:205:6> 'ZIO *' <LValueToRValue>
`-DeclRefExpr 0x56282187cb40 <col:6> 'ZIO *' lvalue ParmVar 0x56282187c028 'Z' 'ZIO *'
[B1.6] (ImplicitCastExpr, LValueToRValue, ZIO *)
   8: DeclRefExpr 0x56282187cae0 <lundump.c:205:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
   9: MemberExpr 0x56282187cb08 <lundump.c:205:2, col:4> 'ZIO *' lvalue .Z 0x5628218667d8
`-DeclRefExpr 0x56282187cae0 <col:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
[B1.8].Z
  10: BinaryOperator 0x56282187cb80 <lundump.c:205:2, col:6> 'ZIO *' '='
|-MemberExpr 0x56282187cb08 <col:2, col:4> 'ZIO *' lvalue .Z 0x5628218667d8
| `-DeclRefExpr 0x56282187cae0 <col:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
`-ImplicitCastExpr 0x56282187cb68 <col:6> 'ZIO *' <LValueToRValue>
  `-DeclRefExpr 0x56282187cb40 <col:6> 'ZIO *' lvalue ParmVar 0x56282187c028 'Z' 'ZIO *'
[B1.9] = [B1.7]
  11: DeclRefExpr 0x56282187cc08 <lundump.c:206:6> 'Mbuffer *' lvalue ParmVar 0x56282187c098 'buff' 'Mbuffer *'
buff
  12: ImplicitCastExpr 0x56282187cc30 <lundump.c:206:6> 'Mbuffer *' <LValueToRValue>
`-DeclRefExpr 0x56282187cc08 <col:6> 'Mbuffer *' lvalue ParmVar 0x56282187c098 'buff' 'Mbuffer *'
[B1.11] (ImplicitCastExpr, LValueToRValue, Mbuffer *)
  13: DeclRefExpr 0x56282187cba8 <lundump.c:206:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
  14: MemberExpr 0x56282187cbd0 <lundump.c:206:2, col:4> 'Mbuffer *' lvalue .b 0x562821866830
`-DeclRefExpr 0x56282187cba8 <col:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
[B1.13].b
  15: BinaryOperator 0x56282187cc48 <lundump.c:206:2, col:6> 'Mbuffer *' '='
|-MemberExpr 0x56282187cbd0 <col:2, col:4> 'Mbuffer *' lvalue .b 0x562821866830
| `-DeclRefExpr 0x56282187cba8 <col:2> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
`-ImplicitCastExpr 0x56282187cc30 <col:6> 'Mbuffer *' <LValueToRValue>
  `-DeclRefExpr 0x56282187cc08 <col:6> 'Mbuffer *' lvalue ParmVar 0x56282187c098 'buff' 'Mbuffer *'
[B1.14] = [B1.12]
  16: DeclRefExpr 0x56282187cc70 <lundump.c:207:2> 'void (LoadState *)' Function 0x56282187b790 'LoadHeader' 'void (LoadState *)'
LoadHeader
  17: ImplicitCastExpr 0x56282187cd38 <lundump.c:207:2> 'void (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187cc70 <col:2> 'void (LoadState *)' Function 0x56282187b790 'LoadHeader' 'void (LoadState *)'
[B1.16] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *))
  18: DeclRefExpr 0x56282187cc98 <lundump.c:207:14> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
  19: UnaryOperator 0x56282187ccc0 <lundump.c:207:13, col:14> 'LoadState *' prefix '&'
`-DeclRefExpr 0x56282187cc98 <col:14> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
&[B1.18]
  20: CallExpr 0x56282187cd50 <lundump.c:207:2, col:15> 'void'
|-ImplicitCastExpr 0x56282187cd38 <col:2> 'void (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187cc70 <col:2> 'void (LoadState *)' Function 0x56282187b790 'LoadHeader' 'void (LoadState *)'
`-UnaryOperator 0x56282187ccc0 <col:13, col:14> 'LoadState *' prefix '&'
  `-DeclRefExpr 0x56282187cc98 <col:14> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
[B1.17]([B1.19])
  21: DeclRefExpr 0x56282187cd80 <lundump.c:208:9> 'Proto *(LoadState *, TString *)' Function 0x562821878b48 'LoadFunction' 'Proto *(LoadState *, TString *)'
LoadFunction
  22: ImplicitCastExpr 0x56282187d0b8 <lundump.c:208:9> 'Proto *(*)(LoadState *, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187cd80 <col:9> 'Proto *(LoadState *, TString *)' Function 0x562821878b48 'LoadFunction' 'Proto *(LoadState *, TString *)'
[B1.21] (ImplicitCastExpr, FunctionToPointerDecay, Proto *(*)(LoadState *, TString *))
  23: DeclRefExpr 0x56282187cda8 <lundump.c:208:23> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
  24: UnaryOperator 0x56282187cdd0 <lundump.c:208:22, col:23> 'LoadState *' prefix '&'
`-DeclRefExpr 0x56282187cda8 <col:23> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
&[B1.23]
  25: DeclRefExpr 0x56282187cdf0 <./lstring.h:21:32> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
luaS_newlstr
  26: ImplicitCastExpr 0x56282187cff8 <./lstring.h:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187cdf0 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
[B1.25] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t))
  27: DeclRefExpr 0x56282187ce18 <lundump.c:208:41> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
L
  28: ImplicitCastExpr 0x56282187d050 <lundump.c:208:41> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56282187ce18 <col:41> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
[B1.27] (ImplicitCastExpr, LValueToRValue, lua_State *)
  29: StringLiteral 0x56282187ce78 <./lstring.h:21:48, lundump.c:208:43> 'char [3]' lvalue "=?"
"=?"
  30: ImplicitCastExpr 0x56282187d068 <./lstring.h:21:48, lundump.c:208:43> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x56282187ce78 <./lstring.h:21:48, lundump.c:208:43> 'char [3]' lvalue "=?"
[B1.29] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  31: ImplicitCastExpr 0x56282187d080 <./lstring.h:21:48, lundump.c:208:43> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56282187d068 <./lstring.h:21:48, lundump.c:208:43> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x56282187ce78 <./lstring.h:21:48, lundump.c:208:43> 'char [3]' lvalue "=?"
[B1.30] (ImplicitCastExpr, BitCast, const char *)
  32: UnaryExprOrTypeTraitExpr 0x56282187cf00 <./lstring.h:22:35, col:43> 'unsigned long' sizeof
`-ParenExpr 0x56282187cee0 <col:41, col:43> 'char [3]' lvalue
  `-StringLiteral 0x56282187ceb0 <lundump.c:208:43> 'char [3]' lvalue "=?"
sizeof ("=?")
  33: UnaryExprOrTypeTraitExpr 0x56282187cf30 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
sizeof(char)
  34: BinaryOperator 0x56282187cf50 <./lstring.h:22:35, col:56> 'unsigned long' '/'
|-UnaryExprOrTypeTraitExpr 0x56282187cf00 <col:35, col:43> 'unsigned long' sizeof
| `-ParenExpr 0x56282187cee0 <col:41, col:43> 'char [3]' lvalue
|   `-StringLiteral 0x56282187ceb0 <lundump.c:208:43> 'char [3]' lvalue "=?"
`-UnaryExprOrTypeTraitExpr 0x56282187cf30 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
[B1.32] / [B1.33]
  35: IntegerLiteral 0x56282187cf98 <./lstring.h:22:59> 'int' 1
1
  36: ImplicitCastExpr 0x56282187cfb8 <./lstring.h:22:59> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x56282187cf98 <col:59> 'int' 1
[B1.35] (ImplicitCastExpr, IntegralCast, unsigned long)
  37: BinaryOperator 0x56282187cfd0 <./lstring.h:22:34, col:59> 'unsigned long' '-'
|-ParenExpr 0x56282187cf78 <col:34, col:57> 'unsigned long'
| `-BinaryOperator 0x56282187cf50 <col:35, col:56> 'unsigned long' '/'
|   |-UnaryExprOrTypeTraitExpr 0x56282187cf00 <col:35, col:43> 'unsigned long' sizeof
|   | `-ParenExpr 0x56282187cee0 <col:41, col:43> 'char [3]' lvalue
|   |   `-StringLiteral 0x56282187ceb0 <lundump.c:208:43> 'char [3]' lvalue "=?"
|   `-UnaryExprOrTypeTraitExpr 0x56282187cf30 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
`-ImplicitCastExpr 0x56282187cfb8 <col:59> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x56282187cf98 <col:59> 'int' 1
([B1.34]) - [B1.36]
  38: CallExpr 0x56282187d010 <./lstring.h:21:32, line:22:60> 'TString *'
|-ImplicitCastExpr 0x56282187cff8 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187cdf0 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x56282187d050 <lundump.c:208:41> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x56282187ce18 <col:41> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
|-ImplicitCastExpr 0x56282187d080 <./lstring.h:21:48, lundump.c:208:43> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56282187d068 <./lstring.h:21:48, lundump.c:208:43> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x56282187ce78 <./lstring.h:21:48, lundump.c:208:43> 'char [3]' lvalue "=?"
`-BinaryOperator 0x56282187cfd0 <./lstring.h:22:34, col:59> 'unsigned long' '-'
  |-ParenExpr 0x56282187cf78 <col:34, col:57> 'unsigned long'
  | `-BinaryOperator 0x56282187cf50 <col:35, col:56> 'unsigned long' '/'
  |   |-UnaryExprOrTypeTraitExpr 0x56282187cf00 <col:35, col:43> 'unsigned long' sizeof
  |   | `-ParenExpr 0x56282187cee0 <col:41, col:43> 'char [3]' lvalue
  |   |   `-StringLiteral 0x56282187ceb0 <lundump.c:208:43> 'char [3]' lvalue "=?"
  |   `-UnaryExprOrTypeTraitExpr 0x56282187cf30 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
  `-ImplicitCastExpr 0x56282187cfb8 <col:59> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x56282187cf98 <col:59> 'int' 1
[B1.26]([B1.28], [B1.31], [B1.37])
  39: CallExpr 0x56282187d0d0 <lundump.c:208:9, col:48> 'Proto *'
|-ImplicitCastExpr 0x56282187d0b8 <col:9> 'Proto *(*)(LoadState *, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187cd80 <col:9> 'Proto *(LoadState *, TString *)' Function 0x562821878b48 'LoadFunction' 'Proto *(LoadState *, TString *)'
|-UnaryOperator 0x56282187cdd0 <col:22, col:23> 'LoadState *' prefix '&'
| `-DeclRefExpr 0x56282187cda8 <col:23> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
`-ParenExpr 0x56282187d098 <./lstring.h:21:31, line:22:61> 'TString *'
  `-CallExpr 0x56282187d010 <line:21:32, line:22:60> 'TString *'
    |-ImplicitCastExpr 0x56282187cff8 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56282187cdf0 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
    |-ImplicitCastExpr 0x56282187d050 <lundump.c:208:41> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x56282187ce18 <col:41> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
    |-ImplicitCastExpr 0x56282187d080 <./lstring.h:21:48, lundump.c:208:43> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x56282187d068 <./lstring.h:21:48, lundump.c:208:43> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x56282187ce78 <./lstring.h:21:48, lundump.c:208:43> 'char [3]' lvalue "=?"
    `-BinaryOperator 0x56282187cfd0 <./lstring.h:22:34, col:59> 'unsigned long' '-'
      |-ParenExpr 0x56282187cf78 <col:34, col:57> 'unsigned long'
      | `-BinaryOperator 0x56282187cf50 <col:35, col:56> 'unsigned long' '/'
      |   |-UnaryExprOrTypeTraitExpr 0x56282187cf00 <col:35, col:43> 'unsigned long' sizeof
      |   | `-ParenExpr 0x56282187cee0 <col:41, col:43> 'char [3]' lvalue
      |   |   `-StringLiteral 0x56282187ceb0 <lundump.c:208:43> 'char [3]' lvalue "=?"
      |   `-UnaryExprOrTypeTraitExpr 0x56282187cf30 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
      `-ImplicitCastExpr 0x56282187cfb8 <col:59> 'unsigned long' <IntegralCast>
        `-IntegerLiteral 0x56282187cf98 <col:59> 'int' 1
[B1.22]([B1.24], ([B1.38]))
  40: ReturnStmt 0x56282187d108 <lundump.c:208:2, col:48>
`-CallExpr 0x56282187d0d0 <col:9, col:48> 'Proto *'
  |-ImplicitCastExpr 0x56282187d0b8 <col:9> 'Proto *(*)(LoadState *, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187cd80 <col:9> 'Proto *(LoadState *, TString *)' Function 0x562821878b48 'LoadFunction' 'Proto *(LoadState *, TString *)'
  |-UnaryOperator 0x56282187cdd0 <col:22, col:23> 'LoadState *' prefix '&'
  | `-DeclRefExpr 0x56282187cda8 <col:23> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
  `-ParenExpr 0x56282187d098 <./lstring.h:21:31, line:22:61> 'TString *'
    `-CallExpr 0x56282187d010 <line:21:32, line:22:60> 'TString *'
      |-ImplicitCastExpr 0x56282187cff8 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x56282187cdf0 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x562821865b60 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
      |-ImplicitCastExpr 0x56282187d050 <lundump.c:208:41> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x56282187ce18 <col:41> 'lua_State *' lvalue ParmVar 0x56282187bfb8 'L' 'lua_State *'
      |-ImplicitCastExpr 0x56282187d080 <./lstring.h:21:48, lundump.c:208:43> 'const char *' <BitCast>
      | `-ImplicitCastExpr 0x56282187d068 <./lstring.h:21:48, lundump.c:208:43> 'char *' <ArrayToPointerDecay>
      |   `-StringLiteral 0x56282187ce78 <./lstring.h:21:48, lundump.c:208:43> 'char [3]' lvalue "=?"
      `-BinaryOperator 0x56282187cfd0 <./lstring.h:22:34, col:59> 'unsigned long' '-'
        |-ParenExpr 0x56282187cf78 <col:34, col:57> 'unsigned long'
        | `-BinaryOperator 0x56282187cf50 <col:35, col:56> 'unsigned long' '/'
        |   |-UnaryExprOrTypeTraitExpr 0x56282187cf00 <col:35, col:43> 'unsigned long' sizeof
        |   | `-ParenExpr 0x56282187cee0 <col:41, col:43> 'char [3]' lvalue
        |   |   `-StringLiteral 0x56282187ceb0 <lundump.c:208:43> 'char [3]' lvalue "=?"
        |   `-UnaryExprOrTypeTraitExpr 0x56282187cf30 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
        `-ImplicitCastExpr 0x56282187cfb8 <col:59> 'unsigned long' <IntegralCast>
          `-IntegerLiteral 0x56282187cf98 <col:59> 'int' 1
return [B1.39];
   Preds (3): B2 B3 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x56282187c940 <lundump.c:203:10> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
name
   2: ImplicitCastExpr 0x56282187c968 <lundump.c:203:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x56282187c940 <col:10> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B2.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x56282187c8e0 <lundump.c:203:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
   4: MemberExpr 0x56282187c908 <lundump.c:203:3, col:5> 'const char *' lvalue .name 0x562821866890
`-DeclRefExpr 0x56282187c8e0 <col:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
[B2.3].name
   5: BinaryOperator 0x56282187c980 <lundump.c:203:3, col:10> 'const char *' '='
|-MemberExpr 0x56282187c908 <col:3, col:5> 'const char *' lvalue .name 0x562821866890
| `-DeclRefExpr 0x56282187c8e0 <col:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
`-ImplicitCastExpr 0x56282187c968 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x56282187c940 <col:10> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B2.4] = [B2.2]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: StringLiteral 0x56282187c850 <lundump.c:201:10> 'char [14]' lvalue "binary string"
"binary string"
   2: ImplicitCastExpr 0x56282187c888 <lundump.c:201:10> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x56282187c850 <col:10> 'char [14]' lvalue "binary string"
[B3.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x56282187c8a0 <lundump.c:201:10> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56282187c888 <col:10> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x56282187c850 <col:10> 'char [14]' lvalue "binary string"
[B3.2] (ImplicitCastExpr, BitCast, const char *)
   4: DeclRefExpr 0x56282187c7f0 <lundump.c:201:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
   5: MemberExpr 0x56282187c818 <lundump.c:201:3, col:5> 'const char *' lvalue .name 0x562821866890
`-DeclRefExpr 0x56282187c7f0 <col:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
[B3.4].name
   6: BinaryOperator 0x56282187c8b8 <lundump.c:201:3, col:10> 'const char *' '='
|-MemberExpr 0x56282187c818 <col:3, col:5> 'const char *' lvalue .name 0x562821866890
| `-DeclRefExpr 0x56282187c7f0 <col:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
`-ImplicitCastExpr 0x56282187c8a0 <col:10> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x56282187c888 <col:10> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x56282187c850 <col:10> 'char [14]' lvalue "binary string"
[B3.5] = [B3.3]
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x56282187c638 <lundump.c:200:12> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
name
   2: ImplicitCastExpr 0x56282187c660 <lundump.c:200:12> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x56282187c638 <col:12> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B4.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x56282187c678 <lundump.c:200:11, col:12> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x56282187c660 <col:12> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x56282187c638 <col:12> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
*[B4.2]
   4: ImplicitCastExpr 0x56282187c768 <lundump.c:200:11, col:12> 'char' <LValueToRValue>
`-UnaryOperator 0x56282187c678 <col:11, col:12> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x56282187c660 <col:12> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x56282187c638 <col:12> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x56282187c780 <lundump.c:200:11, col:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x56282187c768 <col:11, col:12> 'char' <LValueToRValue>
  `-UnaryOperator 0x56282187c678 <col:11, col:12> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x56282187c660 <col:12> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x56282187c638 <col:12> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B4.4] (ImplicitCastExpr, IntegralCast, int)
   6: StringLiteral 0x56282187c6d8 <./lua.h:27:23> 'char [5]' lvalue "\033Lua"
"\033Lua"
   7: ImplicitCastExpr 0x56282187c728 <./lua.h:27:23> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x56282187c6d8 <col:23> 'char [5]' lvalue "\033Lua"
[B4.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: IntegerLiteral 0x56282187c708 <lundump.c:200:32> 'int' 0
0
   9: ArraySubscriptExpr 0x56282187c740 <./lua.h:27:23, lundump.c:200:33> 'char' lvalue
|-ImplicitCastExpr 0x56282187c728 <./lua.h:27:23> 'char *' <ArrayToPointerDecay>
| `-StringLiteral 0x56282187c6d8 <col:23> 'char [5]' lvalue "\033Lua"
`-IntegerLiteral 0x56282187c708 <lundump.c:200:32> 'int' 0
[B4.7][[B4.8]]
  10: ImplicitCastExpr 0x56282187c798 <./lua.h:27:23, lundump.c:200:33> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x56282187c740 <./lua.h:27:23, lundump.c:200:33> 'char' lvalue
  |-ImplicitCastExpr 0x56282187c728 <./lua.h:27:23> 'char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x56282187c6d8 <col:23> 'char [5]' lvalue "\033Lua"
  `-IntegerLiteral 0x56282187c708 <lundump.c:200:32> 'int' 0
[B4.9] (ImplicitCastExpr, LValueToRValue, char)
  11: ImplicitCastExpr 0x56282187c7b0 <./lua.h:27:23, lundump.c:200:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x56282187c798 <./lua.h:27:23, lundump.c:200:33> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x56282187c740 <./lua.h:27:23, lundump.c:200:33> 'char' lvalue
    |-ImplicitCastExpr 0x56282187c728 <./lua.h:27:23> 'char *' <ArrayToPointerDecay>
    | `-StringLiteral 0x56282187c6d8 <col:23> 'char [5]' lvalue "\033Lua"
    `-IntegerLiteral 0x56282187c708 <lundump.c:200:32> 'int' 0
[B4.10] (ImplicitCastExpr, IntegralCast, int)
  12: BinaryOperator 0x56282187c7c8 <lundump.c:200:11, col:33> 'int' '=='
|-ImplicitCastExpr 0x56282187c780 <col:11, col:12> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x56282187c768 <col:11, col:12> 'char' <LValueToRValue>
|   `-UnaryOperator 0x56282187c678 <col:11, col:12> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x56282187c660 <col:12> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56282187c638 <col:12> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
`-ImplicitCastExpr 0x56282187c7b0 <./lua.h:27:23, lundump.c:200:33> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x56282187c798 <./lua.h:27:23, lundump.c:200:33> 'char' <LValueToRValue>
    `-ArraySubscriptExpr 0x56282187c740 <./lua.h:27:23, lundump.c:200:33> 'char' lvalue
      |-ImplicitCastExpr 0x56282187c728 <./lua.h:27:23> 'char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x56282187c6d8 <col:23> 'char [5]' lvalue "\033Lua"
      `-IntegerLiteral 0x56282187c708 <lundump.c:200:32> 'int' 0
[B4.5] == [B4.11]
   T: if [B4.12]
   Preds (1): B6
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x56282187c588 <lundump.c:199:10> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
name
   2: ImplicitCastExpr 0x56282187c5d0 <lundump.c:199:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x56282187c588 <col:10> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B5.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x56282187c5b0 <lundump.c:199:15> 'int' 1
1
   4: BinaryOperator 0x56282187c5e8 <lundump.c:199:10, col:15> 'const char *' '+'
|-ImplicitCastExpr 0x56282187c5d0 <col:10> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x56282187c588 <col:10> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
`-IntegerLiteral 0x56282187c5b0 <col:15> 'int' 1
[B5.2] + [B5.3]
   5: DeclRefExpr 0x56282187c508 <lundump.c:199:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
S
   6: MemberExpr 0x56282187c550 <lundump.c:199:3, col:5> 'const char *' lvalue .name 0x562821866890
`-DeclRefExpr 0x56282187c508 <col:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
[B5.5].name
   7: BinaryOperator 0x56282187c610 <lundump.c:199:3, col:15> 'const char *' '='
|-MemberExpr 0x56282187c550 <col:3, col:5> 'const char *' lvalue .name 0x562821866890
| `-DeclRefExpr 0x56282187c508 <col:3> 'LoadState':'LoadState' lvalue Var 0x56282187c2c8 'S' 'LoadState':'LoadState'
`-BinaryOperator 0x56282187c5e8 <col:10, col:15> 'const char *' '+'
  |-ImplicitCastExpr 0x56282187c5d0 <col:10> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x56282187c588 <col:10> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
  `-IntegerLiteral 0x56282187c5b0 <col:15> 'int' 1
[B5.6] = [B5.4]
   Preds (2): B6 B7
   Succs (1): B1

 [B6]
   1: DeclRefExpr 0x56282187c410 <lundump.c:198:21> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
name
   2: ImplicitCastExpr 0x56282187c438 <lundump.c:198:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x56282187c410 <col:21> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B6.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x56282187c450 <lundump.c:198:20, col:21> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x56282187c438 <col:21> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x56282187c410 <col:21> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
*[B6.2]
   4: ImplicitCastExpr 0x56282187c488 <lundump.c:198:20, col:21> 'char' <LValueToRValue>
`-UnaryOperator 0x56282187c450 <col:20, col:21> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x56282187c438 <col:21> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x56282187c410 <col:21> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B6.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x56282187c4a0 <lundump.c:198:20, col:21> 'int' <IntegralCast>
`-ImplicitCastExpr 0x56282187c488 <col:20, col:21> 'char' <LValueToRValue>
  `-UnaryOperator 0x56282187c450 <col:20, col:21> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x56282187c438 <col:21> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x56282187c410 <col:21> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B6.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x56282187c470 <lundump.c:198:27> 'int' 61
'='
   7: BinaryOperator 0x56282187c4b8 <lundump.c:198:20, col:27> 'int' '=='
|-ImplicitCastExpr 0x56282187c4a0 <col:20, col:21> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x56282187c488 <col:20, col:21> 'char' <LValueToRValue>
|   `-UnaryOperator 0x56282187c450 <col:20, col:21> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x56282187c438 <col:21> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56282187c410 <col:21> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
`-CharacterLiteral 0x56282187c470 <col:27> 'int' 61
[B6.5] == [B6.6]
   T: if [B7.8] || [B6.7]
   Preds (1): B7
   Succs (2): B5 B4

 [B7]
   1: DeclStmt 0x56282187c328 <lundump.c:197:2, col:13>col:12
`-VarDecl 0x56282187c2c8 <col:2, col:12> col:12 used S 'LoadState':'LoadState'
LoadState S;
   2: DeclRefExpr 0x56282187c340 <lundump.c:198:7> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
name
   3: ImplicitCastExpr 0x56282187c368 <lundump.c:198:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x56282187c340 <col:7> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B7.2] (ImplicitCastExpr, LValueToRValue, const char *)
   4: UnaryOperator 0x56282187c380 <lundump.c:198:6, col:7> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x56282187c368 <col:7> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x56282187c340 <col:7> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
*[B7.3]
   5: ImplicitCastExpr 0x56282187c3b8 <lundump.c:198:6, col:7> 'char' <LValueToRValue>
`-UnaryOperator 0x56282187c380 <col:6, col:7> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x56282187c368 <col:7> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x56282187c340 <col:7> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B7.4] (ImplicitCastExpr, LValueToRValue, char)
   6: ImplicitCastExpr 0x56282187c3d0 <lundump.c:198:6, col:7> 'int' <IntegralCast>
`-ImplicitCastExpr 0x56282187c3b8 <col:6, col:7> 'char' <LValueToRValue>
  `-UnaryOperator 0x56282187c380 <col:6, col:7> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x56282187c368 <col:7> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x56282187c340 <col:7> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
[B7.5] (ImplicitCastExpr, IntegralCast, int)
   7: CharacterLiteral 0x56282187c3a0 <lundump.c:198:13> 'int' 64
'@'
   8: BinaryOperator 0x56282187c3e8 <lundump.c:198:6, col:13> 'int' '=='
|-ImplicitCastExpr 0x56282187c3d0 <col:6, col:7> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x56282187c3b8 <col:6, col:7> 'char' <LValueToRValue>
|   `-UnaryOperator 0x56282187c380 <col:6, col:7> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x56282187c368 <col:7> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56282187c340 <col:7> 'const char *' lvalue ParmVar 0x56282187c110 'name' 'const char *'
`-CharacterLiteral 0x56282187c3a0 <col:13> 'int' 64
[B7.6] == [B7.7]
   T: [B7.8] || ...
   Preds (1): B8
   Succs (2): B5 B6

 [B0 (EXIT)]
   Preds (1): B1
