const TValue *luaH_get(Table *t, const TValue *key)
 [B13 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5654000f1b00 <ltable.c:470:17> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
key
   2: ImplicitCastExpr 0x5654000f1b48 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f1b28 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f1b00 <ltable.c:470:17> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
([B1.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5654000f1b60 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000f1b48 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f1b28 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f1b00 <ltable.c:470:17> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B1.2]->tt
   4: ImplicitCastExpr 0x5654000f1bb8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000f1b98 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5654000f1b60 <col:19, col:24> 'const int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000f1b48 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000f1b28 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5654000f1b00 <ltable.c:470:17> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
([B1.3]) (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B1.4]
   Preds (1): B13
   Succs (4): B10 B11 B12 B8

 [B2]
   1: DeclRefExpr 0x5654000f4858 <./lobject.h:363:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
luaO_nilobject_
   2: UnaryOperator 0x5654000f4880 <./lobject.h:363:26, col:27> 'const TValue *' prefix '&'
`-DeclRefExpr 0x5654000f4858 <col:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
&[B2.1]
   3: ReturnStmt 0x5654000f48c0 <ltable.c:488:7, ./lobject.h:363:42>
`-ParenExpr 0x5654000f48a0 <col:25, col:42> 'const TValue *'
  `-UnaryOperator 0x5654000f4880 <col:26, col:27> 'const TValue *' prefix '&'
    `-DeclRefExpr 0x5654000f4858 <col:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
return ([B2.2]);
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5654000f47f8 <ltable.c:487:16> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000f4820 <ltable.c:487:16> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000f47f8 <col:16> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B3.1] (ImplicitCastExpr, LValueToRValue, Node *)
   T: do ... while [B3.2]
   Preds (1): B4
   Succs (2): B7 B2

 [B4]
   1: DeclRefExpr 0x5654000f4640 <ltable.c:486:24> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000f4688 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000f4668 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000f4640 <ltable.c:486:24> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000f46a0 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000f4688 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000f4668 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000f4640 <ltable.c:486:24> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B4.2]->i_key
   4: MemberExpr 0x5654000f46d8 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000f46a0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000f4688 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000f4668 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000f4640 <ltable.c:486:24> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B4.3].nk
   5: MemberExpr 0x5654000f4710 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000f46d8 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000f46a0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000f4688 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000f4668 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000f4640 <ltable.c:486:24> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B4.4].next
   6: ImplicitCastExpr 0x5654000f4768 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
`-ParenExpr 0x5654000f4748 <col:18, col:37> 'struct Node *' lvalue
  `-MemberExpr 0x5654000f4710 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
    `-MemberExpr 0x5654000f46d8 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
      `-MemberExpr 0x5654000f46a0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000f4688 <col:19, col:21> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000f4668 <col:19, col:21> 'Node *' lvalue
            `-DeclRefExpr 0x5654000f4640 <ltable.c:486:24> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
([B4.5]) (ImplicitCastExpr, LValueToRValue, struct Node *)
   7: DeclRefExpr 0x5654000f4618 <ltable.c:486:14> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
n
   8: BinaryOperator 0x5654000f4780 <ltable.c:486:14, ./ltable.h:16:37> 'Node *' '='
|-DeclRefExpr 0x5654000f4618 <ltable.c:486:14> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
`-ImplicitCastExpr 0x5654000f4768 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
  `-ParenExpr 0x5654000f4748 <col:18, col:37> 'struct Node *' lvalue
    `-MemberExpr 0x5654000f4710 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
      `-MemberExpr 0x5654000f46d8 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
        `-MemberExpr 0x5654000f46a0 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000f4688 <col:19, col:21> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000f4668 <col:19, col:21> 'Node *' lvalue
              `-DeclRefExpr 0x5654000f4640 <ltable.c:486:24> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B4.7] = [B4.6]
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x5654000f4510 <ltable.c:485:23> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000f4558 <./ltable.h:15:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000f4538 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000f4510 <ltable.c:485:23> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000f4570 <./ltable.h:15:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
`-ImplicitCastExpr 0x5654000f4558 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000f4538 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000f4510 <ltable.c:485:23> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B5.2]->i_val
   4: UnaryOperator 0x5654000f45a8 <./ltable.h:15:19, col:25> 'TValue *' prefix '&'
`-MemberExpr 0x5654000f4570 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
  `-ImplicitCastExpr 0x5654000f4558 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000f4538 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000f4510 <ltable.c:485:23> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
&[B5.3]
   5: ImplicitCastExpr 0x5654000f45e8 <./ltable.h:15:18, col:30> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000f45c8 <col:18, col:30> 'TValue *'
  `-UnaryOperator 0x5654000f45a8 <col:19, col:25> 'TValue *' prefix '&'
    `-MemberExpr 0x5654000f4570 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
      `-ImplicitCastExpr 0x5654000f4558 <col:20, col:22> 'Node *' <LValueToRValue>
        `-ParenExpr 0x5654000f4538 <col:20, col:22> 'Node *' lvalue
          `-DeclRefExpr 0x5654000f4510 <ltable.c:485:23> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
([B5.4]) (ImplicitCastExpr, BitCast, const TValue *)
   6: ReturnStmt 0x5654000f4600 <ltable.c:485:11, ./ltable.h:15:30>
`-ImplicitCastExpr 0x5654000f45e8 <col:18, col:30> 'const TValue *' <BitCast>
  `-ParenExpr 0x5654000f45c8 <col:18, col:30> 'TValue *'
    `-UnaryOperator 0x5654000f45a8 <col:19, col:25> 'TValue *' prefix '&'
      `-MemberExpr 0x5654000f4570 <col:20, col:25> 'TValue':'struct lua_TValue' lvalue ->i_val 0x56540009a8a8
        `-ImplicitCastExpr 0x5654000f4558 <col:20, col:22> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000f4538 <col:20, col:22> 'Node *' lvalue
            `-DeclRefExpr 0x5654000f4510 <ltable.c:485:23> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
return [B5.5];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x5654000f4330 <ltable.c:484:13> 'int (const TValue *, const TValue *)' Function 0x56540009c108 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
luaO_rawequalObj
   2: ImplicitCastExpr 0x5654000f4490 <ltable.c:484:13> 'int (*)(const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f4330 <col:13> 'int (const TValue *, const TValue *)' Function 0x56540009c108 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const TValue *, const TValue *))
   3: DeclRefExpr 0x5654000f4358 <ltable.c:484:39> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
n
   4: ImplicitCastExpr 0x5654000f43a0 <./ltable.h:18:23, col:25> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000f4380 <col:23, col:25> 'Node *' lvalue
  `-DeclRefExpr 0x5654000f4358 <ltable.c:484:39> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
([B6.3]) (ImplicitCastExpr, LValueToRValue, Node *)
   5: MemberExpr 0x5654000f43b8 <./ltable.h:18:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000f43a0 <col:23, col:25> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000f4380 <col:23, col:25> 'Node *' lvalue
    `-DeclRefExpr 0x5654000f4358 <ltable.c:484:39> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B6.4]->i_key
   6: MemberExpr 0x5654000f43f0 <./ltable.h:18:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
`-MemberExpr 0x5654000f43b8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000f43a0 <col:23, col:25> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000f4380 <col:23, col:25> 'Node *' lvalue
      `-DeclRefExpr 0x5654000f4358 <ltable.c:484:39> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
[B6.5].tvk
   7: UnaryOperator 0x5654000f4428 <./ltable.h:18:22, col:34> 'TValue *' prefix '&'
`-MemberExpr 0x5654000f43f0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
  `-MemberExpr 0x5654000f43b8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000f43a0 <col:23, col:25> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000f4380 <col:23, col:25> 'Node *' lvalue
        `-DeclRefExpr 0x5654000f4358 <ltable.c:484:39> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
&[B6.6]
   8: ImplicitCastExpr 0x5654000f44e0 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000f4448 <col:21, col:37> 'TValue *'
  `-UnaryOperator 0x5654000f4428 <col:22, col:34> 'TValue *' prefix '&'
    `-MemberExpr 0x5654000f43f0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
      `-MemberExpr 0x5654000f43b8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000f43a0 <col:23, col:25> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000f4380 <col:23, col:25> 'Node *' lvalue
            `-DeclRefExpr 0x5654000f4358 <ltable.c:484:39> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
([B6.7]) (ImplicitCastExpr, BitCast, const TValue *)
   9: DeclRefExpr 0x5654000f4468 <ltable.c:484:43> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
key
  10: ImplicitCastExpr 0x5654000f44f8 <ltable.c:484:43> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000f4468 <col:43> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B6.9] (ImplicitCastExpr, LValueToRValue, const TValue *)
  11: CallExpr 0x5654000f44a8 <ltable.c:484:13, col:46> 'int'
|-ImplicitCastExpr 0x5654000f4490 <col:13> 'int (*)(const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f4330 <col:13> 'int (const TValue *, const TValue *)' Function 0x56540009c108 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5654000f44e0 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
| `-ParenExpr 0x5654000f4448 <col:21, col:37> 'TValue *'
|   `-UnaryOperator 0x5654000f4428 <col:22, col:34> 'TValue *' prefix '&'
|     `-MemberExpr 0x5654000f43f0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
|       `-MemberExpr 0x5654000f43b8 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|         `-ImplicitCastExpr 0x5654000f43a0 <col:23, col:25> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000f4380 <col:23, col:25> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000f4358 <ltable.c:484:39> 'Node *' lvalue Var 0x5654000f41a8 'n' 'Node *'
`-ImplicitCastExpr 0x5654000f44f8 <col:43> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f4468 <col:43> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B6.2]([B6.8], [B6.10])
   T: if [B6.11]
   Preds (2): B7 B8
   Succs (2): B5 B4

 [B7]
   Preds (1): B3
   Succs (1): B6

 [B8]
  default:
   1: DeclRefExpr 0x5654000f4208 <ltable.c:482:17> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
mainposition
   2: ImplicitCastExpr 0x5654000f4280 <ltable.c:482:17> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f4208 <col:17> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, Node *(*)(const Table *, const TValue *))
   3: DeclRefExpr 0x5654000f4230 <ltable.c:482:30> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000f42d0 <ltable.c:482:30> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f4230 <col:30> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
[B8.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: ImplicitCastExpr 0x5654000f42e8 <ltable.c:482:30> 'const Table *' <BitCast>
`-ImplicitCastExpr 0x5654000f42d0 <col:30> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f4230 <col:30> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
[B8.4] (ImplicitCastExpr, BitCast, const Table *)
   6: DeclRefExpr 0x5654000f4258 <ltable.c:482:33> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
key
   7: ImplicitCastExpr 0x5654000f4300 <ltable.c:482:33> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000f4258 <col:33> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B8.6] (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: CallExpr 0x5654000f4298 <ltable.c:482:17, col:36> 'Node *'
|-ImplicitCastExpr 0x5654000f4280 <col:17> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f4208 <col:17> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000f42e8 <col:30> 'const Table *' <BitCast>
| `-ImplicitCastExpr 0x5654000f42d0 <col:30> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000f4230 <col:30> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
`-ImplicitCastExpr 0x5654000f4300 <col:33> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f4258 <col:33> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B8.2]([B8.5], [B8.7])
   9: DeclStmt 0x5654000f4318 <ltable.c:482:7, col:37>col:13
`-VarDecl 0x5654000f41a8 <col:7, col:36> col:13 used n 'Node *' cinit
  `-CallExpr 0x5654000f4298 <col:17, col:36> 'Node *'
    |-ImplicitCastExpr 0x5654000f4280 <col:17> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5654000f4208 <col:17> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
    |-ImplicitCastExpr 0x5654000f42e8 <col:30> 'const Table *' <BitCast>
    | `-ImplicitCastExpr 0x5654000f42d0 <col:30> 'Table *' <LValueToRValue>
    |   `-DeclRefExpr 0x5654000f4230 <col:30> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
    `-ImplicitCastExpr 0x5654000f4300 <col:33> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000f4258 <col:33> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
Node *n = mainposition(t, key);
   Preds (2): B10 B1
   Succs (1): B6

 [B9]
   1: DeclRefExpr 0x5654000f2628 <ltable.c:478:16> 'const TValue *(Table *, int)' Function 0x5654000ef378 'luaH_getnum' 'const TValue *(Table *, int)'
luaH_getnum
   2: ImplicitCastExpr 0x5654000f4098 <ltable.c:478:16> 'const TValue *(*)(Table *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f2628 <col:16> 'const TValue *(Table *, int)' Function 0x5654000ef378 'luaH_getnum' 'const TValue *(Table *, int)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, int))
   3: DeclRefExpr 0x5654000f2650 <ltable.c:478:28> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000f40e8 <ltable.c:478:28> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f2650 <col:28> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
[B9.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: DeclRefExpr 0x5654000f2678 <ltable.c:478:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
k
   6: ImplicitCastExpr 0x5654000f4100 <ltable.c:478:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000f2678 <col:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
[B9.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x5654000f40b0 <ltable.c:478:16, col:32> 'const TValue *'
|-ImplicitCastExpr 0x5654000f4098 <col:16> 'const TValue *(*)(Table *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f2628 <col:16> 'const TValue *(Table *, int)' Function 0x5654000ef378 'luaH_getnum' 'const TValue *(Table *, int)'
|-ImplicitCastExpr 0x5654000f40e8 <col:28> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f2650 <col:28> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
`-ImplicitCastExpr 0x5654000f4100 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f2678 <col:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
[B9.2]([B9.4], [B9.6])
   8: ReturnStmt 0x5654000f4118 <ltable.c:478:9, col:32>
`-CallExpr 0x5654000f40b0 <col:16, col:32> 'const TValue *'
  |-ImplicitCastExpr 0x5654000f4098 <col:16> 'const TValue *(*)(Table *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000f2628 <col:16> 'const TValue *(Table *, int)' Function 0x5654000ef378 'luaH_getnum' 'const TValue *(Table *, int)'
  |-ImplicitCastExpr 0x5654000f40e8 <col:28> 'Table *' <LValueToRValue>
  | `-DeclRefExpr 0x5654000f2650 <col:28> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
  `-ImplicitCastExpr 0x5654000f4100 <col:31> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5654000f2678 <col:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
return [B9.7];
   Preds (1): B10
   Succs (1): B0

 [B10]
  case 3:
   1: DeclStmt 0x5654000f2088 <ltable.c:474:7, col:12>col:11
`-VarDecl 0x5654000f2028 <col:7, col:11> col:11 used k 'int'
int k;
   2: DeclRefExpr 0x5654000f2110 <ltable.c:475:29> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
key
   3: ImplicitCastExpr 0x5654000f2158 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f2138 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f2110 <ltable.c:475:29> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
([B10.2]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   4: MemberExpr 0x5654000f2170 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000f2158 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f2138 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f2110 <ltable.c:475:29> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B10.3]->value
   5: MemberExpr 0x5654000f21a8 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
`-MemberExpr 0x5654000f2170 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000f2158 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000f2138 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5654000f2110 <ltable.c:475:29> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B10.4].n
   6: ImplicitCastExpr 0x5654000f2200 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5654000f21e0 <col:25, col:27> 'const lua_Number':'const double' lvalue
  `-MemberExpr 0x5654000f21a8 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
    `-MemberExpr 0x5654000f2170 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
      `-ImplicitCastExpr 0x5654000f2158 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5654000f2138 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5654000f2110 <ltable.c:475:29> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
([B10.5]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   7: DeclStmt 0x5654000f2218 <ltable.c:475:7, col:33>col:18
`-VarDecl 0x5654000f20b0 <col:7, ./llimits.h:63:27> ltable.c:475:18 used n 'lua_Number':'double' cinit
  `-ImplicitCastExpr 0x5654000f2200 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x5654000f21e0 <col:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5654000f21a8 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
        `-MemberExpr 0x5654000f2170 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
          `-ImplicitCastExpr 0x5654000f2158 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5654000f2138 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5654000f2110 <ltable.c:475:29> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
lua_Number n = ((key)->value.n);
   8: DeclRefExpr 0x5654000f2278 <ltable.c:476:25> 'lua_Number':'double' lvalue Var 0x5654000f20b0 'n' 'lua_Number':'double'
n
   9: ImplicitCastExpr 0x5654000f2308 <./luaconf.h:580:39, col:41> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5654000f22e8 <col:39, col:41> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5654000f2278 <ltable.c:476:25> 'lua_Number':'double' lvalue Var 0x5654000f20b0 'n' 'lua_Number':'double'
([B10.8]) (ImplicitCastExpr, LValueToRValue, lua_Number)
  10: CStyleCastExpr 0x5654000f2320 <./luaconf.h:580:34, col:41> 'int' <FloatingToIntegral>
`-ImplicitCastExpr 0x5654000f2308 <col:39, col:41> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5654000f22e8 <col:39, col:41> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5654000f2278 <ltable.c:476:25> 'lua_Number':'double' lvalue Var 0x5654000f20b0 'n' 'lua_Number':'double'
(int)[B10.9] (CStyleCastExpr, FloatingToIntegral, int)
  11: DeclRefExpr 0x5654000f2230 <ltable.c:476:22> 'int' lvalue Var 0x5654000f2028 'k' 'int'
k
  12: BinaryOperator 0x5654000f2348 <./luaconf.h:580:30, col:41> 'int' '='
|-ParenExpr 0x5654000f2258 <col:30, col:32> 'int' lvalue
| `-DeclRefExpr 0x5654000f2230 <ltable.c:476:22> 'int' lvalue Var 0x5654000f2028 'k' 'int'
`-CStyleCastExpr 0x5654000f2320 <./luaconf.h:580:34, col:41> 'int' <FloatingToIntegral>
  `-ImplicitCastExpr 0x5654000f2308 <col:39, col:41> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x5654000f22e8 <col:39, col:41> 'lua_Number':'double' lvalue
      `-DeclRefExpr 0x5654000f2278 <ltable.c:476:25> 'lua_Number':'double' lvalue Var 0x5654000f20b0 'n' 'lua_Number':'double'
([B10.11]) = [B10.10]
  13: DeclRefExpr 0x5654000f2390 <ltable.c:477:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
k
  14: ImplicitCastExpr 0x5654000f2438 <./llimits.h:75:26, col:30> 'int' <LValueToRValue>
`-ParenExpr 0x5654000f2418 <col:26, col:30> 'int' lvalue
  `-ParenExpr 0x5654000f23b8 <line:79:38, col:40> 'int' lvalue
    `-DeclRefExpr 0x5654000f2390 <ltable.c:477:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
(([B10.13])) (ImplicitCastExpr, LValueToRValue, int)
  15: CStyleCastExpr 0x5654000f2450 <./llimits.h:75:23, col:30> 'lua_Number':'double' <IntegralToFloating>
`-ImplicitCastExpr 0x5654000f2438 <col:26, col:30> 'int' <LValueToRValue>
  `-ParenExpr 0x5654000f2418 <col:26, col:30> 'int' lvalue
    `-ParenExpr 0x5654000f23b8 <line:79:38, col:40> 'int' lvalue
      `-DeclRefExpr 0x5654000f2390 <ltable.c:477:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
(lua_Number)[B10.14] (CStyleCastExpr, IntegralToFloating, lua_Number)
  16: DeclRefExpr 0x5654000f24b8 <ltable.c:477:42> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
key
  17: ImplicitCastExpr 0x5654000f2500 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f24e0 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f24b8 <ltable.c:477:42> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
([B10.16]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  18: MemberExpr 0x5654000f2518 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000f2500 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f24e0 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f24b8 <ltable.c:477:42> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B10.17]->value
  19: MemberExpr 0x5654000f2550 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
`-MemberExpr 0x5654000f2518 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000f2500 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000f24e0 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5654000f24b8 <ltable.c:477:42> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B10.18].n
  20: ImplicitCastExpr 0x5654000f25c8 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5654000f25a8 <col:32, col:34> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5654000f2588 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x5654000f2550 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
      `-MemberExpr 0x5654000f2518 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
        `-ImplicitCastExpr 0x5654000f2500 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5654000f24e0 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5654000f24b8 <ltable.c:477:42> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
(([B10.19])) (ImplicitCastExpr, LValueToRValue, lua_Number)
  21: BinaryOperator 0x5654000f25e0 <./luaconf.h:540:27, col:34> 'int' '=='
|-ParenExpr 0x5654000f2498 <col:27, col:29> 'lua_Number':'double'
| `-ParenExpr 0x5654000f2478 <./llimits.h:75:22, col:31> 'lua_Number':'double'
|   `-CStyleCastExpr 0x5654000f2450 <col:23, col:30> 'lua_Number':'double' <IntegralToFloating>
|     `-ImplicitCastExpr 0x5654000f2438 <col:26, col:30> 'int' <LValueToRValue>
|       `-ParenExpr 0x5654000f2418 <col:26, col:30> 'int' lvalue
|         `-ParenExpr 0x5654000f23b8 <line:79:38, col:40> 'int' lvalue
|           `-DeclRefExpr 0x5654000f2390 <ltable.c:477:31> 'int' lvalue Var 0x5654000f2028 'k' 'int'
`-ImplicitCastExpr 0x5654000f25c8 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5654000f25a8 <col:32, col:34> 'const lua_Number':'const double' lvalue
    `-ParenExpr 0x5654000f2588 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5654000f2550 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x565400089738
        `-MemberExpr 0x5654000f2518 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x565400089980
          `-ImplicitCastExpr 0x5654000f2500 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5654000f24e0 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5654000f24b8 <ltable.c:477:42> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
(([B10.15])) == [B10.20]
   T: if ([B10.21])
   Preds (1): B1
   Succs (2): B9 B8

 [B11]
  case 4:
   1: DeclRefExpr 0x5654000f1d30 <ltable.c:472:30> 'const TValue *(Table *, TString *)' Function 0x5654000f0918 'luaH_getstr' 'const TValue *(Table *, TString *)'
luaH_getstr
   2: ImplicitCastExpr 0x5654000f1f38 <ltable.c:472:30> 'const TValue *(*)(Table *, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f1d30 <col:30> 'const TValue *(Table *, TString *)' Function 0x5654000f0918 'luaH_getstr' 'const TValue *(Table *, TString *)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, TString *))
   3: DeclRefExpr 0x5654000f1d58 <ltable.c:472:42> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000f1f88 <ltable.c:472:42> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f1d58 <col:42> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
[B11.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
key
   6: ImplicitCastExpr 0x5654000f1dc8 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
([B11.5]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: MemberExpr 0x5654000f1de0 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000f1dc8 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B11.6]->value
   8: MemberExpr 0x5654000f1e18 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x565400089680
`-MemberExpr 0x5654000f1de0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000f1dc8 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B11.7].gc
   9: ImplicitCastExpr 0x5654000f1e50 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5654000f1e18 <col:49, col:60> 'GCObject *const' lvalue .gc 0x565400089680
  `-MemberExpr 0x5654000f1de0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x565400089980
    `-ImplicitCastExpr 0x5654000f1dc8 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B11.8] (ImplicitCastExpr, LValueToRValue, GCObject *)
  10: MemberExpr 0x5654000f1e68 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5654000ac078
`-ImplicitCastExpr 0x5654000f1e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5654000f1e18 <col:49, col:60> 'GCObject *const' lvalue .gc 0x565400089680
    `-MemberExpr 0x5654000f1de0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x565400089980
      `-ImplicitCastExpr 0x5654000f1dc8 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B11.9]->ts
  11: UnaryOperator 0x5654000f1ea0 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5654000f1e68 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5654000ac078
  `-ImplicitCastExpr 0x5654000f1e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5654000f1e18 <col:49, col:60> 'GCObject *const' lvalue .gc 0x565400089680
      `-MemberExpr 0x5654000f1de0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x565400089980
        `-ImplicitCastExpr 0x5654000f1dc8 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
&[B11.10]
  12: CallExpr 0x5654000f1f50 <ltable.c:472:30, col:60> 'const TValue *'
|-ImplicitCastExpr 0x5654000f1f38 <col:30> 'const TValue *(*)(Table *, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f1d30 <col:30> 'const TValue *(Table *, TString *)' Function 0x5654000f0918 'luaH_getstr' 'const TValue *(Table *, TString *)'
|-ImplicitCastExpr 0x5654000f1f88 <col:42> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f1d58 <col:42> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
`-ParenExpr 0x5654000f1ec0 <./llimits.h:63:25, col:27> 'union TString *'
  `-UnaryOperator 0x5654000f1ea0 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5654000f1e68 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5654000ac078
      `-ImplicitCastExpr 0x5654000f1e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5654000f1e18 <col:49, col:60> 'GCObject *const' lvalue .gc 0x565400089680
          `-MemberExpr 0x5654000f1de0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x565400089980
            `-ImplicitCastExpr 0x5654000f1dc8 <col:49, col:51> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
                `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
[B11.2]([B11.4], ([B11.11]))
  13: ReturnStmt 0x5654000f1fa0 <ltable.c:472:23, col:60>
`-CallExpr 0x5654000f1f50 <col:30, col:60> 'const TValue *'
  |-ImplicitCastExpr 0x5654000f1f38 <col:30> 'const TValue *(*)(Table *, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000f1d30 <col:30> 'const TValue *(Table *, TString *)' Function 0x5654000f0918 'luaH_getstr' 'const TValue *(Table *, TString *)'
  |-ImplicitCastExpr 0x5654000f1f88 <col:42> 'Table *' <LValueToRValue>
  | `-DeclRefExpr 0x5654000f1d58 <col:42> 'Table *' lvalue ParmVar 0x5654000f1908 't' 'Table *'
  `-ParenExpr 0x5654000f1ec0 <./llimits.h:63:25, col:27> 'union TString *'
    `-UnaryOperator 0x5654000f1ea0 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x5654000f1e68 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5654000ac078
        `-ImplicitCastExpr 0x5654000f1e50 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5654000f1e18 <col:49, col:60> 'GCObject *const' lvalue .gc 0x565400089680
            `-MemberExpr 0x5654000f1de0 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x565400089980
              `-ImplicitCastExpr 0x5654000f1dc8 <col:49, col:51> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5654000f1da8 <col:49, col:51> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5654000f1d80 <ltable.c:472:56> 'const TValue *' lvalue ParmVar 0x5654000f1978 'key' 'const TValue *'
return [B11.12];
   Preds (1): B1
   Succs (1): B0

 [B12]
  case 0:
   1: DeclRefExpr 0x5654000f1c58 <./lobject.h:363:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
luaO_nilobject_
   2: UnaryOperator 0x5654000f1c80 <./lobject.h:363:26, col:27> 'const TValue *' prefix '&'
`-DeclRefExpr 0x5654000f1c58 <col:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
&[B12.1]
   3: ReturnStmt 0x5654000f1cc0 <ltable.c:471:20, ./lobject.h:363:42>
`-ParenExpr 0x5654000f1ca0 <col:25, col:42> 'const TValue *'
  `-UnaryOperator 0x5654000f1c80 <col:26, col:27> 'const TValue *' prefix '&'
    `-DeclRefExpr 0x5654000f1c58 <col:27> 'const TValue':'const struct lua_TValue' lvalue Var 0x56540009afb8 'luaO_nilobject_' 'const TValue':'const struct lua_TValue'
return ([B12.2]);
   Preds (1): B1
   Succs (1): B0

 [B0 (EXIT)]
   Preds (5): B2 B5 B9 B11 B12
