static Proto *getluaproto(CallInfo *ci)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: ConditionalOperator 0x555e9723fbb0 <./lstate.h:62:19, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'struct Proto *'
|-ParenExpr 0x555e9723f880 <./lstate.h:62:19, col:59> 'int'
| `-BinaryOperator 0x555e9723f858 <./lobject.h:83:25, ./lstate.h:61:41> 'int' '&&'
|   |-ParenExpr 0x555e9723f580 <./lobject.h:83:25, col:51> 'int'
|   | `-BinaryOperator 0x555e9723f558 <line:90:18, ./lua.h:80:24> 'int' '=='
|   |   |-ImplicitCastExpr 0x555e9723f540 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
|   |   | `-ParenExpr 0x555e9723ecf0 <col:18, col:26> 'int' lvalue
|   |   |   `-MemberExpr 0x555e9723ecb8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
|   |   |     `-ImplicitCastExpr 0x555e9723eca0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|   |   |       `-ParenExpr 0x555e9723ec80 <col:19, col:21> 'StkId':'TValue *' lvalue
|   |   |         `-MemberExpr 0x555e9723ec48 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|   |   |           `-ImplicitCastExpr 0x555e9723ec30 <col:33, col:36> 'CallInfo *' <LValueToRValue>
|   |   |             `-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
|   |   |               `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
|   |   `-IntegerLiteral 0x555e9723ed10 <./lua.h:80:24> 'int' 6
|   `-ParenExpr 0x555e9723f838 <./lstate.h:61:21, col:41> 'int'
|     `-UnaryOperator 0x555e9723f818 <col:22, col:38> 'int' prefix '!'
|       `-ImplicitCastExpr 0x555e9723f800 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x555e9723f7c8 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
|           `-MemberExpr 0x555e9723f790 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
|             `-ParenExpr 0x555e9723f770 <line:60:21, col:41> 'union Closure *'
|               `-ParenExpr 0x555e9723f750 <./llimits.h:63:25, col:27> 'union Closure *'
|                 `-UnaryOperator 0x555e9723f730 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|                   `-MemberExpr 0x555e9723f6f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
|                     `-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
|                       `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
|                         `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
|                           `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                             `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
|                               `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|                                 `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
|                                   `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
|                                     `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
|-ImplicitCastExpr 0x555e9723fb80 <./lstate.h:60:21, ldebug.c:108:38> 'struct Proto *' <LValueToRValue>
| `-MemberExpr 0x555e9723fac8 <./lstate.h:60:21, ldebug.c:108:38> 'struct Proto *' lvalue .p 0x555e971db718
|   `-MemberExpr 0x555e9723fa90 <./lstate.h:60:21, ldebug.c:108:36> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
|     `-ParenExpr 0x555e9723fa70 <./lstate.h:60:21, col:41> 'union Closure *'
|       `-ParenExpr 0x555e9723fa50 <./llimits.h:63:25, col:27> 'union Closure *'
|         `-UnaryOperator 0x555e9723fa30 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|           `-MemberExpr 0x555e9723f9f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
|             `-ImplicitCastExpr 0x555e9723f9e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
|               `-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
|                 `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
|                   `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                     `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
|                       `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|                         `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
|                           `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
|                             `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e9723fb98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Proto *' <NullToPointer>
  `-ParenExpr 0x555e9723fb60 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x555e9723fb38 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x555e9723fb00 <col:24> 'int' 0
(([B5.8]) && ([B4.13])) ? [B2.12] : [B3.3]
   2: ReturnStmt 0x555e9723fc00 <ldebug.c:108:3, col:46>
`-ParenExpr 0x555e9723fbe0 <col:10, col:46> 'struct Proto *'
  `-ConditionalOperator 0x555e9723fbb0 <./lstate.h:62:19, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'struct Proto *'
    |-ParenExpr 0x555e9723f880 <./lstate.h:62:19, col:59> 'int'
    | `-BinaryOperator 0x555e9723f858 <./lobject.h:83:25, ./lstate.h:61:41> 'int' '&&'
    |   |-ParenExpr 0x555e9723f580 <./lobject.h:83:25, col:51> 'int'
    |   | `-BinaryOperator 0x555e9723f558 <line:90:18, ./lua.h:80:24> 'int' '=='
    |   |   |-ImplicitCastExpr 0x555e9723f540 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   |   | `-ParenExpr 0x555e9723ecf0 <col:18, col:26> 'int' lvalue
    |   |   |   `-MemberExpr 0x555e9723ecb8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
    |   |   |     `-ImplicitCastExpr 0x555e9723eca0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
    |   |   |       `-ParenExpr 0x555e9723ec80 <col:19, col:21> 'StkId':'TValue *' lvalue
    |   |   |         `-MemberExpr 0x555e9723ec48 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    |   |   |           `-ImplicitCastExpr 0x555e9723ec30 <col:33, col:36> 'CallInfo *' <LValueToRValue>
    |   |   |             `-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
    |   |   |               `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
    |   |   `-IntegerLiteral 0x555e9723ed10 <./lua.h:80:24> 'int' 6
    |   `-ParenExpr 0x555e9723f838 <./lstate.h:61:21, col:41> 'int'
    |     `-UnaryOperator 0x555e9723f818 <col:22, col:38> 'int' prefix '!'
    |       `-ImplicitCastExpr 0x555e9723f800 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
    |         `-MemberExpr 0x555e9723f7c8 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
    |           `-MemberExpr 0x555e9723f790 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
    |             `-ParenExpr 0x555e9723f770 <line:60:21, col:41> 'union Closure *'
    |               `-ParenExpr 0x555e9723f750 <./llimits.h:63:25, col:27> 'union Closure *'
    |                 `-UnaryOperator 0x555e9723f730 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    |                   `-MemberExpr 0x555e9723f6f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
    |                     `-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    |                       `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    |                         `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    |                           `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    |                             `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
    |                               `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    |                                 `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
    |                                   `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
    |                                     `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
    |-ImplicitCastExpr 0x555e9723fb80 <./lstate.h:60:21, ldebug.c:108:38> 'struct Proto *' <LValueToRValue>
    | `-MemberExpr 0x555e9723fac8 <./lstate.h:60:21, ldebug.c:108:38> 'struct Proto *' lvalue .p 0x555e971db718
    |   `-MemberExpr 0x555e9723fa90 <./lstate.h:60:21, ldebug.c:108:36> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    |     `-ParenExpr 0x555e9723fa70 <./lstate.h:60:21, col:41> 'union Closure *'
    |       `-ParenExpr 0x555e9723fa50 <./llimits.h:63:25, col:27> 'union Closure *'
    |         `-UnaryOperator 0x555e9723fa30 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    |           `-MemberExpr 0x555e9723f9f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
    |             `-ImplicitCastExpr 0x555e9723f9e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    |               `-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    |                 `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    |                   `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    |                     `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
    |                       `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    |                         `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
    |                           `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
    |                             `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
    `-ImplicitCastExpr 0x555e9723fb98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Proto *' <NullToPointer>
      `-ParenExpr 0x555e9723fb60 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x555e9723fb38 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x555e9723fb00 <col:24> 'int' 0
return ([B1.1]);
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e9723f8e8 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
([B2.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B2.2]->func
   4: ImplicitCastExpr 0x555e9723f958 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
([B2.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e9723f970 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B2.4]->value
   6: MemberExpr 0x555e9723f9a8 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B2.5].gc
   7: ImplicitCastExpr 0x555e9723f9e0 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B2.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x555e9723f9f8 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e9723f9e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B2.7]->cl
   9: UnaryOperator 0x555e9723fa30 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e9723f9f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e9723f9e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
&[B2.8]
  10: MemberExpr 0x555e9723fa90 <./lstate.h:60:21, ldebug.c:108:36> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ParenExpr 0x555e9723fa70 <./lstate.h:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e9723fa50 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e9723fa30 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e9723f9f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e9723f9e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
(([B2.9]))->l
  11: MemberExpr 0x555e9723fac8 <./lstate.h:60:21, ldebug.c:108:38> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e9723fa90 <./lstate.h:60:21, ldebug.c:108:36> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ParenExpr 0x555e9723fa70 <./lstate.h:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e9723fa50 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e9723fa30 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e9723f9f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e9723f9e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B2.10].p
  12: ImplicitCastExpr 0x555e9723fb80 <./lstate.h:60:21, ldebug.c:108:38> 'struct Proto *' <LValueToRValue>
`-MemberExpr 0x555e9723fac8 <./lstate.h:60:21, ldebug.c:108:38> 'struct Proto *' lvalue .p 0x555e971db718
  `-MemberExpr 0x555e9723fa90 <./lstate.h:60:21, ldebug.c:108:36> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    `-ParenExpr 0x555e9723fa70 <./lstate.h:60:21, col:41> 'union Closure *'
      `-ParenExpr 0x555e9723fa50 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x555e9723fa30 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x555e9723f9f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
            `-ImplicitCastExpr 0x555e9723f9e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x555e9723f9a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                `-MemberExpr 0x555e9723f970 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                  `-ImplicitCastExpr 0x555e9723f958 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x555e9723f938 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-MemberExpr 0x555e9723f900 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                        `-ImplicitCastExpr 0x555e9723f8e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                          `-ParenExpr 0x555e9723f8c8 <col:30, col:33> 'CallInfo *' lvalue
                            `-DeclRefExpr 0x555e9723f8a0 <ldebug.c:108:31> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B2.11] (ImplicitCastExpr, LValueToRValue, struct Proto *)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x555e9723fb00 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x555e9723fb38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e9723fb00 <col:24> 'int' 0
(void *)[B3.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x555e9723fb98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Proto *' <NullToPointer>
`-ParenExpr 0x555e9723fb60 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e9723fb38 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e9723fb00 <col:24> 'int' 0
([B3.2]) (ImplicitCastExpr, NullToPointer, struct Proto *)
   Preds (2): B4 B5
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e9723f5e8 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B4.2]->func
   4: ImplicitCastExpr 0x555e9723f658 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e9723f670 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B4.4]->value
   6: MemberExpr 0x555e9723f6a8 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B4.5].gc
   7: ImplicitCastExpr 0x555e9723f6e0 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B4.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x555e9723f6f8 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B4.7]->cl
   9: UnaryOperator 0x555e9723f730 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e9723f6f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
&[B4.8]
  10: MemberExpr 0x555e9723f790 <./lstate.h:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
`-ParenExpr 0x555e9723f770 <line:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e9723f750 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e9723f730 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e9723f6f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
(([B4.9]))->c
  11: MemberExpr 0x555e9723f7c8 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
`-MemberExpr 0x555e9723f790 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
  `-ParenExpr 0x555e9723f770 <line:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e9723f750 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e9723f730 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e9723f6f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B4.10].isC
  12: ImplicitCastExpr 0x555e9723f800 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x555e9723f7c8 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
  `-MemberExpr 0x555e9723f790 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
    `-ParenExpr 0x555e9723f770 <line:60:21, col:41> 'union Closure *'
      `-ParenExpr 0x555e9723f750 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x555e9723f730 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x555e9723f6f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
            `-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                  `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                        `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                          `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
                            `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B4.11] (ImplicitCastExpr, LValueToRValue, lu_byte)
  13: UnaryOperator 0x555e9723f818 <./lstate.h:61:22, col:38> 'int' prefix '!'
`-ImplicitCastExpr 0x555e9723f800 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x555e9723f7c8 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
    `-MemberExpr 0x555e9723f790 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
      `-ParenExpr 0x555e9723f770 <line:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x555e9723f750 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x555e9723f730 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x555e9723f6f8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
              `-ImplicitCastExpr 0x555e9723f6e0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x555e9723f6a8 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                  `-MemberExpr 0x555e9723f670 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                    `-ImplicitCastExpr 0x555e9723f658 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x555e9723f638 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x555e9723f600 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                          `-ImplicitCastExpr 0x555e9723f5e8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x555e9723f5c8 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x555e9723f5a0 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
![B4.12]
   T: (([B5.8]) && ([B4.13])) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B5]
   1: DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e9723ec30 <./lstate.h:62:33, col:36> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e9723ec48 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e9723ec30 <col:33, col:36> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B5.2]->func
   4: ImplicitCastExpr 0x555e9723eca0 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e9723ec80 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e9723ec48 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e9723ec30 <col:33, col:36> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
([B5.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e9723ecb8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e9723eca0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e9723ec80 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e9723ec48 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e9723ec30 <col:33, col:36> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
[B5.4]->tt
   6: ImplicitCastExpr 0x555e9723f540 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x555e9723ecf0 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x555e9723ecb8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
    `-ImplicitCastExpr 0x555e9723eca0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e9723ec80 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e9723ec48 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e9723ec30 <col:33, col:36> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
([B5.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x555e9723ed10 <./lua.h:80:24> 'int' 6
6
   8: BinaryOperator 0x555e9723f558 <./lobject.h:90:18, ./lua.h:80:24> 'int' '=='
|-ImplicitCastExpr 0x555e9723f540 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x555e9723ecf0 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x555e9723ecb8 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
|     `-ImplicitCastExpr 0x555e9723eca0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x555e9723ec80 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-MemberExpr 0x555e9723ec48 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|           `-ImplicitCastExpr 0x555e9723ec30 <col:33, col:36> 'CallInfo *' <LValueToRValue>
|             `-ParenExpr 0x555e9723ec10 <col:33, col:36> 'CallInfo *' lvalue
|               `-DeclRefExpr 0x555e9723ebe8 <ldebug.c:108:17> 'CallInfo *' lvalue ParmVar 0x555e9723ea40 'ci' 'CallInfo *'
`-IntegerLiteral 0x555e9723ed10 <./lua.h:80:24> 'int' 6
[B5.6] == [B5.7]
   T: ([B5.8]) && ...
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (1): B1
