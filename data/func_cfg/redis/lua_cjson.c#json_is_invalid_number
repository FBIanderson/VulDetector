static int json_is_invalid_number(json_parse_t *json)
 [B18 (ENTRY)]
   Succs (1): B17

 [B1]
   1: IntegerLiteral 0x563107e24b18 <lua_cjson.c:993:12> 'int' 0
0
   2: ReturnStmt 0x563107e24b38 <lua_cjson.c:993:5, col:12>
`-IntegerLiteral 0x563107e24b18 <col:12> 'int' 0
return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x563107e24aa8 <lua_cjson.c:989:16> 'int' 1
1
   2: ReturnStmt 0x563107e24ac8 <lua_cjson.c:989:9, col:16>
`-IntegerLiteral 0x563107e24aa8 <col:16> 'int' 1
return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x563107e24900 <lua_cjson.c:988:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
strncasecmp
   2: ImplicitCastExpr 0x563107e249d0 <lua_cjson.c:988:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e24900 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *, unsigned long))
   3: DeclRefExpr 0x563107e24928 <lua_cjson.c:988:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   4: ImplicitCastExpr 0x563107e24a28 <lua_cjson.c:988:22> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e24928 <col:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x563107e24950 <lua_cjson.c:988:25> 'char [4]' lvalue "nan"
"nan"
   6: ImplicitCastExpr 0x563107e24a40 <lua_cjson.c:988:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e24950 <col:25> 'char [4]' lvalue "nan"
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x563107e24a58 <lua_cjson.c:988:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e24a40 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e24950 <col:25> 'char [4]' lvalue "nan"
[B3.6] (ImplicitCastExpr, BitCast, const char *)
   8: IntegerLiteral 0x563107e24980 <lua_cjson.c:988:32> 'int' 3
3
   9: ImplicitCastExpr 0x563107e24a70 <lua_cjson.c:988:32> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x563107e24980 <col:32> 'int' 3
[B3.8] (ImplicitCastExpr, IntegralCast, unsigned long)
  10: CallExpr 0x563107e249e8 <lua_cjson.c:988:10, col:33> 'int'
|-ImplicitCastExpr 0x563107e249d0 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e24900 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|-ImplicitCastExpr 0x563107e24a28 <col:22> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e24928 <col:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
|-ImplicitCastExpr 0x563107e24a58 <col:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e24a40 <col:25> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e24950 <col:25> 'char [4]' lvalue "nan"
`-ImplicitCastExpr 0x563107e24a70 <col:32> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x563107e24980 <col:32> 'int' 3
[B3.2]([B3.4], [B3.7], [B3.9])
  11: UnaryOperator 0x563107e24a88 <lua_cjson.c:988:9, col:33> 'int' prefix '!'
`-CallExpr 0x563107e249e8 <col:10, col:33> 'int'
  |-ImplicitCastExpr 0x563107e249d0 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e24900 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
  |-ImplicitCastExpr 0x563107e24a28 <col:22> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e24928 <col:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
  |-ImplicitCastExpr 0x563107e24a58 <col:25> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x563107e24a40 <col:25> 'char *' <ArrayToPointerDecay>
  |   `-StringLiteral 0x563107e24950 <col:25> 'char [4]' lvalue "nan"
  `-ImplicitCastExpr 0x563107e24a70 <col:32> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x563107e24980 <col:32> 'int' 3
![B3.10]
   T: if [B3.11]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x563107e24890 <lua_cjson.c:987:16> 'int' 1
1
   2: ReturnStmt 0x563107e248b0 <lua_cjson.c:987:9, col:16>
`-IntegerLiteral 0x563107e24890 <col:16> 'int' 1
return [B4.1];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x563107e246b8 <lua_cjson.c:986:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
strncasecmp
   2: ImplicitCastExpr 0x563107e247b8 <lua_cjson.c:986:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e246b8 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *, unsigned long))
   3: DeclRefExpr 0x563107e246e0 <lua_cjson.c:986:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   4: ImplicitCastExpr 0x563107e24810 <lua_cjson.c:986:22> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e246e0 <col:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B5.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x563107e24708 <lua_cjson.c:986:25> 'char [4]' lvalue "inf"
"inf"
   6: ImplicitCastExpr 0x563107e24828 <lua_cjson.c:986:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e24708 <col:25> 'char [4]' lvalue "inf"
[B5.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x563107e24840 <lua_cjson.c:986:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e24828 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e24708 <col:25> 'char [4]' lvalue "inf"
[B5.6] (ImplicitCastExpr, BitCast, const char *)
   8: IntegerLiteral 0x563107e24738 <lua_cjson.c:986:32> 'int' 3
3
   9: ImplicitCastExpr 0x563107e24858 <lua_cjson.c:986:32> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x563107e24738 <col:32> 'int' 3
[B5.8] (ImplicitCastExpr, IntegralCast, unsigned long)
  10: CallExpr 0x563107e247d0 <lua_cjson.c:986:10, col:33> 'int'
|-ImplicitCastExpr 0x563107e247b8 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e246b8 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|-ImplicitCastExpr 0x563107e24810 <col:22> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e246e0 <col:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
|-ImplicitCastExpr 0x563107e24840 <col:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e24828 <col:25> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e24708 <col:25> 'char [4]' lvalue "inf"
`-ImplicitCastExpr 0x563107e24858 <col:32> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x563107e24738 <col:32> 'int' 3
[B5.2]([B5.4], [B5.7], [B5.9])
  11: UnaryOperator 0x563107e24870 <lua_cjson.c:986:9, col:33> 'int' prefix '!'
`-CallExpr 0x563107e247d0 <col:10, col:33> 'int'
  |-ImplicitCastExpr 0x563107e247b8 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e246b8 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x563107ca1cd8 'strncasecmp' 'int (const char *, const char *, unsigned long)'
  |-ImplicitCastExpr 0x563107e24810 <col:22> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e246e0 <col:22> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
  |-ImplicitCastExpr 0x563107e24840 <col:25> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x563107e24828 <col:25> 'char *' <ArrayToPointerDecay>
  |   `-StringLiteral 0x563107e24708 <col:25> 'char [4]' lvalue "inf"
  `-ImplicitCastExpr 0x563107e24858 <col:32> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x563107e24738 <col:32> 'int' 3
![B5.10]
   T: if [B5.11]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: IntegerLiteral 0x563107e245f8 <lua_cjson.c:982:16> 'int' 0
0
   2: ReturnStmt 0x563107e24618 <lua_cjson.c:982:9, col:16>
`-IntegerLiteral 0x563107e245f8 <col:16> 'int' 0
return [B6.1];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x563107e24528 <lua_cjson.c:981:17> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   2: ImplicitCastExpr 0x563107e24550 <lua_cjson.c:981:17> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e24528 <col:17> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B7.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x563107e24568 <lua_cjson.c:981:16, col:17> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e24550 <col:17> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x563107e24528 <col:17> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
*[B7.2]
   4: ImplicitCastExpr 0x563107e245a0 <lua_cjson.c:981:16, col:17> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e24568 <col:16, col:17> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e24550 <col:17> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x563107e24528 <col:17> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B7.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x563107e245b8 <lua_cjson.c:981:16, col:17> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e245a0 <col:16, col:17> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e24568 <col:16, col:17> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e24550 <col:17> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x563107e24528 <col:17> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B7.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x563107e24588 <lua_cjson.c:981:22> 'int' 57
'9'
   7: BinaryOperator 0x563107e245d0 <lua_cjson.c:981:16, col:22> 'int' '<='
|-ImplicitCastExpr 0x563107e245b8 <col:16, col:17> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e245a0 <col:16, col:17> 'char' <LValueToRValue>
|   `-UnaryOperator 0x563107e24568 <col:16, col:17> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x563107e24550 <col:17> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563107e24528 <col:17> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
`-CharacterLiteral 0x563107e24588 <col:22> 'int' 57
[B7.5] <= [B7.6]
   T: if [B7.7]
   Preds (1): B13
   Succs (2): B6 B5

 [B8]
   1: IntegerLiteral 0x563107e244c8 <lua_cjson.c:980:16> 'int' 0
0
   2: ReturnStmt 0x563107e244e8 <lua_cjson.c:980:9, col:16>
`-IntegerLiteral 0x563107e244c8 <col:16> 'int' 0
return [B8.1];
   Preds (2): B10 B11
   Succs (1): B0

 [B9]
   1: IntegerLiteral 0x563107e24458 <lua_cjson.c:978:20> 'int' 1
1
   2: ReturnStmt 0x563107e24478 <lua_cjson.c:978:13, col:20>
`-IntegerLiteral 0x563107e24458 <col:20> 'int' 1
return [B9.1];
   Preds (2): B10 B12
   Succs (1): B0

 [B10]
   1: DeclRefExpr 0x563107e24368 <lua_cjson.c:977:28> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
ch2
   2: ImplicitCastExpr 0x563107e243a8 <lua_cjson.c:977:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e24368 <col:28> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: CharacterLiteral 0x563107e24390 <lua_cjson.c:977:35> 'int' 57
'9'
   4: BinaryOperator 0x563107e243c0 <lua_cjson.c:977:28, col:35> 'int' '<='
|-ImplicitCastExpr 0x563107e243a8 <col:28> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e24368 <col:28> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
`-CharacterLiteral 0x563107e24390 <col:35> 'int' 57
[B10.2] <= [B10.3]
   T: if [B12.14] || ([B11.4] && [B10.4])
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: CharacterLiteral 0x563107e242e8 <lua_cjson.c:977:14> 'int' 48
'0'
   2: DeclRefExpr 0x563107e24300 <lua_cjson.c:977:21> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
ch2
   3: ImplicitCastExpr 0x563107e24328 <lua_cjson.c:977:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e24300 <col:21> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
[B11.2] (ImplicitCastExpr, LValueToRValue, int)
   4: BinaryOperator 0x563107e24340 <lua_cjson.c:977:14, col:21> 'int' '<='
|-CharacterLiteral 0x563107e242e8 <col:14> 'int' 48
`-ImplicitCastExpr 0x563107e24328 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e24300 <col:21> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
[B11.1] <= [B11.3]
   T: [B11.4] && ...
   Preds (1): B12
   Succs (2): B10 B8

 [B12]
   1: DeclRefExpr 0x563107e240f0 <lua_cjson.c:974:21> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   2: ImplicitCastExpr 0x563107e24138 <lua_cjson.c:974:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e240f0 <col:21> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B12.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x563107e24118 <lua_cjson.c:974:25> 'int' 1
1
   4: BinaryOperator 0x563107e24150 <lua_cjson.c:974:21, col:25> 'const char *' '+'
|-ImplicitCastExpr 0x563107e24138 <col:21> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e240f0 <col:21> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
`-IntegerLiteral 0x563107e24118 <col:25> 'int' 1
[B12.2] + [B12.3]
   5: UnaryOperator 0x563107e24198 <lua_cjson.c:974:19, col:26> 'const char' lvalue prefix '*'
`-ParenExpr 0x563107e24178 <col:20, col:26> 'const char *'
  `-BinaryOperator 0x563107e24150 <col:21, col:25> 'const char *' '+'
    |-ImplicitCastExpr 0x563107e24138 <col:21> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x563107e240f0 <col:21> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
    `-IntegerLiteral 0x563107e24118 <col:25> 'int' 1
*([B12.4])
   6: ImplicitCastExpr 0x563107e241b8 <lua_cjson.c:974:19, col:26> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e24198 <col:19, col:26> 'const char' lvalue prefix '*'
  `-ParenExpr 0x563107e24178 <col:20, col:26> 'const char *'
    `-BinaryOperator 0x563107e24150 <col:21, col:25> 'const char *' '+'
      |-ImplicitCastExpr 0x563107e24138 <col:21> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x563107e240f0 <col:21> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
      `-IntegerLiteral 0x563107e24118 <col:25> 'int' 1
[B12.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x563107e241d0 <lua_cjson.c:974:19, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e241b8 <col:19, col:26> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e24198 <col:19, col:26> 'const char' lvalue prefix '*'
    `-ParenExpr 0x563107e24178 <col:20, col:26> 'const char *'
      `-BinaryOperator 0x563107e24150 <col:21, col:25> 'const char *' '+'
        |-ImplicitCastExpr 0x563107e24138 <col:21> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x563107e240f0 <col:21> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
        `-IntegerLiteral 0x563107e24118 <col:25> 'int' 1
[B12.6] (ImplicitCastExpr, IntegralCast, int)
   8: DeclStmt 0x563107e241e8 <lua_cjson.c:974:9, col:27>col:13
`-VarDecl 0x563107e24090 <col:9, col:26> col:13 used ch2 'int' cinit
  `-ImplicitCastExpr 0x563107e241d0 <col:19, col:26> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x563107e241b8 <col:19, col:26> 'char' <LValueToRValue>
      `-UnaryOperator 0x563107e24198 <col:19, col:26> 'const char' lvalue prefix '*'
        `-ParenExpr 0x563107e24178 <col:20, col:26> 'const char *'
          `-BinaryOperator 0x563107e24150 <col:21, col:25> 'const char *' '+'
            |-ImplicitCastExpr 0x563107e24138 <col:21> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x563107e240f0 <col:21> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
            `-IntegerLiteral 0x563107e24118 <col:25> 'int' 1
int ch2 = *(p + 1);
   9: DeclRefExpr 0x563107e24200 <lua_cjson.c:976:14> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
ch2
  10: ImplicitCastExpr 0x563107e24248 <lua_cjson.c:976:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e24200 <col:14> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
[B12.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x563107e24228 <lua_cjson.c:976:20> 'int' 32
32
  12: BinaryOperator 0x563107e24260 <lua_cjson.c:976:14, col:20> 'int' '|'
|-ImplicitCastExpr 0x563107e24248 <col:14> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e24200 <col:14> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
`-IntegerLiteral 0x563107e24228 <col:20> 'int' 32
[B12.10] | [B12.11]
  13: CharacterLiteral 0x563107e242a8 <lua_cjson.c:976:29> 'int' 120
'x'
  14: BinaryOperator 0x563107e242c0 <lua_cjson.c:976:13, col:29> 'int' '=='
|-ParenExpr 0x563107e24288 <col:13, col:24> 'int'
| `-BinaryOperator 0x563107e24260 <col:14, col:20> 'int' '|'
|   |-ImplicitCastExpr 0x563107e24248 <col:14> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e24200 <col:14> 'int' lvalue Var 0x563107e24090 'ch2' 'int'
|   `-IntegerLiteral 0x563107e24228 <col:20> 'int' 32
`-CharacterLiteral 0x563107e242a8 <col:29> 'int' 120
([B12.12]) == [B12.13]
   T: [B12.14] || ...
   Preds (1): B13
   Succs (2): B9 B11

 [B13]
   1: DeclRefExpr 0x563107e23fa8 <lua_cjson.c:973:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   2: ImplicitCastExpr 0x563107e23fd0 <lua_cjson.c:973:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e23fa8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B13.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x563107e23fe8 <lua_cjson.c:973:9, col:10> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e23fd0 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23fa8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
*[B13.2]
   4: ImplicitCastExpr 0x563107e24020 <lua_cjson.c:973:9, col:10> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e23fe8 <col:9, col:10> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e23fd0 <col:10> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23fa8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B13.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x563107e24038 <lua_cjson.c:973:9, col:10> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e24020 <col:9, col:10> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e23fe8 <col:9, col:10> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e23fd0 <col:10> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x563107e23fa8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B13.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x563107e24008 <lua_cjson.c:973:15> 'int' 48
'0'
   7: BinaryOperator 0x563107e24050 <lua_cjson.c:973:9, col:15> 'int' '=='
|-ImplicitCastExpr 0x563107e24038 <col:9, col:10> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e24020 <col:9, col:10> 'char' <LValueToRValue>
|   `-UnaryOperator 0x563107e23fe8 <col:9, col:10> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x563107e23fd0 <col:10> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563107e23fa8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
`-CharacterLiteral 0x563107e24008 <col:15> 'int' 48
[B13.5] == [B13.6]
   T: if [B13.7]
   Preds (2): B14 B15
   Succs (2): B12 B7

 [B14]
   1: DeclRefExpr 0x563107e23f28 <lua_cjson.c:970:9> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   2: UnaryOperator 0x563107e23f50 <lua_cjson.c:970:9, col:10> 'const char *' postfix '++'
`-DeclRefExpr 0x563107e23f28 <col:9> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B14.1]++
   Preds (1): B15
   Succs (1): B13

 [B15]
   1: DeclRefExpr 0x563107e23e28 <lua_cjson.c:969:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   2: ImplicitCastExpr 0x563107e23e50 <lua_cjson.c:969:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e23e28 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B15.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x563107e23e68 <lua_cjson.c:969:9, col:10> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e23e50 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23e28 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
*[B15.2]
   4: ImplicitCastExpr 0x563107e23ea0 <lua_cjson.c:969:9, col:10> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e23e68 <col:9, col:10> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e23e50 <col:10> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23e28 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B15.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x563107e23eb8 <lua_cjson.c:969:9, col:10> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e23ea0 <col:9, col:10> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e23e68 <col:9, col:10> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e23e50 <col:10> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x563107e23e28 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B15.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x563107e23e88 <lua_cjson.c:969:15> 'int' 45
'-'
   7: BinaryOperator 0x563107e23f00 <lua_cjson.c:969:9, col:15> 'int' '=='
|-ImplicitCastExpr 0x563107e23eb8 <col:9, col:10> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e23ea0 <col:9, col:10> 'char' <LValueToRValue>
|   `-UnaryOperator 0x563107e23e68 <col:9, col:10> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x563107e23e50 <col:10> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563107e23e28 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
`-CharacterLiteral 0x563107e23e88 <col:15> 'int' 45
[B15.5] == [B15.6]
   T: if [B15.7]
   Preds (1): B17
   Succs (2): B14 B13

 [B16]
   1: IntegerLiteral 0x563107e23db8 <lua_cjson.c:966:16> 'int' 1
1
   2: ReturnStmt 0x563107e23dd8 <lua_cjson.c:966:9, col:16>
`-IntegerLiteral 0x563107e23db8 <col:16> 'int' 1
return [B16.1];
   Preds (1): B17
   Succs (1): B0

 [B17]
   1: DeclRefExpr 0x563107e23c40 <lua_cjson.c:962:21> 'json_parse_t *' lvalue ParmVar 0x563107e23a90 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e23c68 <lua_cjson.c:962:21> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23c40 <col:21> 'json_parse_t *' lvalue ParmVar 0x563107e23a90 'json' 'json_parse_t *'
[B17.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e23c80 <lua_cjson.c:962:21, col:27> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e23c68 <col:21> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23c40 <col:21> 'json_parse_t *' lvalue ParmVar 0x563107e23a90 'json' 'json_parse_t *'
[B17.2]->ptr
   4: ImplicitCastExpr 0x563107e23cb8 <lua_cjson.c:962:21, col:27> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e23c80 <col:21, col:27> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e23c68 <col:21> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23c40 <col:21> 'json_parse_t *' lvalue ParmVar 0x563107e23a90 'json' 'json_parse_t *'
[B17.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclStmt 0x563107e23cd0 <lua_cjson.c:962:5, col:30>col:17
`-VarDecl 0x563107e23be0 <col:5, col:27> col:17 used p 'const char *' cinit
  `-ImplicitCastExpr 0x563107e23cb8 <col:21, col:27> 'const char *' <LValueToRValue>
    `-MemberExpr 0x563107e23c80 <col:21, col:27> 'const char *' lvalue ->ptr 0x563107df1578
      `-ImplicitCastExpr 0x563107e23c68 <col:21> 'json_parse_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e23c40 <col:21> 'json_parse_t *' lvalue ParmVar 0x563107e23a90 'json' 'json_parse_t *'
const char *p = json->ptr;
   6: DeclRefExpr 0x563107e23ce8 <lua_cjson.c:965:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
p
   7: ImplicitCastExpr 0x563107e23d10 <lua_cjson.c:965:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e23ce8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B17.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: UnaryOperator 0x563107e23d28 <lua_cjson.c:965:9, col:10> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e23d10 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23ce8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
*[B17.7]
   9: ImplicitCastExpr 0x563107e23d60 <lua_cjson.c:965:9, col:10> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e23d28 <col:9, col:10> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e23d10 <col:10> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23ce8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B17.8] (ImplicitCastExpr, LValueToRValue, char)
  10: ImplicitCastExpr 0x563107e23d78 <lua_cjson.c:965:9, col:10> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e23d60 <col:9, col:10> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e23d28 <col:9, col:10> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e23d10 <col:10> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x563107e23ce8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
[B17.9] (ImplicitCastExpr, IntegralCast, int)
  11: CharacterLiteral 0x563107e23d48 <lua_cjson.c:965:15> 'int' 43
'+'
  12: BinaryOperator 0x563107e23d90 <lua_cjson.c:965:9, col:15> 'int' '=='
|-ImplicitCastExpr 0x563107e23d78 <col:9, col:10> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e23d60 <col:9, col:10> 'char' <LValueToRValue>
|   `-UnaryOperator 0x563107e23d28 <col:9, col:10> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x563107e23d10 <col:10> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563107e23ce8 <col:10> 'const char *' lvalue Var 0x563107e23be0 'p' 'const char *'
`-CharacterLiteral 0x563107e23d48 <col:15> 'int' 43
[B17.10] == [B17.11]
   T: if [B17.12]
   Preds (1): B18
   Succs (2): B16 B15

 [B0 (EXIT)]
   Preds (7): B1 B2 B4 B6 B8 B9 B16
