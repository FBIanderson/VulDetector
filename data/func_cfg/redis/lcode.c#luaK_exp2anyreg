int luaK_exp2anyreg(FuncState *fs, expdesc *e)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x5637768d35d0 <lcode.c:431:3> 'void (FuncState *, expdesc *)' Function 0x5637768d2340 'luaK_exp2nextreg' 'void (FuncState *, expdesc *)'
luaK_exp2nextreg
   2: ImplicitCastExpr 0x5637768d3648 <lcode.c:431:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d35d0 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768d2340 'luaK_exp2nextreg' 'void (FuncState *, expdesc *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, expdesc *))
   3: DeclRefExpr 0x5637768d35f8 <lcode.c:431:20> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768d3698 <lcode.c:431:20> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d35f8 <col:20> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768d3620 <lcode.c:431:24> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   6: ImplicitCastExpr 0x5637768d36b0 <lcode.c:431:24> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d3620 <col:24> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B1.5] (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: CallExpr 0x5637768d3660 <lcode.c:431:3, col:25> 'void'
|-ImplicitCastExpr 0x5637768d3648 <col:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d35d0 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768d2340 'luaK_exp2nextreg' 'void (FuncState *, expdesc *)'
|-ImplicitCastExpr 0x5637768d3698 <col:20> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d35f8 <col:20> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768d36b0 <col:24> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d3620 <col:24> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x5637768d36c8 <lcode.c:432:10> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   9: ImplicitCastExpr 0x5637768d36f0 <lcode.c:432:10> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d36c8 <col:10> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B1.8] (ImplicitCastExpr, LValueToRValue, expdesc *)
  10: MemberExpr 0x5637768d3708 <lcode.c:432:10, col:13> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768d36f0 <col:10> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d36c8 <col:10> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B1.9]->u
  11: MemberExpr 0x5637768d3740 <lcode.c:432:10, col:15> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768d3708 <col:10, col:13> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768d36f0 <col:10> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d36c8 <col:10> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B1.10].s
  12: MemberExpr 0x5637768d3778 <lcode.c:432:10, col:17> 'int' lvalue .info 0x56377687d5f8
`-MemberExpr 0x5637768d3740 <col:10, col:15> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768d3708 <col:10, col:13> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768d36f0 <col:10> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d36c8 <col:10> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B1.11].info
  13: ImplicitCastExpr 0x5637768d37b0 <lcode.c:432:10, col:17> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d3778 <col:10, col:17> 'int' lvalue .info 0x56377687d5f8
  `-MemberExpr 0x5637768d3740 <col:10, col:15> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
    `-MemberExpr 0x5637768d3708 <col:10, col:13> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
      `-ImplicitCastExpr 0x5637768d36f0 <col:10> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x5637768d36c8 <col:10> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: ReturnStmt 0x5637768d37c8 <lcode.c:432:3, col:17>
`-ImplicitCastExpr 0x5637768d37b0 <col:10, col:17> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768d3778 <col:10, col:17> 'int' lvalue .info 0x56377687d5f8
    `-MemberExpr 0x5637768d3740 <col:10, col:15> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
      `-MemberExpr 0x5637768d3708 <col:10, col:13> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
        `-ImplicitCastExpr 0x5637768d36f0 <col:10> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x5637768d36c8 <col:10> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
return [B1.13];
   Preds (2): B3 B6
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5637768d3208 <lcode.c:427:7> 'void (FuncState *, expdesc *, int)' Function 0x5637768d03f0 'exp2reg' 'void (FuncState *, expdesc *, int)'
exp2reg
   2: ImplicitCastExpr 0x5637768d3368 <lcode.c:427:7> 'void (*)(FuncState *, expdesc *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d3208 <col:7> 'void (FuncState *, expdesc *, int)' Function 0x5637768d03f0 'exp2reg' 'void (FuncState *, expdesc *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, expdesc *, int))
   3: DeclRefExpr 0x5637768d3230 <lcode.c:427:15> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768d33c0 <lcode.c:427:15> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d3230 <col:15> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768d3258 <lcode.c:427:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   6: ImplicitCastExpr 0x5637768d33d8 <lcode.c:427:19> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d3258 <col:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.5] (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: DeclRefExpr 0x5637768d3280 <lcode.c:427:22> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   8: ImplicitCastExpr 0x5637768d32a8 <lcode.c:427:22> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d3280 <col:22> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.7] (ImplicitCastExpr, LValueToRValue, expdesc *)
   9: MemberExpr 0x5637768d32c0 <lcode.c:427:22, col:25> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768d32a8 <col:22> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d3280 <col:22> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.8]->u
  10: MemberExpr 0x5637768d32f8 <lcode.c:427:22, col:27> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768d32c0 <col:22, col:25> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768d32a8 <col:22> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d3280 <col:22> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.9].s
  11: MemberExpr 0x5637768d3330 <lcode.c:427:22, col:29> 'int' lvalue .info 0x56377687d5f8
`-MemberExpr 0x5637768d32f8 <col:22, col:27> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768d32c0 <col:22, col:25> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768d32a8 <col:22> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d3280 <col:22> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.10].info
  12: ImplicitCastExpr 0x5637768d33f0 <lcode.c:427:22, col:29> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d3330 <col:22, col:29> 'int' lvalue .info 0x56377687d5f8
  `-MemberExpr 0x5637768d32f8 <col:22, col:27> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
    `-MemberExpr 0x5637768d32c0 <col:22, col:25> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
      `-ImplicitCastExpr 0x5637768d32a8 <col:22> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x5637768d3280 <col:22> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.11] (ImplicitCastExpr, LValueToRValue, int)
  13: CallExpr 0x5637768d3380 <lcode.c:427:7, col:33> 'void'
|-ImplicitCastExpr 0x5637768d3368 <col:7> 'void (*)(FuncState *, expdesc *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d3208 <col:7> 'void (FuncState *, expdesc *, int)' Function 0x5637768d03f0 'exp2reg' 'void (FuncState *, expdesc *, int)'
|-ImplicitCastExpr 0x5637768d33c0 <col:15> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d3230 <col:15> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
|-ImplicitCastExpr 0x5637768d33d8 <col:19> 'expdesc *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d3258 <col:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
`-ImplicitCastExpr 0x5637768d33f0 <col:22, col:29> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768d3330 <col:22, col:29> 'int' lvalue .info 0x56377687d5f8
    `-MemberExpr 0x5637768d32f8 <col:22, col:27> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
      `-MemberExpr 0x5637768d32c0 <col:22, col:25> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
        `-ImplicitCastExpr 0x5637768d32a8 <col:22> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x5637768d3280 <col:22> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.2]([B2.4], [B2.6], [B2.12])
  14: DeclRefExpr 0x5637768d3408 <lcode.c:428:14> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
  15: ImplicitCastExpr 0x5637768d3430 <lcode.c:428:14> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d3408 <col:14> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.14] (ImplicitCastExpr, LValueToRValue, expdesc *)
  16: MemberExpr 0x5637768d3448 <lcode.c:428:14, col:17> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768d3430 <col:14> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d3408 <col:14> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.15]->u
  17: MemberExpr 0x5637768d3480 <lcode.c:428:14, col:19> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768d3448 <col:14, col:17> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768d3430 <col:14> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d3408 <col:14> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.16].s
  18: MemberExpr 0x5637768d34b8 <lcode.c:428:14, col:21> 'int' lvalue .info 0x56377687d5f8
`-MemberExpr 0x5637768d3480 <col:14, col:19> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768d3448 <col:14, col:17> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768d3430 <col:14> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d3408 <col:14> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.17].info
  19: ImplicitCastExpr 0x5637768d34f0 <lcode.c:428:14, col:21> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d34b8 <col:14, col:21> 'int' lvalue .info 0x56377687d5f8
  `-MemberExpr 0x5637768d3480 <col:14, col:19> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
    `-MemberExpr 0x5637768d3448 <col:14, col:17> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
      `-ImplicitCastExpr 0x5637768d3430 <col:14> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x5637768d3408 <col:14> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B2.18] (ImplicitCastExpr, LValueToRValue, int)
  20: ReturnStmt 0x5637768d3508 <lcode.c:428:7, col:21>
`-ImplicitCastExpr 0x5637768d34f0 <col:14, col:21> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768d34b8 <col:14, col:21> 'int' lvalue .info 0x56377687d5f8
    `-MemberExpr 0x5637768d3480 <col:14, col:19> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
      `-MemberExpr 0x5637768d3448 <col:14, col:17> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
        `-ImplicitCastExpr 0x5637768d3430 <col:14> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x5637768d3408 <col:14> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
return [B2.19];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5637768d3038 <lcode.c:426:9> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   2: ImplicitCastExpr 0x5637768d3060 <lcode.c:426:9> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d3038 <col:9> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B3.1] (ImplicitCastExpr, LValueToRValue, expdesc *)
   3: MemberExpr 0x5637768d3078 <lcode.c:426:9, col:12> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768d3060 <col:9> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d3038 <col:9> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B3.2]->u
   4: MemberExpr 0x5637768d30b0 <lcode.c:426:9, col:14> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768d3078 <col:9, col:12> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768d3060 <col:9> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d3038 <col:9> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B3.3].s
   5: MemberExpr 0x5637768d30e8 <lcode.c:426:9, col:16> 'int' lvalue .info 0x56377687d5f8
`-MemberExpr 0x5637768d30b0 <col:9, col:14> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768d3078 <col:9, col:12> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768d3060 <col:9> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d3038 <col:9> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B3.4].info
   6: ImplicitCastExpr 0x5637768d3198 <lcode.c:426:9, col:16> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d30e8 <col:9, col:16> 'int' lvalue .info 0x56377687d5f8
  `-MemberExpr 0x5637768d30b0 <col:9, col:14> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
    `-MemberExpr 0x5637768d3078 <col:9, col:12> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
      `-ImplicitCastExpr 0x5637768d3060 <col:9> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x5637768d3038 <col:9> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: DeclRefExpr 0x5637768d3120 <lcode.c:426:24> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
fs
   8: ImplicitCastExpr 0x5637768d3148 <lcode.c:426:24> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d3120 <col:24> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B3.7] (ImplicitCastExpr, LValueToRValue, FuncState *)
   9: MemberExpr 0x5637768d3160 <lcode.c:426:24, col:28> 'lu_byte':'unsigned char' lvalue ->nactvar 0x56377687e3e0
`-ImplicitCastExpr 0x5637768d3148 <col:24> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d3120 <col:24> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B3.8]->nactvar
  10: ImplicitCastExpr 0x5637768d31b0 <lcode.c:426:24, col:28> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x5637768d3160 <col:24, col:28> 'lu_byte':'unsigned char' lvalue ->nactvar 0x56377687e3e0
  `-ImplicitCastExpr 0x5637768d3148 <col:24> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d3120 <col:24> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B3.9] (ImplicitCastExpr, LValueToRValue, lu_byte)
  11: ImplicitCastExpr 0x5637768d31c8 <lcode.c:426:24, col:28> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5637768d31b0 <col:24, col:28> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x5637768d3160 <col:24, col:28> 'lu_byte':'unsigned char' lvalue ->nactvar 0x56377687e3e0
    `-ImplicitCastExpr 0x5637768d3148 <col:24> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d3120 <col:24> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B3.10] (ImplicitCastExpr, IntegralCast, int)
  12: BinaryOperator 0x5637768d31e0 <lcode.c:426:9, col:28> 'int' '>='
|-ImplicitCastExpr 0x5637768d3198 <col:9, col:16> 'int' <LValueToRValue>
| `-MemberExpr 0x5637768d30e8 <col:9, col:16> 'int' lvalue .info 0x56377687d5f8
|   `-MemberExpr 0x5637768d30b0 <col:9, col:14> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
|     `-MemberExpr 0x5637768d3078 <col:9, col:12> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
|       `-ImplicitCastExpr 0x5637768d3060 <col:9> 'expdesc *' <LValueToRValue>
|         `-DeclRefExpr 0x5637768d3038 <col:9> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
`-ImplicitCastExpr 0x5637768d31c8 <col:24, col:28> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x5637768d31b0 <col:24, col:28> 'lu_byte':'unsigned char' <LValueToRValue>
    `-MemberExpr 0x5637768d3160 <col:24, col:28> 'lu_byte':'unsigned char' lvalue ->nactvar 0x56377687e3e0
      `-ImplicitCastExpr 0x5637768d3148 <col:24> 'FuncState *' <LValueToRValue>
        `-DeclRefExpr 0x5637768d3120 <col:24> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B3.6] >= [B3.11]
   T: if [B3.12]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5637768d2ee8 <lcode.c:425:30> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   2: ImplicitCastExpr 0x5637768d2f10 <lcode.c:425:30> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2ee8 <col:30> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B4.1] (ImplicitCastExpr, LValueToRValue, expdesc *)
   3: MemberExpr 0x5637768d2f28 <lcode.c:425:30, col:33> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768d2f10 <col:30> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d2ee8 <col:30> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B4.2]->u
   4: MemberExpr 0x5637768d2f60 <lcode.c:425:30, col:35> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768d2f28 <col:30, col:33> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768d2f10 <col:30> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d2ee8 <col:30> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B4.3].s
   5: MemberExpr 0x5637768d2f98 <lcode.c:425:30, col:37> 'int' lvalue .info 0x56377687d5f8
`-MemberExpr 0x5637768d2f60 <col:30, col:35> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768d2f28 <col:30, col:33> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768d2f10 <col:30> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d2ee8 <col:30> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B4.4].info
   6: ImplicitCastExpr 0x5637768d2fd0 <lcode.c:425:30, col:37> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d2f98 <col:30, col:37> 'int' lvalue .info 0x56377687d5f8
  `-MemberExpr 0x5637768d2f60 <col:30, col:35> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
    `-MemberExpr 0x5637768d2f28 <col:30, col:33> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
      `-ImplicitCastExpr 0x5637768d2f10 <col:30> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x5637768d2ee8 <col:30> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ReturnStmt 0x5637768d2fe8 <lcode.c:425:23, col:37>
`-ImplicitCastExpr 0x5637768d2fd0 <col:30, col:37> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768d2f98 <col:30, col:37> 'int' lvalue .info 0x56377687d5f8
    `-MemberExpr 0x5637768d2f60 <col:30, col:35> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
      `-MemberExpr 0x5637768d2f28 <col:30, col:33> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
        `-ImplicitCastExpr 0x5637768d2f10 <col:30> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x5637768d2ee8 <col:30> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
return [B4.6];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x5637768d2d20 <lcode.c:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   2: ImplicitCastExpr 0x5637768d2d68 <lcode.c:27:22, col:24> 'expdesc *' <LValueToRValue>
`-ParenExpr 0x5637768d2d48 <col:22, col:24> 'expdesc *' lvalue
  `-DeclRefExpr 0x5637768d2d20 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, expdesc *)
   3: MemberExpr 0x5637768d2d80 <lcode.c:27:22, col:27> 'int' lvalue ->t 0x56377687d890
`-ImplicitCastExpr 0x5637768d2d68 <col:22, col:24> 'expdesc *' <LValueToRValue>
  `-ParenExpr 0x5637768d2d48 <col:22, col:24> 'expdesc *' lvalue
    `-DeclRefExpr 0x5637768d2d20 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B5.2]->t
   4: ImplicitCastExpr 0x5637768d2e50 <lcode.c:27:22, col:27> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d2d80 <col:22, col:27> 'int' lvalue ->t 0x56377687d890
  `-ImplicitCastExpr 0x5637768d2d68 <col:22, col:24> 'expdesc *' <LValueToRValue>
    `-ParenExpr 0x5637768d2d48 <col:22, col:24> 'expdesc *' lvalue
      `-DeclRefExpr 0x5637768d2d20 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x5637768d2db8 <lcode.c:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   6: ImplicitCastExpr 0x5637768d2e00 <lcode.c:27:32, col:34> 'expdesc *' <LValueToRValue>
`-ParenExpr 0x5637768d2de0 <col:32, col:34> 'expdesc *' lvalue
  `-DeclRefExpr 0x5637768d2db8 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
([B5.5]) (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: MemberExpr 0x5637768d2e18 <lcode.c:27:32, col:37> 'int' lvalue ->f 0x56377687d8f0
`-ImplicitCastExpr 0x5637768d2e00 <col:32, col:34> 'expdesc *' <LValueToRValue>
  `-ParenExpr 0x5637768d2de0 <col:32, col:34> 'expdesc *' lvalue
    `-DeclRefExpr 0x5637768d2db8 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B5.6]->f
   8: ImplicitCastExpr 0x5637768d2e68 <lcode.c:27:32, col:37> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d2e18 <col:32, col:37> 'int' lvalue ->f 0x56377687d8f0
  `-ImplicitCastExpr 0x5637768d2e00 <col:32, col:34> 'expdesc *' <LValueToRValue>
    `-ParenExpr 0x5637768d2de0 <col:32, col:34> 'expdesc *' lvalue
      `-DeclRefExpr 0x5637768d2db8 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B5.7] (ImplicitCastExpr, LValueToRValue, int)
   9: BinaryOperator 0x5637768d2e80 <lcode.c:27:22, col:37> 'int' '!='
|-ImplicitCastExpr 0x5637768d2e50 <col:22, col:27> 'int' <LValueToRValue>
| `-MemberExpr 0x5637768d2d80 <col:22, col:27> 'int' lvalue ->t 0x56377687d890
|   `-ImplicitCastExpr 0x5637768d2d68 <col:22, col:24> 'expdesc *' <LValueToRValue>
|     `-ParenExpr 0x5637768d2d48 <col:22, col:24> 'expdesc *' lvalue
|       `-DeclRefExpr 0x5637768d2d20 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
`-ImplicitCastExpr 0x5637768d2e68 <line:27:32, col:37> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768d2e18 <col:32, col:37> 'int' lvalue ->f 0x56377687d8f0
    `-ImplicitCastExpr 0x5637768d2e00 <col:32, col:34> 'expdesc *' <LValueToRValue>
      `-ParenExpr 0x5637768d2de0 <col:32, col:34> 'expdesc *' lvalue
        `-DeclRefExpr 0x5637768d2db8 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B5.4] != [B5.8]
  10: UnaryOperator 0x5637768d2ec8 <lcode.c:425:9, line:27:38> 'int' prefix '!'
`-ParenExpr 0x5637768d2ea8 <col:21, col:38> 'int'
  `-BinaryOperator 0x5637768d2e80 <col:22, col:37> 'int' '!='
    |-ImplicitCastExpr 0x5637768d2e50 <col:22, col:27> 'int' <LValueToRValue>
    | `-MemberExpr 0x5637768d2d80 <col:22, col:27> 'int' lvalue ->t 0x56377687d890
    |   `-ImplicitCastExpr 0x5637768d2d68 <col:22, col:24> 'expdesc *' <LValueToRValue>
    |     `-ParenExpr 0x5637768d2d48 <col:22, col:24> 'expdesc *' lvalue
    |       `-DeclRefExpr 0x5637768d2d20 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
    `-ImplicitCastExpr 0x5637768d2e68 <line:27:32, col:37> 'int' <LValueToRValue>
      `-MemberExpr 0x5637768d2e18 <col:32, col:37> 'int' lvalue ->f 0x56377687d8f0
        `-ImplicitCastExpr 0x5637768d2e00 <col:32, col:34> 'expdesc *' <LValueToRValue>
          `-ParenExpr 0x5637768d2de0 <col:32, col:34> 'expdesc *' lvalue
            `-DeclRefExpr 0x5637768d2db8 <line:425:19> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
!([B5.9])
   T: if [B5.10]
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x5637768d2b18 <lcode.c:423:3> 'void (FuncState *, expdesc *)' Function 0x5637768ca7b0 'luaK_dischargevars' 'void (FuncState *, expdesc *)'
luaK_dischargevars
   2: ImplicitCastExpr 0x5637768d2b90 <lcode.c:423:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d2b18 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768ca7b0 'luaK_dischargevars' 'void (FuncState *, expdesc *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, expdesc *))
   3: DeclRefExpr 0x5637768d2b40 <lcode.c:423:22> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768d2be0 <lcode.c:423:22> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2b40 <col:22> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
[B6.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768d2b68 <lcode.c:423:26> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   6: ImplicitCastExpr 0x5637768d2bf8 <lcode.c:423:26> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2b68 <col:26> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B6.5] (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: CallExpr 0x5637768d2ba8 <lcode.c:423:3, col:27> 'void'
|-ImplicitCastExpr 0x5637768d2b90 <col:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d2b18 <col:3> 'void (FuncState *, expdesc *)' Function 0x5637768ca7b0 'luaK_dischargevars' 'void (FuncState *, expdesc *)'
|-ImplicitCastExpr 0x5637768d2be0 <col:22> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d2b40 <col:22> 'FuncState *' lvalue ParmVar 0x5637768d2918 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768d2bf8 <col:26> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d2b68 <col:26> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B6.2]([B6.4], [B6.6])
   8: DeclRefExpr 0x5637768d2c10 <lcode.c:424:7> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
e
   9: ImplicitCastExpr 0x5637768d2c38 <lcode.c:424:7> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d2c10 <col:7> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B6.8] (ImplicitCastExpr, LValueToRValue, expdesc *)
  10: MemberExpr 0x5637768d2c50 <lcode.c:424:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
`-ImplicitCastExpr 0x5637768d2c38 <col:7> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d2c10 <col:7> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B6.9]->k
  11: ImplicitCastExpr 0x5637768d2cb0 <lcode.c:424:7, col:10> 'expkind':'expkind' <LValueToRValue>
`-MemberExpr 0x5637768d2c50 <col:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
  `-ImplicitCastExpr 0x5637768d2c38 <col:7> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d2c10 <col:7> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B6.10] (ImplicitCastExpr, LValueToRValue, expkind)
  12: ImplicitCastExpr 0x5637768d2cc8 <lcode.c:424:7, col:10> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5637768d2cb0 <col:7, col:10> 'expkind':'expkind' <LValueToRValue>
  `-MemberExpr 0x5637768d2c50 <col:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
    `-ImplicitCastExpr 0x5637768d2c38 <col:7> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d2c10 <col:7> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
[B6.11] (ImplicitCastExpr, IntegralCast, unsigned int)
  13: DeclRefExpr 0x5637768d2c88 <lcode.c:424:15> 'int' EnumConstant 0x56377687d1c8 'VNONRELOC' 'int'
VNONRELOC
  14: ImplicitCastExpr 0x5637768d2ce0 <lcode.c:424:15> 'unsigned int' <IntegralCast>
`-DeclRefExpr 0x5637768d2c88 <col:15> 'int' EnumConstant 0x56377687d1c8 'VNONRELOC' 'int'
[B6.13] (ImplicitCastExpr, IntegralCast, unsigned int)
  15: BinaryOperator 0x5637768d2cf8 <lcode.c:424:7, col:15> 'int' '=='
|-ImplicitCastExpr 0x5637768d2cc8 <col:7, col:10> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x5637768d2cb0 <col:7, col:10> 'expkind':'expkind' <LValueToRValue>
|   `-MemberExpr 0x5637768d2c50 <col:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
|     `-ImplicitCastExpr 0x5637768d2c38 <col:7> 'expdesc *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768d2c10 <col:7> 'expdesc *' lvalue ParmVar 0x5637768d2988 'e' 'expdesc *'
`-ImplicitCastExpr 0x5637768d2ce0 <col:15> 'unsigned int' <IntegralCast>
  `-DeclRefExpr 0x5637768d2c88 <col:15> 'int' EnumConstant 0x56377687d1c8 'VNONRELOC' 'int'
[B6.12] == [B6.14]
   T: if [B6.15]
   Preds (1): B7
   Succs (2): B5 B1

 [B0 (EXIT)]
   Preds (3): B1 B2 B4
