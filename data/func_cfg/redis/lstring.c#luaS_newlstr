TString *luaS_newlstr(lua_State *L, const char *str, size_t l)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x55a112e39320 <lstring.c:92:10> 'TString *(lua_State *, const char *, size_t, unsigned int)' Function 0x55a112e32d60 'newlstr' 'TString *(lua_State *, const char *, size_t, unsigned int)'
newlstr
   2: ImplicitCastExpr 0x55a112e39448 <lstring.c:92:10> 'TString *(*)(lua_State *, const char *, size_t, unsigned int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55a112e39320 <col:10> 'TString *(lua_State *, const char *, size_t, unsigned int)' Function 0x55a112e32d60 'newlstr' 'TString *(lua_State *, const char *, size_t, unsigned int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t, unsigned int))
   3: DeclRefExpr 0x55a112e39348 <lstring.c:92:18> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55a112e394a8 <lstring.c:92:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e39348 <col:18> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55a112e39370 <lstring.c:92:21> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
str
   6: ImplicitCastExpr 0x55a112e394c0 <lstring.c:92:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55a112e39370 <col:21> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x55a112e39398 <lstring.c:92:26> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
l
   8: ImplicitCastExpr 0x55a112e394d8 <lstring.c:92:26> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e39398 <col:26> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: DeclRefExpr 0x55a112e393c0 <lstring.c:92:29> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
h
  10: ImplicitCastExpr 0x55a112e394f0 <lstring.c:92:29> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x55a112e393c0 <col:29> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
[B1.9] (ImplicitCastExpr, LValueToRValue, unsigned int)
  11: CallExpr 0x55a112e39460 <lstring.c:92:10, col:30> 'TString *'
|-ImplicitCastExpr 0x55a112e39448 <col:10> 'TString *(*)(lua_State *, const char *, size_t, unsigned int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55a112e39320 <col:10> 'TString *(lua_State *, const char *, size_t, unsigned int)' Function 0x55a112e32d60 'newlstr' 'TString *(lua_State *, const char *, size_t, unsigned int)'
|-ImplicitCastExpr 0x55a112e394a8 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e39348 <col:18> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
|-ImplicitCastExpr 0x55a112e394c0 <col:21> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e39370 <col:21> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
|-ImplicitCastExpr 0x55a112e394d8 <col:26> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55a112e39398 <col:26> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e394f0 <col:29> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x55a112e393c0 <col:29> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
[B1.2]([B1.4], [B1.6], [B1.8], [B1.10])
  12: ReturnStmt 0x55a112e39508 <lstring.c:92:3, col:30>
`-CallExpr 0x55a112e39460 <col:10, col:30> 'TString *'
  |-ImplicitCastExpr 0x55a112e39448 <col:10> 'TString *(*)(lua_State *, const char *, size_t, unsigned int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55a112e39320 <col:10> 'TString *(lua_State *, const char *, size_t, unsigned int)' Function 0x55a112e32d60 'newlstr' 'TString *(lua_State *, const char *, size_t, unsigned int)'
  |-ImplicitCastExpr 0x55a112e394a8 <col:18> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55a112e39348 <col:18> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
  |-ImplicitCastExpr 0x55a112e394c0 <col:21> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55a112e39370 <col:21> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
  |-ImplicitCastExpr 0x55a112e394d8 <col:26> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55a112e39398 <col:26> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55a112e394f0 <col:29> 'unsigned int' <LValueToRValue>
    `-DeclRefExpr 0x55a112e393c0 <col:29> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
return [B1.11];
   Preds (1): B8
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55a112e37600 <lstring.c:84:12> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55a112e37628 <lstring.c:84:12> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55a112e37600 <col:12> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B2.1] (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55a112e37640 <lstring.c:84:12, col:15> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
`-ImplicitCastExpr 0x55a112e37628 <col:12> 'GCObject *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e37600 <col:12> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B2.2]->gch
   4: MemberExpr 0x55a112e37678 <lstring.c:84:12, col:19> 'GCObject *' lvalue .next 0x55a112df3a58
`-MemberExpr 0x55a112e37640 <col:12, col:15> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
  `-ImplicitCastExpr 0x55a112e37628 <col:12> 'GCObject *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e37600 <col:12> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B2.3].next
   5: ImplicitCastExpr 0x55a112e376b0 <lstring.c:84:12, col:19> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55a112e37678 <col:12, col:19> 'GCObject *' lvalue .next 0x55a112df3a58
  `-MemberExpr 0x55a112e37640 <col:12, col:15> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
    `-ImplicitCastExpr 0x55a112e37628 <col:12> 'GCObject *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e37600 <col:12> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B2.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: DeclRefExpr 0x55a112e375d8 <lstring.c:84:8> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
o
   7: BinaryOperator 0x55a112e376c8 <lstring.c:84:8, col:19> 'GCObject *' '='
|-DeclRefExpr 0x55a112e375d8 <col:8> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
`-ImplicitCastExpr 0x55a112e376b0 <col:12, col:19> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55a112e37678 <col:12, col:19> 'GCObject *' lvalue .next 0x55a112df3a58
    `-MemberExpr 0x55a112e37640 <col:12, col:15> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
      `-ImplicitCastExpr 0x55a112e37628 <col:12> 'GCObject *' <LValueToRValue>
        `-DeclRefExpr 0x55a112e37600 <col:12> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B2.6] = [B2.5]
   Preds (2): B6 B7
   Succs (1): B8

 [B3]
   1: DeclRefExpr 0x55a112e39218 <lstring.c:89:14> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
ts
   2: ImplicitCastExpr 0x55a112e39240 <lstring.c:89:14> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e39218 <col:14> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
[B3.1] (ImplicitCastExpr, LValueToRValue, TString *)
   3: ReturnStmt 0x55a112e39258 <lstring.c:89:7, col:14>
`-ImplicitCastExpr 0x55a112e39240 <col:14> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e39218 <col:14> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
return [B3.2];
   Preds (2): B4 B5
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x55a112e38f20 <lstring.c:88:40> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55a112e38f68 <./lgc.h:72:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55a112e38f48 <col:25, col:27> 'GCObject *' lvalue
  `-DeclRefExpr 0x55a112e38f20 <lstring.c:88:40> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55a112e38f80 <./lgc.h:72:25, col:30> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
`-ImplicitCastExpr 0x55a112e38f68 <col:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55a112e38f48 <col:25, col:27> 'GCObject *' lvalue
    `-DeclRefExpr 0x55a112e38f20 <lstring.c:88:40> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B4.2]->gch
   4: MemberExpr 0x55a112e38fb8 <./lgc.h:72:25, col:34> 'lu_byte':'unsigned char' lvalue .marked 0x55a112df3b28
`-MemberExpr 0x55a112e38f80 <col:25, col:30> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
  `-ImplicitCastExpr 0x55a112e38f68 <col:25, col:27> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55a112e38f48 <col:25, col:27> 'GCObject *' lvalue
      `-DeclRefExpr 0x55a112e38f20 <lstring.c:88:40> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B4.3].marked
   5: IntegerLiteral 0x55a112e38ff0 <./lgc.h:30:21> 'int' 1
1
   6: IntegerLiteral 0x55a112e39010 <./lgc.h:54:19> 'int' 0
0
   7: BinaryOperator 0x55a112e39050 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e38ff0 <col:21> 'int' 1
`-ParenExpr 0x55a112e39030 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e39010 <line:54:19> 'int' 0
[B4.5] << ([B4.6])
   8: IntegerLiteral 0x55a112e39098 <./lgc.h:30:21> 'int' 1
1
   9: IntegerLiteral 0x55a112e390b8 <./lgc.h:55:19> 'int' 1
1
  10: BinaryOperator 0x55a112e390f8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e39098 <col:21> 'int' 1
`-ParenExpr 0x55a112e390d8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e390b8 <line:55:19> 'int' 1
[B4.8] << ([B4.9])
  11: BinaryOperator 0x55a112e39140 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55a112e39078 <col:20, col:27> 'int'
| `-BinaryOperator 0x55a112e39050 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55a112e38ff0 <col:21> 'int' 1
|   `-ParenExpr 0x55a112e39030 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55a112e39010 <line:54:19> 'int' 0
`-ParenExpr 0x55a112e39120 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55a112e390f8 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55a112e39098 <col:21> 'int' 1
    `-ParenExpr 0x55a112e390d8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55a112e390b8 <line:55:19> 'int' 1
([B4.7]) | ([B4.10])
  12: CompoundAssignOperator 0x55a112e39188 <./lgc.h:72:25, line:31:51> 'lu_byte':'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x55a112e38fb8 <line:72:25, col:34> 'lu_byte':'unsigned char' lvalue .marked 0x55a112df3b28
| `-MemberExpr 0x55a112e38f80 <col:25, col:30> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
|   `-ImplicitCastExpr 0x55a112e38f68 <col:25, col:27> 'GCObject *' <LValueToRValue>
|     `-ParenExpr 0x55a112e38f48 <col:25, col:27> 'GCObject *' lvalue
|       `-DeclRefExpr 0x55a112e38f20 <lstring.c:88:40> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
`-ParenExpr 0x55a112e39168 <./lgc.h:31:25, col:51> 'int'
  `-BinaryOperator 0x55a112e39140 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55a112e39078 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55a112e39050 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55a112e38ff0 <col:21> 'int' 1
    |   `-ParenExpr 0x55a112e39030 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55a112e39010 <line:54:19> 'int' 0
    `-ParenExpr 0x55a112e39120 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55a112e390f8 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55a112e39098 <col:21> 'int' 1
        `-ParenExpr 0x55a112e390d8 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55a112e390b8 <line:55:19> 'int' 1
[B4.4] ^= ([B4.11])
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55a112e37d58 <./lgc.h:70:22, col:24> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55a112e37d38 <col:22, col:24> 'GCObject *' lvalue
  `-DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55a112e37d70 <./lgc.h:70:22, col:27> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
`-ImplicitCastExpr 0x55a112e37d58 <col:22, col:24> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55a112e37d38 <col:22, col:24> 'GCObject *' lvalue
    `-DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B5.2]->gch
   4: MemberExpr 0x55a112e37da8 <./lgc.h:70:22, col:31> 'lu_byte':'unsigned char' lvalue .marked 0x55a112df3b28
`-MemberExpr 0x55a112e37d70 <col:22, col:27> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
  `-ImplicitCastExpr 0x55a112e37d58 <col:22, col:24> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55a112e37d38 <col:22, col:24> 'GCObject *' lvalue
      `-DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B5.3].marked
   5: ImplicitCastExpr 0x55a112e38ce8 <./lgc.h:70:22, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55a112e37da8 <col:22, col:31> 'lu_byte':'unsigned char' lvalue .marked 0x55a112df3b28
  `-MemberExpr 0x55a112e37d70 <col:22, col:27> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
    `-ImplicitCastExpr 0x55a112e37d58 <col:22, col:24> 'GCObject *' <LValueToRValue>
      `-ParenExpr 0x55a112e37d38 <col:22, col:24> 'GCObject *' lvalue
        `-DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B5.4] (ImplicitCastExpr, LValueToRValue, lu_byte)
   6: ImplicitCastExpr 0x55a112e38d00 <./lgc.h:70:22, col:31> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55a112e38ce8 <col:22, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55a112e37da8 <col:22, col:31> 'lu_byte':'unsigned char' lvalue .marked 0x55a112df3b28
    `-MemberExpr 0x55a112e37d70 <col:22, col:27> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
      `-ImplicitCastExpr 0x55a112e37d58 <col:22, col:24> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55a112e37d38 <col:22, col:24> 'GCObject *' lvalue
          `-DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B5.5] (ImplicitCastExpr, IntegralCast, int)
   7: DeclRefExpr 0x55a112e37de0 <lstring.c:88:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
L
   8: ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B5.7] (ImplicitCastExpr, LValueToRValue, lua_State *)
   9: MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
`-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B5.8]->l_G
  10: ImplicitCastExpr 0x55a112e37e78 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55a112e37e58 <col:14, col:21> 'global_State *' lvalue
  `-MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    `-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
([B5.9]) (ImplicitCastExpr, LValueToRValue, global_State *)
  11: MemberExpr 0x55a112e37e90 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
`-ImplicitCastExpr 0x55a112e37e78 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55a112e37e58 <col:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
      `-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B5.10]->currentwhite
  12: ImplicitCastExpr 0x55a112e38060 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55a112e37e90 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
  `-ImplicitCastExpr 0x55a112e37e78 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55a112e37e58 <col:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
        `-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B5.11] (ImplicitCastExpr, LValueToRValue, lu_byte)
  13: ImplicitCastExpr 0x55a112e38078 <./lstate.h:130:14, ./lgc.h:69:27> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55a112e38060 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55a112e37e90 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
    `-ImplicitCastExpr 0x55a112e37e78 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
      `-ParenExpr 0x55a112e37e58 <col:14, col:21> 'global_State *' lvalue
        `-MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
          `-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B5.12] (ImplicitCastExpr, IntegralCast, int)
  14: IntegerLiteral 0x55a112e37ec8 <./lgc.h:30:21> 'int' 1
1
  15: IntegerLiteral 0x55a112e37ee8 <./lgc.h:54:19> 'int' 0
0
  16: BinaryOperator 0x55a112e37f28 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e37ec8 <col:21> 'int' 1
`-ParenExpr 0x55a112e37f08 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e37ee8 <line:54:19> 'int' 0
[B5.14] << ([B5.15])
  17: IntegerLiteral 0x55a112e37f70 <./lgc.h:30:21> 'int' 1
1
  18: IntegerLiteral 0x55a112e37f90 <./lgc.h:55:19> 'int' 1
1
  19: BinaryOperator 0x55a112e37fd0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e37f70 <col:21> 'int' 1
`-ParenExpr 0x55a112e37fb0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e37f90 <line:55:19> 'int' 1
[B5.17] << ([B5.18])
  20: BinaryOperator 0x55a112e38018 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55a112e37f50 <col:20, col:27> 'int'
| `-BinaryOperator 0x55a112e37f28 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55a112e37ec8 <col:21> 'int' 1
|   `-ParenExpr 0x55a112e37f08 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55a112e37ee8 <line:54:19> 'int' 0
`-ParenExpr 0x55a112e37ff8 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55a112e37fd0 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55a112e37f70 <col:21> 'int' 1
    `-ParenExpr 0x55a112e37fb0 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55a112e37f90 <line:55:19> 'int' 1
([B5.16]) | ([B5.19])
  21: BinaryOperator 0x55a112e38ca0 <./lstate.h:130:14, ./lgc.h:31:51> 'int' '^'
|-ImplicitCastExpr 0x55a112e38078 <./lstate.h:130:14, ./lgc.h:69:27> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55a112e38060 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55a112e37e90 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
|     `-ImplicitCastExpr 0x55a112e37e78 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
|       `-ParenExpr 0x55a112e37e58 <col:14, col:21> 'global_State *' lvalue
|         `-MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
|           `-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
`-ParenExpr 0x55a112e38040 <./lgc.h:31:25, col:51> 'int'
  `-BinaryOperator 0x55a112e38018 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55a112e37f50 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55a112e37f28 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55a112e37ec8 <col:21> 'int' 1
    |   `-ParenExpr 0x55a112e37f08 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55a112e37ee8 <line:54:19> 'int' 0
    `-ParenExpr 0x55a112e37ff8 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55a112e37fd0 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55a112e37f70 <col:21> 'int' 1
        `-ParenExpr 0x55a112e37fb0 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55a112e37f90 <line:55:19> 'int' 1
[B5.13] ^ ([B5.20])
  22: BinaryOperator 0x55a112e38d18 <./lgc.h:70:22, line:69:51> 'int' '&'
|-ImplicitCastExpr 0x55a112e38d00 <line:70:22, col:31> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55a112e38ce8 <col:22, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55a112e37da8 <col:22, col:31> 'lu_byte':'unsigned char' lvalue .marked 0x55a112df3b28
|     `-MemberExpr 0x55a112e37d70 <col:22, col:27> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
|       `-ImplicitCastExpr 0x55a112e37d58 <col:22, col:24> 'GCObject *' <LValueToRValue>
|         `-ParenExpr 0x55a112e37d38 <col:22, col:24> 'GCObject *' lvalue
|           `-DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
`-ParenExpr 0x55a112e38cc8 <./lgc.h:69:23, col:51> 'int'
  `-BinaryOperator 0x55a112e38ca0 <./lstate.h:130:14, ./lgc.h:31:51> 'int' '^'
    |-ImplicitCastExpr 0x55a112e38078 <./lstate.h:130:14, ./lgc.h:69:27> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55a112e38060 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-MemberExpr 0x55a112e37e90 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
    |     `-ImplicitCastExpr 0x55a112e37e78 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    |       `-ParenExpr 0x55a112e37e58 <col:14, col:21> 'global_State *' lvalue
    |         `-MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    |           `-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
    |             `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
    `-ParenExpr 0x55a112e38040 <./lgc.h:31:25, col:51> 'int'
      `-BinaryOperator 0x55a112e38018 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55a112e37f50 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55a112e37f28 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55a112e37ec8 <col:21> 'int' 1
        |   `-ParenExpr 0x55a112e37f08 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55a112e37ee8 <line:54:19> 'int' 0
        `-ParenExpr 0x55a112e37ff8 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55a112e37fd0 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55a112e37f70 <col:21> 'int' 1
            `-ParenExpr 0x55a112e37fb0 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55a112e37f90 <line:55:19> 'int' 1
[B5.6] & ([B5.21])
  23: IntegerLiteral 0x55a112e38d40 <./lgc.h:30:21> 'int' 1
1
  24: IntegerLiteral 0x55a112e38d60 <./lgc.h:54:19> 'int' 0
0
  25: BinaryOperator 0x55a112e38da0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e38d40 <col:21> 'int' 1
`-ParenExpr 0x55a112e38d80 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e38d60 <line:54:19> 'int' 0
[B5.23] << ([B5.24])
  26: IntegerLiteral 0x55a112e38de8 <./lgc.h:30:21> 'int' 1
1
  27: IntegerLiteral 0x55a112e38e08 <./lgc.h:55:19> 'int' 1
1
  28: BinaryOperator 0x55a112e38e48 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e38de8 <col:21> 'int' 1
`-ParenExpr 0x55a112e38e28 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e38e08 <line:55:19> 'int' 1
[B5.26] << ([B5.27])
  29: BinaryOperator 0x55a112e38e90 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55a112e38dc8 <col:20, col:27> 'int'
| `-BinaryOperator 0x55a112e38da0 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55a112e38d40 <col:21> 'int' 1
|   `-ParenExpr 0x55a112e38d80 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55a112e38d60 <line:54:19> 'int' 0
`-ParenExpr 0x55a112e38e70 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55a112e38e48 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55a112e38de8 <col:21> 'int' 1
    `-ParenExpr 0x55a112e38e28 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55a112e38e08 <line:55:19> 'int' 1
([B5.25]) | ([B5.28])
  30: BinaryOperator 0x55a112e38ed8 <./lgc.h:70:22, line:31:51> 'int' '&'
|-BinaryOperator 0x55a112e38d18 <line:70:22, line:69:51> 'int' '&'
| |-ImplicitCastExpr 0x55a112e38d00 <line:70:22, col:31> 'int' <IntegralCast>
| | `-ImplicitCastExpr 0x55a112e38ce8 <col:22, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55a112e37da8 <col:22, col:31> 'lu_byte':'unsigned char' lvalue .marked 0x55a112df3b28
| |     `-MemberExpr 0x55a112e37d70 <col:22, col:27> 'GCheader':'struct GCheader' lvalue ->gch 0x55a112e1b0e0
| |       `-ImplicitCastExpr 0x55a112e37d58 <col:22, col:24> 'GCObject *' <LValueToRValue>
| |         `-ParenExpr 0x55a112e37d38 <col:22, col:24> 'GCObject *' lvalue
| |           `-DeclRefExpr 0x55a112e37d10 <lstring.c:88:24> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
| `-ParenExpr 0x55a112e38cc8 <./lgc.h:69:23, col:51> 'int'
|   `-BinaryOperator 0x55a112e38ca0 <./lstate.h:130:14, ./lgc.h:31:51> 'int' '^'
|     |-ImplicitCastExpr 0x55a112e38078 <./lstate.h:130:14, ./lgc.h:69:27> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55a112e38060 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' <LValueToRValue>
|     |   `-MemberExpr 0x55a112e37e90 <./lstate.h:130:14, ./lgc.h:69:27> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
|     |     `-ImplicitCastExpr 0x55a112e37e78 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
|     |       `-ParenExpr 0x55a112e37e58 <col:14, col:21> 'global_State *' lvalue
|     |         `-MemberExpr 0x55a112e37e20 <lstring.c:88:20, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
|     |           `-ImplicitCastExpr 0x55a112e37e08 <lstring.c:88:20> 'lua_State *' <LValueToRValue>
|     |             `-DeclRefExpr 0x55a112e37de0 <col:20> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
|     `-ParenExpr 0x55a112e38040 <./lgc.h:31:25, col:51> 'int'
|       `-BinaryOperator 0x55a112e38018 <line:30:20, col:27> 'int' '|'
|         |-ParenExpr 0x55a112e37f50 <col:20, col:27> 'int'
|         | `-BinaryOperator 0x55a112e37f28 <col:21, col:26> 'int' '<<'
|         |   |-IntegerLiteral 0x55a112e37ec8 <col:21> 'int' 1
|         |   `-ParenExpr 0x55a112e37f08 <col:24, col:26> 'int'
|         |     `-IntegerLiteral 0x55a112e37ee8 <line:54:19> 'int' 0
|         `-ParenExpr 0x55a112e37ff8 <line:30:20, col:27> 'int'
|           `-BinaryOperator 0x55a112e37fd0 <col:21, col:26> 'int' '<<'
|             |-IntegerLiteral 0x55a112e37f70 <col:21> 'int' 1
|             `-ParenExpr 0x55a112e37fb0 <col:24, col:26> 'int'
|               `-IntegerLiteral 0x55a112e37f90 <line:55:19> 'int' 1
`-ParenExpr 0x55a112e38eb8 <line:31:25, col:51> 'int'
  `-BinaryOperator 0x55a112e38e90 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55a112e38dc8 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55a112e38da0 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55a112e38d40 <col:21> 'int' 1
    |   `-ParenExpr 0x55a112e38d80 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55a112e38d60 <line:54:19> 'int' 0
    `-ParenExpr 0x55a112e38e70 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55a112e38e48 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55a112e38de8 <col:21> 'int' 1
        `-ParenExpr 0x55a112e38e28 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55a112e38e08 <line:55:19> 'int' 1
[B5.22] & ([B5.29])
   T: if ([B5.30])
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x55a112e379a0 <lstring.c:86:30> 'int (const void *, const void *, unsigned long)' Function 0x55a112d1bc10 'memcmp' 'int (const void *, const void *, unsigned long)'
memcmp
   2: ImplicitCastExpr 0x55a112e37bc8 <lstring.c:86:30> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55a112e379a0 <col:30> 'int (const void *, const void *, unsigned long)' Function 0x55a112d1bc10 'memcmp' 'int (const void *, const void *, unsigned long)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const void *, const void *, unsigned long))
   3: DeclRefExpr 0x55a112e379c8 <lstring.c:86:37> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
str
   4: ImplicitCastExpr 0x55a112e37c20 <lstring.c:86:37> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55a112e379c8 <col:37> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
[B6.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: ImplicitCastExpr 0x55a112e37c38 <lstring.c:86:37> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55a112e37c20 <col:37> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e379c8 <col:37> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
[B6.4] (ImplicitCastExpr, BitCast, const void *)
   6: DeclRefExpr 0x55a112e379f0 <lstring.c:86:49> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
ts
   7: ImplicitCastExpr 0x55a112e37a58 <./lobject.h:210:39, col:42> 'TString *' <LValueToRValue>
`-ParenExpr 0x55a112e37a18 <col:39, col:42> 'TString *' lvalue
  `-DeclRefExpr 0x55a112e379f0 <lstring.c:86:49> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
([B6.6]) (ImplicitCastExpr, LValueToRValue, TString *)
   8: IntegerLiteral 0x55a112e37a38 <./lobject.h:210:46> 'int' 1
1
   9: BinaryOperator 0x55a112e37a70 <./lobject.h:210:39, col:46> 'TString *' '+'
|-ImplicitCastExpr 0x55a112e37a58 <col:39, col:42> 'TString *' <LValueToRValue>
| `-ParenExpr 0x55a112e37a18 <col:39, col:42> 'TString *' lvalue
|   `-DeclRefExpr 0x55a112e379f0 <lstring.c:86:49> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
`-IntegerLiteral 0x55a112e37a38 <./lobject.h:210:46> 'int' 1
[B6.7] + [B6.8]
  10: CStyleCastExpr 0x55a112e37b00 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x55a112e37ae0 <col:26, col:30> 'TString *'
  `-BinaryOperator 0x55a112e37a70 <./lobject.h:210:39, col:46> 'TString *' '+'
    |-ImplicitCastExpr 0x55a112e37a58 <col:39, col:42> 'TString *' <LValueToRValue>
    | `-ParenExpr 0x55a112e37a18 <col:39, col:42> 'TString *' lvalue
    |   `-DeclRefExpr 0x55a112e379f0 <lstring.c:86:49> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
    `-IntegerLiteral 0x55a112e37a38 <./lobject.h:210:46> 'int' 1
(const char *)([B6.9]) (CStyleCastExpr, BitCast, const char *)
  11: ImplicitCastExpr 0x55a112e37c50 <./llimits.h:75:22, col:31> 'const void *' <BitCast>
`-ParenExpr 0x55a112e37b28 <col:22, col:31> 'const char *'
  `-CStyleCastExpr 0x55a112e37b00 <col:23, col:30> 'const char *' <BitCast>
    `-ParenExpr 0x55a112e37ae0 <col:26, col:30> 'TString *'
      `-BinaryOperator 0x55a112e37a70 <./lobject.h:210:39, col:46> 'TString *' '+'
        |-ImplicitCastExpr 0x55a112e37a58 <col:39, col:42> 'TString *' <LValueToRValue>
        | `-ParenExpr 0x55a112e37a18 <col:39, col:42> 'TString *' lvalue
        |   `-DeclRefExpr 0x55a112e379f0 <lstring.c:86:49> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
        `-IntegerLiteral 0x55a112e37a38 <./lobject.h:210:46> 'int' 1
([B6.10]) (ImplicitCastExpr, BitCast, const void *)
  12: DeclRefExpr 0x55a112e37b48 <lstring.c:86:54> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
l
  13: ImplicitCastExpr 0x55a112e37c68 <lstring.c:86:54> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e37b48 <col:54> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B6.12] (ImplicitCastExpr, LValueToRValue, size_t)
  14: CallExpr 0x55a112e37be0 <lstring.c:86:30, col:55> 'int'
|-ImplicitCastExpr 0x55a112e37bc8 <col:30> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55a112e379a0 <col:30> 'int (const void *, const void *, unsigned long)' Function 0x55a112d1bc10 'memcmp' 'int (const void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55a112e37c38 <col:37> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55a112e37c20 <col:37> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55a112e379c8 <col:37> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
|-ImplicitCastExpr 0x55a112e37c50 <./llimits.h:75:22, col:31> 'const void *' <BitCast>
| `-ParenExpr 0x55a112e37b28 <col:22, col:31> 'const char *'
|   `-CStyleCastExpr 0x55a112e37b00 <col:23, col:30> 'const char *' <BitCast>
|     `-ParenExpr 0x55a112e37ae0 <col:26, col:30> 'TString *'
|       `-BinaryOperator 0x55a112e37a70 <./lobject.h:210:39, col:46> 'TString *' '+'
|         |-ImplicitCastExpr 0x55a112e37a58 <col:39, col:42> 'TString *' <LValueToRValue>
|         | `-ParenExpr 0x55a112e37a18 <col:39, col:42> 'TString *' lvalue
|         |   `-DeclRefExpr 0x55a112e379f0 <lstring.c:86:49> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
|         `-IntegerLiteral 0x55a112e37a38 <./lobject.h:210:46> 'int' 1
`-ImplicitCastExpr 0x55a112e37c68 <lstring.c:86:54> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55a112e37b48 <col:54> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B6.2]([B6.5], [B6.11], [B6.13])
  15: IntegerLiteral 0x55a112e37c80 <lstring.c:86:60> 'int' 0
0
  16: BinaryOperator 0x55a112e37ca0 <lstring.c:86:30, col:60> 'int' '=='
|-CallExpr 0x55a112e37be0 <col:30, col:55> 'int'
| |-ImplicitCastExpr 0x55a112e37bc8 <col:30> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55a112e379a0 <col:30> 'int (const void *, const void *, unsigned long)' Function 0x55a112d1bc10 'memcmp' 'int (const void *, const void *, unsigned long)'
| |-ImplicitCastExpr 0x55a112e37c38 <col:37> 'const void *' <BitCast>
| | `-ImplicitCastExpr 0x55a112e37c20 <col:37> 'const char *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a112e379c8 <col:37> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
| |-ImplicitCastExpr 0x55a112e37c50 <./llimits.h:75:22, col:31> 'const void *' <BitCast>
| | `-ParenExpr 0x55a112e37b28 <col:22, col:31> 'const char *'
| |   `-CStyleCastExpr 0x55a112e37b00 <col:23, col:30> 'const char *' <BitCast>
| |     `-ParenExpr 0x55a112e37ae0 <col:26, col:30> 'TString *'
| |       `-BinaryOperator 0x55a112e37a70 <./lobject.h:210:39, col:46> 'TString *' '+'
| |         |-ImplicitCastExpr 0x55a112e37a58 <col:39, col:42> 'TString *' <LValueToRValue>
| |         | `-ParenExpr 0x55a112e37a18 <col:39, col:42> 'TString *' lvalue
| |         |   `-DeclRefExpr 0x55a112e379f0 <lstring.c:86:49> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
| |         `-IntegerLiteral 0x55a112e37a38 <./lobject.h:210:46> 'int' 1
| `-ImplicitCastExpr 0x55a112e37c68 <lstring.c:86:54> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55a112e37b48 <col:54> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
`-IntegerLiteral 0x55a112e37c80 <col:60> 'int' 0
[B6.14] == [B6.15]
   T: if [B7.13] && ([B6.16])
   Preds (1): B7
   Succs (2): B5 B2

 [B7]
   1: DeclRefExpr 0x55a112e37760 <lstring.c:85:29> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55a112e377a8 <./lstate.h:149:62, col:64> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55a112e37788 <col:62, col:64> 'GCObject *' lvalue
  `-DeclRefExpr 0x55a112e37760 <lstring.c:85:29> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55a112e377c0 <./lstate.h:149:62, col:67> 'union TString':'union TString' lvalue ->ts 0x55a112e1b148
`-ImplicitCastExpr 0x55a112e377a8 <col:62, col:64> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55a112e37788 <col:62, col:64> 'GCObject *' lvalue
    `-DeclRefExpr 0x55a112e37760 <lstring.c:85:29> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B7.2]->ts
   4: UnaryOperator 0x55a112e37818 <./lstate.h:149:60, col:69> 'union TString *' prefix '&'
`-ParenExpr 0x55a112e377f8 <col:61, col:69> 'union TString':'union TString' lvalue
  `-MemberExpr 0x55a112e377c0 <col:62, col:67> 'union TString':'union TString' lvalue ->ts 0x55a112e1b148
    `-ImplicitCastExpr 0x55a112e377a8 <col:62, col:64> 'GCObject *' <LValueToRValue>
      `-ParenExpr 0x55a112e37788 <col:62, col:64> 'GCObject *' lvalue
        `-DeclRefExpr 0x55a112e37760 <lstring.c:85:29> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
&([B7.3])
   5: DeclStmt 0x55a112e37858 <lstring.c:85:5, col:31>col:14
`-VarDecl 0x55a112e37700 <col:5, ./llimits.h:63:27> lstring.c:85:14 used ts 'TString *' cinit
  `-ParenExpr 0x55a112e37838 <./llimits.h:63:25, col:27> 'union TString *'
    `-UnaryOperator 0x55a112e37818 <./lstate.h:149:60, col:69> 'union TString *' prefix '&'
      `-ParenExpr 0x55a112e377f8 <col:61, col:69> 'union TString':'union TString' lvalue
        `-MemberExpr 0x55a112e377c0 <col:62, col:67> 'union TString':'union TString' lvalue ->ts 0x55a112e1b148
          `-ImplicitCastExpr 0x55a112e377a8 <col:62, col:64> 'GCObject *' <LValueToRValue>
            `-ParenExpr 0x55a112e37788 <col:62, col:64> 'GCObject *' lvalue
              `-DeclRefExpr 0x55a112e37760 <lstring.c:85:29> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
TString *ts = (&((o)->ts));
   6: DeclRefExpr 0x55a112e37870 <lstring.c:86:9> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
ts
   7: ImplicitCastExpr 0x55a112e37898 <lstring.c:86:9> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e37870 <col:9> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
[B7.6] (ImplicitCastExpr, LValueToRValue, TString *)
   8: MemberExpr 0x55a112e378b0 <lstring.c:86:9, col:13> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
`-ImplicitCastExpr 0x55a112e37898 <col:9> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e37870 <col:9> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
[B7.7]->tsv
   9: MemberExpr 0x55a112e378e8 <lstring.c:86:9, col:17> 'size_t':'unsigned long' lvalue .len 0x55a112dfaba0
`-MemberExpr 0x55a112e378b0 <col:9, col:13> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
  `-ImplicitCastExpr 0x55a112e37898 <col:9> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e37870 <col:9> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
[B7.8].len
  10: ImplicitCastExpr 0x55a112e37948 <lstring.c:86:9, col:17> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x55a112e378e8 <col:9, col:17> 'size_t':'unsigned long' lvalue .len 0x55a112dfaba0
  `-MemberExpr 0x55a112e378b0 <col:9, col:13> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
    `-ImplicitCastExpr 0x55a112e37898 <col:9> 'TString *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e37870 <col:9> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
[B7.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: DeclRefExpr 0x55a112e37920 <lstring.c:86:24> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
l
  12: ImplicitCastExpr 0x55a112e37960 <lstring.c:86:24> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e37920 <col:24> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B7.11] (ImplicitCastExpr, LValueToRValue, size_t)
  13: BinaryOperator 0x55a112e37978 <lstring.c:86:9, col:24> 'int' '=='
|-ImplicitCastExpr 0x55a112e37948 <col:9, col:17> 'size_t':'unsigned long' <LValueToRValue>
| `-MemberExpr 0x55a112e378e8 <col:9, col:17> 'size_t':'unsigned long' lvalue .len 0x55a112dfaba0
|   `-MemberExpr 0x55a112e378b0 <col:9, col:13> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
|     `-ImplicitCastExpr 0x55a112e37898 <col:9> 'TString *' <LValueToRValue>
|       `-DeclRefExpr 0x55a112e37870 <col:9> 'TString *' lvalue Var 0x55a112e37700 'ts' 'TString *'
`-ImplicitCastExpr 0x55a112e37960 <col:24> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55a112e37920 <col:24> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B7.10] == [B7.12]
   T: [B7.13] && ...
   Preds (1): B8
   Succs (2): B6 B2

 [B8]
   1: DeclRefExpr 0x55a112e374d8 <lstring.c:83:8> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55a112e37580 <lstring.c:83:8> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55a112e374d8 <col:8> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
[B8.1] (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: IntegerLiteral 0x55a112e37500 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x55a112e37538 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55a112e37500 <col:24> 'int' 0
(void *)[B8.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x55a112e37598 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'GCObject *' <BitCast>
`-ParenExpr 0x55a112e37560 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55a112e37538 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55a112e37500 <col:24> 'int' 0
([B8.4]) (ImplicitCastExpr, BitCast, GCObject *)
   6: BinaryOperator 0x55a112e375b0 <lstring.c:83:8, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ImplicitCastExpr 0x55a112e37580 <lstring.c:83:8> 'GCObject *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e374d8 <col:8> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
`-ImplicitCastExpr 0x55a112e37598 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'GCObject *' <BitCast>
  `-ParenExpr 0x55a112e37560 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55a112e37538 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55a112e37500 <col:24> 'int' 0
[B8.2] != [B8.5]
   T: for (...; [B8.6]; ...)
   Preds (2): B2 B9
   Succs (2): B7 B1

 [B9]
   1: DeclRefExpr 0x55a112e36fa8 <lstring.c:82:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
`-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.2]->l_G
   4: ImplicitCastExpr 0x55a112e37040 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55a112e37020 <col:14, col:21> 'global_State *' lvalue
  `-MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    `-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
([B9.3]) (ImplicitCastExpr, LValueToRValue, global_State *)
   5: MemberExpr 0x55a112e37058 <./lstate.h:130:14, lstring.c:82:18> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
`-ImplicitCastExpr 0x55a112e37040 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55a112e37020 <col:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
      `-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.4]->strt
   6: MemberExpr 0x55a112e370b0 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' lvalue .hash 0x55a112e16910
`-MemberExpr 0x55a112e37058 <./lstate.h:130:14, lstring.c:82:18> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
  `-ImplicitCastExpr 0x55a112e37040 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55a112e37020 <col:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
        `-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.5].hash
   7: ImplicitCastExpr 0x55a112e37458 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' <LValueToRValue>
`-MemberExpr 0x55a112e370b0 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' lvalue .hash 0x55a112e16910
  `-MemberExpr 0x55a112e37058 <./lstate.h:130:14, lstring.c:82:18> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
    `-ImplicitCastExpr 0x55a112e37040 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
      `-ParenExpr 0x55a112e37020 <col:14, col:21> 'global_State *' lvalue
        `-MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
          `-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.6] (ImplicitCastExpr, LValueToRValue, GCObject **)
   8: DeclRefExpr 0x55a112e370e8 <lstring.c:82:33> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
h
   9: ImplicitCastExpr 0x55a112e372f0 <./lobject.h:356:44, col:46> 'unsigned int' <LValueToRValue>
`-ParenExpr 0x55a112e37110 <col:44, col:46> 'unsigned int' lvalue
  `-DeclRefExpr 0x55a112e370e8 <lstring.c:82:33> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
([B9.8]) (ImplicitCastExpr, LValueToRValue, unsigned int)
  10: DeclRefExpr 0x55a112e37130 <lstring.c:82:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
`-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.11]->l_G
  13: ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
  `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
([B9.12]) (ImplicitCastExpr, LValueToRValue, global_State *)
  14: MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
`-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
      `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.13]->strt
  15: MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
`-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
  `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
        `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
[B9.14].size
  16: ImplicitCastExpr 0x55a112e37290 <./lobject.h:356:51, col:56> 'int' <LValueToRValue>
`-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
  `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
    `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
      `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
        `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
          `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
            `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
([B9.15]) (ImplicitCastExpr, LValueToRValue, int)
  17: IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
1
  18: BinaryOperator 0x55a112e372a8 <./lobject.h:356:51, col:58> 'int' '-'
|-ImplicitCastExpr 0x55a112e37290 <col:51, col:56> 'int' <LValueToRValue>
| `-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
|   `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
|     `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
|       `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
|         `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
|           `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
|             `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
|               `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
`-IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
[B9.16] - [B9.17]
  19: ImplicitCastExpr 0x55a112e37308 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55a112e372d0 <col:50, col:59> 'int'
  `-BinaryOperator 0x55a112e372a8 <col:51, col:58> 'int' '-'
    |-ImplicitCastExpr 0x55a112e37290 <col:51, col:56> 'int' <LValueToRValue>
    | `-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
    |   `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
    |     `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
    |       `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    |         `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
    |           `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    |             `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
    |               `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
    `-IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
([B9.18]) (ImplicitCastExpr, IntegralCast, unsigned int)
  20: BinaryOperator 0x55a112e37320 <./lobject.h:356:44, col:59> 'unsigned int' '&'
|-ImplicitCastExpr 0x55a112e372f0 <col:44, col:46> 'unsigned int' <LValueToRValue>
| `-ParenExpr 0x55a112e37110 <col:44, col:46> 'unsigned int' lvalue
|   `-DeclRefExpr 0x55a112e370e8 <lstring.c:82:33> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
`-ImplicitCastExpr 0x55a112e37308 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55a112e372d0 <col:50, col:59> 'int'
    `-BinaryOperator 0x55a112e372a8 <col:51, col:58> 'int' '-'
      |-ImplicitCastExpr 0x55a112e37290 <col:51, col:56> 'int' <LValueToRValue>
      | `-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
      |   `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
      |     `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
      |       `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
      |         `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
      |           `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
      |             `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
      |               `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
      `-IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
[B9.9] & [B9.19]
  21: CStyleCastExpr 0x55a112e373b0 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x55a112e37390 <col:26, col:30> 'unsigned int'
  `-BinaryOperator 0x55a112e37320 <./lobject.h:356:44, col:59> 'unsigned int' '&'
    |-ImplicitCastExpr 0x55a112e372f0 <col:44, col:46> 'unsigned int' <LValueToRValue>
    | `-ParenExpr 0x55a112e37110 <col:44, col:46> 'unsigned int' lvalue
    |   `-DeclRefExpr 0x55a112e370e8 <lstring.c:82:33> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
    `-ImplicitCastExpr 0x55a112e37308 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
      `-ParenExpr 0x55a112e372d0 <col:50, col:59> 'int'
        `-BinaryOperator 0x55a112e372a8 <col:51, col:58> 'int' '-'
          |-ImplicitCastExpr 0x55a112e37290 <col:51, col:56> 'int' <LValueToRValue>
          | `-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
          |   `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
          |     `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
          |       `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
          |         `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
          |           `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
          |             `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
          |               `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
          `-IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
(int)([B9.20]) (CStyleCastExpr, IntegralCast, int)
  22: ArraySubscriptExpr 0x55a112e37470 <./lstate.h:130:14, lstring.c:82:52> 'GCObject *' lvalue
|-ImplicitCastExpr 0x55a112e37458 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' <LValueToRValue>
| `-MemberExpr 0x55a112e370b0 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' lvalue .hash 0x55a112e16910
|   `-MemberExpr 0x55a112e37058 <./lstate.h:130:14, lstring.c:82:18> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
|     `-ImplicitCastExpr 0x55a112e37040 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
|       `-ParenExpr 0x55a112e37020 <col:14, col:21> 'global_State *' lvalue
|         `-MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
|           `-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
`-ParenExpr 0x55a112e37438 <./lobject.h:356:2, col:63> 'int'
  `-ParenExpr 0x55a112e37418 <./llimits.h:63:25, col:27> 'int'
    `-ParenExpr 0x55a112e373f8 <./lobject.h:356:33, col:61> 'int'
      `-ParenExpr 0x55a112e373d8 <./llimits.h:75:22, col:31> 'int'
        `-CStyleCastExpr 0x55a112e373b0 <col:23, col:30> 'int' <IntegralCast>
          `-ParenExpr 0x55a112e37390 <col:26, col:30> 'unsigned int'
            `-BinaryOperator 0x55a112e37320 <./lobject.h:356:44, col:59> 'unsigned int' '&'
              |-ImplicitCastExpr 0x55a112e372f0 <col:44, col:46> 'unsigned int' <LValueToRValue>
              | `-ParenExpr 0x55a112e37110 <col:44, col:46> 'unsigned int' lvalue
              |   `-DeclRefExpr 0x55a112e370e8 <lstring.c:82:33> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
              `-ImplicitCastExpr 0x55a112e37308 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
                `-ParenExpr 0x55a112e372d0 <col:50, col:59> 'int'
                  `-BinaryOperator 0x55a112e372a8 <col:51, col:58> 'int' '-'
                    |-ImplicitCastExpr 0x55a112e37290 <col:51, col:56> 'int' <LValueToRValue>
                    | `-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
                    |   `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
                    |     `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
                    |       `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
                    |         `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
                    |           `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
                    |             `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
                    |               `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
                    `-IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
[B9.7][(((([B9.21]))))]
  23: ImplicitCastExpr 0x55a112e37498 <./lstate.h:130:14, lstring.c:82:52> 'GCObject *' <LValueToRValue>
`-ArraySubscriptExpr 0x55a112e37470 <./lstate.h:130:14, lstring.c:82:52> 'GCObject *' lvalue
  |-ImplicitCastExpr 0x55a112e37458 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' <LValueToRValue>
  | `-MemberExpr 0x55a112e370b0 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' lvalue .hash 0x55a112e16910
  |   `-MemberExpr 0x55a112e37058 <./lstate.h:130:14, lstring.c:82:18> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
  |     `-ImplicitCastExpr 0x55a112e37040 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
  |       `-ParenExpr 0x55a112e37020 <col:14, col:21> 'global_State *' lvalue
  |         `-MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
  |           `-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
  |             `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
  `-ParenExpr 0x55a112e37438 <./lobject.h:356:2, col:63> 'int'
    `-ParenExpr 0x55a112e37418 <./llimits.h:63:25, col:27> 'int'
      `-ParenExpr 0x55a112e373f8 <./lobject.h:356:33, col:61> 'int'
        `-ParenExpr 0x55a112e373d8 <./llimits.h:75:22, col:31> 'int'
          `-CStyleCastExpr 0x55a112e373b0 <col:23, col:30> 'int' <IntegralCast>
            `-ParenExpr 0x55a112e37390 <col:26, col:30> 'unsigned int'
              `-BinaryOperator 0x55a112e37320 <./lobject.h:356:44, col:59> 'unsigned int' '&'
                |-ImplicitCastExpr 0x55a112e372f0 <col:44, col:46> 'unsigned int' <LValueToRValue>
                | `-ParenExpr 0x55a112e37110 <col:44, col:46> 'unsigned int' lvalue
                |   `-DeclRefExpr 0x55a112e370e8 <lstring.c:82:33> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
                `-ImplicitCastExpr 0x55a112e37308 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
                  `-ParenExpr 0x55a112e372d0 <col:50, col:59> 'int'
                    `-BinaryOperator 0x55a112e372a8 <col:51, col:58> 'int' '-'
                      |-ImplicitCastExpr 0x55a112e37290 <col:51, col:56> 'int' <LValueToRValue>
                      | `-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
                      |   `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
                      |     `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
                      |       `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
                      |         `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
                      |           `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
                      |             `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
                      |               `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
                      `-IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
[B9.22] (ImplicitCastExpr, LValueToRValue, GCObject *)
  24: DeclRefExpr 0x55a112e36f80 <lstring.c:82:8> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
o
  25: BinaryOperator 0x55a112e374b0 <lstring.c:82:8, col:52> 'GCObject *' '='
|-DeclRefExpr 0x55a112e36f80 <col:8> 'GCObject *' lvalue Var 0x55a112e36500 'o' 'GCObject *'
`-ImplicitCastExpr 0x55a112e37498 <./lstate.h:130:14, lstring.c:82:52> 'GCObject *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55a112e37470 <./lstate.h:130:14, lstring.c:82:52> 'GCObject *' lvalue
    |-ImplicitCastExpr 0x55a112e37458 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' <LValueToRValue>
    | `-MemberExpr 0x55a112e370b0 <./lstate.h:130:14, lstring.c:82:23> 'GCObject **' lvalue .hash 0x55a112e16910
    |   `-MemberExpr 0x55a112e37058 <./lstate.h:130:14, lstring.c:82:18> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
    |     `-ImplicitCastExpr 0x55a112e37040 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    |       `-ParenExpr 0x55a112e37020 <col:14, col:21> 'global_State *' lvalue
    |         `-MemberExpr 0x55a112e36fe8 <lstring.c:82:14, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    |           `-ImplicitCastExpr 0x55a112e36fd0 <lstring.c:82:14> 'lua_State *' <LValueToRValue>
    |             `-DeclRefExpr 0x55a112e36fa8 <col:14> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
    `-ParenExpr 0x55a112e37438 <./lobject.h:356:2, col:63> 'int'
      `-ParenExpr 0x55a112e37418 <./llimits.h:63:25, col:27> 'int'
        `-ParenExpr 0x55a112e373f8 <./lobject.h:356:33, col:61> 'int'
          `-ParenExpr 0x55a112e373d8 <./llimits.h:75:22, col:31> 'int'
            `-CStyleCastExpr 0x55a112e373b0 <col:23, col:30> 'int' <IntegralCast>
              `-ParenExpr 0x55a112e37390 <col:26, col:30> 'unsigned int'
                `-BinaryOperator 0x55a112e37320 <./lobject.h:356:44, col:59> 'unsigned int' '&'
                  |-ImplicitCastExpr 0x55a112e372f0 <col:44, col:46> 'unsigned int' <LValueToRValue>
                  | `-ParenExpr 0x55a112e37110 <col:44, col:46> 'unsigned int' lvalue
                  |   `-DeclRefExpr 0x55a112e370e8 <lstring.c:82:33> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
                  `-ImplicitCastExpr 0x55a112e37308 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
                    `-ParenExpr 0x55a112e372d0 <col:50, col:59> 'int'
                      `-BinaryOperator 0x55a112e372a8 <col:51, col:58> 'int' '-'
                        |-ImplicitCastExpr 0x55a112e37290 <col:51, col:56> 'int' <LValueToRValue>
                        | `-ParenExpr 0x55a112e37250 <col:51, col:56> 'int' lvalue
                        |   `-MemberExpr 0x55a112e37218 <./lstate.h:130:14, lstring.c:82:47> 'int' lvalue .size 0x55a112e169c8
                        |     `-MemberExpr 0x55a112e371e0 <./lstate.h:130:14, lstring.c:82:42> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
                        |       `-ImplicitCastExpr 0x55a112e371c8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
                        |         `-ParenExpr 0x55a112e371a8 <col:14, col:21> 'global_State *' lvalue
                        |           `-MemberExpr 0x55a112e37170 <lstring.c:82:38, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
                        |             `-ImplicitCastExpr 0x55a112e37158 <lstring.c:82:38> 'lua_State *' <LValueToRValue>
                        |               `-DeclRefExpr 0x55a112e37130 <col:38> 'lua_State *' lvalue ParmVar 0x55a112e36270 'L' 'lua_State *'
                        `-IntegerLiteral 0x55a112e37270 <./lobject.h:356:58> 'int' 1
[B9.24] = [B9.23]
   Preds (1): B12
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x55a112e36a48 <lstring.c:80:24> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
l1
   2: DeclRefExpr 0x55a112e36a70 <lstring.c:80:28> 'size_t':'unsigned long' lvalue Var 0x55a112e36708 'step' 'size_t':'unsigned long'
step
   3: ImplicitCastExpr 0x55a112e36a98 <lstring.c:80:28> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e36a70 <col:28> 'size_t':'unsigned long' lvalue Var 0x55a112e36708 'step' 'size_t':'unsigned long'
[B10.2] (ImplicitCastExpr, LValueToRValue, size_t)
   4: CompoundAssignOperator 0x55a112e36ab0 <lstring.c:80:24, col:28> 'size_t':'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x55a112e36a48 <col:24> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e36a98 <col:28> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55a112e36a70 <col:28> 'size_t':'unsigned long' lvalue Var 0x55a112e36708 'step' 'size_t':'unsigned long'
[B10.1] -= [B10.3]
   Preds (1): B11
   Succs (1): B12

 [B11]
   1: DeclRefExpr 0x55a112e36b10 <lstring.c:81:9> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
h
   2: ImplicitCastExpr 0x55a112e36ee0 <lstring.c:81:9> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x55a112e36b10 <col:9> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
[B11.1] (ImplicitCastExpr, LValueToRValue, unsigned int)
   3: DeclRefExpr 0x55a112e36b38 <lstring.c:81:15> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
h
   4: ImplicitCastExpr 0x55a112e36b80 <lstring.c:81:15> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x55a112e36b38 <col:15> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
[B11.3] (ImplicitCastExpr, LValueToRValue, unsigned int)
   5: IntegerLiteral 0x55a112e36b60 <lstring.c:81:18> 'int' 5
5
   6: BinaryOperator 0x55a112e36b98 <lstring.c:81:15, col:18> 'unsigned int' '<<'
|-ImplicitCastExpr 0x55a112e36b80 <col:15> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x55a112e36b38 <col:15> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
`-IntegerLiteral 0x55a112e36b60 <col:18> 'int' 5
[B11.4] << [B11.5]
   7: DeclRefExpr 0x55a112e36be0 <lstring.c:81:22> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
h
   8: ImplicitCastExpr 0x55a112e36c28 <lstring.c:81:22> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x55a112e36be0 <col:22> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
[B11.7] (ImplicitCastExpr, LValueToRValue, unsigned int)
   9: IntegerLiteral 0x55a112e36c08 <lstring.c:81:25> 'int' 2
2
  10: BinaryOperator 0x55a112e36c40 <lstring.c:81:22, col:25> 'unsigned int' '>>'
|-ImplicitCastExpr 0x55a112e36c28 <col:22> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x55a112e36be0 <col:22> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
`-IntegerLiteral 0x55a112e36c08 <col:25> 'int' 2
[B11.8] >> [B11.9]
  11: BinaryOperator 0x55a112e36c88 <lstring.c:81:14, col:26> 'unsigned int' '+'
|-ParenExpr 0x55a112e36bc0 <col:14, col:19> 'unsigned int'
| `-BinaryOperator 0x55a112e36b98 <col:15, col:18> 'unsigned int' '<<'
|   |-ImplicitCastExpr 0x55a112e36b80 <col:15> 'unsigned int' <LValueToRValue>
|   | `-DeclRefExpr 0x55a112e36b38 <col:15> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
|   `-IntegerLiteral 0x55a112e36b60 <col:18> 'int' 5
`-ParenExpr 0x55a112e36c68 <col:21, col:26> 'unsigned int'
  `-BinaryOperator 0x55a112e36c40 <col:22, col:25> 'unsigned int' '>>'
    |-ImplicitCastExpr 0x55a112e36c28 <col:22> 'unsigned int' <LValueToRValue>
    | `-DeclRefExpr 0x55a112e36be0 <col:22> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
    `-IntegerLiteral 0x55a112e36c08 <col:25> 'int' 2
([B11.6]) + ([B11.10])
  12: DeclRefExpr 0x55a112e36cb0 <lstring.c:81:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
str
  13: ImplicitCastExpr 0x55a112e36d78 <lstring.c:81:48> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
[B11.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: DeclRefExpr 0x55a112e36cd8 <lstring.c:81:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
l1
  15: ImplicitCastExpr 0x55a112e36d20 <lstring.c:81:52> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
[B11.14] (ImplicitCastExpr, LValueToRValue, size_t)
  16: IntegerLiteral 0x55a112e36d00 <lstring.c:81:55> 'int' 1
1
  17: ImplicitCastExpr 0x55a112e36d38 <lstring.c:81:55> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
[B11.16] (ImplicitCastExpr, IntegralCast, unsigned long)
  18: BinaryOperator 0x55a112e36d50 <lstring.c:81:52, col:55> 'unsigned long' '-'
|-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
[B11.15] - [B11.17]
  19: ArraySubscriptExpr 0x55a112e36d90 <lstring.c:81:48, col:56> 'const char' lvalue
|-ImplicitCastExpr 0x55a112e36d78 <col:48> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
`-BinaryOperator 0x55a112e36d50 <col:52, col:55> 'unsigned long' '-'
  |-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
[B11.13][[B11.18]]
  20: ImplicitCastExpr 0x55a112e36e20 <./llimits.h:75:26, col:30> 'char' <LValueToRValue>
`-ParenExpr 0x55a112e36e00 <col:26, col:30> 'const char' lvalue
  `-ArraySubscriptExpr 0x55a112e36d90 <lstring.c:81:48, col:56> 'const char' lvalue
    |-ImplicitCastExpr 0x55a112e36d78 <col:48> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
    `-BinaryOperator 0x55a112e36d50 <col:52, col:55> 'unsigned long' '-'
      |-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
      | `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
      `-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
        `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
([B11.19]) (ImplicitCastExpr, LValueToRValue, char)
  21: CStyleCastExpr 0x55a112e36e38 <./llimits.h:75:23, col:30> 'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x55a112e36e20 <col:26, col:30> 'char' <LValueToRValue>
  `-ParenExpr 0x55a112e36e00 <col:26, col:30> 'const char' lvalue
    `-ArraySubscriptExpr 0x55a112e36d90 <lstring.c:81:48, col:56> 'const char' lvalue
      |-ImplicitCastExpr 0x55a112e36d78 <col:48> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
      `-BinaryOperator 0x55a112e36d50 <col:52, col:55> 'unsigned long' '-'
        |-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
        | `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
        `-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
          `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
(unsigned char)[B11.20] (CStyleCastExpr, IntegralCast, unsigned char)
  22: ImplicitCastExpr 0x55a112e36e80 <./llimits.h:75:22, col:31> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55a112e36e60 <col:22, col:31> 'unsigned char'
  `-CStyleCastExpr 0x55a112e36e38 <col:23, col:30> 'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x55a112e36e20 <col:26, col:30> 'char' <LValueToRValue>
      `-ParenExpr 0x55a112e36e00 <col:26, col:30> 'const char' lvalue
        `-ArraySubscriptExpr 0x55a112e36d90 <lstring.c:81:48, col:56> 'const char' lvalue
          |-ImplicitCastExpr 0x55a112e36d78 <col:48> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
          `-BinaryOperator 0x55a112e36d50 <col:52, col:55> 'unsigned long' '-'
            |-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
            | `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
            `-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
              `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
([B11.21]) (ImplicitCastExpr, IntegralCast, unsigned int)
  23: BinaryOperator 0x55a112e36e98 <lstring.c:81:14, ./llimits.h:75:31> 'unsigned int' '+'
|-BinaryOperator 0x55a112e36c88 <lstring.c:81:14, col:26> 'unsigned int' '+'
| |-ParenExpr 0x55a112e36bc0 <col:14, col:19> 'unsigned int'
| | `-BinaryOperator 0x55a112e36b98 <col:15, col:18> 'unsigned int' '<<'
| |   |-ImplicitCastExpr 0x55a112e36b80 <col:15> 'unsigned int' <LValueToRValue>
| |   | `-DeclRefExpr 0x55a112e36b38 <col:15> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
| |   `-IntegerLiteral 0x55a112e36b60 <col:18> 'int' 5
| `-ParenExpr 0x55a112e36c68 <col:21, col:26> 'unsigned int'
|   `-BinaryOperator 0x55a112e36c40 <col:22, col:25> 'unsigned int' '>>'
|     |-ImplicitCastExpr 0x55a112e36c28 <col:22> 'unsigned int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a112e36be0 <col:22> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
|     `-IntegerLiteral 0x55a112e36c08 <col:25> 'int' 2
`-ImplicitCastExpr 0x55a112e36e80 <./llimits.h:75:22, col:31> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55a112e36e60 <col:22, col:31> 'unsigned char'
    `-CStyleCastExpr 0x55a112e36e38 <col:23, col:30> 'unsigned char' <IntegralCast>
      `-ImplicitCastExpr 0x55a112e36e20 <col:26, col:30> 'char' <LValueToRValue>
        `-ParenExpr 0x55a112e36e00 <col:26, col:30> 'const char' lvalue
          `-ArraySubscriptExpr 0x55a112e36d90 <lstring.c:81:48, col:56> 'const char' lvalue
            |-ImplicitCastExpr 0x55a112e36d78 <col:48> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
            `-BinaryOperator 0x55a112e36d50 <col:52, col:55> 'unsigned long' '-'
              |-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
              | `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
              `-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
                `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
[B11.11] + [B11.22]
  24: BinaryOperator 0x55a112e36ef8 <lstring.c:81:9, col:58> 'unsigned int' '^'
|-ImplicitCastExpr 0x55a112e36ee0 <col:9> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x55a112e36b10 <col:9> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
`-ParenExpr 0x55a112e36ec0 <col:13, col:58> 'unsigned int'
  `-BinaryOperator 0x55a112e36e98 <col:14, ./llimits.h:75:31> 'unsigned int' '+'
    |-BinaryOperator 0x55a112e36c88 <lstring.c:81:14, col:26> 'unsigned int' '+'
    | |-ParenExpr 0x55a112e36bc0 <col:14, col:19> 'unsigned int'
    | | `-BinaryOperator 0x55a112e36b98 <col:15, col:18> 'unsigned int' '<<'
    | |   |-ImplicitCastExpr 0x55a112e36b80 <col:15> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x55a112e36b38 <col:15> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
    | |   `-IntegerLiteral 0x55a112e36b60 <col:18> 'int' 5
    | `-ParenExpr 0x55a112e36c68 <col:21, col:26> 'unsigned int'
    |   `-BinaryOperator 0x55a112e36c40 <col:22, col:25> 'unsigned int' '>>'
    |     |-ImplicitCastExpr 0x55a112e36c28 <col:22> 'unsigned int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55a112e36be0 <col:22> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
    |     `-IntegerLiteral 0x55a112e36c08 <col:25> 'int' 2
    `-ImplicitCastExpr 0x55a112e36e80 <./llimits.h:75:22, col:31> 'unsigned int' <IntegralCast>
      `-ParenExpr 0x55a112e36e60 <col:22, col:31> 'unsigned char'
        `-CStyleCastExpr 0x55a112e36e38 <col:23, col:30> 'unsigned char' <IntegralCast>
          `-ImplicitCastExpr 0x55a112e36e20 <col:26, col:30> 'char' <LValueToRValue>
            `-ParenExpr 0x55a112e36e00 <col:26, col:30> 'const char' lvalue
              `-ArraySubscriptExpr 0x55a112e36d90 <lstring.c:81:48, col:56> 'const char' lvalue
                |-ImplicitCastExpr 0x55a112e36d78 <col:48> 'const char *' <LValueToRValue>
                | `-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
                `-BinaryOperator 0x55a112e36d50 <col:52, col:55> 'unsigned long' '-'
                  |-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
                  | `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
                  `-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
                    `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
[B11.2] ^ ([B11.23])
  25: DeclRefExpr 0x55a112e36ae8 <lstring.c:81:5> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
h
  26: BinaryOperator 0x55a112e36f20 <lstring.c:81:5, col:58> 'unsigned int' '='
|-DeclRefExpr 0x55a112e36ae8 <col:5> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
`-BinaryOperator 0x55a112e36ef8 <col:9, col:58> 'unsigned int' '^'
  |-ImplicitCastExpr 0x55a112e36ee0 <col:9> 'unsigned int' <LValueToRValue>
  | `-DeclRefExpr 0x55a112e36b10 <col:9> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
  `-ParenExpr 0x55a112e36ec0 <col:13, col:58> 'unsigned int'
    `-BinaryOperator 0x55a112e36e98 <col:14, ./llimits.h:75:31> 'unsigned int' '+'
      |-BinaryOperator 0x55a112e36c88 <lstring.c:81:14, col:26> 'unsigned int' '+'
      | |-ParenExpr 0x55a112e36bc0 <col:14, col:19> 'unsigned int'
      | | `-BinaryOperator 0x55a112e36b98 <col:15, col:18> 'unsigned int' '<<'
      | |   |-ImplicitCastExpr 0x55a112e36b80 <col:15> 'unsigned int' <LValueToRValue>
      | |   | `-DeclRefExpr 0x55a112e36b38 <col:15> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
      | |   `-IntegerLiteral 0x55a112e36b60 <col:18> 'int' 5
      | `-ParenExpr 0x55a112e36c68 <col:21, col:26> 'unsigned int'
      |   `-BinaryOperator 0x55a112e36c40 <col:22, col:25> 'unsigned int' '>>'
      |     |-ImplicitCastExpr 0x55a112e36c28 <col:22> 'unsigned int' <LValueToRValue>
      |     | `-DeclRefExpr 0x55a112e36be0 <col:22> 'unsigned int' lvalue Var 0x55a112e36590 'h' 'unsigned int'
      |     `-IntegerLiteral 0x55a112e36c08 <col:25> 'int' 2
      `-ImplicitCastExpr 0x55a112e36e80 <./llimits.h:75:22, col:31> 'unsigned int' <IntegralCast>
        `-ParenExpr 0x55a112e36e60 <col:22, col:31> 'unsigned char'
          `-CStyleCastExpr 0x55a112e36e38 <col:23, col:30> 'unsigned char' <IntegralCast>
            `-ImplicitCastExpr 0x55a112e36e20 <col:26, col:30> 'char' <LValueToRValue>
              `-ParenExpr 0x55a112e36e00 <col:26, col:30> 'const char' lvalue
                `-ArraySubscriptExpr 0x55a112e36d90 <lstring.c:81:48, col:56> 'const char' lvalue
                  |-ImplicitCastExpr 0x55a112e36d78 <col:48> 'const char *' <LValueToRValue>
                  | `-DeclRefExpr 0x55a112e36cb0 <col:48> 'const char *' lvalue ParmVar 0x55a112e362e8 'str' 'const char *'
                  `-BinaryOperator 0x55a112e36d50 <col:52, col:55> 'unsigned long' '-'
                    |-ImplicitCastExpr 0x55a112e36d20 <col:52> 'size_t':'unsigned long' <LValueToRValue>
                    | `-DeclRefExpr 0x55a112e36cd8 <col:52> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
                    `-ImplicitCastExpr 0x55a112e36d38 <col:55> 'unsigned long' <IntegralCast>
                      `-IntegerLiteral 0x55a112e36d00 <col:55> 'int' 1
[B11.25] = [B11.24]
   Preds (1): B12
   Succs (1): B10

 [B12]
   1: DeclRefExpr 0x55a112e369a0 <lstring.c:80:14> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
l1
   2: ImplicitCastExpr 0x55a112e369f0 <lstring.c:80:14> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e369a0 <col:14> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
[B12.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x55a112e369c8 <lstring.c:80:18> 'size_t':'unsigned long' lvalue Var 0x55a112e36708 'step' 'size_t':'unsigned long'
step
   4: ImplicitCastExpr 0x55a112e36a08 <lstring.c:80:18> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e369c8 <col:18> 'size_t':'unsigned long' lvalue Var 0x55a112e36708 'step' 'size_t':'unsigned long'
[B12.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: BinaryOperator 0x55a112e36a20 <lstring.c:80:14, col:18> 'int' '>='
|-ImplicitCastExpr 0x55a112e369f0 <col:14> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55a112e369a0 <col:14> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e36a08 <col:18> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55a112e369c8 <col:18> 'size_t':'unsigned long' lvalue Var 0x55a112e36708 'step' 'size_t':'unsigned long'
[B12.2] >= [B12.4]
   T: for (...; [B12.5]; ...)
   Preds (2): B10 B13
   Succs (2): B11 B9

 [B13]
   1: DeclStmt 0x55a112e36560 <lstring.c:76:3, col:14>col:13
`-VarDecl 0x55a112e36500 <col:3, col:13> col:13 used o 'GCObject *'
GCObject *o;
   2: DeclRefExpr 0x55a112e365f0 <lstring.c:77:39> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
l
   3: ImplicitCastExpr 0x55a112e36680 <./llimits.h:75:26, col:30> 'size_t':'unsigned long' <LValueToRValue>
`-ParenExpr 0x55a112e36660 <col:26, col:30> 'size_t':'unsigned long' lvalue
  `-DeclRefExpr 0x55a112e365f0 <lstring.c:77:39> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
([B13.2]) (ImplicitCastExpr, LValueToRValue, size_t)
   4: CStyleCastExpr 0x55a112e36698 <./llimits.h:75:23, col:30> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55a112e36680 <col:26, col:30> 'size_t':'unsigned long' <LValueToRValue>
  `-ParenExpr 0x55a112e36660 <col:26, col:30> 'size_t':'unsigned long' lvalue
    `-DeclRefExpr 0x55a112e365f0 <lstring.c:77:39> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
(unsigned int)[B13.3] (CStyleCastExpr, IntegralCast, unsigned int)
   5: DeclStmt 0x55a112e366e0 <lstring.c:77:3, col:41>col:16
`-VarDecl 0x55a112e36590 <col:3, ./llimits.h:75:31> lstring.c:77:16 used h 'unsigned int' cinit
  `-ParenExpr 0x55a112e366c0 <./llimits.h:75:22, col:31> 'unsigned int'
    `-CStyleCastExpr 0x55a112e36698 <col:23, col:30> 'unsigned int' <IntegralCast>
      `-ImplicitCastExpr 0x55a112e36680 <col:26, col:30> 'size_t':'unsigned long' <LValueToRValue>
        `-ParenExpr 0x55a112e36660 <col:26, col:30> 'size_t':'unsigned long' lvalue
          `-DeclRefExpr 0x55a112e365f0 <lstring.c:77:39> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
unsigned int h = ((unsigned int)(l));
   6: DeclRefExpr 0x55a112e36768 <lstring.c:78:18> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
l
   7: ImplicitCastExpr 0x55a112e367b0 <lstring.c:78:18> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e36768 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B13.6] (ImplicitCastExpr, LValueToRValue, size_t)
   8: IntegerLiteral 0x55a112e36790 <lstring.c:78:21> 'int' 5
5
   9: BinaryOperator 0x55a112e367c8 <lstring.c:78:18, col:21> 'size_t':'unsigned long' '>>'
|-ImplicitCastExpr 0x55a112e367b0 <col:18> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55a112e36768 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
`-IntegerLiteral 0x55a112e36790 <col:21> 'int' 5
[B13.7] >> [B13.8]
  10: IntegerLiteral 0x55a112e36810 <lstring.c:78:24> 'int' 1
1
  11: ImplicitCastExpr 0x55a112e36830 <lstring.c:78:24> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55a112e36810 <col:24> 'int' 1
[B13.10] (ImplicitCastExpr, IntegralCast, unsigned long)
  12: BinaryOperator 0x55a112e36848 <lstring.c:78:17, col:24> 'unsigned long' '+'
|-ParenExpr 0x55a112e367f0 <col:17, col:22> 'size_t':'unsigned long'
| `-BinaryOperator 0x55a112e367c8 <col:18, col:21> 'size_t':'unsigned long' '>>'
|   |-ImplicitCastExpr 0x55a112e367b0 <col:18> 'size_t':'unsigned long' <LValueToRValue>
|   | `-DeclRefExpr 0x55a112e36768 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
|   `-IntegerLiteral 0x55a112e36790 <col:21> 'int' 5
`-ImplicitCastExpr 0x55a112e36830 <col:24> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55a112e36810 <col:24> 'int' 1
([B13.9]) + [B13.11]
  13: DeclStmt 0x55a112e36870 <lstring.c:78:3, col:25>col:10
`-VarDecl 0x55a112e36708 <col:3, col:24> col:10 used step 'size_t':'unsigned long' cinit
  `-BinaryOperator 0x55a112e36848 <col:17, col:24> 'unsigned long' '+'
    |-ParenExpr 0x55a112e367f0 <col:17, col:22> 'size_t':'unsigned long'
    | `-BinaryOperator 0x55a112e367c8 <col:18, col:21> 'size_t':'unsigned long' '>>'
    |   |-ImplicitCastExpr 0x55a112e367b0 <col:18> 'size_t':'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a112e36768 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
    |   `-IntegerLiteral 0x55a112e36790 <col:21> 'int' 5
    `-ImplicitCastExpr 0x55a112e36830 <col:24> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55a112e36810 <col:24> 'int' 1
size_t step = (l >> 5) + 1;
  14: DeclStmt 0x55a112e368f8 <lstring.c:79:3, col:12>col:10
`-VarDecl 0x55a112e36898 <col:3, col:10> col:10 used l1 'size_t':'unsigned long'
size_t l1;
  15: DeclRefExpr 0x55a112e36938 <lstring.c:80:11> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
l
  16: ImplicitCastExpr 0x55a112e36960 <lstring.c:80:11> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e36938 <col:11> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B13.15] (ImplicitCastExpr, LValueToRValue, size_t)
  17: DeclRefExpr 0x55a112e36910 <lstring.c:80:8> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
l1
  18: BinaryOperator 0x55a112e36978 <lstring.c:80:8, col:11> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55a112e36910 <col:8> 'size_t':'unsigned long' lvalue Var 0x55a112e36898 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e36960 <col:11> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55a112e36938 <col:11> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e36358 'l' 'size_t':'unsigned long'
[B13.17] = [B13.16]
   Preds (1): B14
   Succs (1): B12

 [B0 (EXIT)]
   Preds (2): B1 B3
