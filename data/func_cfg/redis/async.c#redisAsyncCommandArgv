int redisAsyncCommandArgv(redisAsyncContext *ac, redisCallbackFn *fn, void *privdata, int argc, const char **argv, const size_t *argvlen)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x55bf9a53dc38 <async.c:745:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
__redisAsyncCommand
   2: ImplicitCastExpr 0x55bf9a53dd28 <async.c:745:14> 'int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a53dc38 <col:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t))
   3: DeclRefExpr 0x55bf9a53dc60 <async.c:745:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a53d340 'ac' 'redisAsyncContext *'
ac
   4: ImplicitCastExpr 0x55bf9a53dd90 <async.c:745:34> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53dc60 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a53d340 'ac' 'redisAsyncContext *'
[B1.3] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   5: DeclRefExpr 0x55bf9a53dc88 <async.c:745:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a53d3b0 'fn' 'redisCallbackFn *'
fn
   6: ImplicitCastExpr 0x55bf9a53dda8 <async.c:745:37> 'redisCallbackFn *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53dc88 <col:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a53d3b0 'fn' 'redisCallbackFn *'
[B1.5] (ImplicitCastExpr, LValueToRValue, redisCallbackFn *)
   7: DeclRefExpr 0x55bf9a53dcb0 <async.c:745:40> 'void *' lvalue ParmVar 0x55bf9a53d428 'privdata' 'void *'
privdata
   8: ImplicitCastExpr 0x55bf9a53ddc0 <async.c:745:40> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53dcb0 <col:40> 'void *' lvalue ParmVar 0x55bf9a53d428 'privdata' 'void *'
[B1.7] (ImplicitCastExpr, LValueToRValue, void *)
   9: DeclRefExpr 0x55bf9a53dcd8 <async.c:745:49> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
cmd
  10: ImplicitCastExpr 0x55bf9a53ddd8 <async.c:745:49> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53dcd8 <col:49> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
[B1.9] (ImplicitCastExpr, LValueToRValue, sds)
  11: ImplicitCastExpr 0x55bf9a53ddf0 <async.c:745:49> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55bf9a53ddd8 <col:49> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a53dcd8 <col:49> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
[B1.10] (ImplicitCastExpr, BitCast, const char *)
  12: DeclRefExpr 0x55bf9a53dd00 <async.c:745:53> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
len
  13: ImplicitCastExpr 0x55bf9a53de08 <async.c:745:53> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53dd00 <col:53> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: ImplicitCastExpr 0x55bf9a53de20 <async.c:745:53> 'size_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a53de08 <col:53> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a53dd00 <col:53> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
[B1.13] (ImplicitCastExpr, IntegralCast, size_t)
  15: CallExpr 0x55bf9a53dd40 <async.c:745:14, col:56> 'int'
|-ImplicitCastExpr 0x55bf9a53dd28 <col:14> 'int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a53dc38 <col:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
|-ImplicitCastExpr 0x55bf9a53dd90 <col:34> 'redisAsyncContext *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a53dc60 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a53d340 'ac' 'redisAsyncContext *'
|-ImplicitCastExpr 0x55bf9a53dda8 <col:37> 'redisCallbackFn *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a53dc88 <col:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a53d3b0 'fn' 'redisCallbackFn *'
|-ImplicitCastExpr 0x55bf9a53ddc0 <col:40> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a53dcb0 <col:40> 'void *' lvalue ParmVar 0x55bf9a53d428 'privdata' 'void *'
|-ImplicitCastExpr 0x55bf9a53ddf0 <col:49> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55bf9a53ddd8 <col:49> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55bf9a53dcd8 <col:49> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
`-ImplicitCastExpr 0x55bf9a53de20 <col:53> 'size_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55bf9a53de08 <col:53> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a53dd00 <col:53> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
[B1.2]([B1.4], [B1.6], [B1.8], [B1.11], [B1.14])
  16: DeclRefExpr 0x55bf9a53dc10 <async.c:745:5> 'int' lvalue Var 0x55bf9a53d840 'status' 'int'
status
  17: BinaryOperator 0x55bf9a53de38 <async.c:745:5, col:56> 'int' '='
|-DeclRefExpr 0x55bf9a53dc10 <col:5> 'int' lvalue Var 0x55bf9a53d840 'status' 'int'
`-CallExpr 0x55bf9a53dd40 <col:14, col:56> 'int'
  |-ImplicitCastExpr 0x55bf9a53dd28 <col:14> 'int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a53dc38 <col:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
  |-ImplicitCastExpr 0x55bf9a53dd90 <col:34> 'redisAsyncContext *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a53dc60 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a53d340 'ac' 'redisAsyncContext *'
  |-ImplicitCastExpr 0x55bf9a53dda8 <col:37> 'redisCallbackFn *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a53dc88 <col:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a53d3b0 'fn' 'redisCallbackFn *'
  |-ImplicitCastExpr 0x55bf9a53ddc0 <col:40> 'void *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a53dcb0 <col:40> 'void *' lvalue ParmVar 0x55bf9a53d428 'privdata' 'void *'
  |-ImplicitCastExpr 0x55bf9a53ddf0 <col:49> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x55bf9a53ddd8 <col:49> 'sds':'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55bf9a53dcd8 <col:49> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
  `-ImplicitCastExpr 0x55bf9a53de20 <col:53> 'size_t':'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x55bf9a53de08 <col:53> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a53dd00 <col:53> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
[B1.16] = [B1.15]
  18: DeclRefExpr 0x55bf9a53de60 <async.c:746:5> 'void (sds)' Function 0x55bf9a5afcc0 'sdsfree' 'void (sds)'
sdsfree
  19: ImplicitCastExpr 0x55bf9a53deb0 <async.c:746:5> 'void (*)(sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a53de60 <col:5> 'void (sds)' Function 0x55bf9a5afcc0 'sdsfree' 'void (sds)'
[B1.18] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds))
  20: DeclRefExpr 0x55bf9a53de88 <async.c:746:13> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
cmd
  21: ImplicitCastExpr 0x55bf9a53def8 <async.c:746:13> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53de88 <col:13> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
[B1.20] (ImplicitCastExpr, LValueToRValue, sds)
  22: CallExpr 0x55bf9a53dec8 <async.c:746:5, col:16> 'void'
|-ImplicitCastExpr 0x55bf9a53deb0 <col:5> 'void (*)(sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a53de60 <col:5> 'void (sds)' Function 0x55bf9a5afcc0 'sdsfree' 'void (sds)'
`-ImplicitCastExpr 0x55bf9a53def8 <col:13> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a53de88 <col:13> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
[B1.19]([B1.21])
  23: DeclRefExpr 0x55bf9a53df10 <async.c:747:12> 'int' lvalue Var 0x55bf9a53d840 'status' 'int'
status
  24: ImplicitCastExpr 0x55bf9a53df38 <async.c:747:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53df10 <col:12> 'int' lvalue Var 0x55bf9a53d840 'status' 'int'
[B1.23] (ImplicitCastExpr, LValueToRValue, int)
  25: ReturnStmt 0x55bf9a53df50 <async.c:747:5, col:12>
`-ImplicitCastExpr 0x55bf9a53df38 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a53df10 <col:12> 'int' lvalue Var 0x55bf9a53d840 'status' 'int'
return [B1.24];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55bf9a53db80 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x55bf9a53dba0 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55bf9a53db80 <col:20> 'int' 1
-[B2.1]
   3: ReturnStmt 0x55bf9a53dbc0 <async.c:744:9, ./read.h:37:20>
`-UnaryOperator 0x55bf9a53dba0 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55bf9a53db80 <col:20> 'int' 1
return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclStmt 0x55bf9a53d780 <async.c:739:5, col:12>col:9
`-VarDecl 0x55bf9a53d720 <col:5, col:9> col:9 used cmd 'sds':'char *'
sds cmd;
   2: DeclStmt 0x55bf9a53d810 <async.c:740:5, col:12>col:9
`-VarDecl 0x55bf9a53d7b0 <col:5, col:9> col:9 used len 'int'
int len;
   3: DeclStmt 0x55bf9a53d8a0 <async.c:741:5, col:15>col:9
`-VarDecl 0x55bf9a53d840 <col:5, col:9> col:9 used status 'int'
int status;
   4: DeclRefExpr 0x55bf9a53d8e0 <async.c:742:11> 'int (sds *, int, const char **, const size_t *)' Function 0x55bf9a5b87d8 'redisFormatSdsCommandArgv' 'int (sds *, int, const char **, const size_t *)'
redisFormatSdsCommandArgv
   5: ImplicitCastExpr 0x55bf9a53da28 <async.c:742:11> 'int (*)(sds *, int, const char **, const size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a53d8e0 <col:11> 'int (sds *, int, const char **, const size_t *)' Function 0x55bf9a5b87d8 'redisFormatSdsCommandArgv' 'int (sds *, int, const char **, const size_t *)'
[B3.4] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(sds *, int, const char **, const size_t *))
   6: DeclRefExpr 0x55bf9a53d908 <async.c:742:38> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
cmd
   7: UnaryOperator 0x55bf9a53d930 <async.c:742:37, col:38> 'sds *' prefix '&'
`-DeclRefExpr 0x55bf9a53d908 <col:38> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
&[B3.6]
   8: DeclRefExpr 0x55bf9a53d950 <async.c:742:42> 'int' lvalue ParmVar 0x55bf9a53d4a0 'argc' 'int'
argc
   9: ImplicitCastExpr 0x55bf9a53da88 <async.c:742:42> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53d950 <col:42> 'int' lvalue ParmVar 0x55bf9a53d4a0 'argc' 'int'
[B3.8] (ImplicitCastExpr, LValueToRValue, int)
  10: DeclRefExpr 0x55bf9a53d978 <async.c:742:47> 'const char **' lvalue ParmVar 0x55bf9a53d518 'argv' 'const char **'
argv
  11: ImplicitCastExpr 0x55bf9a53daa0 <async.c:742:47> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53d978 <col:47> 'const char **' lvalue ParmVar 0x55bf9a53d518 'argv' 'const char **'
[B3.10] (ImplicitCastExpr, LValueToRValue, const char **)
  12: DeclRefExpr 0x55bf9a53d9a0 <async.c:742:52> 'const size_t *' lvalue ParmVar 0x55bf9a53d588 'argvlen' 'const size_t *'
argvlen
  13: ImplicitCastExpr 0x55bf9a53dab8 <async.c:742:52> 'const size_t *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53d9a0 <col:52> 'const size_t *' lvalue ParmVar 0x55bf9a53d588 'argvlen' 'const size_t *'
[B3.12] (ImplicitCastExpr, LValueToRValue, const size_t *)
  14: CallExpr 0x55bf9a53da40 <async.c:742:11, col:59> 'int'
|-ImplicitCastExpr 0x55bf9a53da28 <col:11> 'int (*)(sds *, int, const char **, const size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a53d8e0 <col:11> 'int (sds *, int, const char **, const size_t *)' Function 0x55bf9a5b87d8 'redisFormatSdsCommandArgv' 'int (sds *, int, const char **, const size_t *)'
|-UnaryOperator 0x55bf9a53d930 <col:37, col:38> 'sds *' prefix '&'
| `-DeclRefExpr 0x55bf9a53d908 <col:38> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
|-ImplicitCastExpr 0x55bf9a53da88 <col:42> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a53d950 <col:42> 'int' lvalue ParmVar 0x55bf9a53d4a0 'argc' 'int'
|-ImplicitCastExpr 0x55bf9a53daa0 <col:47> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a53d978 <col:47> 'const char **' lvalue ParmVar 0x55bf9a53d518 'argv' 'const char **'
`-ImplicitCastExpr 0x55bf9a53dab8 <col:52> 'const size_t *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a53d9a0 <col:52> 'const size_t *' lvalue ParmVar 0x55bf9a53d588 'argvlen' 'const size_t *'
[B3.5]([B3.7], [B3.9], [B3.11], [B3.13])
  15: DeclRefExpr 0x55bf9a53d8b8 <async.c:742:5> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
len
  16: BinaryOperator 0x55bf9a53dad0 <async.c:742:5, col:59> 'int' '='
|-DeclRefExpr 0x55bf9a53d8b8 <col:5> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
`-CallExpr 0x55bf9a53da40 <col:11, col:59> 'int'
  |-ImplicitCastExpr 0x55bf9a53da28 <col:11> 'int (*)(sds *, int, const char **, const size_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a53d8e0 <col:11> 'int (sds *, int, const char **, const size_t *)' Function 0x55bf9a5b87d8 'redisFormatSdsCommandArgv' 'int (sds *, int, const char **, const size_t *)'
  |-UnaryOperator 0x55bf9a53d930 <col:37, col:38> 'sds *' prefix '&'
  | `-DeclRefExpr 0x55bf9a53d908 <col:38> 'sds':'char *' lvalue Var 0x55bf9a53d720 'cmd' 'sds':'char *'
  |-ImplicitCastExpr 0x55bf9a53da88 <col:42> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a53d950 <col:42> 'int' lvalue ParmVar 0x55bf9a53d4a0 'argc' 'int'
  |-ImplicitCastExpr 0x55bf9a53daa0 <col:47> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a53d978 <col:47> 'const char **' lvalue ParmVar 0x55bf9a53d518 'argv' 'const char **'
  `-ImplicitCastExpr 0x55bf9a53dab8 <col:52> 'const size_t *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a53d9a0 <col:52> 'const size_t *' lvalue ParmVar 0x55bf9a53d588 'argvlen' 'const size_t *'
[B3.15] = [B3.14]
  17: DeclRefExpr 0x55bf9a53daf8 <async.c:743:9> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
len
  18: ImplicitCastExpr 0x55bf9a53db40 <async.c:743:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a53daf8 <col:9> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
[B3.17] (ImplicitCastExpr, LValueToRValue, int)
  19: IntegerLiteral 0x55bf9a53db20 <async.c:743:15> 'int' 0
0
  20: BinaryOperator 0x55bf9a53db58 <async.c:743:9, col:15> 'int' '<'
|-ImplicitCastExpr 0x55bf9a53db40 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a53daf8 <col:9> 'int' lvalue Var 0x55bf9a53d7b0 'len' 'int'
`-IntegerLiteral 0x55bf9a53db20 <col:15> 'int' 0
[B3.18] < [B3.19]
   T: if [B3.20]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
