static int __redisAsyncCommand(redisAsyncContext *ac, redisCallbackFn *fn, void *privdata, const char *cmd, size_t len)
 [B44 (ENTRY)]
   Succs (1): B43

 [B1]
   1: IntegerLiteral 0x55bf9a6281b8 <./read.h:38:18> 'int' 0
0
   2: ReturnStmt 0x55bf9a6281d8 <async.c:711:5, ./read.h:38:18>
`-IntegerLiteral 0x55bf9a6281b8 <col:18> 'int' 0
return [B1.1];
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55bf9a628178 <./async_private.h:47:14> 'int' 0
0
   T: do ... while [B2.1]
   Preds (2): B3 B4
   Succs (2): NULL B1

 [B3]
   1: DeclRefExpr 0x55bf9a627f20 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   2: ImplicitCastExpr 0x55bf9a627f68 <./async_private.h:46:33, col:37> 'redisAsyncContext *' <LValueToRValue>
`-ParenExpr 0x55bf9a627f48 <col:33, col:37> 'redisAsyncContext *' lvalue
  `-DeclRefExpr 0x55bf9a627f20 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   3: MemberExpr 0x55bf9a627f80 <./async_private.h:46:33, col:40> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
`-ImplicitCastExpr 0x55bf9a627f68 <col:33, col:37> 'redisAsyncContext *' <LValueToRValue>
  `-ParenExpr 0x55bf9a627f48 <col:33, col:37> 'redisAsyncContext *' lvalue
    `-DeclRefExpr 0x55bf9a627f20 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B3.2]->ev
   4: MemberExpr 0x55bf9a627fb8 <./async_private.h:46:33, col:43> 'void (*)(void *)' lvalue .addWrite 0x55bf9a5c3c60
`-MemberExpr 0x55bf9a627f80 <col:33, col:40> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
  `-ImplicitCastExpr 0x55bf9a627f68 <col:33, col:37> 'redisAsyncContext *' <LValueToRValue>
    `-ParenExpr 0x55bf9a627f48 <col:33, col:37> 'redisAsyncContext *' lvalue
      `-DeclRefExpr 0x55bf9a627f20 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B3.3].addWrite
   5: ImplicitCastExpr 0x55bf9a6280c0 <./async_private.h:46:33, col:43> 'void (*)(void *)' <LValueToRValue>
`-MemberExpr 0x55bf9a627fb8 <col:33, col:43> 'void (*)(void *)' lvalue .addWrite 0x55bf9a5c3c60
  `-MemberExpr 0x55bf9a627f80 <col:33, col:40> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
    `-ImplicitCastExpr 0x55bf9a627f68 <col:33, col:37> 'redisAsyncContext *' <LValueToRValue>
      `-ParenExpr 0x55bf9a627f48 <col:33, col:37> 'redisAsyncContext *' lvalue
        `-DeclRefExpr 0x55bf9a627f20 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B3.4] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   6: DeclRefExpr 0x55bf9a627ff0 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   7: ImplicitCastExpr 0x55bf9a628038 <./async_private.h:46:52, col:56> 'redisAsyncContext *' <LValueToRValue>
`-ParenExpr 0x55bf9a628018 <col:52, col:56> 'redisAsyncContext *' lvalue
  `-DeclRefExpr 0x55bf9a627ff0 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
([B3.6]) (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   8: MemberExpr 0x55bf9a628050 <./async_private.h:46:52, col:59> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
`-ImplicitCastExpr 0x55bf9a628038 <col:52, col:56> 'redisAsyncContext *' <LValueToRValue>
  `-ParenExpr 0x55bf9a628018 <col:52, col:56> 'redisAsyncContext *' lvalue
    `-DeclRefExpr 0x55bf9a627ff0 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B3.7]->ev
   9: MemberExpr 0x55bf9a628088 <./async_private.h:46:52, col:62> 'void *' lvalue .data 0x55bf9a5c2918
`-MemberExpr 0x55bf9a628050 <col:52, col:59> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
  `-ImplicitCastExpr 0x55bf9a628038 <col:52, col:56> 'redisAsyncContext *' <LValueToRValue>
    `-ParenExpr 0x55bf9a628018 <col:52, col:56> 'redisAsyncContext *' lvalue
      `-DeclRefExpr 0x55bf9a627ff0 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B3.8].data
  10: ImplicitCastExpr 0x55bf9a628108 <./async_private.h:46:52, col:62> 'void *' <LValueToRValue>
`-MemberExpr 0x55bf9a628088 <col:52, col:62> 'void *' lvalue .data 0x55bf9a5c2918
  `-MemberExpr 0x55bf9a628050 <col:52, col:59> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
    `-ImplicitCastExpr 0x55bf9a628038 <col:52, col:56> 'redisAsyncContext *' <LValueToRValue>
      `-ParenExpr 0x55bf9a628018 <col:52, col:56> 'redisAsyncContext *' lvalue
        `-DeclRefExpr 0x55bf9a627ff0 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B3.9] (ImplicitCastExpr, LValueToRValue, void *)
  11: CallExpr 0x55bf9a6280d8 <./async_private.h:46:33, col:66> 'void'
|-ImplicitCastExpr 0x55bf9a6280c0 <col:33, col:43> 'void (*)(void *)' <LValueToRValue>
| `-MemberExpr 0x55bf9a627fb8 <col:33, col:43> 'void (*)(void *)' lvalue .addWrite 0x55bf9a5c3c60
|   `-MemberExpr 0x55bf9a627f80 <col:33, col:40> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
|     `-ImplicitCastExpr 0x55bf9a627f68 <col:33, col:37> 'redisAsyncContext *' <LValueToRValue>
|       `-ParenExpr 0x55bf9a627f48 <col:33, col:37> 'redisAsyncContext *' lvalue
|         `-DeclRefExpr 0x55bf9a627f20 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
`-ImplicitCastExpr 0x55bf9a628108 <./async_private.h:46:52, col:62> 'void *' <LValueToRValue>
  `-MemberExpr 0x55bf9a628088 <col:52, col:62> 'void *' lvalue .data 0x55bf9a5c2918
    `-MemberExpr 0x55bf9a628050 <col:52, col:59> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
      `-ImplicitCastExpr 0x55bf9a628038 <col:52, col:56> 'redisAsyncContext *' <LValueToRValue>
        `-ParenExpr 0x55bf9a628018 <col:52, col:56> 'redisAsyncContext *' lvalue
          `-DeclRefExpr 0x55bf9a627ff0 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B3.5]([B3.10])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55bf9a627d88 <./async_private.h:45:9> 'void (redisAsyncContext *)' Function 0x55bf9a5fcbf8 'refreshTimeout' 'void (redisAsyncContext *)'
refreshTimeout
   2: ImplicitCastExpr 0x55bf9a627dd8 <./async_private.h:45:9> 'void (*)(redisAsyncContext *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a627d88 <col:9> 'void (redisAsyncContext *)' Function 0x55bf9a5fcbf8 'refreshTimeout' 'void (redisAsyncContext *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(redisAsyncContext *))
   3: DeclRefExpr 0x55bf9a627db0 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   4: ImplicitCastExpr 0x55bf9a627e20 <async.c:709:19> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627db0 <col:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B4.3] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   5: CallExpr 0x55bf9a627df0 <./async_private.h:45:9, col:27> 'void'
|-ImplicitCastExpr 0x55bf9a627dd8 <col:9> 'void (*)(redisAsyncContext *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a627d88 <col:9> 'void (redisAsyncContext *)' Function 0x55bf9a5fcbf8 'refreshTimeout' 'void (redisAsyncContext *)'
`-ImplicitCastExpr 0x55bf9a627e20 <async.c:709:19> 'redisAsyncContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a627db0 <col:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B4.2]([B4.4])
   6: DeclRefExpr 0x55bf9a627e38 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   7: ImplicitCastExpr 0x55bf9a627e80 <./async_private.h:46:13, col:17> 'redisAsyncContext *' <LValueToRValue>
`-ParenExpr 0x55bf9a627e60 <col:13, col:17> 'redisAsyncContext *' lvalue
  `-DeclRefExpr 0x55bf9a627e38 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
([B4.6]) (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   8: MemberExpr 0x55bf9a627e98 <./async_private.h:46:13, col:20> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
`-ImplicitCastExpr 0x55bf9a627e80 <col:13, col:17> 'redisAsyncContext *' <LValueToRValue>
  `-ParenExpr 0x55bf9a627e60 <col:13, col:17> 'redisAsyncContext *' lvalue
    `-DeclRefExpr 0x55bf9a627e38 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B4.7]->ev
   9: MemberExpr 0x55bf9a627ed0 <./async_private.h:46:13, col:23> 'void (*)(void *)' lvalue .addWrite 0x55bf9a5c3c60
`-MemberExpr 0x55bf9a627e98 <col:13, col:20> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
  `-ImplicitCastExpr 0x55bf9a627e80 <col:13, col:17> 'redisAsyncContext *' <LValueToRValue>
    `-ParenExpr 0x55bf9a627e60 <col:13, col:17> 'redisAsyncContext *' lvalue
      `-DeclRefExpr 0x55bf9a627e38 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B4.8].addWrite
  10: ImplicitCastExpr 0x55bf9a627f08 <./async_private.h:46:13, col:23> 'void (*)(void *)' <LValueToRValue>
`-MemberExpr 0x55bf9a627ed0 <col:13, col:23> 'void (*)(void *)' lvalue .addWrite 0x55bf9a5c3c60
  `-MemberExpr 0x55bf9a627e98 <col:13, col:20> 'struct (anonymous struct at ./async.h:75:5)':'struct redisAsyncContext::(anonymous at ./async.h:75:5)' lvalue ->ev 0x55bf9a5c4170
    `-ImplicitCastExpr 0x55bf9a627e80 <col:13, col:17> 'redisAsyncContext *' <LValueToRValue>
      `-ParenExpr 0x55bf9a627e60 <col:13, col:17> 'redisAsyncContext *' lvalue
        `-DeclRefExpr 0x55bf9a627e38 <async.c:709:19> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B4.9] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   T: if [B4.10]
   Preds (2): B5 B6
   Succs (2): B3 B2

 [B5]
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55bf9a627be8 <async.c:706:5> 'int (redisContext *, const char *, size_t)' Function 0x55bf9a5fd840 '__redisAppendCommand' 'int (redisContext *, const char *, size_t)'
__redisAppendCommand
   2: ImplicitCastExpr 0x55bf9a627ce8 <async.c:706:5> 'int (*)(redisContext *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a627be8 <col:5> 'int (redisContext *, const char *, size_t)' Function 0x55bf9a5fd840 '__redisAppendCommand' 'int (redisContext *, const char *, size_t)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisContext *, const char *, size_t))
   3: DeclRefExpr 0x55bf9a627c10 <async.c:706:26> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x55bf9a627d40 <async.c:706:26> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627c10 <col:26> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B6.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: DeclRefExpr 0x55bf9a627c38 <async.c:706:28> 'const char *' lvalue ParmVar 0x55bf9a6224e8 'cmd' 'const char *'
cmd
   6: ImplicitCastExpr 0x55bf9a627d58 <async.c:706:28> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627c38 <col:28> 'const char *' lvalue ParmVar 0x55bf9a6224e8 'cmd' 'const char *'
[B6.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: DeclRefExpr 0x55bf9a627c60 <async.c:706:32> 'size_t':'unsigned long' lvalue ParmVar 0x55bf9a622558 'len' 'size_t':'unsigned long'
len
   8: ImplicitCastExpr 0x55bf9a627d70 <async.c:706:32> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627c60 <col:32> 'size_t':'unsigned long' lvalue ParmVar 0x55bf9a622558 'len' 'size_t':'unsigned long'
[B6.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: CallExpr 0x55bf9a627d00 <async.c:706:5, col:35> 'int'
|-ImplicitCastExpr 0x55bf9a627ce8 <col:5> 'int (*)(redisContext *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a627be8 <col:5> 'int (redisContext *, const char *, size_t)' Function 0x55bf9a5fd840 '__redisAppendCommand' 'int (redisContext *, const char *, size_t)'
|-ImplicitCastExpr 0x55bf9a627d40 <col:26> 'redisContext *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a627c10 <col:26> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
|-ImplicitCastExpr 0x55bf9a627d58 <col:28> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a627c38 <col:28> 'const char *' lvalue ParmVar 0x55bf9a6224e8 'cmd' 'const char *'
`-ImplicitCastExpr 0x55bf9a627d70 <col:32> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a627c60 <col:32> 'size_t':'unsigned long' lvalue ParmVar 0x55bf9a622558 'len' 'size_t':'unsigned long'
[B6.2]([B6.4], [B6.6], [B6.8])
   Preds (5): B7 B8 B10 B13 B23
   Succs (1): B4

 [B7]
   1: DeclRefExpr 0x55bf9a627980 <async.c:703:13> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
__redisPushCallback
   2: ImplicitCastExpr 0x55bf9a627aa0 <async.c:703:13> 'int (*)(redisCallbackList *, redisCallback *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a627980 <col:13> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisCallbackList *, redisCallback *))
   3: DeclRefExpr 0x55bf9a6279a8 <async.c:703:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   4: ImplicitCastExpr 0x55bf9a6279d0 <async.c:703:34> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6279a8 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B7.3] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   5: MemberExpr 0x55bf9a6279e8 <async.c:703:34, col:38> 'redisCallbackList':'struct redisCallbackList' lvalue ->replies 0x55bf9a5c4360
`-ImplicitCastExpr 0x55bf9a6279d0 <col:34> 'redisAsyncContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a6279a8 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B7.4]->replies
   6: UnaryOperator 0x55bf9a627a20 <async.c:703:33, col:38> 'redisCallbackList *' prefix '&'
`-MemberExpr 0x55bf9a6279e8 <col:34, col:38> 'redisCallbackList':'struct redisCallbackList' lvalue ->replies 0x55bf9a5c4360
  `-ImplicitCastExpr 0x55bf9a6279d0 <col:34> 'redisAsyncContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a6279a8 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
&[B7.5]
   7: DeclRefExpr 0x55bf9a627a40 <async.c:703:47> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
   8: UnaryOperator 0x55bf9a627a68 <async.c:703:46, col:47> 'redisCallback *' prefix '&'
`-DeclRefExpr 0x55bf9a627a40 <col:47> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
&[B7.7]
   9: CallExpr 0x55bf9a627ab8 <async.c:703:13, col:49> 'int'
|-ImplicitCastExpr 0x55bf9a627aa0 <col:13> 'int (*)(redisCallbackList *, redisCallback *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a627980 <col:13> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
|-UnaryOperator 0x55bf9a627a20 <col:33, col:38> 'redisCallbackList *' prefix '&'
| `-MemberExpr 0x55bf9a6279e8 <col:34, col:38> 'redisCallbackList':'struct redisCallbackList' lvalue ->replies 0x55bf9a5c4360
|   `-ImplicitCastExpr 0x55bf9a6279d0 <col:34> 'redisAsyncContext *' <LValueToRValue>
|     `-DeclRefExpr 0x55bf9a6279a8 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
`-UnaryOperator 0x55bf9a627a68 <col:46, col:47> 'redisCallback *' prefix '&'
  `-DeclRefExpr 0x55bf9a627a40 <col:47> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B7.2]([B7.6], [B7.8])
   Preds (1): B9
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x55bf9a6277f0 <async.c:701:13> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
__redisPushCallback
   2: ImplicitCastExpr 0x55bf9a627930 <async.c:701:13> 'int (*)(redisCallbackList *, redisCallback *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a6277f0 <col:13> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisCallbackList *, redisCallback *))
   3: DeclRefExpr 0x55bf9a627818 <async.c:701:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   4: ImplicitCastExpr 0x55bf9a627840 <async.c:701:34> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627818 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B8.3] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   5: MemberExpr 0x55bf9a627858 <async.c:701:34, col:38> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
`-ImplicitCastExpr 0x55bf9a627840 <col:34> 'redisAsyncContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a627818 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B8.4]->sub
   6: MemberExpr 0x55bf9a627890 <async.c:701:34, col:42> 'redisCallbackList':'struct redisCallbackList' lvalue .invalid 0x55bf9a5c4670
`-MemberExpr 0x55bf9a627858 <col:34, col:38> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
  `-ImplicitCastExpr 0x55bf9a627840 <col:34> 'redisAsyncContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a627818 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B8.5].invalid
   7: UnaryOperator 0x55bf9a6278c8 <async.c:701:33, col:42> 'redisCallbackList *' prefix '&'
`-MemberExpr 0x55bf9a627890 <col:34, col:42> 'redisCallbackList':'struct redisCallbackList' lvalue .invalid 0x55bf9a5c4670
  `-MemberExpr 0x55bf9a627858 <col:34, col:38> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
    `-ImplicitCastExpr 0x55bf9a627840 <col:34> 'redisAsyncContext *' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a627818 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
&[B8.6]
   8: DeclRefExpr 0x55bf9a6278e8 <async.c:701:51> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
   9: UnaryOperator 0x55bf9a627910 <async.c:701:50, col:51> 'redisCallback *' prefix '&'
`-DeclRefExpr 0x55bf9a6278e8 <col:51> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
&[B8.8]
  10: CallExpr 0x55bf9a627948 <async.c:701:13, col:53> 'int'
|-ImplicitCastExpr 0x55bf9a627930 <col:13> 'int (*)(redisCallbackList *, redisCallback *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a6277f0 <col:13> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
|-UnaryOperator 0x55bf9a6278c8 <col:33, col:42> 'redisCallbackList *' prefix '&'
| `-MemberExpr 0x55bf9a627890 <col:34, col:42> 'redisCallbackList':'struct redisCallbackList' lvalue .invalid 0x55bf9a5c4670
|   `-MemberExpr 0x55bf9a627858 <col:34, col:38> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
|     `-ImplicitCastExpr 0x55bf9a627840 <col:34> 'redisAsyncContext *' <LValueToRValue>
|       `-DeclRefExpr 0x55bf9a627818 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
`-UnaryOperator 0x55bf9a627910 <col:50, col:51> 'redisCallback *' prefix '&'
  `-DeclRefExpr 0x55bf9a6278e8 <col:51> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B8.2]([B8.7], [B8.9])
   Preds (1): B9
   Succs (1): B6

 [B9]
   1: DeclRefExpr 0x55bf9a627718 <async.c:698:13> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
c
   2: ImplicitCastExpr 0x55bf9a627740 <async.c:698:13> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627718 <col:13> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B9.1] (ImplicitCastExpr, LValueToRValue, redisContext *)
   3: MemberExpr 0x55bf9a627758 <async.c:698:13, col:16> 'int' lvalue ->flags 0x55bf9a5bbd48
`-ImplicitCastExpr 0x55bf9a627740 <col:13> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a627718 <col:13> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B9.2]->flags
   4: ImplicitCastExpr 0x55bf9a6277b0 <async.c:698:13, col:16> 'int' <LValueToRValue>
`-MemberExpr 0x55bf9a627758 <col:13, col:16> 'int' lvalue ->flags 0x55bf9a5bbd48
  `-ImplicitCastExpr 0x55bf9a627740 <col:13> 'redisContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a627718 <col:13> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B9.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55bf9a627790 <./hiredis.h:73:26> 'int' 32
32
   6: BinaryOperator 0x55bf9a6277c8 <async.c:698:13, ./hiredis.h:73:26> 'int' '&'
|-ImplicitCastExpr 0x55bf9a6277b0 <async.c:698:13, col:16> 'int' <LValueToRValue>
| `-MemberExpr 0x55bf9a627758 <col:13, col:16> 'int' lvalue ->flags 0x55bf9a5bbd48
|   `-ImplicitCastExpr 0x55bf9a627740 <col:13> 'redisContext *' <LValueToRValue>
|     `-DeclRefExpr 0x55bf9a627718 <col:13> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
`-IntegerLiteral 0x55bf9a627790 <./hiredis.h:73:26> 'int' 32
[B9.4] & [B9.5]
   T: if [B9.6]
   Preds (1): B11
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x55bf9a6274d0 <async.c:695:10> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
c
   2: ImplicitCastExpr 0x55bf9a6274f8 <async.c:695:10> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6274d0 <col:10> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B10.1] (ImplicitCastExpr, LValueToRValue, redisContext *)
   3: MemberExpr 0x55bf9a627510 <async.c:695:10, col:13> 'int' lvalue ->flags 0x55bf9a5bbd48
`-ImplicitCastExpr 0x55bf9a6274f8 <col:10> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a6274d0 <col:10> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B10.2]->flags
   4: IntegerLiteral 0x55bf9a627548 <./hiredis.h:76:26> 'int' 64
64
   5: CompoundAssignOperator 0x55bf9a627568 <async.c:695:10, ./hiredis.h:76:26> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x55bf9a627510 <async.c:695:10, col:13> 'int' lvalue ->flags 0x55bf9a5bbd48
| `-ImplicitCastExpr 0x55bf9a6274f8 <col:10> 'redisContext *' <LValueToRValue>
|   `-DeclRefExpr 0x55bf9a6274d0 <col:10> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
`-IntegerLiteral 0x55bf9a627548 <./hiredis.h:76:26> 'int' 64
[B10.3] |= [B10.4]
   6: DeclRefExpr 0x55bf9a6275a0 <async.c:696:10> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
__redisPushCallback
   7: ImplicitCastExpr 0x55bf9a6276a8 <async.c:696:10> 'int (*)(redisCallbackList *, redisCallback *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a6275a0 <col:10> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
[B10.6] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisCallbackList *, redisCallback *))
   8: DeclRefExpr 0x55bf9a6275c8 <async.c:696:31> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   9: ImplicitCastExpr 0x55bf9a6275f0 <async.c:696:31> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6275c8 <col:31> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B10.8] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
  10: MemberExpr 0x55bf9a627608 <async.c:696:31, col:35> 'redisCallbackList':'struct redisCallbackList' lvalue ->replies 0x55bf9a5c4360
`-ImplicitCastExpr 0x55bf9a6275f0 <col:31> 'redisAsyncContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a6275c8 <col:31> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B10.9]->replies
  11: UnaryOperator 0x55bf9a627640 <async.c:696:30, col:35> 'redisCallbackList *' prefix '&'
`-MemberExpr 0x55bf9a627608 <col:31, col:35> 'redisCallbackList':'struct redisCallbackList' lvalue ->replies 0x55bf9a5c4360
  `-ImplicitCastExpr 0x55bf9a6275f0 <col:31> 'redisAsyncContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a6275c8 <col:31> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
&[B10.10]
  12: DeclRefExpr 0x55bf9a627660 <async.c:696:44> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
  13: UnaryOperator 0x55bf9a627688 <async.c:696:43, col:44> 'redisCallback *' prefix '&'
`-DeclRefExpr 0x55bf9a627660 <col:44> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
&[B10.12]
  14: CallExpr 0x55bf9a6276c0 <async.c:696:10, col:46> 'int'
|-ImplicitCastExpr 0x55bf9a6276a8 <col:10> 'int (*)(redisCallbackList *, redisCallback *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a6275a0 <col:10> 'int (redisCallbackList *, redisCallback *)' Function 0x55bf9a609aa8 '__redisPushCallback' 'int (redisCallbackList *, redisCallback *)'
|-UnaryOperator 0x55bf9a627640 <col:30, col:35> 'redisCallbackList *' prefix '&'
| `-MemberExpr 0x55bf9a627608 <col:31, col:35> 'redisCallbackList':'struct redisCallbackList' lvalue ->replies 0x55bf9a5c4360
|   `-ImplicitCastExpr 0x55bf9a6275f0 <col:31> 'redisAsyncContext *' <LValueToRValue>
|     `-DeclRefExpr 0x55bf9a6275c8 <col:31> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
`-UnaryOperator 0x55bf9a627688 <col:43, col:44> 'redisCallback *' prefix '&'
  `-DeclRefExpr 0x55bf9a627660 <col:44> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B10.7]([B10.11], [B10.13])
   Preds (1): B11
   Succs (1): B6

 [B11]
   1: DeclRefExpr 0x55bf9a627340 <async.c:693:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
strncasecmp
   2: ImplicitCastExpr 0x55bf9a6273e8 <async.c:693:16> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a627340 <col:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *, size_t))
   3: DeclRefExpr 0x55bf9a627368 <async.c:693:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   4: ImplicitCastExpr 0x55bf9a627440 <async.c:693:28> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627368 <col:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
[B11.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x55bf9a627390 <async.c:693:33> 'const char [10]' lvalue "monitor\r\n"
"monitor\r\n"
   6: ImplicitCastExpr 0x55bf9a627458 <async.c:693:33> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55bf9a627390 <col:33> 'const char [10]' lvalue "monitor\r\n"
[B11.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55bf9a6273c8 <async.c:693:47> 'int' 9
9
   8: ImplicitCastExpr 0x55bf9a627470 <async.c:693:47> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55bf9a6273c8 <col:47> 'int' 9
[B11.7] (ImplicitCastExpr, IntegralCast, size_t)
   9: CallExpr 0x55bf9a627400 <async.c:693:16, col:48> 'int'
|-ImplicitCastExpr 0x55bf9a6273e8 <col:16> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a627340 <col:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
|-ImplicitCastExpr 0x55bf9a627440 <col:28> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a627368 <col:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|-ImplicitCastExpr 0x55bf9a627458 <col:33> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55bf9a627390 <col:33> 'const char [10]' lvalue "monitor\r\n"
`-ImplicitCastExpr 0x55bf9a627470 <col:47> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55bf9a6273c8 <col:47> 'int' 9
[B11.2]([B11.4], [B11.6], [B11.8])
  10: IntegerLiteral 0x55bf9a627488 <async.c:693:53> 'int' 0
0
  11: BinaryOperator 0x55bf9a6274a8 <async.c:693:16, col:53> 'int' '=='
|-CallExpr 0x55bf9a627400 <col:16, col:48> 'int'
| |-ImplicitCastExpr 0x55bf9a6273e8 <col:16> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55bf9a627340 <col:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
| |-ImplicitCastExpr 0x55bf9a627440 <col:28> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55bf9a627368 <col:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
| |-ImplicitCastExpr 0x55bf9a627458 <col:33> 'const char *' <ArrayToPointerDecay>
| | `-StringLiteral 0x55bf9a627390 <col:33> 'const char [10]' lvalue "monitor\r\n"
| `-ImplicitCastExpr 0x55bf9a627470 <col:47> 'size_t':'unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x55bf9a6273c8 <col:47> 'int' 9
`-IntegerLiteral 0x55bf9a627488 <col:53> 'int' 0
[B11.9] == [B11.10]
   T: if [B11.11]
   Preds (1): B14
   Succs (2): B10 B9

 [B12]
   1: IntegerLiteral 0x55bf9a627298 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x55bf9a6272b8 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55bf9a627298 <col:20> 'int' 1
-[B12.1]
   3: ReturnStmt 0x55bf9a6272d8 <async.c:688:45, ./read.h:37:20>
`-UnaryOperator 0x55bf9a6272b8 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55bf9a627298 <col:20> 'int' 1
return [B12.2];
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclRefExpr 0x55bf9a627180 <async.c:688:15> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
c
   2: ImplicitCastExpr 0x55bf9a6271a8 <async.c:688:15> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627180 <col:15> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B13.1] (ImplicitCastExpr, LValueToRValue, redisContext *)
   3: MemberExpr 0x55bf9a6271c0 <async.c:688:15, col:18> 'int' lvalue ->flags 0x55bf9a5bbd48
`-ImplicitCastExpr 0x55bf9a6271a8 <col:15> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a627180 <col:15> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B13.2]->flags
   4: ImplicitCastExpr 0x55bf9a627218 <async.c:688:15, col:18> 'int' <LValueToRValue>
`-MemberExpr 0x55bf9a6271c0 <col:15, col:18> 'int' lvalue ->flags 0x55bf9a5bbd48
  `-ImplicitCastExpr 0x55bf9a6271a8 <col:15> 'redisContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a627180 <col:15> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B13.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55bf9a6271f8 <./hiredis.h:73:26> 'int' 32
32
   6: BinaryOperator 0x55bf9a627230 <async.c:688:15, ./hiredis.h:73:26> 'int' '&'
|-ImplicitCastExpr 0x55bf9a627218 <async.c:688:15, col:18> 'int' <LValueToRValue>
| `-MemberExpr 0x55bf9a6271c0 <col:15, col:18> 'int' lvalue ->flags 0x55bf9a5bbd48
|   `-ImplicitCastExpr 0x55bf9a6271a8 <col:15> 'redisContext *' <LValueToRValue>
|     `-DeclRefExpr 0x55bf9a627180 <col:15> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
`-IntegerLiteral 0x55bf9a6271f8 <./hiredis.h:73:26> 'int' 32
[B13.4] & [B13.5]
   7: UnaryOperator 0x55bf9a627278 <async.c:688:13, col:42> 'int' prefix '!'
`-ParenExpr 0x55bf9a627258 <col:14, col:42> 'int'
  `-BinaryOperator 0x55bf9a627230 <col:15, ./hiredis.h:73:26> 'int' '&'
    |-ImplicitCastExpr 0x55bf9a627218 <async.c:688:15, col:18> 'int' <LValueToRValue>
    | `-MemberExpr 0x55bf9a6271c0 <col:15, col:18> 'int' lvalue ->flags 0x55bf9a5bbd48
    |   `-ImplicitCastExpr 0x55bf9a6271a8 <col:15> 'redisContext *' <LValueToRValue>
    |     `-DeclRefExpr 0x55bf9a627180 <col:15> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
    `-IntegerLiteral 0x55bf9a6271f8 <./hiredis.h:73:26> 'int' 32
!([B13.6])
   T: if [B13.7]
   Preds (1): B14
   Succs (2): B12 B6

 [B14]
   1: DeclRefExpr 0x55bf9a626ff0 <async.c:685:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
strncasecmp
   2: ImplicitCastExpr 0x55bf9a627098 <async.c:685:16> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a626ff0 <col:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
[B14.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *, size_t))
   3: DeclRefExpr 0x55bf9a627018 <async.c:685:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   4: ImplicitCastExpr 0x55bf9a6270f0 <async.c:685:28> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a627018 <col:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
[B14.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x55bf9a627040 <async.c:685:33> 'const char [14]' lvalue "unsubscribe\r\n"
"unsubscribe\r\n"
   6: ImplicitCastExpr 0x55bf9a627108 <async.c:685:33> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55bf9a627040 <col:33> 'const char [14]' lvalue "unsubscribe\r\n"
[B14.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55bf9a627078 <async.c:685:51> 'int' 13
13
   8: ImplicitCastExpr 0x55bf9a627120 <async.c:685:51> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55bf9a627078 <col:51> 'int' 13
[B14.7] (ImplicitCastExpr, IntegralCast, size_t)
   9: CallExpr 0x55bf9a6270b0 <async.c:685:16, col:53> 'int'
|-ImplicitCastExpr 0x55bf9a627098 <col:16> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a626ff0 <col:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
|-ImplicitCastExpr 0x55bf9a6270f0 <col:28> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a627018 <col:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|-ImplicitCastExpr 0x55bf9a627108 <col:33> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55bf9a627040 <col:33> 'const char [14]' lvalue "unsubscribe\r\n"
`-ImplicitCastExpr 0x55bf9a627120 <col:51> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55bf9a627078 <col:51> 'int' 13
[B14.2]([B14.4], [B14.6], [B14.8])
  10: IntegerLiteral 0x55bf9a627138 <async.c:685:58> 'int' 0
0
  11: BinaryOperator 0x55bf9a627158 <async.c:685:16, col:58> 'int' '=='
|-CallExpr 0x55bf9a6270b0 <col:16, col:53> 'int'
| |-ImplicitCastExpr 0x55bf9a627098 <col:16> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55bf9a626ff0 <col:16> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
| |-ImplicitCastExpr 0x55bf9a6270f0 <col:28> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55bf9a627018 <col:28> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
| |-ImplicitCastExpr 0x55bf9a627108 <col:33> 'const char *' <ArrayToPointerDecay>
| | `-StringLiteral 0x55bf9a627040 <col:33> 'const char [14]' lvalue "unsubscribe\r\n"
| `-ImplicitCastExpr 0x55bf9a627120 <col:51> 'size_t':'unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x55bf9a627078 <col:51> 'int' 13
`-IntegerLiteral 0x55bf9a627138 <col:58> 'int' 0
[B14.9] == [B14.10]
   T: if [B14.11]
   Preds (2): B25 B26
   Succs (2): B13 B11

 [B15]
   Preds (2): B16 B17
   Succs (1): B23

 [B16]
   1: DeclRefExpr 0x55bf9a626e88 <async.c:683:27> 'void (sds)' Function 0x55bf9a5afcc0 'sdsfree' 'void (sds)'
sdsfree
   2: ImplicitCastExpr 0x55bf9a626ed8 <async.c:683:27> 'void (*)(sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a626e88 <col:27> 'void (sds)' Function 0x55bf9a5afcc0 'sdsfree' 'void (sds)'
[B16.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds))
   3: DeclRefExpr 0x55bf9a626eb0 <async.c:683:35> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
sname
   4: ImplicitCastExpr 0x55bf9a626f20 <async.c:683:35> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626eb0 <col:35> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B16.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: CallExpr 0x55bf9a626ef0 <async.c:683:27, col:40> 'void'
|-ImplicitCastExpr 0x55bf9a626ed8 <col:27> 'void (*)(sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a626e88 <col:27> 'void (sds)' Function 0x55bf9a5afcc0 'sdsfree' 'void (sds)'
`-ImplicitCastExpr 0x55bf9a626f20 <col:35> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a626eb0 <col:35> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B16.2]([B16.4])
   Preds (1): B17
   Succs (1): B15

 [B17]
   1: DeclRefExpr 0x55bf9a626c60 <async.c:681:19> 'int (dict *, void *, void *)' Function 0x55bf9a5ef6a0 'dictReplace' 'int (dict *, void *, void *)'
dictReplace
   2: ImplicitCastExpr 0x55bf9a626d20 <async.c:681:19> 'int (*)(dict *, void *, void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a626c60 <col:19> 'int (dict *, void *, void *)' Function 0x55bf9a5ef6a0 'dictReplace' 'int (dict *, void *, void *)'
[B17.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(dict *, void *, void *))
   3: DeclRefExpr 0x55bf9a626c88 <async.c:681:31> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
cbdict
   4: ImplicitCastExpr 0x55bf9a626d78 <async.c:681:31> 'struct dict *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626c88 <col:31> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
[B17.3] (ImplicitCastExpr, LValueToRValue, struct dict *)
   5: DeclRefExpr 0x55bf9a626cb0 <async.c:681:38> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
sname
   6: ImplicitCastExpr 0x55bf9a626d90 <async.c:681:38> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626cb0 <col:38> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B17.5] (ImplicitCastExpr, LValueToRValue, sds)
   7: ImplicitCastExpr 0x55bf9a626da8 <async.c:681:38> 'void *' <BitCast>
`-ImplicitCastExpr 0x55bf9a626d90 <col:38> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a626cb0 <col:38> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B17.6] (ImplicitCastExpr, BitCast, void *)
   8: DeclRefExpr 0x55bf9a626cd8 <async.c:681:45> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
   9: UnaryOperator 0x55bf9a626d00 <async.c:681:44, col:45> 'redisCallback *' prefix '&'
`-DeclRefExpr 0x55bf9a626cd8 <col:45> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
&[B17.8]
  10: ImplicitCastExpr 0x55bf9a626dc0 <async.c:681:44, col:45> 'void *' <BitCast>
`-UnaryOperator 0x55bf9a626d00 <col:44, col:45> 'redisCallback *' prefix '&'
  `-DeclRefExpr 0x55bf9a626cd8 <col:45> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B17.9] (ImplicitCastExpr, BitCast, void *)
  11: CallExpr 0x55bf9a626d38 <async.c:681:19, col:47> 'int'
|-ImplicitCastExpr 0x55bf9a626d20 <col:19> 'int (*)(dict *, void *, void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a626c60 <col:19> 'int (dict *, void *, void *)' Function 0x55bf9a5ef6a0 'dictReplace' 'int (dict *, void *, void *)'
|-ImplicitCastExpr 0x55bf9a626d78 <col:31> 'struct dict *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a626c88 <col:31> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
|-ImplicitCastExpr 0x55bf9a626da8 <col:38> 'void *' <BitCast>
| `-ImplicitCastExpr 0x55bf9a626d90 <col:38> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55bf9a626cb0 <col:38> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
`-ImplicitCastExpr 0x55bf9a626dc0 <col:44, col:45> 'void *' <BitCast>
  `-UnaryOperator 0x55bf9a626d00 <col:44, col:45> 'redisCallback *' prefix '&'
    `-DeclRefExpr 0x55bf9a626cd8 <col:45> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B17.2]([B17.4], [B17.7], [B17.10])
  12: DeclRefExpr 0x55bf9a626c38 <async.c:681:13> 'int' lvalue Var 0x55bf9a623f08 'ret' 'int'
ret
  13: BinaryOperator 0x55bf9a626dd8 <async.c:681:13, col:47> 'int' '='
|-DeclRefExpr 0x55bf9a626c38 <col:13> 'int' lvalue Var 0x55bf9a623f08 'ret' 'int'
`-CallExpr 0x55bf9a626d38 <col:19, col:47> 'int'
  |-ImplicitCastExpr 0x55bf9a626d20 <col:19> 'int (*)(dict *, void *, void *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a626c60 <col:19> 'int (dict *, void *, void *)' Function 0x55bf9a5ef6a0 'dictReplace' 'int (dict *, void *, void *)'
  |-ImplicitCastExpr 0x55bf9a626d78 <col:31> 'struct dict *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a626c88 <col:31> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
  |-ImplicitCastExpr 0x55bf9a626da8 <col:38> 'void *' <BitCast>
  | `-ImplicitCastExpr 0x55bf9a626d90 <col:38> 'sds':'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55bf9a626cb0 <col:38> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
  `-ImplicitCastExpr 0x55bf9a626dc0 <col:44, col:45> 'void *' <BitCast>
    `-UnaryOperator 0x55bf9a626d00 <col:44, col:45> 'redisCallback *' prefix '&'
      `-DeclRefExpr 0x55bf9a626cd8 <col:45> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B17.12] = [B17.11]
  14: DeclRefExpr 0x55bf9a626e00 <async.c:683:17> 'int' lvalue Var 0x55bf9a623f08 'ret' 'int'
ret
  15: ImplicitCastExpr 0x55bf9a626e48 <async.c:683:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626e00 <col:17> 'int' lvalue Var 0x55bf9a623f08 'ret' 'int'
[B17.14] (ImplicitCastExpr, LValueToRValue, int)
  16: IntegerLiteral 0x55bf9a626e28 <async.c:683:24> 'int' 0
0
  17: BinaryOperator 0x55bf9a626e60 <async.c:683:17, col:24> 'int' '=='
|-ImplicitCastExpr 0x55bf9a626e48 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a626e00 <col:17> 'int' lvalue Var 0x55bf9a623f08 'ret' 'int'
`-IntegerLiteral 0x55bf9a626e28 <col:24> 'int' 0
[B17.15] == [B17.16]
   T: if [B17.17]
   Preds (2): B18 B19
   Succs (2): B16 B15

 [B18]
   1: DeclRefExpr 0x55bf9a626970 <async.c:677:43> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
de
   2: ImplicitCastExpr 0x55bf9a6269b8 <./dict.h:109:30, col:33> 'dictEntry *' <LValueToRValue>
`-ParenExpr 0x55bf9a626998 <col:30, col:33> 'dictEntry *' lvalue
  `-DeclRefExpr 0x55bf9a626970 <async.c:677:43> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
([B18.1]) (ImplicitCastExpr, LValueToRValue, dictEntry *)
   3: MemberExpr 0x55bf9a6269d0 <./dict.h:109:30, col:36> 'void *' lvalue ->val 0x55bf9a5c9bb8
`-ImplicitCastExpr 0x55bf9a6269b8 <col:30, col:33> 'dictEntry *' <LValueToRValue>
  `-ParenExpr 0x55bf9a626998 <col:30, col:33> 'dictEntry *' lvalue
    `-DeclRefExpr 0x55bf9a626970 <async.c:677:43> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
[B18.2]->val
   4: ImplicitCastExpr 0x55bf9a626a28 <./dict.h:109:29, col:39> 'void *' <LValueToRValue>
`-ParenExpr 0x55bf9a626a08 <col:29, col:39> 'void *' lvalue
  `-MemberExpr 0x55bf9a6269d0 <col:30, col:36> 'void *' lvalue ->val 0x55bf9a5c9bb8
    `-ImplicitCastExpr 0x55bf9a6269b8 <col:30, col:33> 'dictEntry *' <LValueToRValue>
      `-ParenExpr 0x55bf9a626998 <col:30, col:33> 'dictEntry *' lvalue
        `-DeclRefExpr 0x55bf9a626970 <async.c:677:43> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
([B18.3]) (ImplicitCastExpr, LValueToRValue, void *)
   5: ImplicitCastExpr 0x55bf9a626a40 <./dict.h:109:29, col:39> 'redisCallback *' <BitCast>
`-ImplicitCastExpr 0x55bf9a626a28 <col:29, col:39> 'void *' <LValueToRValue>
  `-ParenExpr 0x55bf9a626a08 <col:29, col:39> 'void *' lvalue
    `-MemberExpr 0x55bf9a6269d0 <col:30, col:36> 'void *' lvalue ->val 0x55bf9a5c9bb8
      `-ImplicitCastExpr 0x55bf9a6269b8 <col:30, col:33> 'dictEntry *' <LValueToRValue>
        `-ParenExpr 0x55bf9a626998 <col:30, col:33> 'dictEntry *' lvalue
          `-DeclRefExpr 0x55bf9a626970 <async.c:677:43> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
[B18.4] (ImplicitCastExpr, BitCast, redisCallback *)
   6: DeclRefExpr 0x55bf9a626948 <async.c:677:17> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
existcb
   7: BinaryOperator 0x55bf9a626a58 <async.c:677:17, ./dict.h:109:39> 'redisCallback *' '='
|-DeclRefExpr 0x55bf9a626948 <async.c:677:17> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
`-ImplicitCastExpr 0x55bf9a626a40 <./dict.h:109:29, col:39> 'redisCallback *' <BitCast>
  `-ImplicitCastExpr 0x55bf9a626a28 <col:29, col:39> 'void *' <LValueToRValue>
    `-ParenExpr 0x55bf9a626a08 <col:29, col:39> 'void *' lvalue
      `-MemberExpr 0x55bf9a6269d0 <col:30, col:36> 'void *' lvalue ->val 0x55bf9a5c9bb8
        `-ImplicitCastExpr 0x55bf9a6269b8 <col:30, col:33> 'dictEntry *' <LValueToRValue>
          `-ParenExpr 0x55bf9a626998 <col:30, col:33> 'dictEntry *' lvalue
            `-DeclRefExpr 0x55bf9a626970 <async.c:677:43> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
[B18.6] = [B18.5]
   8: DeclRefExpr 0x55bf9a626ae0 <async.c:678:35> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
existcb
   9: ImplicitCastExpr 0x55bf9a626b08 <async.c:678:35> 'redisCallback *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626ae0 <col:35> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
[B18.8] (ImplicitCastExpr, LValueToRValue, redisCallback *)
  10: MemberExpr 0x55bf9a626b20 <async.c:678:35, col:44> 'int' lvalue ->pending_subs 0x55bf9a5c1ca0
`-ImplicitCastExpr 0x55bf9a626b08 <col:35> 'redisCallback *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a626ae0 <col:35> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
[B18.9]->pending_subs
  11: ImplicitCastExpr 0x55bf9a626b78 <async.c:678:35, col:44> 'int' <LValueToRValue>
`-MemberExpr 0x55bf9a626b20 <col:35, col:44> 'int' lvalue ->pending_subs 0x55bf9a5c1ca0
  `-ImplicitCastExpr 0x55bf9a626b08 <col:35> 'redisCallback *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a626ae0 <col:35> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
[B18.10] (ImplicitCastExpr, LValueToRValue, int)
  12: IntegerLiteral 0x55bf9a626b58 <async.c:678:59> 'int' 1
1
  13: BinaryOperator 0x55bf9a626b90 <async.c:678:35, col:59> 'int' '+'
|-ImplicitCastExpr 0x55bf9a626b78 <col:35, col:44> 'int' <LValueToRValue>
| `-MemberExpr 0x55bf9a626b20 <col:35, col:44> 'int' lvalue ->pending_subs 0x55bf9a5c1ca0
|   `-ImplicitCastExpr 0x55bf9a626b08 <col:35> 'redisCallback *' <LValueToRValue>
|     `-DeclRefExpr 0x55bf9a626ae0 <col:35> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
`-IntegerLiteral 0x55bf9a626b58 <col:59> 'int' 1
[B18.11] + [B18.12]
  14: DeclRefExpr 0x55bf9a626a80 <async.c:678:17> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
  15: MemberExpr 0x55bf9a626aa8 <async.c:678:17, col:20> 'int' lvalue .pending_subs 0x55bf9a5c1ca0
`-DeclRefExpr 0x55bf9a626a80 <col:17> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B18.14].pending_subs
  16: BinaryOperator 0x55bf9a626bb8 <async.c:678:17, col:59> 'int' '='
|-MemberExpr 0x55bf9a626aa8 <col:17, col:20> 'int' lvalue .pending_subs 0x55bf9a5c1ca0
| `-DeclRefExpr 0x55bf9a626a80 <col:17> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
`-BinaryOperator 0x55bf9a626b90 <col:35, col:59> 'int' '+'
  |-ImplicitCastExpr 0x55bf9a626b78 <col:35, col:44> 'int' <LValueToRValue>
  | `-MemberExpr 0x55bf9a626b20 <col:35, col:44> 'int' lvalue ->pending_subs 0x55bf9a5c1ca0
  |   `-ImplicitCastExpr 0x55bf9a626b08 <col:35> 'redisCallback *' <LValueToRValue>
  |     `-DeclRefExpr 0x55bf9a626ae0 <col:35> 'redisCallback *' lvalue Var 0x55bf9a623a10 'existcb' 'redisCallback *'
  `-IntegerLiteral 0x55bf9a626b58 <col:59> 'int' 1
[B18.15] = [B18.13]
   Preds (1): B19
   Succs (1): B17

 [B19]
   1: DeclRefExpr 0x55bf9a626710 <async.c:674:18> 'dictEntry *(dict *, const void *)' Function 0x55bf9a5f40b8 'dictFind' 'dictEntry *(dict *, const void *)'
dictFind
   2: ImplicitCastExpr 0x55bf9a626788 <async.c:674:18> 'dictEntry *(*)(dict *, const void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a626710 <col:18> 'dictEntry *(dict *, const void *)' Function 0x55bf9a5f40b8 'dictFind' 'dictEntry *(dict *, const void *)'
[B19.1] (ImplicitCastExpr, FunctionToPointerDecay, dictEntry *(*)(dict *, const void *))
   3: DeclRefExpr 0x55bf9a626738 <async.c:674:27> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
cbdict
   4: ImplicitCastExpr 0x55bf9a6267d8 <async.c:674:27> 'struct dict *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626738 <col:27> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
[B19.3] (ImplicitCastExpr, LValueToRValue, struct dict *)
   5: DeclRefExpr 0x55bf9a626760 <async.c:674:34> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
sname
   6: ImplicitCastExpr 0x55bf9a6267f0 <async.c:674:34> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626760 <col:34> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B19.5] (ImplicitCastExpr, LValueToRValue, sds)
   7: ImplicitCastExpr 0x55bf9a626808 <async.c:674:34> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55bf9a6267f0 <col:34> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a626760 <col:34> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B19.6] (ImplicitCastExpr, BitCast, const void *)
   8: CallExpr 0x55bf9a6267a0 <async.c:674:18, col:39> 'dictEntry *'
|-ImplicitCastExpr 0x55bf9a626788 <col:18> 'dictEntry *(*)(dict *, const void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a626710 <col:18> 'dictEntry *(dict *, const void *)' Function 0x55bf9a5f40b8 'dictFind' 'dictEntry *(dict *, const void *)'
|-ImplicitCastExpr 0x55bf9a6267d8 <col:27> 'struct dict *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a626738 <col:27> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
`-ImplicitCastExpr 0x55bf9a626808 <col:34> 'const void *' <BitCast>
  `-ImplicitCastExpr 0x55bf9a6267f0 <col:34> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a626760 <col:34> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B19.2]([B19.4], [B19.7])
   9: DeclRefExpr 0x55bf9a6266e8 <async.c:674:13> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
de
  10: BinaryOperator 0x55bf9a626820 <async.c:674:13, col:39> 'dictEntry *' '='
|-DeclRefExpr 0x55bf9a6266e8 <col:13> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
`-CallExpr 0x55bf9a6267a0 <col:18, col:39> 'dictEntry *'
  |-ImplicitCastExpr 0x55bf9a626788 <col:18> 'dictEntry *(*)(dict *, const void *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a626710 <col:18> 'dictEntry *(dict *, const void *)' Function 0x55bf9a5f40b8 'dictFind' 'dictEntry *(dict *, const void *)'
  |-ImplicitCastExpr 0x55bf9a6267d8 <col:27> 'struct dict *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a626738 <col:27> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
  `-ImplicitCastExpr 0x55bf9a626808 <col:34> 'const void *' <BitCast>
    `-ImplicitCastExpr 0x55bf9a6267f0 <col:34> 'sds':'char *' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a626760 <col:34> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
[B19.9] = [B19.8]
  11: DeclRefExpr 0x55bf9a626848 <async.c:676:17> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
de
  12: ImplicitCastExpr 0x55bf9a6268f0 <async.c:676:17> 'dictEntry *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626848 <col:17> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
[B19.11] (ImplicitCastExpr, LValueToRValue, dictEntry *)
  13: IntegerLiteral 0x55bf9a626870 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  14: CStyleCastExpr 0x55bf9a6268a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55bf9a626870 <col:24> 'int' 0
(void *)[B19.13] (CStyleCastExpr, NullToPointer, void *)
  15: ImplicitCastExpr 0x55bf9a626908 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'dictEntry *' <BitCast>
`-ParenExpr 0x55bf9a6268d0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55bf9a6268a8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55bf9a626870 <col:24> 'int' 0
([B19.14]) (ImplicitCastExpr, BitCast, dictEntry *)
  16: BinaryOperator 0x55bf9a626920 <async.c:676:17, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ImplicitCastExpr 0x55bf9a6268f0 <async.c:676:17> 'dictEntry *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a626848 <col:17> 'dictEntry *' lvalue Var 0x55bf9a623988 'de' 'dictEntry *'
`-ImplicitCastExpr 0x55bf9a626908 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'dictEntry *' <BitCast>
  `-ParenExpr 0x55bf9a6268d0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55bf9a6268a8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55bf9a626870 <col:24> 'int' 0
[B19.12] != [B19.15]
   T: if [B19.16]
   Preds (2): B20 B21
   Succs (2): B18 B17

 [B20]
   1: DeclRefExpr 0x55bf9a6265c0 <async.c:672:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   2: ImplicitCastExpr 0x55bf9a6265e8 <async.c:672:26> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6265c0 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B20.1] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   3: MemberExpr 0x55bf9a626600 <async.c:672:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
`-ImplicitCastExpr 0x55bf9a6265e8 <col:26> 'redisAsyncContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a6265c0 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B20.2]->sub
   4: MemberExpr 0x55bf9a626638 <async.c:672:26, col:34> 'struct dict *' lvalue .channels 0x55bf9a5c4770
`-MemberExpr 0x55bf9a626600 <col:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
  `-ImplicitCastExpr 0x55bf9a6265e8 <col:26> 'redisAsyncContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a6265c0 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B20.3].channels
   5: ImplicitCastExpr 0x55bf9a626670 <async.c:672:26, col:34> 'struct dict *' <LValueToRValue>
`-MemberExpr 0x55bf9a626638 <col:26, col:34> 'struct dict *' lvalue .channels 0x55bf9a5c4770
  `-MemberExpr 0x55bf9a626600 <col:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
    `-ImplicitCastExpr 0x55bf9a6265e8 <col:26> 'redisAsyncContext *' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a6265c0 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B20.4] (ImplicitCastExpr, LValueToRValue, struct dict *)
   6: DeclRefExpr 0x55bf9a626598 <async.c:672:17> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
cbdict
   7: BinaryOperator 0x55bf9a626688 <async.c:672:17, col:34> 'struct dict *' '='
|-DeclRefExpr 0x55bf9a626598 <col:17> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
`-ImplicitCastExpr 0x55bf9a626670 <col:26, col:34> 'struct dict *' <LValueToRValue>
  `-MemberExpr 0x55bf9a626638 <col:26, col:34> 'struct dict *' lvalue .channels 0x55bf9a5c4770
    `-MemberExpr 0x55bf9a626600 <col:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
      `-ImplicitCastExpr 0x55bf9a6265e8 <col:26> 'redisAsyncContext *' <LValueToRValue>
        `-DeclRefExpr 0x55bf9a6265c0 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B20.6] = [B20.5]
   Preds (1): B22
   Succs (1): B19

 [B21]
   1: DeclRefExpr 0x55bf9a6264a8 <async.c:670:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   2: ImplicitCastExpr 0x55bf9a6264d0 <async.c:670:26> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6264a8 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B21.1] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   3: MemberExpr 0x55bf9a6264e8 <async.c:670:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
`-ImplicitCastExpr 0x55bf9a6264d0 <col:26> 'redisAsyncContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a6264a8 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B21.2]->sub
   4: MemberExpr 0x55bf9a626520 <async.c:670:26, col:34> 'struct dict *' lvalue .patterns 0x55bf9a5c47e0
`-MemberExpr 0x55bf9a6264e8 <col:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
  `-ImplicitCastExpr 0x55bf9a6264d0 <col:26> 'redisAsyncContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a6264a8 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B21.3].patterns
   5: ImplicitCastExpr 0x55bf9a626558 <async.c:670:26, col:34> 'struct dict *' <LValueToRValue>
`-MemberExpr 0x55bf9a626520 <col:26, col:34> 'struct dict *' lvalue .patterns 0x55bf9a5c47e0
  `-MemberExpr 0x55bf9a6264e8 <col:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
    `-ImplicitCastExpr 0x55bf9a6264d0 <col:26> 'redisAsyncContext *' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a6264a8 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B21.4] (ImplicitCastExpr, LValueToRValue, struct dict *)
   6: DeclRefExpr 0x55bf9a626480 <async.c:670:17> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
cbdict
   7: BinaryOperator 0x55bf9a626570 <async.c:670:17, col:34> 'struct dict *' '='
|-DeclRefExpr 0x55bf9a626480 <col:17> 'struct dict *' lvalue Var 0x55bf9a623900 'cbdict' 'struct dict *'
`-ImplicitCastExpr 0x55bf9a626558 <col:26, col:34> 'struct dict *' <LValueToRValue>
  `-MemberExpr 0x55bf9a626520 <col:26, col:34> 'struct dict *' lvalue .patterns 0x55bf9a5c47e0
    `-MemberExpr 0x55bf9a6264e8 <col:26, col:30> 'struct (anonymous struct at ./async.h:103:5)':'struct redisAsyncContext::(anonymous at ./async.h:103:5)' lvalue ->sub 0x55bf9a5c48d0
      `-ImplicitCastExpr 0x55bf9a6264d0 <col:26> 'redisAsyncContext *' <LValueToRValue>
        `-DeclRefExpr 0x55bf9a6264a8 <col:26> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B21.6] = [B21.5]
   Preds (1): B22
   Succs (1): B19

 [B22]
   1: DeclRefExpr 0x55bf9a626308 <async.c:668:21> 'sds (const void *, size_t)' Function 0x55bf9a5af660 'sdsnewlen' 'sds (const void *, size_t)'
sdsnewlen
   2: ImplicitCastExpr 0x55bf9a626380 <async.c:668:21> 'sds (*)(const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a626308 <col:21> 'sds (const void *, size_t)' Function 0x55bf9a5af660 'sdsnewlen' 'sds (const void *, size_t)'
[B22.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(const void *, size_t))
   3: DeclRefExpr 0x55bf9a626330 <async.c:668:31> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
astr
   4: ImplicitCastExpr 0x55bf9a6263d0 <async.c:668:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626330 <col:31> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
[B22.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: ImplicitCastExpr 0x55bf9a6263e8 <async.c:668:31> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55bf9a6263d0 <col:31> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a626330 <col:31> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
[B22.4] (ImplicitCastExpr, BitCast, const void *)
   6: DeclRefExpr 0x55bf9a626358 <async.c:668:36> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
alen
   7: ImplicitCastExpr 0x55bf9a626400 <async.c:668:36> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626358 <col:36> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
[B22.6] (ImplicitCastExpr, LValueToRValue, size_t)
   8: CallExpr 0x55bf9a626398 <async.c:668:21, col:40> 'sds':'char *'
|-ImplicitCastExpr 0x55bf9a626380 <col:21> 'sds (*)(const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a626308 <col:21> 'sds (const void *, size_t)' Function 0x55bf9a5af660 'sdsnewlen' 'sds (const void *, size_t)'
|-ImplicitCastExpr 0x55bf9a6263e8 <col:31> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55bf9a6263d0 <col:31> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55bf9a626330 <col:31> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
`-ImplicitCastExpr 0x55bf9a626400 <col:36> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a626358 <col:36> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
[B22.2]([B22.5], [B22.7])
   9: DeclRefExpr 0x55bf9a6262e0 <async.c:668:13> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
sname
  10: BinaryOperator 0x55bf9a626418 <async.c:668:13, col:40> 'sds':'char *' '='
|-DeclRefExpr 0x55bf9a6262e0 <col:13> 'sds':'char *' lvalue Var 0x55bf9a623e78 'sname' 'sds':'char *'
`-CallExpr 0x55bf9a626398 <col:21, col:40> 'sds':'char *'
  |-ImplicitCastExpr 0x55bf9a626380 <col:21> 'sds (*)(const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a626308 <col:21> 'sds (const void *, size_t)' Function 0x55bf9a5af660 'sdsnewlen' 'sds (const void *, size_t)'
  |-ImplicitCastExpr 0x55bf9a6263e8 <col:31> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55bf9a6263d0 <col:31> 'const char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55bf9a626330 <col:31> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
  `-ImplicitCastExpr 0x55bf9a626400 <col:36> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a626358 <col:36> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
[B22.9] = [B22.8]
  11: DeclRefExpr 0x55bf9a626440 <async.c:669:17> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
pvariant
  12: ImplicitCastExpr 0x55bf9a626468 <async.c:669:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a626440 <col:17> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
[B22.11] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B22.12]
   Preds (1): B23
   Succs (2): B21 B20

 [B23]
   1: DeclRefExpr 0x55bf9a626088 <async.c:667:21> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
nextArgument
   2: ImplicitCastExpr 0x55bf9a626168 <async.c:667:21> 'const char *(*)(const char *, const char **, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a626088 <col:21> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
[B23.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(const char *, const char **, size_t *))
   3: DeclRefExpr 0x55bf9a6260b0 <async.c:667:34> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
p
   4: ImplicitCastExpr 0x55bf9a6261c0 <async.c:667:34> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6260b0 <col:34> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
[B23.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x55bf9a6260d8 <async.c:667:37> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
astr
   6: UnaryOperator 0x55bf9a626100 <async.c:667:36, col:37> 'const char **' prefix '&'
`-DeclRefExpr 0x55bf9a6260d8 <col:37> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
&[B23.5]
   7: DeclRefExpr 0x55bf9a626120 <async.c:667:43> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
alen
   8: UnaryOperator 0x55bf9a626148 <async.c:667:42, col:43> 'size_t *' prefix '&'
`-DeclRefExpr 0x55bf9a626120 <col:43> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
&[B23.7]
   9: CallExpr 0x55bf9a626180 <async.c:667:21, col:47> 'const char *'
|-ImplicitCastExpr 0x55bf9a626168 <col:21> 'const char *(*)(const char *, const char **, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a626088 <col:21> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
|-ImplicitCastExpr 0x55bf9a6261c0 <col:34> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a6260b0 <col:34> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
|-UnaryOperator 0x55bf9a626100 <col:36, col:37> 'const char **' prefix '&'
| `-DeclRefExpr 0x55bf9a6260d8 <col:37> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
`-UnaryOperator 0x55bf9a626148 <col:42, col:43> 'size_t *' prefix '&'
  `-DeclRefExpr 0x55bf9a626120 <col:43> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
[B23.2]([B23.4], [B23.6], [B23.8])
  10: DeclRefExpr 0x55bf9a626060 <async.c:667:17> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
p
  11: BinaryOperator 0x55bf9a6261d8 <async.c:667:17, col:47> 'const char *' '='
|-DeclRefExpr 0x55bf9a626060 <col:17> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
`-CallExpr 0x55bf9a626180 <col:21, col:47> 'const char *'
  |-ImplicitCastExpr 0x55bf9a626168 <col:21> 'const char *(*)(const char *, const char **, size_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a626088 <col:21> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
  |-ImplicitCastExpr 0x55bf9a6261c0 <col:34> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a6260b0 <col:34> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
  |-UnaryOperator 0x55bf9a626100 <col:36, col:37> 'const char **' prefix '&'
  | `-DeclRefExpr 0x55bf9a6260d8 <col:37> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
  `-UnaryOperator 0x55bf9a626148 <col:42, col:43> 'size_t *' prefix '&'
    `-DeclRefExpr 0x55bf9a626120 <col:43> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
[B23.10] = [B23.9]
  12: IntegerLiteral 0x55bf9a626220 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  13: CStyleCastExpr 0x55bf9a626258 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55bf9a626220 <col:24> 'int' 0
(void *)[B23.12] (CStyleCastExpr, NullToPointer, void *)
  14: ImplicitCastExpr 0x55bf9a6262a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x55bf9a626280 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55bf9a626258 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55bf9a626220 <col:24> 'int' 0
([B23.13]) (ImplicitCastExpr, BitCast, const char *)
  15: BinaryOperator 0x55bf9a6262b8 <async.c:667:16, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ParenExpr 0x55bf9a626200 <async.c:667:16, col:48> 'const char *'
| `-BinaryOperator 0x55bf9a6261d8 <col:17, col:47> 'const char *' '='
|   |-DeclRefExpr 0x55bf9a626060 <col:17> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
|   `-CallExpr 0x55bf9a626180 <col:21, col:47> 'const char *'
|     |-ImplicitCastExpr 0x55bf9a626168 <col:21> 'const char *(*)(const char *, const char **, size_t *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55bf9a626088 <col:21> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
|     |-ImplicitCastExpr 0x55bf9a6261c0 <col:34> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55bf9a6260b0 <col:34> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
|     |-UnaryOperator 0x55bf9a626100 <col:36, col:37> 'const char **' prefix '&'
|     | `-DeclRefExpr 0x55bf9a6260d8 <col:37> 'const char *' lvalue Var 0x55bf9a623c38 'astr' 'const char *'
|     `-UnaryOperator 0x55bf9a626148 <col:42, col:43> 'size_t *' prefix '&'
|       `-DeclRefExpr 0x55bf9a626120 <col:43> 'size_t':'unsigned long' lvalue Var 0x55bf9a623d48 'alen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55bf9a6262a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x55bf9a626280 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55bf9a626258 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55bf9a626220 <col:24> 'int' 0
([B23.11]) != [B23.14]
   T: while [B23.15]
   Preds (2): B15 B24
   Succs (2): B22 B6

 [B24]
   1: DeclRefExpr 0x55bf9a625f90 <async.c:664:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
c
   2: ImplicitCastExpr 0x55bf9a625fb8 <async.c:664:9> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625f90 <col:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B24.1] (ImplicitCastExpr, LValueToRValue, redisContext *)
   3: MemberExpr 0x55bf9a625fd0 <async.c:664:9, col:12> 'int' lvalue ->flags 0x55bf9a5bbd48
`-ImplicitCastExpr 0x55bf9a625fb8 <col:9> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a625f90 <col:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B24.2]->flags
   4: IntegerLiteral 0x55bf9a626008 <./hiredis.h:73:26> 'int' 32
32
   5: CompoundAssignOperator 0x55bf9a626028 <async.c:664:9, ./hiredis.h:73:26> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x55bf9a625fd0 <async.c:664:9, col:12> 'int' lvalue ->flags 0x55bf9a5bbd48
| `-ImplicitCastExpr 0x55bf9a625fb8 <col:9> 'redisContext *' <LValueToRValue>
|   `-DeclRefExpr 0x55bf9a625f90 <col:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
`-IntegerLiteral 0x55bf9a626008 <./hiredis.h:73:26> 'int' 32
[B24.3] |= [B24.4]
   Preds (1): B25
   Succs (1): B23

 [B25]
   1: DeclRefExpr 0x55bf9a625d68 <async.c:663:20> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
strncasecmp
   2: ImplicitCastExpr 0x55bf9a625e68 <async.c:663:20> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a625d68 <col:20> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
[B25.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *, size_t))
   3: DeclRefExpr 0x55bf9a625d90 <async.c:663:32> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   4: ImplicitCastExpr 0x55bf9a625ec0 <async.c:663:32> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625d90 <col:32> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
[B25.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: StringLiteral 0x55bf9a625db8 <async.c:663:37> 'const char [12]' lvalue "subscribe\r\n"
"subscribe\r\n"
   6: ImplicitCastExpr 0x55bf9a625ed8 <async.c:663:37> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55bf9a625db8 <col:37> 'const char [12]' lvalue "subscribe\r\n"
[B25.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55bf9a625df0 <async.c:663:53> 'int' 11
11
   8: ImplicitCastExpr 0x55bf9a625ef0 <async.c:663:53> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55bf9a625df0 <col:53> 'int' 11
[B25.7] (ImplicitCastExpr, IntegralCast, size_t)
   9: CallExpr 0x55bf9a625e80 <async.c:663:20, col:55> 'int'
|-ImplicitCastExpr 0x55bf9a625e68 <col:20> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a625d68 <col:20> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
|-ImplicitCastExpr 0x55bf9a625ec0 <col:32> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a625d90 <col:32> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|-ImplicitCastExpr 0x55bf9a625ed8 <col:37> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55bf9a625db8 <col:37> 'const char [12]' lvalue "subscribe\r\n"
`-ImplicitCastExpr 0x55bf9a625ef0 <col:53> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55bf9a625df0 <col:53> 'int' 11
[B25.2]([B25.4], [B25.6], [B25.8])
  10: IntegerLiteral 0x55bf9a625f08 <async.c:663:60> 'int' 0
0
  11: BinaryOperator 0x55bf9a625f28 <async.c:663:20, col:60> 'int' '=='
|-CallExpr 0x55bf9a625e80 <col:20, col:55> 'int'
| |-ImplicitCastExpr 0x55bf9a625e68 <col:20> 'int (*)(const char *, const char *, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55bf9a625d68 <col:20> 'int (const char *, const char *, size_t)' Function 0x55bf9a52fb30 'strncasecmp' 'int (const char *, const char *, size_t)'
| |-ImplicitCastExpr 0x55bf9a625ec0 <col:32> 'const char *' <LValueToRValue>
| | `-DeclRefExpr 0x55bf9a625d90 <col:32> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
| |-ImplicitCastExpr 0x55bf9a625ed8 <col:37> 'const char *' <ArrayToPointerDecay>
| | `-StringLiteral 0x55bf9a625db8 <col:37> 'const char [12]' lvalue "subscribe\r\n"
| `-ImplicitCastExpr 0x55bf9a625ef0 <col:53> 'size_t':'unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x55bf9a625df0 <col:53> 'int' 11
`-IntegerLiteral 0x55bf9a625f08 <col:60> 'int' 0
[B25.9] == [B25.10]
   T: if [B26.14] && [B25.11]
   Preds (1): B26
   Succs (2): B24 B14

 [B26]
   1: ConditionalOperator 0x55bf9a625b90 <async.c:659:16, col:48> 'int'
|-ParenExpr 0x55bf9a625b30 <col:16, col:40> 'int'
| `-BinaryOperator 0x55bf9a625b08 </usr/include/ctype.h:156:3, async.c:659:37> 'int' '=='
|   |-ParenExpr 0x55bf9a625ad0 </usr/include/ctype.h:156:3, line:170:16> 'int'
|   | `-UnaryOperator 0x55bf9a625ab0 <line:156:4, line:170:15> 'int' prefix '__extension__'
|   |   `-StmtExpr 0x55bf9a625a90 <line:157:4, line:170:15> 'int'
|   |     `-CompoundStmt 0x55bf9a625830 <line:157:5, line:170:14>
|   |       |-DeclStmt 0x55bf9a624c58 <line:157:7, col:16>col:11
|   |       | `-VarDecl 0x55bf9a624bf8 <col:7, col:11> col:11 used __res 'int'
|   |       |-IfStmt 0x55bf9a6257b8 <line:158:7, line:169:23>
|   |       | |-<<<NULL>>>
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x55bf9a624d70 <line:158:11, col:24> 'int' '>'
|   |       | | |-UnaryExprOrTypeTraitExpr 0x55bf9a624d18 <col:11, col:20> 'unsigned long' sizeof
|   |       | | | `-ParenExpr 0x55bf9a624cf8 <col:18, col:20> 'const char' lvalue
|   |       | | |   `-ArraySubscriptExpr 0x55bf9a624cd0 <async.c:659:25, col:31> 'const char' lvalue
|   |       | | |     |-ImplicitCastExpr 0x55bf9a624cb8 <col:25> 'const char *' <LValueToRValue>
|   |       | | |     | `-DeclRefExpr 0x55bf9a624c70 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|   |       | | |     `-IntegerLiteral 0x55bf9a624c98 <col:30> 'int' 0
|   |       | | `-ImplicitCastExpr 0x55bf9a624d58 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x55bf9a624d38 <col:24> 'int' 1
|   |       | |-CompoundStmt 0x55bf9a625520 <line:159:2, line:167:2>
|   |       | | `-IfStmt 0x55bf9a6254e8 <line:160:4, line:220:71>
|   |       | |   |-<<<NULL>>>
|   |       | |   |-<<<NULL>>>
|   |       | |   |-CallExpr 0x55bf9a624e60 <line:160:8, col:31> 'int'
|   |       | |   | |-ImplicitCastExpr 0x55bf9a624e48 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
|   |       | |   | | `-DeclRefExpr 0x55bf9a624d98 <col:8> '<builtin fn type>' Function 0x55bf9a615918 '__builtin_constant_p' 'int ()'
|   |       | |   | `-ArraySubscriptExpr 0x55bf9a624e20 <async.c:659:25, col:31> 'const char' lvalue
|   |       | |   |   |-ImplicitCastExpr 0x55bf9a624e08 <col:25> 'const char *' <LValueToRValue>
|   |       | |   |   | `-DeclRefExpr 0x55bf9a624dc0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|   |       | |   |   `-IntegerLiteral 0x55bf9a624de8 <col:30> 'int' 0
|   |       | |   |-CompoundStmt 0x55bf9a625350 </usr/include/ctype.h:161:6, line:164:6>
|   |       | |   | |-DeclStmt 0x55bf9a624fe0 <line:162:8, col:21>col:12
|   |       | |   | | `-VarDecl 0x55bf9a624ea8 <col:8, col:20> col:12 used __c 'int' cinit
|   |       | |   | |   `-ImplicitCastExpr 0x55bf9a624fc8 <col:18, col:20> 'int' <IntegralCast>
|   |       | |   | |     `-ImplicitCastExpr 0x55bf9a624fb0 <col:18, col:20> 'char' <LValueToRValue>
|   |       | |   | |       `-ParenExpr 0x55bf9a624f90 <col:18, col:20> 'const char' lvalue
|   |       | |   | |         `-ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
|   |       | |   | |           |-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
|   |       | |   | |           | `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|   |       | |   | |           `-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
|   |       | |   | `-BinaryOperator 0x55bf9a625328 </usr/include/ctype.h:163:8, col:55> 'int' '='
|   |       | |   |   |-DeclRefExpr 0x55bf9a624ff8 <col:8> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
|   |       | |   |   `-ConditionalOperator 0x55bf9a6252f8 <col:16, col:55> 'int'
|   |       | |   |     |-BinaryOperator 0x55bf9a625150 <col:16, col:36> 'int' '||'
|   |       | |   |     | |-BinaryOperator 0x55bf9a6250a0 <col:16, col:23> 'int' '<'
|   |       | |   |     | | |-ImplicitCastExpr 0x55bf9a625088 <col:16> 'int' <LValueToRValue>
|   |       | |   |     | | | `-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|   |       | |   |     | | `-UnaryOperator 0x55bf9a625068 <col:22, col:23> 'int' prefix '-'
|   |       | |   |     | |   `-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
|   |       | |   |     | `-BinaryOperator 0x55bf9a625128 <col:30, col:36> 'int' '>'
|   |       | |   |     |   |-ImplicitCastExpr 0x55bf9a625110 <col:30> 'int' <LValueToRValue>
|   |       | |   |     |   | `-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|   |       | |   |     |   `-IntegerLiteral 0x55bf9a6250f0 <col:36> 'int' 255
|   |       | |   |     |-ImplicitCastExpr 0x55bf9a6252c8 <col:42> 'int' <LValueToRValue>
|   |       | |   |     | `-DeclRefExpr 0x55bf9a625178 <col:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|   |       | |   |     `-ImplicitCastExpr 0x55bf9a6252e0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
|   |       | |   |       `-ArraySubscriptExpr 0x55bf9a6252a0 <col:48, col:55> 'const __int32_t':'const int' lvalue
|   |       | |   |         |-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
|   |       | |   |         | `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
|   |       | |   |         |   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
|   |       | |   |         |     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
|   |       | |   |         |       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|   |       | |   |         |         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
|   |       | |   |         `-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
|   |       | |   |           `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|   |       | |   `-BinaryOperator 0x55bf9a6254c0 <line:166:6, line:220:71> 'int' '='
|   |       | |     |-DeclRefExpr 0x55bf9a625370 <line:166:6> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
|   |       | |     `-CallExpr 0x55bf9a625460 <line:220:35, col:71> 'int'
|   |       | |       |-ImplicitCastExpr 0x55bf9a625448 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
|   |       | |       | `-DeclRefExpr 0x55bf9a625398 <col:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
|   |       | |       `-ImplicitCastExpr 0x55bf9a6254a8 <async.c:659:25, col:31> 'int' <IntegralCast>
|   |       | |         `-ImplicitCastExpr 0x55bf9a625490 <col:25, col:31> 'char' <LValueToRValue>
|   |       | |           `-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
|   |       | |             |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
|   |       | |             | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|   |       | |             `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
|   |       | `-BinaryOperator 0x55bf9a625790 </usr/include/ctype.h:169:2, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x55bf9a625538 <col:2> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
|   |       |   `-ImplicitCastExpr 0x55bf9a625778 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x55bf9a625750 <col:10, col:23> 'const __int32_t':'const int' lvalue
|   |       |       |-ImplicitCastExpr 0x55bf9a625738 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
|   |       |       | `-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
|   |       |       |   `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
|   |       |       |     `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
|   |       |       |       `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|   |       |       |         `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
|   |       |       `-CStyleCastExpr 0x55bf9a625710 <line:169:14, col:22> 'int' <IntegralCast>
|   |       |         `-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
|   |       |           `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
|   |       |             `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
|   |       |               |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
|   |       |               | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|   |       |               `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
|   |       `-ImplicitCastExpr 0x55bf9a625818 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf9a6257f0 <col:7> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
|   `-CharacterLiteral 0x55bf9a625af0 <async.c:659:37> 'int' 112
|-IntegerLiteral 0x55bf9a625b50 <col:44> 'int' 1
`-IntegerLiteral 0x55bf9a625b70 <col:48> 'int' 0
([B29.5]) ? [B27.1] : [B28.1]
   2: DeclRefExpr 0x55bf9a624bb8 <async.c:659:5> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
pvariant
   3: BinaryOperator 0x55bf9a625bc0 <async.c:659:5, col:48> 'int' '='
|-DeclRefExpr 0x55bf9a624bb8 <col:5> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
`-ConditionalOperator 0x55bf9a625b90 <col:16, col:48> 'int'
  |-ParenExpr 0x55bf9a625b30 <col:16, col:40> 'int'
  | `-BinaryOperator 0x55bf9a625b08 </usr/include/ctype.h:156:3, async.c:659:37> 'int' '=='
  |   |-ParenExpr 0x55bf9a625ad0 </usr/include/ctype.h:156:3, line:170:16> 'int'
  |   | `-UnaryOperator 0x55bf9a625ab0 <line:156:4, line:170:15> 'int' prefix '__extension__'
  |   |   `-StmtExpr 0x55bf9a625a90 <line:157:4, line:170:15> 'int'
  |   |     `-CompoundStmt 0x55bf9a625830 <line:157:5, line:170:14>
  |   |       |-DeclStmt 0x55bf9a624c58 <line:157:7, col:16>col:11
  |   |       | `-VarDecl 0x55bf9a624bf8 <col:7, col:11> col:11 used __res 'int'
  |   |       |-IfStmt 0x55bf9a6257b8 <line:158:7, line:169:23>
  |   |       | |-<<<NULL>>>
  |   |       | |-<<<NULL>>>
  |   |       | |-BinaryOperator 0x55bf9a624d70 <line:158:11, col:24> 'int' '>'
  |   |       | | |-UnaryExprOrTypeTraitExpr 0x55bf9a624d18 <col:11, col:20> 'unsigned long' sizeof
  |   |       | | | `-ParenExpr 0x55bf9a624cf8 <col:18, col:20> 'const char' lvalue
  |   |       | | |   `-ArraySubscriptExpr 0x55bf9a624cd0 <async.c:659:25, col:31> 'const char' lvalue
  |   |       | | |     |-ImplicitCastExpr 0x55bf9a624cb8 <col:25> 'const char *' <LValueToRValue>
  |   |       | | |     | `-DeclRefExpr 0x55bf9a624c70 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  |   |       | | |     `-IntegerLiteral 0x55bf9a624c98 <col:30> 'int' 0
  |   |       | | `-ImplicitCastExpr 0x55bf9a624d58 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
  |   |       | |   `-IntegerLiteral 0x55bf9a624d38 <col:24> 'int' 1
  |   |       | |-CompoundStmt 0x55bf9a625520 <line:159:2, line:167:2>
  |   |       | | `-IfStmt 0x55bf9a6254e8 <line:160:4, line:220:71>
  |   |       | |   |-<<<NULL>>>
  |   |       | |   |-<<<NULL>>>
  |   |       | |   |-CallExpr 0x55bf9a624e60 <line:160:8, col:31> 'int'
  |   |       | |   | |-ImplicitCastExpr 0x55bf9a624e48 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
  |   |       | |   | | `-DeclRefExpr 0x55bf9a624d98 <col:8> '<builtin fn type>' Function 0x55bf9a615918 '__builtin_constant_p' 'int ()'
  |   |       | |   | `-ArraySubscriptExpr 0x55bf9a624e20 <async.c:659:25, col:31> 'const char' lvalue
  |   |       | |   |   |-ImplicitCastExpr 0x55bf9a624e08 <col:25> 'const char *' <LValueToRValue>
  |   |       | |   |   | `-DeclRefExpr 0x55bf9a624dc0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  |   |       | |   |   `-IntegerLiteral 0x55bf9a624de8 <col:30> 'int' 0
  |   |       | |   |-CompoundStmt 0x55bf9a625350 </usr/include/ctype.h:161:6, line:164:6>
  |   |       | |   | |-DeclStmt 0x55bf9a624fe0 <line:162:8, col:21>col:12
  |   |       | |   | | `-VarDecl 0x55bf9a624ea8 <col:8, col:20> col:12 used __c 'int' cinit
  |   |       | |   | |   `-ImplicitCastExpr 0x55bf9a624fc8 <col:18, col:20> 'int' <IntegralCast>
  |   |       | |   | |     `-ImplicitCastExpr 0x55bf9a624fb0 <col:18, col:20> 'char' <LValueToRValue>
  |   |       | |   | |       `-ParenExpr 0x55bf9a624f90 <col:18, col:20> 'const char' lvalue
  |   |       | |   | |         `-ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
  |   |       | |   | |           |-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
  |   |       | |   | |           | `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  |   |       | |   | |           `-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
  |   |       | |   | `-BinaryOperator 0x55bf9a625328 </usr/include/ctype.h:163:8, col:55> 'int' '='
  |   |       | |   |   |-DeclRefExpr 0x55bf9a624ff8 <col:8> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
  |   |       | |   |   `-ConditionalOperator 0x55bf9a6252f8 <col:16, col:55> 'int'
  |   |       | |   |     |-BinaryOperator 0x55bf9a625150 <col:16, col:36> 'int' '||'
  |   |       | |   |     | |-BinaryOperator 0x55bf9a6250a0 <col:16, col:23> 'int' '<'
  |   |       | |   |     | | |-ImplicitCastExpr 0x55bf9a625088 <col:16> 'int' <LValueToRValue>
  |   |       | |   |     | | | `-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  |   |       | |   |     | | `-UnaryOperator 0x55bf9a625068 <col:22, col:23> 'int' prefix '-'
  |   |       | |   |     | |   `-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
  |   |       | |   |     | `-BinaryOperator 0x55bf9a625128 <col:30, col:36> 'int' '>'
  |   |       | |   |     |   |-ImplicitCastExpr 0x55bf9a625110 <col:30> 'int' <LValueToRValue>
  |   |       | |   |     |   | `-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  |   |       | |   |     |   `-IntegerLiteral 0x55bf9a6250f0 <col:36> 'int' 255
  |   |       | |   |     |-ImplicitCastExpr 0x55bf9a6252c8 <col:42> 'int' <LValueToRValue>
  |   |       | |   |     | `-DeclRefExpr 0x55bf9a625178 <col:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  |   |       | |   |     `-ImplicitCastExpr 0x55bf9a6252e0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
  |   |       | |   |       `-ArraySubscriptExpr 0x55bf9a6252a0 <col:48, col:55> 'const __int32_t':'const int' lvalue
  |   |       | |   |         |-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
  |   |       | |   |         | `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
  |   |       | |   |         |   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |   |       | |   |         |     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
  |   |       | |   |         |       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |   |       | |   |         |         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
  |   |       | |   |         `-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
  |   |       | |   |           `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  |   |       | |   `-BinaryOperator 0x55bf9a6254c0 <line:166:6, line:220:71> 'int' '='
  |   |       | |     |-DeclRefExpr 0x55bf9a625370 <line:166:6> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
  |   |       | |     `-CallExpr 0x55bf9a625460 <line:220:35, col:71> 'int'
  |   |       | |       |-ImplicitCastExpr 0x55bf9a625448 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
  |   |       | |       | `-DeclRefExpr 0x55bf9a625398 <col:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
  |   |       | |       `-ImplicitCastExpr 0x55bf9a6254a8 <async.c:659:25, col:31> 'int' <IntegralCast>
  |   |       | |         `-ImplicitCastExpr 0x55bf9a625490 <col:25, col:31> 'char' <LValueToRValue>
  |   |       | |           `-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
  |   |       | |             |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
  |   |       | |             | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  |   |       | |             `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
  |   |       | `-BinaryOperator 0x55bf9a625790 </usr/include/ctype.h:169:2, col:23> 'int' '='
  |   |       |   |-DeclRefExpr 0x55bf9a625538 <col:2> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
  |   |       |   `-ImplicitCastExpr 0x55bf9a625778 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
  |   |       |     `-ArraySubscriptExpr 0x55bf9a625750 <col:10, col:23> 'const __int32_t':'const int' lvalue
  |   |       |       |-ImplicitCastExpr 0x55bf9a625738 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
  |   |       |       | `-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
  |   |       |       |   `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |   |       |       |     `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
  |   |       |       |       `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |   |       |       |         `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
  |   |       |       `-CStyleCastExpr 0x55bf9a625710 <line:169:14, col:22> 'int' <IntegralCast>
  |   |       |         `-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
  |   |       |           `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
  |   |       |             `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
  |   |       |               |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
  |   |       |               | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  |   |       |               `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
  |   |       `-ImplicitCastExpr 0x55bf9a625818 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
  |   |         `-DeclRefExpr 0x55bf9a6257f0 <col:7> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
  |   `-CharacterLiteral 0x55bf9a625af0 <async.c:659:37> 'int' 112
  |-IntegerLiteral 0x55bf9a625b50 <col:44> 'int' 1
  `-IntegerLiteral 0x55bf9a625b70 <col:48> 'int' 0
[B26.2] = [B26.1]
   4: DeclRefExpr 0x55bf9a625be8 <async.c:660:5> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   5: DeclRefExpr 0x55bf9a625c10 <async.c:660:13> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
pvariant
   6: ImplicitCastExpr 0x55bf9a625c38 <async.c:660:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625c10 <col:13> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
[B26.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CompoundAssignOperator 0x55bf9a625c50 <async.c:660:5, col:13> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|-DeclRefExpr 0x55bf9a625be8 <col:5> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
`-ImplicitCastExpr 0x55bf9a625c38 <col:13> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a625c10 <col:13> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
[B26.4] += [B26.6]
   8: DeclRefExpr 0x55bf9a625c88 <async.c:661:5> 'size_t':'unsigned long' lvalue Var 0x55bf9a623cd8 'clen' 'size_t':'unsigned long'
clen
   9: DeclRefExpr 0x55bf9a625cb0 <async.c:661:13> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
pvariant
  10: ImplicitCastExpr 0x55bf9a625cd8 <async.c:661:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625cb0 <col:13> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
[B26.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ImplicitCastExpr 0x55bf9a625cf0 <async.c:661:13> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a625cd8 <col:13> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a625cb0 <col:13> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
[B26.10] (ImplicitCastExpr, IntegralCast, unsigned long)
  12: CompoundAssignOperator 0x55bf9a625d08 <async.c:661:5, col:13> 'size_t':'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x55bf9a625c88 <col:5> 'size_t':'unsigned long' lvalue Var 0x55bf9a623cd8 'clen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55bf9a625cf0 <col:13> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55bf9a625cd8 <col:13> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a625cb0 <col:13> 'int' lvalue Var 0x55bf9a623aa0 'pvariant' 'int'
[B26.8] -= [B26.11]
  13: DeclRefExpr 0x55bf9a625d40 <async.c:663:9> 'int' lvalue Var 0x55bf9a623b18 'hasnext' 'int'
hasnext
  14: ImplicitCastExpr 0x55bf9a625f50 <async.c:663:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625d40 <col:9> 'int' lvalue Var 0x55bf9a623b18 'hasnext' 'int'
[B26.13] (ImplicitCastExpr, LValueToRValue, int)
   T: [B26.14] && ...
   Preds (2): B27 B28
   Succs (2): B25 B14

 [B27]
   1: IntegerLiteral 0x55bf9a625b50 <async.c:659:44> 'int' 1
1
   Preds (1): B29
   Succs (1): B26

 [B28]
   1: IntegerLiteral 0x55bf9a625b70 <async.c:659:48> 'int' 0
0
   Preds (1): B29
   Succs (1): B26

 [B29]
   1: DeclRefExpr 0x55bf9a6257f0 </usr/include/ctype.h:170:7> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
__res
   2: ImplicitCastExpr 0x55bf9a625818 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6257f0 <col:7> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
[B29.1] (ImplicitCastExpr, LValueToRValue, int)
   3: StmtExpr 0x55bf9a625a90 </usr/include/ctype.h:157:4, line:170:15> 'int'
`-CompoundStmt 0x55bf9a625830 <line:157:5, line:170:14>
  |-DeclStmt 0x55bf9a624c58 <line:157:7, col:16>col:11
  | `-VarDecl 0x55bf9a624bf8 <col:7, col:11> col:11 used __res 'int'
  |-IfStmt 0x55bf9a6257b8 <line:158:7, line:169:23>
  | |-<<<NULL>>>
  | |-<<<NULL>>>
  | |-BinaryOperator 0x55bf9a624d70 <line:158:11, col:24> 'int' '>'
  | | |-UnaryExprOrTypeTraitExpr 0x55bf9a624d18 <col:11, col:20> 'unsigned long' sizeof
  | | | `-ParenExpr 0x55bf9a624cf8 <col:18, col:20> 'const char' lvalue
  | | |   `-ArraySubscriptExpr 0x55bf9a624cd0 <async.c:659:25, col:31> 'const char' lvalue
  | | |     |-ImplicitCastExpr 0x55bf9a624cb8 <col:25> 'const char *' <LValueToRValue>
  | | |     | `-DeclRefExpr 0x55bf9a624c70 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  | | |     `-IntegerLiteral 0x55bf9a624c98 <col:30> 'int' 0
  | | `-ImplicitCastExpr 0x55bf9a624d58 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
  | |   `-IntegerLiteral 0x55bf9a624d38 <col:24> 'int' 1
  | |-CompoundStmt 0x55bf9a625520 <line:159:2, line:167:2>
  | | `-IfStmt 0x55bf9a6254e8 <line:160:4, line:220:71>
  | |   |-<<<NULL>>>
  | |   |-<<<NULL>>>
  | |   |-CallExpr 0x55bf9a624e60 <line:160:8, col:31> 'int'
  | |   | |-ImplicitCastExpr 0x55bf9a624e48 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
  | |   | | `-DeclRefExpr 0x55bf9a624d98 <col:8> '<builtin fn type>' Function 0x55bf9a615918 '__builtin_constant_p' 'int ()'
  | |   | `-ArraySubscriptExpr 0x55bf9a624e20 <async.c:659:25, col:31> 'const char' lvalue
  | |   |   |-ImplicitCastExpr 0x55bf9a624e08 <col:25> 'const char *' <LValueToRValue>
  | |   |   | `-DeclRefExpr 0x55bf9a624dc0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  | |   |   `-IntegerLiteral 0x55bf9a624de8 <col:30> 'int' 0
  | |   |-CompoundStmt 0x55bf9a625350 </usr/include/ctype.h:161:6, line:164:6>
  | |   | |-DeclStmt 0x55bf9a624fe0 <line:162:8, col:21>col:12
  | |   | | `-VarDecl 0x55bf9a624ea8 <col:8, col:20> col:12 used __c 'int' cinit
  | |   | |   `-ImplicitCastExpr 0x55bf9a624fc8 <col:18, col:20> 'int' <IntegralCast>
  | |   | |     `-ImplicitCastExpr 0x55bf9a624fb0 <col:18, col:20> 'char' <LValueToRValue>
  | |   | |       `-ParenExpr 0x55bf9a624f90 <col:18, col:20> 'const char' lvalue
  | |   | |         `-ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
  | |   | |           |-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
  | |   | |           | `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  | |   | |           `-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
  | |   | `-BinaryOperator 0x55bf9a625328 </usr/include/ctype.h:163:8, col:55> 'int' '='
  | |   |   |-DeclRefExpr 0x55bf9a624ff8 <col:8> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
  | |   |   `-ConditionalOperator 0x55bf9a6252f8 <col:16, col:55> 'int'
  | |   |     |-BinaryOperator 0x55bf9a625150 <col:16, col:36> 'int' '||'
  | |   |     | |-BinaryOperator 0x55bf9a6250a0 <col:16, col:23> 'int' '<'
  | |   |     | | |-ImplicitCastExpr 0x55bf9a625088 <col:16> 'int' <LValueToRValue>
  | |   |     | | | `-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  | |   |     | | `-UnaryOperator 0x55bf9a625068 <col:22, col:23> 'int' prefix '-'
  | |   |     | |   `-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
  | |   |     | `-BinaryOperator 0x55bf9a625128 <col:30, col:36> 'int' '>'
  | |   |     |   |-ImplicitCastExpr 0x55bf9a625110 <col:30> 'int' <LValueToRValue>
  | |   |     |   | `-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  | |   |     |   `-IntegerLiteral 0x55bf9a6250f0 <col:36> 'int' 255
  | |   |     |-ImplicitCastExpr 0x55bf9a6252c8 <col:42> 'int' <LValueToRValue>
  | |   |     | `-DeclRefExpr 0x55bf9a625178 <col:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  | |   |     `-ImplicitCastExpr 0x55bf9a6252e0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
  | |   |       `-ArraySubscriptExpr 0x55bf9a6252a0 <col:48, col:55> 'const __int32_t':'const int' lvalue
  | |   |         |-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
  | |   |         | `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
  | |   |         |   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
  | |   |         |     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
  | |   |         |       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  | |   |         |         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
  | |   |         `-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
  | |   |           `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  | |   `-BinaryOperator 0x55bf9a6254c0 <line:166:6, line:220:71> 'int' '='
  | |     |-DeclRefExpr 0x55bf9a625370 <line:166:6> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
  | |     `-CallExpr 0x55bf9a625460 <line:220:35, col:71> 'int'
  | |       |-ImplicitCastExpr 0x55bf9a625448 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
  | |       | `-DeclRefExpr 0x55bf9a625398 <col:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
  | |       `-ImplicitCastExpr 0x55bf9a6254a8 <async.c:659:25, col:31> 'int' <IntegralCast>
  | |         `-ImplicitCastExpr 0x55bf9a625490 <col:25, col:31> 'char' <LValueToRValue>
  | |           `-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
  | |             |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
  | |             | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  | |             `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
  | `-BinaryOperator 0x55bf9a625790 </usr/include/ctype.h:169:2, col:23> 'int' '='
  |   |-DeclRefExpr 0x55bf9a625538 <col:2> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
  |   `-ImplicitCastExpr 0x55bf9a625778 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
  |     `-ArraySubscriptExpr 0x55bf9a625750 <col:10, col:23> 'const __int32_t':'const int' lvalue
  |       |-ImplicitCastExpr 0x55bf9a625738 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
  |       | `-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
  |       |   `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |       |     `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
  |       |       `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |       |         `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
  |       `-CStyleCastExpr 0x55bf9a625710 <line:169:14, col:22> 'int' <IntegralCast>
  |         `-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
  |           `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
  |             `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
  |               |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
  |               | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  |               `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
  `-ImplicitCastExpr 0x55bf9a625818 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a6257f0 <col:7> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
({ ... ; [B29.2] })
   4: CharacterLiteral 0x55bf9a625af0 <async.c:659:37> 'int' 112
'p'
   5: BinaryOperator 0x55bf9a625b08 </usr/include/ctype.h:156:3, async.c:659:37> 'int' '=='
|-ParenExpr 0x55bf9a625ad0 </usr/include/ctype.h:156:3, line:170:16> 'int'
| `-UnaryOperator 0x55bf9a625ab0 <line:156:4, line:170:15> 'int' prefix '__extension__'
|   `-StmtExpr 0x55bf9a625a90 <line:157:4, line:170:15> 'int'
|     `-CompoundStmt 0x55bf9a625830 <line:157:5, line:170:14>
|       |-DeclStmt 0x55bf9a624c58 <line:157:7, col:16>col:11
|       | `-VarDecl 0x55bf9a624bf8 <col:7, col:11> col:11 used __res 'int'
|       |-IfStmt 0x55bf9a6257b8 <line:158:7, line:169:23>
|       | |-<<<NULL>>>
|       | |-<<<NULL>>>
|       | |-BinaryOperator 0x55bf9a624d70 <line:158:11, col:24> 'int' '>'
|       | | |-UnaryExprOrTypeTraitExpr 0x55bf9a624d18 <col:11, col:20> 'unsigned long' sizeof
|       | | | `-ParenExpr 0x55bf9a624cf8 <col:18, col:20> 'const char' lvalue
|       | | |   `-ArraySubscriptExpr 0x55bf9a624cd0 <async.c:659:25, col:31> 'const char' lvalue
|       | | |     |-ImplicitCastExpr 0x55bf9a624cb8 <col:25> 'const char *' <LValueToRValue>
|       | | |     | `-DeclRefExpr 0x55bf9a624c70 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|       | | |     `-IntegerLiteral 0x55bf9a624c98 <col:30> 'int' 0
|       | | `-ImplicitCastExpr 0x55bf9a624d58 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
|       | |   `-IntegerLiteral 0x55bf9a624d38 <col:24> 'int' 1
|       | |-CompoundStmt 0x55bf9a625520 <line:159:2, line:167:2>
|       | | `-IfStmt 0x55bf9a6254e8 <line:160:4, line:220:71>
|       | |   |-<<<NULL>>>
|       | |   |-<<<NULL>>>
|       | |   |-CallExpr 0x55bf9a624e60 <line:160:8, col:31> 'int'
|       | |   | |-ImplicitCastExpr 0x55bf9a624e48 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
|       | |   | | `-DeclRefExpr 0x55bf9a624d98 <col:8> '<builtin fn type>' Function 0x55bf9a615918 '__builtin_constant_p' 'int ()'
|       | |   | `-ArraySubscriptExpr 0x55bf9a624e20 <async.c:659:25, col:31> 'const char' lvalue
|       | |   |   |-ImplicitCastExpr 0x55bf9a624e08 <col:25> 'const char *' <LValueToRValue>
|       | |   |   | `-DeclRefExpr 0x55bf9a624dc0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|       | |   |   `-IntegerLiteral 0x55bf9a624de8 <col:30> 'int' 0
|       | |   |-CompoundStmt 0x55bf9a625350 </usr/include/ctype.h:161:6, line:164:6>
|       | |   | |-DeclStmt 0x55bf9a624fe0 <line:162:8, col:21>col:12
|       | |   | | `-VarDecl 0x55bf9a624ea8 <col:8, col:20> col:12 used __c 'int' cinit
|       | |   | |   `-ImplicitCastExpr 0x55bf9a624fc8 <col:18, col:20> 'int' <IntegralCast>
|       | |   | |     `-ImplicitCastExpr 0x55bf9a624fb0 <col:18, col:20> 'char' <LValueToRValue>
|       | |   | |       `-ParenExpr 0x55bf9a624f90 <col:18, col:20> 'const char' lvalue
|       | |   | |         `-ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
|       | |   | |           |-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
|       | |   | |           | `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|       | |   | |           `-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
|       | |   | `-BinaryOperator 0x55bf9a625328 </usr/include/ctype.h:163:8, col:55> 'int' '='
|       | |   |   |-DeclRefExpr 0x55bf9a624ff8 <col:8> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
|       | |   |   `-ConditionalOperator 0x55bf9a6252f8 <col:16, col:55> 'int'
|       | |   |     |-BinaryOperator 0x55bf9a625150 <col:16, col:36> 'int' '||'
|       | |   |     | |-BinaryOperator 0x55bf9a6250a0 <col:16, col:23> 'int' '<'
|       | |   |     | | |-ImplicitCastExpr 0x55bf9a625088 <col:16> 'int' <LValueToRValue>
|       | |   |     | | | `-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|       | |   |     | | `-UnaryOperator 0x55bf9a625068 <col:22, col:23> 'int' prefix '-'
|       | |   |     | |   `-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
|       | |   |     | `-BinaryOperator 0x55bf9a625128 <col:30, col:36> 'int' '>'
|       | |   |     |   |-ImplicitCastExpr 0x55bf9a625110 <col:30> 'int' <LValueToRValue>
|       | |   |     |   | `-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|       | |   |     |   `-IntegerLiteral 0x55bf9a6250f0 <col:36> 'int' 255
|       | |   |     |-ImplicitCastExpr 0x55bf9a6252c8 <col:42> 'int' <LValueToRValue>
|       | |   |     | `-DeclRefExpr 0x55bf9a625178 <col:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|       | |   |     `-ImplicitCastExpr 0x55bf9a6252e0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
|       | |   |       `-ArraySubscriptExpr 0x55bf9a6252a0 <col:48, col:55> 'const __int32_t':'const int' lvalue
|       | |   |         |-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
|       | |   |         | `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
|       | |   |         |   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
|       | |   |         |     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
|       | |   |         |       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|       | |   |         |         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
|       | |   |         `-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
|       | |   |           `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|       | |   `-BinaryOperator 0x55bf9a6254c0 <line:166:6, line:220:71> 'int' '='
|       | |     |-DeclRefExpr 0x55bf9a625370 <line:166:6> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
|       | |     `-CallExpr 0x55bf9a625460 <line:220:35, col:71> 'int'
|       | |       |-ImplicitCastExpr 0x55bf9a625448 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
|       | |       | `-DeclRefExpr 0x55bf9a625398 <col:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
|       | |       `-ImplicitCastExpr 0x55bf9a6254a8 <async.c:659:25, col:31> 'int' <IntegralCast>
|       | |         `-ImplicitCastExpr 0x55bf9a625490 <col:25, col:31> 'char' <LValueToRValue>
|       | |           `-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
|       | |             |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
|       | |             | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|       | |             `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
|       | `-BinaryOperator 0x55bf9a625790 </usr/include/ctype.h:169:2, col:23> 'int' '='
|       |   |-DeclRefExpr 0x55bf9a625538 <col:2> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
|       |   `-ImplicitCastExpr 0x55bf9a625778 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x55bf9a625750 <col:10, col:23> 'const __int32_t':'const int' lvalue
|       |       |-ImplicitCastExpr 0x55bf9a625738 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
|       |       | `-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
|       |       |   `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
|       |       |     `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
|       |       |       `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|       |       |         `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
|       |       `-CStyleCastExpr 0x55bf9a625710 <line:169:14, col:22> 'int' <IntegralCast>
|       |         `-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
|       |           `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
|       |             `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
|       |               |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
|       |               | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|       |               `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
|       `-ImplicitCastExpr 0x55bf9a625818 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x55bf9a6257f0 <col:7> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
`-CharacterLiteral 0x55bf9a625af0 <async.c:659:37> 'int' 112
(__extension__ [B29.3]) == [B29.4]
   T: ([B29.5]) ? ... : ...
   Preds (3): B30 B31 B32
   Succs (2): B27 B28

 [B30]
   1: DeclRefExpr 0x55bf9a625560 </usr/include/ctype.h:220:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
__ctype_tolower_loc
   2: ImplicitCastExpr 0x55bf9a625588 </usr/include/ctype.h:220:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
[B30.1] (ImplicitCastExpr, FunctionToPointerDecay, const __int32_t **(*)(void))
   3: CallExpr 0x55bf9a6255a0 </usr/include/ctype.h:220:45, col:66> 'const __int32_t **'
`-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
[B30.2]()
   4: UnaryOperator 0x55bf9a6255c8 </usr/include/ctype.h:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
`-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
  `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
*[B30.3]
   5: ImplicitCastExpr 0x55bf9a625738 </usr/include/ctype.h:169:10, col:12> 'const __int32_t *' <LValueToRValue>
`-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
  `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
    `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
      `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
([B30.4]) (ImplicitCastExpr, LValueToRValue, const __int32_t *)
   6: DeclRefExpr 0x55bf9a625608 <async.c:659:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   7: ImplicitCastExpr 0x55bf9a625650 <async.c:659:25> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
[B30.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: IntegerLiteral 0x55bf9a625630 <async.c:659:30> 'int' 0
0
   9: ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
|-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
`-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
[B30.7][[B30.8]]
  10: ImplicitCastExpr 0x55bf9a6256f8 </usr/include/ctype.h:169:20, col:22> 'char' <LValueToRValue>
`-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
  `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
    |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
    `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
([B30.9]) (ImplicitCastExpr, LValueToRValue, char)
  11: CStyleCastExpr 0x55bf9a625710 </usr/include/ctype.h:169:14, col:22> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
  `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
    `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
      |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
      `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
(int)[B30.10] (CStyleCastExpr, IntegralCast, int)
  12: ArraySubscriptExpr 0x55bf9a625750 </usr/include/ctype.h:169:10, col:23> 'const __int32_t':'const int' lvalue
|-ImplicitCastExpr 0x55bf9a625738 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
| `-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
|   `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
|     `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
|       `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
`-CStyleCastExpr 0x55bf9a625710 <line:169:14, col:22> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
    `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
      `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
        |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
        `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
[B30.5][[B30.11]]
  13: ImplicitCastExpr 0x55bf9a625778 </usr/include/ctype.h:169:10, col:23> '__int32_t':'int' <LValueToRValue>
`-ArraySubscriptExpr 0x55bf9a625750 <col:10, col:23> 'const __int32_t':'const int' lvalue
  |-ImplicitCastExpr 0x55bf9a625738 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
  | `-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
  |   `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |     `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
  |       `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
  `-CStyleCastExpr 0x55bf9a625710 <line:169:14, col:22> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
      `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
        `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
          |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
          `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
[B30.12] (ImplicitCastExpr, LValueToRValue, __int32_t)
  14: DeclRefExpr 0x55bf9a625538 </usr/include/ctype.h:169:2> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
__res
  15: BinaryOperator 0x55bf9a625790 </usr/include/ctype.h:169:2, col:23> 'int' '='
|-DeclRefExpr 0x55bf9a625538 <col:2> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
`-ImplicitCastExpr 0x55bf9a625778 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
  `-ArraySubscriptExpr 0x55bf9a625750 <col:10, col:23> 'const __int32_t':'const int' lvalue
    |-ImplicitCastExpr 0x55bf9a625738 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
    | `-ParenExpr 0x55bf9a6255e8 <col:10, col:12> 'const __int32_t *' lvalue
    |   `-UnaryOperator 0x55bf9a6255c8 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
    |     `-CallExpr 0x55bf9a6255a0 <col:45, col:66> 'const __int32_t **'
    |       `-ImplicitCastExpr 0x55bf9a625588 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55bf9a625560 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
    `-CStyleCastExpr 0x55bf9a625710 <line:169:14, col:22> 'int' <IntegralCast>
      `-ImplicitCastExpr 0x55bf9a6256f8 <col:20, col:22> 'char' <LValueToRValue>
        `-ParenExpr 0x55bf9a6256d8 <col:20, col:22> 'const char' lvalue
          `-ArraySubscriptExpr 0x55bf9a625668 <async.c:659:25, col:31> 'const char' lvalue
            |-ImplicitCastExpr 0x55bf9a625650 <col:25> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x55bf9a625608 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
            `-IntegerLiteral 0x55bf9a625630 <col:30> 'int' 0
[B30.14] = [B30.13]
   Preds (1): B38
   Succs (1): B29

 [B31]
   1: DeclRefExpr 0x55bf9a625398 </usr/include/ctype.h:220:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
tolower
   2: ImplicitCastExpr 0x55bf9a625448 </usr/include/ctype.h:220:35> 'int (*)(int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a625398 <col:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
[B31.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int))
   3: DeclRefExpr 0x55bf9a6253c0 <async.c:659:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   4: ImplicitCastExpr 0x55bf9a625408 <async.c:659:25> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
[B31.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: IntegerLiteral 0x55bf9a6253e8 <async.c:659:30> 'int' 0
0
   6: ArraySubscriptExpr 0x55bf9a625420 <async.c:659:25, col:31> 'const char' lvalue
|-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
`-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
[B31.4][[B31.5]]
   7: ImplicitCastExpr 0x55bf9a625490 <async.c:659:25, col:31> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
  |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
[B31.6] (ImplicitCastExpr, LValueToRValue, char)
   8: ImplicitCastExpr 0x55bf9a6254a8 <async.c:659:25, col:31> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a625490 <col:25, col:31> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
    |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
    `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
[B31.7] (ImplicitCastExpr, IntegralCast, int)
   9: CallExpr 0x55bf9a625460 </usr/include/ctype.h:220:35, col:71> 'int'
|-ImplicitCastExpr 0x55bf9a625448 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a625398 <col:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
`-ImplicitCastExpr 0x55bf9a6254a8 <async.c:659:25, col:31> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55bf9a625490 <col:25, col:31> 'char' <LValueToRValue>
    `-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
      |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
      `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
[B31.2]([B31.8])
  10: DeclRefExpr 0x55bf9a625370 </usr/include/ctype.h:166:6> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
__res
  11: BinaryOperator 0x55bf9a6254c0 </usr/include/ctype.h:166:6, line:220:71> 'int' '='
|-DeclRefExpr 0x55bf9a625370 <line:166:6> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
`-CallExpr 0x55bf9a625460 <line:220:35, col:71> 'int'
  |-ImplicitCastExpr 0x55bf9a625448 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a625398 <col:35> 'int (int)' Function 0x55bf9a4fc490 'tolower' 'int (int)'
  `-ImplicitCastExpr 0x55bf9a6254a8 <async.c:659:25, col:31> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55bf9a625490 <col:25, col:31> 'char' <LValueToRValue>
      `-ArraySubscriptExpr 0x55bf9a625420 <col:25, col:31> 'const char' lvalue
        |-ImplicitCastExpr 0x55bf9a625408 <col:25> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55bf9a6253c0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
        `-IntegerLiteral 0x55bf9a6253e8 <col:30> 'int' 0
[B31.10] = [B31.9]
   Preds (1): B37
   Succs (1): B29

 [B32]
   1: ConditionalOperator 0x55bf9a6252f8 </usr/include/ctype.h:163:16, col:55> 'int'
|-BinaryOperator 0x55bf9a625150 <col:16, col:36> 'int' '||'
| |-BinaryOperator 0x55bf9a6250a0 <col:16, col:23> 'int' '<'
| | |-ImplicitCastExpr 0x55bf9a625088 <col:16> 'int' <LValueToRValue>
| | | `-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
| | `-UnaryOperator 0x55bf9a625068 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
| `-BinaryOperator 0x55bf9a625128 <col:30, col:36> 'int' '>'
|   |-ImplicitCastExpr 0x55bf9a625110 <col:30> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
|   `-IntegerLiteral 0x55bf9a6250f0 <col:36> 'int' 255
|-ImplicitCastExpr 0x55bf9a6252c8 <col:42> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a625178 <col:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
`-ImplicitCastExpr 0x55bf9a6252e0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
  `-ArraySubscriptExpr 0x55bf9a6252a0 <col:48, col:55> 'const __int32_t':'const int' lvalue
    |-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
    | `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
    |   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
    |     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
    |       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
    `-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B36.12] || [B35.4] ? [B33.2] : [B34.9]
   2: DeclRefExpr 0x55bf9a624ff8 </usr/include/ctype.h:163:8> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
__res
   3: BinaryOperator 0x55bf9a625328 </usr/include/ctype.h:163:8, col:55> 'int' '='
|-DeclRefExpr 0x55bf9a624ff8 <col:8> 'int' lvalue Var 0x55bf9a624bf8 '__res' 'int'
`-ConditionalOperator 0x55bf9a6252f8 <col:16, col:55> 'int'
  |-BinaryOperator 0x55bf9a625150 <col:16, col:36> 'int' '||'
  | |-BinaryOperator 0x55bf9a6250a0 <col:16, col:23> 'int' '<'
  | | |-ImplicitCastExpr 0x55bf9a625088 <col:16> 'int' <LValueToRValue>
  | | | `-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  | | `-UnaryOperator 0x55bf9a625068 <col:22, col:23> 'int' prefix '-'
  | |   `-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
  | `-BinaryOperator 0x55bf9a625128 <col:30, col:36> 'int' '>'
  |   |-ImplicitCastExpr 0x55bf9a625110 <col:30> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  |   `-IntegerLiteral 0x55bf9a6250f0 <col:36> 'int' 255
  |-ImplicitCastExpr 0x55bf9a6252c8 <col:42> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a625178 <col:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
  `-ImplicitCastExpr 0x55bf9a6252e0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
    `-ArraySubscriptExpr 0x55bf9a6252a0 <col:48, col:55> 'const __int32_t':'const int' lvalue
      |-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
      | `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
      |   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
      |     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
      |       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
      |         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
      `-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B32.2] = [B32.1]
   Preds (2): B33 B34
   Succs (1): B29

 [B33]
   1: DeclRefExpr 0x55bf9a625178 </usr/include/ctype.h:163:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
__c
   2: ImplicitCastExpr 0x55bf9a6252c8 </usr/include/ctype.h:163:42> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625178 <col:42> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B33.1] (ImplicitCastExpr, LValueToRValue, int)
   Preds (2): B35 B36
   Succs (1): B32

 [B34]
   1: DeclRefExpr 0x55bf9a6251a0 </usr/include/ctype.h:220:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
__ctype_tolower_loc
   2: ImplicitCastExpr 0x55bf9a6251c8 </usr/include/ctype.h:220:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
[B34.1] (ImplicitCastExpr, FunctionToPointerDecay, const __int32_t **(*)(void))
   3: CallExpr 0x55bf9a6251e0 </usr/include/ctype.h:220:45, col:66> 'const __int32_t **'
`-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
[B34.2]()
   4: UnaryOperator 0x55bf9a625208 </usr/include/ctype.h:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
`-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
  `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
*[B34.3]
   5: ImplicitCastExpr 0x55bf9a625270 </usr/include/ctype.h:163:48, col:50> 'const __int32_t *' <LValueToRValue>
`-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
  `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
    `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
      `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
([B34.4]) (ImplicitCastExpr, LValueToRValue, const __int32_t *)
   6: DeclRefExpr 0x55bf9a625248 </usr/include/ctype.h:163:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
__c
   7: ImplicitCastExpr 0x55bf9a625288 </usr/include/ctype.h:163:52> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B34.6] (ImplicitCastExpr, LValueToRValue, int)
   8: ArraySubscriptExpr 0x55bf9a6252a0 </usr/include/ctype.h:163:48, col:55> 'const __int32_t':'const int' lvalue
|-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
| `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
|   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
|     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
|       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
`-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B34.5][[B34.7]]
   9: ImplicitCastExpr 0x55bf9a6252e0 </usr/include/ctype.h:163:48, col:55> '__int32_t':'int' <LValueToRValue>
`-ArraySubscriptExpr 0x55bf9a6252a0 <col:48, col:55> 'const __int32_t':'const int' lvalue
  |-ImplicitCastExpr 0x55bf9a625270 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
  | `-ParenExpr 0x55bf9a625228 <col:48, col:50> 'const __int32_t *' lvalue
  |   `-UnaryOperator 0x55bf9a625208 <line:220:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |     `-CallExpr 0x55bf9a6251e0 <col:45, col:66> 'const __int32_t **'
  |       `-ImplicitCastExpr 0x55bf9a6251c8 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x55bf9a6251a0 <col:45> 'const __int32_t **(void)' Function 0x55bf9a53a898 '__ctype_tolower_loc' 'const __int32_t **(void)'
  `-ImplicitCastExpr 0x55bf9a625288 <line:163:52> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a625248 <col:52> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B34.8] (ImplicitCastExpr, LValueToRValue, __int32_t)
   Preds (1): B35
   Succs (1): B32

 [B35]
   1: DeclRefExpr 0x55bf9a6250c8 </usr/include/ctype.h:163:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
__c
   2: ImplicitCastExpr 0x55bf9a625110 </usr/include/ctype.h:163:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B35.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55bf9a6250f0 </usr/include/ctype.h:163:36> 'int' 255
255
   4: BinaryOperator 0x55bf9a625128 </usr/include/ctype.h:163:30, col:36> 'int' '>'
|-ImplicitCastExpr 0x55bf9a625110 <col:30> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a6250c8 <col:30> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
`-IntegerLiteral 0x55bf9a6250f0 <col:36> 'int' 255
[B35.2] > [B35.3]
   T: [B36.12] || [B35.4] ? ... : ...
   Preds (1): B36
   Succs (2): B33 B34

 [B36]
   1: DeclRefExpr 0x55bf9a624f08 <async.c:659:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   2: ImplicitCastExpr 0x55bf9a624f50 <async.c:659:25> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
[B36.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x55bf9a624f30 <async.c:659:30> 'int' 0
0
   4: ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
|-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
`-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
[B36.2][[B36.3]]
   5: ImplicitCastExpr 0x55bf9a624fb0 </usr/include/ctype.h:162:18, col:20> 'char' <LValueToRValue>
`-ParenExpr 0x55bf9a624f90 <col:18, col:20> 'const char' lvalue
  `-ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
    |-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
    `-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
([B36.4]) (ImplicitCastExpr, LValueToRValue, char)
   6: ImplicitCastExpr 0x55bf9a624fc8 </usr/include/ctype.h:162:18, col:20> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a624fb0 <col:18, col:20> 'char' <LValueToRValue>
  `-ParenExpr 0x55bf9a624f90 <col:18, col:20> 'const char' lvalue
    `-ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
      |-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
      `-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
[B36.5] (ImplicitCastExpr, IntegralCast, int)
   7: DeclStmt 0x55bf9a624fe0 </usr/include/ctype.h:162:8, col:21>col:12
`-VarDecl 0x55bf9a624ea8 <col:8, col:20> col:12 used __c 'int' cinit
  `-ImplicitCastExpr 0x55bf9a624fc8 <col:18, col:20> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55bf9a624fb0 <col:18, col:20> 'char' <LValueToRValue>
      `-ParenExpr 0x55bf9a624f90 <col:18, col:20> 'const char' lvalue
        `-ArraySubscriptExpr 0x55bf9a624f68 <async.c:659:25, col:31> 'const char' lvalue
          |-ImplicitCastExpr 0x55bf9a624f50 <col:25> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x55bf9a624f08 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
          `-IntegerLiteral 0x55bf9a624f30 <col:30> 'int' 0
int __c = (cstr[0]);
   8: DeclRefExpr 0x55bf9a625020 </usr/include/ctype.h:163:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
__c
   9: ImplicitCastExpr 0x55bf9a625088 </usr/include/ctype.h:163:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
[B36.8] (ImplicitCastExpr, LValueToRValue, int)
  10: IntegerLiteral 0x55bf9a625048 </usr/include/ctype.h:163:23> 'int' 128
128
  11: UnaryOperator 0x55bf9a625068 </usr/include/ctype.h:163:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
-[B36.10]
  12: BinaryOperator 0x55bf9a6250a0 </usr/include/ctype.h:163:16, col:23> 'int' '<'
|-ImplicitCastExpr 0x55bf9a625088 <col:16> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a625020 <col:16> 'int' lvalue Var 0x55bf9a624ea8 '__c' 'int'
`-UnaryOperator 0x55bf9a625068 <col:22, col:23> 'int' prefix '-'
  `-IntegerLiteral 0x55bf9a625048 <col:23> 'int' 128
[B36.9] < [B36.11]
   T: [B36.12] || ...
   Preds (1): B37(Unreachable)
   Succs (2): B33 B35

 [B37]
   1: DeclRefExpr 0x55bf9a624d98 </usr/include/ctype.h:160:8> '<builtin fn type>' Function 0x55bf9a615918 '__builtin_constant_p' 'int ()'
__builtin_constant_p
   2: ImplicitCastExpr 0x55bf9a624e48 </usr/include/ctype.h:160:8> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x55bf9a624d98 <col:8> '<builtin fn type>' Function 0x55bf9a615918 '__builtin_constant_p' 'int ()'
[B37.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x55bf9a624dc0 <async.c:659:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
   4: ImplicitCastExpr 0x55bf9a624e08 <async.c:659:25> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a624dc0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
[B37.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: IntegerLiteral 0x55bf9a624de8 <async.c:659:30> 'int' 0
0
   6: ArraySubscriptExpr 0x55bf9a624e20 <async.c:659:25, col:31> 'const char' lvalue
|-ImplicitCastExpr 0x55bf9a624e08 <col:25> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a624dc0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
`-IntegerLiteral 0x55bf9a624de8 <col:30> 'int' 0
[B37.4][[B37.5]]
   7: CallExpr 0x55bf9a624e60 </usr/include/ctype.h:160:8, col:31> 'int'
|-ImplicitCastExpr 0x55bf9a624e48 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x55bf9a624d98 <col:8> '<builtin fn type>' Function 0x55bf9a615918 '__builtin_constant_p' 'int ()'
`-ArraySubscriptExpr 0x55bf9a624e20 <async.c:659:25, col:31> 'const char' lvalue
  |-ImplicitCastExpr 0x55bf9a624e08 <col:25> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a624dc0 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  `-IntegerLiteral 0x55bf9a624de8 <col:30> 'int' 0
[B37.2]([B37.6])
   T: if [B37.7]
   Preds (1): B38(Unreachable)
   Succs (2): B36(Unreachable) B31

 [B38]
   1: ConditionalOperator 0x55bf9a624a00 </usr/include/assert.h:98:6, line:100:67> 'void'
|-ParenExpr 0x55bf9a624680 <line:98:6, col:11> 'int'
| `-BinaryOperator 0x55bf9a624658 <async.c:657:12, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|   |-ImplicitCastExpr 0x55bf9a624628 <async.c:657:12> 'const char *' <LValueToRValue>
|   | `-DeclRefExpr 0x55bf9a624580 <col:12> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
|   `-ImplicitCastExpr 0x55bf9a624640 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
|     `-ParenExpr 0x55bf9a624608 <col:16, col:25> 'void *'
|       `-CStyleCastExpr 0x55bf9a6245e0 <col:17, col:24> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x55bf9a6245a8 <col:24> 'int' 0
|-CStyleCastExpr 0x55bf9a624720 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
| `-ParenExpr 0x55bf9a624700 <col:27, col:29> 'int'
|   `-IntegerLiteral 0x55bf9a6246a0 <col:28> 'int' 0
`-CallExpr 0x55bf9a624958 <line:100:8, col:67> 'void'
  |-ImplicitCastExpr 0x55bf9a624940 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a624748 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55bf9a52ff20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
  |-ImplicitCastExpr 0x55bf9a6249a0 <<scratch space>:152:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55bf9a624770 <col:1> 'const char [10]' lvalue "p != NULL"
  |-ImplicitCastExpr 0x55bf9a6249b8 <line:153:1> 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55bf9a6247a8 <col:1> 'const char [8]' lvalue "async.c"
  |-ImplicitCastExpr 0x55bf9a6249d0 <line:154:1> 'unsigned int' <IntegralCast>
  | `-IntegerLiteral 0x55bf9a6247d8 <col:1> 'int' 657
  `-ImplicitCastExpr 0x55bf9a6249e8 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    `-UnaryOperator 0x55bf9a624920 <col:30, col:44> 'const char [94]' lvalue prefix '__extension__'
      `-PredefinedExpr 0x55bf9a624900 <col:44> 'const char [94]' lvalue __PRETTY_FUNCTION__
        `-StringLiteral 0x55bf9a624878 <col:44> 'const char [94]' lvalue "int __redisAsyncCommand(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)"
([B41.31]) ? [B39.2] : [B40.12]
   2: DeclRefExpr 0x55bf9a624a78 <async.c:658:16> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
p
   3: ImplicitCastExpr 0x55bf9a624ac0 <async.c:658:16> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a624a78 <col:16> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
[B38.2] (ImplicitCastExpr, LValueToRValue, const char *)
   4: IntegerLiteral 0x55bf9a624aa0 <async.c:658:18> 'int' 0
0
   5: ArraySubscriptExpr 0x55bf9a624ad8 <async.c:658:16, col:19> 'const char' lvalue
|-ImplicitCastExpr 0x55bf9a624ac0 <col:16> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a624a78 <col:16> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
`-IntegerLiteral 0x55bf9a624aa0 <col:18> 'int' 0
[B38.3][[B38.4]]
   6: ImplicitCastExpr 0x55bf9a624b18 <async.c:658:16, col:19> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55bf9a624ad8 <col:16, col:19> 'const char' lvalue
  |-ImplicitCastExpr 0x55bf9a624ac0 <col:16> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a624a78 <col:16> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
  `-IntegerLiteral 0x55bf9a624aa0 <col:18> 'int' 0
[B38.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55bf9a624b30 <async.c:658:16, col:19> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a624b18 <col:16, col:19> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55bf9a624ad8 <col:16, col:19> 'const char' lvalue
    |-ImplicitCastExpr 0x55bf9a624ac0 <col:16> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55bf9a624a78 <col:16> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
    `-IntegerLiteral 0x55bf9a624aa0 <col:18> 'int' 0
[B38.6] (ImplicitCastExpr, IntegralCast, int)
   8: CharacterLiteral 0x55bf9a624b00 <async.c:658:24> 'int' 36
'$'
   9: BinaryOperator 0x55bf9a624b48 <async.c:658:16, col:24> 'int' '=='
|-ImplicitCastExpr 0x55bf9a624b30 <col:16, col:19> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55bf9a624b18 <col:16, col:19> 'char' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55bf9a624ad8 <col:16, col:19> 'const char' lvalue
|     |-ImplicitCastExpr 0x55bf9a624ac0 <col:16> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55bf9a624a78 <col:16> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
|     `-IntegerLiteral 0x55bf9a624aa0 <col:18> 'int' 0
`-CharacterLiteral 0x55bf9a624b00 <col:24> 'int' 36
[B38.7] == [B38.8]
  10: DeclRefExpr 0x55bf9a624a50 <async.c:658:5> 'int' lvalue Var 0x55bf9a623b18 'hasnext' 'int'
hasnext
  11: BinaryOperator 0x55bf9a624b90 <async.c:658:5, col:27> 'int' '='
|-DeclRefExpr 0x55bf9a624a50 <col:5> 'int' lvalue Var 0x55bf9a623b18 'hasnext' 'int'
`-ParenExpr 0x55bf9a624b70 <col:15, col:27> 'int'
  `-BinaryOperator 0x55bf9a624b48 <col:16, col:24> 'int' '=='
    |-ImplicitCastExpr 0x55bf9a624b30 <col:16, col:19> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55bf9a624b18 <col:16, col:19> 'char' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55bf9a624ad8 <col:16, col:19> 'const char' lvalue
    |     |-ImplicitCastExpr 0x55bf9a624ac0 <col:16> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x55bf9a624a78 <col:16> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
    |     `-IntegerLiteral 0x55bf9a624aa0 <col:18> 'int' 0
    `-CharacterLiteral 0x55bf9a624b00 <col:24> 'int' 36
[B38.10] = ([B38.9])
  12: DeclStmt 0x55bf9a624c58 </usr/include/ctype.h:157:7, col:16>col:11
`-VarDecl 0x55bf9a624bf8 <col:7, col:11> col:11 used __res 'int'
int __res;
  13: UnaryExprOrTypeTraitExpr 0x55bf9a624d18 </usr/include/ctype.h:158:11, col:20> 'unsigned long' sizeof
`-ParenExpr 0x55bf9a624cf8 <col:18, col:20> 'const char' lvalue
  `-ArraySubscriptExpr 0x55bf9a624cd0 <async.c:659:25, col:31> 'const char' lvalue
    |-ImplicitCastExpr 0x55bf9a624cb8 <col:25> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55bf9a624c70 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
    `-IntegerLiteral 0x55bf9a624c98 <col:30> 'int' 0
sizeof (cstr[0])
  14: IntegerLiteral 0x55bf9a624d38 </usr/include/ctype.h:158:24> 'int' 1
1
  15: ImplicitCastExpr 0x55bf9a624d58 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55bf9a624d38 <col:24> 'int' 1
[B38.14] (ImplicitCastExpr, IntegralCast, unsigned long)
  16: BinaryOperator 0x55bf9a624d70 </usr/include/ctype.h:158:11, col:24> 'int' '>'
|-UnaryExprOrTypeTraitExpr 0x55bf9a624d18 <col:11, col:20> 'unsigned long' sizeof
| `-ParenExpr 0x55bf9a624cf8 <col:18, col:20> 'const char' lvalue
|   `-ArraySubscriptExpr 0x55bf9a624cd0 <async.c:659:25, col:31> 'const char' lvalue
|     |-ImplicitCastExpr 0x55bf9a624cb8 <col:25> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55bf9a624c70 <col:25> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
|     `-IntegerLiteral 0x55bf9a624c98 <col:30> 'int' 0
`-ImplicitCastExpr 0x55bf9a624d58 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55bf9a624d38 <col:24> 'int' 1
[B38.13] > [B38.15]
   T: if [B38.16]
   Preds (2): B39 B40(Unreachable)
   Succs (2): B37(Unreachable) B30

 [B39]
   1: IntegerLiteral 0x55bf9a6246a0 </usr/include/assert.h:99:28> 'int' 0
0
   2: CStyleCastExpr 0x55bf9a624720 </usr/include/assert.h:40:29, line:99:29> 'void' <ToVoid>
`-ParenExpr 0x55bf9a624700 <col:27, col:29> 'int'
  `-IntegerLiteral 0x55bf9a6246a0 <col:28> 'int' 0
(void)([B39.1]) (CStyleCastExpr, ToVoid, void)
   Preds (1): B41
   Succs (1): B38

 [B40 (NORETURN)]
   1: DeclRefExpr 0x55bf9a624748 </usr/include/assert.h:100:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55bf9a52ff20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x55bf9a624940 </usr/include/assert.h:100:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a624748 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55bf9a52ff20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B40.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x55bf9a624770 <<scratch space>:152:1> 'const char [10]' lvalue "p != NULL"
"p != NULL"
   4: ImplicitCastExpr 0x55bf9a6249a0 <<scratch space>:152:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55bf9a624770 <col:1> 'const char [10]' lvalue "p != NULL"
[B40.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: StringLiteral 0x55bf9a6247a8 <<scratch space>:153:1> 'const char [8]' lvalue "async.c"
"async.c"
   6: ImplicitCastExpr 0x55bf9a6249b8 <<scratch space>:153:1> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55bf9a6247a8 <col:1> 'const char [8]' lvalue "async.c"
[B40.5] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   7: IntegerLiteral 0x55bf9a6247d8 <<scratch space>:154:1> 'int' 657
657
   8: ImplicitCastExpr 0x55bf9a6249d0 <<scratch space>:154:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x55bf9a6247d8 <col:1> 'int' 657
[B40.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: StringLiteral 0x55bf9a624878 </usr/include/assert.h:129:44> 'const char [94]' lvalue "int __redisAsyncCommand(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)"
"int __redisAsyncCommand(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)"
  10: PredefinedExpr 0x55bf9a624900 </usr/include/assert.h:129:44> 'const char [94]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x55bf9a624878 <col:44> 'const char [94]' lvalue "int __redisAsyncCommand(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)"
__PRETTY_FUNCTION__
  11: ImplicitCastExpr 0x55bf9a6249e8 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x55bf9a624920 <col:30, col:44> 'const char [94]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x55bf9a624900 <col:44> 'const char [94]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x55bf9a624878 <col:44> 'const char [94]' lvalue "int __redisAsyncCommand(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)"
__extension__ [B40.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: CallExpr 0x55bf9a624958 </usr/include/assert.h:100:8, col:67> 'void'
|-ImplicitCastExpr 0x55bf9a624940 <col:8> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a624748 <col:8> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x55bf9a52ff20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x55bf9a6249a0 <<scratch space>:152:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55bf9a624770 <col:1> 'const char [10]' lvalue "p != NULL"
|-ImplicitCastExpr 0x55bf9a6249b8 <line:153:1> 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55bf9a6247a8 <col:1> 'const char [8]' lvalue "async.c"
|-ImplicitCastExpr 0x55bf9a6249d0 <line:154:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x55bf9a6247d8 <col:1> 'int' 657
`-ImplicitCastExpr 0x55bf9a6249e8 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x55bf9a624920 <col:30, col:44> 'const char [94]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x55bf9a624900 <col:44> 'const char [94]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x55bf9a624878 <col:44> 'const char [94]' lvalue "int __redisAsyncCommand(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)"
[B40.2]([B40.4], [B40.6], [B40.8], [B40.11])
   Preds (1): B41
   Succs (1): B0

 [B41]
   1: DeclRefExpr 0x55bf9a6241b0 <async.c:651:13> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a6223f8 'fn' 'redisCallbackFn *'
fn
   2: ImplicitCastExpr 0x55bf9a6241d8 <async.c:651:13> 'redisCallbackFn *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6241b0 <col:13> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a6223f8 'fn' 'redisCallbackFn *'
[B41.1] (ImplicitCastExpr, LValueToRValue, redisCallbackFn *)
   3: DeclRefExpr 0x55bf9a624150 <async.c:651:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
   4: MemberExpr 0x55bf9a624178 <async.c:651:5, col:8> 'redisCallbackFn *' lvalue .fn 0x55bf9a5c1c40
`-DeclRefExpr 0x55bf9a624150 <col:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B41.3].fn
   5: BinaryOperator 0x55bf9a6241f0 <async.c:651:5, col:13> 'redisCallbackFn *' '='
|-MemberExpr 0x55bf9a624178 <col:5, col:8> 'redisCallbackFn *' lvalue .fn 0x55bf9a5c1c40
| `-DeclRefExpr 0x55bf9a624150 <col:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
`-ImplicitCastExpr 0x55bf9a6241d8 <col:13> 'redisCallbackFn *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a6241b0 <col:13> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a6223f8 'fn' 'redisCallbackFn *'
[B41.4] = [B41.2]
   6: DeclRefExpr 0x55bf9a624278 <async.c:652:19> 'void *' lvalue ParmVar 0x55bf9a622470 'privdata' 'void *'
privdata
   7: ImplicitCastExpr 0x55bf9a6242a0 <async.c:652:19> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a624278 <col:19> 'void *' lvalue ParmVar 0x55bf9a622470 'privdata' 'void *'
[B41.6] (ImplicitCastExpr, LValueToRValue, void *)
   8: DeclRefExpr 0x55bf9a624218 <async.c:652:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
   9: MemberExpr 0x55bf9a624240 <async.c:652:5, col:8> 'void *' lvalue .privdata 0x55bf9a5c1d00
`-DeclRefExpr 0x55bf9a624218 <col:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B41.8].privdata
  10: BinaryOperator 0x55bf9a6242b8 <async.c:652:5, col:19> 'void *' '='
|-MemberExpr 0x55bf9a624240 <col:5, col:8> 'void *' lvalue .privdata 0x55bf9a5c1d00
| `-DeclRefExpr 0x55bf9a624218 <col:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
`-ImplicitCastExpr 0x55bf9a6242a0 <col:19> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a624278 <col:19> 'void *' lvalue ParmVar 0x55bf9a622470 'privdata' 'void *'
[B41.9] = [B41.7]
  11: IntegerLiteral 0x55bf9a624340 <async.c:653:23> 'int' 1
1
  12: DeclRefExpr 0x55bf9a6242e0 <async.c:653:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
cb
  13: MemberExpr 0x55bf9a624308 <async.c:653:5, col:8> 'int' lvalue .pending_subs 0x55bf9a5c1ca0
`-DeclRefExpr 0x55bf9a6242e0 <col:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
[B41.12].pending_subs
  14: BinaryOperator 0x55bf9a624360 <async.c:653:5, col:23> 'int' '='
|-MemberExpr 0x55bf9a624308 <col:5, col:8> 'int' lvalue .pending_subs 0x55bf9a5c1ca0
| `-DeclRefExpr 0x55bf9a6242e0 <col:5> 'redisCallback':'struct redisCallback' lvalue Var 0x55bf9a623860 'cb' 'redisCallback':'struct redisCallback'
`-IntegerLiteral 0x55bf9a624340 <col:23> 'int' 1
[B41.13] = [B41.11]
  15: DeclRefExpr 0x55bf9a6243b0 <async.c:656:9> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
nextArgument
  16: ImplicitCastExpr 0x55bf9a6244e8 <async.c:656:9> 'const char *(*)(const char *, const char **, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a6243b0 <col:9> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
[B41.15] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(const char *, const char **, size_t *))
  17: DeclRefExpr 0x55bf9a6243d8 <async.c:656:22> 'const char *' lvalue ParmVar 0x55bf9a6224e8 'cmd' 'const char *'
cmd
  18: ImplicitCastExpr 0x55bf9a624540 <async.c:656:22> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6243d8 <col:22> 'const char *' lvalue ParmVar 0x55bf9a6224e8 'cmd' 'const char *'
[B41.17] (ImplicitCastExpr, LValueToRValue, const char *)
  19: DeclRefExpr 0x55bf9a624400 <async.c:656:27> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
cstr
  20: UnaryOperator 0x55bf9a624428 <async.c:656:26, col:27> 'const char **' prefix '&'
`-DeclRefExpr 0x55bf9a624400 <col:27> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
&[B41.19]
  21: DeclRefExpr 0x55bf9a624448 <async.c:656:33> 'size_t':'unsigned long' lvalue Var 0x55bf9a623cd8 'clen' 'size_t':'unsigned long'
clen
  22: UnaryOperator 0x55bf9a624470 <async.c:656:32, col:33> 'size_t *' prefix '&'
`-DeclRefExpr 0x55bf9a624448 <col:33> 'size_t':'unsigned long' lvalue Var 0x55bf9a623cd8 'clen' 'size_t':'unsigned long'
&[B41.21]
  23: CallExpr 0x55bf9a624500 <async.c:656:9, col:37> 'const char *'
|-ImplicitCastExpr 0x55bf9a6244e8 <col:9> 'const char *(*)(const char *, const char **, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a6243b0 <col:9> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
|-ImplicitCastExpr 0x55bf9a624540 <col:22> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a6243d8 <col:22> 'const char *' lvalue ParmVar 0x55bf9a6224e8 'cmd' 'const char *'
|-UnaryOperator 0x55bf9a624428 <col:26, col:27> 'const char **' prefix '&'
| `-DeclRefExpr 0x55bf9a624400 <col:27> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
`-UnaryOperator 0x55bf9a624470 <col:32, col:33> 'size_t *' prefix '&'
  `-DeclRefExpr 0x55bf9a624448 <col:33> 'size_t':'unsigned long' lvalue Var 0x55bf9a623cd8 'clen' 'size_t':'unsigned long'
[B41.16]([B41.18], [B41.20], [B41.22])
  24: DeclRefExpr 0x55bf9a624388 <async.c:656:5> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
p
  25: BinaryOperator 0x55bf9a624558 <async.c:656:5, col:37> 'const char *' '='
|-DeclRefExpr 0x55bf9a624388 <col:5> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
`-CallExpr 0x55bf9a624500 <col:9, col:37> 'const char *'
  |-ImplicitCastExpr 0x55bf9a6244e8 <col:9> 'const char *(*)(const char *, const char **, size_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a6243b0 <col:9> 'const char *(const char *, const char **, size_t *)' Function 0x55bf9a6211e8 'nextArgument' 'const char *(const char *, const char **, size_t *)'
  |-ImplicitCastExpr 0x55bf9a624540 <col:22> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a6243d8 <col:22> 'const char *' lvalue ParmVar 0x55bf9a6224e8 'cmd' 'const char *'
  |-UnaryOperator 0x55bf9a624428 <col:26, col:27> 'const char **' prefix '&'
  | `-DeclRefExpr 0x55bf9a624400 <col:27> 'const char *' lvalue Var 0x55bf9a623bc0 'cstr' 'const char *'
  `-UnaryOperator 0x55bf9a624470 <col:32, col:33> 'size_t *' prefix '&'
    `-DeclRefExpr 0x55bf9a624448 <col:33> 'size_t':'unsigned long' lvalue Var 0x55bf9a623cd8 'clen' 'size_t':'unsigned long'
[B41.24] = [B41.23]
  26: DeclRefExpr 0x55bf9a624580 <async.c:657:12> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
p
  27: ImplicitCastExpr 0x55bf9a624628 <async.c:657:12> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a624580 <col:12> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
[B41.26] (ImplicitCastExpr, LValueToRValue, const char *)
  28: IntegerLiteral 0x55bf9a6245a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  29: CStyleCastExpr 0x55bf9a6245e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55bf9a6245a8 <col:24> 'int' 0
(void *)[B41.28] (CStyleCastExpr, NullToPointer, void *)
  30: ImplicitCastExpr 0x55bf9a624640 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x55bf9a624608 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55bf9a6245e0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55bf9a6245a8 <col:24> 'int' 0
([B41.29]) (ImplicitCastExpr, BitCast, const char *)
  31: BinaryOperator 0x55bf9a624658 <async.c:657:12, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ImplicitCastExpr 0x55bf9a624628 <async.c:657:12> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a624580 <col:12> 'const char *' lvalue Var 0x55bf9a623df0 'p' 'const char *'
`-ImplicitCastExpr 0x55bf9a624640 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x55bf9a624608 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55bf9a6245e0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55bf9a6245a8 <col:24> 'int' 0
[B41.27] != [B41.30]
   T: ([B41.31]) ? ... : ...
   Preds (1): B43
   Succs (2): B39 B40

 [B42]
   1: IntegerLiteral 0x55bf9a6240c0 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x55bf9a6240e0 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55bf9a6240c0 <col:20> 'int' 1
-[B42.1]
   3: ReturnStmt 0x55bf9a624100 <async.c:648:59, ./read.h:37:20>
`-UnaryOperator 0x55bf9a6240e0 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55bf9a6240c0 <col:20> 'int' 1
return [B42.2];
   Preds (1): B43
   Succs (1): B0

 [B43]
   1: DeclRefExpr 0x55bf9a622740 <async.c:635:25> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
ac
   2: ImplicitCastExpr 0x55bf9a622768 <async.c:635:25> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a622740 <col:25> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B43.1] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   3: MemberExpr 0x55bf9a622780 <async.c:635:25, col:29> 'redisContext':'struct redisContext' lvalue ->c 0x55bf9a5c26f0
`-ImplicitCastExpr 0x55bf9a622768 <col:25> 'redisAsyncContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a622740 <col:25> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
[B43.2]->c
   4: UnaryOperator 0x55bf9a6227d8 <async.c:635:23, col:30> 'redisContext *' prefix '&'
`-ParenExpr 0x55bf9a6227b8 <col:24, col:30> 'redisContext':'struct redisContext' lvalue
  `-MemberExpr 0x55bf9a622780 <col:25, col:29> 'redisContext':'struct redisContext' lvalue ->c 0x55bf9a5c26f0
    `-ImplicitCastExpr 0x55bf9a622768 <col:25> 'redisAsyncContext *' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a622740 <col:25> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
&([B43.3])
   5: DeclStmt 0x55bf9a6227f8 <async.c:635:5, col:31>col:19
`-VarDecl 0x55bf9a6226e0 <col:5, col:30> col:19 used c 'redisContext *' cinit
  `-UnaryOperator 0x55bf9a6227d8 <col:23, col:30> 'redisContext *' prefix '&'
    `-ParenExpr 0x55bf9a6227b8 <col:24, col:30> 'redisContext':'struct redisContext' lvalue
      `-MemberExpr 0x55bf9a622780 <col:25, col:29> 'redisContext':'struct redisContext' lvalue ->c 0x55bf9a5c26f0
        `-ImplicitCastExpr 0x55bf9a622768 <col:25> 'redisAsyncContext *' <LValueToRValue>
          `-DeclRefExpr 0x55bf9a622740 <col:25> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a622388 'ac' 'redisAsyncContext *'
redisContext *c = &(ac->c);
   6: DeclStmt 0x55bf9a6238c0 <async.c:636:5, col:21>col:19
`-VarDecl 0x55bf9a623860 <col:5, col:19> col:19 used cb 'redisCallback':'struct redisCallback'
redisCallback cb;
   7: DeclStmt 0x55bf9a623960 <async.c:637:5, col:24>col:18
`-VarDecl 0x55bf9a623900 <col:5, col:18> col:18 used cbdict 'struct dict *'
struct dict *cbdict;
   8: DeclStmt 0x55bf9a6239e8 <async.c:638:5, col:18>col:16
`-VarDecl 0x55bf9a623988 <col:5, col:16> col:16 used de 'dictEntry *'
dictEntry *de;
   9: DeclStmt 0x55bf9a623a70 <async.c:639:5, col:27>col:20
`-VarDecl 0x55bf9a623a10 <col:5, col:20> col:20 used existcb 'redisCallback *'
redisCallback *existcb;
  10: DeclStmt 0x55bf9a648fc0 <async.c:640:9>col:9
`-VarDecl 0x55bf9a623aa0 <col:5, col:9> col:9 used pvariant 'int'
int pvariant;
  11: DeclStmt 0x55bf9a648fa8 <async.c:640:19>col:19
`-VarDecl 0x55bf9a623b18 <col:5, col:19> col:19 used hasnext 'int'
int hasnext;
  12: DeclStmt 0x55bf9a648f90 <async.c:641:17>col:17
`-VarDecl 0x55bf9a623bc0 <col:5, col:17> col:17 used cstr 'const char *'
const char *cstr;
  13: DeclStmt 0x55bf9a648f78 <async.c:641:24>col:24
`-VarDecl 0x55bf9a623c38 <col:5, col:24> col:24 used astr 'const char *'
const char *astr;
  14: DeclStmt 0x55bf9a648f60 <async.c:642:12>col:12
`-VarDecl 0x55bf9a623cd8 <col:5, col:12> col:12 used clen 'size_t':'unsigned long'
size_t clen;
  15: DeclStmt 0x55bf9a648f48 <async.c:642:18>col:18
`-VarDecl 0x55bf9a623d48 <col:5, col:18> col:18 used alen 'size_t':'unsigned long'
size_t alen;
  16: DeclStmt 0x55bf9a623e50 <async.c:643:5, col:18>col:17
`-VarDecl 0x55bf9a623df0 <col:5, col:17> col:17 used p 'const char *'
const char *p;
  17: DeclStmt 0x55bf9a623ed8 <async.c:644:5, col:14>col:9
`-VarDecl 0x55bf9a623e78 <col:5, col:9> col:9 used sname 'sds':'char *'
sds sname;
  18: DeclStmt 0x55bf9a623f68 <async.c:645:5, col:12>col:9
`-VarDecl 0x55bf9a623f08 <col:5, col:9> col:9 used ret 'int'
int ret;
  19: DeclRefExpr 0x55bf9a623f80 <async.c:648:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
c
  20: ImplicitCastExpr 0x55bf9a623fa8 <async.c:648:9> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a623f80 <col:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B43.19] (ImplicitCastExpr, LValueToRValue, redisContext *)
  21: MemberExpr 0x55bf9a623fc0 <async.c:648:9, col:12> 'int' lvalue ->flags 0x55bf9a5bbd48
`-ImplicitCastExpr 0x55bf9a623fa8 <col:9> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a623f80 <col:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B43.20]->flags
  22: ImplicitCastExpr 0x55bf9a624080 <async.c:648:9, col:12> 'int' <LValueToRValue>
`-MemberExpr 0x55bf9a623fc0 <col:9, col:12> 'int' lvalue ->flags 0x55bf9a5bbd48
  `-ImplicitCastExpr 0x55bf9a623fa8 <col:9> 'redisContext *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a623f80 <col:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
[B43.21] (ImplicitCastExpr, LValueToRValue, int)
  23: IntegerLiteral 0x55bf9a623ff8 <./hiredis.h:63:29> 'int' 4
4
  24: IntegerLiteral 0x55bf9a624018 <./hiredis.h:67:23> 'int' 8
8
  25: BinaryOperator 0x55bf9a624038 <./hiredis.h:63:29, line:67:23> 'int' '|'
|-IntegerLiteral 0x55bf9a623ff8 <line:63:29> 'int' 4
`-IntegerLiteral 0x55bf9a624018 <line:67:23> 'int' 8
[B43.23] | [B43.24]
  26: BinaryOperator 0x55bf9a624098 <async.c:648:9, col:56> 'int' '&'
|-ImplicitCastExpr 0x55bf9a624080 <col:9, col:12> 'int' <LValueToRValue>
| `-MemberExpr 0x55bf9a623fc0 <col:9, col:12> 'int' lvalue ->flags 0x55bf9a5bbd48
|   `-ImplicitCastExpr 0x55bf9a623fa8 <col:9> 'redisContext *' <LValueToRValue>
|     `-DeclRefExpr 0x55bf9a623f80 <col:9> 'redisContext *' lvalue Var 0x55bf9a6226e0 'c' 'redisContext *'
`-ParenExpr 0x55bf9a624060 <col:20, col:56> 'int'
  `-BinaryOperator 0x55bf9a624038 <./hiredis.h:63:29, line:67:23> 'int' '|'
    |-IntegerLiteral 0x55bf9a623ff8 <line:63:29> 'int' 4
    `-IntegerLiteral 0x55bf9a624018 <line:67:23> 'int' 8
[B43.22] & ([B43.25])
   T: if [B43.26]
   Preds (1): B44
   Succs (2): B42 B41

 [B0 (EXIT)]
   Preds (4): B1 B12 B40 B42
