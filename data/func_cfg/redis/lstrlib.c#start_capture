static const char *start_capture(MatchState *ms, const char *s, const char *p, int what)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: DeclRefExpr 0x55fb42117460 <lstrlib.c:339:10> 'const char *' lvalue Var 0x55fb42116880 'res' 'const char *'
res
   2: ImplicitCastExpr 0x55fb42117488 <lstrlib.c:339:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb42117460 <col:10> 'const char *' lvalue Var 0x55fb42116880 'res' 'const char *'
[B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: ReturnStmt 0x55fb421174a0 <lstrlib.c:339:3, col:10>
`-ImplicitCastExpr 0x55fb42117488 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42117460 <col:10> 'const char *' lvalue Var 0x55fb42116880 'res' 'const char *'
return [B1.2];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55fb42117390 <lstrlib.c:338:5> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
ms
   2: ImplicitCastExpr 0x55fb421173b8 <lstrlib.c:338:5> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb42117390 <col:5> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B2.1] (ImplicitCastExpr, LValueToRValue, MatchState *)
   3: MemberExpr 0x55fb421173d0 <lstrlib.c:338:5, col:9> 'int' lvalue ->level 0x55fb421c3700
`-ImplicitCastExpr 0x55fb421173b8 <col:5> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42117390 <col:5> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B2.2]->level
   4: UnaryOperator 0x55fb42117408 <lstrlib.c:338:5, col:14> 'int' postfix '--'
`-MemberExpr 0x55fb421173d0 <col:5, col:9> 'int' lvalue ->level 0x55fb421c3700
  `-ImplicitCastExpr 0x55fb421173b8 <col:5> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb42117390 <col:5> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B2.3]--
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55fb42116de0 <lstrlib.c:334:29> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
s
   2: ImplicitCastExpr 0x55fb42116e08 <lstrlib.c:334:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb42116de0 <col:29> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
[B3.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x55fb42116c88 <lstrlib.c:334:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
ms
   4: ImplicitCastExpr 0x55fb42116cb0 <lstrlib.c:334:3> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb42116c88 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.3] (ImplicitCastExpr, LValueToRValue, MatchState *)
   5: MemberExpr 0x55fb42116cf0 <lstrlib.c:334:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
`-ImplicitCastExpr 0x55fb42116cb0 <col:3> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116c88 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.4]->capture
   6: ImplicitCastExpr 0x55fb42116d50 <lstrlib.c:334:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
`-MemberExpr 0x55fb42116cf0 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
  `-ImplicitCastExpr 0x55fb42116cb0 <col:3> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb42116c88 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, struct (anonymous struct at lstrlib.c:175:3) *)
   7: DeclRefExpr 0x55fb42116d28 <lstrlib.c:334:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
level
   8: ImplicitCastExpr 0x55fb42116d68 <lstrlib.c:334:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb42116d28 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B3.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55fb42116d80 <lstrlib.c:334:3, col:20> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
|-ImplicitCastExpr 0x55fb42116d50 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
| `-MemberExpr 0x55fb42116cf0 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
|   `-ImplicitCastExpr 0x55fb42116cb0 <col:3> 'MatchState *' <LValueToRValue>
|     `-DeclRefExpr 0x55fb42116c88 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
`-ImplicitCastExpr 0x55fb42116d68 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116d28 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B3.6][[B3.8]]
  10: MemberExpr 0x55fb42116da8 <lstrlib.c:334:3, col:22> 'const char *' lvalue .init 0x55fb421c3808
`-ArraySubscriptExpr 0x55fb42116d80 <col:3, col:20> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
  |-ImplicitCastExpr 0x55fb42116d50 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
  | `-MemberExpr 0x55fb42116cf0 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
  |   `-ImplicitCastExpr 0x55fb42116cb0 <col:3> 'MatchState *' <LValueToRValue>
  |     `-DeclRefExpr 0x55fb42116c88 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
  `-ImplicitCastExpr 0x55fb42116d68 <col:15> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55fb42116d28 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B3.9].init
  11: BinaryOperator 0x55fb42116e20 <lstrlib.c:334:3, col:29> 'const char *' '='
|-MemberExpr 0x55fb42116da8 <col:3, col:22> 'const char *' lvalue .init 0x55fb421c3808
| `-ArraySubscriptExpr 0x55fb42116d80 <col:3, col:20> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
|   |-ImplicitCastExpr 0x55fb42116d50 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
|   | `-MemberExpr 0x55fb42116cf0 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
|   |   `-ImplicitCastExpr 0x55fb42116cb0 <col:3> 'MatchState *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fb42116c88 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
|   `-ImplicitCastExpr 0x55fb42116d68 <col:15> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55fb42116d28 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
`-ImplicitCastExpr 0x55fb42116e08 <col:29> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116de0 <col:29> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
[B3.10] = [B3.2]
  12: DeclRefExpr 0x55fb42116f78 <lstrlib.c:335:28> 'int' lvalue ParmVar 0x55fb42116660 'what' 'int'
what
  13: ImplicitCastExpr 0x55fb42116fa0 <lstrlib.c:335:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb42116f78 <col:28> 'int' lvalue ParmVar 0x55fb42116660 'what' 'int'
[B3.12] (ImplicitCastExpr, LValueToRValue, int)
  14: ImplicitCastExpr 0x55fb42116fb8 <lstrlib.c:335:28> 'ptrdiff_t':'long' <IntegralCast>
`-ImplicitCastExpr 0x55fb42116fa0 <col:28> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116f78 <col:28> 'int' lvalue ParmVar 0x55fb42116660 'what' 'int'
[B3.13] (ImplicitCastExpr, IntegralCast, ptrdiff_t)
  15: DeclRefExpr 0x55fb42116e48 <lstrlib.c:335:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
ms
  16: ImplicitCastExpr 0x55fb42116e70 <lstrlib.c:335:3> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb42116e48 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.15] (ImplicitCastExpr, LValueToRValue, MatchState *)
  17: MemberExpr 0x55fb42116e88 <lstrlib.c:335:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
`-ImplicitCastExpr 0x55fb42116e70 <col:3> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116e48 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.16]->capture
  18: ImplicitCastExpr 0x55fb42116ee8 <lstrlib.c:335:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
`-MemberExpr 0x55fb42116e88 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
  `-ImplicitCastExpr 0x55fb42116e70 <col:3> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb42116e48 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.17] (ImplicitCastExpr, ArrayToPointerDecay, struct (anonymous struct at lstrlib.c:175:3) *)
  19: DeclRefExpr 0x55fb42116ec0 <lstrlib.c:335:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
level
  20: ImplicitCastExpr 0x55fb42116f00 <lstrlib.c:335:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb42116ec0 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B3.19] (ImplicitCastExpr, LValueToRValue, int)
  21: ArraySubscriptExpr 0x55fb42116f18 <lstrlib.c:335:3, col:20> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
|-ImplicitCastExpr 0x55fb42116ee8 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
| `-MemberExpr 0x55fb42116e88 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
|   `-ImplicitCastExpr 0x55fb42116e70 <col:3> 'MatchState *' <LValueToRValue>
|     `-DeclRefExpr 0x55fb42116e48 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
`-ImplicitCastExpr 0x55fb42116f00 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116ec0 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B3.18][[B3.20]]
  22: MemberExpr 0x55fb42116f40 <lstrlib.c:335:3, col:22> 'ptrdiff_t':'long' lvalue .len 0x55fb421c3860
`-ArraySubscriptExpr 0x55fb42116f18 <col:3, col:20> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
  |-ImplicitCastExpr 0x55fb42116ee8 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
  | `-MemberExpr 0x55fb42116e88 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
  |   `-ImplicitCastExpr 0x55fb42116e70 <col:3> 'MatchState *' <LValueToRValue>
  |     `-DeclRefExpr 0x55fb42116e48 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
  `-ImplicitCastExpr 0x55fb42116f00 <col:15> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55fb42116ec0 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B3.21].len
  23: BinaryOperator 0x55fb42116fd0 <lstrlib.c:335:3, col:28> 'ptrdiff_t':'long' '='
|-MemberExpr 0x55fb42116f40 <col:3, col:22> 'ptrdiff_t':'long' lvalue .len 0x55fb421c3860
| `-ArraySubscriptExpr 0x55fb42116f18 <col:3, col:20> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
|   |-ImplicitCastExpr 0x55fb42116ee8 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
|   | `-MemberExpr 0x55fb42116e88 <col:3, col:7> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
|   |   `-ImplicitCastExpr 0x55fb42116e70 <col:3> 'MatchState *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fb42116e48 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
|   `-ImplicitCastExpr 0x55fb42116f00 <col:15> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55fb42116ec0 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
`-ImplicitCastExpr 0x55fb42116fb8 <col:28> 'ptrdiff_t':'long' <IntegralCast>
  `-ImplicitCastExpr 0x55fb42116fa0 <col:28> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55fb42116f78 <col:28> 'int' lvalue ParmVar 0x55fb42116660 'what' 'int'
[B3.22] = [B3.14]
  24: DeclRefExpr 0x55fb42117070 <lstrlib.c:336:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
level
  25: ImplicitCastExpr 0x55fb421170b8 <lstrlib.c:336:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb42117070 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B3.24] (ImplicitCastExpr, LValueToRValue, int)
  26: IntegerLiteral 0x55fb42117098 <lstrlib.c:336:21> 'int' 1
1
  27: BinaryOperator 0x55fb421170d0 <lstrlib.c:336:15, col:21> 'int' '+'
|-ImplicitCastExpr 0x55fb421170b8 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55fb42117070 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
`-IntegerLiteral 0x55fb42117098 <col:21> 'int' 1
[B3.25] + [B3.26]
  28: DeclRefExpr 0x55fb42116ff8 <lstrlib.c:336:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
ms
  29: ImplicitCastExpr 0x55fb42117020 <lstrlib.c:336:3> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb42116ff8 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.28] (ImplicitCastExpr, LValueToRValue, MatchState *)
  30: MemberExpr 0x55fb42117038 <lstrlib.c:336:3, col:7> 'int' lvalue ->level 0x55fb421c3700
`-ImplicitCastExpr 0x55fb42117020 <col:3> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116ff8 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.29]->level
  31: BinaryOperator 0x55fb421170f8 <lstrlib.c:336:3, col:21> 'int' '='
|-MemberExpr 0x55fb42117038 <col:3, col:7> 'int' lvalue ->level 0x55fb421c3700
| `-ImplicitCastExpr 0x55fb42117020 <col:3> 'MatchState *' <LValueToRValue>
|   `-DeclRefExpr 0x55fb42116ff8 <col:3> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
`-BinaryOperator 0x55fb421170d0 <col:15, col:21> 'int' '+'
  |-ImplicitCastExpr 0x55fb421170b8 <col:15> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55fb42117070 <col:15> 'int' lvalue Var 0x55fb42116910 'level' 'int'
  `-IntegerLiteral 0x55fb42117098 <col:21> 'int' 1
[B3.30] = [B3.27]
  32: DeclRefExpr 0x55fb42117148 <lstrlib.c:337:12> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb421136e8 'match' 'const char *(MatchState *, const char *, const char *)'
match
  33: ImplicitCastExpr 0x55fb421171e8 <lstrlib.c:337:12> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb42117148 <col:12> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb421136e8 'match' 'const char *(MatchState *, const char *, const char *)'
[B3.32] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(MatchState *, const char *, const char *))
  34: DeclRefExpr 0x55fb42117170 <lstrlib.c:337:18> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
ms
  35: ImplicitCastExpr 0x55fb42117240 <lstrlib.c:337:18> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb42117170 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B3.34] (ImplicitCastExpr, LValueToRValue, MatchState *)
  36: DeclRefExpr 0x55fb42117198 <lstrlib.c:337:22> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
s
  37: ImplicitCastExpr 0x55fb42117258 <lstrlib.c:337:22> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb42117198 <col:22> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
[B3.36] (ImplicitCastExpr, LValueToRValue, const char *)
  38: DeclRefExpr 0x55fb421171c0 <lstrlib.c:337:25> 'const char *' lvalue ParmVar 0x55fb421165e8 'p' 'const char *'
p
  39: ImplicitCastExpr 0x55fb42117270 <lstrlib.c:337:25> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421171c0 <col:25> 'const char *' lvalue ParmVar 0x55fb421165e8 'p' 'const char *'
[B3.38] (ImplicitCastExpr, LValueToRValue, const char *)
  40: CallExpr 0x55fb42117200 <lstrlib.c:337:12, col:26> 'const char *'
|-ImplicitCastExpr 0x55fb421171e8 <col:12> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb42117148 <col:12> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb421136e8 'match' 'const char *(MatchState *, const char *, const char *)'
|-ImplicitCastExpr 0x55fb42117240 <col:18> 'MatchState *' <LValueToRValue>
| `-DeclRefExpr 0x55fb42117170 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
|-ImplicitCastExpr 0x55fb42117258 <col:22> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb42117198 <col:22> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
`-ImplicitCastExpr 0x55fb42117270 <col:25> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421171c0 <col:25> 'const char *' lvalue ParmVar 0x55fb421165e8 'p' 'const char *'
[B3.33]([B3.35], [B3.37], [B3.39])
  41: DeclRefExpr 0x55fb42117120 <lstrlib.c:337:8> 'const char *' lvalue Var 0x55fb42116880 'res' 'const char *'
res
  42: BinaryOperator 0x55fb42117288 <lstrlib.c:337:8, col:26> 'const char *' '='
|-DeclRefExpr 0x55fb42117120 <col:8> 'const char *' lvalue Var 0x55fb42116880 'res' 'const char *'
`-CallExpr 0x55fb42117200 <col:12, col:26> 'const char *'
  |-ImplicitCastExpr 0x55fb421171e8 <col:12> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb42117148 <col:12> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb421136e8 'match' 'const char *(MatchState *, const char *, const char *)'
  |-ImplicitCastExpr 0x55fb42117240 <col:18> 'MatchState *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb42117170 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
  |-ImplicitCastExpr 0x55fb42117258 <col:22> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb42117198 <col:22> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
  `-ImplicitCastExpr 0x55fb42117270 <col:25> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421171c0 <col:25> 'const char *' lvalue ParmVar 0x55fb421165e8 'p' 'const char *'
[B3.41] = [B3.40]
  43: IntegerLiteral 0x55fb421172d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  44: CStyleCastExpr 0x55fb42117308 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421172d0 <col:24> 'int' 0
(void *)[B3.43] (CStyleCastExpr, NullToPointer, void *)
  45: ImplicitCastExpr 0x55fb42117350 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x55fb42117330 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb42117308 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421172d0 <col:24> 'int' 0
([B3.44]) (ImplicitCastExpr, BitCast, const char *)
  46: BinaryOperator 0x55fb42117368 <lstrlib.c:337:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ParenExpr 0x55fb421172b0 <lstrlib.c:337:7, col:27> 'const char *'
| `-BinaryOperator 0x55fb42117288 <col:8, col:26> 'const char *' '='
|   |-DeclRefExpr 0x55fb42117120 <col:8> 'const char *' lvalue Var 0x55fb42116880 'res' 'const char *'
|   `-CallExpr 0x55fb42117200 <col:12, col:26> 'const char *'
|     |-ImplicitCastExpr 0x55fb421171e8 <col:12> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55fb42117148 <col:12> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb421136e8 'match' 'const char *(MatchState *, const char *, const char *)'
|     |-ImplicitCastExpr 0x55fb42117240 <col:18> 'MatchState *' <LValueToRValue>
|     | `-DeclRefExpr 0x55fb42117170 <col:18> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
|     |-ImplicitCastExpr 0x55fb42117258 <col:22> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55fb42117198 <col:22> 'const char *' lvalue ParmVar 0x55fb42116570 's' 'const char *'
|     `-ImplicitCastExpr 0x55fb42117270 <col:25> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55fb421171c0 <col:25> 'const char *' lvalue ParmVar 0x55fb421165e8 'p' 'const char *'
`-ImplicitCastExpr 0x55fb42117350 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x55fb42117330 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55fb42117308 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55fb421172d0 <col:24> 'int' 0
([B3.42]) == [B3.45]
   T: if [B3.46]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55fb42116aa0 <lstrlib.c:333:33> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x55fb42116bb8 <lstrlib.c:333:33> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb42116aa0 <col:33> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x55fb42116ac8 <lstrlib.c:333:44> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
ms
   4: ImplicitCastExpr 0x55fb42116af0 <lstrlib.c:333:44> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb42116ac8 <col:44> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B4.3] (ImplicitCastExpr, LValueToRValue, MatchState *)
   5: MemberExpr 0x55fb42116b08 <lstrlib.c:333:44, col:48> 'lua_State *' lvalue ->L 0x55fb421c36a0
`-ImplicitCastExpr 0x55fb42116af0 <col:44> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116ac8 <col:44> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B4.4]->L
   6: ImplicitCastExpr 0x55fb42116c08 <lstrlib.c:333:44, col:48> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x55fb42116b08 <col:44, col:48> 'lua_State *' lvalue ->L 0x55fb421c36a0
  `-ImplicitCastExpr 0x55fb42116af0 <col:44> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb42116ac8 <col:44> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B4.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: StringLiteral 0x55fb42116b78 <lstrlib.c:333:51> 'char [18]' lvalue "too many captures"
"too many captures"
   8: ImplicitCastExpr 0x55fb42116c20 <lstrlib.c:333:51> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55fb42116b78 <col:51> 'char [18]' lvalue "too many captures"
[B4.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x55fb42116c38 <lstrlib.c:333:51> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55fb42116c20 <col:51> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55fb42116b78 <col:51> 'char [18]' lvalue "too many captures"
[B4.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x55fb42116bd0 <lstrlib.c:333:33, col:70> 'int'
|-ImplicitCastExpr 0x55fb42116bb8 <col:33> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb42116aa0 <col:33> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x55fb42116c08 <col:44, col:48> 'lua_State *' <LValueToRValue>
| `-MemberExpr 0x55fb42116b08 <col:44, col:48> 'lua_State *' lvalue ->L 0x55fb421c36a0
|   `-ImplicitCastExpr 0x55fb42116af0 <col:44> 'MatchState *' <LValueToRValue>
|     `-DeclRefExpr 0x55fb42116ac8 <col:44> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
`-ImplicitCastExpr 0x55fb42116c38 <col:51> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55fb42116c20 <col:51> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55fb42116b78 <col:51> 'char [18]' lvalue "too many captures"
[B4.2]([B4.6], [B4.9])
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclStmt 0x55fb421168e0 <lstrlib.c:331:3, col:18>col:15
`-VarDecl 0x55fb42116880 <col:3, col:15> col:15 used res 'const char *'
const char *res;
   2: DeclRefExpr 0x55fb42116970 <lstrlib.c:332:15> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
ms
   3: ImplicitCastExpr 0x55fb42116998 <lstrlib.c:332:15> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb42116970 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B5.2] (ImplicitCastExpr, LValueToRValue, MatchState *)
   4: MemberExpr 0x55fb421169b0 <lstrlib.c:332:15, col:19> 'int' lvalue ->level 0x55fb421c3700
`-ImplicitCastExpr 0x55fb42116998 <col:15> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb42116970 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B5.3]->level
   5: ImplicitCastExpr 0x55fb421169e8 <lstrlib.c:332:15, col:19> 'int' <LValueToRValue>
`-MemberExpr 0x55fb421169b0 <col:15, col:19> 'int' lvalue ->level 0x55fb421c3700
  `-ImplicitCastExpr 0x55fb42116998 <col:15> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb42116970 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
[B5.4] (ImplicitCastExpr, LValueToRValue, int)
   6: DeclStmt 0x55fb42116a00 <lstrlib.c:332:3, col:24>col:7
`-VarDecl 0x55fb42116910 <col:3, col:19> col:7 used level 'int' cinit
  `-ImplicitCastExpr 0x55fb421169e8 <col:15, col:19> 'int' <LValueToRValue>
    `-MemberExpr 0x55fb421169b0 <col:15, col:19> 'int' lvalue ->level 0x55fb421c3700
      `-ImplicitCastExpr 0x55fb42116998 <col:15> 'MatchState *' <LValueToRValue>
        `-DeclRefExpr 0x55fb42116970 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421164f8 'ms' 'MatchState *'
int level = ms->level;
   7: DeclRefExpr 0x55fb42116a18 <lstrlib.c:333:7> 'int' lvalue Var 0x55fb42116910 'level' 'int'
level
   8: ImplicitCastExpr 0x55fb42116a60 <lstrlib.c:333:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb42116a18 <col:7> 'int' lvalue Var 0x55fb42116910 'level' 'int'
[B5.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55fb42116a40 <./luaconf.h:633:26> 'int' 32
32
  10: BinaryOperator 0x55fb42116a78 <lstrlib.c:333:7, ./luaconf.h:633:26> 'int' '>='
|-ImplicitCastExpr 0x55fb42116a60 <lstrlib.c:333:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55fb42116a18 <col:7> 'int' lvalue Var 0x55fb42116910 'level' 'int'
`-IntegerLiteral 0x55fb42116a40 <./luaconf.h:633:26> 'int' 32
[B5.8] >= [B5.9]
   T: if [B5.10]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (1): B1
