int main(int argc, char *argv[])
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x55759c9eb230 <luac.c:198:2> 'void (lua_State *)':'void (lua_State *)' Function 0x55759c959508 'lua_close' 'void (lua_State *)':'void (lua_State *)'
lua_close
   2: ImplicitCastExpr 0x55759c9eb2d8 <luac.c:198:2> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9eb230 <col:2> 'void (lua_State *)':'void (lua_State *)' Function 0x55759c959508 'lua_close' 'void (lua_State *)':'void (lua_State *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
   3: DeclRefExpr 0x55759c9eb258 <luac.c:198:12> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55759c9eb320 <luac.c:198:12> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9eb258 <col:12> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x55759c9eb2f0 <luac.c:198:2, col:13> 'void'
|-ImplicitCastExpr 0x55759c9eb2d8 <col:2> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9eb230 <col:2> 'void (lua_State *)':'void (lua_State *)' Function 0x55759c959508 'lua_close' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x55759c9eb320 <col:12> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55759c9eb258 <col:12> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
[B1.2]([B1.4])
   6: IntegerLiteral 0x55759c9eb338 </usr/include/stdlib.h:92:22> 'int' 0
0
   7: ReturnStmt 0x55759c9eb358 <luac.c:199:2, /usr/include/stdlib.h:92:22>
`-IntegerLiteral 0x55759c9eb338 <col:22> 'int' 0
return [B1.6];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55759c9eafd0 <luac.c:197:33> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
fatal
   2: ImplicitCastExpr 0x55759c9eb1b0 <luac.c:197:33> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9eafd0 <col:33> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: DeclRefExpr 0x55759c9eaff8 <./lua.h:279:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
lua_tolstring
   4: ImplicitCastExpr 0x55759c9eb128 <./lua.h:279:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9eaff8 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B2.3] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   5: DeclRefExpr 0x55759c9eb020 <luac.c:197:52> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55759c9eb180 <luac.c:197:52> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9eb020 <col:52> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
[B2.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x55759c9eb048 <luac.c:197:55> 'int' 1
1
   8: UnaryOperator 0x55759c9eb068 <luac.c:197:54, col:55> 'int' prefix '-'
`-IntegerLiteral 0x55759c9eb048 <col:55> 'int' 1
-[B2.7]
   9: IntegerLiteral 0x55759c9eb0a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  10: CStyleCastExpr 0x55759c9eb0e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9eb0a8 <col:24> 'int' 0
(void *)[B2.9] (CStyleCastExpr, NullToPointer, void *)
  11: ImplicitCastExpr 0x55759c9eb198 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x55759c9eb108 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55759c9eb0e0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55759c9eb0a8 <col:24> 'int' 0
([B2.10]) (ImplicitCastExpr, NullToPointer, size_t *)
  12: CallExpr 0x55759c9eb140 <./lua.h:279:27, col:53> 'const char *'
|-ImplicitCastExpr 0x55759c9eb128 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9eaff8 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55759c9eb180 <luac.c:197:52> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9eb020 <col:52> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
|-ParenExpr 0x55759c9eb088 <./lua.h:279:44, col:46> 'int'
| `-UnaryOperator 0x55759c9eb068 <luac.c:197:54, col:55> 'int' prefix '-'
|   `-IntegerLiteral 0x55759c9eb048 <col:55> 'int' 1
`-ImplicitCastExpr 0x55759c9eb198 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x55759c9eb108 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55759c9eb0e0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55759c9eb0a8 <col:24> 'int' 0
[B2.4]([B2.6], ([B2.8]), [B2.11])
  13: CallExpr 0x55759c9eb1c8 <luac.c:197:33, col:57> 'void'
|-ImplicitCastExpr 0x55759c9eb1b0 <col:33> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9eafd0 <col:33> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
`-CallExpr 0x55759c9eb140 <./lua.h:279:27, col:53> 'const char *'
  |-ImplicitCastExpr 0x55759c9eb128 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55759c9eaff8 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55759c95d860 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
  |-ImplicitCastExpr 0x55759c9eb180 <luac.c:197:52> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55759c9eb020 <col:52> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
  |-ParenExpr 0x55759c9eb088 <./lua.h:279:44, col:46> 'int'
  | `-UnaryOperator 0x55759c9eb068 <luac.c:197:54, col:55> 'int' prefix '-'
  |   `-IntegerLiteral 0x55759c9eb048 <col:55> 'int' 1
  `-ImplicitCastExpr 0x55759c9eb198 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
    `-ParenExpr 0x55759c9eb108 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x55759c9eb0e0 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x55759c9eb0a8 <col:24> 'int' 0
[B2.2]([B2.12])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55759c9eac20 <luac.c:195:9> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
argc
   2: ImplicitCastExpr 0x55759c9eac48 <luac.c:195:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9eac20 <col:9> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55759c9eabc0 <luac.c:195:2> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
s
   4: MemberExpr 0x55759c9eabe8 <luac.c:195:2, col:4> 'int' lvalue .argc 0x55759c9e7948
`-DeclRefExpr 0x55759c9eabc0 <col:2> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
[B3.3].argc
   5: BinaryOperator 0x55759c9eac60 <luac.c:195:2, col:9> 'int' '='
|-MemberExpr 0x55759c9eabe8 <col:2, col:4> 'int' lvalue .argc 0x55759c9e7948
| `-DeclRefExpr 0x55759c9eabc0 <col:2> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
`-ImplicitCastExpr 0x55759c9eac48 <col:9> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9eac20 <col:9> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
[B3.4] = [B3.2]
   6: DeclRefExpr 0x55759c9ead38 <luac.c:196:9> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
argv
   7: ImplicitCastExpr 0x55759c9ead60 <luac.c:196:9> 'char **':'char **' <LValueToRValue>
`-DeclRefExpr 0x55759c9ead38 <col:9> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
[B3.6] (ImplicitCastExpr, LValueToRValue, char **)
   8: DeclRefExpr 0x55759c9eacd8 <luac.c:196:2> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
s
   9: MemberExpr 0x55759c9ead00 <luac.c:196:2, col:4> 'char **' lvalue .argv 0x55759c9e79a8
`-DeclRefExpr 0x55759c9eacd8 <col:2> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
[B3.8].argv
  10: BinaryOperator 0x55759c9ead78 <luac.c:196:2, col:9> 'char **' '='
|-MemberExpr 0x55759c9ead00 <col:2, col:4> 'char **' lvalue .argv 0x55759c9e79a8
| `-DeclRefExpr 0x55759c9eacd8 <col:2> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
`-ImplicitCastExpr 0x55759c9ead60 <col:9> 'char **':'char **' <LValueToRValue>
  `-DeclRefExpr 0x55759c9ead38 <col:9> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
[B3.9] = [B3.7]
  11: DeclRefExpr 0x55759c9eada0 <luac.c:197:6> 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)' Function 0x55759c962740 'lua_cpcall' 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)'
lua_cpcall
  12: ImplicitCastExpr 0x55759c9eaeb8 <luac.c:197:6> 'int (*)(lua_State *, lua_CFunction, void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9eada0 <col:6> 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)' Function 0x55759c962740 'lua_cpcall' 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)'
[B3.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, lua_CFunction, void *))
  13: DeclRefExpr 0x55759c9eadc8 <luac.c:197:17> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x55759c9eaf10 <luac.c:197:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9eadc8 <col:17> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
[B3.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: DeclRefExpr 0x55759c9eadf0 <luac.c:197:19> 'int (lua_State *)' Function 0x55759c9e7a90 'pmain' 'int (lua_State *)'
pmain
  16: ImplicitCastExpr 0x55759c9eaf58 <luac.c:197:19> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9eadf0 <col:19> 'int (lua_State *)' Function 0x55759c9e7a90 'pmain' 'int (lua_State *)'
[B3.15] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
  17: DeclRefExpr 0x55759c9eae18 <luac.c:197:26> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
s
  18: UnaryOperator 0x55759c9eae40 <luac.c:197:25, col:26> 'struct Smain *' prefix '&'
`-DeclRefExpr 0x55759c9eae18 <col:26> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
&[B3.17]
  19: ImplicitCastExpr 0x55759c9eaf70 <luac.c:197:25, col:26> 'void *' <BitCast>
`-UnaryOperator 0x55759c9eae40 <col:25, col:26> 'struct Smain *' prefix '&'
  `-DeclRefExpr 0x55759c9eae18 <col:26> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
[B3.18] (ImplicitCastExpr, BitCast, void *)
  20: CallExpr 0x55759c9eaed0 <luac.c:197:6, col:27> 'int'
|-ImplicitCastExpr 0x55759c9eaeb8 <col:6> 'int (*)(lua_State *, lua_CFunction, void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9eada0 <col:6> 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)' Function 0x55759c962740 'lua_cpcall' 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)'
|-ImplicitCastExpr 0x55759c9eaf10 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9eadc8 <col:17> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
|-ImplicitCastExpr 0x55759c9eaf58 <col:19> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9eadf0 <col:19> 'int (lua_State *)' Function 0x55759c9e7a90 'pmain' 'int (lua_State *)'
`-ImplicitCastExpr 0x55759c9eaf70 <col:25, col:26> 'void *' <BitCast>
  `-UnaryOperator 0x55759c9eae40 <col:25, col:26> 'struct Smain *' prefix '&'
    `-DeclRefExpr 0x55759c9eae18 <col:26> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
[B3.12]([B3.14], [B3.16], [B3.19])
  21: IntegerLiteral 0x55759c9eaf88 <luac.c:197:30> 'int' 0
0
  22: BinaryOperator 0x55759c9eafa8 <luac.c:197:6, col:30> 'int' '!='
|-CallExpr 0x55759c9eaed0 <col:6, col:27> 'int'
| |-ImplicitCastExpr 0x55759c9eaeb8 <col:6> 'int (*)(lua_State *, lua_CFunction, void *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55759c9eada0 <col:6> 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)' Function 0x55759c962740 'lua_cpcall' 'int (lua_State *, lua_CFunction, void *)':'int (lua_State *, lua_CFunction, void *)'
| |-ImplicitCastExpr 0x55759c9eaf10 <col:17> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x55759c9eadc8 <col:17> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
| |-ImplicitCastExpr 0x55759c9eaf58 <col:19> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55759c9eadf0 <col:19> 'int (lua_State *)' Function 0x55759c9e7a90 'pmain' 'int (lua_State *)'
| `-ImplicitCastExpr 0x55759c9eaf70 <col:25, col:26> 'void *' <BitCast>
|   `-UnaryOperator 0x55759c9eae40 <col:25, col:26> 'struct Smain *' prefix '&'
|     `-DeclRefExpr 0x55759c9eae18 <col:26> 'struct Smain':'struct Smain' lvalue Var 0x55759c9ea2f0 's' 'struct Smain':'struct Smain'
`-IntegerLiteral 0x55759c9eaf88 <col:30> 'int' 0
[B3.20] != [B3.21]
   T: if [B3.22]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55759c9eaa60 <luac.c:194:15> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
fatal
   2: ImplicitCastExpr 0x55759c9eab10 <luac.c:194:15> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9eaa60 <col:15> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: StringLiteral 0x55759c9eaac8 <luac.c:194:21> 'char [28]' lvalue "not enough memory for state"
"not enough memory for state"
   4: ImplicitCastExpr 0x55759c9eab58 <luac.c:194:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9eaac8 <col:21> 'char [28]' lvalue "not enough memory for state"
[B4.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55759c9eab70 <luac.c:194:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9eab58 <col:21> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9eaac8 <col:21> 'char [28]' lvalue "not enough memory for state"
[B4.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55759c9eab28 <luac.c:194:15, col:50> 'void'
|-ImplicitCastExpr 0x55759c9eab10 <col:15> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9eaa60 <col:15> 'void (const char *)' Function 0x55759c86ef58 'fatal' 'void (const char *)'
`-ImplicitCastExpr 0x55759c9eab70 <col:21> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9eab58 <col:21> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9eaac8 <col:21> 'char [28]' lvalue "not enough memory for state"
[B4.2]([B4.5])
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x55759c9ea870 <./lua.h:287:20> 'lua_State *(void)':'lua_State *(void)' Function 0x55759c975060 'luaL_newstate' 'lua_State *(void)':'lua_State *(void)'
luaL_newstate
   2: ImplicitCastExpr 0x55759c9ea8f8 <./lua.h:287:20> 'lua_State *(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9ea870 <col:20> 'lua_State *(void)':'lua_State *(void)' Function 0x55759c975060 'luaL_newstate' 'lua_State *(void)':'lua_State *(void)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_State *(*)(void))
   3: CallExpr 0x55759c9ea910 <./lua.h:287:20, col:34> 'lua_State *'
`-ImplicitCastExpr 0x55759c9ea8f8 <col:20> 'lua_State *(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55759c9ea870 <col:20> 'lua_State *(void)':'lua_State *(void)' Function 0x55759c975060 'luaL_newstate' 'lua_State *(void)':'lua_State *(void)'
[B5.2]()
   4: DeclRefExpr 0x55759c9ea848 <luac.c:193:2> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
L
   5: BinaryOperator 0x55759c9ea938 <luac.c:193:2, ./lua.h:287:34> 'lua_State *' '='
|-DeclRefExpr 0x55759c9ea848 <luac.c:193:2> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
`-CallExpr 0x55759c9ea910 <./lua.h:287:20, col:34> 'lua_State *'
  `-ImplicitCastExpr 0x55759c9ea8f8 <col:20> 'lua_State *(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55759c9ea870 <col:20> 'lua_State *(void)':'lua_State *(void)' Function 0x55759c975060 'luaL_newstate' 'lua_State *(void)':'lua_State *(void)'
[B5.4] = [B5.3]
   6: DeclRefExpr 0x55759c9ea960 <luac.c:194:6> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55759c9eaa08 <luac.c:194:6> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55759c9ea960 <col:6> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
[B5.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: IntegerLiteral 0x55759c9ea988 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   9: CStyleCastExpr 0x55759c9ea9c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55759c9ea988 <col:24> 'int' 0
(void *)[B5.8] (CStyleCastExpr, NullToPointer, void *)
  10: ImplicitCastExpr 0x55759c9eaa20 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_State *' <BitCast>
`-ParenExpr 0x55759c9ea9e8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55759c9ea9c0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55759c9ea988 <col:24> 'int' 0
([B5.9]) (ImplicitCastExpr, BitCast, lua_State *)
  11: BinaryOperator 0x55759c9eaa38 <luac.c:194:6, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55759c9eaa08 <luac.c:194:6> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55759c9ea960 <col:6> 'lua_State *' lvalue Var 0x55759c9ea258 'L' 'lua_State *'
`-ImplicitCastExpr 0x55759c9eaa20 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_State *' <BitCast>
  `-ParenExpr 0x55759c9ea9e8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55759c9ea9c0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55759c9ea988 <col:24> 'int' 0
[B5.7] == [B5.10]
   T: if [B5.11]
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x55759c9ea718 <luac.c:192:15> 'void (const char *)' Function 0x55759c86f958 'usage' 'void (const char *)'
usage
   2: ImplicitCastExpr 0x55759c9ea780 <luac.c:192:15> 'void (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9ea718 <col:15> 'void (const char *)' Function 0x55759c86f958 'usage' 'void (const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *))
   3: StringLiteral 0x55759c9ea740 <luac.c:192:21> 'char [21]' lvalue "no input files given"
"no input files given"
   4: ImplicitCastExpr 0x55759c9ea7e0 <luac.c:192:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55759c9ea740 <col:21> 'char [21]' lvalue "no input files given"
[B6.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55759c9ea7f8 <luac.c:192:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55759c9ea7e0 <col:21> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55759c9ea740 <col:21> 'char [21]' lvalue "no input files given"
[B6.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55759c9ea7b0 <luac.c:192:15, col:43> 'void'
|-ImplicitCastExpr 0x55759c9ea780 <col:15> 'void (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9ea718 <col:15> 'void (const char *)' Function 0x55759c86f958 'usage' 'void (const char *)'
`-ImplicitCastExpr 0x55759c9ea7f8 <col:21> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55759c9ea7e0 <col:21> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55759c9ea740 <col:21> 'char [21]' lvalue "no input files given"
[B6.2]([B6.5])
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclStmt 0x55759c9ea2b8 <luac.c:188:2, col:14>col:13
`-VarDecl 0x55759c9ea258 <col:2, col:13> col:13 used L 'lua_State *'
lua_State *L;
   2: DeclStmt 0x55759c9ea350 <luac.c:189:2, col:16>col:15
`-VarDecl 0x55759c9ea2f0 <col:2, col:15> col:15 used s 'struct Smain':'struct Smain'
struct Smain s;
   3: DeclRefExpr 0x55759c9ea3e0 <luac.c:190:8> 'int (int, char **)' Function 0x55759c9d9c78 'doargs' 'int (int, char **)'
doargs
   4: ImplicitCastExpr 0x55759c9ea4b8 <luac.c:190:8> 'int (*)(int, char **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55759c9ea3e0 <col:8> 'int (int, char **)' Function 0x55759c9d9c78 'doargs' 'int (int, char **)'
[B7.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int, char **))
   5: DeclRefExpr 0x55759c9ea408 <luac.c:190:15> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
argc
   6: ImplicitCastExpr 0x55759c9ea508 <luac.c:190:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9ea408 <col:15> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: DeclRefExpr 0x55759c9ea430 <luac.c:190:20> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
argv
   8: ImplicitCastExpr 0x55759c9ea520 <luac.c:190:20> 'char **':'char **' <LValueToRValue>
`-DeclRefExpr 0x55759c9ea430 <col:20> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
[B7.7] (ImplicitCastExpr, LValueToRValue, char **)
   9: CallExpr 0x55759c9ea4d0 <luac.c:190:8, col:24> 'int'
|-ImplicitCastExpr 0x55759c9ea4b8 <col:8> 'int (*)(int, char **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55759c9ea3e0 <col:8> 'int (int, char **)' Function 0x55759c9d9c78 'doargs' 'int (int, char **)'
|-ImplicitCastExpr 0x55759c9ea508 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55759c9ea408 <col:15> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
`-ImplicitCastExpr 0x55759c9ea520 <col:20> 'char **':'char **' <LValueToRValue>
  `-DeclRefExpr 0x55759c9ea430 <col:20> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
[B7.4]([B7.6], [B7.8])
  10: DeclStmt 0x55759c9ea538 <luac.c:190:2, col:25>col:6
`-VarDecl 0x55759c9ea380 <col:2, col:24> col:6 used i 'int' cinit
  `-CallExpr 0x55759c9ea4d0 <col:8, col:24> 'int'
    |-ImplicitCastExpr 0x55759c9ea4b8 <col:8> 'int (*)(int, char **)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55759c9ea3e0 <col:8> 'int (int, char **)' Function 0x55759c9d9c78 'doargs' 'int (int, char **)'
    |-ImplicitCastExpr 0x55759c9ea508 <col:15> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x55759c9ea408 <col:15> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
    `-ImplicitCastExpr 0x55759c9ea520 <col:20> 'char **':'char **' <LValueToRValue>
      `-DeclRefExpr 0x55759c9ea430 <col:20> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
int i = doargs(argc, argv);
  11: DeclRefExpr 0x55759c9ea550 <luac.c:191:2> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
argc
  12: DeclRefExpr 0x55759c9ea578 <luac.c:191:8> 'int' lvalue Var 0x55759c9ea380 'i' 'int'
i
  13: ImplicitCastExpr 0x55759c9ea5a0 <luac.c:191:8> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9ea578 <col:8> 'int' lvalue Var 0x55759c9ea380 'i' 'int'
[B7.12] (ImplicitCastExpr, LValueToRValue, int)
  14: CompoundAssignOperator 0x55759c9ea5b8 <luac.c:191:2, col:8> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x55759c9ea550 <col:2> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
`-ImplicitCastExpr 0x55759c9ea5a0 <col:8> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9ea578 <col:8> 'int' lvalue Var 0x55759c9ea380 'i' 'int'
[B7.11] -= [B7.13]
  15: DeclRefExpr 0x55759c9ea5f0 <luac.c:191:11> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
argv
  16: DeclRefExpr 0x55759c9ea618 <luac.c:191:17> 'int' lvalue Var 0x55759c9ea380 'i' 'int'
i
  17: ImplicitCastExpr 0x55759c9ea640 <luac.c:191:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9ea618 <col:17> 'int' lvalue Var 0x55759c9ea380 'i' 'int'
[B7.16] (ImplicitCastExpr, LValueToRValue, int)
  18: CompoundAssignOperator 0x55759c9ea658 <luac.c:191:11, col:17> 'char **':'char **' '+=' ComputeLHSTy='char **':'char **' ComputeResultTy='char **':'char **'
|-DeclRefExpr 0x55759c9ea5f0 <col:11> 'char **':'char **' lvalue ParmVar 0x55759c9ea100 'argv' 'char **':'char **'
`-ImplicitCastExpr 0x55759c9ea640 <col:17> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55759c9ea618 <col:17> 'int' lvalue Var 0x55759c9ea380 'i' 'int'
[B7.15] += [B7.17]
  19: DeclRefExpr 0x55759c9ea690 <luac.c:192:6> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
argc
  20: ImplicitCastExpr 0x55759c9ea6d8 <luac.c:192:6> 'int' <LValueToRValue>
`-DeclRefExpr 0x55759c9ea690 <col:6> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
[B7.19] (ImplicitCastExpr, LValueToRValue, int)
  21: IntegerLiteral 0x55759c9ea6b8 <luac.c:192:12> 'int' 0
0
  22: BinaryOperator 0x55759c9ea6f0 <luac.c:192:6, col:12> 'int' '<='
|-ImplicitCastExpr 0x55759c9ea6d8 <col:6> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55759c9ea690 <col:6> 'int' lvalue ParmVar 0x55759c9ea078 'argc' 'int'
`-IntegerLiteral 0x55759c9ea6b8 <col:12> 'int' 0
[B7.20] <= [B7.21]
   T: if [B7.22]
   Preds (1): B8
   Succs (2): B6 B5

 [B0 (EXIT)]
   Preds (1): B1
