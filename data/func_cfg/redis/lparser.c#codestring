static void codestring(LexState *ls, expdesc *e, TString *s)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x558fa8ef00d8 <lparser.c:134:3> 'void (expdesc *, expkind, int)' Function 0x558fa8eef950 'init_exp' 'void (expdesc *, expkind, int)'
init_exp
   2: ImplicitCastExpr 0x558fa8ef0358 <lparser.c:134:3> 'void (*)(expdesc *, expkind, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8ef00d8 <col:3> 'void (expdesc *, expkind, int)' Function 0x558fa8eef950 'init_exp' 'void (expdesc *, expkind, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(expdesc *, expkind, int))
   3: DeclRefExpr 0x558fa8ef0100 <lparser.c:134:12> 'expdesc *' lvalue ParmVar 0x558fa8eefe80 'e' 'expdesc *'
e
   4: ImplicitCastExpr 0x558fa8ef03b0 <lparser.c:134:12> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef0100 <col:12> 'expdesc *' lvalue ParmVar 0x558fa8eefe80 'e' 'expdesc *'
[B1.3] (ImplicitCastExpr, LValueToRValue, expdesc *)
   5: DeclRefExpr 0x558fa8ef0128 <lparser.c:134:15> 'int' EnumConstant 0x558fa8eb09b0 'VK' 'int'
VK
   6: ImplicitCastExpr 0x558fa8ef03c8 <lparser.c:134:15> 'expkind':'expkind' <IntegralCast>
`-DeclRefExpr 0x558fa8ef0128 <col:15> 'int' EnumConstant 0x558fa8eb09b0 'VK' 'int'
[B1.5] (ImplicitCastExpr, IntegralCast, expkind)
   7: DeclRefExpr 0x558fa8ef0150 <lparser.c:134:19> 'int (FuncState *, TString *)' Function 0x558fa8eba2c0 'luaK_stringK' 'int (FuncState *, TString *)'
luaK_stringK
   8: ImplicitCastExpr 0x558fa8ef0278 <lparser.c:134:19> 'int (*)(FuncState *, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8ef0150 <col:19> 'int (FuncState *, TString *)' Function 0x558fa8eba2c0 'luaK_stringK' 'int (FuncState *, TString *)'
[B1.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FuncState *, TString *))
   9: DeclRefExpr 0x558fa8ef0178 <lparser.c:134:32> 'LexState *' lvalue ParmVar 0x558fa8eefe10 'ls' 'LexState *'
ls
  10: ImplicitCastExpr 0x558fa8ef01a0 <lparser.c:134:32> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef0178 <col:32> 'LexState *' lvalue ParmVar 0x558fa8eefe10 'ls' 'LexState *'
[B1.9] (ImplicitCastExpr, LValueToRValue, LexState *)
  11: MemberExpr 0x558fa8ef01b8 <lparser.c:134:32, col:36> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
`-ImplicitCastExpr 0x558fa8ef01a0 <col:32> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef0178 <col:32> 'LexState *' lvalue ParmVar 0x558fa8eefe10 'ls' 'LexState *'
[B1.10]->fs
  12: ImplicitCastExpr 0x558fa8ef02c8 <lparser.c:134:32, col:36> 'struct FuncState *' <LValueToRValue>
`-MemberExpr 0x558fa8ef01b8 <col:32, col:36> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
  `-ImplicitCastExpr 0x558fa8ef01a0 <col:32> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef0178 <col:32> 'LexState *' lvalue ParmVar 0x558fa8eefe10 'ls' 'LexState *'
[B1.11] (ImplicitCastExpr, LValueToRValue, struct FuncState *)
  13: DeclRefExpr 0x558fa8ef01f0 <lparser.c:134:40> 'TString *' lvalue ParmVar 0x558fa8eefef0 's' 'TString *'
s
  14: ImplicitCastExpr 0x558fa8ef02e0 <lparser.c:134:40> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef01f0 <col:40> 'TString *' lvalue ParmVar 0x558fa8eefef0 's' 'TString *'
[B1.13] (ImplicitCastExpr, LValueToRValue, TString *)
  15: CallExpr 0x558fa8ef0290 <lparser.c:134:19, col:41> 'int'
|-ImplicitCastExpr 0x558fa8ef0278 <col:19> 'int (*)(FuncState *, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8ef0150 <col:19> 'int (FuncState *, TString *)' Function 0x558fa8eba2c0 'luaK_stringK' 'int (FuncState *, TString *)'
|-ImplicitCastExpr 0x558fa8ef02c8 <col:32, col:36> 'struct FuncState *' <LValueToRValue>
| `-MemberExpr 0x558fa8ef01b8 <col:32, col:36> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
|   `-ImplicitCastExpr 0x558fa8ef01a0 <col:32> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef0178 <col:32> 'LexState *' lvalue ParmVar 0x558fa8eefe10 'ls' 'LexState *'
`-ImplicitCastExpr 0x558fa8ef02e0 <col:40> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef01f0 <col:40> 'TString *' lvalue ParmVar 0x558fa8eefef0 's' 'TString *'
[B1.8]([B1.12], [B1.14])
  16: CallExpr 0x558fa8ef0370 <lparser.c:134:3, col:42> 'void'
|-ImplicitCastExpr 0x558fa8ef0358 <col:3> 'void (*)(expdesc *, expkind, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8ef00d8 <col:3> 'void (expdesc *, expkind, int)' Function 0x558fa8eef950 'init_exp' 'void (expdesc *, expkind, int)'
|-ImplicitCastExpr 0x558fa8ef03b0 <col:12> 'expdesc *' <LValueToRValue>
| `-DeclRefExpr 0x558fa8ef0100 <col:12> 'expdesc *' lvalue ParmVar 0x558fa8eefe80 'e' 'expdesc *'
|-ImplicitCastExpr 0x558fa8ef03c8 <col:15> 'expkind':'expkind' <IntegralCast>
| `-DeclRefExpr 0x558fa8ef0128 <col:15> 'int' EnumConstant 0x558fa8eb09b0 'VK' 'int'
`-CallExpr 0x558fa8ef0290 <col:19, col:41> 'int'
  |-ImplicitCastExpr 0x558fa8ef0278 <col:19> 'int (*)(FuncState *, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x558fa8ef0150 <col:19> 'int (FuncState *, TString *)' Function 0x558fa8eba2c0 'luaK_stringK' 'int (FuncState *, TString *)'
  |-ImplicitCastExpr 0x558fa8ef02c8 <col:32, col:36> 'struct FuncState *' <LValueToRValue>
  | `-MemberExpr 0x558fa8ef01b8 <col:32, col:36> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
  |   `-ImplicitCastExpr 0x558fa8ef01a0 <col:32> 'LexState *' <LValueToRValue>
  |     `-DeclRefExpr 0x558fa8ef0178 <col:32> 'LexState *' lvalue ParmVar 0x558fa8eefe10 'ls' 'LexState *'
  `-ImplicitCastExpr 0x558fa8ef02e0 <col:40> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef01f0 <col:40> 'TString *' lvalue ParmVar 0x558fa8eefef0 's' 'TString *'
[B1.2]([B1.4], [B1.6], [B1.15])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
