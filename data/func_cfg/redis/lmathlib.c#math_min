static int math_min(lua_State *L)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x563b15772e08 <lmathlib.c:162:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   2: ImplicitCastExpr 0x563b15772e80 <lmathlib.c:162:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b15772e08 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   3: DeclRefExpr 0x563b15772e30 <lmathlib.c:162:18> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x563b15772ed0 <lmathlib.c:162:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15772e30 <col:18> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563b15772e58 <lmathlib.c:162:21> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
dmin
   6: ImplicitCastExpr 0x563b15772ee8 <lmathlib.c:162:21> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x563b15772e58 <col:21> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_Number)
   7: CallExpr 0x563b15772e98 <lmathlib.c:162:3, col:25> 'void'
|-ImplicitCastExpr 0x563b15772e80 <col:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b15772e08 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x563b15772ed0 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15772e30 <col:18> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
`-ImplicitCastExpr 0x563b15772ee8 <col:21> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x563b15772e58 <col:21> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
[B1.2]([B1.4], [B1.6])
   8: IntegerLiteral 0x563b15772f00 <lmathlib.c:163:10> 'int' 1
1
   9: ReturnStmt 0x563b15772f20 <lmathlib.c:163:3, col:10>
`-IntegerLiteral 0x563b15772f00 <col:10> 'int' 1
return [B1.8];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x563b15772a78 <lmathlib.c:157:19> 'int' lvalue Var 0x563b157728e8 'i' 'int'
i
   2: UnaryOperator 0x563b15772aa0 <lmathlib.c:157:19, col:20> 'int' postfix '++'
`-DeclRefExpr 0x563b15772a78 <col:19> 'int' lvalue Var 0x563b157728e8 'i' 'int'
[B2.1]++
   Preds (2): B3 B4
   Succs (1): B5

 [B3]
   1: DeclRefExpr 0x563b15772d10 <lmathlib.c:160:14> 'lua_Number':'double' lvalue Var 0x563b15772ad0 'd' 'lua_Number':'double'
d
   2: ImplicitCastExpr 0x563b15772d38 <lmathlib.c:160:14> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x563b15772d10 <col:14> 'lua_Number':'double' lvalue Var 0x563b15772ad0 'd' 'lua_Number':'double'
[B3.1] (ImplicitCastExpr, LValueToRValue, lua_Number)
   3: DeclRefExpr 0x563b15772ce8 <lmathlib.c:160:7> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
dmin
   4: BinaryOperator 0x563b15772d50 <lmathlib.c:160:7, col:14> 'lua_Number':'double' '='
|-DeclRefExpr 0x563b15772ce8 <col:7> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
`-ImplicitCastExpr 0x563b15772d38 <col:14> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x563b15772d10 <col:14> 'lua_Number':'double' lvalue Var 0x563b15772ad0 'd' 'lua_Number':'double'
[B3.3] = [B3.2]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x563b15772b30 <lmathlib.c:158:20> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
luaL_checknumber
   2: ImplicitCastExpr 0x563b15772ba8 <lmathlib.c:158:20> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b15772b30 <col:20> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   3: DeclRefExpr 0x563b15772b58 <lmathlib.c:158:37> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x563b15772bf8 <lmathlib.c:158:37> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15772b58 <col:37> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563b15772b80 <lmathlib.c:158:40> 'int' lvalue Var 0x563b157728e8 'i' 'int'
i
   6: ImplicitCastExpr 0x563b15772c10 <lmathlib.c:158:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x563b15772b80 <col:40> 'int' lvalue Var 0x563b157728e8 'i' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x563b15772bc0 <lmathlib.c:158:20, col:41> 'lua_Number':'double'
|-ImplicitCastExpr 0x563b15772ba8 <col:20> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b15772b30 <col:20> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x563b15772bf8 <col:37> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15772b58 <col:37> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
`-ImplicitCastExpr 0x563b15772c10 <col:40> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563b15772b80 <col:40> 'int' lvalue Var 0x563b157728e8 'i' 'int'
[B4.2]([B4.4], [B4.6])
   8: DeclStmt 0x563b15772c28 <lmathlib.c:158:5, col:42>col:16
`-VarDecl 0x563b15772ad0 <col:5, col:41> col:16 used d 'lua_Number':'double' cinit
  `-CallExpr 0x563b15772bc0 <col:20, col:41> 'lua_Number':'double'
    |-ImplicitCastExpr 0x563b15772ba8 <col:20> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563b15772b30 <col:20> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
    |-ImplicitCastExpr 0x563b15772bf8 <col:37> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x563b15772b58 <col:37> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
    `-ImplicitCastExpr 0x563b15772c10 <col:40> 'int' <LValueToRValue>
      `-DeclRefExpr 0x563b15772b80 <col:40> 'int' lvalue Var 0x563b157728e8 'i' 'int'
lua_Number d = luaL_checknumber(L, i);
   9: DeclRefExpr 0x563b15772c40 <lmathlib.c:159:9> 'lua_Number':'double' lvalue Var 0x563b15772ad0 'd' 'lua_Number':'double'
d
  10: ImplicitCastExpr 0x563b15772c90 <lmathlib.c:159:9> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x563b15772c40 <col:9> 'lua_Number':'double' lvalue Var 0x563b15772ad0 'd' 'lua_Number':'double'
[B4.9] (ImplicitCastExpr, LValueToRValue, lua_Number)
  11: DeclRefExpr 0x563b15772c68 <lmathlib.c:159:13> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
dmin
  12: ImplicitCastExpr 0x563b15772ca8 <lmathlib.c:159:13> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x563b15772c68 <col:13> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
[B4.11] (ImplicitCastExpr, LValueToRValue, lua_Number)
  13: BinaryOperator 0x563b15772cc0 <lmathlib.c:159:9, col:13> 'int' '<'
|-ImplicitCastExpr 0x563b15772c90 <col:9> 'lua_Number':'double' <LValueToRValue>
| `-DeclRefExpr 0x563b15772c40 <col:9> 'lua_Number':'double' lvalue Var 0x563b15772ad0 'd' 'lua_Number':'double'
`-ImplicitCastExpr 0x563b15772ca8 <col:13> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x563b15772c68 <col:13> 'lua_Number':'double' lvalue Var 0x563b15772780 'dmin' 'lua_Number':'double'
[B4.10] < [B4.12]
   T: if [B4.13]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x563b157729d0 <lmathlib.c:157:13> 'int' lvalue Var 0x563b157728e8 'i' 'int'
i
   2: ImplicitCastExpr 0x563b15772a20 <lmathlib.c:157:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x563b157729d0 <col:13> 'int' lvalue Var 0x563b157728e8 'i' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x563b157729f8 <lmathlib.c:157:16> 'int' lvalue Var 0x563b15772648 'n' 'int'
n
   4: ImplicitCastExpr 0x563b15772a38 <lmathlib.c:157:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x563b157729f8 <col:16> 'int' lvalue Var 0x563b15772648 'n' 'int'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x563b15772a50 <lmathlib.c:157:13, col:16> 'int' '<='
|-ImplicitCastExpr 0x563b15772a20 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563b157729d0 <col:13> 'int' lvalue Var 0x563b157728e8 'i' 'int'
`-ImplicitCastExpr 0x563b15772a38 <col:16> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563b157729f8 <col:16> 'int' lvalue Var 0x563b15772648 'n' 'int'
[B5.2] <= [B5.4]
   T: for (...; [B5.5]; ...)
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x563b157726a8 <lmathlib.c:154:11> 'int (lua_State *)':'int (lua_State *)' Function 0x563b1571a498 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
   2: ImplicitCastExpr 0x563b157726f8 <lmathlib.c:154:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b157726a8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x563b1571a498 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   3: DeclRefExpr 0x563b157726d0 <lmathlib.c:154:22> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x563b15772740 <lmathlib.c:154:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b157726d0 <col:22> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x563b15772710 <lmathlib.c:154:11, col:23> 'int'
|-ImplicitCastExpr 0x563b157726f8 <col:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b157726a8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x563b1571a498 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x563b15772740 <col:22> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x563b157726d0 <col:22> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
[B6.2]([B6.4])
   6: DeclStmt 0x563b15772758 <lmathlib.c:154:3, col:24>col:7
`-VarDecl 0x563b15772648 <col:3, col:23> col:7 used n 'int' cinit
  `-CallExpr 0x563b15772710 <col:11, col:23> 'int'
    |-ImplicitCastExpr 0x563b157726f8 <col:11> 'int (*)(lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563b157726a8 <col:11> 'int (lua_State *)':'int (lua_State *)' Function 0x563b1571a498 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
    `-ImplicitCastExpr 0x563b15772740 <col:22> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x563b157726d0 <col:22> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
int n = lua_gettop(L);
   7: DeclRefExpr 0x563b157727e0 <lmathlib.c:155:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
luaL_checknumber
   8: ImplicitCastExpr 0x563b15772850 <lmathlib.c:155:21> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b157727e0 <col:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B6.7] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   9: DeclRefExpr 0x563b15772808 <lmathlib.c:155:38> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x563b157728a0 <lmathlib.c:155:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15772808 <col:38> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
[B6.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: IntegerLiteral 0x563b15772830 <lmathlib.c:155:41> 'int' 1
1
  12: CallExpr 0x563b15772868 <lmathlib.c:155:21, col:42> 'lua_Number':'double'
|-ImplicitCastExpr 0x563b15772850 <col:21> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b157727e0 <col:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x563b157728a0 <col:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15772808 <col:38> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
`-IntegerLiteral 0x563b15772830 <col:41> 'int' 1
[B6.8]([B6.10], [B6.11])
  13: DeclStmt 0x563b157728b8 <lmathlib.c:155:3, col:43>col:14
`-VarDecl 0x563b15772780 <col:3, col:42> col:14 used dmin 'lua_Number':'double' cinit
  `-CallExpr 0x563b15772868 <col:21, col:42> 'lua_Number':'double'
    |-ImplicitCastExpr 0x563b15772850 <col:21> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563b157727e0 <col:21> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
    |-ImplicitCastExpr 0x563b157728a0 <col:38> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x563b15772808 <col:38> 'lua_State *' lvalue ParmVar 0x563b157724f8 'L' 'lua_State *'
    `-IntegerLiteral 0x563b15772830 <col:41> 'int' 1
lua_Number dmin = luaL_checknumber(L, 1);
  14: DeclStmt 0x563b15772948 <lmathlib.c:156:3, col:8>col:7
`-VarDecl 0x563b157728e8 <col:3, col:7> col:7 used i 'int'
int i;
  15: IntegerLiteral 0x563b15772988 <lmathlib.c:157:10> 'int' 2
2
  16: DeclRefExpr 0x563b15772960 <lmathlib.c:157:8> 'int' lvalue Var 0x563b157728e8 'i' 'int'
i
  17: BinaryOperator 0x563b157729a8 <lmathlib.c:157:8, col:10> 'int' '='
|-DeclRefExpr 0x563b15772960 <col:8> 'int' lvalue Var 0x563b157728e8 'i' 'int'
`-IntegerLiteral 0x563b15772988 <col:10> 'int' 2
[B6.16] = [B6.15]
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (1): B1
