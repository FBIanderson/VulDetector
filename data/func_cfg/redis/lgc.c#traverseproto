static void traverseproto(global_State *g, Proto *f)
 [B25 (ENTRY)]
   Succs (1): B24

 [B1]
   1: DeclRefExpr 0x55ef1b1e24b0 <lgc.c:216:31> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: UnaryOperator 0x55ef1b1e24d8 <lgc.c:216:31, col:32> 'int' postfix '++'
`-DeclRefExpr 0x55ef1b1e24b0 <col:31> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B1.1]++
   Preds (2): B2 B3
   Succs (1): B4

 [B2]
   1: DeclRefExpr 0x55ef1b1e2640 <lgc.c:218:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1e2668 <lgc.c:218:18> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B2.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1e2680 <lgc.c:218:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
`-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B2.2]->locvars
   4: ImplicitCastExpr 0x55ef1b1e26e0 <lgc.c:218:18, col:21> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x55ef1b1e2680 <col:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
  `-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B2.3] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
   5: DeclRefExpr 0x55ef1b1e26b8 <lgc.c:218:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1e26f8 <lgc.c:218:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e26b8 <col:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B2.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1e2710 <lgc.c:218:18, col:30> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x55ef1b1e26e0 <col:18, col:21> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1e2680 <col:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
|   `-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1e26f8 <col:29> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e26b8 <col:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B2.4][[B2.6]]
   8: MemberExpr 0x55ef1b1e2738 <lgc.c:218:18, col:32> 'TString *' lvalue .varname 0x55ef1b18ceb0
`-ArraySubscriptExpr 0x55ef1b1e2710 <col:18, col:30> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x55ef1b1e26e0 <col:18, col:21> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1e2680 <col:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
  |   `-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
  `-ImplicitCastExpr 0x55ef1b1e26f8 <col:29> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e26b8 <col:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B2.7].varname
   9: ImplicitCastExpr 0x55ef1b1e2790 <lgc.c:40:34, col:36> 'TString *' <LValueToRValue>
`-ParenExpr 0x55ef1b1e2770 <col:34, col:36> 'TString *' lvalue
  `-MemberExpr 0x55ef1b1e2738 <line:218:18, col:32> 'TString *' lvalue .varname 0x55ef1b18ceb0
    `-ArraySubscriptExpr 0x55ef1b1e2710 <col:18, col:30> 'struct LocVar':'struct LocVar' lvalue
      |-ImplicitCastExpr 0x55ef1b1e26e0 <col:18, col:21> 'struct LocVar *' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1e2680 <col:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
      |   `-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
      `-ImplicitCastExpr 0x55ef1b1e26f8 <col:29> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1e26b8 <col:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B2.8]) (ImplicitCastExpr, LValueToRValue, TString *)
  10: MemberExpr 0x55ef1b1e27a8 <lgc.c:40:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
`-ImplicitCastExpr 0x55ef1b1e2790 <col:34, col:36> 'TString *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1e2770 <col:34, col:36> 'TString *' lvalue
    `-MemberExpr 0x55ef1b1e2738 <line:218:18, col:32> 'TString *' lvalue .varname 0x55ef1b18ceb0
      `-ArraySubscriptExpr 0x55ef1b1e2710 <col:18, col:30> 'struct LocVar':'struct LocVar' lvalue
        |-ImplicitCastExpr 0x55ef1b1e26e0 <col:18, col:21> 'struct LocVar *' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1e2680 <col:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
        |   `-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
        `-ImplicitCastExpr 0x55ef1b1e26f8 <col:29> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1e26b8 <col:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B2.9]->tsv
  11: MemberExpr 0x55ef1b1e27e0 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
`-MemberExpr 0x55ef1b1e27a8 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
  `-ImplicitCastExpr 0x55ef1b1e2790 <col:34, col:36> 'TString *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1e2770 <col:34, col:36> 'TString *' lvalue
      `-MemberExpr 0x55ef1b1e2738 <line:218:18, col:32> 'TString *' lvalue .varname 0x55ef1b18ceb0
        `-ArraySubscriptExpr 0x55ef1b1e2710 <col:18, col:30> 'struct LocVar':'struct LocVar' lvalue
          |-ImplicitCastExpr 0x55ef1b1e26e0 <col:18, col:21> 'struct LocVar *' <LValueToRValue>
          | `-MemberExpr 0x55ef1b1e2680 <col:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
          |   `-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
          |     `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
          `-ImplicitCastExpr 0x55ef1b1e26f8 <col:29> 'int' <LValueToRValue>
            `-DeclRefExpr 0x55ef1b1e26b8 <col:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B2.10].marked
  12: IntegerLiteral 0x55ef1b1e2838 <./lgc.h:30:21> 'int' 1
1
  13: IntegerLiteral 0x55ef1b1e2858 <./lgc.h:54:19> 'int' 0
0
  14: BinaryOperator 0x55ef1b1e2898 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1e2838 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1e2878 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1e2858 <line:54:19> 'int' 0
[B2.12] << ([B2.13])
  15: IntegerLiteral 0x55ef1b1e28e0 <./lgc.h:30:21> 'int' 1
1
  16: IntegerLiteral 0x55ef1b1e2900 <./lgc.h:55:19> 'int' 1
1
  17: BinaryOperator 0x55ef1b1e2940 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1e28e0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1e2920 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1e2900 <line:55:19> 'int' 1
[B2.15] << ([B2.16])
  18: BinaryOperator 0x55ef1b1e2988 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1e28c0 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1e2898 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1e2838 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1e2878 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1e2858 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1e2968 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1e2940 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1e28e0 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1e2920 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1e2900 <line:55:19> 'int' 1
([B2.14]) | ([B2.17])
  19: UnaryOperator 0x55ef1b1e2a10 <./lgc.h:27:46, col:49> 'int' prefix '~'
`-ParenExpr 0x55ef1b1e29f0 <col:47, col:49> 'int'
  `-ParenExpr 0x55ef1b1e29d0 <line:36:42, col:59> 'int'
    `-ParenExpr 0x55ef1b1e29b0 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1e2988 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1e28c0 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1e2898 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1e2838 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1e2878 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1e2858 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1e2968 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1e2940 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1e28e0 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1e2920 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1e2900 <line:55:19> 'int' 1
~((([B2.18])))
  20: CStyleCastExpr 0x55ef1b1e2a90 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1e2a70 <col:26, col:30> 'int'
  `-UnaryOperator 0x55ef1b1e2a10 <./lgc.h:27:46, col:49> 'int' prefix '~'
    `-ParenExpr 0x55ef1b1e29f0 <col:47, col:49> 'int'
      `-ParenExpr 0x55ef1b1e29d0 <line:36:42, col:59> 'int'
        `-ParenExpr 0x55ef1b1e29b0 <line:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b1e2988 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b1e28c0 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b1e2898 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b1e2838 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b1e2878 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b1e2858 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b1e2968 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b1e2940 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b1e28e0 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b1e2920 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b1e2900 <line:55:19> 'int' 1
(lu_byte)([B2.19]) (CStyleCastExpr, IntegralCast, lu_byte)
  21: ImplicitCastExpr 0x55ef1b1e2ad8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b1e2ab8 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1e2a90 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1e2a70 <col:26, col:30> 'int'
      `-UnaryOperator 0x55ef1b1e2a10 <./lgc.h:27:46, col:49> 'int' prefix '~'
        `-ParenExpr 0x55ef1b1e29f0 <col:47, col:49> 'int'
          `-ParenExpr 0x55ef1b1e29d0 <line:36:42, col:59> 'int'
            `-ParenExpr 0x55ef1b1e29b0 <line:31:25, col:51> 'int'
              `-BinaryOperator 0x55ef1b1e2988 <line:30:20, col:27> 'int' '|'
                |-ParenExpr 0x55ef1b1e28c0 <col:20, col:27> 'int'
                | `-BinaryOperator 0x55ef1b1e2898 <col:21, col:26> 'int' '<<'
                |   |-IntegerLiteral 0x55ef1b1e2838 <col:21> 'int' 1
                |   `-ParenExpr 0x55ef1b1e2878 <col:24, col:26> 'int'
                |     `-IntegerLiteral 0x55ef1b1e2858 <line:54:19> 'int' 0
                `-ParenExpr 0x55ef1b1e2968 <line:30:20, col:27> 'int'
                  `-BinaryOperator 0x55ef1b1e2940 <col:21, col:26> 'int' '<<'
                    |-IntegerLiteral 0x55ef1b1e28e0 <col:21> 'int' 1
                    `-ParenExpr 0x55ef1b1e2920 <col:24, col:26> 'int'
                      `-IntegerLiteral 0x55ef1b1e2900 <line:55:19> 'int' 1
([B2.20]) (ImplicitCastExpr, IntegralCast, int)
  22: CompoundAssignOperator 0x55ef1b1e2af0 <./lgc.h:27:25, ./llimits.h:75:31> 'lu_byte':'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|-ParenExpr 0x55ef1b1e2818 <./lgc.h:27:25, col:27> 'lu_byte':'unsigned char' lvalue
| `-MemberExpr 0x55ef1b1e27e0 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
|   `-MemberExpr 0x55ef1b1e27a8 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
|     `-ImplicitCastExpr 0x55ef1b1e2790 <col:34, col:36> 'TString *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1e2770 <col:34, col:36> 'TString *' lvalue
|         `-MemberExpr 0x55ef1b1e2738 <line:218:18, col:32> 'TString *' lvalue .varname 0x55ef1b18ceb0
|           `-ArraySubscriptExpr 0x55ef1b1e2710 <col:18, col:30> 'struct LocVar':'struct LocVar' lvalue
|             |-ImplicitCastExpr 0x55ef1b1e26e0 <col:18, col:21> 'struct LocVar *' <LValueToRValue>
|             | `-MemberExpr 0x55ef1b1e2680 <col:18, col:21> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
|             |   `-ImplicitCastExpr 0x55ef1b1e2668 <col:18> 'Proto *' <LValueToRValue>
|             |     `-DeclRefExpr 0x55ef1b1e2640 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
|             `-ImplicitCastExpr 0x55ef1b1e26f8 <col:29> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ef1b1e26b8 <col:29> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ImplicitCastExpr 0x55ef1b1e2ad8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b1e2ab8 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b1e2a90 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b1e2a70 <col:26, col:30> 'int'
        `-UnaryOperator 0x55ef1b1e2a10 <./lgc.h:27:46, col:49> 'int' prefix '~'
          `-ParenExpr 0x55ef1b1e29f0 <col:47, col:49> 'int'
            `-ParenExpr 0x55ef1b1e29d0 <line:36:42, col:59> 'int'
              `-ParenExpr 0x55ef1b1e29b0 <line:31:25, col:51> 'int'
                `-BinaryOperator 0x55ef1b1e2988 <line:30:20, col:27> 'int' '|'
                  |-ParenExpr 0x55ef1b1e28c0 <col:20, col:27> 'int'
                  | `-BinaryOperator 0x55ef1b1e2898 <col:21, col:26> 'int' '<<'
                  |   |-IntegerLiteral 0x55ef1b1e2838 <col:21> 'int' 1
                  |   `-ParenExpr 0x55ef1b1e2878 <col:24, col:26> 'int'
                  |     `-IntegerLiteral 0x55ef1b1e2858 <line:54:19> 'int' 0
                  `-ParenExpr 0x55ef1b1e2968 <line:30:20, col:27> 'int'
                    `-BinaryOperator 0x55ef1b1e2940 <col:21, col:26> 'int' '<<'
                      |-IntegerLiteral 0x55ef1b1e28e0 <col:21> 'int' 1
                      `-ParenExpr 0x55ef1b1e2920 <col:24, col:26> 'int'
                        `-IntegerLiteral 0x55ef1b1e2900 <line:55:19> 'int' 1
([B2.11]) &= [B2.21]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55ef1b1e24f8 <lgc.c:217:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1e2520 <lgc.c:217:9> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e24f8 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B3.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1e2538 <lgc.c:217:9, col:12> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
`-ImplicitCastExpr 0x55ef1b1e2520 <col:9> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e24f8 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B3.2]->locvars
   4: ImplicitCastExpr 0x55ef1b1e2598 <lgc.c:217:9, col:12> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x55ef1b1e2538 <col:9, col:12> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
  `-ImplicitCastExpr 0x55ef1b1e2520 <col:9> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e24f8 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B3.3] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
   5: DeclRefExpr 0x55ef1b1e2570 <lgc.c:217:20> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1e25b0 <lgc.c:217:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e2570 <col:20> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1e25c8 <lgc.c:217:9, col:21> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x55ef1b1e2598 <col:9, col:12> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1e2538 <col:9, col:12> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
|   `-ImplicitCastExpr 0x55ef1b1e2520 <col:9> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1e24f8 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1e25b0 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e2570 <col:20> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B3.4][[B3.6]]
   8: MemberExpr 0x55ef1b1e25f0 <lgc.c:217:9, col:23> 'TString *' lvalue .varname 0x55ef1b18ceb0
`-ArraySubscriptExpr 0x55ef1b1e25c8 <col:9, col:21> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x55ef1b1e2598 <col:9, col:12> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1e2538 <col:9, col:12> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
  |   `-ImplicitCastExpr 0x55ef1b1e2520 <col:9> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1e24f8 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
  `-ImplicitCastExpr 0x55ef1b1e25b0 <col:20> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e2570 <col:20> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B3.7].varname
   9: ImplicitCastExpr 0x55ef1b1e2628 <lgc.c:217:9, col:23> 'TString *' <LValueToRValue>
`-MemberExpr 0x55ef1b1e25f0 <col:9, col:23> 'TString *' lvalue .varname 0x55ef1b18ceb0
  `-ArraySubscriptExpr 0x55ef1b1e25c8 <col:9, col:21> 'struct LocVar':'struct LocVar' lvalue
    |-ImplicitCastExpr 0x55ef1b1e2598 <col:9, col:12> 'struct LocVar *' <LValueToRValue>
    | `-MemberExpr 0x55ef1b1e2538 <col:9, col:12> 'struct LocVar *' lvalue ->locvars 0x55ef1b18c530
    |   `-ImplicitCastExpr 0x55ef1b1e2520 <col:9> 'Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x55ef1b1e24f8 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
    `-ImplicitCastExpr 0x55ef1b1e25b0 <col:20> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1e2570 <col:20> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B3.8] (ImplicitCastExpr, LValueToRValue, TString *)
   T: if [B3.9]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55ef1b1e23b8 <lgc.c:216:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: ImplicitCastExpr 0x55ef1b1e2458 <lgc.c:216:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e23b8 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55ef1b1e23e0 <lgc.c:216:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x55ef1b1e2408 <lgc.c:216:15> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e23e0 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B4.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x55ef1b1e2420 <lgc.c:216:15, col:18> 'int' lvalue ->sizelocvars 0x55ef1b18cac8
`-ImplicitCastExpr 0x55ef1b1e2408 <col:15> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e23e0 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B4.4]->sizelocvars
   6: ImplicitCastExpr 0x55ef1b1e2470 <lgc.c:216:15, col:18> 'int' <LValueToRValue>
`-MemberExpr 0x55ef1b1e2420 <col:15, col:18> 'int' lvalue ->sizelocvars 0x55ef1b18cac8
  `-ImplicitCastExpr 0x55ef1b1e2408 <col:15> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e23e0 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x55ef1b1e2488 <lgc.c:216:13, col:18> 'int' '<'
|-ImplicitCastExpr 0x55ef1b1e2458 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1e23b8 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ImplicitCastExpr 0x55ef1b1e2470 <col:15, col:18> 'int' <LValueToRValue>
  `-MemberExpr 0x55ef1b1e2420 <col:15, col:18> 'int' lvalue ->sizelocvars 0x55ef1b18cac8
    `-ImplicitCastExpr 0x55ef1b1e2408 <col:15> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1e23e0 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B4.2] < [B4.6]
   T: for (...; [B4.7]; ...)
   Preds (2): B1 B5
   Succs (2): B3 B0

 [B5]
   1: IntegerLiteral 0x55ef1b1e2370 <lgc.c:216:10> 'int' 0
0
   2: DeclRefExpr 0x55ef1b1e2348 <lgc.c:216:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   3: BinaryOperator 0x55ef1b1e2390 <lgc.c:216:8, col:10> 'int' '='
|-DeclRefExpr 0x55ef1b1e2348 <col:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-IntegerLiteral 0x55ef1b1e2370 <col:10> 'int' 0
[B5.2] = [B5.1]
   Preds (1): B10
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55ef1b1e08f0 <lgc.c:212:25> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: UnaryOperator 0x55ef1b1e0918 <lgc.c:212:25, col:26> 'int' postfix '++'
`-DeclRefExpr 0x55ef1b1e08f0 <col:25> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B6.1]++
   Preds (3): B7 B8 B9
   Succs (1): B10

 [B7]
   1: DeclRefExpr 0x55ef1b1e1fa8 <lgc.c:56:3> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
   2: ImplicitCastExpr 0x55ef1b1e21f0 <lgc.c:56:3> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1e1fa8 <col:3> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
   3: DeclRefExpr 0x55ef1b1e1fd0 <lgc.c:214:18> 'global_State *' lvalue ParmVar 0x55ef1b1deb18 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b1e2240 <lgc.c:214:18> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e1fd0 <col:18> 'global_State *' lvalue ParmVar 0x55ef1b1deb18 'g' 'global_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclRefExpr 0x55ef1b1e1ff8 <lgc.c:214:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   6: ImplicitCastExpr 0x55ef1b1e2020 <lgc.c:214:21> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e1ff8 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B7.5] (ImplicitCastExpr, LValueToRValue, Proto *)
   7: MemberExpr 0x55ef1b1e2038 <lgc.c:214:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
`-ImplicitCastExpr 0x55ef1b1e2020 <col:21> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e1ff8 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B7.6]->p
   8: ImplicitCastExpr 0x55ef1b1e2098 <lgc.c:214:21, col:24> 'struct Proto **' <LValueToRValue>
`-MemberExpr 0x55ef1b1e2038 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
  `-ImplicitCastExpr 0x55ef1b1e2020 <col:21> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e1ff8 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B7.7] (ImplicitCastExpr, LValueToRValue, struct Proto **)
   9: DeclRefExpr 0x55ef1b1e2070 <lgc.c:214:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
  10: ImplicitCastExpr 0x55ef1b1e20b0 <lgc.c:214:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e2070 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B7.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x55ef1b1e20c8 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
|-ImplicitCastExpr 0x55ef1b1e2098 <col:21, col:24> 'struct Proto **' <LValueToRValue>
| `-MemberExpr 0x55ef1b1e2038 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
|   `-ImplicitCastExpr 0x55ef1b1e2020 <col:21> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1e1ff8 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1e20b0 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e2070 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B7.8][[B7.10]]
  12: ImplicitCastExpr 0x55ef1b1e2170 <./llimits.h:75:26, col:30> 'struct Proto *' <LValueToRValue>
`-ParenExpr 0x55ef1b1e2150 <col:26, col:30> 'struct Proto *' lvalue
  `-ParenExpr 0x55ef1b1e20f0 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
    `-ArraySubscriptExpr 0x55ef1b1e20c8 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
      |-ImplicitCastExpr 0x55ef1b1e2098 <col:21, col:24> 'struct Proto **' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1e2038 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
      |   `-ImplicitCastExpr 0x55ef1b1e2020 <col:21> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1e1ff8 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
      `-ImplicitCastExpr 0x55ef1b1e20b0 <col:26> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1e2070 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
(([B7.11])) (ImplicitCastExpr, LValueToRValue, struct Proto *)
  13: CStyleCastExpr 0x55ef1b1e2188 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b1e2170 <col:26, col:30> 'struct Proto *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1e2150 <col:26, col:30> 'struct Proto *' lvalue
    `-ParenExpr 0x55ef1b1e20f0 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
      `-ArraySubscriptExpr 0x55ef1b1e20c8 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
        |-ImplicitCastExpr 0x55ef1b1e2098 <col:21, col:24> 'struct Proto **' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1e2038 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
        |   `-ImplicitCastExpr 0x55ef1b1e2020 <col:21> 'Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1e1ff8 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
        `-ImplicitCastExpr 0x55ef1b1e20b0 <col:26> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1e2070 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
(GCObject *)[B7.12] (CStyleCastExpr, BitCast, GCObject *)
  14: CallExpr 0x55ef1b1e2208 <lgc.c:56:3, col:33> 'void'
|-ImplicitCastExpr 0x55ef1b1e21f0 <col:3> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1e1fa8 <col:3> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b1e2240 <line:214:18> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1e1fd0 <col:18> 'global_State *' lvalue ParmVar 0x55ef1b1deb18 'g' 'global_State *'
`-ParenExpr 0x55ef1b1e21d0 <./lstate.h:162:20, col:42> 'GCObject *'
  `-ParenExpr 0x55ef1b1e21b0 <./llimits.h:75:22, col:31> 'GCObject *'
    `-CStyleCastExpr 0x55ef1b1e2188 <col:23, col:30> 'GCObject *' <BitCast>
      `-ImplicitCastExpr 0x55ef1b1e2170 <col:26, col:30> 'struct Proto *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1e2150 <col:26, col:30> 'struct Proto *' lvalue
          `-ParenExpr 0x55ef1b1e20f0 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
            `-ArraySubscriptExpr 0x55ef1b1e20c8 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
              |-ImplicitCastExpr 0x55ef1b1e2098 <col:21, col:24> 'struct Proto **' <LValueToRValue>
              | `-MemberExpr 0x55ef1b1e2038 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
              |   `-ImplicitCastExpr 0x55ef1b1e2020 <col:21> 'Proto *' <LValueToRValue>
              |     `-DeclRefExpr 0x55ef1b1e1ff8 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
              `-ImplicitCastExpr 0x55ef1b1e20b0 <col:26> 'int' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b1e2070 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B7.2]([B7.4], (([B7.13])))
   Preds (1): B8
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x55ef1b1e1ab0 <lgc.c:214:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1e1ad8 <lgc.c:214:21> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B8.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1e1af0 <lgc.c:214:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
`-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B8.2]->p
   4: ImplicitCastExpr 0x55ef1b1e1b50 <lgc.c:214:21, col:24> 'struct Proto **' <LValueToRValue>
`-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
  `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B8.3] (ImplicitCastExpr, LValueToRValue, struct Proto **)
   5: DeclRefExpr 0x55ef1b1e1b28 <lgc.c:214:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1e1b68 <lgc.c:214:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B8.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
|-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
| `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
|   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B8.4][[B8.6]]
   8: ImplicitCastExpr 0x55ef1b1e1c28 <./llimits.h:75:26, col:30> 'struct Proto *' <LValueToRValue>
`-ParenExpr 0x55ef1b1e1c08 <col:26, col:30> 'struct Proto *' lvalue
  `-ParenExpr 0x55ef1b1e1ba8 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
    `-ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
      |-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
      |   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
      `-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
(([B8.7])) (ImplicitCastExpr, LValueToRValue, struct Proto *)
   9: CStyleCastExpr 0x55ef1b1e1c40 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b1e1c28 <col:26, col:30> 'struct Proto *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1e1c08 <col:26, col:30> 'struct Proto *' lvalue
    `-ParenExpr 0x55ef1b1e1ba8 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
      `-ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
        |-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
        |   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
        `-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
(GCObject *)[B8.8] (CStyleCastExpr, BitCast, GCObject *)
  10: MemberExpr 0x55ef1b1e1cc8 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ParenExpr 0x55ef1b1e1ca8 <col:35, col:37> 'GCObject *'
  `-ParenExpr 0x55ef1b1e1c88 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x55ef1b1e1c68 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x55ef1b1e1c40 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x55ef1b1e1c28 <col:26, col:30> 'struct Proto *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1e1c08 <col:26, col:30> 'struct Proto *' lvalue
            `-ParenExpr 0x55ef1b1e1ba8 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
              `-ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
                |-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
                | `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
                |   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
                |     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                `-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
((([B8.9])))->gch
  11: MemberExpr 0x55ef1b1e1d00 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1e1cc8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ParenExpr 0x55ef1b1e1ca8 <col:35, col:37> 'GCObject *'
    `-ParenExpr 0x55ef1b1e1c88 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x55ef1b1e1c68 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x55ef1b1e1c40 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x55ef1b1e1c28 <col:26, col:30> 'struct Proto *' <LValueToRValue>
            `-ParenExpr 0x55ef1b1e1c08 <col:26, col:30> 'struct Proto *' lvalue
              `-ParenExpr 0x55ef1b1e1ba8 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
                `-ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
                  |-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
                  | `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
                  |   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
                  |     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                  `-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B8.10].marked
  12: ImplicitCastExpr 0x55ef1b1e1f30 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1e1d38 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1e1d00 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1e1cc8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ParenExpr 0x55ef1b1e1ca8 <col:35, col:37> 'GCObject *'
        `-ParenExpr 0x55ef1b1e1c88 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x55ef1b1e1c68 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x55ef1b1e1c40 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x55ef1b1e1c28 <col:26, col:30> 'struct Proto *' <LValueToRValue>
                `-ParenExpr 0x55ef1b1e1c08 <col:26, col:30> 'struct Proto *' lvalue
                  `-ParenExpr 0x55ef1b1e1ba8 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
                    `-ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
                      |-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
                      | `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
                      |   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
                      |     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                      `-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
                        `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B8.11]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  13: ImplicitCastExpr 0x55ef1b1e1f48 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1e1f30 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1e1d38 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1e1d00 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b1e1cc8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ParenExpr 0x55ef1b1e1ca8 <col:35, col:37> 'GCObject *'
          `-ParenExpr 0x55ef1b1e1c88 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x55ef1b1e1c68 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x55ef1b1e1c40 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x55ef1b1e1c28 <col:26, col:30> 'struct Proto *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b1e1c08 <col:26, col:30> 'struct Proto *' lvalue
                    `-ParenExpr 0x55ef1b1e1ba8 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
                      `-ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
                        |-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
                        | `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
                        |   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
                        |     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                        `-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B8.12] (ImplicitCastExpr, IntegralCast, int)
  14: IntegerLiteral 0x55ef1b1e1d58 <./lgc.h:30:21> 'int' 1
1
  15: IntegerLiteral 0x55ef1b1e1d78 <./lgc.h:54:19> 'int' 0
0
  16: BinaryOperator 0x55ef1b1e1db8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1e1d58 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1e1d98 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1e1d78 <line:54:19> 'int' 0
[B8.14] << ([B8.15])
  17: IntegerLiteral 0x55ef1b1e1e00 <./lgc.h:30:21> 'int' 1
1
  18: IntegerLiteral 0x55ef1b1e1e20 <./lgc.h:55:19> 'int' 1
1
  19: BinaryOperator 0x55ef1b1e1e60 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1e1e00 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1e1e40 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1e1e20 <line:55:19> 'int' 1
[B8.17] << ([B8.18])
  20: BinaryOperator 0x55ef1b1e1ea8 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1e1de0 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1e1db8 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1e1d58 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1e1d98 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1e1d78 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1e1e88 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1e1e60 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1e1e00 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1e1e40 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1e1e20 <line:55:19> 'int' 1
([B8.16]) | ([B8.19])
  21: BinaryOperator 0x55ef1b1e1f60 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1e1f48 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1e1f30 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1e1d38 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1e1d00 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b1e1cc8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ParenExpr 0x55ef1b1e1ca8 <col:35, col:37> 'GCObject *'
|           `-ParenExpr 0x55ef1b1e1c88 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x55ef1b1e1c68 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x55ef1b1e1c40 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x55ef1b1e1c28 <col:26, col:30> 'struct Proto *' <LValueToRValue>
|                   `-ParenExpr 0x55ef1b1e1c08 <col:26, col:30> 'struct Proto *' lvalue
|                     `-ParenExpr 0x55ef1b1e1ba8 <./lstate.h:162:38, col:40> 'struct Proto *' lvalue
|                       `-ArraySubscriptExpr 0x55ef1b1e1b80 <lgc.c:214:21, col:27> 'struct Proto *' lvalue
|                         |-ImplicitCastExpr 0x55ef1b1e1b50 <col:21, col:24> 'struct Proto **' <LValueToRValue>
|                         | `-MemberExpr 0x55ef1b1e1af0 <col:21, col:24> 'struct Proto **' lvalue ->p 0x55ef1b18c320
|                         |   `-ImplicitCastExpr 0x55ef1b1e1ad8 <col:21> 'Proto *' <LValueToRValue>
|                         |     `-DeclRefExpr 0x55ef1b1e1ab0 <col:21> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
|                         `-ImplicitCastExpr 0x55ef1b1e1b68 <col:26> 'int' <LValueToRValue>
|                           `-DeclRefExpr 0x55ef1b1e1b28 <col:26> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ParenExpr 0x55ef1b1e1f10 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1e1ef0 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b1e1ed0 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1e1ea8 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1e1de0 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1e1db8 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1e1d58 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1e1d98 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1e1d78 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1e1e88 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1e1e60 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1e1e00 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1e1e40 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1e1e20 <line:55:19> 'int' 1
[B8.13] & ((([B8.20])))
   T: if ([B8.21])
   Preds (1): B9
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x55ef1b1e0938 <lgc.c:213:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1e0960 <lgc.c:213:9> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e0938 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B9.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1e0978 <lgc.c:213:9, col:12> 'struct Proto **' lvalue ->p 0x55ef1b18c320
`-ImplicitCastExpr 0x55ef1b1e0960 <col:9> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e0938 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B9.2]->p
   4: ImplicitCastExpr 0x55ef1b1e09d8 <lgc.c:213:9, col:12> 'struct Proto **' <LValueToRValue>
`-MemberExpr 0x55ef1b1e0978 <col:9, col:12> 'struct Proto **' lvalue ->p 0x55ef1b18c320
  `-ImplicitCastExpr 0x55ef1b1e0960 <col:9> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e0938 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B9.3] (ImplicitCastExpr, LValueToRValue, struct Proto **)
   5: DeclRefExpr 0x55ef1b1e09b0 <lgc.c:213:14> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1e09f0 <lgc.c:213:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e09b0 <col:14> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B9.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1e0a08 <lgc.c:213:9, col:15> 'struct Proto *' lvalue
|-ImplicitCastExpr 0x55ef1b1e09d8 <col:9, col:12> 'struct Proto **' <LValueToRValue>
| `-MemberExpr 0x55ef1b1e0978 <col:9, col:12> 'struct Proto **' lvalue ->p 0x55ef1b18c320
|   `-ImplicitCastExpr 0x55ef1b1e0960 <col:9> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1e0938 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1e09f0 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e09b0 <col:14> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B9.4][[B9.6]]
   8: ImplicitCastExpr 0x55ef1b1e0a30 <lgc.c:213:9, col:15> 'struct Proto *' <LValueToRValue>
`-ArraySubscriptExpr 0x55ef1b1e0a08 <col:9, col:15> 'struct Proto *' lvalue
  |-ImplicitCastExpr 0x55ef1b1e09d8 <col:9, col:12> 'struct Proto **' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1e0978 <col:9, col:12> 'struct Proto **' lvalue ->p 0x55ef1b18c320
  |   `-ImplicitCastExpr 0x55ef1b1e0960 <col:9> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1e0938 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
  `-ImplicitCastExpr 0x55ef1b1e09f0 <col:14> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e09b0 <col:14> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B9.7] (ImplicitCastExpr, LValueToRValue, struct Proto *)
   T: if [B9.8]
   Preds (1): B10
   Succs (2): B8 B6

 [B10]
   1: DeclRefExpr 0x55ef1b1e07f8 <lgc.c:212:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: ImplicitCastExpr 0x55ef1b1e0898 <lgc.c:212:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e07f8 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55ef1b1e0820 <lgc.c:212:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x55ef1b1e0848 <lgc.c:212:15> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e0820 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B10.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x55ef1b1e0860 <lgc.c:212:15, col:18> 'int' lvalue ->sizep 0x55ef1b18ca68
`-ImplicitCastExpr 0x55ef1b1e0848 <col:15> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e0820 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B10.4]->sizep
   6: ImplicitCastExpr 0x55ef1b1e08b0 <lgc.c:212:15, col:18> 'int' <LValueToRValue>
`-MemberExpr 0x55ef1b1e0860 <col:15, col:18> 'int' lvalue ->sizep 0x55ef1b18ca68
  `-ImplicitCastExpr 0x55ef1b1e0848 <col:15> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e0820 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B10.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x55ef1b1e08c8 <lgc.c:212:13, col:18> 'int' '<'
|-ImplicitCastExpr 0x55ef1b1e0898 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1e07f8 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ImplicitCastExpr 0x55ef1b1e08b0 <col:15, col:18> 'int' <LValueToRValue>
  `-MemberExpr 0x55ef1b1e0860 <col:15, col:18> 'int' lvalue ->sizep 0x55ef1b18ca68
    `-ImplicitCastExpr 0x55ef1b1e0848 <col:15> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1e0820 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B10.2] < [B10.6]
   T: for (...; [B10.7]; ...)
   Preds (2): B6 B11
   Succs (2): B9 B5

 [B11]
   1: IntegerLiteral 0x55ef1b1e07b0 <lgc.c:212:10> 'int' 0
0
   2: DeclRefExpr 0x55ef1b1e0788 <lgc.c:212:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   3: BinaryOperator 0x55ef1b1e07d0 <lgc.c:212:8, col:10> 'int' '='
|-DeclRefExpr 0x55ef1b1e0788 <col:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-IntegerLiteral 0x55ef1b1e07b0 <col:10> 'int' 0
[B11.2] = [B11.1]
   Preds (1): B15
   Succs (1): B10

 [B12]
   1: DeclRefExpr 0x55ef1b1e00d8 <lgc.c:208:32> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: UnaryOperator 0x55ef1b1e0100 <lgc.c:208:32, col:33> 'int' postfix '++'
`-DeclRefExpr 0x55ef1b1e00d8 <col:32> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B12.1]++
   Preds (2): B13 B14
   Succs (1): B15

 [B13]
   1: DeclRefExpr 0x55ef1b1e0230 <lgc.c:210:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1e0258 <lgc.c:210:18> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B13.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1e0270 <lgc.c:210:18, col:21> 'TString **' lvalue ->upvalues 0x55ef1b18c670
`-ImplicitCastExpr 0x55ef1b1e0258 <col:18> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B13.2]->upvalues
   4: ImplicitCastExpr 0x55ef1b1e02d0 <lgc.c:210:18, col:21> 'TString **' <LValueToRValue>
`-MemberExpr 0x55ef1b1e0270 <col:18, col:21> 'TString **' lvalue ->upvalues 0x55ef1b18c670
  `-ImplicitCastExpr 0x55ef1b1e0258 <col:18> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B13.3] (ImplicitCastExpr, LValueToRValue, TString **)
   5: DeclRefExpr 0x55ef1b1e02a8 <lgc.c:210:30> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1e02e8 <lgc.c:210:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e02a8 <col:30> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B13.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1e0300 <lgc.c:210:18, col:31> 'TString *' lvalue
|-ImplicitCastExpr 0x55ef1b1e02d0 <col:18, col:21> 'TString **' <LValueToRValue>
| `-MemberExpr 0x55ef1b1e0270 <col:18, col:21> 'TString **' lvalue ->upvalues 0x55ef1b18c670
|   `-ImplicitCastExpr 0x55ef1b1e0258 <col:18> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1e02e8 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e02a8 <col:30> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B13.4][[B13.6]]
   8: ImplicitCastExpr 0x55ef1b1e0348 <lgc.c:40:34, col:36> 'TString *' <LValueToRValue>
`-ParenExpr 0x55ef1b1e0328 <col:34, col:36> 'TString *' lvalue
  `-ArraySubscriptExpr 0x55ef1b1e0300 <line:210:18, col:31> 'TString *' lvalue
    |-ImplicitCastExpr 0x55ef1b1e02d0 <col:18, col:21> 'TString **' <LValueToRValue>
    | `-MemberExpr 0x55ef1b1e0270 <col:18, col:21> 'TString **' lvalue ->upvalues 0x55ef1b18c670
    |   `-ImplicitCastExpr 0x55ef1b1e0258 <col:18> 'Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
    `-ImplicitCastExpr 0x55ef1b1e02e8 <col:30> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1e02a8 <col:30> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B13.7]) (ImplicitCastExpr, LValueToRValue, TString *)
   9: MemberExpr 0x55ef1b1e0360 <lgc.c:40:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
`-ImplicitCastExpr 0x55ef1b1e0348 <col:34, col:36> 'TString *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1e0328 <col:34, col:36> 'TString *' lvalue
    `-ArraySubscriptExpr 0x55ef1b1e0300 <line:210:18, col:31> 'TString *' lvalue
      |-ImplicitCastExpr 0x55ef1b1e02d0 <col:18, col:21> 'TString **' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1e0270 <col:18, col:21> 'TString **' lvalue ->upvalues 0x55ef1b18c670
      |   `-ImplicitCastExpr 0x55ef1b1e0258 <col:18> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
      `-ImplicitCastExpr 0x55ef1b1e02e8 <col:30> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1e02a8 <col:30> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B13.8]->tsv
  10: MemberExpr 0x55ef1b1e0398 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
`-MemberExpr 0x55ef1b1e0360 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
  `-ImplicitCastExpr 0x55ef1b1e0348 <col:34, col:36> 'TString *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1e0328 <col:34, col:36> 'TString *' lvalue
      `-ArraySubscriptExpr 0x55ef1b1e0300 <line:210:18, col:31> 'TString *' lvalue
        |-ImplicitCastExpr 0x55ef1b1e02d0 <col:18, col:21> 'TString **' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1e0270 <col:18, col:21> 'TString **' lvalue ->upvalues 0x55ef1b18c670
        |   `-ImplicitCastExpr 0x55ef1b1e0258 <col:18> 'Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
        `-ImplicitCastExpr 0x55ef1b1e02e8 <col:30> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1e02a8 <col:30> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B13.9].marked
  11: IntegerLiteral 0x55ef1b1e03f0 <./lgc.h:30:21> 'int' 1
1
  12: IntegerLiteral 0x55ef1b1e0410 <./lgc.h:54:19> 'int' 0
0
  13: BinaryOperator 0x55ef1b1e0450 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1e03f0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1e0430 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1e0410 <line:54:19> 'int' 0
[B13.11] << ([B13.12])
  14: IntegerLiteral 0x55ef1b1e0498 <./lgc.h:30:21> 'int' 1
1
  15: IntegerLiteral 0x55ef1b1e04b8 <./lgc.h:55:19> 'int' 1
1
  16: BinaryOperator 0x55ef1b1e04f8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1e0498 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1e04d8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1e04b8 <line:55:19> 'int' 1
[B13.14] << ([B13.15])
  17: BinaryOperator 0x55ef1b1e0540 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1e0478 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1e0450 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1e03f0 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1e0430 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1e0410 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1e0520 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1e04f8 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1e0498 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1e04d8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1e04b8 <line:55:19> 'int' 1
([B13.13]) | ([B13.16])
  18: UnaryOperator 0x55ef1b1e05c8 <./lgc.h:27:46, col:49> 'int' prefix '~'
`-ParenExpr 0x55ef1b1e05a8 <col:47, col:49> 'int'
  `-ParenExpr 0x55ef1b1e0588 <line:36:42, col:59> 'int'
    `-ParenExpr 0x55ef1b1e0568 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1e0540 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1e0478 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1e0450 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1e03f0 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1e0430 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1e0410 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1e0520 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1e04f8 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1e0498 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1e04d8 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1e04b8 <line:55:19> 'int' 1
~((([B13.17])))
  19: CStyleCastExpr 0x55ef1b1e0648 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1e0628 <col:26, col:30> 'int'
  `-UnaryOperator 0x55ef1b1e05c8 <./lgc.h:27:46, col:49> 'int' prefix '~'
    `-ParenExpr 0x55ef1b1e05a8 <col:47, col:49> 'int'
      `-ParenExpr 0x55ef1b1e0588 <line:36:42, col:59> 'int'
        `-ParenExpr 0x55ef1b1e0568 <line:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b1e0540 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b1e0478 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b1e0450 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b1e03f0 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b1e0430 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b1e0410 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b1e0520 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b1e04f8 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b1e0498 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b1e04d8 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b1e04b8 <line:55:19> 'int' 1
(lu_byte)([B13.18]) (CStyleCastExpr, IntegralCast, lu_byte)
  20: ImplicitCastExpr 0x55ef1b1e0690 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b1e0670 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1e0648 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1e0628 <col:26, col:30> 'int'
      `-UnaryOperator 0x55ef1b1e05c8 <./lgc.h:27:46, col:49> 'int' prefix '~'
        `-ParenExpr 0x55ef1b1e05a8 <col:47, col:49> 'int'
          `-ParenExpr 0x55ef1b1e0588 <line:36:42, col:59> 'int'
            `-ParenExpr 0x55ef1b1e0568 <line:31:25, col:51> 'int'
              `-BinaryOperator 0x55ef1b1e0540 <line:30:20, col:27> 'int' '|'
                |-ParenExpr 0x55ef1b1e0478 <col:20, col:27> 'int'
                | `-BinaryOperator 0x55ef1b1e0450 <col:21, col:26> 'int' '<<'
                |   |-IntegerLiteral 0x55ef1b1e03f0 <col:21> 'int' 1
                |   `-ParenExpr 0x55ef1b1e0430 <col:24, col:26> 'int'
                |     `-IntegerLiteral 0x55ef1b1e0410 <line:54:19> 'int' 0
                `-ParenExpr 0x55ef1b1e0520 <line:30:20, col:27> 'int'
                  `-BinaryOperator 0x55ef1b1e04f8 <col:21, col:26> 'int' '<<'
                    |-IntegerLiteral 0x55ef1b1e0498 <col:21> 'int' 1
                    `-ParenExpr 0x55ef1b1e04d8 <col:24, col:26> 'int'
                      `-IntegerLiteral 0x55ef1b1e04b8 <line:55:19> 'int' 1
([B13.19]) (ImplicitCastExpr, IntegralCast, int)
  21: CompoundAssignOperator 0x55ef1b1e06a8 <./lgc.h:27:25, ./llimits.h:75:31> 'lu_byte':'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|-ParenExpr 0x55ef1b1e03d0 <./lgc.h:27:25, col:27> 'lu_byte':'unsigned char' lvalue
| `-MemberExpr 0x55ef1b1e0398 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
|   `-MemberExpr 0x55ef1b1e0360 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
|     `-ImplicitCastExpr 0x55ef1b1e0348 <col:34, col:36> 'TString *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1e0328 <col:34, col:36> 'TString *' lvalue
|         `-ArraySubscriptExpr 0x55ef1b1e0300 <line:210:18, col:31> 'TString *' lvalue
|           |-ImplicitCastExpr 0x55ef1b1e02d0 <col:18, col:21> 'TString **' <LValueToRValue>
|           | `-MemberExpr 0x55ef1b1e0270 <col:18, col:21> 'TString **' lvalue ->upvalues 0x55ef1b18c670
|           |   `-ImplicitCastExpr 0x55ef1b1e0258 <col:18> 'Proto *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55ef1b1e0230 <col:18> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
|           `-ImplicitCastExpr 0x55ef1b1e02e8 <col:30> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55ef1b1e02a8 <col:30> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ImplicitCastExpr 0x55ef1b1e0690 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b1e0670 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b1e0648 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b1e0628 <col:26, col:30> 'int'
        `-UnaryOperator 0x55ef1b1e05c8 <./lgc.h:27:46, col:49> 'int' prefix '~'
          `-ParenExpr 0x55ef1b1e05a8 <col:47, col:49> 'int'
            `-ParenExpr 0x55ef1b1e0588 <line:36:42, col:59> 'int'
              `-ParenExpr 0x55ef1b1e0568 <line:31:25, col:51> 'int'
                `-BinaryOperator 0x55ef1b1e0540 <line:30:20, col:27> 'int' '|'
                  |-ParenExpr 0x55ef1b1e0478 <col:20, col:27> 'int'
                  | `-BinaryOperator 0x55ef1b1e0450 <col:21, col:26> 'int' '<<'
                  |   |-IntegerLiteral 0x55ef1b1e03f0 <col:21> 'int' 1
                  |   `-ParenExpr 0x55ef1b1e0430 <col:24, col:26> 'int'
                  |     `-IntegerLiteral 0x55ef1b1e0410 <line:54:19> 'int' 0
                  `-ParenExpr 0x55ef1b1e0520 <line:30:20, col:27> 'int'
                    `-BinaryOperator 0x55ef1b1e04f8 <col:21, col:26> 'int' '<<'
                      |-IntegerLiteral 0x55ef1b1e0498 <col:21> 'int' 1
                      `-ParenExpr 0x55ef1b1e04d8 <col:24, col:26> 'int'
                        `-IntegerLiteral 0x55ef1b1e04b8 <line:55:19> 'int' 1
([B13.10]) &= [B13.20]
   Preds (1): B14
   Succs (1): B12

 [B14]
   1: DeclRefExpr 0x55ef1b1e0120 <lgc.c:209:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1e0148 <lgc.c:209:9> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e0120 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B14.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1e0160 <lgc.c:209:9, col:12> 'TString **' lvalue ->upvalues 0x55ef1b18c670
`-ImplicitCastExpr 0x55ef1b1e0148 <col:9> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e0120 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B14.2]->upvalues
   4: ImplicitCastExpr 0x55ef1b1e01c0 <lgc.c:209:9, col:12> 'TString **' <LValueToRValue>
`-MemberExpr 0x55ef1b1e0160 <col:9, col:12> 'TString **' lvalue ->upvalues 0x55ef1b18c670
  `-ImplicitCastExpr 0x55ef1b1e0148 <col:9> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e0120 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B14.3] (ImplicitCastExpr, LValueToRValue, TString **)
   5: DeclRefExpr 0x55ef1b1e0198 <lgc.c:209:21> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1e01d8 <lgc.c:209:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e0198 <col:21> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B14.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1e01f0 <lgc.c:209:9, col:22> 'TString *' lvalue
|-ImplicitCastExpr 0x55ef1b1e01c0 <col:9, col:12> 'TString **' <LValueToRValue>
| `-MemberExpr 0x55ef1b1e0160 <col:9, col:12> 'TString **' lvalue ->upvalues 0x55ef1b18c670
|   `-ImplicitCastExpr 0x55ef1b1e0148 <col:9> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1e0120 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1e01d8 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e0198 <col:21> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B14.4][[B14.6]]
   8: ImplicitCastExpr 0x55ef1b1e0218 <lgc.c:209:9, col:22> 'TString *' <LValueToRValue>
`-ArraySubscriptExpr 0x55ef1b1e01f0 <col:9, col:22> 'TString *' lvalue
  |-ImplicitCastExpr 0x55ef1b1e01c0 <col:9, col:12> 'TString **' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1e0160 <col:9, col:12> 'TString **' lvalue ->upvalues 0x55ef1b18c670
  |   `-ImplicitCastExpr 0x55ef1b1e0148 <col:9> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1e0120 <col:9> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
  `-ImplicitCastExpr 0x55ef1b1e01d8 <col:21> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e0198 <col:21> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B14.7] (ImplicitCastExpr, LValueToRValue, TString *)
   T: if [B14.8]
   Preds (1): B15
   Succs (2): B13 B12

 [B15]
   1: DeclRefExpr 0x55ef1b1dffe0 <lgc.c:208:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: ImplicitCastExpr 0x55ef1b1e0080 <lgc.c:208:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dffe0 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B15.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55ef1b1e0008 <lgc.c:208:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x55ef1b1e0030 <lgc.c:208:15> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1e0008 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B15.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x55ef1b1e0048 <lgc.c:208:15, col:18> 'int' lvalue ->sizeupvalues 0x55ef1b18c728
`-ImplicitCastExpr 0x55ef1b1e0030 <col:15> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1e0008 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B15.4]->sizeupvalues
   6: ImplicitCastExpr 0x55ef1b1e0098 <lgc.c:208:15, col:18> 'int' <LValueToRValue>
`-MemberExpr 0x55ef1b1e0048 <col:15, col:18> 'int' lvalue ->sizeupvalues 0x55ef1b18c728
  `-ImplicitCastExpr 0x55ef1b1e0030 <col:15> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1e0008 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B15.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x55ef1b1e00b0 <lgc.c:208:13, col:18> 'int' '<'
|-ImplicitCastExpr 0x55ef1b1e0080 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1dffe0 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ImplicitCastExpr 0x55ef1b1e0098 <col:15, col:18> 'int' <LValueToRValue>
  `-MemberExpr 0x55ef1b1e0048 <col:15, col:18> 'int' lvalue ->sizeupvalues 0x55ef1b18c728
    `-ImplicitCastExpr 0x55ef1b1e0030 <col:15> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1e0008 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B15.2] < [B15.6]
   T: for (...; [B15.7]; ...)
   Preds (2): B12 B16
   Succs (2): B14 B11

 [B16]
   1: IntegerLiteral 0x55ef1b1dff98 <lgc.c:208:10> 'int' 0
0
   2: DeclRefExpr 0x55ef1b1dff70 <lgc.c:208:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   3: BinaryOperator 0x55ef1b1dffb8 <lgc.c:208:8, col:10> 'int' '='
|-DeclRefExpr 0x55ef1b1dff70 <col:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-IntegerLiteral 0x55ef1b1dff98 <col:10> 'int' 0
[B16.2] = [B16.1]
   Preds (1): B21
   Succs (1): B15

 [B17]
   1: DeclRefExpr 0x55ef1b1df460 <lgc.c:206:25> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: UnaryOperator 0x55ef1b1df488 <lgc.c:206:25, col:26> 'int' postfix '++'
`-DeclRefExpr 0x55ef1b1df460 <col:25> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B17.1]++
   Preds (3): B18 B19 B20
   Succs (1): B21

 [B18]
   1: DeclRefExpr 0x55ef1b1dfc38 <lgc.c:53:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
   2: ImplicitCastExpr 0x55ef1b1dfe50 <lgc.c:53:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1dfc38 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B18.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
   3: DeclRefExpr 0x55ef1b1dfc60 <lgc.c:207:15> 'global_State *' lvalue ParmVar 0x55ef1b1deb18 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b1dfea0 <lgc.c:207:15> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dfc60 <col:15> 'global_State *' lvalue ParmVar 0x55ef1b1deb18 'g' 'global_State *'
[B18.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclRefExpr 0x55ef1b1dfc88 <lgc.c:207:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   6: ImplicitCastExpr 0x55ef1b1dfcb0 <lgc.c:207:19> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B18.5] (ImplicitCastExpr, LValueToRValue, Proto *)
   7: MemberExpr 0x55ef1b1dfcc8 <lgc.c:207:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
`-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B18.6]->k
   8: ImplicitCastExpr 0x55ef1b1dfd28 <lgc.c:207:19, col:22> 'TValue *' <LValueToRValue>
`-MemberExpr 0x55ef1b1dfcc8 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
  `-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B18.7] (ImplicitCastExpr, LValueToRValue, TValue *)
   9: DeclRefExpr 0x55ef1b1dfd00 <lgc.c:207:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
  10: ImplicitCastExpr 0x55ef1b1dfd40 <lgc.c:207:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dfd00 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B18.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x55ef1b1dfd58 <lgc.c:207:19, col:25> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x55ef1b1dfd28 <col:19, col:22> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1dfcc8 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
|   `-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1dfd40 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dfd00 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B18.8][[B18.10]]
  12: UnaryOperator 0x55ef1b1dfd80 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x55ef1b1dfd58 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x55ef1b1dfd28 <col:19, col:22> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1dfcc8 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
  |   `-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
  `-ImplicitCastExpr 0x55ef1b1dfd40 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1dfd00 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
&[B18.11]
  13: MemberExpr 0x55ef1b1dfdc0 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ParenExpr 0x55ef1b1dfda0 <col:48, col:50> 'TValue *'
  `-UnaryOperator 0x55ef1b1dfd80 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x55ef1b1dfd58 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x55ef1b1dfd28 <col:19, col:22> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1dfcc8 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
      |   `-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
      `-ImplicitCastExpr 0x55ef1b1dfd40 <col:24> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1dfd00 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B18.12])->value
  14: MemberExpr 0x55ef1b1dfdf8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1dfdc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ParenExpr 0x55ef1b1dfda0 <col:48, col:50> 'TValue *'
    `-UnaryOperator 0x55ef1b1dfd80 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
      `-ArraySubscriptExpr 0x55ef1b1dfd58 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
        |-ImplicitCastExpr 0x55ef1b1dfd28 <col:19, col:22> 'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1dfcc8 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
        |   `-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
        `-ImplicitCastExpr 0x55ef1b1dfd40 <col:24> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1dfd00 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B18.13].gc
  15: ImplicitCastExpr 0x55ef1b1dfeb8 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1dfe30 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x55ef1b1dfdf8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b1dfdc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
      `-ParenExpr 0x55ef1b1dfda0 <col:48, col:50> 'TValue *'
        `-UnaryOperator 0x55ef1b1dfd80 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
          `-ArraySubscriptExpr 0x55ef1b1dfd58 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
            |-ImplicitCastExpr 0x55ef1b1dfd28 <col:19, col:22> 'TValue *' <LValueToRValue>
            | `-MemberExpr 0x55ef1b1dfcc8 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
            |   `-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
            |     `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
            `-ImplicitCastExpr 0x55ef1b1dfd40 <col:24> 'int' <LValueToRValue>
              `-DeclRefExpr 0x55ef1b1dfd00 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B18.14]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  16: CallExpr 0x55ef1b1dfe68 <lgc.c:53:48, col:77> 'void'
|-ImplicitCastExpr 0x55ef1b1dfe50 <col:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1dfc38 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b1dfea0 <line:207:15> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1dfc60 <col:15> 'global_State *' lvalue ParmVar 0x55ef1b1deb18 'g' 'global_State *'
`-ImplicitCastExpr 0x55ef1b1dfeb8 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1dfe30 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1dfdf8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1dfdc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ParenExpr 0x55ef1b1dfda0 <col:48, col:50> 'TValue *'
          `-UnaryOperator 0x55ef1b1dfd80 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
            `-ArraySubscriptExpr 0x55ef1b1dfd58 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
              |-ImplicitCastExpr 0x55ef1b1dfd28 <col:19, col:22> 'TValue *' <LValueToRValue>
              | `-MemberExpr 0x55ef1b1dfcc8 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
              |   `-ImplicitCastExpr 0x55ef1b1dfcb0 <col:19> 'Proto *' <LValueToRValue>
              |     `-DeclRefExpr 0x55ef1b1dfc88 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
              `-ImplicitCastExpr 0x55ef1b1dfd40 <col:24> 'int' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b1dfd00 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B18.2]([B18.4], [B18.15])
   Preds (1): B19
   Succs (1): B17

 [B19]
   1: DeclRefExpr 0x55ef1b1df730 <lgc.c:207:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1df758 <lgc.c:207:19> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B19.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1df770 <lgc.c:207:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
`-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B19.2]->k
   4: ImplicitCastExpr 0x55ef1b1df7d0 <lgc.c:207:19, col:22> 'TValue *' <LValueToRValue>
`-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
  `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B19.3] (ImplicitCastExpr, LValueToRValue, TValue *)
   5: DeclRefExpr 0x55ef1b1df7a8 <lgc.c:207:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   6: ImplicitCastExpr 0x55ef1b1df7e8 <lgc.c:207:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B19.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55ef1b1df800 <lgc.c:207:19, col:25> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
|   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B19.4][[B19.6]]
   8: UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
  |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
  `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
&[B19.7]
   9: MemberExpr 0x55ef1b1df868 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
  `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
      |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
      `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B19.8])->value
  10: MemberExpr 0x55ef1b1df8a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b1df868 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
    `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
      `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
        |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
        |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
        `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B19.9].gc
  11: ImplicitCastExpr 0x55ef1b1df918 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1df8f8 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x55ef1b1df8d8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b1df8a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b1df868 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
          `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
            `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
              |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
              | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
              |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
              |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
              `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
(([B19.10])) (ImplicitCastExpr, LValueToRValue, GCObject *)
  12: MemberExpr 0x55ef1b1df930 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1df918 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1df8f8 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x55ef1b1df8d8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x55ef1b1df8a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
        `-MemberExpr 0x55ef1b1df868 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
          `-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
            `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
              `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
                |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
                | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
                |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
                |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B19.11]->gch
  13: MemberExpr 0x55ef1b1df968 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1df930 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1df918 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1df8f8 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x55ef1b1df8d8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x55ef1b1df8a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b1df868 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
            `-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
              `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
                `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
                  |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
                  | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
                  |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
                  |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                  `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B19.12].marked
  14: ImplicitCastExpr 0x55ef1b1dfb98 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b1df9a0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b1df968 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1df930 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b1df918 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1df8f8 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x55ef1b1df8d8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x55ef1b1df8a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b1df868 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                `-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
                  `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
                    `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
                      |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
                      | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
                      |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
                      |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                      `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
                        `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B19.13]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  15: ImplicitCastExpr 0x55ef1b1dfbb0 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1dfb98 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b1df9a0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b1df968 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b1df930 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b1df918 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b1df8f8 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x55ef1b1df8d8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x55ef1b1df8a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
                `-MemberExpr 0x55ef1b1df868 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                  `-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
                    `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
                      `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
                        |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
                        | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
                        |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
                        |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
                        `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B19.14] (ImplicitCastExpr, IntegralCast, int)
  16: IntegerLiteral 0x55ef1b1df9c0 <./lgc.h:30:21> 'int' 1
1
  17: IntegerLiteral 0x55ef1b1df9e0 <./lgc.h:54:19> 'int' 0
0
  18: BinaryOperator 0x55ef1b1dfa20 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1df9c0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1dfa00 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1df9e0 <line:54:19> 'int' 0
[B19.16] << ([B19.17])
  19: IntegerLiteral 0x55ef1b1dfa68 <./lgc.h:30:21> 'int' 1
1
  20: IntegerLiteral 0x55ef1b1dfa88 <./lgc.h:55:19> 'int' 1
1
  21: BinaryOperator 0x55ef1b1dfac8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1dfa68 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1dfaa8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1dfa88 <line:55:19> 'int' 1
[B19.19] << ([B19.20])
  22: BinaryOperator 0x55ef1b1dfb10 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1dfa48 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1dfa20 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1df9c0 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1dfa00 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1df9e0 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1dfaf0 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1dfac8 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1dfa68 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1dfaa8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1dfa88 <line:55:19> 'int' 1
([B19.18]) | ([B19.21])
  23: BinaryOperator 0x55ef1b1dfbc8 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1dfbb0 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1dfb98 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b1df9a0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b1df968 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b1df930 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b1df918 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b1df8f8 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x55ef1b1df8d8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x55ef1b1df8a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b1df868 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
|                   `-ParenExpr 0x55ef1b1df848 <col:48, col:50> 'TValue *'
|                     `-UnaryOperator 0x55ef1b1df828 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
|                       `-ArraySubscriptExpr 0x55ef1b1df800 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
|                         |-ImplicitCastExpr 0x55ef1b1df7d0 <col:19, col:22> 'TValue *' <LValueToRValue>
|                         | `-MemberExpr 0x55ef1b1df770 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
|                         |   `-ImplicitCastExpr 0x55ef1b1df758 <col:19> 'Proto *' <LValueToRValue>
|                         |     `-DeclRefExpr 0x55ef1b1df730 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
|                         `-ImplicitCastExpr 0x55ef1b1df7e8 <col:24> 'int' <LValueToRValue>
|                           `-DeclRefExpr 0x55ef1b1df7a8 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ParenExpr 0x55ef1b1dfb78 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b1dfb58 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b1dfb38 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1dfb10 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1dfa48 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1dfa20 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1df9c0 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1dfa00 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1df9e0 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1dfaf0 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1dfac8 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1dfa68 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1dfaa8 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1dfa88 <line:55:19> 'int' 1
[B19.15] & ((([B19.22])))
   T: if ([B20.14]) && ([B19.23])
   Preds (1): B20
   Succs (2): B18 B17

 [B20]
   1: IntegerLiteral 0x55ef1b1df4a8 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b1df4d8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b1df4a8 <col:31> 'int' 0
(void)[B20.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55ef1b1df520 <lgc.c:207:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x55ef1b1df548 <lgc.c:207:19> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B20.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x55ef1b1df560 <lgc.c:207:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
`-ImplicitCastExpr 0x55ef1b1df548 <col:19> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B20.4]->k
   6: ImplicitCastExpr 0x55ef1b1df5c0 <lgc.c:207:19, col:22> 'TValue *' <LValueToRValue>
`-MemberExpr 0x55ef1b1df560 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
  `-ImplicitCastExpr 0x55ef1b1df548 <col:19> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B20.5] (ImplicitCastExpr, LValueToRValue, TValue *)
   7: DeclRefExpr 0x55ef1b1df598 <lgc.c:207:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   8: ImplicitCastExpr 0x55ef1b1df5d8 <lgc.c:207:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1df598 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B20.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55ef1b1df5f0 <lgc.c:207:19, col:25> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x55ef1b1df5c0 <col:19, col:22> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x55ef1b1df560 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
|   `-ImplicitCastExpr 0x55ef1b1df548 <col:19> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1df5d8 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1df598 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B20.6][[B20.8]]
  10: UnaryOperator 0x55ef1b1df618 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x55ef1b1df5f0 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x55ef1b1df5c0 <col:19, col:22> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55ef1b1df560 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
  |   `-ImplicitCastExpr 0x55ef1b1df548 <col:19> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
  `-ImplicitCastExpr 0x55ef1b1df5d8 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1df598 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
&[B20.9]
  11: MemberExpr 0x55ef1b1df658 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
`-ParenExpr 0x55ef1b1df638 <col:19, col:21> 'TValue *'
  `-UnaryOperator 0x55ef1b1df618 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x55ef1b1df5f0 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x55ef1b1df5c0 <col:19, col:22> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x55ef1b1df560 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
      |   `-ImplicitCastExpr 0x55ef1b1df548 <col:19> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
      `-ImplicitCastExpr 0x55ef1b1df5d8 <col:24> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1df598 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B20.10])->tt
  12: ImplicitCastExpr 0x55ef1b1df6d0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b1df690 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x55ef1b1df658 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
    `-ParenExpr 0x55ef1b1df638 <col:19, col:21> 'TValue *'
      `-UnaryOperator 0x55ef1b1df618 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
        `-ArraySubscriptExpr 0x55ef1b1df5f0 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
          |-ImplicitCastExpr 0x55ef1b1df5c0 <col:19, col:22> 'TValue *' <LValueToRValue>
          | `-MemberExpr 0x55ef1b1df560 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
          |   `-ImplicitCastExpr 0x55ef1b1df548 <col:19> 'Proto *' <LValueToRValue>
          |     `-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
          `-ImplicitCastExpr 0x55ef1b1df5d8 <col:24> 'int' <LValueToRValue>
            `-DeclRefExpr 0x55ef1b1df598 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
([B20.11]) (ImplicitCastExpr, LValueToRValue, int)
  13: IntegerLiteral 0x55ef1b1df6b0 <./lua.h:78:22> 'int' 4
4
  14: BinaryOperator 0x55ef1b1df6e8 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x55ef1b1df6d0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b1df690 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x55ef1b1df658 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
|     `-ParenExpr 0x55ef1b1df638 <col:19, col:21> 'TValue *'
|       `-UnaryOperator 0x55ef1b1df618 <lgc.c:207:18, col:25> 'TValue *' prefix '&'
|         `-ArraySubscriptExpr 0x55ef1b1df5f0 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
|           |-ImplicitCastExpr 0x55ef1b1df5c0 <col:19, col:22> 'TValue *' <LValueToRValue>
|           | `-MemberExpr 0x55ef1b1df560 <col:19, col:22> 'TValue *' lvalue ->k 0x55ef1b18c0f8
|           |   `-ImplicitCastExpr 0x55ef1b1df548 <col:19> 'Proto *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55ef1b1df520 <col:19> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
|           `-ImplicitCastExpr 0x55ef1b1df5d8 <col:24> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55ef1b1df598 <col:24> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-IntegerLiteral 0x55ef1b1df6b0 <./lua.h:78:22> 'int' 4
[B20.12] >= [B20.13]
   T: ([B20.14]) && ...
   Preds (1): B21
   Succs (2): B19 B17

 [B21]
   1: DeclRefExpr 0x55ef1b1df368 <lgc.c:206:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   2: ImplicitCastExpr 0x55ef1b1df408 <lgc.c:206:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1df368 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
[B21.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55ef1b1df390 <lgc.c:206:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x55ef1b1df3b8 <lgc.c:206:15> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1df390 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B21.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x55ef1b1df3d0 <lgc.c:206:15, col:18> 'int' lvalue ->sizek 0x55ef1b18c948
`-ImplicitCastExpr 0x55ef1b1df3b8 <col:15> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1df390 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B21.4]->sizek
   6: ImplicitCastExpr 0x55ef1b1df420 <lgc.c:206:15, col:18> 'int' <LValueToRValue>
`-MemberExpr 0x55ef1b1df3d0 <col:15, col:18> 'int' lvalue ->sizek 0x55ef1b18c948
  `-ImplicitCastExpr 0x55ef1b1df3b8 <col:15> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1df390 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B21.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x55ef1b1df438 <lgc.c:206:13, col:18> 'int' '<'
|-ImplicitCastExpr 0x55ef1b1df408 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1df368 <col:13> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-ImplicitCastExpr 0x55ef1b1df420 <col:15, col:18> 'int' <LValueToRValue>
  `-MemberExpr 0x55ef1b1df3d0 <col:15, col:18> 'int' lvalue ->sizek 0x55ef1b18c948
    `-ImplicitCastExpr 0x55ef1b1df3b8 <col:15> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1df390 <col:15> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B21.2] < [B21.6]
   T: for (...; [B21.7]; ...)
   Preds (2): B17 B22
   Succs (2): B20 B16

 [B22]
   1: IntegerLiteral 0x55ef1b1df320 <lgc.c:206:10> 'int' 0
0
   2: DeclRefExpr 0x55ef1b1df2f8 <lgc.c:206:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
i
   3: BinaryOperator 0x55ef1b1df340 <lgc.c:206:8, col:10> 'int' '='
|-DeclRefExpr 0x55ef1b1df2f8 <col:8> 'int' lvalue Var 0x55ef1b1ded68 'i' 'int'
`-IntegerLiteral 0x55ef1b1df320 <col:10> 'int' 0
[B22.2] = [B22.1]
   Preds (2): B23 B24
   Succs (1): B21

 [B23]
   1: DeclRefExpr 0x55ef1b1dee70 <lgc.c:205:29> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x55ef1b1dee98 <lgc.c:205:29> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dee70 <col:29> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B23.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x55ef1b1deeb0 <lgc.c:205:29, col:32> 'TString *' lvalue ->source 0x55ef1b18c6c8
`-ImplicitCastExpr 0x55ef1b1dee98 <col:29> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dee70 <col:29> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B23.2]->source
   4: ImplicitCastExpr 0x55ef1b1def08 <lgc.c:40:34, col:36> 'TString *' <LValueToRValue>
`-ParenExpr 0x55ef1b1deee8 <col:34, col:36> 'TString *' lvalue
  `-MemberExpr 0x55ef1b1deeb0 <line:205:29, col:32> 'TString *' lvalue ->source 0x55ef1b18c6c8
    `-ImplicitCastExpr 0x55ef1b1dee98 <col:29> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1dee70 <col:29> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
([B23.3]) (ImplicitCastExpr, LValueToRValue, TString *)
   5: MemberExpr 0x55ef1b1def20 <lgc.c:40:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
`-ImplicitCastExpr 0x55ef1b1def08 <col:34, col:36> 'TString *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1deee8 <col:34, col:36> 'TString *' lvalue
    `-MemberExpr 0x55ef1b1deeb0 <line:205:29, col:32> 'TString *' lvalue ->source 0x55ef1b18c6c8
      `-ImplicitCastExpr 0x55ef1b1dee98 <col:29> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1dee70 <col:29> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B23.4]->tsv
   6: MemberExpr 0x55ef1b1def58 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
`-MemberExpr 0x55ef1b1def20 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
  `-ImplicitCastExpr 0x55ef1b1def08 <col:34, col:36> 'TString *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1deee8 <col:34, col:36> 'TString *' lvalue
      `-MemberExpr 0x55ef1b1deeb0 <line:205:29, col:32> 'TString *' lvalue ->source 0x55ef1b18c6c8
        `-ImplicitCastExpr 0x55ef1b1dee98 <col:29> 'Proto *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b1dee70 <col:29> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B23.5].marked
   7: IntegerLiteral 0x55ef1b1defb0 <./lgc.h:30:21> 'int' 1
1
   8: IntegerLiteral 0x55ef1b1defd0 <./lgc.h:54:19> 'int' 0
0
   9: BinaryOperator 0x55ef1b1df010 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1defb0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1deff0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1defd0 <line:54:19> 'int' 0
[B23.7] << ([B23.8])
  10: IntegerLiteral 0x55ef1b1df058 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x55ef1b1df078 <./lgc.h:55:19> 'int' 1
1
  12: BinaryOperator 0x55ef1b1df0b8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1df058 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1df098 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1df078 <line:55:19> 'int' 1
[B23.10] << ([B23.11])
  13: BinaryOperator 0x55ef1b1df100 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1df038 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1df010 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1defb0 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1deff0 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1defd0 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1df0e0 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1df0b8 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1df058 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1df098 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1df078 <line:55:19> 'int' 1
([B23.9]) | ([B23.12])
  14: UnaryOperator 0x55ef1b1df188 <./lgc.h:27:46, col:49> 'int' prefix '~'
`-ParenExpr 0x55ef1b1df168 <col:47, col:49> 'int'
  `-ParenExpr 0x55ef1b1df148 <line:36:42, col:59> 'int'
    `-ParenExpr 0x55ef1b1df128 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1df100 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1df038 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1df010 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1defb0 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1deff0 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1defd0 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1df0e0 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1df0b8 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1df058 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1df098 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1df078 <line:55:19> 'int' 1
~((([B23.13])))
  15: CStyleCastExpr 0x55ef1b1df208 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1df1e8 <col:26, col:30> 'int'
  `-UnaryOperator 0x55ef1b1df188 <./lgc.h:27:46, col:49> 'int' prefix '~'
    `-ParenExpr 0x55ef1b1df168 <col:47, col:49> 'int'
      `-ParenExpr 0x55ef1b1df148 <line:36:42, col:59> 'int'
        `-ParenExpr 0x55ef1b1df128 <line:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b1df100 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b1df038 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b1df010 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b1defb0 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b1deff0 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b1defd0 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b1df0e0 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b1df0b8 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b1df058 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b1df098 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b1df078 <line:55:19> 'int' 1
(lu_byte)([B23.14]) (CStyleCastExpr, IntegralCast, lu_byte)
  16: ImplicitCastExpr 0x55ef1b1df250 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b1df230 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1df208 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1df1e8 <col:26, col:30> 'int'
      `-UnaryOperator 0x55ef1b1df188 <./lgc.h:27:46, col:49> 'int' prefix '~'
        `-ParenExpr 0x55ef1b1df168 <col:47, col:49> 'int'
          `-ParenExpr 0x55ef1b1df148 <line:36:42, col:59> 'int'
            `-ParenExpr 0x55ef1b1df128 <line:31:25, col:51> 'int'
              `-BinaryOperator 0x55ef1b1df100 <line:30:20, col:27> 'int' '|'
                |-ParenExpr 0x55ef1b1df038 <col:20, col:27> 'int'
                | `-BinaryOperator 0x55ef1b1df010 <col:21, col:26> 'int' '<<'
                |   |-IntegerLiteral 0x55ef1b1defb0 <col:21> 'int' 1
                |   `-ParenExpr 0x55ef1b1deff0 <col:24, col:26> 'int'
                |     `-IntegerLiteral 0x55ef1b1defd0 <line:54:19> 'int' 0
                `-ParenExpr 0x55ef1b1df0e0 <line:30:20, col:27> 'int'
                  `-BinaryOperator 0x55ef1b1df0b8 <col:21, col:26> 'int' '<<'
                    |-IntegerLiteral 0x55ef1b1df058 <col:21> 'int' 1
                    `-ParenExpr 0x55ef1b1df098 <col:24, col:26> 'int'
                      `-IntegerLiteral 0x55ef1b1df078 <line:55:19> 'int' 1
([B23.15]) (ImplicitCastExpr, IntegralCast, int)
  17: CompoundAssignOperator 0x55ef1b1df268 <./lgc.h:27:25, ./llimits.h:75:31> 'lu_byte':'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|-ParenExpr 0x55ef1b1def90 <./lgc.h:27:25, col:27> 'lu_byte':'unsigned char' lvalue
| `-MemberExpr 0x55ef1b1def58 <lgc.c:40:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17f750
|   `-MemberExpr 0x55ef1b1def20 <col:34, col:39> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55ef1b17f900
|     `-ImplicitCastExpr 0x55ef1b1def08 <col:34, col:36> 'TString *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1deee8 <col:34, col:36> 'TString *' lvalue
|         `-MemberExpr 0x55ef1b1deeb0 <line:205:29, col:32> 'TString *' lvalue ->source 0x55ef1b18c6c8
|           `-ImplicitCastExpr 0x55ef1b1dee98 <col:29> 'Proto *' <LValueToRValue>
|             `-DeclRefExpr 0x55ef1b1dee70 <col:29> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
`-ImplicitCastExpr 0x55ef1b1df250 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b1df230 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b1df208 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b1df1e8 <col:26, col:30> 'int'
        `-UnaryOperator 0x55ef1b1df188 <./lgc.h:27:46, col:49> 'int' prefix '~'
          `-ParenExpr 0x55ef1b1df168 <col:47, col:49> 'int'
            `-ParenExpr 0x55ef1b1df148 <line:36:42, col:59> 'int'
              `-ParenExpr 0x55ef1b1df128 <line:31:25, col:51> 'int'
                `-BinaryOperator 0x55ef1b1df100 <line:30:20, col:27> 'int' '|'
                  |-ParenExpr 0x55ef1b1df038 <col:20, col:27> 'int'
                  | `-BinaryOperator 0x55ef1b1df010 <col:21, col:26> 'int' '<<'
                  |   |-IntegerLiteral 0x55ef1b1defb0 <col:21> 'int' 1
                  |   `-ParenExpr 0x55ef1b1deff0 <col:24, col:26> 'int'
                  |     `-IntegerLiteral 0x55ef1b1defd0 <line:54:19> 'int' 0
                  `-ParenExpr 0x55ef1b1df0e0 <line:30:20, col:27> 'int'
                    `-BinaryOperator 0x55ef1b1df0b8 <col:21, col:26> 'int' '<<'
                      |-IntegerLiteral 0x55ef1b1df058 <col:21> 'int' 1
                      `-ParenExpr 0x55ef1b1df098 <col:24, col:26> 'int'
                        `-IntegerLiteral 0x55ef1b1df078 <line:55:19> 'int' 1
([B23.6]) &= [B23.16]
   Preds (1): B24
   Succs (1): B22

 [B24]
   1: DeclStmt 0x55ef1b1dedc8 <lgc.c:204:3, col:8>col:7
`-VarDecl 0x55ef1b1ded68 <col:3, col:7> col:7 used i 'int'
int i;
   2: DeclRefExpr 0x55ef1b1dede0 <lgc.c:205:7> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
f
   3: ImplicitCastExpr 0x55ef1b1dee08 <lgc.c:205:7> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1dede0 <col:7> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B24.2] (ImplicitCastExpr, LValueToRValue, Proto *)
   4: MemberExpr 0x55ef1b1dee20 <lgc.c:205:7, col:10> 'TString *' lvalue ->source 0x55ef1b18c6c8
`-ImplicitCastExpr 0x55ef1b1dee08 <col:7> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1dede0 <col:7> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B24.3]->source
   5: ImplicitCastExpr 0x55ef1b1dee58 <lgc.c:205:7, col:10> 'TString *' <LValueToRValue>
`-MemberExpr 0x55ef1b1dee20 <col:7, col:10> 'TString *' lvalue ->source 0x55ef1b18c6c8
  `-ImplicitCastExpr 0x55ef1b1dee08 <col:7> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1dede0 <col:7> 'Proto *' lvalue ParmVar 0x55ef1b1deb88 'f' 'Proto *'
[B24.4] (ImplicitCastExpr, LValueToRValue, TString *)
   T: if [B24.5]
   Preds (1): B25
   Succs (2): B23 B22

 [B0 (EXIT)]
   Preds (1): B4
