int linenoiseHistoryAdd(const char *line)
 [B15 (ENTRY)]
   Succs (1): B14

 [B1]
   1: DeclRefExpr 0x56555a4c03e0 <linenoise.c:1150:28> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
linecopy
   2: ImplicitCastExpr 0x56555a4c0408 <linenoise.c:1150:28> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4c03e0 <col:28> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
[B1.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x56555a4c0338 <linenoise.c:1150:5> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
   4: ImplicitCastExpr 0x56555a4c0388 <linenoise.c:1150:5> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4c0338 <col:5> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B1.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: DeclRefExpr 0x56555a4c0360 <linenoise.c:1150:13> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
history_len
   6: ImplicitCastExpr 0x56555a4c03a0 <linenoise.c:1150:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4c0360 <col:13> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x56555a4c03b8 <linenoise.c:1150:5, col:24> 'char *' lvalue
|-ImplicitCastExpr 0x56555a4c0388 <col:5> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x56555a4c0338 <col:5> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
`-ImplicitCastExpr 0x56555a4c03a0 <col:13> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4c0360 <col:13> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
[B1.4][[B1.6]]
   8: BinaryOperator 0x56555a4c0420 <linenoise.c:1150:5, col:28> 'char *' '='
|-ArraySubscriptExpr 0x56555a4c03b8 <col:5, col:24> 'char *' lvalue
| |-ImplicitCastExpr 0x56555a4c0388 <col:5> 'char **' <LValueToRValue>
| | `-DeclRefExpr 0x56555a4c0338 <col:5> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
| `-ImplicitCastExpr 0x56555a4c03a0 <col:13> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x56555a4c0360 <col:13> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
`-ImplicitCastExpr 0x56555a4c0408 <col:28> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4c03e0 <col:28> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
[B1.7] = [B1.2]
   9: DeclRefExpr 0x56555a4c0448 <linenoise.c:1151:5> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
history_len
  10: UnaryOperator 0x56555a4c0470 <linenoise.c:1151:5, col:16> 'int' postfix '++'
`-DeclRefExpr 0x56555a4c0448 <col:5> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
[B1.9]++
  11: IntegerLiteral 0x56555a4c0490 <linenoise.c:1152:12> 'int' 1
1
  12: ReturnStmt 0x56555a4c04b0 <linenoise.c:1152:5, col:12>
`-IntegerLiteral 0x56555a4c0490 <col:12> 'int' 1
return [B1.11];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x56555a4bfeb8 <linenoise.c:1146:9> 'void (void *)' Function 0x56555a3e63c0 'free' 'void (void *)'
free
   2: ImplicitCastExpr 0x56555a4bff68 <linenoise.c:1146:9> 'void (*)(void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4bfeb8 <col:9> 'void (void *)' Function 0x56555a3e63c0 'free' 'void (void *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *))
   3: DeclRefExpr 0x56555a4bfee0 <linenoise.c:1146:14> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
   4: ImplicitCastExpr 0x56555a4bff28 <linenoise.c:1146:14> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4bfee0 <col:14> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B2.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: IntegerLiteral 0x56555a4bff08 <linenoise.c:1146:22> 'int' 0
0
   6: ArraySubscriptExpr 0x56555a4bff40 <linenoise.c:1146:14, col:23> 'char *' lvalue
|-ImplicitCastExpr 0x56555a4bff28 <col:14> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x56555a4bfee0 <col:14> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
`-IntegerLiteral 0x56555a4bff08 <col:22> 'int' 0
[B2.4][[B2.5]]
   7: ImplicitCastExpr 0x56555a4bffb0 <linenoise.c:1146:14, col:23> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x56555a4bff40 <col:14, col:23> 'char *' lvalue
  |-ImplicitCastExpr 0x56555a4bff28 <col:14> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x56555a4bfee0 <col:14> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
  `-IntegerLiteral 0x56555a4bff08 <col:22> 'int' 0
[B2.6] (ImplicitCastExpr, LValueToRValue, char *)
   8: ImplicitCastExpr 0x56555a4bffc8 <linenoise.c:1146:14, col:23> 'void *' <BitCast>
`-ImplicitCastExpr 0x56555a4bffb0 <col:14, col:23> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x56555a4bff40 <col:14, col:23> 'char *' lvalue
    |-ImplicitCastExpr 0x56555a4bff28 <col:14> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x56555a4bfee0 <col:14> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
    `-IntegerLiteral 0x56555a4bff08 <col:22> 'int' 0
[B2.7] (ImplicitCastExpr, BitCast, void *)
   9: CallExpr 0x56555a4bff80 <linenoise.c:1146:9, col:24> 'void'
|-ImplicitCastExpr 0x56555a4bff68 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4bfeb8 <col:9> 'void (void *)' Function 0x56555a3e63c0 'free' 'void (void *)'
`-ImplicitCastExpr 0x56555a4bffc8 <col:14, col:23> 'void *' <BitCast>
  `-ImplicitCastExpr 0x56555a4bffb0 <col:14, col:23> 'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x56555a4bff40 <col:14, col:23> 'char *' lvalue
      |-ImplicitCastExpr 0x56555a4bff28 <col:14> 'char **' <LValueToRValue>
      | `-DeclRefExpr 0x56555a4bfee0 <col:14> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
      `-IntegerLiteral 0x56555a4bff08 <col:22> 'int' 0
[B2.2]([B2.8])
  10: DeclRefExpr 0x56555a4bffe0 <linenoise.c:1147:9> 'void *(void *, const void *, unsigned long)' Function 0x56555a42ad10 'memmove' 'void *(void *, const void *, unsigned long)'
memmove
  11: ImplicitCastExpr 0x56555a4c01f0 <linenoise.c:1147:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4bffe0 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x56555a42ad10 'memmove' 'void *(void *, const void *, unsigned long)'
[B2.10] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
  12: DeclRefExpr 0x56555a4c0008 <linenoise.c:1147:17> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
  13: ImplicitCastExpr 0x56555a4c0248 <linenoise.c:1147:17> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4c0008 <col:17> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B2.12] (ImplicitCastExpr, LValueToRValue, char **)
  14: ImplicitCastExpr 0x56555a4c0260 <linenoise.c:1147:17> 'void *' <BitCast>
`-ImplicitCastExpr 0x56555a4c0248 <col:17> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x56555a4c0008 <col:17> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B2.13] (ImplicitCastExpr, BitCast, void *)
  15: DeclRefExpr 0x56555a4c0030 <linenoise.c:1147:25> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
  16: ImplicitCastExpr 0x56555a4c0078 <linenoise.c:1147:25> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4c0030 <col:25> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B2.15] (ImplicitCastExpr, LValueToRValue, char **)
  17: IntegerLiteral 0x56555a4c0058 <linenoise.c:1147:33> 'int' 1
1
  18: BinaryOperator 0x56555a4c0090 <linenoise.c:1147:25, col:33> 'char **' '+'
|-ImplicitCastExpr 0x56555a4c0078 <col:25> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x56555a4c0030 <col:25> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
`-IntegerLiteral 0x56555a4c0058 <col:33> 'int' 1
[B2.16] + [B2.17]
  19: ImplicitCastExpr 0x56555a4c0278 <linenoise.c:1147:25, col:33> 'const void *' <BitCast>
`-BinaryOperator 0x56555a4c0090 <col:25, col:33> 'char **' '+'
  |-ImplicitCastExpr 0x56555a4c0078 <col:25> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x56555a4c0030 <col:25> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
  `-IntegerLiteral 0x56555a4c0058 <col:33> 'int' 1
[B2.18] (ImplicitCastExpr, BitCast, const void *)
  20: UnaryExprOrTypeTraitExpr 0x56555a4c00d0 <linenoise.c:1147:35, col:47> 'unsigned long' sizeof 'char *'
sizeof(char *)
  21: DeclRefExpr 0x56555a4c00f0 <linenoise.c:1147:50> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
history_max_len
  22: ImplicitCastExpr 0x56555a4c0138 <linenoise.c:1147:50> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4c00f0 <col:50> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B2.21] (ImplicitCastExpr, LValueToRValue, int)
  23: IntegerLiteral 0x56555a4c0118 <linenoise.c:1147:66> 'int' 1
1
  24: BinaryOperator 0x56555a4c0150 <linenoise.c:1147:50, col:66> 'int' '-'
|-ImplicitCastExpr 0x56555a4c0138 <col:50> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4c00f0 <col:50> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
`-IntegerLiteral 0x56555a4c0118 <col:66> 'int' 1
[B2.22] - [B2.23]
  25: ImplicitCastExpr 0x56555a4c0198 <linenoise.c:1147:49, col:67> 'unsigned long' <IntegralCast>
`-ParenExpr 0x56555a4c0178 <col:49, col:67> 'int'
  `-BinaryOperator 0x56555a4c0150 <col:50, col:66> 'int' '-'
    |-ImplicitCastExpr 0x56555a4c0138 <col:50> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x56555a4c00f0 <col:50> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
    `-IntegerLiteral 0x56555a4c0118 <col:66> 'int' 1
([B2.24]) (ImplicitCastExpr, IntegralCast, unsigned long)
  26: BinaryOperator 0x56555a4c01b0 <linenoise.c:1147:35, col:67> 'unsigned long' '*'
|-UnaryExprOrTypeTraitExpr 0x56555a4c00d0 <col:35, col:47> 'unsigned long' sizeof 'char *'
`-ImplicitCastExpr 0x56555a4c0198 <col:49, col:67> 'unsigned long' <IntegralCast>
  `-ParenExpr 0x56555a4c0178 <col:49, col:67> 'int'
    `-BinaryOperator 0x56555a4c0150 <col:50, col:66> 'int' '-'
      |-ImplicitCastExpr 0x56555a4c0138 <col:50> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x56555a4c00f0 <col:50> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
      `-IntegerLiteral 0x56555a4c0118 <col:66> 'int' 1
[B2.20] * [B2.25]
  27: CallExpr 0x56555a4c0208 <linenoise.c:1147:9, col:68> 'void *'
|-ImplicitCastExpr 0x56555a4c01f0 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4bffe0 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x56555a42ad10 'memmove' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x56555a4c0260 <col:17> 'void *' <BitCast>
| `-ImplicitCastExpr 0x56555a4c0248 <col:17> 'char **' <LValueToRValue>
|   `-DeclRefExpr 0x56555a4c0008 <col:17> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
|-ImplicitCastExpr 0x56555a4c0278 <col:25, col:33> 'const void *' <BitCast>
| `-BinaryOperator 0x56555a4c0090 <col:25, col:33> 'char **' '+'
|   |-ImplicitCastExpr 0x56555a4c0078 <col:25> 'char **' <LValueToRValue>
|   | `-DeclRefExpr 0x56555a4c0030 <col:25> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
|   `-IntegerLiteral 0x56555a4c0058 <col:33> 'int' 1
`-BinaryOperator 0x56555a4c01b0 <col:35, col:67> 'unsigned long' '*'
  |-UnaryExprOrTypeTraitExpr 0x56555a4c00d0 <col:35, col:47> 'unsigned long' sizeof 'char *'
  `-ImplicitCastExpr 0x56555a4c0198 <col:49, col:67> 'unsigned long' <IntegralCast>
    `-ParenExpr 0x56555a4c0178 <col:49, col:67> 'int'
      `-BinaryOperator 0x56555a4c0150 <col:50, col:66> 'int' '-'
        |-ImplicitCastExpr 0x56555a4c0138 <col:50> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x56555a4c00f0 <col:50> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
        `-IntegerLiteral 0x56555a4c0118 <col:66> 'int' 1
[B2.11]([B2.14], [B2.19], [B2.26])
  28: DeclRefExpr 0x56555a4c0290 <linenoise.c:1148:9> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
history_len
  29: UnaryOperator 0x56555a4c02b8 <linenoise.c:1148:9, col:20> 'int' postfix '--'
`-DeclRefExpr 0x56555a4c0290 <col:9> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
[B2.28]--
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x56555a4bfe10 <linenoise.c:1145:9> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
history_len
   2: ImplicitCastExpr 0x56555a4bfe60 <linenoise.c:1145:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4bfe10 <col:9> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x56555a4bfe38 <linenoise.c:1145:24> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
history_max_len
   4: ImplicitCastExpr 0x56555a4bfe78 <linenoise.c:1145:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4bfe38 <col:24> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x56555a4bfe90 <linenoise.c:1145:9, col:24> 'int' '=='
|-ImplicitCastExpr 0x56555a4bfe60 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4bfe10 <col:9> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
`-ImplicitCastExpr 0x56555a4bfe78 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4bfe38 <col:24> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x56555a4bfda0 <linenoise.c:1144:27> 'int' 0
0
   2: ReturnStmt 0x56555a4bfdc0 <linenoise.c:1144:20, col:27>
`-IntegerLiteral 0x56555a4bfda0 <col:27> 'int' 0
return [B4.1];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x56555a4bfc50 <linenoise.c:1143:16> 'char *(const char *)' Function 0x56555a431580 'strdup' 'char *(const char *)'
strdup
   2: ImplicitCastExpr 0x56555a4bfcb8 <linenoise.c:1143:16> 'char *(*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4bfc50 <col:16> 'char *(const char *)' Function 0x56555a431580 'strdup' 'char *(const char *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(const char *))
   3: DeclRefExpr 0x56555a4bfc78 <linenoise.c:1143:23> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
line
   4: ImplicitCastExpr 0x56555a4bfd00 <linenoise.c:1143:23> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4bfc78 <col:23> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
[B5.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: CallExpr 0x56555a4bfcd0 <linenoise.c:1143:16, col:27> 'char *'
|-ImplicitCastExpr 0x56555a4bfcb8 <col:16> 'char *(*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4bfc50 <col:16> 'char *(const char *)' Function 0x56555a431580 'strdup' 'char *(const char *)'
`-ImplicitCastExpr 0x56555a4bfd00 <col:23> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4bfc78 <col:23> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
[B5.2]([B5.4])
   6: DeclRefExpr 0x56555a4bfc28 <linenoise.c:1143:5> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
linecopy
   7: BinaryOperator 0x56555a4bfd18 <linenoise.c:1143:5, col:27> 'char *' '='
|-DeclRefExpr 0x56555a4bfc28 <col:5> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
`-CallExpr 0x56555a4bfcd0 <col:16, col:27> 'char *'
  |-ImplicitCastExpr 0x56555a4bfcb8 <col:16> 'char *(*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56555a4bfc50 <col:16> 'char *(const char *)' Function 0x56555a431580 'strdup' 'char *(const char *)'
  `-ImplicitCastExpr 0x56555a4bfd00 <col:23> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x56555a4bfc78 <col:23> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
[B5.6] = [B5.5]
   8: DeclRefExpr 0x56555a4bfd40 <linenoise.c:1144:10> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
linecopy
   9: ImplicitCastExpr 0x56555a4bfd68 <linenoise.c:1144:10> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4bfd40 <col:10> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
[B5.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: UnaryOperator 0x56555a4bfd80 <linenoise.c:1144:9, col:10> 'int' prefix '!'
`-ImplicitCastExpr 0x56555a4bfd68 <col:10> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4bfd40 <col:10> 'char *' lvalue Var 0x56555a4bf170 'linecopy' 'char *'
![B5.9]
   T: if [B5.10]
   Preds (2): B7 B8
   Succs (2): B4 B3

 [B6]
   1: IntegerLiteral 0x56555a4bfbb8 <linenoise.c:1139:70> 'int' 0
0
   2: ReturnStmt 0x56555a4bfbd8 <linenoise.c:1139:63, col:70>
`-IntegerLiteral 0x56555a4bfbb8 <col:70> 'int' 0
return [B6.1];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x56555a4bf950 <linenoise.c:1139:25> 'int (const char *, const char *)' Function 0x56555a42d8d0 'strcmp' 'int (const char *, const char *)'
strcmp
   2: ImplicitCastExpr 0x56555a4bfac0 <linenoise.c:1139:25> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4bf950 <col:25> 'int (const char *, const char *)' Function 0x56555a42d8d0 'strcmp' 'int (const char *, const char *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, const char *))
   3: DeclRefExpr 0x56555a4bf978 <linenoise.c:1139:32> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
   4: ImplicitCastExpr 0x56555a4bfa28 <linenoise.c:1139:32> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf978 <col:32> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B7.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: DeclRefExpr 0x56555a4bf9a0 <linenoise.c:1139:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
history_len
   6: ImplicitCastExpr 0x56555a4bf9e8 <linenoise.c:1139:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf9a0 <col:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x56555a4bf9c8 <linenoise.c:1139:52> 'int' 1
1
   8: BinaryOperator 0x56555a4bfa00 <linenoise.c:1139:40, col:52> 'int' '-'
|-ImplicitCastExpr 0x56555a4bf9e8 <col:40> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4bf9a0 <col:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
`-IntegerLiteral 0x56555a4bf9c8 <col:52> 'int' 1
[B7.6] - [B7.7]
   9: ArraySubscriptExpr 0x56555a4bfa40 <linenoise.c:1139:32, col:53> 'char *' lvalue
|-ImplicitCastExpr 0x56555a4bfa28 <col:32> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x56555a4bf978 <col:32> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
`-BinaryOperator 0x56555a4bfa00 <col:40, col:52> 'int' '-'
  |-ImplicitCastExpr 0x56555a4bf9e8 <col:40> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x56555a4bf9a0 <col:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
  `-IntegerLiteral 0x56555a4bf9c8 <col:52> 'int' 1
[B7.4][[B7.8]]
  10: ImplicitCastExpr 0x56555a4bfb10 <linenoise.c:1139:32, col:53> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x56555a4bfa40 <col:32, col:53> 'char *' lvalue
  |-ImplicitCastExpr 0x56555a4bfa28 <col:32> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x56555a4bf978 <col:32> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
  `-BinaryOperator 0x56555a4bfa00 <col:40, col:52> 'int' '-'
    |-ImplicitCastExpr 0x56555a4bf9e8 <col:40> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x56555a4bf9a0 <col:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
    `-IntegerLiteral 0x56555a4bf9c8 <col:52> 'int' 1
[B7.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: ImplicitCastExpr 0x56555a4bfb28 <linenoise.c:1139:32, col:53> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4bfb10 <col:32, col:53> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x56555a4bfa40 <col:32, col:53> 'char *' lvalue
    |-ImplicitCastExpr 0x56555a4bfa28 <col:32> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x56555a4bf978 <col:32> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
    `-BinaryOperator 0x56555a4bfa00 <col:40, col:52> 'int' '-'
      |-ImplicitCastExpr 0x56555a4bf9e8 <col:40> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x56555a4bf9a0 <col:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
      `-IntegerLiteral 0x56555a4bf9c8 <col:52> 'int' 1
[B7.10] (ImplicitCastExpr, BitCast, const char *)
  12: DeclRefExpr 0x56555a4bfa68 <linenoise.c:1139:56> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
line
  13: ImplicitCastExpr 0x56555a4bfb40 <linenoise.c:1139:56> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4bfa68 <col:56> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
[B7.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: CallExpr 0x56555a4bfad8 <linenoise.c:1139:25, col:60> 'int'
|-ImplicitCastExpr 0x56555a4bfac0 <col:25> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4bf950 <col:25> 'int (const char *, const char *)' Function 0x56555a42d8d0 'strcmp' 'int (const char *, const char *)'
|-ImplicitCastExpr 0x56555a4bfb28 <col:32, col:53> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56555a4bfb10 <col:32, col:53> 'char *' <LValueToRValue>
|   `-ArraySubscriptExpr 0x56555a4bfa40 <col:32, col:53> 'char *' lvalue
|     |-ImplicitCastExpr 0x56555a4bfa28 <col:32> 'char **' <LValueToRValue>
|     | `-DeclRefExpr 0x56555a4bf978 <col:32> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
|     `-BinaryOperator 0x56555a4bfa00 <col:40, col:52> 'int' '-'
|       |-ImplicitCastExpr 0x56555a4bf9e8 <col:40> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x56555a4bf9a0 <col:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
|       `-IntegerLiteral 0x56555a4bf9c8 <col:52> 'int' 1
`-ImplicitCastExpr 0x56555a4bfb40 <col:56> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4bfa68 <col:56> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
[B7.2]([B7.11], [B7.13])
  15: UnaryOperator 0x56555a4bfb58 <linenoise.c:1139:24, col:60> 'int' prefix '!'
`-CallExpr 0x56555a4bfad8 <col:25, col:60> 'int'
  |-ImplicitCastExpr 0x56555a4bfac0 <col:25> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56555a4bf950 <col:25> 'int (const char *, const char *)' Function 0x56555a42d8d0 'strcmp' 'int (const char *, const char *)'
  |-ImplicitCastExpr 0x56555a4bfb28 <col:32, col:53> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x56555a4bfb10 <col:32, col:53> 'char *' <LValueToRValue>
  |   `-ArraySubscriptExpr 0x56555a4bfa40 <col:32, col:53> 'char *' lvalue
  |     |-ImplicitCastExpr 0x56555a4bfa28 <col:32> 'char **' <LValueToRValue>
  |     | `-DeclRefExpr 0x56555a4bf978 <col:32> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
  |     `-BinaryOperator 0x56555a4bfa00 <col:40, col:52> 'int' '-'
  |       |-ImplicitCastExpr 0x56555a4bf9e8 <col:40> 'int' <LValueToRValue>
  |       | `-DeclRefExpr 0x56555a4bf9a0 <col:40> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
  |       `-IntegerLiteral 0x56555a4bf9c8 <col:52> 'int' 1
  `-ImplicitCastExpr 0x56555a4bfb40 <col:56> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x56555a4bfa68 <col:56> 'const char *' lvalue ParmVar 0x56555a4bf020 'line' 'const char *'
![B7.14]
   T: if [B8.2] && [B7.15]
   Preds (1): B8
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x56555a4bf928 <linenoise.c:1139:9> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
history_len
   2: ImplicitCastExpr 0x56555a4bfb78 <linenoise.c:1139:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf928 <col:9> 'int' lvalue Var 0x56555a48fbf0 'history_len' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B8.2] && ...
   Preds (2): B9 B12
   Succs (2): B7 B5

 [B9]
   1: DeclRefExpr 0x56555a4bf6e0 <linenoise.c:1135:9> 'void *(void *, int, unsigned long)' Function 0x56555a42b690 'memset' 'void *(void *, int, unsigned long)'
memset
   2: ImplicitCastExpr 0x56555a4bf840 <linenoise.c:1135:9> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4bf6e0 <col:9> 'void *(void *, int, unsigned long)' Function 0x56555a42b690 'memset' 'void *(void *, int, unsigned long)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, int, unsigned long))
   3: DeclRefExpr 0x56555a4bf708 <linenoise.c:1135:16> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
   4: ImplicitCastExpr 0x56555a4bf898 <linenoise.c:1135:16> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf708 <col:16> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B9.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: ImplicitCastExpr 0x56555a4bf8b0 <linenoise.c:1135:16> 'void *' <BitCast>
`-ImplicitCastExpr 0x56555a4bf898 <col:16> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x56555a4bf708 <col:16> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B9.4] (ImplicitCastExpr, BitCast, void *)
   6: IntegerLiteral 0x56555a4bf730 <linenoise.c:1135:24> 'int' 0
0
   7: UnaryExprOrTypeTraitExpr 0x56555a4bf768 <linenoise.c:1135:27, col:39> 'unsigned long' sizeof 'char *'
sizeof(char *)
   8: DeclRefExpr 0x56555a4bf788 <linenoise.c:1135:41> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
history_max_len
   9: ImplicitCastExpr 0x56555a4bf7b0 <linenoise.c:1135:41> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf788 <col:41> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B9.8] (ImplicitCastExpr, LValueToRValue, int)
  10: ImplicitCastExpr 0x56555a4bf7c8 <linenoise.c:1135:41> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x56555a4bf7b0 <col:41> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4bf788 <col:41> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B9.9] (ImplicitCastExpr, IntegralCast, unsigned long)
  11: BinaryOperator 0x56555a4bf7e0 <linenoise.c:1135:27, col:41> 'unsigned long' '*'
|-UnaryExprOrTypeTraitExpr 0x56555a4bf768 <col:27, col:39> 'unsigned long' sizeof 'char *'
`-ImplicitCastExpr 0x56555a4bf7c8 <col:41> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x56555a4bf7b0 <col:41> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56555a4bf788 <col:41> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B9.7] * [B9.10]
  12: CallExpr 0x56555a4bf858 <linenoise.c:1135:9, col:57> 'void *'
|-ImplicitCastExpr 0x56555a4bf840 <col:9> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4bf6e0 <col:9> 'void *(void *, int, unsigned long)' Function 0x56555a42b690 'memset' 'void *(void *, int, unsigned long)'
|-ImplicitCastExpr 0x56555a4bf8b0 <col:16> 'void *' <BitCast>
| `-ImplicitCastExpr 0x56555a4bf898 <col:16> 'char **' <LValueToRValue>
|   `-DeclRefExpr 0x56555a4bf708 <col:16> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
|-IntegerLiteral 0x56555a4bf730 <col:24> 'int' 0
`-ParenExpr 0x56555a4bf808 <col:26, col:56> 'unsigned long'
  `-BinaryOperator 0x56555a4bf7e0 <col:27, col:41> 'unsigned long' '*'
    |-UnaryExprOrTypeTraitExpr 0x56555a4bf768 <col:27, col:39> 'unsigned long' sizeof 'char *'
    `-ImplicitCastExpr 0x56555a4bf7c8 <col:41> 'unsigned long' <IntegralCast>
      `-ImplicitCastExpr 0x56555a4bf7b0 <col:41> 'int' <LValueToRValue>
        `-DeclRefExpr 0x56555a4bf788 <col:41> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B9.2]([B9.5], [B9.6], ([B9.11]))
   Preds (1): B11
   Succs (1): B8

 [B10]
   1: IntegerLiteral 0x56555a4bf670 <linenoise.c:1134:37> 'int' 0
0
   2: ReturnStmt 0x56555a4bf690 <linenoise.c:1134:30, col:37>
`-IntegerLiteral 0x56555a4bf670 <col:37> 'int' 0
return [B10.1];
   Preds (1): B11
   Succs (1): B0

 [B11]
   1: DeclRefExpr 0x56555a4bf408 <linenoise.c:1133:19> 'void *(unsigned long)' Function 0x56555a3e55d0 'malloc' 'void *(unsigned long)'
malloc
   2: ImplicitCastExpr 0x56555a4bf4e8 <linenoise.c:1133:19> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4bf408 <col:19> 'void *(unsigned long)' Function 0x56555a3e55d0 'malloc' 'void *(unsigned long)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(unsigned long))
   3: UnaryExprOrTypeTraitExpr 0x56555a4bf448 <linenoise.c:1133:26, col:38> 'unsigned long' sizeof 'char *'
sizeof(char *)
   4: DeclRefExpr 0x56555a4bf468 <linenoise.c:1133:40> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
history_max_len
   5: ImplicitCastExpr 0x56555a4bf490 <linenoise.c:1133:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf468 <col:40> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B11.4] (ImplicitCastExpr, LValueToRValue, int)
   6: ImplicitCastExpr 0x56555a4bf4a8 <linenoise.c:1133:40> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x56555a4bf490 <col:40> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4bf468 <col:40> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B11.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: BinaryOperator 0x56555a4bf4c0 <linenoise.c:1133:26, col:40> 'unsigned long' '*'
|-UnaryExprOrTypeTraitExpr 0x56555a4bf448 <col:26, col:38> 'unsigned long' sizeof 'char *'
`-ImplicitCastExpr 0x56555a4bf4a8 <col:40> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x56555a4bf490 <col:40> 'int' <LValueToRValue>
    `-DeclRefExpr 0x56555a4bf468 <col:40> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B11.3] * [B11.6]
   8: CallExpr 0x56555a4bf500 <linenoise.c:1133:19, col:55> 'void *'
|-ImplicitCastExpr 0x56555a4bf4e8 <col:19> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4bf408 <col:19> 'void *(unsigned long)' Function 0x56555a3e55d0 'malloc' 'void *(unsigned long)'
`-BinaryOperator 0x56555a4bf4c0 <col:26, col:40> 'unsigned long' '*'
  |-UnaryExprOrTypeTraitExpr 0x56555a4bf448 <col:26, col:38> 'unsigned long' sizeof 'char *'
  `-ImplicitCastExpr 0x56555a4bf4a8 <col:40> 'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x56555a4bf490 <col:40> 'int' <LValueToRValue>
      `-DeclRefExpr 0x56555a4bf468 <col:40> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B11.2]([B11.7])
   9: ImplicitCastExpr 0x56555a4bf530 <linenoise.c:1133:19, col:55> 'char **' <BitCast>
`-CallExpr 0x56555a4bf500 <col:19, col:55> 'void *'
  |-ImplicitCastExpr 0x56555a4bf4e8 <col:19> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56555a4bf408 <col:19> 'void *(unsigned long)' Function 0x56555a3e55d0 'malloc' 'void *(unsigned long)'
  `-BinaryOperator 0x56555a4bf4c0 <col:26, col:40> 'unsigned long' '*'
    |-UnaryExprOrTypeTraitExpr 0x56555a4bf448 <col:26, col:38> 'unsigned long' sizeof 'char *'
    `-ImplicitCastExpr 0x56555a4bf4a8 <col:40> 'unsigned long' <IntegralCast>
      `-ImplicitCastExpr 0x56555a4bf490 <col:40> 'int' <LValueToRValue>
        `-DeclRefExpr 0x56555a4bf468 <col:40> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B11.8] (ImplicitCastExpr, BitCast, char **)
  10: DeclRefExpr 0x56555a4bf3e0 <linenoise.c:1133:9> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
  11: BinaryOperator 0x56555a4bf548 <linenoise.c:1133:9, col:55> 'char **' '='
|-DeclRefExpr 0x56555a4bf3e0 <col:9> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
`-ImplicitCastExpr 0x56555a4bf530 <col:19, col:55> 'char **' <BitCast>
  `-CallExpr 0x56555a4bf500 <col:19, col:55> 'void *'
    |-ImplicitCastExpr 0x56555a4bf4e8 <col:19> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56555a4bf408 <col:19> 'void *(unsigned long)' Function 0x56555a3e55d0 'malloc' 'void *(unsigned long)'
    `-BinaryOperator 0x56555a4bf4c0 <col:26, col:40> 'unsigned long' '*'
      |-UnaryExprOrTypeTraitExpr 0x56555a4bf448 <col:26, col:38> 'unsigned long' sizeof 'char *'
      `-ImplicitCastExpr 0x56555a4bf4a8 <col:40> 'unsigned long' <IntegralCast>
        `-ImplicitCastExpr 0x56555a4bf490 <col:40> 'int' <LValueToRValue>
          `-DeclRefExpr 0x56555a4bf468 <col:40> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B11.10] = [B11.9]
  12: DeclRefExpr 0x56555a4bf570 <linenoise.c:1134:13> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
  13: ImplicitCastExpr 0x56555a4bf618 <linenoise.c:1134:13> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf570 <col:13> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B11.12] (ImplicitCastExpr, LValueToRValue, char **)
  14: IntegerLiteral 0x56555a4bf598 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  15: CStyleCastExpr 0x56555a4bf5d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56555a4bf598 <col:24> 'int' 0
(void *)[B11.14] (CStyleCastExpr, NullToPointer, void *)
  16: ImplicitCastExpr 0x56555a4bf630 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
`-ParenExpr 0x56555a4bf5f8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56555a4bf5d0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56555a4bf598 <col:24> 'int' 0
([B11.15]) (ImplicitCastExpr, BitCast, char **)
  17: BinaryOperator 0x56555a4bf648 <linenoise.c:1134:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x56555a4bf618 <linenoise.c:1134:13> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x56555a4bf570 <col:13> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
`-ImplicitCastExpr 0x56555a4bf630 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
  `-ParenExpr 0x56555a4bf5f8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56555a4bf5d0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56555a4bf598 <col:24> 'int' 0
[B11.13] == [B11.16]
   T: if [B11.17]
   Preds (1): B12
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x56555a4bf2e0 <linenoise.c:1132:9> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
history
   2: ImplicitCastExpr 0x56555a4bf388 <linenoise.c:1132:9> 'char **' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf2e0 <col:9> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
[B12.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: IntegerLiteral 0x56555a4bf308 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x56555a4bf340 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56555a4bf308 <col:24> 'int' 0
(void *)[B12.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x56555a4bf3a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
`-ParenExpr 0x56555a4bf368 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56555a4bf340 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56555a4bf308 <col:24> 'int' 0
([B12.4]) (ImplicitCastExpr, BitCast, char **)
   6: BinaryOperator 0x56555a4bf3b8 <linenoise.c:1132:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x56555a4bf388 <linenoise.c:1132:9> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x56555a4bf2e0 <col:9> 'char **' lvalue Var 0x56555a48fc88 'history' 'char **'
`-ImplicitCastExpr 0x56555a4bf3a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
  `-ParenExpr 0x56555a4bf368 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56555a4bf340 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56555a4bf308 <col:24> 'int' 0
[B12.2] == [B12.5]
   T: if [B12.6]
   Preds (1): B14
   Succs (2): B11 B8

 [B13]
   1: IntegerLiteral 0x56555a4bf270 <linenoise.c:1129:38> 'int' 0
0
   2: ReturnStmt 0x56555a4bf290 <linenoise.c:1129:31, col:38>
`-IntegerLiteral 0x56555a4bf270 <col:38> 'int' 0
return [B13.1];
   Preds (1): B14
   Succs (1): B0

 [B14]
   1: DeclStmt 0x56555a4bf1d0 <linenoise.c:1127:5, col:19>col:11
`-VarDecl 0x56555a4bf170 <col:5, col:11> col:11 used linecopy 'char *'
char *linecopy;
   2: DeclRefExpr 0x56555a4bf1e8 <linenoise.c:1129:9> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
history_max_len
   3: ImplicitCastExpr 0x56555a4bf230 <linenoise.c:1129:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4bf1e8 <col:9> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
[B14.2] (ImplicitCastExpr, LValueToRValue, int)
   4: IntegerLiteral 0x56555a4bf210 <linenoise.c:1129:28> 'int' 0
0
   5: BinaryOperator 0x56555a4bf248 <linenoise.c:1129:9, col:28> 'int' '=='
|-ImplicitCastExpr 0x56555a4bf230 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4bf1e8 <col:9> 'int' lvalue Var 0x56555a48dab8 'history_max_len' 'int'
`-IntegerLiteral 0x56555a4bf210 <col:28> 'int' 0
[B14.3] == [B14.4]
   T: if [B14.5]
   Preds (1): B15
   Succs (2): B13 B12

 [B0 (EXIT)]
   Preds (5): B1 B4 B6 B10 B13
