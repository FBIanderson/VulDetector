static int calculate_new_size(strbuf_t *s, int len)
 [B11 (ENTRY)]
   Succs (1): B10

 [B1]
   1: DeclRefExpr 0x55c95beed270 <strbuf.c:158:12> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
newsize
   2: ImplicitCastExpr 0x55c95beed298 <strbuf.c:158:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beed270 <col:12> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x55c95beed2b0 <strbuf.c:158:5, col:12>
`-ImplicitCastExpr 0x55c95beed298 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c95beed270 <col:12> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
return [B1.2];
   Preds (2): B2 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55c95beecf08 <strbuf.c:155:21> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
newsize
   2: ImplicitCastExpr 0x55c95beecfa8 <strbuf.c:155:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beecf08 <col:21> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55c95beecf30 <strbuf.c:155:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
s
   4: ImplicitCastExpr 0x55c95beecf58 <strbuf.c:155:31> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: MemberExpr 0x55c95beecf70 <strbuf.c:155:31, col:34> 'int' lvalue ->increment 0x55c95bee0b98
`-ImplicitCastExpr 0x55c95beecf58 <col:31> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.4]->increment
   6: ImplicitCastExpr 0x55c95beecfc0 <strbuf.c:155:31, col:34> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beecf70 <col:31, col:34> 'int' lvalue ->increment 0x55c95bee0b98
  `-ImplicitCastExpr 0x55c95beecf58 <col:31> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x55c95beecfd8 <strbuf.c:155:21, col:34> 'int' '+'
|-ImplicitCastExpr 0x55c95beecfa8 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55c95beecf08 <col:21> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
`-ImplicitCastExpr 0x55c95beecfc0 <col:31, col:34> 'int' <LValueToRValue>
  `-MemberExpr 0x55c95beecf70 <col:31, col:34> 'int' lvalue ->increment 0x55c95bee0b98
    `-ImplicitCastExpr 0x55c95beecf58 <col:31> 'strbuf_t *' <LValueToRValue>
      `-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.2] + [B2.6]
   8: IntegerLiteral 0x55c95beed000 <strbuf.c:155:46> 'int' 1
1
   9: BinaryOperator 0x55c95beed020 <strbuf.c:155:21, col:46> 'int' '-'
|-BinaryOperator 0x55c95beecfd8 <col:21, col:34> 'int' '+'
| |-ImplicitCastExpr 0x55c95beecfa8 <col:21> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x55c95beecf08 <col:21> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
| `-ImplicitCastExpr 0x55c95beecfc0 <col:31, col:34> 'int' <LValueToRValue>
|   `-MemberExpr 0x55c95beecf70 <col:31, col:34> 'int' lvalue ->increment 0x55c95bee0b98
|     `-ImplicitCastExpr 0x55c95beecf58 <col:31> 'strbuf_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
`-IntegerLiteral 0x55c95beed000 <col:46> 'int' 1
[B2.7] - [B2.8]
  10: DeclRefExpr 0x55c95beed068 <strbuf.c:155:51> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
s
  11: ImplicitCastExpr 0x55c95beed090 <strbuf.c:155:51> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beed068 <col:51> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.10] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  12: MemberExpr 0x55c95beed0a8 <strbuf.c:155:51, col:54> 'int' lvalue ->increment 0x55c95bee0b98
`-ImplicitCastExpr 0x55c95beed090 <col:51> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beed068 <col:51> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.11]->increment
  13: ImplicitCastExpr 0x55c95beed0e0 <strbuf.c:155:51, col:54> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beed0a8 <col:51, col:54> 'int' lvalue ->increment 0x55c95bee0b98
  `-ImplicitCastExpr 0x55c95beed090 <col:51> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beed068 <col:51> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.12] (ImplicitCastExpr, LValueToRValue, int)
  14: BinaryOperator 0x55c95beed0f8 <strbuf.c:155:20, col:54> 'int' '/'
|-ParenExpr 0x55c95beed048 <col:20, col:47> 'int'
| `-BinaryOperator 0x55c95beed020 <col:21, col:46> 'int' '-'
|   |-BinaryOperator 0x55c95beecfd8 <col:21, col:34> 'int' '+'
|   | |-ImplicitCastExpr 0x55c95beecfa8 <col:21> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x55c95beecf08 <col:21> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
|   | `-ImplicitCastExpr 0x55c95beecfc0 <col:31, col:34> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55c95beecf70 <col:31, col:34> 'int' lvalue ->increment 0x55c95bee0b98
|   |     `-ImplicitCastExpr 0x55c95beecf58 <col:31> 'strbuf_t *' <LValueToRValue>
|   |       `-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
|   `-IntegerLiteral 0x55c95beed000 <col:46> 'int' 1
`-ImplicitCastExpr 0x55c95beed0e0 <col:51, col:54> 'int' <LValueToRValue>
  `-MemberExpr 0x55c95beed0a8 <col:51, col:54> 'int' lvalue ->increment 0x55c95bee0b98
    `-ImplicitCastExpr 0x55c95beed090 <col:51> 'strbuf_t *' <LValueToRValue>
      `-DeclRefExpr 0x55c95beed068 <col:51> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
([B2.9]) / [B2.13]
  15: DeclRefExpr 0x55c95beed140 <strbuf.c:155:67> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
s
  16: ImplicitCastExpr 0x55c95beed168 <strbuf.c:155:67> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beed140 <col:67> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.15] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  17: MemberExpr 0x55c95beed180 <strbuf.c:155:67, col:70> 'int' lvalue ->increment 0x55c95bee0b98
`-ImplicitCastExpr 0x55c95beed168 <col:67> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beed140 <col:67> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.16]->increment
  18: ImplicitCastExpr 0x55c95beed1b8 <strbuf.c:155:67, col:70> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beed180 <col:67, col:70> 'int' lvalue ->increment 0x55c95bee0b98
  `-ImplicitCastExpr 0x55c95beed168 <col:67> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beed140 <col:67> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.17] (ImplicitCastExpr, LValueToRValue, int)
  19: BinaryOperator 0x55c95beed1d0 <strbuf.c:155:19, col:70> 'int' '*'
|-ParenExpr 0x55c95beed120 <col:19, col:63> 'int'
| `-BinaryOperator 0x55c95beed0f8 <col:20, col:54> 'int' '/'
|   |-ParenExpr 0x55c95beed048 <col:20, col:47> 'int'
|   | `-BinaryOperator 0x55c95beed020 <col:21, col:46> 'int' '-'
|   |   |-BinaryOperator 0x55c95beecfd8 <col:21, col:34> 'int' '+'
|   |   | |-ImplicitCastExpr 0x55c95beecfa8 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x55c95beecf08 <col:21> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
|   |   | `-ImplicitCastExpr 0x55c95beecfc0 <col:31, col:34> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x55c95beecf70 <col:31, col:34> 'int' lvalue ->increment 0x55c95bee0b98
|   |   |     `-ImplicitCastExpr 0x55c95beecf58 <col:31> 'strbuf_t *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
|   |   `-IntegerLiteral 0x55c95beed000 <col:46> 'int' 1
|   `-ImplicitCastExpr 0x55c95beed0e0 <col:51, col:54> 'int' <LValueToRValue>
|     `-MemberExpr 0x55c95beed0a8 <col:51, col:54> 'int' lvalue ->increment 0x55c95bee0b98
|       `-ImplicitCastExpr 0x55c95beed090 <col:51> 'strbuf_t *' <LValueToRValue>
|         `-DeclRefExpr 0x55c95beed068 <col:51> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
`-ImplicitCastExpr 0x55c95beed1b8 <col:67, col:70> 'int' <LValueToRValue>
  `-MemberExpr 0x55c95beed180 <col:67, col:70> 'int' lvalue ->increment 0x55c95bee0b98
    `-ImplicitCastExpr 0x55c95beed168 <col:67> 'strbuf_t *' <LValueToRValue>
      `-DeclRefExpr 0x55c95beed140 <col:67> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
([B2.14]) * [B2.18]
  20: DeclRefExpr 0x55c95beecee0 <strbuf.c:155:9> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
newsize
  21: BinaryOperator 0x55c95beed1f8 <strbuf.c:155:9, col:70> 'int' '='
|-DeclRefExpr 0x55c95beecee0 <col:9> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
`-BinaryOperator 0x55c95beed1d0 <col:19, col:70> 'int' '*'
  |-ParenExpr 0x55c95beed120 <col:19, col:63> 'int'
  | `-BinaryOperator 0x55c95beed0f8 <col:20, col:54> 'int' '/'
  |   |-ParenExpr 0x55c95beed048 <col:20, col:47> 'int'
  |   | `-BinaryOperator 0x55c95beed020 <col:21, col:46> 'int' '-'
  |   |   |-BinaryOperator 0x55c95beecfd8 <col:21, col:34> 'int' '+'
  |   |   | |-ImplicitCastExpr 0x55c95beecfa8 <col:21> 'int' <LValueToRValue>
  |   |   | | `-DeclRefExpr 0x55c95beecf08 <col:21> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
  |   |   | `-ImplicitCastExpr 0x55c95beecfc0 <col:31, col:34> 'int' <LValueToRValue>
  |   |   |   `-MemberExpr 0x55c95beecf70 <col:31, col:34> 'int' lvalue ->increment 0x55c95bee0b98
  |   |   |     `-ImplicitCastExpr 0x55c95beecf58 <col:31> 'strbuf_t *' <LValueToRValue>
  |   |   |       `-DeclRefExpr 0x55c95beecf30 <col:31> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
  |   |   `-IntegerLiteral 0x55c95beed000 <col:46> 'int' 1
  |   `-ImplicitCastExpr 0x55c95beed0e0 <col:51, col:54> 'int' <LValueToRValue>
  |     `-MemberExpr 0x55c95beed0a8 <col:51, col:54> 'int' lvalue ->increment 0x55c95bee0b98
  |       `-ImplicitCastExpr 0x55c95beed090 <col:51> 'strbuf_t *' <LValueToRValue>
  |         `-DeclRefExpr 0x55c95beed068 <col:51> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
  `-ImplicitCastExpr 0x55c95beed1b8 <col:67, col:70> 'int' <LValueToRValue>
    `-MemberExpr 0x55c95beed180 <col:67, col:70> 'int' lvalue ->increment 0x55c95bee0b98
      `-ImplicitCastExpr 0x55c95beed168 <col:67> 'strbuf_t *' <LValueToRValue>
        `-DeclRefExpr 0x55c95beed140 <col:67> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B2.20] = [B2.19]
   Preds (1): B6
   Succs (1): B1

 [B3]
   Preds (1): B4
   Succs (1): B5

 [B4]
   1: DeclRefExpr 0x55c95beecd98 <strbuf.c:152:13> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
newsize
   2: DeclRefExpr 0x55c95beecdc0 <strbuf.c:152:25> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
s
   3: ImplicitCastExpr 0x55c95beecde8 <strbuf.c:152:25> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beecdc0 <col:25> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B4.2] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   4: MemberExpr 0x55c95beece00 <strbuf.c:152:25, col:28> 'int' lvalue ->increment 0x55c95bee0b98
`-ImplicitCastExpr 0x55c95beecde8 <col:25> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beecdc0 <col:25> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B4.3]->increment
   5: ImplicitCastExpr 0x55c95beece38 <strbuf.c:152:25, col:28> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beece00 <col:25, col:28> 'int' lvalue ->increment 0x55c95bee0b98
  `-ImplicitCastExpr 0x55c95beecde8 <col:25> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beecdc0 <col:25> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B4.4] (ImplicitCastExpr, LValueToRValue, int)
   6: UnaryOperator 0x55c95beece50 <strbuf.c:152:24, col:28> 'int' prefix '-'
`-ImplicitCastExpr 0x55c95beece38 <col:25, col:28> 'int' <LValueToRValue>
  `-MemberExpr 0x55c95beece00 <col:25, col:28> 'int' lvalue ->increment 0x55c95bee0b98
    `-ImplicitCastExpr 0x55c95beecde8 <col:25> 'strbuf_t *' <LValueToRValue>
      `-DeclRefExpr 0x55c95beecdc0 <col:25> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
-[B4.5]
   7: CompoundAssignOperator 0x55c95beece70 <strbuf.c:152:13, col:28> 'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x55c95beecd98 <col:13> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
`-UnaryOperator 0x55c95beece50 <col:24, col:28> 'int' prefix '-'
  `-ImplicitCastExpr 0x55c95beece38 <col:25, col:28> 'int' <LValueToRValue>
    `-MemberExpr 0x55c95beece00 <col:25, col:28> 'int' lvalue ->increment 0x55c95bee0b98
      `-ImplicitCastExpr 0x55c95beecde8 <col:25> 'strbuf_t *' <LValueToRValue>
        `-DeclRefExpr 0x55c95beecdc0 <col:25> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B4.1] *= [B4.6]
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x55c95beeccf0 <strbuf.c:151:16> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
newsize
   2: ImplicitCastExpr 0x55c95beecd40 <strbuf.c:151:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beeccf0 <col:16> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55c95beecd18 <strbuf.c:151:26> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
reqsize
   4: ImplicitCastExpr 0x55c95beecd58 <strbuf.c:151:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beecd18 <col:26> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55c95beecd70 <strbuf.c:151:16, col:26> 'int' '<'
|-ImplicitCastExpr 0x55c95beecd40 <col:16> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55c95beeccf0 <col:16> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
`-ImplicitCastExpr 0x55c95beecd58 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c95beecd18 <col:26> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
[B5.2] < [B5.4]
   T: while [B5.5]
   Preds (2): B3 B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x55c95beecb60 <strbuf.c:148:15> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
s
   2: ImplicitCastExpr 0x55c95beecb88 <strbuf.c:148:15> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beecb60 <col:15> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B6.1] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   3: MemberExpr 0x55c95beecba0 <strbuf.c:148:15, col:18> 'int' lvalue ->size 0x55c95bee0ad8
`-ImplicitCastExpr 0x55c95beecb88 <col:15> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beecb60 <col:15> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B6.2]->size
   4: ImplicitCastExpr 0x55c95beecbd8 <strbuf.c:148:15, col:18> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beecba0 <col:15, col:18> 'int' lvalue ->size 0x55c95bee0ad8
  `-ImplicitCastExpr 0x55c95beecb88 <col:15> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beecb60 <col:15> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x55c95beecb38 <strbuf.c:148:5> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
newsize
   6: BinaryOperator 0x55c95beecbf0 <strbuf.c:148:5, col:18> 'int' '='
|-DeclRefExpr 0x55c95beecb38 <col:5> 'int' lvalue Var 0x55c95beec648 'newsize' 'int'
`-ImplicitCastExpr 0x55c95beecbd8 <col:15, col:18> 'int' <LValueToRValue>
  `-MemberExpr 0x55c95beecba0 <col:15, col:18> 'int' lvalue ->size 0x55c95bee0ad8
    `-ImplicitCastExpr 0x55c95beecb88 <col:15> 'strbuf_t *' <LValueToRValue>
      `-DeclRefExpr 0x55c95beecb60 <col:15> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B6.5] = [B6.4]
   7: DeclRefExpr 0x55c95beecc18 <strbuf.c:149:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
s
   8: ImplicitCastExpr 0x55c95beecc40 <strbuf.c:149:9> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beecc18 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B6.7] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   9: MemberExpr 0x55c95beecc58 <strbuf.c:149:9, col:12> 'int' lvalue ->increment 0x55c95bee0b98
`-ImplicitCastExpr 0x55c95beecc40 <col:9> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beecc18 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B6.8]->increment
  10: ImplicitCastExpr 0x55c95beeccb0 <strbuf.c:149:9, col:12> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beecc58 <col:9, col:12> 'int' lvalue ->increment 0x55c95bee0b98
  `-ImplicitCastExpr 0x55c95beecc40 <col:9> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beecc18 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B6.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x55c95beecc90 <strbuf.c:149:24> 'int' 0
0
  12: BinaryOperator 0x55c95beeccc8 <strbuf.c:149:9, col:24> 'int' '<'
|-ImplicitCastExpr 0x55c95beeccb0 <col:9, col:12> 'int' <LValueToRValue>
| `-MemberExpr 0x55c95beecc58 <col:9, col:12> 'int' lvalue ->increment 0x55c95bee0b98
|   `-ImplicitCastExpr 0x55c95beecc40 <col:9> 'strbuf_t *' <LValueToRValue>
|     `-DeclRefExpr 0x55c95beecc18 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
`-IntegerLiteral 0x55c95beecc90 <col:24> 'int' 0
[B6.10] < [B6.11]
   T: if [B6.12]
   Preds (1): B8
   Succs (2): B5 B2

 [B7]
   1: DeclRefExpr 0x55c95beecaa8 <strbuf.c:146:16> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
reqsize
   2: ImplicitCastExpr 0x55c95beecad0 <strbuf.c:146:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beecaa8 <col:16> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x55c95beecae8 <strbuf.c:146:9, col:16>
`-ImplicitCastExpr 0x55c95beecad0 <col:16> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c95beecaa8 <col:16> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
return [B7.2];
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x55c95beec900 <strbuf.c:142:15> 'int' lvalue ParmVar 0x55c95beec3f0 'len' 'int'
len
   2: ImplicitCastExpr 0x55c95beec948 <strbuf.c:142:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beec900 <col:15> 'int' lvalue ParmVar 0x55c95beec3f0 'len' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55c95beec928 <strbuf.c:142:21> 'int' 1
1
   4: BinaryOperator 0x55c95beec960 <strbuf.c:142:15, col:21> 'int' '+'
|-ImplicitCastExpr 0x55c95beec948 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55c95beec900 <col:15> 'int' lvalue ParmVar 0x55c95beec3f0 'len' 'int'
`-IntegerLiteral 0x55c95beec928 <col:21> 'int' 1
[B8.2] + [B8.3]
   5: DeclRefExpr 0x55c95beec8d8 <strbuf.c:142:5> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
reqsize
   6: BinaryOperator 0x55c95beec988 <strbuf.c:142:5, col:21> 'int' '='
|-DeclRefExpr 0x55c95beec8d8 <col:5> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
`-BinaryOperator 0x55c95beec960 <col:15, col:21> 'int' '+'
  |-ImplicitCastExpr 0x55c95beec948 <col:15> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55c95beec900 <col:15> 'int' lvalue ParmVar 0x55c95beec3f0 'len' 'int'
  `-IntegerLiteral 0x55c95beec928 <col:21> 'int' 1
[B8.5] = [B8.4]
   7: DeclRefExpr 0x55c95beec9b0 <strbuf.c:145:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
s
   8: ImplicitCastExpr 0x55c95beec9d8 <strbuf.c:145:9> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x55c95beec9b0 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B8.7] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   9: MemberExpr 0x55c95beec9f0 <strbuf.c:145:9, col:12> 'int' lvalue ->size 0x55c95bee0ad8
`-ImplicitCastExpr 0x55c95beec9d8 <col:9> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x55c95beec9b0 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B8.8]->size
  10: ImplicitCastExpr 0x55c95beeca50 <strbuf.c:145:9, col:12> 'int' <LValueToRValue>
`-MemberExpr 0x55c95beec9f0 <col:9, col:12> 'int' lvalue ->size 0x55c95bee0ad8
  `-ImplicitCastExpr 0x55c95beec9d8 <col:9> 'strbuf_t *' <LValueToRValue>
    `-DeclRefExpr 0x55c95beec9b0 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
[B8.9] (ImplicitCastExpr, LValueToRValue, int)
  11: DeclRefExpr 0x55c95beeca28 <strbuf.c:145:19> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
reqsize
  12: ImplicitCastExpr 0x55c95beeca68 <strbuf.c:145:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beeca28 <col:19> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
[B8.11] (ImplicitCastExpr, LValueToRValue, int)
  13: BinaryOperator 0x55c95beeca80 <strbuf.c:145:9, col:19> 'int' '>'
|-ImplicitCastExpr 0x55c95beeca50 <col:9, col:12> 'int' <LValueToRValue>
| `-MemberExpr 0x55c95beec9f0 <col:9, col:12> 'int' lvalue ->size 0x55c95bee0ad8
|   `-ImplicitCastExpr 0x55c95beec9d8 <col:9> 'strbuf_t *' <LValueToRValue>
|     `-DeclRefExpr 0x55c95beec9b0 <col:9> 'strbuf_t *' lvalue ParmVar 0x55c95beec378 's' 'strbuf_t *'
`-ImplicitCastExpr 0x55c95beeca68 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c95beeca28 <col:19> 'int' lvalue Var 0x55c95beec5d0 'reqsize' 'int'
[B8.10] > [B8.12]
   T: if [B8.13]
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x55c95beec770 <strbuf.c:139:9> 'void (const char *, ...)' Function 0x55c95bee8758 'die' 'void (const char *, ...)'
die
   2: ImplicitCastExpr 0x55c95beec828 <strbuf.c:139:9> 'void (*)(const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c95beec770 <col:9> 'void (const char *, ...)' Function 0x55c95bee8758 'die' 'void (const char *, ...)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, ...))
   3: StringLiteral 0x55c95beec7d8 <strbuf.c:139:13> 'char [37]' lvalue "BUG: Invalid strbuf length requested"
"BUG: Invalid strbuf length requested"
   4: ImplicitCastExpr 0x55c95beec870 <strbuf.c:139:13> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55c95beec7d8 <col:13> 'char [37]' lvalue "BUG: Invalid strbuf length requested"
[B9.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55c95beec888 <strbuf.c:139:13> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55c95beec870 <col:13> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55c95beec7d8 <col:13> 'char [37]' lvalue "BUG: Invalid strbuf length requested"
[B9.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55c95beec840 <strbuf.c:139:9, col:51> 'void'
|-ImplicitCastExpr 0x55c95beec828 <col:9> 'void (*)(const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c95beec770 <col:9> 'void (const char *, ...)' Function 0x55c95bee8758 'die' 'void (const char *, ...)'
`-ImplicitCastExpr 0x55c95beec888 <col:13> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55c95beec870 <col:13> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55c95beec7d8 <col:13> 'char [37]' lvalue "BUG: Invalid strbuf length requested"
[B9.2]([B9.5])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclStmt 0x55c95bef4518 <strbuf.c:136:9>col:9
`-VarDecl 0x55c95beec5d0 <col:5, col:9> col:9 used reqsize 'int'
int reqsize;
   2: DeclStmt 0x55c95bef4480 <strbuf.c:136:18>col:18
`-VarDecl 0x55c95beec648 <col:5, col:18> col:18 used newsize 'int'
int newsize;
   3: DeclRefExpr 0x55c95beec6d8 <strbuf.c:138:9> 'int' lvalue ParmVar 0x55c95beec3f0 'len' 'int'
len
   4: ImplicitCastExpr 0x55c95beec720 <strbuf.c:138:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c95beec6d8 <col:9> 'int' lvalue ParmVar 0x55c95beec3f0 'len' 'int'
[B10.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55c95beec700 <strbuf.c:138:16> 'int' 0
0
   6: BinaryOperator 0x55c95beec738 <strbuf.c:138:9, col:16> 'int' '<='
|-ImplicitCastExpr 0x55c95beec720 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55c95beec6d8 <col:9> 'int' lvalue ParmVar 0x55c95beec3f0 'len' 'int'
`-IntegerLiteral 0x55c95beec700 <col:16> 'int' 0
[B10.4] <= [B10.5]
   T: if [B10.6]
   Preds (1): B11
   Succs (2): B9 B8

 [B0 (EXIT)]
   Preds (2): B1 B7
