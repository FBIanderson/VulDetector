sds sdsRemoveFreeSpace(sds s)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x55e83d100950 <sds.c:270:5> 'void (sds, size_t)' Function 0x55e83d0ea860 'sdssetalloc' 'void (sds, size_t)'
sdssetalloc
   2: ImplicitCastExpr 0x55e83d1009c8 <sds.c:270:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d100950 <col:5> 'void (sds, size_t)' Function 0x55e83d0ea860 'sdssetalloc' 'void (sds, size_t)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds, size_t))
   3: DeclRefExpr 0x55e83d100978 <sds.c:270:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d100a18 <sds.c:270:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d100978 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d1009a0 <sds.c:270:20> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
len
   6: ImplicitCastExpr 0x55e83d100a30 <sds.c:270:20> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d1009a0 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B1.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: CallExpr 0x55e83d1009e0 <sds.c:270:5, col:23> 'void'
|-ImplicitCastExpr 0x55e83d1009c8 <col:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d100950 <col:5> 'void (sds, size_t)' Function 0x55e83d0ea860 'sdssetalloc' 'void (sds, size_t)'
|-ImplicitCastExpr 0x55e83d100a18 <col:17> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d100978 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d100a30 <col:20> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1009a0 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x55e83d100a48 <sds.c:271:12> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
   9: ImplicitCastExpr 0x55e83d100a70 <sds.c:271:12> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d100a48 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B1.8] (ImplicitCastExpr, LValueToRValue, sds)
  10: ReturnStmt 0x55e83d100a88 <sds.c:271:5, col:12>
`-ImplicitCastExpr 0x55e83d100a70 <col:12> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d100a48 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
return [B1.9];
   Preds (2): B2 B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d100250 <sds.c:264:9> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a7d00 'memcpy' 'void *(void *, const void *, unsigned long)'
memcpy
   2: ImplicitCastExpr 0x55e83d100440 <sds.c:264:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d100250 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a7d00 'memcpy' 'void *(void *, const void *, unsigned long)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
   3: DeclRefExpr 0x55e83d100278 <sds.c:264:23> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
newsh
   4: ImplicitCastExpr 0x55e83d1002b8 <sds.c:264:23> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d100278 <col:23> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
[B2.3] (ImplicitCastExpr, LValueToRValue, void *)
   5: CStyleCastExpr 0x55e83d1002d0 <sds.c:264:16, col:23> 'char *' <BitCast>
`-ImplicitCastExpr 0x55e83d1002b8 <col:23> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d100278 <col:23> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
(char *)[B2.4] (CStyleCastExpr, BitCast, char *)
   6: DeclRefExpr 0x55e83d1002f8 <sds.c:264:29> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
hdrlen
   7: ImplicitCastExpr 0x55e83d100320 <sds.c:264:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d1002f8 <col:29> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B2.6] (ImplicitCastExpr, LValueToRValue, int)
   8: BinaryOperator 0x55e83d100338 <sds.c:264:16, col:29> 'char *' '+'
|-CStyleCastExpr 0x55e83d1002d0 <col:16, col:23> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55e83d1002b8 <col:23> 'void *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d100278 <col:23> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
`-ImplicitCastExpr 0x55e83d100320 <col:29> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1002f8 <col:29> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B2.5] + [B2.7]
   9: ImplicitCastExpr 0x55e83d100498 <sds.c:264:16, col:29> 'void *' <BitCast>
`-BinaryOperator 0x55e83d100338 <col:16, col:29> 'char *' '+'
  |-CStyleCastExpr 0x55e83d1002d0 <col:16, col:23> 'char *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d1002b8 <col:23> 'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d100278 <col:23> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
  `-ImplicitCastExpr 0x55e83d100320 <col:29> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1002f8 <col:29> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B2.8] (ImplicitCastExpr, BitCast, void *)
  10: DeclRefExpr 0x55e83d100360 <sds.c:264:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
  11: ImplicitCastExpr 0x55e83d1004b0 <sds.c:264:37> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d100360 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B2.10] (ImplicitCastExpr, LValueToRValue, sds)
  12: ImplicitCastExpr 0x55e83d1004c8 <sds.c:264:37> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d1004b0 <col:37> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d100360 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B2.11] (ImplicitCastExpr, BitCast, const void *)
  13: DeclRefExpr 0x55e83d100388 <sds.c:264:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
len
  14: ImplicitCastExpr 0x55e83d1003d0 <sds.c:264:40> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d100388 <col:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B2.13] (ImplicitCastExpr, LValueToRValue, size_t)
  15: IntegerLiteral 0x55e83d1003b0 <sds.c:264:44> 'int' 1
1
  16: ImplicitCastExpr 0x55e83d1003e8 <sds.c:264:44> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d1003b0 <col:44> 'int' 1
[B2.15] (ImplicitCastExpr, IntegralCast, unsigned long)
  17: BinaryOperator 0x55e83d100400 <sds.c:264:40, col:44> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d1003d0 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d100388 <col:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d1003e8 <col:44> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d1003b0 <col:44> 'int' 1
[B2.14] + [B2.16]
  18: CallExpr 0x55e83d100458 <sds.c:264:9, col:45> 'void *'
|-ImplicitCastExpr 0x55e83d100440 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d100250 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a7d00 'memcpy' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d100498 <col:16, col:29> 'void *' <BitCast>
| `-BinaryOperator 0x55e83d100338 <col:16, col:29> 'char *' '+'
|   |-CStyleCastExpr 0x55e83d1002d0 <col:16, col:23> 'char *' <BitCast>
|   | `-ImplicitCastExpr 0x55e83d1002b8 <col:23> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e83d100278 <col:23> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
|   `-ImplicitCastExpr 0x55e83d100320 <col:29> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d1002f8 <col:29> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
|-ImplicitCastExpr 0x55e83d1004c8 <col:37> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d1004b0 <col:37> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d100360 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-BinaryOperator 0x55e83d100400 <col:40, col:44> 'unsigned long' '+'
  |-ImplicitCastExpr 0x55e83d1003d0 <col:40> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d100388 <col:40> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d1003e8 <col:44> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d1003b0 <col:44> 'int' 1
[B2.2]([B2.9], [B2.12], [B2.17])
  19: DeclRefExpr 0x55e83d1004e0 <./sdsalloc.h:42:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
free
  20: ImplicitCastExpr 0x55e83d100530 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1004e0 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
[B2.19] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *))
  21: DeclRefExpr 0x55e83d100508 <sds.c:265:16> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
sh
  22: ImplicitCastExpr 0x55e83d100578 <sds.c:265:16> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d100508 <col:16> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
[B2.21] (ImplicitCastExpr, LValueToRValue, void *)
  23: CallExpr 0x55e83d100548 <./sdsalloc.h:42:16, sds.c:265:18> 'void'
|-ImplicitCastExpr 0x55e83d100530 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1004e0 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
`-ImplicitCastExpr 0x55e83d100578 <sds.c:265:16> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d100508 <col:16> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
[B2.20]([B2.22])
  24: DeclRefExpr 0x55e83d1005b8 <sds.c:266:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
newsh
  25: ImplicitCastExpr 0x55e83d1005f8 <sds.c:266:20> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1005b8 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
[B2.24] (ImplicitCastExpr, LValueToRValue, void *)
  26: CStyleCastExpr 0x55e83d100610 <sds.c:266:13, col:20> 'char *' <BitCast>
`-ImplicitCastExpr 0x55e83d1005f8 <col:20> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1005b8 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
(char *)[B2.25] (CStyleCastExpr, BitCast, char *)
  27: DeclRefExpr 0x55e83d100638 <sds.c:266:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
hdrlen
  28: ImplicitCastExpr 0x55e83d100660 <sds.c:266:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d100638 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B2.27] (ImplicitCastExpr, LValueToRValue, int)
  29: BinaryOperator 0x55e83d100678 <sds.c:266:13, col:26> 'char *' '+'
|-CStyleCastExpr 0x55e83d100610 <col:13, col:20> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55e83d1005f8 <col:20> 'void *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1005b8 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
`-ImplicitCastExpr 0x55e83d100660 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d100638 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B2.26] + [B2.28]
  30: DeclRefExpr 0x55e83d100590 <sds.c:266:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
  31: BinaryOperator 0x55e83d1006a0 <sds.c:266:9, col:26> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d100590 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-BinaryOperator 0x55e83d100678 <col:13, col:26> 'char *' '+'
  |-CStyleCastExpr 0x55e83d100610 <col:13, col:20> 'char *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d1005f8 <col:20> 'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d1005b8 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
  `-ImplicitCastExpr 0x55e83d100660 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d100638 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B2.30] = [B2.29]
  32: DeclRefExpr 0x55e83d100770 <sds.c:267:17> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
type
  33: ImplicitCastExpr 0x55e83d100798 <sds.c:267:17> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d100770 <col:17> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B2.32] (ImplicitCastExpr, LValueToRValue, char)
  34: DeclRefExpr 0x55e83d1006c8 <sds.c:267:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
  35: ImplicitCastExpr 0x55e83d100730 <sds.c:267:9> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1006c8 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B2.34] (ImplicitCastExpr, LValueToRValue, sds)
  36: IntegerLiteral 0x55e83d1006f0 <sds.c:267:12> 'int' 1
1
  37: UnaryOperator 0x55e83d100710 <sds.c:267:11, col:12> 'int' prefix '-'
`-IntegerLiteral 0x55e83d1006f0 <col:12> 'int' 1
-[B2.36]
  38: ArraySubscriptExpr 0x55e83d100748 <sds.c:267:9, col:13> 'char' lvalue
|-ImplicitCastExpr 0x55e83d100730 <col:9> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1006c8 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-UnaryOperator 0x55e83d100710 <col:11, col:12> 'int' prefix '-'
  `-IntegerLiteral 0x55e83d1006f0 <col:12> 'int' 1
[B2.35][[B2.37]]
  39: BinaryOperator 0x55e83d1007b0 <sds.c:267:9, col:17> 'char' '='
|-ArraySubscriptExpr 0x55e83d100748 <col:9, col:13> 'char' lvalue
| |-ImplicitCastExpr 0x55e83d100730 <col:9> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d1006c8 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
| `-UnaryOperator 0x55e83d100710 <col:11, col:12> 'int' prefix '-'
|   `-IntegerLiteral 0x55e83d1006f0 <col:12> 'int' 1
`-ImplicitCastExpr 0x55e83d100798 <col:17> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d100770 <col:17> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B2.38] = [B2.33]
  40: DeclRefExpr 0x55e83d1007d8 <sds.c:268:9> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
sdssetlen
  41: ImplicitCastExpr 0x55e83d100850 <sds.c:268:9> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1007d8 <col:9> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
[B2.40] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds, size_t))
  42: DeclRefExpr 0x55e83d100800 <sds.c:268:19> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
  43: ImplicitCastExpr 0x55e83d1008a0 <sds.c:268:19> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d100800 <col:19> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B2.42] (ImplicitCastExpr, LValueToRValue, sds)
  44: DeclRefExpr 0x55e83d100828 <sds.c:268:22> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
len
  45: ImplicitCastExpr 0x55e83d1008b8 <sds.c:268:22> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d100828 <col:22> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B2.44] (ImplicitCastExpr, LValueToRValue, size_t)
  46: CallExpr 0x55e83d100868 <sds.c:268:9, col:25> 'void'
|-ImplicitCastExpr 0x55e83d100850 <col:9> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1007d8 <col:9> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
|-ImplicitCastExpr 0x55e83d1008a0 <col:19> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d100800 <col:19> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d1008b8 <col:22> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d100828 <col:22> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B2.41]([B2.43], [B2.45])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x55e83d100168 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55e83d1001a0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d100168 <col:24> 'int' 0
(void *)[B3.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55e83d1001e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <NullToPointer>
`-ParenExpr 0x55e83d1001c8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d1001a0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d100168 <col:24> 'int' 0
([B3.2]) (ImplicitCastExpr, NullToPointer, sds)
   4: ReturnStmt 0x55e83d100200 <sds.c:263:28, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55e83d1001e8 <col:16, col:25> 'sds':'char *' <NullToPointer>
  `-ParenExpr 0x55e83d1001c8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d1001a0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d100168 <col:24> 'int' 0
return [B3.3];
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x55e83d0ffec8 <./sdsalloc.h:40:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
malloc
   2: ImplicitCastExpr 0x55e83d100010 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0ffec8 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(unsigned long))
   3: DeclRefExpr 0x55e83d0ffef0 <sds.c:262:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
hdrlen
   4: ImplicitCastExpr 0x55e83d0fff40 <sds.c:262:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ffef0 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ImplicitCastExpr 0x55e83d0fff70 <sds.c:262:26> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0fff40 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ffef0 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B4.4] (ImplicitCastExpr, IntegralCast, unsigned long)
   6: DeclRefExpr 0x55e83d0fff18 <sds.c:262:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
len
   7: ImplicitCastExpr 0x55e83d0fff58 <sds.c:262:33> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0fff18 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B4.6] (ImplicitCastExpr, LValueToRValue, size_t)
   8: BinaryOperator 0x55e83d0fff88 <sds.c:262:26, col:33> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d0fff70 <col:26> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0fff40 <col:26> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0ffef0 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
`-ImplicitCastExpr 0x55e83d0fff58 <col:33> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0fff18 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B4.5] + [B4.7]
   9: IntegerLiteral 0x55e83d0fffb0 <sds.c:262:37> 'int' 1
1
  10: ImplicitCastExpr 0x55e83d0fffd0 <sds.c:262:37> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0fffb0 <col:37> 'int' 1
[B4.9] (ImplicitCastExpr, IntegralCast, unsigned long)
  11: BinaryOperator 0x55e83d0fffe8 <sds.c:262:26, col:37> 'unsigned long' '+'
|-BinaryOperator 0x55e83d0fff88 <col:26, col:33> 'unsigned long' '+'
| |-ImplicitCastExpr 0x55e83d0fff70 <col:26> 'unsigned long' <IntegralCast>
| | `-ImplicitCastExpr 0x55e83d0fff40 <col:26> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55e83d0ffef0 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
| `-ImplicitCastExpr 0x55e83d0fff58 <col:33> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0fff18 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0fffd0 <col:37> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0fffb0 <col:37> 'int' 1
[B4.8] + [B4.10]
  12: CallExpr 0x55e83d100028 <./sdsalloc.h:40:18, sds.c:262:38> 'void *'
|-ImplicitCastExpr 0x55e83d100010 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0ffec8 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
`-BinaryOperator 0x55e83d0fffe8 <sds.c:262:26, col:37> 'unsigned long' '+'
  |-BinaryOperator 0x55e83d0fff88 <col:26, col:33> 'unsigned long' '+'
  | |-ImplicitCastExpr 0x55e83d0fff70 <col:26> 'unsigned long' <IntegralCast>
  | | `-ImplicitCastExpr 0x55e83d0fff40 <col:26> 'int' <LValueToRValue>
  | |   `-DeclRefExpr 0x55e83d0ffef0 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
  | `-ImplicitCastExpr 0x55e83d0fff58 <col:33> 'size_t':'unsigned long' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0fff18 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d0fffd0 <col:37> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d0fffb0 <col:37> 'int' 1
[B4.2]([B4.11])
  13: DeclRefExpr 0x55e83d0ffea0 <sds.c:262:9> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
newsh
  14: BinaryOperator 0x55e83d100058 <sds.c:262:9, col:38> 'void *' '='
|-DeclRefExpr 0x55e83d0ffea0 <col:9> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
`-CallExpr 0x55e83d100028 <./sdsalloc.h:40:18, sds.c:262:38> 'void *'
  |-ImplicitCastExpr 0x55e83d100010 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0ffec8 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
  `-BinaryOperator 0x55e83d0fffe8 <sds.c:262:26, col:37> 'unsigned long' '+'
    |-BinaryOperator 0x55e83d0fff88 <col:26, col:33> 'unsigned long' '+'
    | |-ImplicitCastExpr 0x55e83d0fff70 <col:26> 'unsigned long' <IntegralCast>
    | | `-ImplicitCastExpr 0x55e83d0fff40 <col:26> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x55e83d0ffef0 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
    | `-ImplicitCastExpr 0x55e83d0fff58 <col:33> 'size_t':'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d0fff18 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d0fffd0 <col:37> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55e83d0fffb0 <col:37> 'int' 1
[B4.13] = [B4.12]
  15: DeclRefExpr 0x55e83d100080 <sds.c:263:13> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
newsh
  16: ImplicitCastExpr 0x55e83d100128 <sds.c:263:13> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d100080 <col:13> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
[B4.15] (ImplicitCastExpr, LValueToRValue, void *)
  17: IntegerLiteral 0x55e83d1000a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  18: CStyleCastExpr 0x55e83d1000e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d1000a8 <col:24> 'int' 0
(void *)[B4.17] (CStyleCastExpr, NullToPointer, void *)
  19: BinaryOperator 0x55e83d100140 <sds.c:263:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55e83d100128 <sds.c:263:13> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d100080 <col:13> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
`-ParenExpr 0x55e83d100108 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d1000e0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d1000a8 <col:24> 'int' 0
[B4.16] == ([B4.18])
   T: if [B4.19]
   Preds (1): B8
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55e83d0ffd50 <sds.c:260:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
newsh
   2: ImplicitCastExpr 0x55e83d0ffda8 <sds.c:260:20> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ffd50 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
[B5.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: CStyleCastExpr 0x55e83d0ffdc0 <sds.c:260:13, col:20> 'char *' <BitCast>
`-ImplicitCastExpr 0x55e83d0ffda8 <col:20> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ffd50 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
(char *)[B5.2] (CStyleCastExpr, BitCast, char *)
   4: DeclRefExpr 0x55e83d0ffde8 <sds.c:260:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
hdrlen
   5: ImplicitCastExpr 0x55e83d0ffe10 <sds.c:260:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ffde8 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B5.4] (ImplicitCastExpr, LValueToRValue, int)
   6: BinaryOperator 0x55e83d0ffe28 <sds.c:260:13, col:26> 'char *' '+'
|-CStyleCastExpr 0x55e83d0ffdc0 <col:13, col:20> 'char *' <BitCast>
| `-ImplicitCastExpr 0x55e83d0ffda8 <col:20> 'void *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0ffd50 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
`-ImplicitCastExpr 0x55e83d0ffe10 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ffde8 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B5.3] + [B5.5]
   7: DeclRefExpr 0x55e83d0ffd28 <sds.c:260:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
   8: BinaryOperator 0x55e83d0ffe50 <sds.c:260:9, col:26> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d0ffd28 <col:9> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-BinaryOperator 0x55e83d0ffe28 <col:13, col:26> 'char *' '+'
  |-CStyleCastExpr 0x55e83d0ffdc0 <col:13, col:20> 'char *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d0ffda8 <col:20> 'void *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0ffd50 <col:20> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
  `-ImplicitCastExpr 0x55e83d0ffe10 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0ffde8 <col:26> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B5.7] = [B5.6]
   Preds (1): B7
   Succs (1): B1

 [B6]
   1: IntegerLiteral 0x55e83d0ffc40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x55e83d0ffc78 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d0ffc40 <col:24> 'int' 0
(void *)[B6.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x55e83d0ffcc0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds':'char *' <NullToPointer>
`-ParenExpr 0x55e83d0ffca0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d0ffc78 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d0ffc40 <col:24> 'int' 0
([B6.2]) (ImplicitCastExpr, NullToPointer, sds)
   4: ReturnStmt 0x55e83d0ffcd8 <sds.c:259:28, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55e83d0ffcc0 <col:16, col:25> 'sds':'char *' <NullToPointer>
  `-ParenExpr 0x55e83d0ffca0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d0ffc78 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d0ffc40 <col:24> 'int' 0
return [B6.3];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x55e83d0ff940 <./sdsalloc.h:41:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
realloc
   2: ImplicitCastExpr 0x55e83d0ffac8 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0ff940 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, unsigned long))
   3: DeclRefExpr 0x55e83d0ff968 <sds.c:258:27> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
sh
   4: ImplicitCastExpr 0x55e83d0ffb18 <sds.c:258:27> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff968 <col:27> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
[B7.3] (ImplicitCastExpr, LValueToRValue, void *)
   5: DeclRefExpr 0x55e83d0ff990 <sds.c:258:31> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
hdrlen
   6: ImplicitCastExpr 0x55e83d0ff9e0 <sds.c:258:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff990 <col:31> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ImplicitCastExpr 0x55e83d0ffa10 <sds.c:258:31> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0ff9e0 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff990 <col:31> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
[B7.6] (ImplicitCastExpr, IntegralCast, unsigned long)
   8: DeclRefExpr 0x55e83d0ff9b8 <sds.c:258:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
len
   9: ImplicitCastExpr 0x55e83d0ff9f8 <sds.c:258:38> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff9b8 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B7.8] (ImplicitCastExpr, LValueToRValue, size_t)
  10: BinaryOperator 0x55e83d0ffa28 <sds.c:258:31, col:38> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d0ffa10 <col:31> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0ff9e0 <col:31> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0ff990 <col:31> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
`-ImplicitCastExpr 0x55e83d0ff9f8 <col:38> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff9b8 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B7.7] + [B7.9]
  11: IntegerLiteral 0x55e83d0ffa50 <sds.c:258:42> 'int' 1
1
  12: ImplicitCastExpr 0x55e83d0ffa70 <sds.c:258:42> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0ffa50 <col:42> 'int' 1
[B7.11] (ImplicitCastExpr, IntegralCast, unsigned long)
  13: BinaryOperator 0x55e83d0ffa88 <sds.c:258:31, col:42> 'unsigned long' '+'
|-BinaryOperator 0x55e83d0ffa28 <col:31, col:38> 'unsigned long' '+'
| |-ImplicitCastExpr 0x55e83d0ffa10 <col:31> 'unsigned long' <IntegralCast>
| | `-ImplicitCastExpr 0x55e83d0ff9e0 <col:31> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55e83d0ff990 <col:31> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
| `-ImplicitCastExpr 0x55e83d0ff9f8 <col:38> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0ff9b8 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0ffa70 <col:42> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0ffa50 <col:42> 'int' 1
[B7.10] + [B7.12]
  14: CallExpr 0x55e83d0ffae0 <./sdsalloc.h:41:19, sds.c:258:43> 'void *'
|-ImplicitCastExpr 0x55e83d0ffac8 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0ff940 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d0ffb18 <sds.c:258:27> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0ff968 <col:27> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
`-BinaryOperator 0x55e83d0ffa88 <col:31, col:42> 'unsigned long' '+'
  |-BinaryOperator 0x55e83d0ffa28 <col:31, col:38> 'unsigned long' '+'
  | |-ImplicitCastExpr 0x55e83d0ffa10 <col:31> 'unsigned long' <IntegralCast>
  | | `-ImplicitCastExpr 0x55e83d0ff9e0 <col:31> 'int' <LValueToRValue>
  | |   `-DeclRefExpr 0x55e83d0ff990 <col:31> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
  | `-ImplicitCastExpr 0x55e83d0ff9f8 <col:38> 'size_t':'unsigned long' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0ff9b8 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d0ffa70 <col:42> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d0ffa50 <col:42> 'int' 1
[B7.2]([B7.4], [B7.13])
  15: DeclRefExpr 0x55e83d0ff918 <sds.c:258:9> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
newsh
  16: BinaryOperator 0x55e83d0ffb30 <sds.c:258:9, col:43> 'void *' '='
|-DeclRefExpr 0x55e83d0ff918 <col:9> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
`-CallExpr 0x55e83d0ffae0 <./sdsalloc.h:41:19, sds.c:258:43> 'void *'
  |-ImplicitCastExpr 0x55e83d0ffac8 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0ff940 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
  |-ImplicitCastExpr 0x55e83d0ffb18 <sds.c:258:27> 'void *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d0ff968 <col:27> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
  `-BinaryOperator 0x55e83d0ffa88 <col:31, col:42> 'unsigned long' '+'
    |-BinaryOperator 0x55e83d0ffa28 <col:31, col:38> 'unsigned long' '+'
    | |-ImplicitCastExpr 0x55e83d0ffa10 <col:31> 'unsigned long' <IntegralCast>
    | | `-ImplicitCastExpr 0x55e83d0ff9e0 <col:31> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x55e83d0ff990 <col:31> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
    | `-ImplicitCastExpr 0x55e83d0ff9f8 <col:38> 'size_t':'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d0ff9b8 <col:38> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d0ffa70 <col:42> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55e83d0ffa50 <col:42> 'int' 1
[B7.15] = [B7.14]
  17: DeclRefExpr 0x55e83d0ffb58 <sds.c:259:13> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
newsh
  18: ImplicitCastExpr 0x55e83d0ffc00 <sds.c:259:13> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ffb58 <col:13> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
[B7.17] (ImplicitCastExpr, LValueToRValue, void *)
  19: IntegerLiteral 0x55e83d0ffb80 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  20: CStyleCastExpr 0x55e83d0ffbb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d0ffb80 <col:24> 'int' 0
(void *)[B7.19] (CStyleCastExpr, NullToPointer, void *)
  21: BinaryOperator 0x55e83d0ffc18 <sds.c:259:13, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55e83d0ffc00 <sds.c:259:13> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0ffb58 <col:13> 'void *' lvalue Var 0x55e83d0fefe0 'newsh' 'void *'
`-ParenExpr 0x55e83d0ffbe0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d0ffbb8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d0ffb80 <col:24> 'int' 0
[B7.18] == ([B7.20])
   T: if [B7.21]
   Preds (1): B8
   Succs (2): B6 B5

 [B8]
   1: DeclStmt 0x55e83d134008 <sds.c:249:11>col:11
`-VarDecl 0x55e83d0fef68 <col:5, col:11> col:11 used sh 'void *'
void *sh;
   2: DeclStmt 0x55e83d133ff0 <sds.c:249:16>col:16
`-VarDecl 0x55e83d0fefe0 <col:5, col:16> col:16 used newsh 'void *'
void *newsh;
   3: DeclStmt 0x55e83d133fd8 <sds.c:250:10>col:10
`-VarDecl 0x55e83d0ff080 <col:5, col:10> col:10 used type 'char'
char type;
   4: DeclRefExpr 0x55e83d0ff150 <sds.c:250:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
   5: ImplicitCastExpr 0x55e83d0ff1b8 <sds.c:250:26> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff150 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B8.4] (ImplicitCastExpr, LValueToRValue, sds)
   6: IntegerLiteral 0x55e83d0ff178 <sds.c:250:29> 'int' 1
1
   7: UnaryOperator 0x55e83d0ff198 <sds.c:250:28, col:29> 'int' prefix '-'
`-IntegerLiteral 0x55e83d0ff178 <col:29> 'int' 1
-[B8.6]
   8: ArraySubscriptExpr 0x55e83d0ff1d0 <sds.c:250:26, col:30> 'char' lvalue
|-ImplicitCastExpr 0x55e83d0ff1b8 <col:26> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0ff150 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-UnaryOperator 0x55e83d0ff198 <col:28, col:29> 'int' prefix '-'
  `-IntegerLiteral 0x55e83d0ff178 <col:29> 'int' 1
[B8.5][[B8.7]]
   9: ImplicitCastExpr 0x55e83d0ff218 <sds.c:250:26, col:30> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d0ff1d0 <col:26, col:30> 'char' lvalue
  |-ImplicitCastExpr 0x55e83d0ff1b8 <col:26> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d0ff150 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
  `-UnaryOperator 0x55e83d0ff198 <col:28, col:29> 'int' prefix '-'
    `-IntegerLiteral 0x55e83d0ff178 <col:29> 'int' 1
[B8.8] (ImplicitCastExpr, LValueToRValue, char)
  10: ImplicitCastExpr 0x55e83d0ff230 <sds.c:250:26, col:30> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0ff218 <col:26, col:30> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d0ff1d0 <col:26, col:30> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d0ff1b8 <col:26> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d0ff150 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
    `-UnaryOperator 0x55e83d0ff198 <col:28, col:29> 'int' prefix '-'
      `-IntegerLiteral 0x55e83d0ff178 <col:29> 'int' 1
[B8.9] (ImplicitCastExpr, IntegralCast, int)
  11: IntegerLiteral 0x55e83d0ff1f8 <./sds.h:83:23> 'int' 7
7
  12: BinaryOperator 0x55e83d0ff248 <sds.c:250:26, ./sds.h:83:23> 'int' '&'
|-ImplicitCastExpr 0x55e83d0ff230 <sds.c:250:26, col:30> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0ff218 <col:26, col:30> 'char' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55e83d0ff1d0 <col:26, col:30> 'char' lvalue
|     |-ImplicitCastExpr 0x55e83d0ff1b8 <col:26> 'sds':'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55e83d0ff150 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
|     `-UnaryOperator 0x55e83d0ff198 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55e83d0ff178 <col:29> 'int' 1
`-IntegerLiteral 0x55e83d0ff1f8 <./sds.h:83:23> 'int' 7
[B8.10] & [B8.11]
  13: ImplicitCastExpr 0x55e83d0ff270 <sds.c:250:26, ./sds.h:83:23> 'char' <IntegralCast>
`-BinaryOperator 0x55e83d0ff248 <sds.c:250:26, ./sds.h:83:23> 'int' '&'
  |-ImplicitCastExpr 0x55e83d0ff230 <sds.c:250:26, col:30> 'int' <IntegralCast>
  | `-ImplicitCastExpr 0x55e83d0ff218 <col:26, col:30> 'char' <LValueToRValue>
  |   `-ArraySubscriptExpr 0x55e83d0ff1d0 <col:26, col:30> 'char' lvalue
  |     |-ImplicitCastExpr 0x55e83d0ff1b8 <col:26> 'sds':'char *' <LValueToRValue>
  |     | `-DeclRefExpr 0x55e83d0ff150 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
  |     `-UnaryOperator 0x55e83d0ff198 <col:28, col:29> 'int' prefix '-'
  |       `-IntegerLiteral 0x55e83d0ff178 <col:29> 'int' 1
  `-IntegerLiteral 0x55e83d0ff1f8 <./sds.h:83:23> 'int' 7
[B8.12] (ImplicitCastExpr, IntegralCast, char)
  14: DeclStmt 0x55e83d133fc0 <sds.c:250:16, ./sds.h:83:23>sds.c:250:16
`-VarDecl 0x55e83d0ff0f0 <col:5, ./sds.h:83:23> sds.c:250:16 used oldtype 'char' cinit
  `-ImplicitCastExpr 0x55e83d0ff270 <col:26, ./sds.h:83:23> 'char' <IntegralCast>
    `-BinaryOperator 0x55e83d0ff248 <sds.c:250:26, ./sds.h:83:23> 'int' '&'
      |-ImplicitCastExpr 0x55e83d0ff230 <sds.c:250:26, col:30> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x55e83d0ff218 <col:26, col:30> 'char' <LValueToRValue>
      |   `-ArraySubscriptExpr 0x55e83d0ff1d0 <col:26, col:30> 'char' lvalue
      |     |-ImplicitCastExpr 0x55e83d0ff1b8 <col:26> 'sds':'char *' <LValueToRValue>
      |     | `-DeclRefExpr 0x55e83d0ff150 <col:26> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
      |     `-UnaryOperator 0x55e83d0ff198 <col:28, col:29> 'int' prefix '-'
      |       `-IntegerLiteral 0x55e83d0ff178 <col:29> 'int' 1
      `-IntegerLiteral 0x55e83d0ff1f8 <./sds.h:83:23> 'int' 7
char oldtype = s[-1] & 7;
  15: DeclStmt 0x55e83d0ff330 <sds.c:251:5, col:15>col:9
`-VarDecl 0x55e83d0ff2d0 <col:5, col:9> col:9 used hdrlen 'int'
int hdrlen;
  16: DeclRefExpr 0x55e83d0ff3b8 <sds.c:252:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
  17: ImplicitCastExpr 0x55e83d0ff408 <sds.c:252:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0ff3b8 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B8.16] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
  18: DeclRefExpr 0x55e83d0ff3e0 <sds.c:252:25> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
  19: ImplicitCastExpr 0x55e83d0ff450 <sds.c:252:25> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff3e0 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B8.18] (ImplicitCastExpr, LValueToRValue, sds)
  20: CallExpr 0x55e83d0ff420 <sds.c:252:18, col:26> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d0ff408 <col:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0ff3b8 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d0ff450 <col:25> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff3e0 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B8.17]([B8.19])
  21: DeclStmt 0x55e83d0ff468 <sds.c:252:5, col:27>col:12
`-VarDecl 0x55e83d0ff358 <col:5, col:26> col:12 used len 'size_t':'unsigned long' cinit
  `-CallExpr 0x55e83d0ff420 <col:18, col:26> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55e83d0ff408 <col:18> 'size_t (*)(const sds)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d0ff3b8 <col:18> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
    `-ImplicitCastExpr 0x55e83d0ff450 <col:25> 'sds':'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d0ff3e0 <col:25> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
size_t len = sdslen(s);
  22: DeclRefExpr 0x55e83d0ff4a8 <sds.c:253:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
s
  23: ImplicitCastExpr 0x55e83d0ff4e8 <sds.c:253:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff4a8 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
[B8.22] (ImplicitCastExpr, LValueToRValue, sds)
  24: CStyleCastExpr 0x55e83d0ff500 <sds.c:253:10, col:17> 'char *' <NoOp>
`-ImplicitCastExpr 0x55e83d0ff4e8 <col:17> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff4a8 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
(char *)[B8.23] (CStyleCastExpr, NoOp, char *)
  25: DeclRefExpr 0x55e83d0ff528 <sds.c:253:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
sdsHdrSize
  26: ImplicitCastExpr 0x55e83d0ff578 <sds.c:253:19> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0ff528 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
[B8.25] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
  27: DeclRefExpr 0x55e83d0ff550 <sds.c:253:30> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
oldtype
  28: ImplicitCastExpr 0x55e83d0ff5c0 <sds.c:253:30> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff550 <col:30> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
[B8.27] (ImplicitCastExpr, LValueToRValue, char)
  29: CallExpr 0x55e83d0ff590 <sds.c:253:19, col:37> 'int'
|-ImplicitCastExpr 0x55e83d0ff578 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0ff528 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
`-ImplicitCastExpr 0x55e83d0ff5c0 <col:30> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff550 <col:30> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
[B8.26]([B8.28])
  30: BinaryOperator 0x55e83d0ff5d8 <sds.c:253:10, col:37> 'char *' '-'
|-CStyleCastExpr 0x55e83d0ff500 <col:10, col:17> 'char *' <NoOp>
| `-ImplicitCastExpr 0x55e83d0ff4e8 <col:17> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0ff4a8 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
`-CallExpr 0x55e83d0ff590 <col:19, col:37> 'int'
  |-ImplicitCastExpr 0x55e83d0ff578 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0ff528 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
  `-ImplicitCastExpr 0x55e83d0ff5c0 <col:30> 'char' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0ff550 <col:30> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
[B8.24] - [B8.29]
  31: ImplicitCastExpr 0x55e83d0ff600 <sds.c:253:10, col:37> 'void *' <BitCast>
`-BinaryOperator 0x55e83d0ff5d8 <col:10, col:37> 'char *' '-'
  |-CStyleCastExpr 0x55e83d0ff500 <col:10, col:17> 'char *' <NoOp>
  | `-ImplicitCastExpr 0x55e83d0ff4e8 <col:17> 'sds':'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d0ff4a8 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
  `-CallExpr 0x55e83d0ff590 <col:19, col:37> 'int'
    |-ImplicitCastExpr 0x55e83d0ff578 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d0ff528 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
    `-ImplicitCastExpr 0x55e83d0ff5c0 <col:30> 'char' <LValueToRValue>
      `-DeclRefExpr 0x55e83d0ff550 <col:30> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
[B8.30] (ImplicitCastExpr, BitCast, void *)
  32: DeclRefExpr 0x55e83d0ff480 <sds.c:253:5> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
sh
  33: BinaryOperator 0x55e83d0ff618 <sds.c:253:5, col:37> 'void *' '='
|-DeclRefExpr 0x55e83d0ff480 <col:5> 'void *' lvalue Var 0x55e83d0fef68 'sh' 'void *'
`-ImplicitCastExpr 0x55e83d0ff600 <col:10, col:37> 'void *' <BitCast>
  `-BinaryOperator 0x55e83d0ff5d8 <col:10, col:37> 'char *' '-'
    |-CStyleCastExpr 0x55e83d0ff500 <col:10, col:17> 'char *' <NoOp>
    | `-ImplicitCastExpr 0x55e83d0ff4e8 <col:17> 'sds':'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x55e83d0ff4a8 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d0fee20 's' 'sds':'char *'
    `-CallExpr 0x55e83d0ff590 <col:19, col:37> 'int'
      |-ImplicitCastExpr 0x55e83d0ff578 <col:19> 'int (*)(char)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55e83d0ff528 <col:19> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
      `-ImplicitCastExpr 0x55e83d0ff5c0 <col:30> 'char' <LValueToRValue>
        `-DeclRefExpr 0x55e83d0ff550 <col:30> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
[B8.32] = [B8.31]
  34: DeclRefExpr 0x55e83d0ff668 <sds.c:255:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
sdsReqType
  35: ImplicitCastExpr 0x55e83d0ff6b8 <sds.c:255:12> 'char (*)(size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0ff668 <col:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
[B8.34] (ImplicitCastExpr, FunctionToPointerDecay, char (*)(size_t))
  36: DeclRefExpr 0x55e83d0ff690 <sds.c:255:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
len
  37: ImplicitCastExpr 0x55e83d0ff700 <sds.c:255:23> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff690 <col:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B8.36] (ImplicitCastExpr, LValueToRValue, size_t)
  38: CallExpr 0x55e83d0ff6d0 <sds.c:255:12, col:26> 'char'
|-ImplicitCastExpr 0x55e83d0ff6b8 <col:12> 'char (*)(size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0ff668 <col:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
`-ImplicitCastExpr 0x55e83d0ff700 <col:23> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff690 <col:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B8.35]([B8.37])
  39: DeclRefExpr 0x55e83d0ff640 <sds.c:255:5> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
type
  40: BinaryOperator 0x55e83d0ff718 <sds.c:255:5, col:26> 'char' '='
|-DeclRefExpr 0x55e83d0ff640 <col:5> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
`-CallExpr 0x55e83d0ff6d0 <col:12, col:26> 'char'
  |-ImplicitCastExpr 0x55e83d0ff6b8 <col:12> 'char (*)(size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0ff668 <col:12> 'char (size_t)' Function 0x55e83d0f1f50 'sdsReqType' 'char (size_t)'
  `-ImplicitCastExpr 0x55e83d0ff700 <col:23> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0ff690 <col:23> 'size_t':'unsigned long' lvalue Var 0x55e83d0ff358 'len' 'size_t':'unsigned long'
[B8.39] = [B8.38]
  41: DeclRefExpr 0x55e83d0ff768 <sds.c:256:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
sdsHdrSize
  42: ImplicitCastExpr 0x55e83d0ff7b8 <sds.c:256:14> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d0ff768 <col:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
[B8.41] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
  43: DeclRefExpr 0x55e83d0ff790 <sds.c:256:25> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
type
  44: ImplicitCastExpr 0x55e83d0ff800 <sds.c:256:25> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff790 <col:25> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B8.43] (ImplicitCastExpr, LValueToRValue, char)
  45: CallExpr 0x55e83d0ff7d0 <sds.c:256:14, col:29> 'int'
|-ImplicitCastExpr 0x55e83d0ff7b8 <col:14> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d0ff768 <col:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
`-ImplicitCastExpr 0x55e83d0ff800 <col:25> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff790 <col:25> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B8.42]([B8.44])
  46: DeclRefExpr 0x55e83d0ff740 <sds.c:256:5> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
hdrlen
  47: BinaryOperator 0x55e83d0ff818 <sds.c:256:5, col:29> 'int' '='
|-DeclRefExpr 0x55e83d0ff740 <col:5> 'int' lvalue Var 0x55e83d0ff2d0 'hdrlen' 'int'
`-CallExpr 0x55e83d0ff7d0 <col:14, col:29> 'int'
  |-ImplicitCastExpr 0x55e83d0ff7b8 <col:14> 'int (*)(char)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d0ff768 <col:14> 'int (char)' Function 0x55e83d0f17c8 'sdsHdrSize' 'int (char)'
  `-ImplicitCastExpr 0x55e83d0ff800 <col:25> 'char' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0ff790 <col:25> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B8.46] = [B8.45]
  48: DeclRefExpr 0x55e83d0ff840 <sds.c:257:9> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
oldtype
  49: ImplicitCastExpr 0x55e83d0ff890 <sds.c:257:9> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff840 <col:9> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
[B8.48] (ImplicitCastExpr, LValueToRValue, char)
  50: ImplicitCastExpr 0x55e83d0ff8a8 <sds.c:257:9> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0ff890 <col:9> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff840 <col:9> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
[B8.49] (ImplicitCastExpr, IntegralCast, int)
  51: DeclRefExpr 0x55e83d0ff868 <sds.c:257:18> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
type
  52: ImplicitCastExpr 0x55e83d0ff8c0 <sds.c:257:18> 'char' <LValueToRValue>
`-DeclRefExpr 0x55e83d0ff868 <col:18> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B8.51] (ImplicitCastExpr, LValueToRValue, char)
  53: ImplicitCastExpr 0x55e83d0ff8d8 <sds.c:257:18> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d0ff8c0 <col:18> 'char' <LValueToRValue>
  `-DeclRefExpr 0x55e83d0ff868 <col:18> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B8.52] (ImplicitCastExpr, IntegralCast, int)
  54: BinaryOperator 0x55e83d0ff8f0 <sds.c:257:9, col:18> 'int' '=='
|-ImplicitCastExpr 0x55e83d0ff8a8 <col:9> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d0ff890 <col:9> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d0ff840 <col:9> 'char' lvalue Var 0x55e83d0ff0f0 'oldtype' 'char'
`-ImplicitCastExpr 0x55e83d0ff8d8 <col:18> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d0ff8c0 <col:18> 'char' <LValueToRValue>
    `-DeclRefExpr 0x55e83d0ff868 <col:18> 'char' lvalue Var 0x55e83d0ff080 'type' 'char'
[B8.50] == [B8.53]
   T: if [B8.54]
   Preds (1): B9
   Succs (2): B7 B4

 [B0 (EXIT)]
   Preds (3): B1 B3 B6
