static void buffreplace(LexState *ls, char from, char to)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   Preds (2): B2 B3
   Succs (1): B4

 [B2]
   1: DeclRefExpr 0x561ce7451758 <llex.c:175:30> 'char' lvalue ParmVar 0x561ce7450fd0 'to' 'char'
to
   2: ImplicitCastExpr 0x561ce7451780 <llex.c:175:30> 'char' <LValueToRValue>
`-DeclRefExpr 0x561ce7451758 <col:30> 'char' lvalue ParmVar 0x561ce7450fd0 'to' 'char'
[B2.1] (ImplicitCastExpr, LValueToRValue, char)
   3: DeclRefExpr 0x561ce74516b0 <llex.c:175:23> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
p
   4: ImplicitCastExpr 0x561ce7451700 <llex.c:175:23> 'char *' <LValueToRValue>
`-DeclRefExpr 0x561ce74516b0 <col:23> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
[B2.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x561ce74516d8 <llex.c:175:25> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
n
   6: ImplicitCastExpr 0x561ce7451718 <llex.c:175:25> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x561ce74516d8 <col:25> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
[B2.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: ArraySubscriptExpr 0x561ce7451730 <llex.c:175:23, col:26> 'char' lvalue
|-ImplicitCastExpr 0x561ce7451700 <col:23> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x561ce74516b0 <col:23> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
`-ImplicitCastExpr 0x561ce7451718 <col:25> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x561ce74516d8 <col:25> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
[B2.4][[B2.6]]
   8: BinaryOperator 0x561ce7451798 <llex.c:175:23, col:30> 'char' '='
|-ArraySubscriptExpr 0x561ce7451730 <col:23, col:26> 'char' lvalue
| |-ImplicitCastExpr 0x561ce7451700 <col:23> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x561ce74516b0 <col:23> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
| `-ImplicitCastExpr 0x561ce7451718 <col:25> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x561ce74516d8 <col:25> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x561ce7451780 <col:30> 'char' <LValueToRValue>
  `-DeclRefExpr 0x561ce7451758 <col:30> 'char' lvalue ParmVar 0x561ce7450fd0 'to' 'char'
[B2.7] = [B2.2]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x561ce7451558 <llex.c:175:9> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
p
   2: ImplicitCastExpr 0x561ce74515a8 <llex.c:175:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x561ce7451558 <col:9> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
[B3.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: DeclRefExpr 0x561ce7451580 <llex.c:175:11> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
n
   4: ImplicitCastExpr 0x561ce74515c0 <llex.c:175:11> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x561ce7451580 <col:11> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
[B3.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: ArraySubscriptExpr 0x561ce74515d8 <llex.c:175:9, col:12> 'char' lvalue
|-ImplicitCastExpr 0x561ce74515a8 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x561ce7451558 <col:9> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
`-ImplicitCastExpr 0x561ce74515c0 <col:11> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x561ce7451580 <col:11> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
[B3.2][[B3.4]]
   6: ImplicitCastExpr 0x561ce7451628 <llex.c:175:9, col:12> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x561ce74515d8 <col:9, col:12> 'char' lvalue
  |-ImplicitCastExpr 0x561ce74515a8 <col:9> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x561ce7451558 <col:9> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
  `-ImplicitCastExpr 0x561ce74515c0 <col:11> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x561ce7451580 <col:11> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
[B3.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x561ce7451640 <llex.c:175:9, col:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x561ce7451628 <col:9, col:12> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x561ce74515d8 <col:9, col:12> 'char' lvalue
    |-ImplicitCastExpr 0x561ce74515a8 <col:9> 'char *' <LValueToRValue>
    | `-DeclRefExpr 0x561ce7451558 <col:9> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
    `-ImplicitCastExpr 0x561ce74515c0 <col:11> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x561ce7451580 <col:11> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
[B3.6] (ImplicitCastExpr, IntegralCast, int)
   8: DeclRefExpr 0x561ce7451600 <llex.c:175:17> 'char' lvalue ParmVar 0x561ce7450f60 'from' 'char'
from
   9: ImplicitCastExpr 0x561ce7451658 <llex.c:175:17> 'char' <LValueToRValue>
`-DeclRefExpr 0x561ce7451600 <col:17> 'char' lvalue ParmVar 0x561ce7450f60 'from' 'char'
[B3.8] (ImplicitCastExpr, LValueToRValue, char)
  10: ImplicitCastExpr 0x561ce7451670 <llex.c:175:17> 'int' <IntegralCast>
`-ImplicitCastExpr 0x561ce7451658 <col:17> 'char' <LValueToRValue>
  `-DeclRefExpr 0x561ce7451600 <col:17> 'char' lvalue ParmVar 0x561ce7450f60 'from' 'char'
[B3.9] (ImplicitCastExpr, IntegralCast, int)
  11: BinaryOperator 0x561ce7451688 <llex.c:175:9, col:17> 'int' '=='
|-ImplicitCastExpr 0x561ce7451640 <col:9, col:12> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x561ce7451628 <col:9, col:12> 'char' <LValueToRValue>
|   `-ArraySubscriptExpr 0x561ce74515d8 <col:9, col:12> 'char' lvalue
|     |-ImplicitCastExpr 0x561ce74515a8 <col:9> 'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x561ce7451558 <col:9> 'char *' lvalue Var 0x561ce7451378 'p' 'char *'
|     `-ImplicitCastExpr 0x561ce74515c0 <col:11> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x561ce7451580 <col:11> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x561ce7451670 <col:17> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x561ce7451658 <col:17> 'char' <LValueToRValue>
    `-DeclRefExpr 0x561ce7451600 <col:17> 'char' lvalue ParmVar 0x561ce7450f60 'from' 'char'
[B3.7] == [B3.10]
   T: if [B3.11]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x561ce7451510 <llex.c:174:10> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
n
   2: UnaryOperator 0x561ce7451538 <llex.c:174:10, col:11> 'size_t':'unsigned long' postfix '--'
`-DeclRefExpr 0x561ce7451510 <col:10> 'size_t':'unsigned long' lvalue Var 0x561ce74511c8 'n' 'size_t':'unsigned long'
[B4.1]--
   T: while [B4.2]
   Preds (2): B1 B5
   Succs (2): B3 B0

 [B5]
   1: DeclRefExpr 0x561ce7451228 <llex.c:172:27> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
ls
   2: ImplicitCastExpr 0x561ce7451250 <llex.c:172:27> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7451228 <col:27> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
[B5.1] (ImplicitCastExpr, LValueToRValue, LexState *)
   3: MemberExpr 0x561ce7451268 <llex.c:172:27, col:31> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
`-ImplicitCastExpr 0x561ce7451250 <col:27> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7451228 <col:27> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
[B5.2]->buff
   4: ImplicitCastExpr 0x561ce74512c0 <./lzio.h:34:29, col:34> 'Mbuffer *' <LValueToRValue>
`-ParenExpr 0x561ce74512a0 <col:29, col:34> 'Mbuffer *' lvalue
  `-MemberExpr 0x561ce7451268 <llex.c:172:27, col:31> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
    `-ImplicitCastExpr 0x561ce7451250 <col:27> 'LexState *' <LValueToRValue>
      `-DeclRefExpr 0x561ce7451228 <col:27> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
([B5.3]) (ImplicitCastExpr, LValueToRValue, Mbuffer *)
   5: MemberExpr 0x561ce74512d8 <./lzio.h:34:29, col:37> 'size_t':'unsigned long' lvalue ->n 0x561ce7413850
`-ImplicitCastExpr 0x561ce74512c0 <col:29, col:34> 'Mbuffer *' <LValueToRValue>
  `-ParenExpr 0x561ce74512a0 <col:29, col:34> 'Mbuffer *' lvalue
    `-MemberExpr 0x561ce7451268 <llex.c:172:27, col:31> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
      `-ImplicitCastExpr 0x561ce7451250 <col:27> 'LexState *' <LValueToRValue>
        `-DeclRefExpr 0x561ce7451228 <col:27> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
[B5.4]->n
   6: ImplicitCastExpr 0x561ce7451330 <./lzio.h:34:28, col:38> 'size_t':'unsigned long' <LValueToRValue>
`-ParenExpr 0x561ce7451310 <col:28, col:38> 'size_t':'unsigned long' lvalue
  `-MemberExpr 0x561ce74512d8 <col:29, col:37> 'size_t':'unsigned long' lvalue ->n 0x561ce7413850
    `-ImplicitCastExpr 0x561ce74512c0 <col:29, col:34> 'Mbuffer *' <LValueToRValue>
      `-ParenExpr 0x561ce74512a0 <col:29, col:34> 'Mbuffer *' lvalue
        `-MemberExpr 0x561ce7451268 <llex.c:172:27, col:31> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
          `-ImplicitCastExpr 0x561ce7451250 <col:27> 'LexState *' <LValueToRValue>
            `-DeclRefExpr 0x561ce7451228 <col:27> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
([B5.5]) (ImplicitCastExpr, LValueToRValue, size_t)
   7: DeclStmt 0x561ce7451348 <llex.c:172:3, col:36>col:10
`-VarDecl 0x561ce74511c8 <col:3, ./lzio.h:34:38> llex.c:172:10 used n 'size_t':'unsigned long' cinit
  `-ImplicitCastExpr 0x561ce7451330 <./lzio.h:34:28, col:38> 'size_t':'unsigned long' <LValueToRValue>
    `-ParenExpr 0x561ce7451310 <col:28, col:38> 'size_t':'unsigned long' lvalue
      `-MemberExpr 0x561ce74512d8 <col:29, col:37> 'size_t':'unsigned long' lvalue ->n 0x561ce7413850
        `-ImplicitCastExpr 0x561ce74512c0 <col:29, col:34> 'Mbuffer *' <LValueToRValue>
          `-ParenExpr 0x561ce74512a0 <col:29, col:34> 'Mbuffer *' lvalue
            `-MemberExpr 0x561ce7451268 <llex.c:172:27, col:31> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
              `-ImplicitCastExpr 0x561ce7451250 <col:27> 'LexState *' <LValueToRValue>
                `-DeclRefExpr 0x561ce7451228 <col:27> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
size_t n = ((ls->buff)->n);
   8: DeclRefExpr 0x561ce74513d8 <llex.c:173:25> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
ls
   9: ImplicitCastExpr 0x561ce7451400 <llex.c:173:25> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce74513d8 <col:25> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
[B5.8] (ImplicitCastExpr, LValueToRValue, LexState *)
  10: MemberExpr 0x561ce7451418 <llex.c:173:25, col:29> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
`-ImplicitCastExpr 0x561ce7451400 <col:25> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce74513d8 <col:25> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
[B5.9]->buff
  11: ImplicitCastExpr 0x561ce7451470 <./lzio.h:32:28, col:33> 'Mbuffer *' <LValueToRValue>
`-ParenExpr 0x561ce7451450 <col:28, col:33> 'Mbuffer *' lvalue
  `-MemberExpr 0x561ce7451418 <llex.c:173:25, col:29> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
    `-ImplicitCastExpr 0x561ce7451400 <col:25> 'LexState *' <LValueToRValue>
      `-DeclRefExpr 0x561ce74513d8 <col:25> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
([B5.10]) (ImplicitCastExpr, LValueToRValue, Mbuffer *)
  12: MemberExpr 0x561ce7451488 <./lzio.h:32:28, col:36> 'char *' lvalue ->buffer 0x561ce74137f8
`-ImplicitCastExpr 0x561ce7451470 <col:28, col:33> 'Mbuffer *' <LValueToRValue>
  `-ParenExpr 0x561ce7451450 <col:28, col:33> 'Mbuffer *' lvalue
    `-MemberExpr 0x561ce7451418 <llex.c:173:25, col:29> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
      `-ImplicitCastExpr 0x561ce7451400 <col:25> 'LexState *' <LValueToRValue>
        `-DeclRefExpr 0x561ce74513d8 <col:25> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
[B5.11]->buffer
  13: ImplicitCastExpr 0x561ce74514e0 <./lzio.h:32:27, col:42> 'char *' <LValueToRValue>
`-ParenExpr 0x561ce74514c0 <col:27, col:42> 'char *' lvalue
  `-MemberExpr 0x561ce7451488 <col:28, col:36> 'char *' lvalue ->buffer 0x561ce74137f8
    `-ImplicitCastExpr 0x561ce7451470 <col:28, col:33> 'Mbuffer *' <LValueToRValue>
      `-ParenExpr 0x561ce7451450 <col:28, col:33> 'Mbuffer *' lvalue
        `-MemberExpr 0x561ce7451418 <llex.c:173:25, col:29> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
          `-ImplicitCastExpr 0x561ce7451400 <col:25> 'LexState *' <LValueToRValue>
            `-DeclRefExpr 0x561ce74513d8 <col:25> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
([B5.12]) (ImplicitCastExpr, LValueToRValue, char *)
  14: DeclStmt 0x561ce74514f8 <llex.c:173:3, col:34>col:9
`-VarDecl 0x561ce7451378 <col:3, ./lzio.h:32:42> llex.c:173:9 used p 'char *' cinit
  `-ImplicitCastExpr 0x561ce74514e0 <./lzio.h:32:27, col:42> 'char *' <LValueToRValue>
    `-ParenExpr 0x561ce74514c0 <col:27, col:42> 'char *' lvalue
      `-MemberExpr 0x561ce7451488 <col:28, col:36> 'char *' lvalue ->buffer 0x561ce74137f8
        `-ImplicitCastExpr 0x561ce7451470 <col:28, col:33> 'Mbuffer *' <LValueToRValue>
          `-ParenExpr 0x561ce7451450 <col:28, col:33> 'Mbuffer *' lvalue
            `-MemberExpr 0x561ce7451418 <llex.c:173:25, col:29> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
              `-ImplicitCastExpr 0x561ce7451400 <col:25> 'LexState *' <LValueToRValue>
                `-DeclRefExpr 0x561ce74513d8 <col:25> 'LexState *' lvalue ParmVar 0x561ce7450ef0 'ls' 'LexState *'
char *p = ((ls->buff)->buffer);
   Preds (1): B6
   Succs (1): B4

 [B0 (EXIT)]
   Preds (1): B4
