static BinOpr getbinopr(int op)
 [B18 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x558fa8f25b28 <lparser.c:789:11> 'int' lvalue ParmVar 0x558fa8f25978 'op' 'int'
op
   2: ImplicitCastExpr 0x558fa8f25b50 <lparser.c:789:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8f25b28 <col:11> 'int' lvalue ParmVar 0x558fa8f25978 'op' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B1.2]
   Preds (1): B18
   Succs (16): B3 B4 B5 B6 B7 B8 B9 B10
     B11 B12 B13 B14 B15 B16 B17 B2

 [B2]
  default:
   1: DeclRefExpr 0x558fa8f265e0 <lparser.c:805:21> 'int' EnumConstant 0x558fa8eb78c8 'OPR_NOBINOPR' 'int'
OPR_NOBINOPR
   2: ImplicitCastExpr 0x558fa8f26608 <lparser.c:805:21> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f265e0 <col:21> 'int' EnumConstant 0x558fa8eb78c8 'OPR_NOBINOPR' 'int'
[B2.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f26620 <lparser.c:805:14, col:21>
`-ImplicitCastExpr 0x558fa8f26608 <col:21> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f265e0 <col:21> 'int' EnumConstant 0x558fa8eb78c8 'OPR_NOBINOPR' 'int'
return [B2.2];
   Preds (1): B1
   Succs (1): B0

 [B3]
  case TK_OR:
   1: DeclRefExpr 0x558fa8f26588 <lparser.c:804:24> 'int' EnumConstant 0x558fa8eb7880 'OPR_OR' 'int'
OPR_OR
   2: ImplicitCastExpr 0x558fa8f265b0 <lparser.c:804:24> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f26588 <col:24> 'int' EnumConstant 0x558fa8eb7880 'OPR_OR' 'int'
[B3.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f265c8 <lparser.c:804:17, col:24>
`-ImplicitCastExpr 0x558fa8f265b0 <col:24> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f26588 <col:24> 'int' EnumConstant 0x558fa8eb7880 'OPR_OR' 'int'
return [B3.2];
   Preds (1): B1
   Succs (1): B0

 [B4]
  case TK_AND:
   1: DeclRefExpr 0x558fa8f264d0 <lparser.c:803:25> 'int' EnumConstant 0x558fa8eb7838 'OPR_AND' 'int'
OPR_AND
   2: ImplicitCastExpr 0x558fa8f264f8 <lparser.c:803:25> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f264d0 <col:25> 'int' EnumConstant 0x558fa8eb7838 'OPR_AND' 'int'
[B4.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f26510 <lparser.c:803:18, col:25>
`-ImplicitCastExpr 0x558fa8f264f8 <col:25> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f264d0 <col:25> 'int' EnumConstant 0x558fa8eb7838 'OPR_AND' 'int'
return [B4.2];
   Preds (1): B1
   Succs (1): B0

 [B5]
  case TK_GE:
   1: DeclRefExpr 0x558fa8f26418 <lparser.c:802:24> 'int' EnumConstant 0x558fa8eb77f0 'OPR_GE' 'int'
OPR_GE
   2: ImplicitCastExpr 0x558fa8f26440 <lparser.c:802:24> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f26418 <col:24> 'int' EnumConstant 0x558fa8eb77f0 'OPR_GE' 'int'
[B5.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f26458 <lparser.c:802:17, col:24>
`-ImplicitCastExpr 0x558fa8f26440 <col:24> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f26418 <col:24> 'int' EnumConstant 0x558fa8eb77f0 'OPR_GE' 'int'
return [B5.2];
   Preds (1): B1
   Succs (1): B0

 [B6]
  case '>':
   1: DeclRefExpr 0x558fa8f26360 <lparser.c:801:22> 'int' EnumConstant 0x558fa8eb77a8 'OPR_GT' 'int'
OPR_GT
   2: ImplicitCastExpr 0x558fa8f26388 <lparser.c:801:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f26360 <col:22> 'int' EnumConstant 0x558fa8eb77a8 'OPR_GT' 'int'
[B6.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f263a0 <lparser.c:801:15, col:22>
`-ImplicitCastExpr 0x558fa8f26388 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f26360 <col:22> 'int' EnumConstant 0x558fa8eb77a8 'OPR_GT' 'int'
return [B6.2];
   Preds (1): B1
   Succs (1): B0

 [B7]
  case TK_LE:
   1: DeclRefExpr 0x558fa8f262b8 <lparser.c:800:24> 'int' EnumConstant 0x558fa8eb7760 'OPR_LE' 'int'
OPR_LE
   2: ImplicitCastExpr 0x558fa8f262e0 <lparser.c:800:24> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f262b8 <col:24> 'int' EnumConstant 0x558fa8eb7760 'OPR_LE' 'int'
[B7.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f262f8 <lparser.c:800:17, col:24>
`-ImplicitCastExpr 0x558fa8f262e0 <col:24> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f262b8 <col:24> 'int' EnumConstant 0x558fa8eb7760 'OPR_LE' 'int'
return [B7.2];
   Preds (1): B1
   Succs (1): B0

 [B8]
  case '<':
   1: DeclRefExpr 0x558fa8f26200 <lparser.c:799:22> 'int' EnumConstant 0x558fa8eb7718 'OPR_LT' 'int'
OPR_LT
   2: ImplicitCastExpr 0x558fa8f26228 <lparser.c:799:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f26200 <col:22> 'int' EnumConstant 0x558fa8eb7718 'OPR_LT' 'int'
[B8.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f26240 <lparser.c:799:15, col:22>
`-ImplicitCastExpr 0x558fa8f26228 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f26200 <col:22> 'int' EnumConstant 0x558fa8eb7718 'OPR_LT' 'int'
return [B8.2];
   Preds (1): B1
   Succs (1): B0

 [B9]
  case TK_EQ:
   1: DeclRefExpr 0x558fa8f26158 <lparser.c:798:24> 'int' EnumConstant 0x558fa8eb76d0 'OPR_EQ' 'int'
OPR_EQ
   2: ImplicitCastExpr 0x558fa8f26180 <lparser.c:798:24> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f26158 <col:24> 'int' EnumConstant 0x558fa8eb76d0 'OPR_EQ' 'int'
[B9.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f26198 <lparser.c:798:17, col:24>
`-ImplicitCastExpr 0x558fa8f26180 <col:24> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f26158 <col:24> 'int' EnumConstant 0x558fa8eb76d0 'OPR_EQ' 'int'
return [B9.2];
   Preds (1): B1
   Succs (1): B0

 [B10]
  case TK_NE:
   1: DeclRefExpr 0x558fa8f260a0 <lparser.c:797:24> 'int' EnumConstant 0x558fa8eb7688 'OPR_NE' 'int'
OPR_NE
   2: ImplicitCastExpr 0x558fa8f260c8 <lparser.c:797:24> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f260a0 <col:24> 'int' EnumConstant 0x558fa8eb7688 'OPR_NE' 'int'
[B10.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f260e0 <lparser.c:797:17, col:24>
`-ImplicitCastExpr 0x558fa8f260c8 <col:24> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f260a0 <col:24> 'int' EnumConstant 0x558fa8eb7688 'OPR_NE' 'int'
return [B10.2];
   Preds (1): B1
   Succs (1): B0

 [B11]
  case TK_CONCAT:
   1: DeclRefExpr 0x558fa8f25fe8 <lparser.c:796:28> 'int' EnumConstant 0x558fa8eb7640 'OPR_CONCAT' 'int'
OPR_CONCAT
   2: ImplicitCastExpr 0x558fa8f26010 <lparser.c:796:28> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f25fe8 <col:28> 'int' EnumConstant 0x558fa8eb7640 'OPR_CONCAT' 'int'
[B11.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f26028 <lparser.c:796:21, col:28>
`-ImplicitCastExpr 0x558fa8f26010 <col:28> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f25fe8 <col:28> 'int' EnumConstant 0x558fa8eb7640 'OPR_CONCAT' 'int'
return [B11.2];
   Preds (1): B1
   Succs (1): B0

 [B12]
  case '^':
   1: DeclRefExpr 0x558fa8f25f30 <lparser.c:795:22> 'int' EnumConstant 0x558fa8eb75f8 'OPR_POW' 'int'
OPR_POW
   2: ImplicitCastExpr 0x558fa8f25f58 <lparser.c:795:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f25f30 <col:22> 'int' EnumConstant 0x558fa8eb75f8 'OPR_POW' 'int'
[B12.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f25f70 <lparser.c:795:15, col:22>
`-ImplicitCastExpr 0x558fa8f25f58 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f25f30 <col:22> 'int' EnumConstant 0x558fa8eb75f8 'OPR_POW' 'int'
return [B12.2];
   Preds (1): B1
   Succs (1): B0

 [B13]
  case '%':
   1: DeclRefExpr 0x558fa8f25e88 <lparser.c:794:22> 'int' EnumConstant 0x558fa8eb75b0 'OPR_MOD' 'int'
OPR_MOD
   2: ImplicitCastExpr 0x558fa8f25eb0 <lparser.c:794:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f25e88 <col:22> 'int' EnumConstant 0x558fa8eb75b0 'OPR_MOD' 'int'
[B13.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f25ec8 <lparser.c:794:15, col:22>
`-ImplicitCastExpr 0x558fa8f25eb0 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f25e88 <col:22> 'int' EnumConstant 0x558fa8eb75b0 'OPR_MOD' 'int'
return [B13.2];
   Preds (1): B1
   Succs (1): B0

 [B14]
  case '/':
   1: DeclRefExpr 0x558fa8f25de0 <lparser.c:793:22> 'int' EnumConstant 0x558fa8eb7568 'OPR_DIV' 'int'
OPR_DIV
   2: ImplicitCastExpr 0x558fa8f25e08 <lparser.c:793:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f25de0 <col:22> 'int' EnumConstant 0x558fa8eb7568 'OPR_DIV' 'int'
[B14.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f25e20 <lparser.c:793:15, col:22>
`-ImplicitCastExpr 0x558fa8f25e08 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f25de0 <col:22> 'int' EnumConstant 0x558fa8eb7568 'OPR_DIV' 'int'
return [B14.2];
   Preds (1): B1
   Succs (1): B0

 [B15]
  case '*':
   1: DeclRefExpr 0x558fa8f25d38 <lparser.c:792:22> 'int' EnumConstant 0x558fa8eb7520 'OPR_MUL' 'int'
OPR_MUL
   2: ImplicitCastExpr 0x558fa8f25d60 <lparser.c:792:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f25d38 <col:22> 'int' EnumConstant 0x558fa8eb7520 'OPR_MUL' 'int'
[B15.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f25d78 <lparser.c:792:15, col:22>
`-ImplicitCastExpr 0x558fa8f25d60 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f25d38 <col:22> 'int' EnumConstant 0x558fa8eb7520 'OPR_MUL' 'int'
return [B15.2];
   Preds (1): B1
   Succs (1): B0

 [B16]
  case '-':
   1: DeclRefExpr 0x558fa8f25c90 <lparser.c:791:22> 'int' EnumConstant 0x558fa8eb74d8 'OPR_SUB' 'int'
OPR_SUB
   2: ImplicitCastExpr 0x558fa8f25cb8 <lparser.c:791:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f25c90 <col:22> 'int' EnumConstant 0x558fa8eb74d8 'OPR_SUB' 'int'
[B16.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f25cd0 <lparser.c:791:15, col:22>
`-ImplicitCastExpr 0x558fa8f25cb8 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f25c90 <col:22> 'int' EnumConstant 0x558fa8eb74d8 'OPR_SUB' 'int'
return [B16.2];
   Preds (1): B1
   Succs (1): B0

 [B17]
  case '+':
   1: DeclRefExpr 0x558fa8f25be8 <lparser.c:790:22> 'int' EnumConstant 0x558fa8eb7490 'OPR_ADD' 'int'
OPR_ADD
   2: ImplicitCastExpr 0x558fa8f25c10 <lparser.c:790:22> 'BinOpr':'enum BinOpr' <IntegralCast>
`-DeclRefExpr 0x558fa8f25be8 <col:22> 'int' EnumConstant 0x558fa8eb7490 'OPR_ADD' 'int'
[B17.1] (ImplicitCastExpr, IntegralCast, BinOpr)
   3: ReturnStmt 0x558fa8f25c28 <lparser.c:790:15, col:22>
`-ImplicitCastExpr 0x558fa8f25c10 <col:22> 'BinOpr':'enum BinOpr' <IntegralCast>
  `-DeclRefExpr 0x558fa8f25be8 <col:22> 'int' EnumConstant 0x558fa8eb7490 'OPR_ADD' 'int'
return [B17.2];
   Preds (1): B1
   Succs (1): B0

 [B0 (EXIT)]
   Preds (16): B2 B3 B4 B5 B6 B7 B8 B9
      B10 B11 B12 B13 B14 B15 B16 B17
