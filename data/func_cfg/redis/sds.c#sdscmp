int sdscmp(const sds s1, const sds s2)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x55e83d11cde8 <sds.c:785:12> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
cmp
   2: ImplicitCastExpr 0x55e83d11ce10 <sds.c:785:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11cde8 <col:12> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x55e83d11ce28 <sds.c:785:5, col:12>
`-ImplicitCastExpr 0x55e83d11ce10 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11cde8 <col:12> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
return [B1.2];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d11ccd8 <sds.c:784:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
l1
   2: ImplicitCastExpr 0x55e83d11cd28 <sds.c:784:26> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d11ccd8 <col:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
[B2.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x55e83d11cd00 <sds.c:784:29> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
l2
   4: ImplicitCastExpr 0x55e83d11cd40 <sds.c:784:29> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d11cd00 <col:29> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
[B2.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: BinaryOperator 0x55e83d11cd58 <sds.c:784:26, col:29> 'unsigned long' '-'
|-ImplicitCastExpr 0x55e83d11cd28 <col:26> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11ccd8 <col:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d11cd40 <col:29> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11cd00 <col:29> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
[B2.2] - [B2.4]
   6: ImplicitCastExpr 0x55e83d11cd80 <sds.c:784:26, col:29> 'int' <IntegralCast>
`-BinaryOperator 0x55e83d11cd58 <col:26, col:29> 'unsigned long' '-'
  |-ImplicitCastExpr 0x55e83d11cd28 <col:26> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d11ccd8 <col:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d11cd40 <col:29> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11cd00 <col:29> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
[B2.5] (ImplicitCastExpr, IntegralCast, int)
   7: ReturnStmt 0x55e83d11cd98 <sds.c:784:19, col:29>
`-ImplicitCastExpr 0x55e83d11cd80 <col:26, col:29> 'int' <IntegralCast>
  `-BinaryOperator 0x55e83d11cd58 <col:26, col:29> 'unsigned long' '-'
    |-ImplicitCastExpr 0x55e83d11cd28 <col:26> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d11ccd8 <col:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d11cd40 <col:29> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55e83d11cd00 <col:29> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
return [B2.6];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: ConditionalOperator 0x55e83d11c9c8 <sds.c:782:14, col:31> 'unsigned long'
|-ParenExpr 0x55e83d11c928 <col:14, col:22> 'int'
| `-BinaryOperator 0x55e83d11c900 <col:15, col:20> 'int' '<'
|   |-ImplicitCastExpr 0x55e83d11c8d0 <col:15> 'size_t':'unsigned long' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d11c880 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
|   `-ImplicitCastExpr 0x55e83d11c8e8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d11c8a8 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d11c998 <col:26> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11c948 <col:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d11c9b0 <col:31> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11c970 <col:31> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
([B6.23]) ? [B4.2] : [B5.2]
   2: DeclRefExpr 0x55e83d11c858 <sds.c:782:5> 'size_t':'unsigned long' lvalue Var 0x55e83d11c530 'minlen' 'size_t':'unsigned long'
minlen
   3: BinaryOperator 0x55e83d11c9f8 <sds.c:782:5, col:31> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d11c858 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d11c530 'minlen' 'size_t':'unsigned long'
`-ConditionalOperator 0x55e83d11c9c8 <col:14, col:31> 'unsigned long'
  |-ParenExpr 0x55e83d11c928 <col:14, col:22> 'int'
  | `-BinaryOperator 0x55e83d11c900 <col:15, col:20> 'int' '<'
  |   |-ImplicitCastExpr 0x55e83d11c8d0 <col:15> 'size_t':'unsigned long' <LValueToRValue>
  |   | `-DeclRefExpr 0x55e83d11c880 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
  |   `-ImplicitCastExpr 0x55e83d11c8e8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
  |     `-DeclRefExpr 0x55e83d11c8a8 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55e83d11c998 <col:26> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d11c948 <col:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d11c9b0 <col:31> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11c970 <col:31> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
[B3.2] = [B3.1]
   4: DeclRefExpr 0x55e83d11ca48 <sds.c:783:11> 'int (const void *, const void *, unsigned long)' Function 0x55e83d0aad60 'memcmp' 'int (const void *, const void *, unsigned long)'
memcmp
   5: ImplicitCastExpr 0x55e83d11cb58 <sds.c:783:11> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d11ca48 <col:11> 'int (const void *, const void *, unsigned long)' Function 0x55e83d0aad60 'memcmp' 'int (const void *, const void *, unsigned long)'
[B3.4] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const void *, const void *, unsigned long))
   6: DeclRefExpr 0x55e83d11ca70 <sds.c:783:18> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
s1
   7: ImplicitCastExpr 0x55e83d11cbb0 <sds.c:783:18> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11ca70 <col:18> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
[B3.6] (ImplicitCastExpr, LValueToRValue, sds)
   8: ImplicitCastExpr 0x55e83d11cbc8 <sds.c:783:18> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d11cbb0 <col:18> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11ca70 <col:18> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
[B3.7] (ImplicitCastExpr, BitCast, const void *)
   9: DeclRefExpr 0x55e83d11ca98 <sds.c:783:21> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
s2
  10: ImplicitCastExpr 0x55e83d11cbe0 <sds.c:783:21> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11ca98 <col:21> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
[B3.9] (ImplicitCastExpr, LValueToRValue, sds)
  11: ImplicitCastExpr 0x55e83d11cbf8 <sds.c:783:21> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d11cbe0 <col:21> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11ca98 <col:21> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
[B3.10] (ImplicitCastExpr, BitCast, const void *)
  12: DeclRefExpr 0x55e83d11cac0 <sds.c:783:24> 'size_t':'unsigned long' lvalue Var 0x55e83d11c530 'minlen' 'size_t':'unsigned long'
minlen
  13: ImplicitCastExpr 0x55e83d11cc10 <sds.c:783:24> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d11cac0 <col:24> 'size_t':'unsigned long' lvalue Var 0x55e83d11c530 'minlen' 'size_t':'unsigned long'
[B3.12] (ImplicitCastExpr, LValueToRValue, size_t)
  14: CallExpr 0x55e83d11cb70 <sds.c:783:11, col:30> 'int'
|-ImplicitCastExpr 0x55e83d11cb58 <col:11> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d11ca48 <col:11> 'int (const void *, const void *, unsigned long)' Function 0x55e83d0aad60 'memcmp' 'int (const void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d11cbc8 <col:18> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d11cbb0 <col:18> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d11ca70 <col:18> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
|-ImplicitCastExpr 0x55e83d11cbf8 <col:21> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d11cbe0 <col:21> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d11ca98 <col:21> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
`-ImplicitCastExpr 0x55e83d11cc10 <col:24> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11cac0 <col:24> 'size_t':'unsigned long' lvalue Var 0x55e83d11c530 'minlen' 'size_t':'unsigned long'
[B3.5]([B3.8], [B3.11], [B3.13])
  15: DeclRefExpr 0x55e83d11ca20 <sds.c:783:5> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
cmp
  16: BinaryOperator 0x55e83d11cc28 <sds.c:783:5, col:30> 'int' '='
|-DeclRefExpr 0x55e83d11ca20 <col:5> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
`-CallExpr 0x55e83d11cb70 <col:11, col:30> 'int'
  |-ImplicitCastExpr 0x55e83d11cb58 <col:11> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d11ca48 <col:11> 'int (const void *, const void *, unsigned long)' Function 0x55e83d0aad60 'memcmp' 'int (const void *, const void *, unsigned long)'
  |-ImplicitCastExpr 0x55e83d11cbc8 <col:18> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d11cbb0 <col:18> 'sds':'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d11ca70 <col:18> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
  |-ImplicitCastExpr 0x55e83d11cbf8 <col:21> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d11cbe0 <col:21> 'sds':'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d11ca98 <col:21> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
  `-ImplicitCastExpr 0x55e83d11cc10 <col:24> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11cac0 <col:24> 'size_t':'unsigned long' lvalue Var 0x55e83d11c530 'minlen' 'size_t':'unsigned long'
[B3.15] = [B3.14]
  17: DeclRefExpr 0x55e83d11cc50 <sds.c:784:9> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
cmp
  18: ImplicitCastExpr 0x55e83d11cc98 <sds.c:784:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11cc50 <col:9> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
[B3.17] (ImplicitCastExpr, LValueToRValue, int)
  19: IntegerLiteral 0x55e83d11cc78 <sds.c:784:16> 'int' 0
0
  20: BinaryOperator 0x55e83d11ccb0 <sds.c:784:9, col:16> 'int' '=='
|-ImplicitCastExpr 0x55e83d11cc98 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11cc50 <col:9> 'int' lvalue Var 0x55e83d11c5e0 'cmp' 'int'
`-IntegerLiteral 0x55e83d11cc78 <col:16> 'int' 0
[B3.18] == [B3.19]
   T: if [B3.20]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55e83d11c948 <sds.c:782:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
l1
   2: ImplicitCastExpr 0x55e83d11c998 <sds.c:782:26> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d11c948 <col:26> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
[B4.1] (ImplicitCastExpr, LValueToRValue, size_t)
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x55e83d11c970 <sds.c:782:31> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
l2
   2: ImplicitCastExpr 0x55e83d11c9b0 <sds.c:782:31> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d11c970 <col:31> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
[B5.1] (ImplicitCastExpr, LValueToRValue, size_t)
   Preds (1): B6
   Succs (1): B3

 [B6]
   1: DeclStmt 0x55e83d134a28 <sds.c:777:12>col:12
`-VarDecl 0x55e83d11c428 <col:5, col:12> col:12 used l1 'size_t':'unsigned long'
size_t l1;
   2: DeclStmt 0x55e83d134a10 <sds.c:777:16>col:16
`-VarDecl 0x55e83d11c498 <col:5, col:16> col:16 used l2 'size_t':'unsigned long'
size_t l2;
   3: DeclStmt 0x55e83d1349f8 <sds.c:777:20>col:20
`-VarDecl 0x55e83d11c530 <col:5, col:20> col:20 used minlen 'size_t':'unsigned long'
size_t minlen;
   4: DeclStmt 0x55e83d11c640 <sds.c:778:5, col:12>col:9
`-VarDecl 0x55e83d11c5e0 <col:5, col:9> col:9 used cmp 'int'
int cmp;
   5: DeclRefExpr 0x55e83d11c680 <sds.c:780:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
   6: ImplicitCastExpr 0x55e83d11c6d0 <sds.c:780:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d11c680 <col:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B6.5] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   7: DeclRefExpr 0x55e83d11c6a8 <sds.c:780:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
s1
   8: ImplicitCastExpr 0x55e83d11c718 <sds.c:780:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11c6a8 <col:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
[B6.7] (ImplicitCastExpr, LValueToRValue, sds)
   9: CallExpr 0x55e83d11c6e8 <sds.c:780:10, col:19> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d11c6d0 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d11c680 <col:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d11c718 <col:17> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11c6a8 <col:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
[B6.6]([B6.8])
  10: DeclRefExpr 0x55e83d11c658 <sds.c:780:5> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
l1
  11: BinaryOperator 0x55e83d11c730 <sds.c:780:5, col:19> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d11c658 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
`-CallExpr 0x55e83d11c6e8 <col:10, col:19> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55e83d11c6d0 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d11c680 <col:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
  `-ImplicitCastExpr 0x55e83d11c718 <col:17> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11c6a8 <col:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c260 's1' 'const sds':'char *const'
[B6.10] = [B6.9]
  12: DeclRefExpr 0x55e83d11c780 <sds.c:781:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
  13: ImplicitCastExpr 0x55e83d11c7d0 <sds.c:781:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d11c780 <col:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B6.12] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
  14: DeclRefExpr 0x55e83d11c7a8 <sds.c:781:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
s2
  15: ImplicitCastExpr 0x55e83d11c818 <sds.c:781:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11c7a8 <col:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
[B6.14] (ImplicitCastExpr, LValueToRValue, sds)
  16: CallExpr 0x55e83d11c7e8 <sds.c:781:10, col:19> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d11c7d0 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d11c780 <col:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d11c818 <col:17> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11c7a8 <col:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
[B6.13]([B6.15])
  17: DeclRefExpr 0x55e83d11c758 <sds.c:781:5> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
l2
  18: BinaryOperator 0x55e83d11c830 <sds.c:781:5, col:19> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d11c758 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
`-CallExpr 0x55e83d11c7e8 <col:10, col:19> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55e83d11c7d0 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d11c780 <col:10> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
  `-ImplicitCastExpr 0x55e83d11c818 <col:17> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11c7a8 <col:17> 'const sds':'char *const' lvalue ParmVar 0x55e83d11c2d0 's2' 'const sds':'char *const'
[B6.17] = [B6.16]
  19: DeclRefExpr 0x55e83d11c880 <sds.c:782:15> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
l1
  20: ImplicitCastExpr 0x55e83d11c8d0 <sds.c:782:15> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d11c880 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
[B6.19] (ImplicitCastExpr, LValueToRValue, size_t)
  21: DeclRefExpr 0x55e83d11c8a8 <sds.c:782:20> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
l2
  22: ImplicitCastExpr 0x55e83d11c8e8 <sds.c:782:20> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d11c8a8 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
[B6.21] (ImplicitCastExpr, LValueToRValue, size_t)
  23: BinaryOperator 0x55e83d11c900 <sds.c:782:15, col:20> 'int' '<'
|-ImplicitCastExpr 0x55e83d11c8d0 <col:15> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11c880 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d11c428 'l1' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d11c8e8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11c8a8 <col:20> 'size_t':'unsigned long' lvalue Var 0x55e83d11c498 'l2' 'size_t':'unsigned long'
[B6.20] < [B6.22]
   T: ([B6.23]) ? ... : ...
   Preds (1): B7
   Succs (2): B4 B5

 [B0 (EXIT)]
   Preds (2): B1 B2
