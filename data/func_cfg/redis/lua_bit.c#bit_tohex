static int bit_tohex(lua_State *L)
 [B13 (ENTRY)]
   Succs (1): B12

 [B1]
   1: DeclRefExpr 0x5567d0ddb4d8 <lua_bit.c:137:3> 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)' Function 0x5567d0d6bbf8 'lua_pushlstring' 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)'
lua_pushlstring
   2: ImplicitCastExpr 0x5567d0ddb628 <lua_bit.c:137:3> 'void (*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5567d0ddb4d8 <col:3> 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)' Function 0x5567d0d6bbf8 'lua_pushlstring' 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, size_t))
   3: DeclRefExpr 0x5567d0ddb500 <lua_bit.c:137:19> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5567d0ddb680 <lua_bit.c:137:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddb500 <col:19> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5567d0ddb528 <lua_bit.c:137:22> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
buf
   6: ImplicitCastExpr 0x5567d0ddb698 <lua_bit.c:137:22> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5567d0ddb528 <col:22> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5567d0ddb6b0 <lua_bit.c:137:22> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5567d0ddb698 <col:22> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x5567d0ddb528 <col:22> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x5567d0ddb550 <lua_bit.c:137:35> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
n
   9: ImplicitCastExpr 0x5567d0ddb588 <lua_bit.c:137:35> 'SBits':'int' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddb550 <col:35> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B1.8] (ImplicitCastExpr, LValueToRValue, SBits)
  10: CStyleCastExpr 0x5567d0ddb5a0 <lua_bit.c:137:27, col:35> 'size_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x5567d0ddb588 <col:35> 'SBits':'int' <LValueToRValue>
  `-DeclRefExpr 0x5567d0ddb550 <col:35> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
(size_t)[B1.9] (CStyleCastExpr, IntegralCast, size_t)
  11: CallExpr 0x5567d0ddb640 <lua_bit.c:137:3, col:36> 'void'
|-ImplicitCastExpr 0x5567d0ddb628 <col:3> 'void (*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5567d0ddb4d8 <col:3> 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)' Function 0x5567d0d6bbf8 'lua_pushlstring' 'void (lua_State *, const char *, size_t)':'void (lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x5567d0ddb680 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5567d0ddb500 <col:19> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
|-ImplicitCastExpr 0x5567d0ddb6b0 <col:22> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5567d0ddb698 <col:22> 'char *' <ArrayToPointerDecay>
|   `-DeclRefExpr 0x5567d0ddb528 <col:22> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
`-CStyleCastExpr 0x5567d0ddb5a0 <col:27, col:35> 'size_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x5567d0ddb588 <col:35> 'SBits':'int' <LValueToRValue>
    `-DeclRefExpr 0x5567d0ddb550 <col:35> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B1.2]([B1.4], [B1.7], [B1.10])
  12: IntegerLiteral 0x5567d0ddb6c8 <lua_bit.c:138:10> 'int' 1
1
  13: ReturnStmt 0x5567d0ddb6e8 <lua_bit.c:138:3, col:10>
`-IntegerLiteral 0x5567d0ddb6c8 <col:10> 'int' 1
return [B1.12];
   Preds (1): B4
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: DeclRefExpr 0x5567d0ddb2a0 <lua_bit.c:136:43> 'const char *' lvalue Var 0x5567d0ddaaa8 'hexdigits' 'const char *'
hexdigits
   2: ImplicitCastExpr 0x5567d0ddb368 <lua_bit.c:136:43> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddb2a0 <col:43> 'const char *' lvalue Var 0x5567d0ddaaa8 'hexdigits' 'const char *'
[B3.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x5567d0ddb2c8 <lua_bit.c:136:53> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
b
   4: ImplicitCastExpr 0x5567d0ddb310 <lua_bit.c:136:53> 'UBits':'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddb2c8 <col:53> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
[B3.3] (ImplicitCastExpr, LValueToRValue, UBits)
   5: IntegerLiteral 0x5567d0ddb2f0 <lua_bit.c:136:57> 'int' 15
15
   6: ImplicitCastExpr 0x5567d0ddb328 <lua_bit.c:136:57> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5567d0ddb2f0 <col:57> 'int' 15
[B3.5] (ImplicitCastExpr, IntegralCast, unsigned int)
   7: BinaryOperator 0x5567d0ddb340 <lua_bit.c:136:53, col:57> 'unsigned int' '&'
|-ImplicitCastExpr 0x5567d0ddb310 <col:53> 'UBits':'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x5567d0ddb2c8 <col:53> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
`-ImplicitCastExpr 0x5567d0ddb328 <col:57> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5567d0ddb2f0 <col:57> 'int' 15
[B3.4] & [B3.6]
   8: ArraySubscriptExpr 0x5567d0ddb380 <lua_bit.c:136:43, col:59> 'const char' lvalue
|-ImplicitCastExpr 0x5567d0ddb368 <col:43> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x5567d0ddb2a0 <col:43> 'const char *' lvalue Var 0x5567d0ddaaa8 'hexdigits' 'const char *'
`-BinaryOperator 0x5567d0ddb340 <col:53, col:57> 'unsigned int' '&'
  |-ImplicitCastExpr 0x5567d0ddb310 <col:53> 'UBits':'unsigned int' <LValueToRValue>
  | `-DeclRefExpr 0x5567d0ddb2c8 <col:53> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
  `-ImplicitCastExpr 0x5567d0ddb328 <col:57> 'unsigned int' <IntegralCast>
    `-IntegerLiteral 0x5567d0ddb2f0 <col:57> 'int' 15
[B3.2][[B3.7]]
   9: ImplicitCastExpr 0x5567d0ddb3a8 <lua_bit.c:136:43, col:59> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x5567d0ddb380 <col:43, col:59> 'const char' lvalue
  |-ImplicitCastExpr 0x5567d0ddb368 <col:43> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x5567d0ddb2a0 <col:43> 'const char *' lvalue Var 0x5567d0ddaaa8 'hexdigits' 'const char *'
  `-BinaryOperator 0x5567d0ddb340 <col:53, col:57> 'unsigned int' '&'
    |-ImplicitCastExpr 0x5567d0ddb310 <col:53> 'UBits':'unsigned int' <LValueToRValue>
    | `-DeclRefExpr 0x5567d0ddb2c8 <col:53> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
    `-ImplicitCastExpr 0x5567d0ddb328 <col:57> 'unsigned int' <IntegralCast>
      `-IntegerLiteral 0x5567d0ddb2f0 <col:57> 'int' 15
[B3.8] (ImplicitCastExpr, LValueToRValue, char)
  10: DeclRefExpr 0x5567d0ddb1f8 <lua_bit.c:136:34> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
buf
  11: ImplicitCastExpr 0x5567d0ddb248 <lua_bit.c:136:34> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5567d0ddb1f8 <col:34> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
[B3.10] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  12: DeclRefExpr 0x5567d0ddb220 <lua_bit.c:136:38> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
i
  13: ImplicitCastExpr 0x5567d0ddb260 <lua_bit.c:136:38> 'int' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddb220 <col:38> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
[B3.12] (ImplicitCastExpr, LValueToRValue, int)
  14: ArraySubscriptExpr 0x5567d0ddb278 <lua_bit.c:136:34, col:39> 'char' lvalue
|-ImplicitCastExpr 0x5567d0ddb248 <col:34> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5567d0ddb1f8 <col:34> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
`-ImplicitCastExpr 0x5567d0ddb260 <col:38> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5567d0ddb220 <col:38> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
[B3.11][[B3.13]]
  15: BinaryOperator 0x5567d0ddb3c0 <lua_bit.c:136:34, col:59> 'char' '='
|-ArraySubscriptExpr 0x5567d0ddb278 <col:34, col:39> 'char' lvalue
| |-ImplicitCastExpr 0x5567d0ddb248 <col:34> 'char *' <ArrayToPointerDecay>
| | `-DeclRefExpr 0x5567d0ddb1f8 <col:34> 'char [8]' lvalue Var 0x5567d0ddac18 'buf' 'char [8]'
| `-ImplicitCastExpr 0x5567d0ddb260 <col:38> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x5567d0ddb220 <col:38> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
`-ImplicitCastExpr 0x5567d0ddb3a8 <col:43, col:59> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x5567d0ddb380 <col:43, col:59> 'const char' lvalue
    |-ImplicitCastExpr 0x5567d0ddb368 <col:43> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x5567d0ddb2a0 <col:43> 'const char *' lvalue Var 0x5567d0ddaaa8 'hexdigits' 'const char *'
    `-BinaryOperator 0x5567d0ddb340 <col:53, col:57> 'unsigned int' '&'
      |-ImplicitCastExpr 0x5567d0ddb310 <col:53> 'UBits':'unsigned int' <LValueToRValue>
      | `-DeclRefExpr 0x5567d0ddb2c8 <col:53> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
      `-ImplicitCastExpr 0x5567d0ddb328 <col:57> 'unsigned int' <IntegralCast>
        `-IntegerLiteral 0x5567d0ddb2f0 <col:57> 'int' 15
[B3.14] = [B3.9]
  16: DeclRefExpr 0x5567d0ddb3e8 <lua_bit.c:136:62> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
b
  17: IntegerLiteral 0x5567d0ddb410 <lua_bit.c:136:68> 'int' 4
4
  18: CompoundAssignOperator 0x5567d0ddb448 <lua_bit.c:136:62, col:68> 'UBits':'unsigned int' '>>=' ComputeLHSTy='UBits':'unsigned int' ComputeResultTy='UBits':'unsigned int'
|-DeclRefExpr 0x5567d0ddb3e8 <col:62> 'UBits':'unsigned int' lvalue Var 0x5567d0dda5b8 'b' 'UBits':'unsigned int'
`-IntegerLiteral 0x5567d0ddb410 <col:68> 'int' 4
[B3.16] >>= [B3.17]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5567d0ddb168 <lua_bit.c:136:22> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
i
   2: UnaryOperator 0x5567d0ddb190 <lua_bit.c:136:20, col:22> 'int' prefix '--'
`-DeclRefExpr 0x5567d0ddb168 <col:22> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
--[B4.1]
   3: IntegerLiteral 0x5567d0ddb1b0 <lua_bit.c:136:27> 'int' 0
0
   4: BinaryOperator 0x5567d0ddb1d0 <lua_bit.c:136:20, col:27> 'int' '>='
|-UnaryOperator 0x5567d0ddb190 <col:20, col:22> 'int' prefix '--'
| `-DeclRefExpr 0x5567d0ddb168 <col:22> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
`-IntegerLiteral 0x5567d0ddb1b0 <col:27> 'int' 0
[B4.2] >= [B4.3]
   T: for (...; [B4.4]; )
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x5567d0ddb0c0 <lua_bit.c:136:17> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
n
   2: ImplicitCastExpr 0x5567d0ddb100 <lua_bit.c:136:17> 'SBits':'int' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddb0c0 <col:17> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, SBits)
   3: CStyleCastExpr 0x5567d0ddb118 <lua_bit.c:136:12, col:17> 'int' <NoOp>
`-ImplicitCastExpr 0x5567d0ddb100 <col:17> 'SBits':'int' <LValueToRValue>
  `-DeclRefExpr 0x5567d0ddb0c0 <col:17> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
(int)[B5.2] (CStyleCastExpr, NoOp, int)
   4: DeclRefExpr 0x5567d0ddb098 <lua_bit.c:136:8> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
i
   5: BinaryOperator 0x5567d0ddb140 <lua_bit.c:136:8, col:17> 'int' '='
|-DeclRefExpr 0x5567d0ddb098 <col:8> 'int' lvalue Var 0x5567d0ddaca8 'i' 'int'
`-CStyleCastExpr 0x5567d0ddb118 <col:12, col:17> 'int' <NoOp>
  `-ImplicitCastExpr 0x5567d0ddb100 <col:17> 'SBits':'int' <LValueToRValue>
    `-DeclRefExpr 0x5567d0ddb0c0 <col:17> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B5.4] = [B5.3]
   Preds (2): B6 B7
   Succs (1): B4

 [B6]
   1: IntegerLiteral 0x5567d0ddb018 <lua_bit.c:135:18> 'int' 8
8
   2: DeclRefExpr 0x5567d0ddaff0 <lua_bit.c:135:14> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
n
   3: BinaryOperator 0x5567d0ddb038 <lua_bit.c:135:14, col:18> 'SBits':'int' '='
|-DeclRefExpr 0x5567d0ddaff0 <col:14> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
`-IntegerLiteral 0x5567d0ddb018 <col:18> 'int' 8
[B6.2] = [B6.1]
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5567d0ddaf68 <lua_bit.c:135:7> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
n
   2: ImplicitCastExpr 0x5567d0ddafb0 <lua_bit.c:135:7> 'SBits':'int' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddaf68 <col:7> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, SBits)
   3: IntegerLiteral 0x5567d0ddaf90 <lua_bit.c:135:11> 'int' 8
8
   4: BinaryOperator 0x5567d0ddafc8 <lua_bit.c:135:7, col:11> 'int' '>'
|-ImplicitCastExpr 0x5567d0ddafb0 <col:7> 'SBits':'int' <LValueToRValue>
| `-DeclRefExpr 0x5567d0ddaf68 <col:7> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
`-IntegerLiteral 0x5567d0ddaf90 <col:11> 'int' 8
[B7.2] > [B7.3]
   T: if [B7.4]
   Preds (2): B8 B9
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x5567d0ddadd0 <lua_bit.c:134:21> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
n
   2: ImplicitCastExpr 0x5567d0ddadf8 <lua_bit.c:134:21> 'SBits':'int' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddadd0 <col:21> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, SBits)
   3: UnaryOperator 0x5567d0ddae10 <lua_bit.c:134:20, col:21> 'SBits':'int' prefix '-'
`-ImplicitCastExpr 0x5567d0ddadf8 <col:21> 'SBits':'int' <LValueToRValue>
  `-DeclRefExpr 0x5567d0ddadd0 <col:21> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
-[B8.2]
   4: DeclRefExpr 0x5567d0ddada8 <lua_bit.c:134:16> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
n
   5: BinaryOperator 0x5567d0ddae30 <lua_bit.c:134:16, col:21> 'SBits':'int' '='
|-DeclRefExpr 0x5567d0ddada8 <col:16> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
`-UnaryOperator 0x5567d0ddae10 <col:20, col:21> 'SBits':'int' prefix '-'
  `-ImplicitCastExpr 0x5567d0ddadf8 <col:21> 'SBits':'int' <LValueToRValue>
    `-DeclRefExpr 0x5567d0ddadd0 <col:21> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B8.4] = [B8.3]
   6: StringLiteral 0x5567d0ddae80 <lua_bit.c:134:36> 'char [17]' lvalue "0123456789ABCDEF"
"0123456789ABCDEF"
   7: ImplicitCastExpr 0x5567d0ddaeb8 <lua_bit.c:134:36> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5567d0ddae80 <col:36> 'char [17]' lvalue "0123456789ABCDEF"
[B8.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x5567d0ddaed0 <lua_bit.c:134:36> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5567d0ddaeb8 <col:36> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5567d0ddae80 <col:36> 'char [17]' lvalue "0123456789ABCDEF"
[B8.7] (ImplicitCastExpr, BitCast, const char *)
   9: DeclRefExpr 0x5567d0ddae58 <lua_bit.c:134:24> 'const char *' lvalue Var 0x5567d0ddaaa8 'hexdigits' 'const char *'
hexdigits
  10: BinaryOperator 0x5567d0ddaee8 <lua_bit.c:134:24, col:36> 'const char *' '='
|-DeclRefExpr 0x5567d0ddae58 <col:24> 'const char *' lvalue Var 0x5567d0ddaaa8 'hexdigits' 'const char *'
`-ImplicitCastExpr 0x5567d0ddaed0 <col:36> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5567d0ddaeb8 <col:36> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5567d0ddae80 <col:36> 'char [17]' lvalue "0123456789ABCDEF"
[B8.9] = [B8.8]
   Preds (1): B9
   Succs (1): B7

 [B9]
   1: ConditionalOperator 0x5567d0ddaa48 <./lua.h:270:26, lua_bit.c:130:52> 'int'
|-ParenExpr 0x5567d0dda8f8 <./lua.h:270:26, col:56> 'int'
| `-BinaryOperator 0x5567d0dda8d0 <col:27, line:72:23> 'int' '=='
|   |-CallExpr 0x5567d0dda820 <line:270:27, col:42> 'int'
|   | |-ImplicitCastExpr 0x5567d0dda808 <col:27> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5567d0dda778 <col:27> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5567d0d688b0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|   | |-ImplicitCastExpr 0x5567d0dda858 <lua_bit.c:130:24> 'lua_State *' <LValueToRValue>
|   | | `-DeclRefExpr 0x5567d0dda7a0 <col:24> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
|   | `-ParenExpr 0x5567d0dda7e8 <./lua.h:270:39, col:41> 'int'
|   |   `-IntegerLiteral 0x5567d0dda7c8 <lua_bit.c:130:27> 'int' 2
|   `-ParenExpr 0x5567d0dda8b0 <./lua.h:72:20, col:23> 'int'
|     `-UnaryOperator 0x5567d0dda890 <col:21, col:22> 'int' prefix '-'
|       `-IntegerLiteral 0x5567d0dda870 <col:22> 'int' 1
|-IntegerLiteral 0x5567d0dda918 <lua_bit.c:130:32> 'int' 8
`-CStyleCastExpr 0x5567d0ddaa20 <col:36, col:52> 'SBits':'int' <IntegralCast>
  `-CallExpr 0x5567d0dda9c0 <col:43, col:52> 'UBits':'unsigned int'
    |-ImplicitCastExpr 0x5567d0dda9a8 <col:43> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5567d0dda938 <col:43> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
    |-ImplicitCastExpr 0x5567d0dda9f8 <col:48> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5567d0dda960 <col:48> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
    `-IntegerLiteral 0x5567d0dda988 <col:51> 'int' 2
([B12.16]) ? [B10.1] : [B11.7]
   2: DeclStmt 0x5567d0ddaa78 <lua_bit.c:130:3, col:53>col:9
`-VarDecl 0x5567d0dda718 <col:3, col:52> col:9 used n 'SBits':'int' cinit
  `-ConditionalOperator 0x5567d0ddaa48 <./lua.h:270:26, lua_bit.c:130:52> 'int'
    |-ParenExpr 0x5567d0dda8f8 <./lua.h:270:26, col:56> 'int'
    | `-BinaryOperator 0x5567d0dda8d0 <col:27, line:72:23> 'int' '=='
    |   |-CallExpr 0x5567d0dda820 <line:270:27, col:42> 'int'
    |   | |-ImplicitCastExpr 0x5567d0dda808 <col:27> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x5567d0dda778 <col:27> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5567d0d688b0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
    |   | |-ImplicitCastExpr 0x5567d0dda858 <lua_bit.c:130:24> 'lua_State *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x5567d0dda7a0 <col:24> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
    |   | `-ParenExpr 0x5567d0dda7e8 <./lua.h:270:39, col:41> 'int'
    |   |   `-IntegerLiteral 0x5567d0dda7c8 <lua_bit.c:130:27> 'int' 2
    |   `-ParenExpr 0x5567d0dda8b0 <./lua.h:72:20, col:23> 'int'
    |     `-UnaryOperator 0x5567d0dda890 <col:21, col:22> 'int' prefix '-'
    |       `-IntegerLiteral 0x5567d0dda870 <col:22> 'int' 1
    |-IntegerLiteral 0x5567d0dda918 <lua_bit.c:130:32> 'int' 8
    `-CStyleCastExpr 0x5567d0ddaa20 <col:36, col:52> 'SBits':'int' <IntegralCast>
      `-CallExpr 0x5567d0dda9c0 <col:43, col:52> 'UBits':'unsigned int'
        |-ImplicitCastExpr 0x5567d0dda9a8 <col:43> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5567d0dda938 <col:43> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
        |-ImplicitCastExpr 0x5567d0dda9f8 <col:48> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5567d0dda960 <col:48> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
        `-IntegerLiteral 0x5567d0dda988 <col:51> 'int' 2
SBits n = (lua_type(L, (2)) == (-1)) ? 8 : (SBits)barg(L, 2);
   3: StringLiteral 0x5567d0ddab08 <lua_bit.c:131:27> 'char [17]' lvalue "0123456789abcdef"
"0123456789abcdef"
   4: ImplicitCastExpr 0x5567d0ddab50 <lua_bit.c:131:27> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5567d0ddab08 <col:27> 'char [17]' lvalue "0123456789abcdef"
[B9.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x5567d0ddab68 <lua_bit.c:131:27> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5567d0ddab50 <col:27> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5567d0ddab08 <col:27> 'char [17]' lvalue "0123456789abcdef"
[B9.4] (ImplicitCastExpr, BitCast, const char *)
   6: DeclStmt 0x5567d0ddab80 <lua_bit.c:131:3, col:45>col:15
`-VarDecl 0x5567d0ddaaa8 <col:3, col:27> col:15 used hexdigits 'const char *' cinit
  `-ImplicitCastExpr 0x5567d0ddab68 <col:27> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x5567d0ddab50 <col:27> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x5567d0ddab08 <col:27> 'char [17]' lvalue "0123456789abcdef"
const char *hexdigits = "0123456789abcdef";
   7: DeclStmt 0x5567d0ddac78 <lua_bit.c:132:3, col:14>col:8
`-VarDecl 0x5567d0ddac18 <col:3, col:13> col:8 used buf 'char [8]'
char buf[8];
   8: DeclStmt 0x5567d0ddad08 <lua_bit.c:133:3, col:8>col:7
`-VarDecl 0x5567d0ddaca8 <col:3, col:7> col:7 used i 'int'
int i;
   9: DeclRefExpr 0x5567d0ddad20 <lua_bit.c:134:7> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
n
  10: ImplicitCastExpr 0x5567d0ddad68 <lua_bit.c:134:7> 'SBits':'int' <LValueToRValue>
`-DeclRefExpr 0x5567d0ddad20 <col:7> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
[B9.9] (ImplicitCastExpr, LValueToRValue, SBits)
  11: IntegerLiteral 0x5567d0ddad48 <lua_bit.c:134:11> 'int' 0
0
  12: BinaryOperator 0x5567d0ddad80 <lua_bit.c:134:7, col:11> 'int' '<'
|-ImplicitCastExpr 0x5567d0ddad68 <col:7> 'SBits':'int' <LValueToRValue>
| `-DeclRefExpr 0x5567d0ddad20 <col:7> 'SBits':'int' lvalue Var 0x5567d0dda718 'n' 'SBits':'int'
`-IntegerLiteral 0x5567d0ddad48 <col:11> 'int' 0
[B9.10] < [B9.11]
   T: if [B9.12]
   Preds (2): B10 B11
   Succs (2): B8 B7

 [B10]
   1: IntegerLiteral 0x5567d0dda918 <lua_bit.c:130:32> 'int' 8
8
   Preds (1): B12
   Succs (1): B9

 [B11]
   1: DeclRefExpr 0x5567d0dda938 <lua_bit.c:130:43> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
barg
   2: ImplicitCastExpr 0x5567d0dda9a8 <lua_bit.c:130:43> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5567d0dda938 <col:43> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, UBits (*)(lua_State *, int))
   3: DeclRefExpr 0x5567d0dda960 <lua_bit.c:130:48> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5567d0dda9f8 <lua_bit.c:130:48> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5567d0dda960 <col:48> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5567d0dda988 <lua_bit.c:130:51> 'int' 2
2
   6: CallExpr 0x5567d0dda9c0 <lua_bit.c:130:43, col:52> 'UBits':'unsigned int'
|-ImplicitCastExpr 0x5567d0dda9a8 <col:43> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5567d0dda938 <col:43> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
|-ImplicitCastExpr 0x5567d0dda9f8 <col:48> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5567d0dda960 <col:48> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
`-IntegerLiteral 0x5567d0dda988 <col:51> 'int' 2
[B11.2]([B11.4], [B11.5])
   7: CStyleCastExpr 0x5567d0ddaa20 <lua_bit.c:130:36, col:52> 'SBits':'int' <IntegralCast>
`-CallExpr 0x5567d0dda9c0 <col:43, col:52> 'UBits':'unsigned int'
  |-ImplicitCastExpr 0x5567d0dda9a8 <col:43> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5567d0dda938 <col:43> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
  |-ImplicitCastExpr 0x5567d0dda9f8 <col:48> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5567d0dda960 <col:48> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
  `-IntegerLiteral 0x5567d0dda988 <col:51> 'int' 2
(SBits)[B11.6] (CStyleCastExpr, IntegralCast, SBits)
   Preds (1): B12
   Succs (1): B9

 [B12]
   1: DeclRefExpr 0x5567d0dda618 <lua_bit.c:129:13> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
barg
   2: ImplicitCastExpr 0x5567d0dda688 <lua_bit.c:129:13> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5567d0dda618 <col:13> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, UBits (*)(lua_State *, int))
   3: DeclRefExpr 0x5567d0dda640 <lua_bit.c:129:18> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5567d0dda6d8 <lua_bit.c:129:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5567d0dda640 <col:18> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5567d0dda668 <lua_bit.c:129:21> 'int' 1
1
   6: CallExpr 0x5567d0dda6a0 <lua_bit.c:129:13, col:22> 'UBits':'unsigned int'
|-ImplicitCastExpr 0x5567d0dda688 <col:13> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5567d0dda618 <col:13> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
|-ImplicitCastExpr 0x5567d0dda6d8 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5567d0dda640 <col:18> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
`-IntegerLiteral 0x5567d0dda668 <col:21> 'int' 1
[B12.2]([B12.4], [B12.5])
   7: DeclStmt 0x5567d0dda6f0 <lua_bit.c:129:3, col:23>col:9
`-VarDecl 0x5567d0dda5b8 <col:3, col:22> col:9 used b 'UBits':'unsigned int' cinit
  `-CallExpr 0x5567d0dda6a0 <col:13, col:22> 'UBits':'unsigned int'
    |-ImplicitCastExpr 0x5567d0dda688 <col:13> 'UBits (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5567d0dda618 <col:13> 'UBits (lua_State *, int)' Function 0x5567d0dcac50 'barg' 'UBits (lua_State *, int)'
    |-ImplicitCastExpr 0x5567d0dda6d8 <col:18> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5567d0dda640 <col:18> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
    `-IntegerLiteral 0x5567d0dda668 <col:21> 'int' 1
UBits b = barg(L, 1);
   8: DeclRefExpr 0x5567d0dda778 <./lua.h:270:27> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5567d0d688b0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   9: ImplicitCastExpr 0x5567d0dda808 <./lua.h:270:27> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5567d0dda778 <col:27> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5567d0d688b0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B12.8] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  10: DeclRefExpr 0x5567d0dda7a0 <lua_bit.c:130:24> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x5567d0dda858 <lua_bit.c:130:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5567d0dda7a0 <col:24> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
[B12.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x5567d0dda7c8 <lua_bit.c:130:27> 'int' 2
2
  13: CallExpr 0x5567d0dda820 <./lua.h:270:27, col:42> 'int'
|-ImplicitCastExpr 0x5567d0dda808 <col:27> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5567d0dda778 <col:27> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5567d0d688b0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x5567d0dda858 <lua_bit.c:130:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5567d0dda7a0 <col:24> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
`-ParenExpr 0x5567d0dda7e8 <./lua.h:270:39, col:41> 'int'
  `-IntegerLiteral 0x5567d0dda7c8 <lua_bit.c:130:27> 'int' 2
[B12.9]([B12.11], ([B12.12]))
  14: IntegerLiteral 0x5567d0dda870 <./lua.h:72:22> 'int' 1
1
  15: UnaryOperator 0x5567d0dda890 <./lua.h:72:21, col:22> 'int' prefix '-'
`-IntegerLiteral 0x5567d0dda870 <col:22> 'int' 1
-[B12.14]
  16: BinaryOperator 0x5567d0dda8d0 <./lua.h:270:27, line:72:23> 'int' '=='
|-CallExpr 0x5567d0dda820 <line:270:27, col:42> 'int'
| |-ImplicitCastExpr 0x5567d0dda808 <col:27> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5567d0dda778 <col:27> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5567d0d688b0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x5567d0dda858 <lua_bit.c:130:24> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x5567d0dda7a0 <col:24> 'lua_State *' lvalue ParmVar 0x5567d0dda470 'L' 'lua_State *'
| `-ParenExpr 0x5567d0dda7e8 <./lua.h:270:39, col:41> 'int'
|   `-IntegerLiteral 0x5567d0dda7c8 <lua_bit.c:130:27> 'int' 2
`-ParenExpr 0x5567d0dda8b0 <./lua.h:72:20, col:23> 'int'
  `-UnaryOperator 0x5567d0dda890 <col:21, col:22> 'int' prefix '-'
    `-IntegerLiteral 0x5567d0dda870 <col:22> 'int' 1
[B12.13] == ([B12.15])
   T: ([B12.16]) ? ... : ...
   Preds (1): B13
   Succs (2): B10 B11

 [B0 (EXIT)]
   Preds (1): B1
