int luaV_equalval(lua_State *L, const TValue *t1, const TValue *t2)
 [B19 (ENTRY)]
   Succs (1): B7

 [B1]
   1: BinaryOperator 0x5590ecef16a8 <./lobject.h:79:20, line:103:70> 'int' '||'
|-ParenExpr 0x5590ecef1318 <line:79:20, col:41> 'int'
| `-BinaryOperator 0x5590ecef12f0 <line:90:18, ./lua.h:74:19> 'int' '=='
|   |-ImplicitCastExpr 0x5590ecef12d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
|   | `-ParenExpr 0x5590ecef1298 <col:18, col:26> 'int' lvalue
|   |   `-MemberExpr 0x5590ecef1260 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|   |     `-ImplicitCastExpr 0x5590ecef1248 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|   |       `-ParenExpr 0x5590ecef1228 <col:19, col:21> 'StkId':'TValue *' lvalue
|   |         `-MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   |           `-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
|   |             `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
|   `-IntegerLiteral 0x5590ecef12b8 <./lua.h:74:19> 'int' 0
`-ParenExpr 0x5590ecef1688 <./lobject.h:103:37, col:70> 'int'
  `-BinaryOperator 0x5590ecef1660 <line:84:24, line:103:69> 'int' '&&'
    |-ParenExpr 0x5590ecef14a0 <line:84:24, col:49> 'int'
    | `-BinaryOperator 0x5590ecef1478 <line:90:18, ./lua.h:75:23> 'int' '=='
    |   |-ImplicitCastExpr 0x5590ecef1460 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   | `-ParenExpr 0x5590ecef1420 <col:18, col:26> 'int' lvalue
    |   |   `-MemberExpr 0x5590ecef13e8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    |   |     `-ImplicitCastExpr 0x5590ecef13d0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
    |   |       `-ParenExpr 0x5590ecef13b0 <col:19, col:21> 'StkId':'TValue *' lvalue
    |   |         `-MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    |   |           `-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
    |   |             `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
    |   `-IntegerLiteral 0x5590ecef1440 <./lua.h:75:23> 'int' 1
    `-BinaryOperator 0x5590ecef1638 <./llimits.h:63:25, ./lobject.h:103:69> 'int' '=='
      |-ImplicitCastExpr 0x5590ecef1620 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
      | `-ParenExpr 0x5590ecef15e0 <col:25, col:27> 'int' lvalue
      |   `-MemberExpr 0x5590ecef15a8 <./lobject.h:100:45, col:56> 'int' lvalue .b 0x5590ece76bb8
      |     `-MemberExpr 0x5590ecef1570 <col:45, col:50> 'Value':'Value' lvalue ->value 0x5590ece76da0
      |       `-ImplicitCastExpr 0x5590ecef1558 <col:45, col:47> 'StkId':'TValue *' <LValueToRValue>
      |         `-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
      |           `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      |             `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
      |               `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
      `-IntegerLiteral 0x5590ecef1600 <./lobject.h:103:69> 'int' 0
([B4.23]) || (([B3.8]) && [B2.9])
   2: UnaryOperator 0x5590ecef16f0 <lvm.c:278:10, ./lobject.h:103:71> 'int' prefix '!'
`-ParenExpr 0x5590ecef16d0 <col:22, col:71> 'int'
  `-BinaryOperator 0x5590ecef16a8 <line:79:20, line:103:70> 'int' '||'
    |-ParenExpr 0x5590ecef1318 <line:79:20, col:41> 'int'
    | `-BinaryOperator 0x5590ecef12f0 <line:90:18, ./lua.h:74:19> 'int' '=='
    |   |-ImplicitCastExpr 0x5590ecef12d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    |   | `-ParenExpr 0x5590ecef1298 <col:18, col:26> 'int' lvalue
    |   |   `-MemberExpr 0x5590ecef1260 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    |   |     `-ImplicitCastExpr 0x5590ecef1248 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
    |   |       `-ParenExpr 0x5590ecef1228 <col:19, col:21> 'StkId':'TValue *' lvalue
    |   |         `-MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    |   |           `-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
    |   |             `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
    |   `-IntegerLiteral 0x5590ecef12b8 <./lua.h:74:19> 'int' 0
    `-ParenExpr 0x5590ecef1688 <./lobject.h:103:37, col:70> 'int'
      `-BinaryOperator 0x5590ecef1660 <line:84:24, line:103:69> 'int' '&&'
        |-ParenExpr 0x5590ecef14a0 <line:84:24, col:49> 'int'
        | `-BinaryOperator 0x5590ecef1478 <line:90:18, ./lua.h:75:23> 'int' '=='
        |   |-ImplicitCastExpr 0x5590ecef1460 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
        |   | `-ParenExpr 0x5590ecef1420 <col:18, col:26> 'int' lvalue
        |   |   `-MemberExpr 0x5590ecef13e8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
        |   |     `-ImplicitCastExpr 0x5590ecef13d0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
        |   |       `-ParenExpr 0x5590ecef13b0 <col:19, col:21> 'StkId':'TValue *' lvalue
        |   |         `-MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
        |   |           `-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
        |   |             `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
        |   `-IntegerLiteral 0x5590ecef1440 <./lua.h:75:23> 'int' 1
        `-BinaryOperator 0x5590ecef1638 <./llimits.h:63:25, ./lobject.h:103:69> 'int' '=='
          |-ImplicitCastExpr 0x5590ecef1620 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
          | `-ParenExpr 0x5590ecef15e0 <col:25, col:27> 'int' lvalue
          |   `-MemberExpr 0x5590ecef15a8 <./lobject.h:100:45, col:56> 'int' lvalue .b 0x5590ece76bb8
          |     `-MemberExpr 0x5590ecef1570 <col:45, col:50> 'Value':'Value' lvalue ->value 0x5590ece76da0
          |       `-ImplicitCastExpr 0x5590ecef1558 <col:45, col:47> 'StkId':'TValue *' <LValueToRValue>
          |         `-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
          |           `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
          |             `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
          |               `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
          `-IntegerLiteral 0x5590ecef1600 <./lobject.h:103:69> 'int' 0
!([B1.1])
   3: ReturnStmt 0x5590ecef1710 <lvm.c:278:3, ./lobject.h:103:71>
`-UnaryOperator 0x5590ecef16f0 <lvm.c:278:10, ./lobject.h:103:71> 'int' prefix '!'
  `-ParenExpr 0x5590ecef16d0 <col:22, col:71> 'int'
    `-BinaryOperator 0x5590ecef16a8 <line:79:20, line:103:70> 'int' '||'
      |-ParenExpr 0x5590ecef1318 <line:79:20, col:41> 'int'
      | `-BinaryOperator 0x5590ecef12f0 <line:90:18, ./lua.h:74:19> 'int' '=='
      |   |-ImplicitCastExpr 0x5590ecef12d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
      |   | `-ParenExpr 0x5590ecef1298 <col:18, col:26> 'int' lvalue
      |   |   `-MemberExpr 0x5590ecef1260 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
      |   |     `-ImplicitCastExpr 0x5590ecef1248 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      |   |       `-ParenExpr 0x5590ecef1228 <col:19, col:21> 'StkId':'TValue *' lvalue
      |   |         `-MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      |   |           `-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
      |   |             `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
      |   `-IntegerLiteral 0x5590ecef12b8 <./lua.h:74:19> 'int' 0
      `-ParenExpr 0x5590ecef1688 <./lobject.h:103:37, col:70> 'int'
        `-BinaryOperator 0x5590ecef1660 <line:84:24, line:103:69> 'int' '&&'
          |-ParenExpr 0x5590ecef14a0 <line:84:24, col:49> 'int'
          | `-BinaryOperator 0x5590ecef1478 <line:90:18, ./lua.h:75:23> 'int' '=='
          |   |-ImplicitCastExpr 0x5590ecef1460 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
          |   | `-ParenExpr 0x5590ecef1420 <col:18, col:26> 'int' lvalue
          |   |   `-MemberExpr 0x5590ecef13e8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
          |   |     `-ImplicitCastExpr 0x5590ecef13d0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
          |   |       `-ParenExpr 0x5590ecef13b0 <col:19, col:21> 'StkId':'TValue *' lvalue
          |   |         `-MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
          |   |           `-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
          |   |             `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
          |   `-IntegerLiteral 0x5590ecef1440 <./lua.h:75:23> 'int' 1
          `-BinaryOperator 0x5590ecef1638 <./llimits.h:63:25, ./lobject.h:103:69> 'int' '=='
            |-ImplicitCastExpr 0x5590ecef1620 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
            | `-ParenExpr 0x5590ecef15e0 <col:25, col:27> 'int' lvalue
            |   `-MemberExpr 0x5590ecef15a8 <./lobject.h:100:45, col:56> 'int' lvalue .b 0x5590ece76bb8
            |     `-MemberExpr 0x5590ecef1570 <col:45, col:50> 'Value':'Value' lvalue ->value 0x5590ece76da0
            |       `-ImplicitCastExpr 0x5590ecef1558 <col:45, col:47> 'StkId':'TValue *' <LValueToRValue>
            |         `-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
            |           `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
            |             `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
            |               `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
            `-IntegerLiteral 0x5590ecef1600 <./lobject.h:103:69> 'int' 0
return [B1.2];
   Preds (3): B2 B3 B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5590ecef14c0 <lvm.c:278:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5590ecef14e8 <lvm.c:278:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B2.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B2.2]->top
   4: ImplicitCastExpr 0x5590ecef1558 <./lobject.h:100:45, col:47> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
([B2.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x5590ecef1570 <./lobject.h:100:45, col:50> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef1558 <col:45, col:47> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B2.4]->value
   6: MemberExpr 0x5590ecef15a8 <./lobject.h:100:45, col:56> 'int' lvalue .b 0x5590ece76bb8
`-MemberExpr 0x5590ecef1570 <col:45, col:50> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef1558 <col:45, col:47> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
        `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B2.5].b
   7: ImplicitCastExpr 0x5590ecef1620 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef15e0 <col:25, col:27> 'int' lvalue
  `-MemberExpr 0x5590ecef15a8 <./lobject.h:100:45, col:56> 'int' lvalue .b 0x5590ece76bb8
    `-MemberExpr 0x5590ecef1570 <col:45, col:50> 'Value':'Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef1558 <col:45, col:47> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
            `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
([B2.6]) (ImplicitCastExpr, LValueToRValue, int)
   8: IntegerLiteral 0x5590ecef1600 <./lobject.h:103:69> 'int' 0
0
   9: BinaryOperator 0x5590ecef1638 <./llimits.h:63:25, ./lobject.h:103:69> 'int' '=='
|-ImplicitCastExpr 0x5590ecef1620 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef15e0 <col:25, col:27> 'int' lvalue
|   `-MemberExpr 0x5590ecef15a8 <./lobject.h:100:45, col:56> 'int' lvalue .b 0x5590ece76bb8
|     `-MemberExpr 0x5590ecef1570 <col:45, col:50> 'Value':'Value' lvalue ->value 0x5590ece76da0
|       `-ImplicitCastExpr 0x5590ecef1558 <col:45, col:47> 'StkId':'TValue *' <LValueToRValue>
|         `-ParenExpr 0x5590ecef1538 <col:45, col:47> 'StkId':'TValue *' lvalue
|           `-MemberExpr 0x5590ecef1500 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|             `-ImplicitCastExpr 0x5590ecef14e8 <col:21> 'lua_State *' <LValueToRValue>
|               `-DeclRefExpr 0x5590ecef14c0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecef1600 <./lobject.h:103:69> 'int' 0
[B2.7] == [B2.8]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5590ecef1338 <lvm.c:278:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5590ecef1360 <lvm.c:278:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B3.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B3.2]->top
   4: ImplicitCastExpr 0x5590ecef13d0 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef13b0 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
([B3.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x5590ecef13e8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef13d0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef13b0 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      `-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B3.4]->tt
   6: ImplicitCastExpr 0x5590ecef1460 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef1420 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecef13e8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecef13d0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecef13b0 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
          `-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
([B3.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5590ecef1440 <./lua.h:75:23> 'int' 1
1
   8: BinaryOperator 0x5590ecef1478 <./lobject.h:90:18, ./lua.h:75:23> 'int' '=='
|-ImplicitCastExpr 0x5590ecef1460 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef1420 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecef13e8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590ecef13d0 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590ecef13b0 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-MemberExpr 0x5590ecef1378 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|           `-ImplicitCastExpr 0x5590ecef1360 <col:21> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x5590ecef1338 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecef1440 <./lua.h:75:23> 'int' 1
[B3.6] == [B3.7]
   T: ([B3.8]) && ...
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5590ecef0f90 <lvm.c:277:3> 'void (lua_State *, StkId, const TValue *, const TValue *, const TValue *)' Function 0x5590eced8c60 'callTMres' 'void (lua_State *, StkId, const TValue *, const TValue *, const TValue *)'
callTMres
   2: ImplicitCastExpr 0x5590ecef10d0 <lvm.c:277:3> 'void (*)(lua_State *, StkId, const TValue *, const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef0f90 <col:3> 'void (lua_State *, StkId, const TValue *, const TValue *, const TValue *)' Function 0x5590eced8c60 'callTMres' 'void (lua_State *, StkId, const TValue *, const TValue *, const TValue *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, StkId, const TValue *, const TValue *, const TValue *))
   3: DeclRefExpr 0x5590ecef0fb8 <lvm.c:277:13> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef1138 <lvm.c:277:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef0fb8 <col:13> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef0fe0 <lvm.c:277:16> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x5590ecef1008 <lvm.c:277:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef0fe0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B4.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x5590ecef1020 <lvm.c:277:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecef1008 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef0fe0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B4.6]->top
   8: ImplicitCastExpr 0x5590ecef1150 <lvm.c:277:16, col:19> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecef1020 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590ecef1008 <col:16> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef0fe0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B4.7] (ImplicitCastExpr, LValueToRValue, StkId)
   9: DeclRefExpr 0x5590ecef1058 <lvm.c:277:24> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
tm
  10: ImplicitCastExpr 0x5590ecef1168 <lvm.c:277:24> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef1058 <col:24> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
[B4.9] (ImplicitCastExpr, LValueToRValue, const TValue *)
  11: DeclRefExpr 0x5590ecef1080 <lvm.c:277:28> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
  12: ImplicitCastExpr 0x5590ecef1180 <lvm.c:277:28> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef1080 <col:28> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B4.11] (ImplicitCastExpr, LValueToRValue, const TValue *)
  13: DeclRefExpr 0x5590ecef10a8 <lvm.c:277:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
  14: ImplicitCastExpr 0x5590ecef1198 <lvm.c:277:32> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef10a8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B4.13] (ImplicitCastExpr, LValueToRValue, const TValue *)
  15: CallExpr 0x5590ecef10e8 <lvm.c:277:3, col:34> 'void'
|-ImplicitCastExpr 0x5590ecef10d0 <col:3> 'void (*)(lua_State *, StkId, const TValue *, const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef0f90 <col:3> 'void (lua_State *, StkId, const TValue *, const TValue *, const TValue *)' Function 0x5590eced8c60 'callTMres' 'void (lua_State *, StkId, const TValue *, const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590ecef1138 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef0fb8 <col:13> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef1150 <col:16, col:19> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590ecef1020 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590ecef1008 <col:16> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef0fe0 <col:16> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef1168 <col:24> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef1058 <col:24> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
|-ImplicitCastExpr 0x5590ecef1180 <col:28> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef1080 <col:28> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
`-ImplicitCastExpr 0x5590ecef1198 <col:32> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef10a8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B4.2]([B4.4], [B4.8], [B4.10], [B4.12], [B4.14])
  16: DeclRefExpr 0x5590ecef11b0 <lvm.c:278:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x5590ecef11d8 <lvm.c:278:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B4.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B4.17]->top
  19: ImplicitCastExpr 0x5590ecef1248 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef1228 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
([B4.18]) (ImplicitCastExpr, LValueToRValue, StkId)
  20: MemberExpr 0x5590ecef1260 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef1248 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef1228 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      `-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B4.19]->tt
  21: ImplicitCastExpr 0x5590ecef12d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecef1298 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecef1260 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecef1248 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecef1228 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
          `-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
([B4.20]) (ImplicitCastExpr, LValueToRValue, int)
  22: IntegerLiteral 0x5590ecef12b8 <./lua.h:74:19> 'int' 0
0
  23: BinaryOperator 0x5590ecef12f0 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5590ecef12d8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecef1298 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecef1260 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590ecef1248 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590ecef1228 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-MemberExpr 0x5590ecef11f0 <lvm.c:278:21, col:24> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|           `-ImplicitCastExpr 0x5590ecef11d8 <col:21> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x5590ecef11b0 <col:21> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecef12b8 <./lua.h:74:19> 'int' 0
[B4.21] == [B4.22]
   T: ([B4.23]) || ...
   Preds (1): B6
   Succs (2): B1 B3

 [B5]
   1: IntegerLiteral 0x5590ecef0f20 <lvm.c:276:26> 'int' 0
0
   2: ReturnStmt 0x5590ecef0f40 <lvm.c:276:19, col:26>
`-IntegerLiteral 0x5590ecef0f20 <col:26> 'int' 0
return [B5.1];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x5590ecef0e20 <lvm.c:276:7> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
tm
   2: ImplicitCastExpr 0x5590ecef0ec8 <lvm.c:276:7> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef0e20 <col:7> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
[B6.1] (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: IntegerLiteral 0x5590ecef0e48 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x5590ecef0e80 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecef0e48 <col:24> 'int' 0
(void *)[B6.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x5590ecef0ee0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
`-ParenExpr 0x5590ecef0ea8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecef0e80 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecef0e48 <col:24> 'int' 0
([B6.4]) (ImplicitCastExpr, BitCast, const TValue *)
   6: BinaryOperator 0x5590ecef0ef8 <lvm.c:276:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5590ecef0ec8 <lvm.c:276:7> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef0e20 <col:7> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
`-ImplicitCastExpr 0x5590ecef0ee0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
  `-ParenExpr 0x5590ecef0ea8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecef0e80 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecef0e48 <col:24> 'int' 0
[B6.2] == [B6.5]
   T: if [B6.6]
   Preds (2): B9 B12
   Succs (2): B5 B4

 [B7]
   1: DeclStmt 0x5590eceeece0 <lvm.c:256:3, col:19>col:17
`-VarDecl 0x5590eceeec80 <col:3, col:17> col:17 used tm 'const TValue *'
const TValue *tm;
   2: IntegerLiteral 0x5590eceeecf8 <./llimits.h:62:31> 'int' 0
0
   3: CStyleCastExpr 0x5590eceeed28 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590eceeecf8 <col:31> 'int' 0
(void)[B7.2] (CStyleCastExpr, ToVoid, void)
   4: DeclRefExpr 0x5590eceeed70 <lvm.c:258:17> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   5: ImplicitCastExpr 0x5590eceeedb8 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceeed98 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceeed70 <lvm.c:258:17> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B7.4]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   6: MemberExpr 0x5590eceeedd0 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceeedb8 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceeed98 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceeed70 <lvm.c:258:17> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B7.5]->tt
   7: ImplicitCastExpr 0x5590eceeee28 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceeee08 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceeedd0 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceeedb8 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceeed98 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceeed70 <lvm.c:258:17> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B7.6]) (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B7.7]
   Preds (1): B19
   Succs (7): B11 B14 B15 B16 B17 B18 B8

 [B8]
  default:
   1: DeclRefExpr 0x5590ecef0b68 <lvm.c:274:29> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   2: ImplicitCastExpr 0x5590ecef0bb0 <./lobject.h:91:48, col:50> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef0b90 <col:48, col:50> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef0b68 <lvm.c:274:29> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B8.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590ecef0bc8 <./lobject.h:91:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef0bb0 <col:48, col:50> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef0b90 <col:48, col:50> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef0b68 <lvm.c:274:29> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B8.2]->value
   4: MemberExpr 0x5590ecef0c00 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef0bc8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef0bb0 <col:48, col:50> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef0b90 <col:48, col:50> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef0b68 <lvm.c:274:29> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B8.3].gc
   5: ImplicitCastExpr 0x5590ecef0d48 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x5590ecef0c38 <col:25, col:27> 'GCObject *const' lvalue
  `-MemberExpr 0x5590ecef0c00 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef0bc8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef0bb0 <col:48, col:50> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef0b90 <col:48, col:50> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef0b68 <lvm.c:274:29> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B8.4]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: DeclRefExpr 0x5590ecef0c58 <lvm.c:274:44> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
   7: ImplicitCastExpr 0x5590ecef0ca0 <./lobject.h:91:48, col:50> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef0c80 <col:48, col:50> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef0c58 <lvm.c:274:44> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B8.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590ecef0cb8 <./lobject.h:91:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef0ca0 <col:48, col:50> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef0c80 <col:48, col:50> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef0c58 <lvm.c:274:44> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B8.7]->value
   9: MemberExpr 0x5590ecef0cf0 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef0cb8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef0ca0 <col:48, col:50> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef0c80 <col:48, col:50> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef0c58 <lvm.c:274:44> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B8.8].gc
  10: ImplicitCastExpr 0x5590ecef0d60 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x5590ecef0d28 <col:25, col:27> 'GCObject *const' lvalue
  `-MemberExpr 0x5590ecef0cf0 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef0cb8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef0ca0 <col:48, col:50> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef0c80 <col:48, col:50> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef0c58 <lvm.c:274:44> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B8.9]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  11: BinaryOperator 0x5590ecef0d78 <./llimits.h:63:25, col:27> 'int' '=='
|-ImplicitCastExpr 0x5590ecef0d48 <col:25, col:27> 'GCObject *' <LValueToRValue>
| `-ParenExpr 0x5590ecef0c38 <col:25, col:27> 'GCObject *const' lvalue
|   `-MemberExpr 0x5590ecef0c00 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|     `-MemberExpr 0x5590ecef0bc8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|       `-ImplicitCastExpr 0x5590ecef0bb0 <col:48, col:50> 'const TValue *' <LValueToRValue>
|         `-ParenExpr 0x5590ecef0b90 <col:48, col:50> 'const TValue *' lvalue
|           `-DeclRefExpr 0x5590ecef0b68 <lvm.c:274:29> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
`-ImplicitCastExpr 0x5590ecef0d60 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x5590ecef0d28 <col:25, col:27> 'GCObject *const' lvalue
    `-MemberExpr 0x5590ecef0cf0 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef0cb8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590ecef0ca0 <col:48, col:50> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590ecef0c80 <col:48, col:50> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590ecef0c58 <lvm.c:274:44> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B8.5] == [B8.10]
  12: ReturnStmt 0x5590ecef0da0 <lvm.c:274:14, ./llimits.h:63:27>
`-BinaryOperator 0x5590ecef0d78 <col:25, col:27> 'int' '=='
  |-ImplicitCastExpr 0x5590ecef0d48 <col:25, col:27> 'GCObject *' <LValueToRValue>
  | `-ParenExpr 0x5590ecef0c38 <col:25, col:27> 'GCObject *const' lvalue
  |   `-MemberExpr 0x5590ecef0c00 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  |     `-MemberExpr 0x5590ecef0bc8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |       `-ImplicitCastExpr 0x5590ecef0bb0 <col:48, col:50> 'const TValue *' <LValueToRValue>
  |         `-ParenExpr 0x5590ecef0b90 <col:48, col:50> 'const TValue *' lvalue
  |           `-DeclRefExpr 0x5590ecef0b68 <lvm.c:274:29> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
  `-ImplicitCastExpr 0x5590ecef0d60 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x5590ecef0d28 <col:25, col:27> 'GCObject *const' lvalue
      `-MemberExpr 0x5590ecef0cf0 <./lobject.h:91:48, col:59> 'GCObject *const' lvalue .gc 0x5590ece76aa0
        `-MemberExpr 0x5590ecef0cb8 <col:48, col:53> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590ecef0ca0 <col:48, col:50> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590ecef0c80 <col:48, col:50> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590ecef0c58 <lvm.c:274:44> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
return [B8.11];
   Preds (1): B7
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x5590ecef06a8 <lvm.c:271:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
get_compTM
   2: ImplicitCastExpr 0x5590ecef0a50 <lvm.c:271:12> 'const TValue *(*)(lua_State *, Table *, Table *, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef06a8 <col:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(lua_State *, Table *, Table *, TMS))
   3: DeclRefExpr 0x5590ecef06d0 <lvm.c:271:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef0ab0 <lvm.c:271:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef06d0 <col:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   6: ImplicitCastExpr 0x5590ecef0740 <./lobject.h:99:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B9.5]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: MemberExpr 0x5590ecef0758 <./lobject.h:99:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B9.6]->value
   8: MemberExpr 0x5590ecef0790 <./lobject.h:99:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B9.7].gc
   9: ImplicitCastExpr 0x5590ecef07c8 <./lobject.h:99:44, col:55> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef0790 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B9.8] (ImplicitCastExpr, LValueToRValue, GCObject *)
  10: MemberExpr 0x5590ecef07e0 <./lobject.h:99:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
`-ImplicitCastExpr 0x5590ecef07c8 <col:44, col:55> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef0790 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B9.9]->h
  11: UnaryOperator 0x5590ecef0818 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
`-MemberExpr 0x5590ecef07e0 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
  `-ImplicitCastExpr 0x5590ecef07c8 <col:44, col:55> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef0790 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
&[B9.10]
  12: MemberExpr 0x5590ecef0858 <./llimits.h:63:25, lvm.c:271:38> 'struct Table *' lvalue ->metatable 0x5590ece90e10
`-ParenExpr 0x5590ecef0838 <./llimits.h:63:25, col:27> 'struct Table *'
  `-UnaryOperator 0x5590ecef0818 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
    `-MemberExpr 0x5590ecef07e0 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
      `-ImplicitCastExpr 0x5590ecef07c8 <col:44, col:55> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590ecef0790 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B9.11])->metatable
  13: ImplicitCastExpr 0x5590ecef0ac8 <./llimits.h:63:25, lvm.c:271:38> 'struct Table *' <LValueToRValue>
`-MemberExpr 0x5590ecef0858 <./llimits.h:63:25, lvm.c:271:38> 'struct Table *' lvalue ->metatable 0x5590ece90e10
  `-ParenExpr 0x5590ecef0838 <./llimits.h:63:25, col:27> 'struct Table *'
    `-UnaryOperator 0x5590ecef0818 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
      `-MemberExpr 0x5590ecef07e0 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
        `-ImplicitCastExpr 0x5590ecef07c8 <col:44, col:55> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590ecef0790 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B9.12] (ImplicitCastExpr, LValueToRValue, struct Table *)
  14: DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
  15: ImplicitCastExpr 0x5590ecef08d8 <./lobject.h:99:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B9.14]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  16: MemberExpr 0x5590ecef08f0 <./lobject.h:99:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B9.15]->value
  17: MemberExpr 0x5590ecef0928 <./lobject.h:99:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B9.16].gc
  18: ImplicitCastExpr 0x5590ecef0960 <./lobject.h:99:44, col:55> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef0928 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B9.17] (ImplicitCastExpr, LValueToRValue, GCObject *)
  19: MemberExpr 0x5590ecef0978 <./lobject.h:99:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
`-ImplicitCastExpr 0x5590ecef0960 <col:44, col:55> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef0928 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B9.18]->h
  20: UnaryOperator 0x5590ecef09b0 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
`-MemberExpr 0x5590ecef0978 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
  `-ImplicitCastExpr 0x5590ecef0960 <col:44, col:55> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef0928 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
&[B9.19]
  21: MemberExpr 0x5590ecef09f0 <./llimits.h:63:25, lvm.c:271:61> 'struct Table *' lvalue ->metatable 0x5590ece90e10
`-ParenExpr 0x5590ecef09d0 <./llimits.h:63:25, col:27> 'struct Table *'
  `-UnaryOperator 0x5590ecef09b0 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
    `-MemberExpr 0x5590ecef0978 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
      `-ImplicitCastExpr 0x5590ecef0960 <col:44, col:55> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590ecef0928 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B9.20])->metatable
  22: ImplicitCastExpr 0x5590ecef0ae0 <./llimits.h:63:25, lvm.c:271:61> 'struct Table *' <LValueToRValue>
`-MemberExpr 0x5590ecef09f0 <./llimits.h:63:25, lvm.c:271:61> 'struct Table *' lvalue ->metatable 0x5590ece90e10
  `-ParenExpr 0x5590ecef09d0 <./llimits.h:63:25, col:27> 'struct Table *'
    `-UnaryOperator 0x5590ecef09b0 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
      `-MemberExpr 0x5590ecef0978 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
        `-ImplicitCastExpr 0x5590ecef0960 <col:44, col:55> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590ecef0928 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B9.21] (ImplicitCastExpr, LValueToRValue, struct Table *)
  23: DeclRefExpr 0x5590ecef0a28 <lvm.c:271:72> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
TM_EQ
  24: ImplicitCastExpr 0x5590ecef0af8 <lvm.c:271:72> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590ecef0a28 <col:72> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
[B9.23] (ImplicitCastExpr, IntegralCast, TMS)
  25: CallExpr 0x5590ecef0a68 <lvm.c:271:12, col:77> 'const TValue *'
|-ImplicitCastExpr 0x5590ecef0a50 <col:12> 'const TValue *(*)(lua_State *, Table *, Table *, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef06a8 <col:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
|-ImplicitCastExpr 0x5590ecef0ab0 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef06d0 <col:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef0ac8 <./llimits.h:63:25, lvm.c:271:38> 'struct Table *' <LValueToRValue>
| `-MemberExpr 0x5590ecef0858 <./llimits.h:63:25, lvm.c:271:38> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|   `-ParenExpr 0x5590ecef0838 <./llimits.h:63:25, col:27> 'struct Table *'
|     `-UnaryOperator 0x5590ecef0818 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
|       `-MemberExpr 0x5590ecef07e0 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
|         `-ImplicitCastExpr 0x5590ecef07c8 <col:44, col:55> 'GCObject *' <LValueToRValue>
|           `-MemberExpr 0x5590ecef0790 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|             `-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|               `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
|                 `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
|                   `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
|-ImplicitCastExpr 0x5590ecef0ae0 <./llimits.h:63:25, lvm.c:271:61> 'struct Table *' <LValueToRValue>
| `-MemberExpr 0x5590ecef09f0 <./llimits.h:63:25, lvm.c:271:61> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|   `-ParenExpr 0x5590ecef09d0 <./llimits.h:63:25, col:27> 'struct Table *'
|     `-UnaryOperator 0x5590ecef09b0 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
|       `-MemberExpr 0x5590ecef0978 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
|         `-ImplicitCastExpr 0x5590ecef0960 <col:44, col:55> 'GCObject *' <LValueToRValue>
|           `-MemberExpr 0x5590ecef0928 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|             `-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|               `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
|                 `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
|                   `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
`-ImplicitCastExpr 0x5590ecef0af8 <col:72> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x5590ecef0a28 <col:72> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
[B9.2]([B9.4], [B9.13], [B9.22], [B9.24])
  26: DeclRefExpr 0x5590ecef0680 <lvm.c:271:7> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
tm
  27: BinaryOperator 0x5590ecef0b10 <lvm.c:271:7, col:77> 'const TValue *' '='
|-DeclRefExpr 0x5590ecef0680 <col:7> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
`-CallExpr 0x5590ecef0a68 <col:12, col:77> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef0a50 <col:12> 'const TValue *(*)(lua_State *, Table *, Table *, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecef06a8 <col:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
  |-ImplicitCastExpr 0x5590ecef0ab0 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef06d0 <col:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590ecef0ac8 <./llimits.h:63:25, lvm.c:271:38> 'struct Table *' <LValueToRValue>
  | `-MemberExpr 0x5590ecef0858 <./llimits.h:63:25, lvm.c:271:38> 'struct Table *' lvalue ->metatable 0x5590ece90e10
  |   `-ParenExpr 0x5590ecef0838 <./llimits.h:63:25, col:27> 'struct Table *'
  |     `-UnaryOperator 0x5590ecef0818 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
  |       `-MemberExpr 0x5590ecef07e0 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
  |         `-ImplicitCastExpr 0x5590ecef07c8 <col:44, col:55> 'GCObject *' <LValueToRValue>
  |           `-MemberExpr 0x5590ecef0790 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  |             `-MemberExpr 0x5590ecef0758 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |               `-ImplicitCastExpr 0x5590ecef0740 <col:44, col:46> 'const TValue *' <LValueToRValue>
  |                 `-ParenExpr 0x5590ecef0720 <col:44, col:46> 'const TValue *' lvalue
  |                   `-DeclRefExpr 0x5590ecef06f8 <lvm.c:271:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef0ae0 <./llimits.h:63:25, lvm.c:271:61> 'struct Table *' <LValueToRValue>
  | `-MemberExpr 0x5590ecef09f0 <./llimits.h:63:25, lvm.c:271:61> 'struct Table *' lvalue ->metatable 0x5590ece90e10
  |   `-ParenExpr 0x5590ecef09d0 <./llimits.h:63:25, col:27> 'struct Table *'
  |     `-UnaryOperator 0x5590ecef09b0 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
  |       `-MemberExpr 0x5590ecef0978 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
  |         `-ImplicitCastExpr 0x5590ecef0960 <col:44, col:55> 'GCObject *' <LValueToRValue>
  |           `-MemberExpr 0x5590ecef0928 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  |             `-MemberExpr 0x5590ecef08f0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |               `-ImplicitCastExpr 0x5590ecef08d8 <col:44, col:46> 'const TValue *' <LValueToRValue>
  |                 `-ParenExpr 0x5590ecef08b8 <col:44, col:46> 'const TValue *' lvalue
  |                   `-DeclRefExpr 0x5590ecef0890 <lvm.c:271:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
  `-ImplicitCastExpr 0x5590ecef0af8 <col:72> 'TMS':'TMS' <IntegralCast>
    `-DeclRefExpr 0x5590ecef0a28 <col:72> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
[B9.26] = [B9.25]
   T: break;
   Preds (1): B11
   Succs (1): B6

 [B10]
   1: IntegerLiteral 0x5590ecef0610 <lvm.c:270:44> 'int' 1
1
   2: ReturnStmt 0x5590ecef0630 <lvm.c:270:37, col:44>
`-IntegerLiteral 0x5590ecef0610 <col:44> 'int' 1
return [B10.1];
   Preds (1): B11
   Succs (1): B0

 [B11]
  case 5:
   1: DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   2: ImplicitCastExpr 0x5590ecef0370 <./lobject.h:99:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef0350 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B11.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590ecef0388 <./lobject.h:99:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef0370 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef0350 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B11.2]->value
   4: MemberExpr 0x5590ecef03c0 <./lobject.h:99:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef0388 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef0370 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef0350 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B11.3].gc
   5: ImplicitCastExpr 0x5590ecef03f8 <./lobject.h:99:44, col:55> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef03c0 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef0388 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecef0370 <col:44, col:46> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecef0350 <col:44, col:46> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B11.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x5590ecef0410 <./lobject.h:99:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
`-ImplicitCastExpr 0x5590ecef03f8 <col:44, col:55> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef03c0 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef0388 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef0370 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef0350 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B11.5]->h
   7: UnaryOperator 0x5590ecef0448 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
`-MemberExpr 0x5590ecef0410 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
  `-ImplicitCastExpr 0x5590ecef03f8 <col:44, col:55> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef03c0 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef0388 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590ecef0370 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590ecef0350 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
&[B11.6]
   8: DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
   9: ImplicitCastExpr 0x5590ecef04d0 <./lobject.h:99:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef04b0 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B11.8]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  10: MemberExpr 0x5590ecef04e8 <./lobject.h:99:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef04d0 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef04b0 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B11.9]->value
  11: MemberExpr 0x5590ecef0520 <./lobject.h:99:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecef04e8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef04d0 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef04b0 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B11.10].gc
  12: ImplicitCastExpr 0x5590ecef0558 <./lobject.h:99:44, col:55> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecef0520 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecef04e8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecef04d0 <col:44, col:46> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecef04b0 <col:44, col:46> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B11.11] (ImplicitCastExpr, LValueToRValue, GCObject *)
  13: MemberExpr 0x5590ecef0570 <./lobject.h:99:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
`-ImplicitCastExpr 0x5590ecef0558 <col:44, col:55> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecef0520 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecef04e8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef04d0 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef04b0 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B11.12]->h
  14: UnaryOperator 0x5590ecef05a8 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
`-MemberExpr 0x5590ecef0570 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
  `-ImplicitCastExpr 0x5590ecef0558 <col:44, col:55> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecef0520 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecef04e8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590ecef04d0 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590ecef04b0 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
&[B11.13]
  15: BinaryOperator 0x5590ecef05e8 <./llimits.h:63:25, col:27> 'int' '=='
|-ParenExpr 0x5590ecef0468 <col:25, col:27> 'struct Table *'
| `-UnaryOperator 0x5590ecef0448 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
|   `-MemberExpr 0x5590ecef0410 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
|     `-ImplicitCastExpr 0x5590ecef03f8 <col:44, col:55> 'GCObject *' <LValueToRValue>
|       `-MemberExpr 0x5590ecef03c0 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|         `-MemberExpr 0x5590ecef0388 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|           `-ImplicitCastExpr 0x5590ecef0370 <col:44, col:46> 'const TValue *' <LValueToRValue>
|             `-ParenExpr 0x5590ecef0350 <col:44, col:46> 'const TValue *' lvalue
|               `-DeclRefExpr 0x5590ecef0328 <lvm.c:270:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
`-ParenExpr 0x5590ecef05c8 <./llimits.h:63:25, col:27> 'struct Table *'
  `-UnaryOperator 0x5590ecef05a8 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
    `-MemberExpr 0x5590ecef0570 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
      `-ImplicitCastExpr 0x5590ecef0558 <col:44, col:55> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590ecef0520 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecef04e8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590ecef04d0 <col:44, col:46> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590ecef04b0 <col:44, col:46> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590ecef0488 <lvm.c:270:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B11.7]) == ([B11.14])
   T: if [B11.15]
   Preds (1): B7
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x5590eceefca0 <lvm.c:265:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
get_compTM
   2: ImplicitCastExpr 0x5590ecef01b8 <lvm.c:265:12> 'const TValue *(*)(lua_State *, Table *, Table *, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceefca0 <col:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(lua_State *, Table *, Table *, TMS))
   3: DeclRefExpr 0x5590eceefcf0 <lvm.c:265:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef0218 <lvm.c:265:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceefcf0 <col:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   6: ImplicitCastExpr 0x5590eceefd60 <./lobject.h:96:50, col:52> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B12.5]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: MemberExpr 0x5590eceefd78 <./lobject.h:96:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B12.6]->value
   8: MemberExpr 0x5590eceefdb0 <./lobject.h:96:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B12.7].gc
   9: ImplicitCastExpr 0x5590eceefde8 <./lobject.h:96:50, col:61> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B12.8] (ImplicitCastExpr, LValueToRValue, GCObject *)
  10: MemberExpr 0x5590eceefe00 <./lobject.h:96:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
`-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B12.9]->u
  11: UnaryOperator 0x5590eceefe38 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
`-MemberExpr 0x5590eceefe00 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
  `-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
&[B12.10]
  12: MemberExpr 0x5590eceefe78 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
`-ParenExpr 0x5590eceefe58 <./llimits.h:63:25, col:27> 'union Udata *'
  `-UnaryOperator 0x5590eceefe38 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
    `-MemberExpr 0x5590eceefe00 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
      `-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B12.11])->uv
  13: UnaryOperator 0x5590eceefeb0 <./lobject.h:97:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
`-MemberExpr 0x5590eceefe78 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
  `-ParenExpr 0x5590eceefe58 <./llimits.h:63:25, col:27> 'union Udata *'
    `-UnaryOperator 0x5590eceefe38 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
      `-MemberExpr 0x5590eceefe00 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
        `-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
&[B12.12]
  14: MemberExpr 0x5590eceefef0 <./lobject.h:97:19, lvm.c:265:38> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
`-ParenExpr 0x5590eceefed0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
  `-UnaryOperator 0x5590eceefeb0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
    `-MemberExpr 0x5590eceefe78 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
      `-ParenExpr 0x5590eceefe58 <./llimits.h:63:25, col:27> 'union Udata *'
        `-UnaryOperator 0x5590eceefe38 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
          `-MemberExpr 0x5590eceefe00 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
            `-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
                  `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
                    `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
                      `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B12.13])->metatable
  15: ImplicitCastExpr 0x5590ecef0230 <./lobject.h:97:19, lvm.c:265:38> 'struct Table *' <LValueToRValue>
`-MemberExpr 0x5590eceefef0 <./lobject.h:97:19, lvm.c:265:38> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
  `-ParenExpr 0x5590eceefed0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
    `-UnaryOperator 0x5590eceefeb0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
      `-MemberExpr 0x5590eceefe78 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
        `-ParenExpr 0x5590eceefe58 <./llimits.h:63:25, col:27> 'union Udata *'
          `-UnaryOperator 0x5590eceefe38 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
            `-MemberExpr 0x5590eceefe00 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
              `-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
                  `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
                    `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
                      `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
                        `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B12.14] (ImplicitCastExpr, LValueToRValue, struct Table *)
  16: DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
  17: ImplicitCastExpr 0x5590eceeff70 <./lobject.h:96:50, col:52> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B12.16]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  18: MemberExpr 0x5590eceeff88 <./lobject.h:96:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B12.17]->value
  19: MemberExpr 0x5590eceeffc0 <./lobject.h:96:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B12.18].gc
  20: ImplicitCastExpr 0x5590eceefff8 <./lobject.h:96:50, col:61> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B12.19] (ImplicitCastExpr, LValueToRValue, GCObject *)
  21: MemberExpr 0x5590ecef0010 <./lobject.h:96:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
`-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B12.20]->u
  22: UnaryOperator 0x5590ecef0048 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
`-MemberExpr 0x5590ecef0010 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
  `-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
&[B12.21]
  23: MemberExpr 0x5590ecef0088 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
`-ParenExpr 0x5590ecef0068 <./llimits.h:63:25, col:27> 'union Udata *'
  `-UnaryOperator 0x5590ecef0048 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
    `-MemberExpr 0x5590ecef0010 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
      `-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B12.22])->uv
  24: UnaryOperator 0x5590ecef00c0 <./lobject.h:97:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
`-MemberExpr 0x5590ecef0088 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
  `-ParenExpr 0x5590ecef0068 <./llimits.h:63:25, col:27> 'union Udata *'
    `-UnaryOperator 0x5590ecef0048 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
      `-MemberExpr 0x5590ecef0010 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
        `-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
&[B12.23]
  25: MemberExpr 0x5590ecef0100 <./lobject.h:97:19, lvm.c:265:61> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
`-ParenExpr 0x5590ecef00e0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
  `-UnaryOperator 0x5590ecef00c0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
    `-MemberExpr 0x5590ecef0088 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
      `-ParenExpr 0x5590ecef0068 <./llimits.h:63:25, col:27> 'union Udata *'
        `-UnaryOperator 0x5590ecef0048 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
          `-MemberExpr 0x5590ecef0010 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
            `-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
                  `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
                    `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
                      `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B12.24])->metatable
  26: ImplicitCastExpr 0x5590ecef0248 <./lobject.h:97:19, lvm.c:265:61> 'struct Table *' <LValueToRValue>
`-MemberExpr 0x5590ecef0100 <./lobject.h:97:19, lvm.c:265:61> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
  `-ParenExpr 0x5590ecef00e0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
    `-UnaryOperator 0x5590ecef00c0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
      `-MemberExpr 0x5590ecef0088 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
        `-ParenExpr 0x5590ecef0068 <./llimits.h:63:25, col:27> 'union Udata *'
          `-UnaryOperator 0x5590ecef0048 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
            `-MemberExpr 0x5590ecef0010 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
              `-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
                  `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
                    `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
                      `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
                        `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B12.25] (ImplicitCastExpr, LValueToRValue, struct Table *)
  27: DeclRefExpr 0x5590ecef0138 <lvm.c:266:26> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
TM_EQ
  28: ImplicitCastExpr 0x5590ecef0260 <lvm.c:266:26> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590ecef0138 <col:26> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
[B12.27] (ImplicitCastExpr, IntegralCast, TMS)
  29: CallExpr 0x5590ecef01d0 <lvm.c:265:12, line:266:31> 'const TValue *'
|-ImplicitCastExpr 0x5590ecef01b8 <line:265:12> 'const TValue *(*)(lua_State *, Table *, Table *, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceefca0 <col:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
|-ImplicitCastExpr 0x5590ecef0218 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceefcf0 <col:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef0230 <./lobject.h:97:19, lvm.c:265:38> 'struct Table *' <LValueToRValue>
| `-MemberExpr 0x5590eceefef0 <./lobject.h:97:19, lvm.c:265:38> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
|   `-ParenExpr 0x5590eceefed0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
|     `-UnaryOperator 0x5590eceefeb0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
|       `-MemberExpr 0x5590eceefe78 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
|         `-ParenExpr 0x5590eceefe58 <./llimits.h:63:25, col:27> 'union Udata *'
|           `-UnaryOperator 0x5590eceefe38 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
|             `-MemberExpr 0x5590eceefe00 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
|               `-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
|                 `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|                   `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|                     `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
|                       `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
|                         `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
|-ImplicitCastExpr 0x5590ecef0248 <./lobject.h:97:19, lvm.c:265:61> 'struct Table *' <LValueToRValue>
| `-MemberExpr 0x5590ecef0100 <./lobject.h:97:19, lvm.c:265:61> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
|   `-ParenExpr 0x5590ecef00e0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
|     `-UnaryOperator 0x5590ecef00c0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
|       `-MemberExpr 0x5590ecef0088 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
|         `-ParenExpr 0x5590ecef0068 <./llimits.h:63:25, col:27> 'union Udata *'
|           `-UnaryOperator 0x5590ecef0048 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
|             `-MemberExpr 0x5590ecef0010 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
|               `-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
|                 `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|                   `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|                     `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
|                       `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
|                         `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
`-ImplicitCastExpr 0x5590ecef0260 <line:266:26> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x5590ecef0138 <col:26> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
[B12.2]([B12.4], [B12.15], [B12.26], [B12.28])
  30: DeclRefExpr 0x5590eceefc78 <lvm.c:265:7> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
tm
  31: BinaryOperator 0x5590ecef0278 <lvm.c:265:7, line:266:31> 'const TValue *' '='
|-DeclRefExpr 0x5590eceefc78 <line:265:7> 'const TValue *' lvalue Var 0x5590eceeec80 'tm' 'const TValue *'
`-CallExpr 0x5590ecef01d0 <col:12, line:266:31> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef01b8 <line:265:12> 'const TValue *(*)(lua_State *, Table *, Table *, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceefca0 <col:12> 'const TValue *(lua_State *, Table *, Table *, TMS)' Function 0x5590ecee5370 'get_compTM' 'const TValue *(lua_State *, Table *, Table *, TMS)'
  |-ImplicitCastExpr 0x5590ecef0218 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceefcf0 <col:23> 'lua_State *' lvalue ParmVar 0x5590eceee9f0 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590ecef0230 <./lobject.h:97:19, lvm.c:265:38> 'struct Table *' <LValueToRValue>
  | `-MemberExpr 0x5590eceefef0 <./lobject.h:97:19, lvm.c:265:38> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
  |   `-ParenExpr 0x5590eceefed0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
  |     `-UnaryOperator 0x5590eceefeb0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
  |       `-MemberExpr 0x5590eceefe78 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
  |         `-ParenExpr 0x5590eceefe58 <./llimits.h:63:25, col:27> 'union Udata *'
  |           `-UnaryOperator 0x5590eceefe38 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
  |             `-MemberExpr 0x5590eceefe00 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
  |               `-ImplicitCastExpr 0x5590eceefde8 <col:50, col:61> 'GCObject *' <LValueToRValue>
  |                 `-MemberExpr 0x5590eceefdb0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  |                   `-MemberExpr 0x5590eceefd78 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |                     `-ImplicitCastExpr 0x5590eceefd60 <col:50, col:52> 'const TValue *' <LValueToRValue>
  |                       `-ParenExpr 0x5590eceefd40 <col:50, col:52> 'const TValue *' lvalue
  |                         `-DeclRefExpr 0x5590eceefd18 <lvm.c:265:33> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef0248 <./lobject.h:97:19, lvm.c:265:61> 'struct Table *' <LValueToRValue>
  | `-MemberExpr 0x5590ecef0100 <./lobject.h:97:19, lvm.c:265:61> 'struct Table *' lvalue ->metatable 0x5590ece8c0d0
  |   `-ParenExpr 0x5590ecef00e0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
  |     `-UnaryOperator 0x5590ecef00c0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
  |       `-MemberExpr 0x5590ecef0088 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
  |         `-ParenExpr 0x5590ecef0068 <./llimits.h:63:25, col:27> 'union Udata *'
  |           `-UnaryOperator 0x5590ecef0048 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
  |             `-MemberExpr 0x5590ecef0010 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
  |               `-ImplicitCastExpr 0x5590eceefff8 <col:50, col:61> 'GCObject *' <LValueToRValue>
  |                 `-MemberExpr 0x5590eceeffc0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  |                   `-MemberExpr 0x5590eceeff88 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |                     `-ImplicitCastExpr 0x5590eceeff70 <col:50, col:52> 'const TValue *' <LValueToRValue>
  |                       `-ParenExpr 0x5590eceeff50 <col:50, col:52> 'const TValue *' lvalue
  |                         `-DeclRefExpr 0x5590eceeff28 <lvm.c:265:56> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
  `-ImplicitCastExpr 0x5590ecef0260 <line:266:26> 'TMS':'TMS' <IntegralCast>
    `-DeclRefExpr 0x5590ecef0138 <col:26> 'int' EnumConstant 0x5590ece94460 'TM_EQ' 'int'
[B12.30] = [B12.29]
   T: break;
   Preds (1): B14
   Succs (1): B6

 [B13]
   1: IntegerLiteral 0x5590eceefc08 <lvm.c:264:44> 'int' 1
1
   2: ReturnStmt 0x5590eceefc28 <lvm.c:264:37, col:44>
`-IntegerLiteral 0x5590eceefc08 <col:44> 'int' 1
return [B13.1];
   Preds (1): B14
   Succs (1): B0

 [B14]
  case 7:
   1: DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   2: ImplicitCastExpr 0x5590eceef7f8 <./lobject.h:96:50, col:52> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B14.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceef810 <./lobject.h:96:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B14.2]->value
   4: MemberExpr 0x5590eceef848 <./lobject.h:96:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceef810 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B14.3].gc
   5: ImplicitCastExpr 0x5590eceef880 <./lobject.h:96:50, col:61> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceef848 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceef810 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B14.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x5590eceef898 <./lobject.h:96:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
`-ImplicitCastExpr 0x5590eceef880 <col:50, col:61> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceef848 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceef810 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B14.5]->u
   7: UnaryOperator 0x5590eceef8f8 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
`-MemberExpr 0x5590eceef898 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
  `-ImplicitCastExpr 0x5590eceef880 <col:50, col:61> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceef848 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceef810 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
&[B14.6]
   8: MemberExpr 0x5590eceef938 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
`-ParenExpr 0x5590eceef918 <./llimits.h:63:25, col:27> 'union Udata *'
  `-UnaryOperator 0x5590eceef8f8 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
    `-MemberExpr 0x5590eceef898 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
      `-ImplicitCastExpr 0x5590eceef880 <col:50, col:61> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceef848 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceef810 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B14.7])->uv
   9: UnaryOperator 0x5590eceef9c8 <./lobject.h:97:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
`-MemberExpr 0x5590eceef938 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
  `-ParenExpr 0x5590eceef918 <./llimits.h:63:25, col:27> 'union Udata *'
    `-UnaryOperator 0x5590eceef8f8 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
      `-MemberExpr 0x5590eceef898 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
        `-ImplicitCastExpr 0x5590eceef880 <col:50, col:61> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590eceef848 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590eceef810 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
&[B14.8]
  10: DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
  11: ImplicitCastExpr 0x5590eceefa50 <./lobject.h:96:50, col:52> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B14.10]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  12: MemberExpr 0x5590eceefa68 <./lobject.h:96:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B14.11]->value
  13: MemberExpr 0x5590eceefaa0 <./lobject.h:96:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceefa68 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B14.12].gc
  14: ImplicitCastExpr 0x5590eceefad8 <./lobject.h:96:50, col:61> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceefaa0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceefa68 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B14.13] (ImplicitCastExpr, LValueToRValue, GCObject *)
  15: MemberExpr 0x5590eceefaf0 <./lobject.h:96:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
`-ImplicitCastExpr 0x5590eceefad8 <col:50, col:61> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceefaa0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceefa68 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B14.14]->u
  16: UnaryOperator 0x5590eceefb28 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
`-MemberExpr 0x5590eceefaf0 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
  `-ImplicitCastExpr 0x5590eceefad8 <col:50, col:61> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceefaa0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceefa68 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
&[B14.15]
  17: MemberExpr 0x5590eceefb68 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
`-ParenExpr 0x5590eceefb48 <./llimits.h:63:25, col:27> 'union Udata *'
  `-UnaryOperator 0x5590eceefb28 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
    `-MemberExpr 0x5590eceefaf0 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
      `-ImplicitCastExpr 0x5590eceefad8 <col:50, col:61> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceefaa0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceefa68 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B14.16])->uv
  18: UnaryOperator 0x5590eceefba0 <./lobject.h:97:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
`-MemberExpr 0x5590eceefb68 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
  `-ParenExpr 0x5590eceefb48 <./llimits.h:63:25, col:27> 'union Udata *'
    `-UnaryOperator 0x5590eceefb28 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
      `-MemberExpr 0x5590eceefaf0 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
        `-ImplicitCastExpr 0x5590eceefad8 <col:50, col:61> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590eceefaa0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590eceefa68 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
&[B14.17]
  19: BinaryOperator 0x5590eceefbe0 <./lobject.h:97:19, col:37> 'int' '=='
|-ParenExpr 0x5590eceef9e8 <col:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
| `-UnaryOperator 0x5590eceef9c8 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
|   `-MemberExpr 0x5590eceef938 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
|     `-ParenExpr 0x5590eceef918 <./llimits.h:63:25, col:27> 'union Udata *'
|       `-UnaryOperator 0x5590eceef8f8 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
|         `-MemberExpr 0x5590eceef898 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
|           `-ImplicitCastExpr 0x5590eceef880 <col:50, col:61> 'GCObject *' <LValueToRValue>
|             `-MemberExpr 0x5590eceef848 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|               `-MemberExpr 0x5590eceef810 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|                 `-ImplicitCastExpr 0x5590eceef7f8 <col:50, col:52> 'const TValue *' <LValueToRValue>
|                   `-ParenExpr 0x5590eceef7d8 <col:50, col:52> 'const TValue *' lvalue
|                     `-DeclRefExpr 0x5590eceef7b0 <lvm.c:264:18> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
`-ParenExpr 0x5590eceefbc0 <./lobject.h:97:19, col:37> 'struct (anonymous struct at ./lobject.h:217:3) *'
  `-UnaryOperator 0x5590eceefba0 <col:20, col:35> 'struct (anonymous struct at ./lobject.h:217:3) *' prefix '&'
    `-MemberExpr 0x5590eceefb68 <./llimits.h:63:25, ./lobject.h:97:35> 'struct (anonymous struct at ./lobject.h:217:3)':'struct Udata::(anonymous at ./lobject.h:217:3)' lvalue ->uv 0x5590ece8c230
      `-ParenExpr 0x5590eceefb48 <./llimits.h:63:25, col:27> 'union Udata *'
        `-UnaryOperator 0x5590eceefb28 <./lobject.h:96:49, col:65> 'union Udata *' prefix '&'
          `-MemberExpr 0x5590eceefaf0 <col:50, col:65> 'union Udata':'union Udata' lvalue ->u 0x5590ecea37d0
            `-ImplicitCastExpr 0x5590eceefad8 <col:50, col:61> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x5590eceefaa0 <col:50, col:61> 'GCObject *const' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590eceefa68 <col:50, col:55> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
                  `-ImplicitCastExpr 0x5590eceefa50 <col:50, col:52> 'const TValue *' <LValueToRValue>
                    `-ParenExpr 0x5590eceefa30 <col:50, col:52> 'const TValue *' lvalue
                      `-DeclRefExpr 0x5590eceefa08 <lvm.c:264:32> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B14.9]) == ([B14.18])
   T: if [B14.19]
   Preds (1): B7
   Succs (2): B13 B12

 [B15]
  case 2:
   1: DeclRefExpr 0x5590eceef508 <lvm.c:262:44> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   2: ImplicitCastExpr 0x5590eceef550 <./lobject.h:92:51, col:53> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceef530 <col:51, col:53> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceef508 <lvm.c:262:44> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B15.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceef568 <./lobject.h:92:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceef550 <col:51, col:53> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceef530 <col:51, col:53> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceef508 <lvm.c:262:44> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B15.2]->value
   4: MemberExpr 0x5590eceef5a0 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
`-MemberExpr 0x5590eceef568 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceef550 <col:51, col:53> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceef530 <col:51, col:53> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceef508 <lvm.c:262:44> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B15.3].p
   5: ImplicitCastExpr 0x5590eceef6e8 <./llimits.h:63:25, col:27> 'void *' <LValueToRValue>
`-ParenExpr 0x5590eceef5d8 <col:25, col:27> 'void *const' lvalue
  `-MemberExpr 0x5590eceef5a0 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
    `-MemberExpr 0x5590eceef568 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceef550 <col:51, col:53> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceef530 <col:51, col:53> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceef508 <lvm.c:262:44> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B15.4]) (ImplicitCastExpr, LValueToRValue, void *)
   6: DeclRefExpr 0x5590eceef5f8 <lvm.c:262:58> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
   7: ImplicitCastExpr 0x5590eceef640 <./lobject.h:92:51, col:53> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceef620 <col:51, col:53> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceef5f8 <lvm.c:262:58> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B15.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590eceef658 <./lobject.h:92:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceef640 <col:51, col:53> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceef620 <col:51, col:53> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceef5f8 <lvm.c:262:58> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B15.7]->value
   9: MemberExpr 0x5590eceef690 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
`-MemberExpr 0x5590eceef658 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceef640 <col:51, col:53> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceef620 <col:51, col:53> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceef5f8 <lvm.c:262:58> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B15.8].p
  10: ImplicitCastExpr 0x5590eceef700 <./llimits.h:63:25, col:27> 'void *' <LValueToRValue>
`-ParenExpr 0x5590eceef6c8 <col:25, col:27> 'void *const' lvalue
  `-MemberExpr 0x5590eceef690 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
    `-MemberExpr 0x5590eceef658 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceef640 <col:51, col:53> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceef620 <col:51, col:53> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceef5f8 <lvm.c:262:58> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B15.9]) (ImplicitCastExpr, LValueToRValue, void *)
  11: BinaryOperator 0x5590eceef718 <./llimits.h:63:25, col:27> 'int' '=='
|-ImplicitCastExpr 0x5590eceef6e8 <col:25, col:27> 'void *' <LValueToRValue>
| `-ParenExpr 0x5590eceef5d8 <col:25, col:27> 'void *const' lvalue
|   `-MemberExpr 0x5590eceef5a0 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
|     `-MemberExpr 0x5590eceef568 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|       `-ImplicitCastExpr 0x5590eceef550 <col:51, col:53> 'const TValue *' <LValueToRValue>
|         `-ParenExpr 0x5590eceef530 <col:51, col:53> 'const TValue *' lvalue
|           `-DeclRefExpr 0x5590eceef508 <lvm.c:262:44> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
`-ImplicitCastExpr 0x5590eceef700 <./llimits.h:63:25, col:27> 'void *' <LValueToRValue>
  `-ParenExpr 0x5590eceef6c8 <col:25, col:27> 'void *const' lvalue
    `-MemberExpr 0x5590eceef690 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
      `-MemberExpr 0x5590eceef658 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceef640 <col:51, col:53> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceef620 <col:51, col:53> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceef5f8 <lvm.c:262:58> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B15.5] == [B15.10]
  12: ReturnStmt 0x5590eceef740 <lvm.c:262:30, ./llimits.h:63:27>
`-BinaryOperator 0x5590eceef718 <col:25, col:27> 'int' '=='
  |-ImplicitCastExpr 0x5590eceef6e8 <col:25, col:27> 'void *' <LValueToRValue>
  | `-ParenExpr 0x5590eceef5d8 <col:25, col:27> 'void *const' lvalue
  |   `-MemberExpr 0x5590eceef5a0 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
  |     `-MemberExpr 0x5590eceef568 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |       `-ImplicitCastExpr 0x5590eceef550 <col:51, col:53> 'const TValue *' <LValueToRValue>
  |         `-ParenExpr 0x5590eceef530 <col:51, col:53> 'const TValue *' lvalue
  |           `-DeclRefExpr 0x5590eceef508 <lvm.c:262:44> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceef700 <./llimits.h:63:25, col:27> 'void *' <LValueToRValue>
    `-ParenExpr 0x5590eceef6c8 <col:25, col:27> 'void *const' lvalue
      `-MemberExpr 0x5590eceef690 <./lobject.h:92:51, col:62> 'void *const' lvalue .p 0x5590ece76b00
        `-MemberExpr 0x5590eceef658 <col:51, col:56> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590eceef640 <col:51, col:53> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590eceef620 <col:51, col:53> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590eceef5f8 <lvm.c:262:58> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
return [B15.11];
   Preds (1): B7
   Succs (1): B0

 [B16]
  case 1:
   1: DeclRefExpr 0x5590eceef260 <lvm.c:261:38> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   2: ImplicitCastExpr 0x5590eceef2a8 <./lobject.h:100:45, col:47> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceef288 <col:45, col:47> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceef260 <lvm.c:261:38> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B16.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceef2c0 <./lobject.h:100:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceef2a8 <col:45, col:47> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceef288 <col:45, col:47> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceef260 <lvm.c:261:38> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B16.2]->value
   4: MemberExpr 0x5590eceef2f8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
`-MemberExpr 0x5590eceef2c0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceef2a8 <col:45, col:47> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceef288 <col:45, col:47> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceef260 <lvm.c:261:38> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B16.3].b
   5: ImplicitCastExpr 0x5590eceef440 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceef330 <col:25, col:27> 'const int' lvalue
  `-MemberExpr 0x5590eceef2f8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
    `-MemberExpr 0x5590eceef2c0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceef2a8 <col:45, col:47> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceef288 <col:45, col:47> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceef260 <lvm.c:261:38> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B16.4]) (ImplicitCastExpr, LValueToRValue, int)
   6: DeclRefExpr 0x5590eceef350 <lvm.c:261:52> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
   7: ImplicitCastExpr 0x5590eceef398 <./lobject.h:100:45, col:47> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceef378 <col:45, col:47> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceef350 <lvm.c:261:52> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B16.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590eceef3b0 <./lobject.h:100:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceef398 <col:45, col:47> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceef378 <col:45, col:47> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceef350 <lvm.c:261:52> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B16.7]->value
   9: MemberExpr 0x5590eceef3e8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
`-MemberExpr 0x5590eceef3b0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceef398 <col:45, col:47> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceef378 <col:45, col:47> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceef350 <lvm.c:261:52> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B16.8].b
  10: ImplicitCastExpr 0x5590eceef458 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceef420 <col:25, col:27> 'const int' lvalue
  `-MemberExpr 0x5590eceef3e8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
    `-MemberExpr 0x5590eceef3b0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceef398 <col:45, col:47> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceef378 <col:45, col:47> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceef350 <lvm.c:261:52> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B16.9]) (ImplicitCastExpr, LValueToRValue, int)
  11: BinaryOperator 0x5590eceef470 <./llimits.h:63:25, col:27> 'int' '=='
|-ImplicitCastExpr 0x5590eceef440 <col:25, col:27> 'int' <LValueToRValue>
| `-ParenExpr 0x5590eceef330 <col:25, col:27> 'const int' lvalue
|   `-MemberExpr 0x5590eceef2f8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
|     `-MemberExpr 0x5590eceef2c0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|       `-ImplicitCastExpr 0x5590eceef2a8 <col:45, col:47> 'const TValue *' <LValueToRValue>
|         `-ParenExpr 0x5590eceef288 <col:45, col:47> 'const TValue *' lvalue
|           `-DeclRefExpr 0x5590eceef260 <lvm.c:261:38> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
`-ImplicitCastExpr 0x5590eceef458 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
  `-ParenExpr 0x5590eceef420 <col:25, col:27> 'const int' lvalue
    `-MemberExpr 0x5590eceef3e8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
      `-MemberExpr 0x5590eceef3b0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceef398 <col:45, col:47> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceef378 <col:45, col:47> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceef350 <lvm.c:261:52> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B16.5] == [B16.10]
  12: ReturnStmt 0x5590eceef498 <lvm.c:261:24, ./llimits.h:63:27>
`-BinaryOperator 0x5590eceef470 <col:25, col:27> 'int' '=='
  |-ImplicitCastExpr 0x5590eceef440 <col:25, col:27> 'int' <LValueToRValue>
  | `-ParenExpr 0x5590eceef330 <col:25, col:27> 'const int' lvalue
  |   `-MemberExpr 0x5590eceef2f8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
  |     `-MemberExpr 0x5590eceef2c0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |       `-ImplicitCastExpr 0x5590eceef2a8 <col:45, col:47> 'const TValue *' <LValueToRValue>
  |         `-ParenExpr 0x5590eceef288 <col:45, col:47> 'const TValue *' lvalue
  |           `-DeclRefExpr 0x5590eceef260 <lvm.c:261:38> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceef458 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
    `-ParenExpr 0x5590eceef420 <col:25, col:27> 'const int' lvalue
      `-MemberExpr 0x5590eceef3e8 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x5590ece76bb8
        `-MemberExpr 0x5590eceef3b0 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590eceef398 <col:45, col:47> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590eceef378 <col:45, col:47> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590eceef350 <lvm.c:261:52> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
return [B16.11];
   Preds (1): B7
   Succs (1): B0

 [B17]
  case 3:
   1: DeclRefExpr 0x5590eceeef58 <lvm.c:260:48> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
t1
   2: ImplicitCastExpr 0x5590eceeefa0 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceeef80 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceeef58 <lvm.c:260:48> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
([B17.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceeefb8 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceeefa0 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceeef80 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceeef58 <lvm.c:260:48> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B17.2]->value
   4: MemberExpr 0x5590eceeeff0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590eceeefb8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceeefa0 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceeef80 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceeef58 <lvm.c:260:48> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
[B17.3].n
   5: ImplicitCastExpr 0x5590eceef178 <./luaconf.h:540:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590eceef048 <col:27, col:29> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5590eceef028 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x5590eceeeff0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
      `-MemberExpr 0x5590eceeefb8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceeefa0 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceeef80 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceeef58 <lvm.c:260:48> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
(([B17.4])) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590eceef068 <lvm.c:260:60> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
t2
   7: ImplicitCastExpr 0x5590eceef0b0 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceef090 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceef068 <lvm.c:260:60> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
([B17.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590eceef0c8 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceef0b0 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceef090 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceef068 <lvm.c:260:60> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B17.7]->value
   9: MemberExpr 0x5590eceef100 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590eceef0c8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceef0b0 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceef090 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceef068 <lvm.c:260:60> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B17.8].n
  10: ImplicitCastExpr 0x5590eceef190 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590eceef158 <col:32, col:34> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5590eceef138 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x5590eceef100 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
      `-MemberExpr 0x5590eceef0c8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceef0b0 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceef090 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceef068 <lvm.c:260:60> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
(([B17.9])) (ImplicitCastExpr, LValueToRValue, lua_Number)
  11: BinaryOperator 0x5590eceef1a8 <./luaconf.h:540:27, col:34> 'int' '=='
|-ImplicitCastExpr 0x5590eceef178 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590eceef048 <col:27, col:29> 'const lua_Number':'const double' lvalue
|   `-ParenExpr 0x5590eceef028 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
|     `-MemberExpr 0x5590eceeeff0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
|       `-MemberExpr 0x5590eceeefb8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|         `-ImplicitCastExpr 0x5590eceeefa0 <col:44, col:46> 'const TValue *' <LValueToRValue>
|           `-ParenExpr 0x5590eceeef80 <col:44, col:46> 'const TValue *' lvalue
|             `-DeclRefExpr 0x5590eceeef58 <lvm.c:260:48> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
`-ImplicitCastExpr 0x5590eceef190 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590eceef158 <col:32, col:34> 'const lua_Number':'const double' lvalue
    `-ParenExpr 0x5590eceef138 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5590eceef100 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
        `-MemberExpr 0x5590eceef0c8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590eceef0b0 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590eceef090 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590eceef068 <lvm.c:260:60> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
[B17.5] == [B17.10]
  12: ReturnStmt 0x5590eceef1f0 <lvm.c:260:23, ./luaconf.h:540:35>
`-ParenExpr 0x5590eceef1d0 <col:26, col:35> 'int'
  `-BinaryOperator 0x5590eceef1a8 <col:27, col:34> 'int' '=='
    |-ImplicitCastExpr 0x5590eceef178 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
    | `-ParenExpr 0x5590eceef048 <col:27, col:29> 'const lua_Number':'const double' lvalue
    |   `-ParenExpr 0x5590eceef028 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    |     `-MemberExpr 0x5590eceeeff0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
    |       `-MemberExpr 0x5590eceeefb8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    |         `-ImplicitCastExpr 0x5590eceeefa0 <col:44, col:46> 'const TValue *' <LValueToRValue>
    |           `-ParenExpr 0x5590eceeef80 <col:44, col:46> 'const TValue *' lvalue
    |             `-DeclRefExpr 0x5590eceeef58 <lvm.c:260:48> 'const TValue *' lvalue ParmVar 0x5590eceeea60 't1' 'const TValue *'
    `-ImplicitCastExpr 0x5590eceef190 <./luaconf.h:540:32, col:34> 'lua_Number':'double' <LValueToRValue>
      `-ParenExpr 0x5590eceef158 <col:32, col:34> 'const lua_Number':'const double' lvalue
        `-ParenExpr 0x5590eceef138 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
          `-MemberExpr 0x5590eceef100 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
            `-MemberExpr 0x5590eceef0c8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceef0b0 <col:44, col:46> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceef090 <col:44, col:46> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceef068 <lvm.c:260:60> 'const TValue *' lvalue ParmVar 0x5590eceeead0 't2' 'const TValue *'
return ([B17.11]);
   Preds (1): B7
   Succs (1): B0

 [B18]
  case 0:
   1: IntegerLiteral 0x5590eceeeec8 <lvm.c:259:27> 'int' 1
1
   2: ReturnStmt 0x5590eceeeee8 <lvm.c:259:20, col:27>
`-IntegerLiteral 0x5590eceeeec8 <col:27> 'int' 1
return [B18.1];
   Preds (1): B7
   Succs (1): B0

 [B0 (EXIT)]
   Preds (9): B1 B5 B8 B10 B13 B15 B16 B17
      B18
