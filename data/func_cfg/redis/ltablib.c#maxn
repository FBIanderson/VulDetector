static int maxn(lua_State *L)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x5597152e6e50 <ltablib.c:67:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x559715288800 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   2: ImplicitCastExpr 0x5597152e6f28 <ltablib.c:67:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e6e50 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x559715288800 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   3: DeclRefExpr 0x5597152e6e78 <ltablib.c:67:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152e6f78 <ltablib.c:67:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e6e78 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5597152e6ea0 <ltablib.c:67:21> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
max
   6: ImplicitCastExpr 0x5597152e6f90 <ltablib.c:67:21> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x5597152e6ea0 <col:21> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_Number)
   7: CallExpr 0x5597152e6f40 <ltablib.c:67:3, col:24> 'void'
|-ImplicitCastExpr 0x5597152e6f28 <col:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e6e50 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x559715288800 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x5597152e6f78 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e6e78 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
`-ImplicitCastExpr 0x5597152e6f90 <col:21> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x5597152e6ea0 <col:21> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
[B1.2]([B1.4], [B1.6])
   8: IntegerLiteral 0x5597152e6fa8 <ltablib.c:68:10> 'int' 1
1
   9: ReturnStmt 0x5597152e6fc8 <ltablib.c:68:3, col:10>
`-IntegerLiteral 0x5597152e6fa8 <col:10> 'int' 1
return [B1.8];
   Preds (1): B6
   Succs (1): B0

 [B2]
   Preds (3): B3 B4 B5
   Succs (1): B6

 [B3]
   1: DeclRefExpr 0x5597152e6d18 <ltablib.c:64:26> 'lua_Number':'double' lvalue Var 0x5597152e6a80 'v' 'lua_Number':'double'
v
   2: ImplicitCastExpr 0x5597152e6d40 <ltablib.c:64:26> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x5597152e6d18 <col:26> 'lua_Number':'double' lvalue Var 0x5597152e6a80 'v' 'lua_Number':'double'
[B3.1] (ImplicitCastExpr, LValueToRValue, lua_Number)
   3: DeclRefExpr 0x5597152e6cf0 <ltablib.c:64:20> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
max
   4: BinaryOperator 0x5597152e6d58 <ltablib.c:64:20, col:26> 'lua_Number':'double' '='
|-DeclRefExpr 0x5597152e6cf0 <col:20> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
`-ImplicitCastExpr 0x5597152e6d40 <col:26> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x5597152e6d18 <col:26> 'lua_Number':'double' lvalue Var 0x5597152e6a80 'v' 'lua_Number':'double'
[B3.3] = [B3.2]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5597152e6ae0 <ltablib.c:63:22> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x559715287020 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
lua_tonumber
   2: ImplicitCastExpr 0x5597152e6bc8 <ltablib.c:63:22> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e6ae0 <col:22> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x559715287020 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   3: DeclRefExpr 0x5597152e6b08 <ltablib.c:63:35> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152e6c18 <ltablib.c:63:35> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e6b08 <col:35> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5597152e6b30 <ltablib.c:63:39> 'int' 1
1
   6: UnaryOperator 0x5597152e6b50 <ltablib.c:63:38, col:39> 'int' prefix '-'
`-IntegerLiteral 0x5597152e6b30 <col:39> 'int' 1
-[B4.5]
   7: CallExpr 0x5597152e6be0 <ltablib.c:63:22, col:40> 'lua_Number':'double'
|-ImplicitCastExpr 0x5597152e6bc8 <col:22> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e6ae0 <col:22> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x559715287020 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e6c18 <col:35> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e6b08 <col:35> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
`-UnaryOperator 0x5597152e6b50 <col:38, col:39> 'int' prefix '-'
  `-IntegerLiteral 0x5597152e6b30 <col:39> 'int' 1
[B4.2]([B4.4], [B4.6])
   8: DeclStmt 0x5597152e6c30 <ltablib.c:63:7, col:41>col:18
`-VarDecl 0x5597152e6a80 <col:7, col:40> col:18 used v 'lua_Number':'double' cinit
  `-CallExpr 0x5597152e6be0 <col:22, col:40> 'lua_Number':'double'
    |-ImplicitCastExpr 0x5597152e6bc8 <col:22> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5597152e6ae0 <col:22> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x559715287020 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
    |-ImplicitCastExpr 0x5597152e6c18 <col:35> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5597152e6b08 <col:35> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
    `-UnaryOperator 0x5597152e6b50 <col:38, col:39> 'int' prefix '-'
      `-IntegerLiteral 0x5597152e6b30 <col:39> 'int' 1
lua_Number v = lua_tonumber(L, -1);
   9: DeclRefExpr 0x5597152e6c48 <ltablib.c:64:11> 'lua_Number':'double' lvalue Var 0x5597152e6a80 'v' 'lua_Number':'double'
v
  10: ImplicitCastExpr 0x5597152e6c98 <ltablib.c:64:11> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x5597152e6c48 <col:11> 'lua_Number':'double' lvalue Var 0x5597152e6a80 'v' 'lua_Number':'double'
[B4.9] (ImplicitCastExpr, LValueToRValue, lua_Number)
  11: DeclRefExpr 0x5597152e6c70 <ltablib.c:64:15> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
max
  12: ImplicitCastExpr 0x5597152e6cb0 <ltablib.c:64:15> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x5597152e6c70 <col:15> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
[B4.11] (ImplicitCastExpr, LValueToRValue, lua_Number)
  13: BinaryOperator 0x5597152e6cc8 <ltablib.c:64:11, col:15> 'int' '>'
|-ImplicitCastExpr 0x5597152e6c98 <col:11> 'lua_Number':'double' <LValueToRValue>
| `-DeclRefExpr 0x5597152e6c48 <col:11> 'lua_Number':'double' lvalue Var 0x5597152e6a80 'v' 'lua_Number':'double'
`-ImplicitCastExpr 0x5597152e6cb0 <col:15> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x5597152e6c70 <col:15> 'lua_Number':'double' lvalue Var 0x5597152e6498 'max' 'lua_Number':'double'
[B4.10] > [B4.12]
   T: if [B4.13]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x5597152e67d0 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55971525fe50 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x5597152e68c8 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e67d0 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55971525fe50 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5597152e67f8 <ltablib.c:61:13> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152e6918 <ltablib.c:61:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e67f8 <col:13> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5597152e6820 <ltablib.c:61:16> 'int' 1
1
   6: UnaryOperator 0x5597152e6860 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x5597152e6840 <col:38, col:40> 'int'
  `-IntegerLiteral 0x5597152e6820 <ltablib.c:61:16> 'int' 1
-([B5.5])
   7: IntegerLiteral 0x5597152e6880 <./lua.h:254:42> 'int' 1
1
   8: BinaryOperator 0x5597152e68a0 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x5597152e6860 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x5597152e6840 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x5597152e6820 <ltablib.c:61:16> 'int' 1
`-IntegerLiteral 0x5597152e6880 <./lua.h:254:42> 'int' 1
[B5.6] - [B5.7]
   9: CallExpr 0x5597152e68e0 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x5597152e68c8 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e67d0 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55971525fe50 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e6918 <ltablib.c:61:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e67f8 <col:13> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
`-BinaryOperator 0x5597152e68a0 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x5597152e6860 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x5597152e6840 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x5597152e6820 <ltablib.c:61:16> 'int' 1
  `-IntegerLiteral 0x5597152e6880 <./lua.h:254:42> 'int' 1
[B5.2]([B5.4], [B5.8])
  10: DeclRefExpr 0x5597152e6930 <ltablib.c:62:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
  11: ImplicitCastExpr 0x5597152e69c0 <ltablib.c:62:9> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e6930 <col:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B5.10] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  12: DeclRefExpr 0x5597152e6958 <ltablib.c:62:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x5597152e6a10 <ltablib.c:62:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e6958 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B5.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: IntegerLiteral 0x5597152e6980 <ltablib.c:62:22> 'int' 1
1
  15: UnaryOperator 0x5597152e69a0 <ltablib.c:62:21, col:22> 'int' prefix '-'
`-IntegerLiteral 0x5597152e6980 <col:22> 'int' 1
-[B5.14]
  16: CallExpr 0x5597152e69d8 <ltablib.c:62:9, col:23> 'int'
|-ImplicitCastExpr 0x5597152e69c0 <col:9> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e6930 <col:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e6a10 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e6958 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
`-UnaryOperator 0x5597152e69a0 <col:21, col:22> 'int' prefix '-'
  `-IntegerLiteral 0x5597152e6980 <col:22> 'int' 1
[B5.11]([B5.13], [B5.15])
  17: IntegerLiteral 0x5597152e6a28 <./lua.h:77:22> 'int' 3
3
  18: BinaryOperator 0x5597152e6a48 <ltablib.c:62:9, ./lua.h:77:22> 'int' '=='
|-CallExpr 0x5597152e69d8 <ltablib.c:62:9, col:23> 'int'
| |-ImplicitCastExpr 0x5597152e69c0 <col:9> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5597152e6930 <col:9> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x5597152e6a10 <col:18> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x5597152e6958 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
| `-UnaryOperator 0x5597152e69a0 <col:21, col:22> 'int' prefix '-'
|   `-IntegerLiteral 0x5597152e6980 <col:22> 'int' 1
`-IntegerLiteral 0x5597152e6a28 <./lua.h:77:22> 'int' 3
[B5.16] == [B5.17]
   T: if [B5.18]
   Preds (1): B6
   Succs (2): B4 B2

 [B6]
   1: DeclRefExpr 0x5597152e66f8 <ltablib.c:60:10> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55971528e110 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_next
   2: ImplicitCastExpr 0x5597152e6768 <ltablib.c:60:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e66f8 <col:10> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55971528e110 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x5597152e6720 <ltablib.c:60:19> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152e67b8 <ltablib.c:60:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e6720 <col:19> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5597152e6748 <ltablib.c:60:22> 'int' 1
1
   6: CallExpr 0x5597152e6780 <ltablib.c:60:10, col:23> 'int'
|-ImplicitCastExpr 0x5597152e6768 <col:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e66f8 <col:10> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55971528e110 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x5597152e67b8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e6720 <col:19> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
`-IntegerLiteral 0x5597152e6748 <col:22> 'int' 1
[B6.2]([B6.4], [B6.5])
   T: while [B6.6]
   Preds (2): B2 B7
   Succs (2): B5 B1

 [B7]
   1: IntegerLiteral 0x5597152e64f8 <ltablib.c:57:20> 'int' 0
0
   2: ImplicitCastExpr 0x5597152e6518 <ltablib.c:57:20> 'lua_Number':'double' <IntegralToFloating>
`-IntegerLiteral 0x5597152e64f8 <col:20> 'int' 0
[B7.1] (ImplicitCastExpr, IntegralToFloating, lua_Number)
   3: DeclStmt 0x5597152e6530 <ltablib.c:57:3, col:21>col:14
`-VarDecl 0x5597152e6498 <col:3, col:20> col:14 used max 'lua_Number':'double' cinit
  `-ImplicitCastExpr 0x5597152e6518 <col:20> 'lua_Number':'double' <IntegralToFloating>
    `-IntegerLiteral 0x5597152e64f8 <col:20> 'int' 0
lua_Number max = 0;
   4: DeclRefExpr 0x5597152e6548 <ltablib.c:58:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
luaL_checktype
   5: ImplicitCastExpr 0x5597152e65d8 <ltablib.c:58:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e6548 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B7.4] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
   6: DeclRefExpr 0x5597152e6570 <ltablib.c:58:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x5597152e6630 <ltablib.c:58:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e6570 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B7.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: IntegerLiteral 0x5597152e6598 <ltablib.c:58:21> 'int' 1
1
   9: IntegerLiteral 0x5597152e65b8 <./lua.h:79:21> 'int' 5
5
  10: CallExpr 0x5597152e65f0 <ltablib.c:58:3, col:34> 'void'
|-ImplicitCastExpr 0x5597152e65d8 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e6548 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x5597152d92f8 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5597152e6630 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152e6570 <col:18> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
|-IntegerLiteral 0x5597152e6598 <col:21> 'int' 1
`-IntegerLiteral 0x5597152e65b8 <./lua.h:79:21> 'int' 5
[B7.5]([B7.7], [B7.8], [B7.9])
  11: DeclRefExpr 0x5597152e6648 <ltablib.c:59:3> 'void (lua_State *)':'void (lua_State *)' Function 0x559715288598 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
  12: ImplicitCastExpr 0x5597152e6698 <ltablib.c:59:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152e6648 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x559715288598 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B7.11] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
  13: DeclRefExpr 0x5597152e6670 <ltablib.c:59:15> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x5597152e66e0 <ltablib.c:59:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152e6670 <col:15> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B7.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: CallExpr 0x5597152e66b0 <ltablib.c:59:3, col:16> 'void'
|-ImplicitCastExpr 0x5597152e6698 <col:3> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152e6648 <col:3> 'void (lua_State *)':'void (lua_State *)' Function 0x559715288598 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x5597152e66e0 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5597152e6670 <col:15> 'lua_State *' lvalue ParmVar 0x5597152e6350 'L' 'lua_State *'
[B7.12]([B7.14])
   Preds (1): B8
   Succs (1): B6

 [B0 (EXIT)]
   Preds (1): B1
