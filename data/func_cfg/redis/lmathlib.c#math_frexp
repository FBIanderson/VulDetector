static int math_frexp(lua_State *L)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclStmt 0x563b15771b00 <lmathlib.c:140:3, col:8>col:7
`-VarDecl 0x563b15771aa0 <col:3, col:7> col:7 used e 'int'
int e;
   2: DeclRefExpr 0x563b15771b18 <lmathlib.c:141:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
lua_pushnumber
   3: ImplicitCastExpr 0x563b15771d28 <lmathlib.c:141:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b15771b18 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
[B1.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Number))
   4: DeclRefExpr 0x563b15771b40 <lmathlib.c:141:18> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x563b15771d78 <lmathlib.c:141:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15771b40 <col:18> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
[B1.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: DeclRefExpr 0x563b15771b68 <lmathlib.c:141:21> 'double (double, int *)' Function 0x563b156aeb20 'frexp' 'double (double, int *)'
frexp
   7: ImplicitCastExpr 0x563b15771cd8 <lmathlib.c:141:21> 'double (*)(double, int *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b15771b68 <col:21> 'double (double, int *)' Function 0x563b156aeb20 'frexp' 'double (double, int *)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, double (*)(double, int *))
   8: DeclRefExpr 0x563b15771b90 <lmathlib.c:141:27> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
luaL_checknumber
   9: ImplicitCastExpr 0x563b15771c00 <lmathlib.c:141:27> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b15771b90 <col:27> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B1.8] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
  10: DeclRefExpr 0x563b15771bb8 <lmathlib.c:141:44> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x563b15771c50 <lmathlib.c:141:44> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15771bb8 <col:44> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x563b15771be0 <lmathlib.c:141:47> 'int' 1
1
  13: CallExpr 0x563b15771c18 <lmathlib.c:141:27, col:48> 'lua_Number':'double'
|-ImplicitCastExpr 0x563b15771c00 <col:27> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b15771b90 <col:27> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x563b15771c50 <col:44> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15771bb8 <col:44> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
`-IntegerLiteral 0x563b15771be0 <col:47> 'int' 1
[B1.9]([B1.11], [B1.12])
  14: DeclRefExpr 0x563b15771c68 <lmathlib.c:141:52> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
e
  15: UnaryOperator 0x563b15771c90 <lmathlib.c:141:51, col:52> 'int *' prefix '&'
`-DeclRefExpr 0x563b15771c68 <col:52> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
&[B1.14]
  16: CallExpr 0x563b15771cf0 <lmathlib.c:141:21, col:53> 'double'
|-ImplicitCastExpr 0x563b15771cd8 <col:21> 'double (*)(double, int *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b15771b68 <col:21> 'double (double, int *)' Function 0x563b156aeb20 'frexp' 'double (double, int *)'
|-CallExpr 0x563b15771c18 <col:27, col:48> 'lua_Number':'double'
| |-ImplicitCastExpr 0x563b15771c00 <col:27> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563b15771b90 <col:27> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
| |-ImplicitCastExpr 0x563b15771c50 <col:44> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563b15771bb8 <col:44> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
| `-IntegerLiteral 0x563b15771be0 <col:47> 'int' 1
`-UnaryOperator 0x563b15771c90 <col:51, col:52> 'int *' prefix '&'
  `-DeclRefExpr 0x563b15771c68 <col:52> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
[B1.7]([B1.13], [B1.15])
  17: CallExpr 0x563b15771d40 <lmathlib.c:141:3, col:54> 'void'
|-ImplicitCastExpr 0x563b15771d28 <col:3> 'void (*)(lua_State *, lua_Number)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b15771b18 <col:3> 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)' Function 0x563b1571f300 'lua_pushnumber' 'void (lua_State *, lua_Number)':'void (lua_State *, lua_Number)'
|-ImplicitCastExpr 0x563b15771d78 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15771b40 <col:18> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
`-CallExpr 0x563b15771cf0 <col:21, col:53> 'double'
  |-ImplicitCastExpr 0x563b15771cd8 <col:21> 'double (*)(double, int *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563b15771b68 <col:21> 'double (double, int *)' Function 0x563b156aeb20 'frexp' 'double (double, int *)'
  |-CallExpr 0x563b15771c18 <col:27, col:48> 'lua_Number':'double'
  | |-ImplicitCastExpr 0x563b15771c00 <col:27> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x563b15771b90 <col:27> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563b1575b488 'luaL_checknumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
  | |-ImplicitCastExpr 0x563b15771c50 <col:44> 'lua_State *' <LValueToRValue>
  | | `-DeclRefExpr 0x563b15771bb8 <col:44> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
  | `-IntegerLiteral 0x563b15771be0 <col:47> 'int' 1
  `-UnaryOperator 0x563b15771c90 <col:51, col:52> 'int *' prefix '&'
    `-DeclRefExpr 0x563b15771c68 <col:52> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
[B1.3]([B1.5], [B1.16])
  18: DeclRefExpr 0x563b15771d90 <lmathlib.c:142:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x563b1571f570 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
  19: ImplicitCastExpr 0x563b15771e68 <lmathlib.c:142:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563b15771d90 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x563b1571f570 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B1.18] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
  20: DeclRefExpr 0x563b15771db8 <lmathlib.c:142:19> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
L
  21: ImplicitCastExpr 0x563b15771eb8 <lmathlib.c:142:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563b15771db8 <col:19> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
[B1.20] (ImplicitCastExpr, LValueToRValue, lua_State *)
  22: DeclRefExpr 0x563b15771de0 <lmathlib.c:142:22> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
e
  23: ImplicitCastExpr 0x563b15771ed0 <lmathlib.c:142:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x563b15771de0 <col:22> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
[B1.22] (ImplicitCastExpr, LValueToRValue, int)
  24: ImplicitCastExpr 0x563b15771ee8 <lmathlib.c:142:22> 'lua_Integer':'long' <IntegralCast>
`-ImplicitCastExpr 0x563b15771ed0 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563b15771de0 <col:22> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
[B1.23] (ImplicitCastExpr, IntegralCast, lua_Integer)
  25: CallExpr 0x563b15771e80 <lmathlib.c:142:3, col:23> 'void'
|-ImplicitCastExpr 0x563b15771e68 <col:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563b15771d90 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x563b1571f570 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x563b15771eb8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563b15771db8 <col:19> 'lua_State *' lvalue ParmVar 0x563b15771950 'L' 'lua_State *'
`-ImplicitCastExpr 0x563b15771ee8 <col:22> 'lua_Integer':'long' <IntegralCast>
  `-ImplicitCastExpr 0x563b15771ed0 <col:22> 'int' <LValueToRValue>
    `-DeclRefExpr 0x563b15771de0 <col:22> 'int' lvalue Var 0x563b15771aa0 'e' 'int'
[B1.19]([B1.21], [B1.24])
  26: IntegerLiteral 0x563b15771f00 <lmathlib.c:143:10> 'int' 2
2
  27: ReturnStmt 0x563b15771f20 <lmathlib.c:143:3, col:10>
`-IntegerLiteral 0x563b15771f00 <col:10> 'int' 2
return [B1.26];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
