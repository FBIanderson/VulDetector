static void setboolfield(lua_State *L, const char *key, int value)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x55626ed02a48 <loslib.c:96:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55626ecbafc0 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushboolean
   2: ImplicitCastExpr 0x55626ed02ac0 <loslib.c:96:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed02a48 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55626ecbafc0 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55626ed02a70 <loslib.c:96:19> 'lua_State *' lvalue ParmVar 0x55626ed02730 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55626ed02b10 <loslib.c:96:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed02a70 <col:19> 'lua_State *' lvalue ParmVar 0x55626ed02730 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55626ed02a98 <loslib.c:96:22> 'int' lvalue ParmVar 0x55626ed02820 'value' 'int'
value
   6: ImplicitCastExpr 0x55626ed02b28 <loslib.c:96:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x55626ed02a98 <col:22> 'int' lvalue ParmVar 0x55626ed02820 'value' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x55626ed02ad8 <loslib.c:96:3, col:27> 'void'
|-ImplicitCastExpr 0x55626ed02ac0 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed02a48 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55626ecbafc0 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55626ed02b10 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed02a70 <col:19> 'lua_State *' lvalue ParmVar 0x55626ed02730 'L' 'lua_State *'
`-ImplicitCastExpr 0x55626ed02b28 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55626ed02a98 <col:22> 'int' lvalue ParmVar 0x55626ed02820 'value' 'int'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x55626ed02b40 <loslib.c:97:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55626ecbcac8 'lua_setfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
lua_setfield
   9: ImplicitCastExpr 0x55626ed02bf8 <loslib.c:97:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed02b40 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55626ecbcac8 'lua_setfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
[B1.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, const char *))
  10: DeclRefExpr 0x55626ed02b68 <loslib.c:97:16> 'lua_State *' lvalue ParmVar 0x55626ed02730 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x55626ed02c50 <loslib.c:97:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed02b68 <col:16> 'lua_State *' lvalue ParmVar 0x55626ed02730 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x55626ed02b90 <loslib.c:97:20> 'int' 2
2
  13: UnaryOperator 0x55626ed02bb0 <loslib.c:97:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55626ed02b90 <col:20> 'int' 2
-[B1.12]
  14: DeclRefExpr 0x55626ed02bd0 <loslib.c:97:23> 'const char *' lvalue ParmVar 0x55626ed027a8 'key' 'const char *'
key
  15: ImplicitCastExpr 0x55626ed02c68 <loslib.c:97:23> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55626ed02bd0 <col:23> 'const char *' lvalue ParmVar 0x55626ed027a8 'key' 'const char *'
[B1.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: CallExpr 0x55626ed02c10 <loslib.c:97:3, col:26> 'void'
|-ImplicitCastExpr 0x55626ed02bf8 <col:3> 'void (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed02b40 <col:3> 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)' Function 0x55626ecbcac8 'lua_setfield' 'void (lua_State *, int, const char *)':'void (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x55626ed02c50 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed02b68 <col:16> 'lua_State *' lvalue ParmVar 0x55626ed02730 'L' 'lua_State *'
|-UnaryOperator 0x55626ed02bb0 <col:19, col:20> 'int' prefix '-'
| `-IntegerLiteral 0x55626ed02b90 <col:20> 'int' 2
`-ImplicitCastExpr 0x55626ed02c68 <col:23> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55626ed02bd0 <col:23> 'const char *' lvalue ParmVar 0x55626ed027a8 'key' 'const char *'
[B1.9]([B1.11], [B1.13], [B1.15])
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: ReturnStmt 0x55626ed029f8 <loslib.c:95:5>
return;
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x55626ed02970 <loslib.c:94:7> 'int' lvalue ParmVar 0x55626ed02820 'value' 'int'
value
   2: ImplicitCastExpr 0x55626ed029b8 <loslib.c:94:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55626ed02970 <col:7> 'int' lvalue ParmVar 0x55626ed02820 'value' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55626ed02998 <loslib.c:94:15> 'int' 0
0
   4: BinaryOperator 0x55626ed029d0 <loslib.c:94:7, col:15> 'int' '<'
|-ImplicitCastExpr 0x55626ed029b8 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55626ed02970 <col:7> 'int' lvalue ParmVar 0x55626ed02820 'value' 'int'
`-IntegerLiteral 0x55626ed02998 <col:15> 'int' 0
[B3.2] < [B3.3]
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
