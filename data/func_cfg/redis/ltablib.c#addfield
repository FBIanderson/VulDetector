static void addfield(lua_State *L, luaL_Buffer *b, int i)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x5597152eacc0 <ltablib.c:140:5> 'void (luaL_Buffer *)':'void (luaL_Buffer *)' Function 0x5597152e0cb8 'luaL_addvalue' 'void (luaL_Buffer *)':'void (luaL_Buffer *)'
luaL_addvalue
   2: ImplicitCastExpr 0x5597152ead68 <ltablib.c:140:5> 'void (*)(luaL_Buffer *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152eacc0 <col:5> 'void (luaL_Buffer *)':'void (luaL_Buffer *)' Function 0x5597152e0cb8 'luaL_addvalue' 'void (luaL_Buffer *)':'void (luaL_Buffer *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(luaL_Buffer *))
   3: DeclRefExpr 0x5597152eace8 <ltablib.c:140:19> 'luaL_Buffer *' lvalue ParmVar 0x5597152ea3d0 'b' 'luaL_Buffer *'
b
   4: ImplicitCastExpr 0x5597152eadb0 <ltablib.c:140:19> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x5597152eace8 <col:19> 'luaL_Buffer *' lvalue ParmVar 0x5597152ea3d0 'b' 'luaL_Buffer *'
[B1.3] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
   5: CallExpr 0x5597152ead80 <ltablib.c:140:5, col:20> 'void'
|-ImplicitCastExpr 0x5597152ead68 <col:5> 'void (*)(luaL_Buffer *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152eacc0 <col:5> 'void (luaL_Buffer *)':'void (luaL_Buffer *)' Function 0x5597152e0cb8 'luaL_addvalue' 'void (luaL_Buffer *)':'void (luaL_Buffer *)'
`-ImplicitCastExpr 0x5597152eadb0 <col:19> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x5597152eace8 <col:19> 'luaL_Buffer *' lvalue ParmVar 0x5597152ea3d0 'b' 'luaL_Buffer *'
[B1.2]([B1.4])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5597152ea880 <ltablib.c:138:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x5597152d9ed8 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x5597152eabc8 <ltablib.c:138:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152ea880 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x5597152d9ed8 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5597152ea8a8 <ltablib.c:138:16> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152eac28 <ltablib.c:138:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152ea8a8 <col:16> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5597152ea908 <ltablib.c:138:19, ./luaconf.h:201:25> 'char [53]' lvalue "invalid value (%s) at index %d in table for 'concat'"
"invalid value (%s) at index %d in table for 'concat'"
   6: ImplicitCastExpr 0x5597152eac40 <ltablib.c:138:19, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5597152ea908 <ltablib.c:138:19, ./luaconf.h:201:25> 'char [53]' lvalue "invalid value (%s) at index %d in table for 'concat'"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5597152eac58 <ltablib.c:138:19, ./luaconf.h:201:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5597152eac40 <ltablib.c:138:19, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5597152ea908 <ltablib.c:138:19, ./luaconf.h:201:25> 'char [53]' lvalue "invalid value (%s) at index %d in table for 'concat'"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x5597152ea978 <./lauxlib.h:109:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x559715286548 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
lua_typename
   9: ImplicitCastExpr 0x5597152eab38 <./lauxlib.h:109:28> 'const char *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152ea978 <col:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x559715286548 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
[B2.8] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int))
  10: DeclRefExpr 0x5597152ea9a0 <ltablib.c:139:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x5597152eab88 <ltablib.c:139:51> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152ea9a0 <col:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
[B2.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: DeclRefExpr 0x5597152ea9c8 <./lauxlib.h:109:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
  13: ImplicitCastExpr 0x5597152eaa78 <./lauxlib.h:109:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152ea9c8 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B2.12] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  14: DeclRefExpr 0x5597152ea9f0 <ltablib.c:139:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
L
  15: ImplicitCastExpr 0x5597152eaac8 <ltablib.c:139:51> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152ea9f0 <col:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
[B2.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: IntegerLiteral 0x5597152eaa18 <ltablib.c:139:55> 'int' 1
1
  17: UnaryOperator 0x5597152eaa38 <ltablib.c:139:54, col:55> 'int' prefix '-'
`-IntegerLiteral 0x5597152eaa18 <col:55> 'int' 1
-[B2.16]
  18: CallExpr 0x5597152eaa90 <./lauxlib.h:109:44, col:58> 'int'
|-ImplicitCastExpr 0x5597152eaa78 <col:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152ea9c8 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x5597152eaac8 <ltablib.c:139:51> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152ea9f0 <col:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
`-ParenExpr 0x5597152eaa58 <./lauxlib.h:109:55, col:57> 'int'
  `-UnaryOperator 0x5597152eaa38 <ltablib.c:139:54, col:55> 'int' prefix '-'
    `-IntegerLiteral 0x5597152eaa18 <col:55> 'int' 1
[B2.13]([B2.15], ([B2.17]))
  19: CallExpr 0x5597152eab50 <./lauxlib.h:109:28, col:59> 'const char *'
|-ImplicitCastExpr 0x5597152eab38 <col:28> 'const char *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152ea978 <col:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x559715286548 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
|-ImplicitCastExpr 0x5597152eab88 <ltablib.c:139:51> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152ea9a0 <col:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
`-CallExpr 0x5597152eaa90 <./lauxlib.h:109:44, col:58> 'int'
  |-ImplicitCastExpr 0x5597152eaa78 <col:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5597152ea9c8 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x5597152eaac8 <ltablib.c:139:51> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5597152ea9f0 <col:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
  `-ParenExpr 0x5597152eaa58 <./lauxlib.h:109:55, col:57> 'int'
    `-UnaryOperator 0x5597152eaa38 <ltablib.c:139:54, col:55> 'int' prefix '-'
      `-IntegerLiteral 0x5597152eaa18 <col:55> 'int' 1
[B2.9]([B2.11], [B2.18])
  20: DeclRefExpr 0x5597152eaba0 <ltablib.c:139:59> 'int' lvalue ParmVar 0x5597152ea460 'i' 'int'
i
  21: ImplicitCastExpr 0x5597152eac70 <ltablib.c:139:59> 'int' <LValueToRValue>
`-DeclRefExpr 0x5597152eaba0 <col:59> 'int' lvalue ParmVar 0x5597152ea460 'i' 'int'
[B2.20] (ImplicitCastExpr, LValueToRValue, int)
  22: CallExpr 0x5597152eabe0 <ltablib.c:138:5, line:139:60> 'int'
|-ImplicitCastExpr 0x5597152eabc8 <line:138:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152ea880 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x5597152d9ed8 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5597152eac28 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152ea8a8 <col:16> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
|-ImplicitCastExpr 0x5597152eac58 <col:19, ./luaconf.h:201:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5597152eac40 <ltablib.c:138:19, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5597152ea908 <ltablib.c:138:19, ./luaconf.h:201:25> 'char [53]' lvalue "invalid value (%s) at index %d in table for 'concat'"
|-CallExpr 0x5597152eab50 <./lauxlib.h:109:28, col:59> 'const char *'
| |-ImplicitCastExpr 0x5597152eab38 <col:28> 'const char *(*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5597152ea978 <col:28> 'const char *(lua_State *, int)':'const char *(lua_State *, int)' Function 0x559715286548 'lua_typename' 'const char *(lua_State *, int)':'const char *(lua_State *, int)'
| |-ImplicitCastExpr 0x5597152eab88 <ltablib.c:139:51> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x5597152ea9a0 <col:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
| `-CallExpr 0x5597152eaa90 <./lauxlib.h:109:44, col:58> 'int'
|   |-ImplicitCastExpr 0x5597152eaa78 <col:44> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x5597152ea9c8 <col:44> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x5597152862c0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|   |-ImplicitCastExpr 0x5597152eaac8 <ltablib.c:139:51> 'lua_State *' <LValueToRValue>
|   | `-DeclRefExpr 0x5597152ea9f0 <col:51> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
|   `-ParenExpr 0x5597152eaa58 <./lauxlib.h:109:55, col:57> 'int'
|     `-UnaryOperator 0x5597152eaa38 <ltablib.c:139:54, col:55> 'int' prefix '-'
|       `-IntegerLiteral 0x5597152eaa18 <col:55> 'int' 1
`-ImplicitCastExpr 0x5597152eac70 <col:59> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5597152eaba0 <col:59> 'int' lvalue ParmVar 0x5597152ea460 'i' 'int'
[B2.2]([B2.4], [B2.7], [B2.19], [B2.21])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5597152ea648 <ltablib.c:136:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528b158 'lua_rawgeti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_rawgeti
   2: ImplicitCastExpr 0x5597152ea6e0 <ltablib.c:136:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152ea648 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528b158 'lua_rawgeti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
   3: DeclRefExpr 0x5597152ea670 <ltablib.c:136:15> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5597152ea738 <ltablib.c:136:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152ea670 <col:15> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5597152ea698 <ltablib.c:136:18> 'int' 1
1
   6: DeclRefExpr 0x5597152ea6b8 <ltablib.c:136:21> 'int' lvalue ParmVar 0x5597152ea460 'i' 'int'
i
   7: ImplicitCastExpr 0x5597152ea750 <ltablib.c:136:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x5597152ea6b8 <col:21> 'int' lvalue ParmVar 0x5597152ea460 'i' 'int'
[B3.6] (ImplicitCastExpr, LValueToRValue, int)
   8: CallExpr 0x5597152ea6f8 <ltablib.c:136:3, col:22> 'void'
|-ImplicitCastExpr 0x5597152ea6e0 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152ea648 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x55971528b158 'lua_rawgeti' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x5597152ea738 <col:15> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152ea670 <col:15> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
|-IntegerLiteral 0x5597152ea698 <col:18> 'int' 1
`-ImplicitCastExpr 0x5597152ea750 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5597152ea6b8 <col:21> 'int' lvalue ParmVar 0x5597152ea460 'i' 'int'
[B3.2]([B3.4], [B3.5], [B3.7])
   9: DeclRefExpr 0x5597152ea768 <ltablib.c:137:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x559715285d38 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_isstring
  10: ImplicitCastExpr 0x5597152ea7f8 <ltablib.c:137:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5597152ea768 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x559715285d38 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
[B3.9] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  11: DeclRefExpr 0x5597152ea790 <ltablib.c:137:21> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x5597152ea848 <ltablib.c:137:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5597152ea790 <col:21> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
[B3.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: IntegerLiteral 0x5597152ea7b8 <ltablib.c:137:25> 'int' 1
1
  14: UnaryOperator 0x5597152ea7d8 <ltablib.c:137:24, col:25> 'int' prefix '-'
`-IntegerLiteral 0x5597152ea7b8 <col:25> 'int' 1
-[B3.13]
  15: CallExpr 0x5597152ea810 <ltablib.c:137:8, col:26> 'int'
|-ImplicitCastExpr 0x5597152ea7f8 <col:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5597152ea768 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x559715285d38 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x5597152ea848 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5597152ea790 <col:21> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
`-UnaryOperator 0x5597152ea7d8 <col:24, col:25> 'int' prefix '-'
  `-IntegerLiteral 0x5597152ea7b8 <col:25> 'int' 1
[B3.10]([B3.12], [B3.14])
  16: UnaryOperator 0x5597152ea860 <ltablib.c:137:7, col:26> 'int' prefix '!'
`-CallExpr 0x5597152ea810 <col:8, col:26> 'int'
  |-ImplicitCastExpr 0x5597152ea7f8 <col:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5597152ea768 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x559715285d38 'lua_isstring' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x5597152ea848 <col:21> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5597152ea790 <col:21> 'lua_State *' lvalue ParmVar 0x5597152ea360 'L' 'lua_State *'
  `-UnaryOperator 0x5597152ea7d8 <col:24, col:25> 'int' prefix '-'
    `-IntegerLiteral 0x5597152ea7b8 <col:25> 'int' 1
![B3.15]
   T: if [B3.16]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1
