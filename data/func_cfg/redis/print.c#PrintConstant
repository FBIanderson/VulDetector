static void PrintConstant(const Proto *f, int i)
 [B10 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x55936cb51880 <print.c:53:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
f
   2: ImplicitCastExpr 0x55936cb518a8 <print.c:53:19> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x55936cb51880 <col:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
[B1.1] (ImplicitCastExpr, LValueToRValue, const Proto *)
   3: MemberExpr 0x55936cb518c0 <print.c:53:19, col:22> 'TValue *const' lvalue ->k 0x55936cb1bc88
`-ImplicitCastExpr 0x55936cb518a8 <col:19> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55936cb51880 <col:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
[B1.2]->k
   4: ImplicitCastExpr 0x55936cb51920 <print.c:53:19, col:22> 'TValue *' <LValueToRValue>
`-MemberExpr 0x55936cb518c0 <col:19, col:22> 'TValue *const' lvalue ->k 0x55936cb1bc88
  `-ImplicitCastExpr 0x55936cb518a8 <col:19> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55936cb51880 <col:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
[B1.3] (ImplicitCastExpr, LValueToRValue, TValue *)
   5: DeclRefExpr 0x55936cb518f8 <print.c:53:24> 'int' lvalue ParmVar 0x55936cb516d0 'i' 'int'
i
   6: ImplicitCastExpr 0x55936cb51938 <print.c:53:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb518f8 <col:24> 'int' lvalue ParmVar 0x55936cb516d0 'i' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55936cb51950 <print.c:53:19, col:25> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x55936cb51920 <col:19, col:22> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x55936cb518c0 <col:19, col:22> 'TValue *const' lvalue ->k 0x55936cb1bc88
|   `-ImplicitCastExpr 0x55936cb518a8 <col:19> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55936cb51880 <col:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
`-ImplicitCastExpr 0x55936cb51938 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55936cb518f8 <col:24> 'int' lvalue ParmVar 0x55936cb516d0 'i' 'int'
[B1.4][[B1.6]]
   8: UnaryOperator 0x55936cb51978 <print.c:53:18, col:25> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x55936cb51950 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x55936cb51920 <col:19, col:22> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55936cb518c0 <col:19, col:22> 'TValue *const' lvalue ->k 0x55936cb1bc88
  |   `-ImplicitCastExpr 0x55936cb518a8 <col:19> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55936cb51880 <col:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
  `-ImplicitCastExpr 0x55936cb51938 <col:24> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55936cb518f8 <col:24> 'int' lvalue ParmVar 0x55936cb516d0 'i' 'int'
&[B1.7]
   9: ImplicitCastExpr 0x55936cb51998 <print.c:53:18, col:25> 'const TValue *' <BitCast>
`-UnaryOperator 0x55936cb51978 <col:18, col:25> 'TValue *' prefix '&'
  `-ArraySubscriptExpr 0x55936cb51950 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
    |-ImplicitCastExpr 0x55936cb51920 <col:19, col:22> 'TValue *' <LValueToRValue>
    | `-MemberExpr 0x55936cb518c0 <col:19, col:22> 'TValue *const' lvalue ->k 0x55936cb1bc88
    |   `-ImplicitCastExpr 0x55936cb518a8 <col:19> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x55936cb51880 <col:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
    `-ImplicitCastExpr 0x55936cb51938 <col:24> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55936cb518f8 <col:24> 'int' lvalue ParmVar 0x55936cb516d0 'i' 'int'
[B1.8] (ImplicitCastExpr, BitCast, const TValue *)
  10: DeclStmt 0x55936cb519b0 <print.c:53:2, col:26>col:16
`-VarDecl 0x55936cb51820 <col:2, col:25> col:16 used o 'const TValue *' cinit
  `-ImplicitCastExpr 0x55936cb51998 <col:18, col:25> 'const TValue *' <BitCast>
    `-UnaryOperator 0x55936cb51978 <col:18, col:25> 'TValue *' prefix '&'
      `-ArraySubscriptExpr 0x55936cb51950 <col:19, col:25> 'TValue':'struct lua_TValue' lvalue
        |-ImplicitCastExpr 0x55936cb51920 <col:19, col:22> 'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55936cb518c0 <col:19, col:22> 'TValue *const' lvalue ->k 0x55936cb1bc88
        |   `-ImplicitCastExpr 0x55936cb518a8 <col:19> 'const Proto *' <LValueToRValue>
        |     `-DeclRefExpr 0x55936cb51880 <col:19> 'const Proto *' lvalue ParmVar 0x55936cb51658 'f' 'const Proto *'
        `-ImplicitCastExpr 0x55936cb51938 <col:24> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55936cb518f8 <col:24> 'int' lvalue ParmVar 0x55936cb516d0 'i' 'int'
const TValue *o = &f->k[i];
  11: DeclRefExpr 0x55936cb519c8 <print.c:54:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
o
  12: ImplicitCastExpr 0x55936cb51a10 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55936cb519f0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x55936cb519c8 <print.c:54:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B1.11]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  13: MemberExpr 0x55936cb51a28 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x55936cb0a7f0
`-ImplicitCastExpr 0x55936cb51a10 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55936cb519f0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x55936cb519c8 <print.c:54:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B1.12]->tt
  14: ImplicitCastExpr 0x55936cb51a80 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55936cb51a60 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x55936cb51a28 <col:19, col:24> 'const int' lvalue ->tt 0x55936cb0a7f0
    `-ImplicitCastExpr 0x55936cb51a10 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55936cb519f0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x55936cb519c8 <print.c:54:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B1.13]) (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B1.14]
   Preds (1): B10
   Succs (5): B3 B4 B8 B9 B2

 [B2]
  default:
   1: DeclRefExpr 0x55936cb524d0 <print.c:69:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
printf
   2: ImplicitCastExpr 0x55936cb52628 <print.c:69:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936cb524d0 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, ...))
   3: StringLiteral 0x55936cb52538 <print.c:69:9> 'char [10]' lvalue "? type=%d"
"? type=%d"
   4: ImplicitCastExpr 0x55936cb52678 <print.c:69:9> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55936cb52538 <col:9> 'char [10]' lvalue "? type=%d"
[B2.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55936cb52690 <print.c:69:9> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55936cb52678 <col:9> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55936cb52538 <col:9> 'char [10]' lvalue "? type=%d"
[B2.4] (ImplicitCastExpr, BitCast, const char *)
   6: DeclRefExpr 0x55936cb52570 <print.c:69:27> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
o
   7: ImplicitCastExpr 0x55936cb525b8 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55936cb52598 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x55936cb52570 <print.c:69:27> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B2.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x55936cb525d0 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x55936cb0a7f0
`-ImplicitCastExpr 0x55936cb525b8 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55936cb52598 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x55936cb52570 <print.c:69:27> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B2.7]->tt
   9: ImplicitCastExpr 0x55936cb526a8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55936cb52608 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x55936cb525d0 <col:19, col:24> 'const int' lvalue ->tt 0x55936cb0a7f0
    `-ImplicitCastExpr 0x55936cb525b8 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55936cb52598 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x55936cb52570 <print.c:69:27> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B2.8]) (ImplicitCastExpr, LValueToRValue, int)
  10: CallExpr 0x55936cb52640 <print.c:69:2, col:29> 'int'
|-ImplicitCastExpr 0x55936cb52628 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936cb524d0 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
|-ImplicitCastExpr 0x55936cb52690 <col:9> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55936cb52678 <col:9> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55936cb52538 <col:9> 'char [10]' lvalue "? type=%d"
`-ImplicitCastExpr 0x55936cb526a8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
  `-ParenExpr 0x55936cb52608 <col:18, col:26> 'const int' lvalue
    `-MemberExpr 0x55936cb525d0 <col:19, col:24> 'const int' lvalue ->tt 0x55936cb0a7f0
      `-ImplicitCastExpr 0x55936cb525b8 <col:19, col:21> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55936cb52598 <col:19, col:21> 'const TValue *' lvalue
          `-DeclRefExpr 0x55936cb52570 <print.c:69:27> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B2.2]([B2.5], [B2.9])
   T: break;
   Preds (1): B1
   Succs (1): B0

 [B3]
  case 4:
   1: DeclRefExpr 0x55936cb52250 <print.c:66:2> 'void (const TString *)' Function 0x55936cb4ab20 'PrintString' 'void (const TString *)'
PrintString
   2: ImplicitCastExpr 0x55936cb52468 <print.c:66:2> 'void (*)(const TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936cb52250 <col:2> 'void (const TString *)' Function 0x55936cb4ab20 'PrintString' 'void (const TString *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const TString *))
   3: DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
o
   4: ImplicitCastExpr 0x55936cb522c0 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B3.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x55936cb522d8 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
`-ImplicitCastExpr 0x55936cb522c0 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B3.4]->value
   6: MemberExpr 0x55936cb52310 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x55936cb0a490
`-MemberExpr 0x55936cb522d8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
  `-ImplicitCastExpr 0x55936cb522c0 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B3.5].gc
   7: ImplicitCastExpr 0x55936cb52348 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55936cb52310 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55936cb0a490
  `-MemberExpr 0x55936cb522d8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
    `-ImplicitCastExpr 0x55936cb522c0 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B3.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x55936cb52360 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55936cb31e98
`-ImplicitCastExpr 0x55936cb52348 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55936cb52310 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55936cb0a490
    `-MemberExpr 0x55936cb522d8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
      `-ImplicitCastExpr 0x55936cb522c0 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B3.7]->ts
   9: UnaryOperator 0x55936cb523c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x55936cb52360 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55936cb31e98
  `-ImplicitCastExpr 0x55936cb52348 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55936cb52310 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55936cb0a490
      `-MemberExpr 0x55936cb522d8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
        `-ImplicitCastExpr 0x55936cb522c0 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
&[B3.8]
  10: ImplicitCastExpr 0x55936cb524b0 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
`-ParenExpr 0x55936cb523e8 <col:25, col:27> 'union TString *'
  `-UnaryOperator 0x55936cb523c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x55936cb52360 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55936cb31e98
      `-ImplicitCastExpr 0x55936cb52348 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x55936cb52310 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55936cb0a490
          `-MemberExpr 0x55936cb522d8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
            `-ImplicitCastExpr 0x55936cb522c0 <col:49, col:51> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
                `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B3.9]) (ImplicitCastExpr, BitCast, const TString *)
  11: CallExpr 0x55936cb52480 <print.c:66:2, col:27> 'void'
|-ImplicitCastExpr 0x55936cb52468 <col:2> 'void (*)(const TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936cb52250 <col:2> 'void (const TString *)' Function 0x55936cb4ab20 'PrintString' 'void (const TString *)'
`-ImplicitCastExpr 0x55936cb524b0 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
  `-ParenExpr 0x55936cb523e8 <col:25, col:27> 'union TString *'
    `-UnaryOperator 0x55936cb523c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x55936cb52360 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x55936cb31e98
        `-ImplicitCastExpr 0x55936cb52348 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x55936cb52310 <col:49, col:60> 'GCObject *const' lvalue .gc 0x55936cb0a490
            `-MemberExpr 0x55936cb522d8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
              `-ImplicitCastExpr 0x55936cb522c0 <col:49, col:51> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x55936cb522a0 <col:49, col:51> 'const TValue *' lvalue
                  `-DeclRefExpr 0x55936cb52278 <print.c:66:25> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B3.2]([B3.10])
   T: break;
   Preds (1): B1
   Succs (1): B0

 [B4]
  case 3:
   1: DeclRefExpr 0x55936cb52000 <print.c:63:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
printf
   2: ImplicitCastExpr 0x55936cb52148 <print.c:63:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936cb52000 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, ...))
   3: StringLiteral 0x55936cb52028 <./luaconf.h:522:25> 'char [6]' lvalue "%.14g"
"%.14g"
   4: ImplicitCastExpr 0x55936cb521a8 <./luaconf.h:522:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55936cb52028 <col:25> 'char [6]' lvalue "%.14g"
[B4.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55936cb521c0 <./luaconf.h:522:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55936cb521a8 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55936cb52028 <col:25> 'char [6]' lvalue "%.14g"
[B4.4] (ImplicitCastExpr, BitCast, const char *)
   6: DeclRefExpr 0x55936cb52058 <print.c:63:31> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
o
   7: ImplicitCastExpr 0x55936cb520a0 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55936cb52080 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x55936cb52058 <print.c:63:31> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B4.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x55936cb520b8 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
`-ImplicitCastExpr 0x55936cb520a0 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55936cb52080 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x55936cb52058 <print.c:63:31> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B4.7]->value
   9: MemberExpr 0x55936cb520f0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x55936cb0a548
`-MemberExpr 0x55936cb520b8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
  `-ImplicitCastExpr 0x55936cb520a0 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55936cb52080 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x55936cb52058 <print.c:63:31> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B4.8].n
  10: ImplicitCastExpr 0x55936cb521d8 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x55936cb52128 <col:25, col:27> 'const lua_Number':'const double' lvalue
  `-MemberExpr 0x55936cb520f0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x55936cb0a548
    `-MemberExpr 0x55936cb520b8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
      `-ImplicitCastExpr 0x55936cb520a0 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55936cb52080 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x55936cb52058 <print.c:63:31> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B4.9]) (ImplicitCastExpr, LValueToRValue, lua_Number)
  11: CallExpr 0x55936cb52170 <print.c:63:2, col:33> 'int'
|-ImplicitCastExpr 0x55936cb52148 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936cb52000 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
|-ImplicitCastExpr 0x55936cb521c0 <./luaconf.h:522:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55936cb521a8 <col:25> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55936cb52028 <col:25> 'char [6]' lvalue "%.14g"
`-ImplicitCastExpr 0x55936cb521d8 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x55936cb52128 <col:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x55936cb520f0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x55936cb0a548
      `-MemberExpr 0x55936cb520b8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
        `-ImplicitCastExpr 0x55936cb520a0 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x55936cb52080 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x55936cb52058 <print.c:63:31> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B4.2]([B4.5], [B4.10])
   T: break;
   Preds (1): B1
   Succs (1): B0

 [B5]
   1: ConditionalOperator 0x55936cb51f10 <./llimits.h:63:25, print.c:60:30> 'char *'
|-ImplicitCastExpr 0x55936cb51e08 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
| `-ParenExpr 0x55936cb51d48 <col:25, col:27> 'const int' lvalue
|   `-MemberExpr 0x55936cb51d10 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x55936cb0a5a8
|     `-MemberExpr 0x55936cb51cd8 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
|       `-ImplicitCastExpr 0x55936cb51cc0 <col:45, col:47> 'const TValue *' <LValueToRValue>
|         `-ParenExpr 0x55936cb51ca0 <col:45, col:47> 'const TValue *' lvalue
|           `-DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
|-ImplicitCastExpr 0x55936cb51e20 <col:21> 'char *' <ArrayToPointerDecay>
| `-StringLiteral 0x55936cb51da8 <col:21> 'char [5]' lvalue "true"
`-ImplicitCastExpr 0x55936cb51e38 <col:30> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55936cb51dd8 <col:30> 'char [6]' lvalue "false"
[B8.7] ? [B6.2] : [B7.2]
   2: ImplicitCastExpr 0x55936cb51f88 <./llimits.h:63:25, print.c:60:30> 'const char *' <BitCast>
`-ConditionalOperator 0x55936cb51f10 <./llimits.h:63:25, print.c:60:30> 'char *'
  |-ImplicitCastExpr 0x55936cb51e08 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
  | `-ParenExpr 0x55936cb51d48 <col:25, col:27> 'const int' lvalue
  |   `-MemberExpr 0x55936cb51d10 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x55936cb0a5a8
  |     `-MemberExpr 0x55936cb51cd8 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
  |       `-ImplicitCastExpr 0x55936cb51cc0 <col:45, col:47> 'const TValue *' <LValueToRValue>
  |         `-ParenExpr 0x55936cb51ca0 <col:45, col:47> 'const TValue *' lvalue
  |           `-DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
  |-ImplicitCastExpr 0x55936cb51e20 <col:21> 'char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x55936cb51da8 <col:21> 'char [5]' lvalue "true"
  `-ImplicitCastExpr 0x55936cb51e38 <col:30> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55936cb51dd8 <col:30> 'char [6]' lvalue "false"
[B5.1] (ImplicitCastExpr, BitCast, const char *)
   3: CallExpr 0x55936cb51f58 <print.c:60:2, col:37> 'int'
|-ImplicitCastExpr 0x55936cb51f40 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936cb51c50 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
`-ImplicitCastExpr 0x55936cb51f88 <./llimits.h:63:25, print.c:60:30> 'const char *' <BitCast>
  `-ConditionalOperator 0x55936cb51f10 <./llimits.h:63:25, print.c:60:30> 'char *'
    |-ImplicitCastExpr 0x55936cb51e08 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
    | `-ParenExpr 0x55936cb51d48 <col:25, col:27> 'const int' lvalue
    |   `-MemberExpr 0x55936cb51d10 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x55936cb0a5a8
    |     `-MemberExpr 0x55936cb51cd8 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
    |       `-ImplicitCastExpr 0x55936cb51cc0 <col:45, col:47> 'const TValue *' <LValueToRValue>
    |         `-ParenExpr 0x55936cb51ca0 <col:45, col:47> 'const TValue *' lvalue
    |           `-DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
    |-ImplicitCastExpr 0x55936cb51e20 <col:21> 'char *' <ArrayToPointerDecay>
    | `-StringLiteral 0x55936cb51da8 <col:21> 'char [5]' lvalue "true"
    `-ImplicitCastExpr 0x55936cb51e38 <col:30> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x55936cb51dd8 <col:30> 'char [6]' lvalue "false"
[B8.2]([B5.2])
   T: break;
   Preds (2): B6 B7
   Succs (1): B0

 [B6]
   1: StringLiteral 0x55936cb51da8 <print.c:60:21> 'char [5]' lvalue "true"
"true"
   2: ImplicitCastExpr 0x55936cb51e20 <print.c:60:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55936cb51da8 <col:21> 'char [5]' lvalue "true"
[B6.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   Preds (1): B8
   Succs (1): B5

 [B7]
   1: StringLiteral 0x55936cb51dd8 <print.c:60:30> 'char [6]' lvalue "false"
"false"
   2: ImplicitCastExpr 0x55936cb51e38 <print.c:60:30> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55936cb51dd8 <col:30> 'char [6]' lvalue "false"
[B7.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   Preds (1): B8
   Succs (1): B5

 [B8]
  case 1:
   1: DeclRefExpr 0x55936cb51c50 <print.c:60:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
printf
   2: ImplicitCastExpr 0x55936cb51f40 <print.c:60:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936cb51c50 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, ...))
   3: DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
o
   4: ImplicitCastExpr 0x55936cb51cc0 <./lobject.h:100:45, col:47> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x55936cb51ca0 <col:45, col:47> 'const TValue *' lvalue
  `-DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B8.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x55936cb51cd8 <./lobject.h:100:45, col:50> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
`-ImplicitCastExpr 0x55936cb51cc0 <col:45, col:47> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x55936cb51ca0 <col:45, col:47> 'const TValue *' lvalue
    `-DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B8.4]->value
   6: MemberExpr 0x55936cb51d10 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x55936cb0a5a8
`-MemberExpr 0x55936cb51cd8 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
  `-ImplicitCastExpr 0x55936cb51cc0 <col:45, col:47> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x55936cb51ca0 <col:45, col:47> 'const TValue *' lvalue
      `-DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
[B8.5].b
   7: ImplicitCastExpr 0x55936cb51e08 <./llimits.h:63:25, col:27> 'int' <LValueToRValue>
`-ParenExpr 0x55936cb51d48 <col:25, col:27> 'const int' lvalue
  `-MemberExpr 0x55936cb51d10 <./lobject.h:100:45, col:56> 'const int' lvalue .b 0x55936cb0a5a8
    `-MemberExpr 0x55936cb51cd8 <col:45, col:50> 'const Value':'const Value' lvalue ->value 0x55936cb0a790
      `-ImplicitCastExpr 0x55936cb51cc0 <col:45, col:47> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x55936cb51ca0 <col:45, col:47> 'const TValue *' lvalue
          `-DeclRefExpr 0x55936cb51c78 <print.c:60:16> 'const TValue *' lvalue Var 0x55936cb51820 'o' 'const TValue *'
([B8.6]) (ImplicitCastExpr, LValueToRValue, int)
   T: [B8.7] ? ... : ...
   Preds (1): B1
   Succs (2): B6 B7

 [B9]
  case 0:
   1: DeclRefExpr 0x55936cb51b20 <print.c:57:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
printf
   2: ImplicitCastExpr 0x55936cb51b78 <print.c:57:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936cb51b20 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, ...))
   3: StringLiteral 0x55936cb51b48 <print.c:57:9> 'char [4]' lvalue "nil"
"nil"
   4: ImplicitCastExpr 0x55936cb51bc0 <print.c:57:9> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55936cb51b48 <col:9> 'char [4]' lvalue "nil"
[B9.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55936cb51bd8 <print.c:57:9> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55936cb51bc0 <col:9> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55936cb51b48 <col:9> 'char [4]' lvalue "nil"
[B9.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x55936cb51b90 <print.c:57:2, col:14> 'int'
|-ImplicitCastExpr 0x55936cb51b78 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936cb51b20 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
`-ImplicitCastExpr 0x55936cb51bd8 <col:9> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55936cb51bc0 <col:9> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55936cb51b48 <col:9> 'char [4]' lvalue "nil"
[B9.2]([B9.5])
   T: break;
   Preds (1): B1
   Succs (1): B0

 [B0 (EXIT)]
   Preds (5): B2 B3 B4 B5 B9
