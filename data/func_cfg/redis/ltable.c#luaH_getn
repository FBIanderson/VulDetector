int luaH_getn(Table *t)
 [B13 (ENTRY)]
   Succs (1): B12

 [B1]
   1: DeclRefExpr 0x5654000f9c78 <ltable.c:575:15> 'int (Table *, unsigned int)' Function 0x5654000f75b8 'unbound_search' 'int (Table *, unsigned int)'
unbound_search
   2: ImplicitCastExpr 0x5654000f9d48 <ltable.c:575:15> 'int (*)(Table *, unsigned int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000f9c78 <col:15> 'int (Table *, unsigned int)' Function 0x5654000f75b8 'unbound_search' 'int (Table *, unsigned int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(Table *, unsigned int))
   3: DeclRefExpr 0x5654000f9ca0 <ltable.c:575:30> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000f9d98 <ltable.c:575:30> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f9ca0 <col:30> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B1.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: DeclRefExpr 0x5654000f9cc8 <ltable.c:575:33> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
j
   6: ImplicitCastExpr 0x5654000f9db0 <ltable.c:575:33> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9cc8 <col:33> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B1.5] (ImplicitCastExpr, LValueToRValue, unsigned int)
   7: CallExpr 0x5654000f9d60 <ltable.c:575:15, col:34> 'int'
|-ImplicitCastExpr 0x5654000f9d48 <col:15> 'int (*)(Table *, unsigned int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000f9c78 <col:15> 'int (Table *, unsigned int)' Function 0x5654000f75b8 'unbound_search' 'int (Table *, unsigned int)'
|-ImplicitCastExpr 0x5654000f9d98 <col:30> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000f9ca0 <col:30> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
`-ImplicitCastExpr 0x5654000f9db0 <col:33> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9cc8 <col:33> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B1.2]([B1.4], [B1.6])
   8: ReturnStmt 0x5654000f9dc8 <ltable.c:575:8, col:34>
`-CallExpr 0x5654000f9d60 <col:15, col:34> 'int'
  |-ImplicitCastExpr 0x5654000f9d48 <col:15> 'int (*)(Table *, unsigned int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000f9c78 <col:15> 'int (Table *, unsigned int)' Function 0x5654000f75b8 'unbound_search' 'int (Table *, unsigned int)'
  |-ImplicitCastExpr 0x5654000f9d98 <col:30> 'Table *' <LValueToRValue>
  | `-DeclRefExpr 0x5654000f9ca0 <col:30> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
  `-ImplicitCastExpr 0x5654000f9db0 <col:33> 'unsigned int' <LValueToRValue>
    `-DeclRefExpr 0x5654000f9cc8 <col:33> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
return [B1.7];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5654000f9c08 <ltable.c:574:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
j
   2: ImplicitCastExpr 0x5654000f9c30 <ltable.c:574:12> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9c08 <col:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B2.1] (ImplicitCastExpr, LValueToRValue, unsigned int)
   3: ImplicitCastExpr 0x5654000f9c48 <ltable.c:574:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5654000f9c30 <col:12> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9c08 <col:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B2.2] (ImplicitCastExpr, IntegralCast, int)
   4: ReturnStmt 0x5654000f9c60 <ltable.c:574:5, col:12>
`-ImplicitCastExpr 0x5654000f9c48 <col:12> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x5654000f9c30 <col:12> 'unsigned int' <LValueToRValue>
    `-DeclRefExpr 0x5654000f9c08 <col:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
return [B2.3];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5654000f9ad0 <ltable.c:573:12> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000f9af8 <ltable.c:573:12> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f9ad0 <col:12> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B3.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000f9b10 <ltable.c:573:12, col:15> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000f9af8 <col:12> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9ad0 <col:12> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B3.2]->node
   4: ImplicitCastExpr 0x5654000f9bb0 <ltable.c:573:12, col:15> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000f9b10 <col:12, col:15> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000f9af8 <col:12> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000f9ad0 <col:12> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B3.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: DeclRefExpr 0x5654000f9b48 <ltable.c:73:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
dummynode_
   6: UnaryOperator 0x5654000f9b70 <ltable.c:73:21, col:22> 'const Node *' prefix '&'
`-DeclRefExpr 0x5654000f9b48 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
&[B3.5]
   7: ImplicitCastExpr 0x5654000f9bc8 <ltable.c:73:20, col:32> 'Node *' <BitCast>
`-ParenExpr 0x5654000f9b90 <col:20, col:32> 'const Node *'
  `-UnaryOperator 0x5654000f9b70 <col:21, col:22> 'const Node *' prefix '&'
    `-DeclRefExpr 0x5654000f9b48 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
([B3.6]) (ImplicitCastExpr, BitCast, Node *)
   8: BinaryOperator 0x5654000f9be0 <ltable.c:573:12, line:73:32> 'int' '=='
|-ImplicitCastExpr 0x5654000f9bb0 <line:573:12, col:15> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000f9b10 <col:12, col:15> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000f9af8 <col:12> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000f9ad0 <col:12> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
`-ImplicitCastExpr 0x5654000f9bc8 <line:73:20, col:32> 'Node *' <BitCast>
  `-ParenExpr 0x5654000f9b90 <col:20, col:32> 'const Node *'
    `-UnaryOperator 0x5654000f9b70 <col:21, col:22> 'const Node *' prefix '&'
      `-DeclRefExpr 0x5654000f9b48 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
[B3.4] == [B3.7]
   T: if [B3.8]
   Preds (2): B11 B12
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5654000f9a38 <ltable.c:570:12> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
i
   2: ImplicitCastExpr 0x5654000f9a60 <ltable.c:570:12> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9a38 <col:12> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
[B4.1] (ImplicitCastExpr, LValueToRValue, unsigned int)
   3: ImplicitCastExpr 0x5654000f9a78 <ltable.c:570:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5654000f9a60 <col:12> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9a38 <col:12> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
[B4.2] (ImplicitCastExpr, IntegralCast, int)
   4: ReturnStmt 0x5654000f9a90 <ltable.c:570:5, col:12>
`-ImplicitCastExpr 0x5654000f9a78 <col:12> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x5654000f9a60 <col:12> 'unsigned int' <LValueToRValue>
    `-DeclRefExpr 0x5654000f9a38 <col:12> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
return [B4.3];
   Preds (1): B9
   Succs (1): B0

 [B5]
   Preds (2): B6 B7
   Succs (1): B9

 [B6]
   1: DeclRefExpr 0x5654000f9958 <ltable.c:568:16> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
m
   2: ImplicitCastExpr 0x5654000f9980 <ltable.c:568:16> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9958 <col:16> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
[B6.1] (ImplicitCastExpr, LValueToRValue, unsigned int)
   3: DeclRefExpr 0x5654000f9930 <ltable.c:568:12> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
i
   4: BinaryOperator 0x5654000f9998 <ltable.c:568:12, col:16> 'unsigned int' '='
|-DeclRefExpr 0x5654000f9930 <col:12> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
`-ImplicitCastExpr 0x5654000f9980 <col:16> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9958 <col:16> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
[B6.3] = [B6.2]
   Preds (1): B8
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5654000f98c8 <ltable.c:567:42> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
m
   2: ImplicitCastExpr 0x5654000f98f0 <ltable.c:567:42> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f98c8 <col:42> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
[B7.1] (ImplicitCastExpr, LValueToRValue, unsigned int)
   3: DeclRefExpr 0x5654000f98a0 <ltable.c:567:38> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
j
   4: BinaryOperator 0x5654000f9908 <ltable.c:567:38, col:42> 'unsigned int' '='
|-DeclRefExpr 0x5654000f98a0 <col:38> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
`-ImplicitCastExpr 0x5654000f98f0 <col:42> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f98c8 <col:42> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
[B7.3] = [B7.2]
   Preds (1): B8
   Succs (1): B5

 [B8]
   1: DeclRefExpr 0x5654000f94f0 <ltable.c:566:25> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
i
   2: ImplicitCastExpr 0x5654000f9540 <ltable.c:566:25> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f94f0 <col:25> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
[B8.1] (ImplicitCastExpr, LValueToRValue, unsigned int)
   3: DeclRefExpr 0x5654000f9518 <ltable.c:566:27> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
j
   4: ImplicitCastExpr 0x5654000f9558 <ltable.c:566:27> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9518 <col:27> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B8.3] (ImplicitCastExpr, LValueToRValue, unsigned int)
   5: BinaryOperator 0x5654000f9570 <ltable.c:566:25, col:27> 'unsigned int' '+'
|-ImplicitCastExpr 0x5654000f9540 <col:25> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x5654000f94f0 <col:25> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
`-ImplicitCastExpr 0x5654000f9558 <col:27> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9518 <col:27> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B8.2] + [B8.4]
   6: IntegerLiteral 0x5654000f95b8 <ltable.c:566:30> 'int' 2
2
   7: ImplicitCastExpr 0x5654000f95d8 <ltable.c:566:30> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5654000f95b8 <col:30> 'int' 2
[B8.6] (ImplicitCastExpr, IntegralCast, unsigned int)
   8: BinaryOperator 0x5654000f95f0 <ltable.c:566:24, col:30> 'unsigned int' '/'
|-ParenExpr 0x5654000f9598 <col:24, col:28> 'unsigned int'
| `-BinaryOperator 0x5654000f9570 <col:25, col:27> 'unsigned int' '+'
|   |-ImplicitCastExpr 0x5654000f9540 <col:25> 'unsigned int' <LValueToRValue>
|   | `-DeclRefExpr 0x5654000f94f0 <col:25> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
|   `-ImplicitCastExpr 0x5654000f9558 <col:27> 'unsigned int' <LValueToRValue>
|     `-DeclRefExpr 0x5654000f9518 <col:27> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
`-ImplicitCastExpr 0x5654000f95d8 <col:30> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5654000f95b8 <col:30> 'int' 2
([B8.5]) / [B8.7]
   9: DeclStmt 0x5654000f9618 <ltable.c:566:7, col:31>col:20
`-VarDecl 0x5654000f9490 <col:7, col:30> col:20 used m 'unsigned int' cinit
  `-BinaryOperator 0x5654000f95f0 <col:24, col:30> 'unsigned int' '/'
    |-ParenExpr 0x5654000f9598 <col:24, col:28> 'unsigned int'
    | `-BinaryOperator 0x5654000f9570 <col:25, col:27> 'unsigned int' '+'
    |   |-ImplicitCastExpr 0x5654000f9540 <col:25> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5654000f94f0 <col:25> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
    |   `-ImplicitCastExpr 0x5654000f9558 <col:27> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x5654000f9518 <col:27> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
    `-ImplicitCastExpr 0x5654000f95d8 <col:30> 'unsigned int' <IntegralCast>
      `-IntegerLiteral 0x5654000f95b8 <col:30> 'int' 2
unsigned int m = (i + j) / 2;
  10: DeclRefExpr 0x5654000f9630 <ltable.c:567:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
t
  11: ImplicitCastExpr 0x5654000f9658 <ltable.c:567:20> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B8.10] (ImplicitCastExpr, LValueToRValue, Table *)
  12: MemberExpr 0x5654000f9670 <ltable.c:567:20, col:23> 'TValue *' lvalue ->array 0x56540009acb8
`-ImplicitCastExpr 0x5654000f9658 <col:20> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B8.11]->array
  13: ImplicitCastExpr 0x5654000f9748 <ltable.c:567:20, col:23> 'TValue *' <LValueToRValue>
`-MemberExpr 0x5654000f9670 <col:20, col:23> 'TValue *' lvalue ->array 0x56540009acb8
  `-ImplicitCastExpr 0x5654000f9658 <col:20> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B8.12] (ImplicitCastExpr, LValueToRValue, TValue *)
  14: DeclRefExpr 0x5654000f96a8 <ltable.c:567:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
m
  15: ImplicitCastExpr 0x5654000f96f0 <ltable.c:567:29> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f96a8 <col:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
[B8.14] (ImplicitCastExpr, LValueToRValue, unsigned int)
  16: IntegerLiteral 0x5654000f96d0 <ltable.c:567:33> 'int' 1
1
  17: ImplicitCastExpr 0x5654000f9708 <ltable.c:567:33> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5654000f96d0 <col:33> 'int' 1
[B8.16] (ImplicitCastExpr, IntegralCast, unsigned int)
  18: BinaryOperator 0x5654000f9720 <ltable.c:567:29, col:33> 'unsigned int' '-'
|-ImplicitCastExpr 0x5654000f96f0 <col:29> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x5654000f96a8 <col:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
`-ImplicitCastExpr 0x5654000f9708 <col:33> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5654000f96d0 <col:33> 'int' 1
[B8.15] - [B8.17]
  19: ArraySubscriptExpr 0x5654000f9760 <ltable.c:567:20, col:34> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x5654000f9748 <col:20, col:23> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x5654000f9670 <col:20, col:23> 'TValue *' lvalue ->array 0x56540009acb8
|   `-ImplicitCastExpr 0x5654000f9658 <col:20> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
`-BinaryOperator 0x5654000f9720 <col:29, col:33> 'unsigned int' '-'
  |-ImplicitCastExpr 0x5654000f96f0 <col:29> 'unsigned int' <LValueToRValue>
  | `-DeclRefExpr 0x5654000f96a8 <col:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
  `-ImplicitCastExpr 0x5654000f9708 <col:33> 'unsigned int' <IntegralCast>
    `-IntegerLiteral 0x5654000f96d0 <col:33> 'int' 1
[B8.13][[B8.18]]
  20: UnaryOperator 0x5654000f9788 <ltable.c:567:19, col:34> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x5654000f9760 <col:20, col:34> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x5654000f9748 <col:20, col:23> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x5654000f9670 <col:20, col:23> 'TValue *' lvalue ->array 0x56540009acb8
  |   `-ImplicitCastExpr 0x5654000f9658 <col:20> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
  `-BinaryOperator 0x5654000f9720 <col:29, col:33> 'unsigned int' '-'
    |-ImplicitCastExpr 0x5654000f96f0 <col:29> 'unsigned int' <LValueToRValue>
    | `-DeclRefExpr 0x5654000f96a8 <col:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
    `-ImplicitCastExpr 0x5654000f9708 <col:33> 'unsigned int' <IntegralCast>
      `-IntegerLiteral 0x5654000f96d0 <col:33> 'int' 1
&[B8.19]
  21: MemberExpr 0x5654000f97c8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000f97a8 <col:19, col:21> 'TValue *'
  `-UnaryOperator 0x5654000f9788 <ltable.c:567:19, col:34> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x5654000f9760 <col:20, col:34> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x5654000f9748 <col:20, col:23> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5654000f9670 <col:20, col:23> 'TValue *' lvalue ->array 0x56540009acb8
      |   `-ImplicitCastExpr 0x5654000f9658 <col:20> 'Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
      `-BinaryOperator 0x5654000f9720 <col:29, col:33> 'unsigned int' '-'
        |-ImplicitCastExpr 0x5654000f96f0 <col:29> 'unsigned int' <LValueToRValue>
        | `-DeclRefExpr 0x5654000f96a8 <col:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
        `-ImplicitCastExpr 0x5654000f9708 <col:33> 'unsigned int' <IntegralCast>
          `-IntegerLiteral 0x5654000f96d0 <col:33> 'int' 1
([B8.20])->tt
  22: ImplicitCastExpr 0x5654000f9840 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000f9800 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000f97c8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ParenExpr 0x5654000f97a8 <col:19, col:21> 'TValue *'
      `-UnaryOperator 0x5654000f9788 <ltable.c:567:19, col:34> 'TValue *' prefix '&'
        `-ArraySubscriptExpr 0x5654000f9760 <col:20, col:34> 'TValue':'struct lua_TValue' lvalue
          |-ImplicitCastExpr 0x5654000f9748 <col:20, col:23> 'TValue *' <LValueToRValue>
          | `-MemberExpr 0x5654000f9670 <col:20, col:23> 'TValue *' lvalue ->array 0x56540009acb8
          |   `-ImplicitCastExpr 0x5654000f9658 <col:20> 'Table *' <LValueToRValue>
          |     `-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
          `-BinaryOperator 0x5654000f9720 <col:29, col:33> 'unsigned int' '-'
            |-ImplicitCastExpr 0x5654000f96f0 <col:29> 'unsigned int' <LValueToRValue>
            | `-DeclRefExpr 0x5654000f96a8 <col:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
            `-ImplicitCastExpr 0x5654000f9708 <col:33> 'unsigned int' <IntegralCast>
              `-IntegerLiteral 0x5654000f96d0 <col:33> 'int' 1
([B8.21]) (ImplicitCastExpr, LValueToRValue, int)
  23: IntegerLiteral 0x5654000f9820 <./lua.h:74:19> 'int' 0
0
  24: BinaryOperator 0x5654000f9858 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000f9840 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000f9800 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000f97c8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ParenExpr 0x5654000f97a8 <col:19, col:21> 'TValue *'
|       `-UnaryOperator 0x5654000f9788 <ltable.c:567:19, col:34> 'TValue *' prefix '&'
|         `-ArraySubscriptExpr 0x5654000f9760 <col:20, col:34> 'TValue':'struct lua_TValue' lvalue
|           |-ImplicitCastExpr 0x5654000f9748 <col:20, col:23> 'TValue *' <LValueToRValue>
|           | `-MemberExpr 0x5654000f9670 <col:20, col:23> 'TValue *' lvalue ->array 0x56540009acb8
|           |   `-ImplicitCastExpr 0x5654000f9658 <col:20> 'Table *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5654000f9630 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
|           `-BinaryOperator 0x5654000f9720 <col:29, col:33> 'unsigned int' '-'
|             |-ImplicitCastExpr 0x5654000f96f0 <col:29> 'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x5654000f96a8 <col:29> 'unsigned int' lvalue Var 0x5654000f9490 'm' 'unsigned int'
|             `-ImplicitCastExpr 0x5654000f9708 <col:33> 'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5654000f96d0 <col:33> 'int' 1
`-IntegerLiteral 0x5654000f9820 <./lua.h:74:19> 'int' 0
[B8.22] == [B8.23]
   T: if ([B8.24])
   Preds (1): B9
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x5654000f9370 <ltable.c:565:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
j
   2: ImplicitCastExpr 0x5654000f93c0 <ltable.c:565:12> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9370 <col:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B9.1] (ImplicitCastExpr, LValueToRValue, unsigned int)
   3: DeclRefExpr 0x5654000f9398 <ltable.c:565:16> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
i
   4: ImplicitCastExpr 0x5654000f93d8 <ltable.c:565:16> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9398 <col:16> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
[B9.3] (ImplicitCastExpr, LValueToRValue, unsigned int)
   5: BinaryOperator 0x5654000f93f0 <ltable.c:565:12, col:16> 'unsigned int' '-'
|-ImplicitCastExpr 0x5654000f93c0 <col:12> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x5654000f9370 <col:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
`-ImplicitCastExpr 0x5654000f93d8 <col:16> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9398 <col:16> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
[B9.2] - [B9.4]
   6: IntegerLiteral 0x5654000f9418 <ltable.c:565:20> 'int' 1
1
   7: ImplicitCastExpr 0x5654000f9438 <ltable.c:565:20> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5654000f9418 <col:20> 'int' 1
[B9.6] (ImplicitCastExpr, IntegralCast, unsigned int)
   8: BinaryOperator 0x5654000f9450 <ltable.c:565:12, col:20> 'int' '>'
|-BinaryOperator 0x5654000f93f0 <col:12, col:16> 'unsigned int' '-'
| |-ImplicitCastExpr 0x5654000f93c0 <col:12> 'unsigned int' <LValueToRValue>
| | `-DeclRefExpr 0x5654000f9370 <col:12> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
| `-ImplicitCastExpr 0x5654000f93d8 <col:16> 'unsigned int' <LValueToRValue>
|   `-DeclRefExpr 0x5654000f9398 <col:16> 'unsigned int' lvalue Var 0x5654000f92c0 'i' 'unsigned int'
`-ImplicitCastExpr 0x5654000f9438 <col:20> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5654000f9418 <col:20> 'int' 1
[B9.5] > [B9.7]
   T: while [B9.8]
   Preds (2): B5 B10
   Succs (2): B8 B4

 [B10]
   1: IntegerLiteral 0x5654000f9320 <ltable.c:564:22> 'int' 0
0
   2: ImplicitCastExpr 0x5654000f9340 <ltable.c:564:22> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5654000f9320 <col:22> 'int' 0
[B10.1] (ImplicitCastExpr, IntegralCast, unsigned int)
   3: DeclStmt 0x5654000f9358 <ltable.c:564:5, col:23>col:18
`-VarDecl 0x5654000f92c0 <col:5, col:22> col:18 used i 'unsigned int' cinit
  `-ImplicitCastExpr 0x5654000f9340 <col:22> 'unsigned int' <IntegralCast>
    `-IntegerLiteral 0x5654000f9320 <col:22> 'int' 0
unsigned int i = 0;
   Preds (1): B11
   Succs (1): B9

 [B11]
   1: DeclRefExpr 0x5654000f9010 <ltable.c:562:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000f9038 <ltable.c:562:25> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B11.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000f9050 <ltable.c:562:25, col:28> 'TValue *' lvalue ->array 0x56540009acb8
`-ImplicitCastExpr 0x5654000f9038 <col:25> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B11.2]->array
   4: ImplicitCastExpr 0x5654000f9128 <ltable.c:562:25, col:28> 'TValue *' <LValueToRValue>
`-MemberExpr 0x5654000f9050 <col:25, col:28> 'TValue *' lvalue ->array 0x56540009acb8
  `-ImplicitCastExpr 0x5654000f9038 <col:25> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B11.3] (ImplicitCastExpr, LValueToRValue, TValue *)
   5: DeclRefExpr 0x5654000f9088 <ltable.c:562:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
j
   6: ImplicitCastExpr 0x5654000f90d0 <ltable.c:562:34> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f9088 <col:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B11.5] (ImplicitCastExpr, LValueToRValue, unsigned int)
   7: IntegerLiteral 0x5654000f90b0 <ltable.c:562:38> 'int' 1
1
   8: ImplicitCastExpr 0x5654000f90e8 <ltable.c:562:38> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5654000f90b0 <col:38> 'int' 1
[B11.7] (ImplicitCastExpr, IntegralCast, unsigned int)
   9: BinaryOperator 0x5654000f9100 <ltable.c:562:34, col:38> 'unsigned int' '-'
|-ImplicitCastExpr 0x5654000f90d0 <col:34> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x5654000f9088 <col:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
`-ImplicitCastExpr 0x5654000f90e8 <col:38> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5654000f90b0 <col:38> 'int' 1
[B11.6] - [B11.8]
  10: ArraySubscriptExpr 0x5654000f9140 <ltable.c:562:25, col:39> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x5654000f9128 <col:25, col:28> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x5654000f9050 <col:25, col:28> 'TValue *' lvalue ->array 0x56540009acb8
|   `-ImplicitCastExpr 0x5654000f9038 <col:25> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
`-BinaryOperator 0x5654000f9100 <col:34, col:38> 'unsigned int' '-'
  |-ImplicitCastExpr 0x5654000f90d0 <col:34> 'unsigned int' <LValueToRValue>
  | `-DeclRefExpr 0x5654000f9088 <col:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
  `-ImplicitCastExpr 0x5654000f90e8 <col:38> 'unsigned int' <IntegralCast>
    `-IntegerLiteral 0x5654000f90b0 <col:38> 'int' 1
[B11.4][[B11.9]]
  11: UnaryOperator 0x5654000f9168 <ltable.c:562:24, col:39> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x5654000f9140 <col:25, col:39> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x5654000f9128 <col:25, col:28> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x5654000f9050 <col:25, col:28> 'TValue *' lvalue ->array 0x56540009acb8
  |   `-ImplicitCastExpr 0x5654000f9038 <col:25> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
  `-BinaryOperator 0x5654000f9100 <col:34, col:38> 'unsigned int' '-'
    |-ImplicitCastExpr 0x5654000f90d0 <col:34> 'unsigned int' <LValueToRValue>
    | `-DeclRefExpr 0x5654000f9088 <col:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
    `-ImplicitCastExpr 0x5654000f90e8 <col:38> 'unsigned int' <IntegralCast>
      `-IntegerLiteral 0x5654000f90b0 <col:38> 'int' 1
&[B11.10]
  12: MemberExpr 0x5654000f91a8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ParenExpr 0x5654000f9188 <col:19, col:21> 'TValue *'
  `-UnaryOperator 0x5654000f9168 <ltable.c:562:24, col:39> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x5654000f9140 <col:25, col:39> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x5654000f9128 <col:25, col:28> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5654000f9050 <col:25, col:28> 'TValue *' lvalue ->array 0x56540009acb8
      |   `-ImplicitCastExpr 0x5654000f9038 <col:25> 'Table *' <LValueToRValue>
      |     `-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
      `-BinaryOperator 0x5654000f9100 <col:34, col:38> 'unsigned int' '-'
        |-ImplicitCastExpr 0x5654000f90d0 <col:34> 'unsigned int' <LValueToRValue>
        | `-DeclRefExpr 0x5654000f9088 <col:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
        `-ImplicitCastExpr 0x5654000f90e8 <col:38> 'unsigned int' <IntegralCast>
          `-IntegerLiteral 0x5654000f90b0 <col:38> 'int' 1
([B11.11])->tt
  13: ImplicitCastExpr 0x5654000f9220 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000f91e0 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000f91a8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ParenExpr 0x5654000f9188 <col:19, col:21> 'TValue *'
      `-UnaryOperator 0x5654000f9168 <ltable.c:562:24, col:39> 'TValue *' prefix '&'
        `-ArraySubscriptExpr 0x5654000f9140 <col:25, col:39> 'TValue':'struct lua_TValue' lvalue
          |-ImplicitCastExpr 0x5654000f9128 <col:25, col:28> 'TValue *' <LValueToRValue>
          | `-MemberExpr 0x5654000f9050 <col:25, col:28> 'TValue *' lvalue ->array 0x56540009acb8
          |   `-ImplicitCastExpr 0x5654000f9038 <col:25> 'Table *' <LValueToRValue>
          |     `-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
          `-BinaryOperator 0x5654000f9100 <col:34, col:38> 'unsigned int' '-'
            |-ImplicitCastExpr 0x5654000f90d0 <col:34> 'unsigned int' <LValueToRValue>
            | `-DeclRefExpr 0x5654000f9088 <col:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
            `-ImplicitCastExpr 0x5654000f90e8 <col:38> 'unsigned int' <IntegralCast>
              `-IntegerLiteral 0x5654000f90b0 <col:38> 'int' 1
([B11.12]) (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x5654000f9200 <./lua.h:74:19> 'int' 0
0
  15: BinaryOperator 0x5654000f9238 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000f9220 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000f91e0 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000f91a8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ParenExpr 0x5654000f9188 <col:19, col:21> 'TValue *'
|       `-UnaryOperator 0x5654000f9168 <ltable.c:562:24, col:39> 'TValue *' prefix '&'
|         `-ArraySubscriptExpr 0x5654000f9140 <col:25, col:39> 'TValue':'struct lua_TValue' lvalue
|           |-ImplicitCastExpr 0x5654000f9128 <col:25, col:28> 'TValue *' <LValueToRValue>
|           | `-MemberExpr 0x5654000f9050 <col:25, col:28> 'TValue *' lvalue ->array 0x56540009acb8
|           |   `-ImplicitCastExpr 0x5654000f9038 <col:25> 'Table *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5654000f9010 <col:25> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
|           `-BinaryOperator 0x5654000f9100 <col:34, col:38> 'unsigned int' '-'
|             |-ImplicitCastExpr 0x5654000f90d0 <col:34> 'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x5654000f9088 <col:34> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
|             `-ImplicitCastExpr 0x5654000f90e8 <col:38> 'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5654000f90b0 <col:38> 'int' 1
`-IntegerLiteral 0x5654000f9200 <./lua.h:74:19> 'int' 0
[B11.13] == [B11.14]
   T: if [B12.11] && ([B11.15])
   Preds (1): B12
   Succs (2): B10 B3

 [B12]
   1: DeclRefExpr 0x5654000f8eb0 <ltable.c:561:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000f8ed8 <ltable.c:561:20> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000f8eb0 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B12.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000f8ef0 <ltable.c:561:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
`-ImplicitCastExpr 0x5654000f8ed8 <col:20> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000f8eb0 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B12.2]->sizearray
   4: ImplicitCastExpr 0x5654000f8f28 <ltable.c:561:20, col:23> 'int' <LValueToRValue>
`-MemberExpr 0x5654000f8ef0 <col:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
  `-ImplicitCastExpr 0x5654000f8ed8 <col:20> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000f8eb0 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B12.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ImplicitCastExpr 0x5654000f8f40 <ltable.c:561:20, col:23> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5654000f8f28 <col:20, col:23> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000f8ef0 <col:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
    `-ImplicitCastExpr 0x5654000f8ed8 <col:20> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5654000f8eb0 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
[B12.4] (ImplicitCastExpr, IntegralCast, unsigned int)
   6: DeclStmt 0x5654000f8f58 <ltable.c:561:3, col:32>col:16
`-VarDecl 0x5654000f8e50 <col:3, col:23> col:16 used j 'unsigned int' cinit
  `-ImplicitCastExpr 0x5654000f8f40 <col:20, col:23> 'unsigned int' <IntegralCast>
    `-ImplicitCastExpr 0x5654000f8f28 <col:20, col:23> 'int' <LValueToRValue>
      `-MemberExpr 0x5654000f8ef0 <col:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
        `-ImplicitCastExpr 0x5654000f8ed8 <col:20> 'Table *' <LValueToRValue>
          `-DeclRefExpr 0x5654000f8eb0 <col:20> 'Table *' lvalue ParmVar 0x5654000f8cb8 't' 'Table *'
unsigned int j = t->sizearray;
   7: DeclRefExpr 0x5654000f8f70 <ltable.c:562:7> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
j
   8: ImplicitCastExpr 0x5654000f8fb8 <ltable.c:562:7> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5654000f8f70 <col:7> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
[B12.7] (ImplicitCastExpr, LValueToRValue, unsigned int)
   9: IntegerLiteral 0x5654000f8f98 <ltable.c:562:11> 'int' 0
0
  10: ImplicitCastExpr 0x5654000f8fd0 <ltable.c:562:11> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5654000f8f98 <col:11> 'int' 0
[B12.9] (ImplicitCastExpr, IntegralCast, unsigned int)
  11: BinaryOperator 0x5654000f8fe8 <ltable.c:562:7, col:11> 'int' '>'
|-ImplicitCastExpr 0x5654000f8fb8 <col:7> 'unsigned int' <LValueToRValue>
| `-DeclRefExpr 0x5654000f8f70 <col:7> 'unsigned int' lvalue Var 0x5654000f8e50 'j' 'unsigned int'
`-ImplicitCastExpr 0x5654000f8fd0 <col:11> 'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5654000f8f98 <col:11> 'int' 0
[B12.8] > [B12.10]
   T: [B12.11] && ...
   Preds (1): B13
   Succs (2): B11 B3

 [B0 (EXIT)]
   Preds (3): B1 B2 B4
