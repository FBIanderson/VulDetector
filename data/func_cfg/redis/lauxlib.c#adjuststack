static void adjuststack(luaL_Buffer *B)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: DeclRefExpr 0x55f89cfd1d80 <lauxlib.c:423:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55f89cfa87f0 'lua_concat' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_concat
   2: ImplicitCastExpr 0x55f89cfd1df8 <lauxlib.c:423:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f89cfd1d80 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55f89cfa87f0 'lua_concat' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55f89cfd1da8 <lauxlib.c:423:16> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f89cfd1e48 <lauxlib.c:423:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1da8 <col:16> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55f89cfd1dd0 <lauxlib.c:423:19> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
toget
   6: ImplicitCastExpr 0x55f89cfd1e60 <lauxlib.c:423:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1dd0 <col:19> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x55f89cfd1e10 <lauxlib.c:423:5, col:24> 'void'
|-ImplicitCastExpr 0x55f89cfd1df8 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f89cfd1d80 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55f89cfa87f0 'lua_concat' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55f89cfd1e48 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f89cfd1da8 <col:16> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f89cfd1e60 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1dd0 <col:19> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x55f89cfd1ef0 <lauxlib.c:424:14> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
B
   9: ImplicitCastExpr 0x55f89cfd1f18 <lauxlib.c:424:14> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1ef0 <col:14> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B1.8] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
  10: MemberExpr 0x55f89cfd1f30 <lauxlib.c:424:14, col:17> 'int' lvalue ->lvl 0x55f89cfb8238
`-ImplicitCastExpr 0x55f89cfd1f18 <col:14> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1ef0 <col:14> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B1.9]->lvl
  11: ImplicitCastExpr 0x55f89cfd1f90 <lauxlib.c:424:14, col:17> 'int' <LValueToRValue>
`-MemberExpr 0x55f89cfd1f30 <col:14, col:17> 'int' lvalue ->lvl 0x55f89cfb8238
  `-ImplicitCastExpr 0x55f89cfd1f18 <col:14> 'luaL_Buffer *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd1ef0 <col:14> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B1.10] (ImplicitCastExpr, LValueToRValue, int)
  12: DeclRefExpr 0x55f89cfd1f68 <lauxlib.c:424:23> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
toget
  13: ImplicitCastExpr 0x55f89cfd1fa8 <lauxlib.c:424:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1f68 <col:23> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: BinaryOperator 0x55f89cfd1fc0 <lauxlib.c:424:14, col:23> 'int' '-'
|-ImplicitCastExpr 0x55f89cfd1f90 <col:14, col:17> 'int' <LValueToRValue>
| `-MemberExpr 0x55f89cfd1f30 <col:14, col:17> 'int' lvalue ->lvl 0x55f89cfb8238
|   `-ImplicitCastExpr 0x55f89cfd1f18 <col:14> 'luaL_Buffer *' <LValueToRValue>
|     `-DeclRefExpr 0x55f89cfd1ef0 <col:14> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
`-ImplicitCastExpr 0x55f89cfd1fa8 <col:23> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1f68 <col:23> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B1.11] - [B1.13]
  15: IntegerLiteral 0x55f89cfd1fe8 <lauxlib.c:424:31> 'int' 1
1
  16: BinaryOperator 0x55f89cfd2008 <lauxlib.c:424:14, col:31> 'int' '+'
|-BinaryOperator 0x55f89cfd1fc0 <col:14, col:23> 'int' '-'
| |-ImplicitCastExpr 0x55f89cfd1f90 <col:14, col:17> 'int' <LValueToRValue>
| | `-MemberExpr 0x55f89cfd1f30 <col:14, col:17> 'int' lvalue ->lvl 0x55f89cfb8238
| |   `-ImplicitCastExpr 0x55f89cfd1f18 <col:14> 'luaL_Buffer *' <LValueToRValue>
| |     `-DeclRefExpr 0x55f89cfd1ef0 <col:14> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
| `-ImplicitCastExpr 0x55f89cfd1fa8 <col:23> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55f89cfd1f68 <col:23> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
`-IntegerLiteral 0x55f89cfd1fe8 <col:31> 'int' 1
[B1.14] + [B1.15]
  17: DeclRefExpr 0x55f89cfd1e78 <lauxlib.c:424:5> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
B
  18: ImplicitCastExpr 0x55f89cfd1ea0 <lauxlib.c:424:5> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1e78 <col:5> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B1.17] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
  19: MemberExpr 0x55f89cfd1eb8 <lauxlib.c:424:5, col:8> 'int' lvalue ->lvl 0x55f89cfb8238
`-ImplicitCastExpr 0x55f89cfd1ea0 <col:5> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1e78 <col:5> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B1.18]->lvl
  20: BinaryOperator 0x55f89cfd2030 <lauxlib.c:424:5, col:31> 'int' '='
|-MemberExpr 0x55f89cfd1eb8 <col:5, col:8> 'int' lvalue ->lvl 0x55f89cfb8238
| `-ImplicitCastExpr 0x55f89cfd1ea0 <col:5> 'luaL_Buffer *' <LValueToRValue>
|   `-DeclRefExpr 0x55f89cfd1e78 <col:5> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
`-BinaryOperator 0x55f89cfd2008 <col:14, col:31> 'int' '+'
  |-BinaryOperator 0x55f89cfd1fc0 <col:14, col:23> 'int' '-'
  | |-ImplicitCastExpr 0x55f89cfd1f90 <col:14, col:17> 'int' <LValueToRValue>
  | | `-MemberExpr 0x55f89cfd1f30 <col:14, col:17> 'int' lvalue ->lvl 0x55f89cfb8238
  | |   `-ImplicitCastExpr 0x55f89cfd1f18 <col:14> 'luaL_Buffer *' <LValueToRValue>
  | |     `-DeclRefExpr 0x55f89cfd1ef0 <col:14> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
  | `-ImplicitCastExpr 0x55f89cfd1fa8 <col:23> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x55f89cfd1f68 <col:23> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
  `-IntegerLiteral 0x55f89cfd1fe8 <col:31> 'int' 1
[B1.19] = [B1.16]
   Preds (2): B3 B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55f89cfd1c68 <lauxlib.c:422:14> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
toget
   2: ImplicitCastExpr 0x55f89cfd1d08 <lauxlib.c:422:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1c68 <col:14> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55f89cfd1c90 <lauxlib.c:422:22> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
B
   4: ImplicitCastExpr 0x55f89cfd1cb8 <lauxlib.c:422:22> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1c90 <col:22> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B2.3] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
   5: MemberExpr 0x55f89cfd1cd0 <lauxlib.c:422:22, col:25> 'int' lvalue ->lvl 0x55f89cfb8238
`-ImplicitCastExpr 0x55f89cfd1cb8 <col:22> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1c90 <col:22> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B2.4]->lvl
   6: ImplicitCastExpr 0x55f89cfd1d20 <lauxlib.c:422:22, col:25> 'int' <LValueToRValue>
`-MemberExpr 0x55f89cfd1cd0 <col:22, col:25> 'int' lvalue ->lvl 0x55f89cfb8238
  `-ImplicitCastExpr 0x55f89cfd1cb8 <col:22> 'luaL_Buffer *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd1c90 <col:22> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B2.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x55f89cfd1d38 <lauxlib.c:422:14, col:25> 'int' '<'
|-ImplicitCastExpr 0x55f89cfd1d08 <col:14> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55f89cfd1c68 <col:14> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
`-ImplicitCastExpr 0x55f89cfd1d20 <col:22, col:25> 'int' <LValueToRValue>
  `-MemberExpr 0x55f89cfd1cd0 <col:22, col:25> 'int' lvalue ->lvl 0x55f89cfb8238
    `-ImplicitCastExpr 0x55f89cfd1cb8 <col:22> 'luaL_Buffer *' <LValueToRValue>
      `-DeclRefExpr 0x55f89cfd1c90 <col:22> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B2.2] < [B2.6]
   T: do ... while [B2.7]
   Preds (1): B4
   Succs (2): B7 B1

 [B3]
   T: break;
   Preds (1): B5
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x55f89cfd1b00 <lauxlib.c:418:9> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1428 'toplen' 'size_t':'unsigned long'
toplen
   2: DeclRefExpr 0x55f89cfd1b28 <lauxlib.c:418:19> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1628 'l' 'size_t':'unsigned long'
l
   3: ImplicitCastExpr 0x55f89cfd1b50 <lauxlib.c:418:19> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1b28 <col:19> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1628 'l' 'size_t':'unsigned long'
[B4.2] (ImplicitCastExpr, LValueToRValue, size_t)
   4: CompoundAssignOperator 0x55f89cfd1b68 <lauxlib.c:418:9, col:19> 'size_t':'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|-DeclRefExpr 0x55f89cfd1b00 <col:9> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1428 'toplen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55f89cfd1b50 <col:19> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1b28 <col:19> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1628 'l' 'size_t':'unsigned long'
[B4.1] += [B4.3]
   5: DeclRefExpr 0x55f89cfd1ba0 <lauxlib.c:419:9> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
toget
   6: UnaryOperator 0x55f89cfd1bc8 <lauxlib.c:419:9, col:14> 'int' postfix '++'
`-DeclRefExpr 0x55f89cfd1ba0 <col:9> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B4.5]++
   Preds (2): B5 B6
   Succs (1): B2

 [B5]
   1: DeclRefExpr 0x55f89cfd1a30 <lauxlib.c:417:42> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1428 'toplen' 'size_t':'unsigned long'
toplen
   2: ImplicitCastExpr 0x55f89cfd1a80 <lauxlib.c:417:42> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1a30 <col:42> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1428 'toplen' 'size_t':'unsigned long'
[B5.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x55f89cfd1a58 <lauxlib.c:417:51> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1628 'l' 'size_t':'unsigned long'
l
   4: ImplicitCastExpr 0x55f89cfd1a98 <lauxlib.c:417:51> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1a58 <col:51> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1628 'l' 'size_t':'unsigned long'
[B5.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: BinaryOperator 0x55f89cfd1ab0 <lauxlib.c:417:42, col:51> 'int' '>'
|-ImplicitCastExpr 0x55f89cfd1a80 <col:42> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55f89cfd1a30 <col:42> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1428 'toplen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55f89cfd1a98 <col:51> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1a58 <col:51> 'size_t':'unsigned long' lvalue Var 0x55f89cfd1628 'l' 'size_t':'unsigned long'
[B5.2] > [B5.4]
   T: if [B6.24] || [B5.5]
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x55f89cfd1688 <./lua.h:262:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
lua_objlen
   2: ImplicitCastExpr 0x55f89cfd17c0 <./lua.h:262:26> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f89cfd1688 <col:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(lua_State *, int))
   3: DeclRefExpr 0x55f89cfd16b0 <lauxlib.c:416:29> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f89cfd1810 <lauxlib.c:416:29> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd16b0 <col:29> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55f89cfd16d8 <lauxlib.c:416:34> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
toget
   6: ImplicitCastExpr 0x55f89cfd1720 <lauxlib.c:416:34> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd16d8 <col:34> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B6.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x55f89cfd1700 <lauxlib.c:416:40> 'int' 1
1
   8: BinaryOperator 0x55f89cfd1738 <lauxlib.c:416:34, col:40> 'int' '+'
|-ImplicitCastExpr 0x55f89cfd1720 <col:34> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55f89cfd16d8 <col:34> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
`-IntegerLiteral 0x55f89cfd1700 <col:40> 'int' 1
[B6.6] + [B6.7]
   9: UnaryOperator 0x55f89cfd1780 <lauxlib.c:416:32, col:41> 'int' prefix '-'
`-ParenExpr 0x55f89cfd1760 <col:33, col:41> 'int'
  `-BinaryOperator 0x55f89cfd1738 <col:34, col:40> 'int' '+'
    |-ImplicitCastExpr 0x55f89cfd1720 <col:34> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x55f89cfd16d8 <col:34> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
    `-IntegerLiteral 0x55f89cfd1700 <col:40> 'int' 1
-([B6.8])
  10: CallExpr 0x55f89cfd17d8 <./lua.h:262:26, col:43> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55f89cfd17c0 <col:26> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f89cfd1688 <col:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
|-ImplicitCastExpr 0x55f89cfd1810 <lauxlib.c:416:29> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f89cfd16b0 <col:29> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
`-ParenExpr 0x55f89cfd17a0 <./lua.h:262:40, col:42> 'int'
  `-UnaryOperator 0x55f89cfd1780 <lauxlib.c:416:32, col:41> 'int' prefix '-'
    `-ParenExpr 0x55f89cfd1760 <col:33, col:41> 'int'
      `-BinaryOperator 0x55f89cfd1738 <col:34, col:40> 'int' '+'
        |-ImplicitCastExpr 0x55f89cfd1720 <col:34> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x55f89cfd16d8 <col:34> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
        `-IntegerLiteral 0x55f89cfd1700 <col:40> 'int' 1
[B6.2]([B6.4], ([B6.9]))
  11: DeclStmt 0x55f89cfd1828 <lauxlib.c:416:7, col:43>col:14
`-VarDecl 0x55f89cfd1628 <col:7, ./lua.h:262:43> lauxlib.c:416:14 used l 'size_t':'unsigned long' cinit
  `-CallExpr 0x55f89cfd17d8 <./lua.h:262:26, col:43> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55f89cfd17c0 <col:26> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55f89cfd1688 <col:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
    |-ImplicitCastExpr 0x55f89cfd1810 <lauxlib.c:416:29> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55f89cfd16b0 <col:29> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
    `-ParenExpr 0x55f89cfd17a0 <./lua.h:262:40, col:42> 'int'
      `-UnaryOperator 0x55f89cfd1780 <lauxlib.c:416:32, col:41> 'int' prefix '-'
        `-ParenExpr 0x55f89cfd1760 <col:33, col:41> 'int'
          `-BinaryOperator 0x55f89cfd1738 <col:34, col:40> 'int' '+'
            |-ImplicitCastExpr 0x55f89cfd1720 <col:34> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x55f89cfd16d8 <col:34> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
            `-IntegerLiteral 0x55f89cfd1700 <col:40> 'int' 1
size_t l = lua_objlen(L, (-(toget + 1)));
  12: DeclRefExpr 0x55f89cfd1840 <lauxlib.c:417:11> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
B
  13: ImplicitCastExpr 0x55f89cfd1868 <lauxlib.c:417:11> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd1840 <col:11> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B6.12] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
  14: MemberExpr 0x55f89cfd1880 <lauxlib.c:417:11, col:14> 'int' lvalue ->lvl 0x55f89cfb8238
`-ImplicitCastExpr 0x55f89cfd1868 <col:11> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd1840 <col:11> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B6.13]->lvl
  15: ImplicitCastExpr 0x55f89cfd18e0 <lauxlib.c:417:11, col:14> 'int' <LValueToRValue>
`-MemberExpr 0x55f89cfd1880 <col:11, col:14> 'int' lvalue ->lvl 0x55f89cfb8238
  `-ImplicitCastExpr 0x55f89cfd1868 <col:11> 'luaL_Buffer *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd1840 <col:11> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B6.14] (ImplicitCastExpr, LValueToRValue, int)
  16: DeclRefExpr 0x55f89cfd18b8 <lauxlib.c:417:20> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
toget
  17: ImplicitCastExpr 0x55f89cfd18f8 <lauxlib.c:417:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd18b8 <col:20> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B6.16] (ImplicitCastExpr, LValueToRValue, int)
  18: BinaryOperator 0x55f89cfd1910 <lauxlib.c:417:11, col:20> 'int' '-'
|-ImplicitCastExpr 0x55f89cfd18e0 <col:11, col:14> 'int' <LValueToRValue>
| `-MemberExpr 0x55f89cfd1880 <col:11, col:14> 'int' lvalue ->lvl 0x55f89cfb8238
|   `-ImplicitCastExpr 0x55f89cfd1868 <col:11> 'luaL_Buffer *' <LValueToRValue>
|     `-DeclRefExpr 0x55f89cfd1840 <col:11> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
`-ImplicitCastExpr 0x55f89cfd18f8 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd18b8 <col:20> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
[B6.15] - [B6.17]
  19: IntegerLiteral 0x55f89cfd1938 <lauxlib.c:417:28> 'int' 1
1
  20: BinaryOperator 0x55f89cfd1958 <lauxlib.c:417:11, col:28> 'int' '+'
|-BinaryOperator 0x55f89cfd1910 <col:11, col:20> 'int' '-'
| |-ImplicitCastExpr 0x55f89cfd18e0 <col:11, col:14> 'int' <LValueToRValue>
| | `-MemberExpr 0x55f89cfd1880 <col:11, col:14> 'int' lvalue ->lvl 0x55f89cfb8238
| |   `-ImplicitCastExpr 0x55f89cfd1868 <col:11> 'luaL_Buffer *' <LValueToRValue>
| |     `-DeclRefExpr 0x55f89cfd1840 <col:11> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
| `-ImplicitCastExpr 0x55f89cfd18f8 <col:20> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55f89cfd18b8 <col:20> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
`-IntegerLiteral 0x55f89cfd1938 <col:28> 'int' 1
[B6.18] + [B6.19]
  21: IntegerLiteral 0x55f89cfd1980 <./lua.h:87:22> 'int' 20
20
  22: IntegerLiteral 0x55f89cfd19a0 <lauxlib.c:395:29> 'int' 2
2
  23: BinaryOperator 0x55f89cfd19c0 <./lua.h:87:22, lauxlib.c:395:29> 'int' '/'
|-IntegerLiteral 0x55f89cfd1980 <./lua.h:87:22> 'int' 20
`-IntegerLiteral 0x55f89cfd19a0 <lauxlib.c:395:29> 'int' 2
[B6.21] / [B6.22]
  24: BinaryOperator 0x55f89cfd1a08 <lauxlib.c:417:11, line:395:30> 'int' '>='
|-BinaryOperator 0x55f89cfd1958 <line:417:11, col:28> 'int' '+'
| |-BinaryOperator 0x55f89cfd1910 <col:11, col:20> 'int' '-'
| | |-ImplicitCastExpr 0x55f89cfd18e0 <col:11, col:14> 'int' <LValueToRValue>
| | | `-MemberExpr 0x55f89cfd1880 <col:11, col:14> 'int' lvalue ->lvl 0x55f89cfb8238
| | |   `-ImplicitCastExpr 0x55f89cfd1868 <col:11> 'luaL_Buffer *' <LValueToRValue>
| | |     `-DeclRefExpr 0x55f89cfd1840 <col:11> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
| | `-ImplicitCastExpr 0x55f89cfd18f8 <col:20> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f89cfd18b8 <col:20> 'int' lvalue Var 0x55f89cfd1380 'toget' 'int'
| `-IntegerLiteral 0x55f89cfd1938 <col:28> 'int' 1
`-ParenExpr 0x55f89cfd19e8 <line:395:15, col:30> 'int'
  `-BinaryOperator 0x55f89cfd19c0 <./lua.h:87:22, lauxlib.c:395:29> 'int' '/'
    |-IntegerLiteral 0x55f89cfd1980 <./lua.h:87:22> 'int' 20
    `-IntegerLiteral 0x55f89cfd19a0 <lauxlib.c:395:29> 'int' 2
[B6.20] >= ([B6.23])
   T: [B6.24] || ...
   Preds (2): B7 B8
   Succs (2): B4 B5

 [B7]
   Preds (1): B2
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x55f89cfd12c0 <lauxlib.c:412:20> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
B
   2: ImplicitCastExpr 0x55f89cfd12e8 <lauxlib.c:412:20> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd12c0 <col:20> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B8.1] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
   3: MemberExpr 0x55f89cfd1300 <lauxlib.c:412:20, col:23> 'lua_State *' lvalue ->L 0x55f89cfb8290
`-ImplicitCastExpr 0x55f89cfd12e8 <col:20> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd12c0 <col:20> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B8.2]->L
   4: ImplicitCastExpr 0x55f89cfd1338 <lauxlib.c:412:20, col:23> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x55f89cfd1300 <col:20, col:23> 'lua_State *' lvalue ->L 0x55f89cfb8290
  `-ImplicitCastExpr 0x55f89cfd12e8 <col:20> 'luaL_Buffer *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd12c0 <col:20> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclStmt 0x55f89cfd1350 <lauxlib.c:412:5, col:24>col:16
`-VarDecl 0x55f89cfd1260 <col:5, col:23> col:16 used L 'lua_State *' cinit
  `-ImplicitCastExpr 0x55f89cfd1338 <col:20, col:23> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x55f89cfd1300 <col:20, col:23> 'lua_State *' lvalue ->L 0x55f89cfb8290
      `-ImplicitCastExpr 0x55f89cfd12e8 <col:20> 'luaL_Buffer *' <LValueToRValue>
        `-DeclRefExpr 0x55f89cfd12c0 <col:20> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
lua_State *L = B->L;
   6: IntegerLiteral 0x55f89cfd13e0 <lauxlib.c:413:17> 'int' 1
1
   7: DeclStmt 0x55f89cfd1400 <lauxlib.c:413:5, col:18>col:9
`-VarDecl 0x55f89cfd1380 <col:5, col:17> col:9 used toget 'int' cinit
  `-IntegerLiteral 0x55f89cfd13e0 <col:17> 'int' 1
int toget = 1;
   8: DeclRefExpr 0x55f89cfd1488 <./lua.h:262:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
lua_objlen
   9: ImplicitCastExpr 0x55f89cfd1598 <./lua.h:262:26> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f89cfd1488 <col:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
[B8.8] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(lua_State *, int))
  10: DeclRefExpr 0x55f89cfd14b0 <lauxlib.c:414:32> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x55f89cfd15e8 <lauxlib.c:414:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd14b0 <col:32> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
[B8.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x55f89cfd14d8 <lauxlib.c:414:36> 'int' 1
1
  13: UnaryOperator 0x55f89cfd14f8 <lauxlib.c:414:35, col:36> 'int' prefix '-'
`-IntegerLiteral 0x55f89cfd14d8 <col:36> 'int' 1
-[B8.12]
  14: CallExpr 0x55f89cfd15b0 <./lua.h:262:26, col:43> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55f89cfd1598 <col:26> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f89cfd1488 <col:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
|-ImplicitCastExpr 0x55f89cfd15e8 <lauxlib.c:414:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f89cfd14b0 <col:32> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
`-ParenExpr 0x55f89cfd1518 <./lua.h:262:40, col:42> 'int'
  `-UnaryOperator 0x55f89cfd14f8 <lauxlib.c:414:35, col:36> 'int' prefix '-'
    `-IntegerLiteral 0x55f89cfd14d8 <col:36> 'int' 1
[B8.9]([B8.11], ([B8.13]))
  15: DeclStmt 0x55f89cfd1600 <lauxlib.c:414:5, col:38>col:12
`-VarDecl 0x55f89cfd1428 <col:5, ./lua.h:262:43> lauxlib.c:414:12 used toplen 'size_t':'unsigned long' cinit
  `-CallExpr 0x55f89cfd15b0 <./lua.h:262:26, col:43> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55f89cfd1598 <col:26> 'size_t (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55f89cfd1488 <col:26> 'size_t (lua_State *, int)':'size_t (lua_State *, int)' Function 0x55f89cfa1190 'lua_objlen' 'size_t (lua_State *, int)':'size_t (lua_State *, int)'
    |-ImplicitCastExpr 0x55f89cfd15e8 <lauxlib.c:414:32> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55f89cfd14b0 <col:32> 'lua_State *' lvalue Var 0x55f89cfd1260 'L' 'lua_State *'
    `-ParenExpr 0x55f89cfd1518 <./lua.h:262:40, col:42> 'int'
      `-UnaryOperator 0x55f89cfd14f8 <lauxlib.c:414:35, col:36> 'int' prefix '-'
        `-IntegerLiteral 0x55f89cfd14d8 <col:36> 'int' 1
size_t toplen = lua_objlen(L, (-1));
   Preds (1): B9
   Succs (1): B6

 [B9]
   1: DeclRefExpr 0x55f89cfd0a00 <lauxlib.c:411:7> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
B
   2: ImplicitCastExpr 0x55f89cfd0a28 <lauxlib.c:411:7> 'luaL_Buffer *' <LValueToRValue>
`-DeclRefExpr 0x55f89cfd0a00 <col:7> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B9.1] (ImplicitCastExpr, LValueToRValue, luaL_Buffer *)
   3: MemberExpr 0x55f89cfd0a40 <lauxlib.c:411:7, col:10> 'int' lvalue ->lvl 0x55f89cfb8238
`-ImplicitCastExpr 0x55f89cfd0a28 <col:7> 'luaL_Buffer *' <LValueToRValue>
  `-DeclRefExpr 0x55f89cfd0a00 <col:7> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B9.2]->lvl
   4: ImplicitCastExpr 0x55f89cfd1210 <lauxlib.c:411:7, col:10> 'int' <LValueToRValue>
`-MemberExpr 0x55f89cfd0a40 <col:7, col:10> 'int' lvalue ->lvl 0x55f89cfb8238
  `-ImplicitCastExpr 0x55f89cfd0a28 <col:7> 'luaL_Buffer *' <LValueToRValue>
    `-DeclRefExpr 0x55f89cfd0a00 <col:7> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
[B9.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55f89cfd11f0 <lauxlib.c:411:16> 'int' 1
1
   6: BinaryOperator 0x55f89cfd1228 <lauxlib.c:411:7, col:16> 'int' '>'
|-ImplicitCastExpr 0x55f89cfd1210 <col:7, col:10> 'int' <LValueToRValue>
| `-MemberExpr 0x55f89cfd0a40 <col:7, col:10> 'int' lvalue ->lvl 0x55f89cfb8238
|   `-ImplicitCastExpr 0x55f89cfd0a28 <col:7> 'luaL_Buffer *' <LValueToRValue>
|     `-DeclRefExpr 0x55f89cfd0a00 <col:7> 'luaL_Buffer *' lvalue ParmVar 0x55f89cfd08d0 'B' 'luaL_Buffer *'
`-IntegerLiteral 0x55f89cfd11f0 <col:16> 'int' 1
[B9.4] > [B9.5]
   T: if [B9.6]
   Preds (1): B10
   Succs (2): B8 B0

 [B0 (EXIT)]
   Preds (2): B1 B9
