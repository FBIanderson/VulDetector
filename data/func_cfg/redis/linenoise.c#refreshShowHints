void refreshShowHints(struct abuf *ab, struct linenoiseState *l, int plen)
 [B18 (ENTRY)]
   Succs (1): B17

 [B1]
   1: DeclRefExpr 0x56555a4a1538 <linenoise.c:509:36> 'linenoiseFreeHintsCallback *' lvalue Var 0x56555a48d6c8 'freeHintsCallback' 'linenoiseFreeHintsCallback *'
freeHintsCallback
   2: ImplicitCastExpr 0x56555a4a15b8 <linenoise.c:509:36> 'linenoiseFreeHintsCallback *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a1538 <col:36> 'linenoiseFreeHintsCallback *' lvalue Var 0x56555a48d6c8 'freeHintsCallback' 'linenoiseFreeHintsCallback *'
[B1.1] (ImplicitCastExpr, LValueToRValue, linenoiseFreeHintsCallback *)
   3: DeclRefExpr 0x56555a4a1590 <linenoise.c:509:54> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
hint
   4: ImplicitCastExpr 0x56555a4a1600 <linenoise.c:509:54> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a1590 <col:54> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: ImplicitCastExpr 0x56555a4a1618 <linenoise.c:509:54> 'void *' <BitCast>
`-ImplicitCastExpr 0x56555a4a1600 <col:54> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a1590 <col:54> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B1.4] (ImplicitCastExpr, BitCast, void *)
   6: CallExpr 0x56555a4a15d0 <linenoise.c:509:36, col:58> 'void'
|-ImplicitCastExpr 0x56555a4a15b8 <col:36> 'linenoiseFreeHintsCallback *' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a1538 <col:36> 'linenoiseFreeHintsCallback *' lvalue Var 0x56555a48d6c8 'freeHintsCallback' 'linenoiseFreeHintsCallback *'
`-ImplicitCastExpr 0x56555a4a1618 <col:54> 'void *' <BitCast>
  `-ImplicitCastExpr 0x56555a4a1600 <col:54> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x56555a4a1590 <col:54> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B1.2]([B1.5])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x56555a4a14f8 <linenoise.c:509:17> 'linenoiseFreeHintsCallback *' lvalue Var 0x56555a48d6c8 'freeHintsCallback' 'linenoiseFreeHintsCallback *'
freeHintsCallback
   2: ImplicitCastExpr 0x56555a4a1520 <linenoise.c:509:17> 'linenoiseFreeHintsCallback *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a14f8 <col:17> 'linenoiseFreeHintsCallback *' lvalue Var 0x56555a48d6c8 'freeHintsCallback' 'linenoiseFreeHintsCallback *'
[B2.1] (ImplicitCastExpr, LValueToRValue, linenoiseFreeHintsCallback *)
   T: if [B2.2]
   Preds (2): B3 B4
   Succs (2): B1 B0

 [B3]
   1: DeclRefExpr 0x56555a4a1380 <linenoise.c:507:17> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
abAppend
   2: ImplicitCastExpr 0x56555a4a1420 <linenoise.c:507:17> 'void (*)(struct abuf *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4a1380 <col:17> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(struct abuf *, const char *, int))
   3: DeclRefExpr 0x56555a4a13a8 <linenoise.c:507:26> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
ab
   4: ImplicitCastExpr 0x56555a4a1478 <linenoise.c:507:26> 'struct abuf *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a13a8 <col:26> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
[B3.3] (ImplicitCastExpr, LValueToRValue, struct abuf *)
   5: StringLiteral 0x56555a4a13d0 <linenoise.c:507:29> 'char [5]' lvalue "\033[0m"
"\033[0m"
   6: ImplicitCastExpr 0x56555a4a1490 <linenoise.c:507:29> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x56555a4a13d0 <col:29> 'char [5]' lvalue "\033[0m"
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x56555a4a14a8 <linenoise.c:507:29> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4a1490 <col:29> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x56555a4a13d0 <col:29> 'char [5]' lvalue "\033[0m"
[B3.6] (ImplicitCastExpr, BitCast, const char *)
   8: IntegerLiteral 0x56555a4a1400 <linenoise.c:507:39> 'int' 4
4
   9: CallExpr 0x56555a4a1438 <linenoise.c:507:17, col:40> 'void'
|-ImplicitCastExpr 0x56555a4a1420 <col:17> 'void (*)(struct abuf *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4a1380 <col:17> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
|-ImplicitCastExpr 0x56555a4a1478 <col:26> 'struct abuf *' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a13a8 <col:26> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
|-ImplicitCastExpr 0x56555a4a14a8 <col:29> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56555a4a1490 <col:29> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x56555a4a13d0 <col:29> 'char [5]' lvalue "\033[0m"
`-IntegerLiteral 0x56555a4a1400 <col:39> 'int' 4
[B3.2]([B3.4], [B3.7], [B3.8])
   Preds (2): B4 B5
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x56555a4a12d0 <linenoise.c:506:32> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
bold
   2: ImplicitCastExpr 0x56555a4a1318 <linenoise.c:506:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a12d0 <col:32> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x56555a4a12f8 <linenoise.c:506:40> 'int' 0
0
   4: BinaryOperator 0x56555a4a1330 <linenoise.c:506:32, col:40> 'int' '!='
|-ImplicitCastExpr 0x56555a4a1318 <col:32> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a12d0 <col:32> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
`-IntegerLiteral 0x56555a4a12f8 <col:40> 'int' 0
[B4.2] != [B4.3]
   T: if [B5.30] || [B4.4]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x56555a4a0e60 <linenoise.c:504:13> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
abAppend
   2: ImplicitCastExpr 0x56555a4a1018 <linenoise.c:504:13> 'void (*)(struct abuf *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4a0e60 <col:13> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(struct abuf *, const char *, int))
   3: DeclRefExpr 0x56555a4a0e88 <linenoise.c:504:22> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
ab
   4: ImplicitCastExpr 0x56555a4a1070 <linenoise.c:504:22> 'struct abuf *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0e88 <col:22> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
[B5.3] (ImplicitCastExpr, LValueToRValue, struct abuf *)
   5: DeclRefExpr 0x56555a4a0eb0 <linenoise.c:504:25> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
seq
   6: ImplicitCastExpr 0x56555a4a1088 <linenoise.c:504:25> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x56555a4a0eb0 <col:25> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B5.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x56555a4a10a0 <linenoise.c:504:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4a1088 <col:25> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x56555a4a0eb0 <col:25> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B5.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x56555a4a0ed8 <linenoise.c:504:29> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
strlen
   9: ImplicitCastExpr 0x56555a4a0f40 <linenoise.c:504:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4a0ed8 <col:29> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
[B5.8] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
  10: DeclRefExpr 0x56555a4a0f00 <linenoise.c:504:36> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
seq
  11: ImplicitCastExpr 0x56555a4a0f88 <linenoise.c:504:36> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x56555a4a0f00 <col:36> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B5.10] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  12: ImplicitCastExpr 0x56555a4a0fa0 <linenoise.c:504:36> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4a0f88 <col:36> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x56555a4a0f00 <col:36> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B5.11] (ImplicitCastExpr, BitCast, const char *)
  13: CallExpr 0x56555a4a0f58 <linenoise.c:504:29, col:39> 'unsigned long'
|-ImplicitCastExpr 0x56555a4a0f40 <col:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4a0ed8 <col:29> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x56555a4a0fa0 <col:36> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x56555a4a0f88 <col:36> 'char *' <ArrayToPointerDecay>
    `-DeclRefExpr 0x56555a4a0f00 <col:36> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B5.9]([B5.12])
  14: ImplicitCastExpr 0x56555a4a10b8 <linenoise.c:504:29, col:39> 'int' <IntegralCast>
`-CallExpr 0x56555a4a0f58 <col:29, col:39> 'unsigned long'
  |-ImplicitCastExpr 0x56555a4a0f40 <col:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56555a4a0ed8 <col:29> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
  `-ImplicitCastExpr 0x56555a4a0fa0 <col:36> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x56555a4a0f88 <col:36> 'char *' <ArrayToPointerDecay>
      `-DeclRefExpr 0x56555a4a0f00 <col:36> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B5.13] (ImplicitCastExpr, IntegralCast, int)
  15: CallExpr 0x56555a4a1030 <linenoise.c:504:13, col:40> 'void'
|-ImplicitCastExpr 0x56555a4a1018 <col:13> 'void (*)(struct abuf *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4a0e60 <col:13> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
|-ImplicitCastExpr 0x56555a4a1070 <col:22> 'struct abuf *' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a0e88 <col:22> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
|-ImplicitCastExpr 0x56555a4a10a0 <col:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56555a4a1088 <col:25> 'char *' <ArrayToPointerDecay>
|   `-DeclRefExpr 0x56555a4a0eb0 <col:25> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
`-ImplicitCastExpr 0x56555a4a10b8 <col:29, col:39> 'int' <IntegralCast>
  `-CallExpr 0x56555a4a0f58 <col:29, col:39> 'unsigned long'
    |-ImplicitCastExpr 0x56555a4a0f40 <col:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56555a4a0ed8 <col:29> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
    `-ImplicitCastExpr 0x56555a4a0fa0 <col:36> 'const char *' <BitCast>
      `-ImplicitCastExpr 0x56555a4a0f88 <col:36> 'char *' <ArrayToPointerDecay>
        `-DeclRefExpr 0x56555a4a0f00 <col:36> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B5.2]([B5.4], [B5.7], [B5.14])
  16: DeclRefExpr 0x56555a4a10d0 <linenoise.c:505:13> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
abAppend
  17: ImplicitCastExpr 0x56555a4a1170 <linenoise.c:505:13> 'void (*)(struct abuf *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4a10d0 <col:13> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
[B5.16] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(struct abuf *, const char *, int))
  18: DeclRefExpr 0x56555a4a10f8 <linenoise.c:505:22> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
ab
  19: ImplicitCastExpr 0x56555a4a11c8 <linenoise.c:505:22> 'struct abuf *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a10f8 <col:22> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
[B5.18] (ImplicitCastExpr, LValueToRValue, struct abuf *)
  20: DeclRefExpr 0x56555a4a1120 <linenoise.c:505:25> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
hint
  21: ImplicitCastExpr 0x56555a4a11e0 <linenoise.c:505:25> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a1120 <col:25> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B5.20] (ImplicitCastExpr, LValueToRValue, char *)
  22: ImplicitCastExpr 0x56555a4a11f8 <linenoise.c:505:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4a11e0 <col:25> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a1120 <col:25> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B5.21] (ImplicitCastExpr, BitCast, const char *)
  23: DeclRefExpr 0x56555a4a1148 <linenoise.c:505:30> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
hintlen
  24: ImplicitCastExpr 0x56555a4a1210 <linenoise.c:505:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a1148 <col:30> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
[B5.23] (ImplicitCastExpr, LValueToRValue, int)
  25: CallExpr 0x56555a4a1188 <linenoise.c:505:13, col:37> 'void'
|-ImplicitCastExpr 0x56555a4a1170 <col:13> 'void (*)(struct abuf *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4a10d0 <col:13> 'void (struct abuf *, const char *, int)' Function 0x56555a49ebc0 'abAppend' 'void (struct abuf *, const char *, int)'
|-ImplicitCastExpr 0x56555a4a11c8 <col:22> 'struct abuf *' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a10f8 <col:22> 'struct abuf *' lvalue ParmVar 0x56555a49f7f8 'ab' 'struct abuf *'
|-ImplicitCastExpr 0x56555a4a11f8 <col:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56555a4a11e0 <col:25> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x56555a4a1120 <col:25> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
`-ImplicitCastExpr 0x56555a4a1210 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a1148 <col:30> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
[B5.17]([B5.19], [B5.22], [B5.24])
  26: DeclRefExpr 0x56555a4a1228 <linenoise.c:506:17> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
color
  27: ImplicitCastExpr 0x56555a4a1290 <linenoise.c:506:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a1228 <col:17> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
[B5.26] (ImplicitCastExpr, LValueToRValue, int)
  28: IntegerLiteral 0x56555a4a1250 <linenoise.c:506:27> 'int' 1
1
  29: UnaryOperator 0x56555a4a1270 <linenoise.c:506:26, col:27> 'int' prefix '-'
`-IntegerLiteral 0x56555a4a1250 <col:27> 'int' 1
-[B5.28]
  30: BinaryOperator 0x56555a4a12a8 <linenoise.c:506:17, col:27> 'int' '!='
|-ImplicitCastExpr 0x56555a4a1290 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a1228 <col:17> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
`-UnaryOperator 0x56555a4a1270 <col:26, col:27> 'int' prefix '-'
  `-IntegerLiteral 0x56555a4a1250 <col:27> 'int' 1
[B5.27] != [B5.29]
   T: [B5.30] || ...
   Preds (2): B6 B7
   Succs (2): B3 B4

 [B6]
   1: CharacterLiteral 0x56555a4a0dd0 <linenoise.c:503:26> 'int' 0
'\x00'
   2: ImplicitCastExpr 0x56555a4a0de8 <linenoise.c:503:26> 'char' <IntegralCast>
`-CharacterLiteral 0x56555a4a0dd0 <col:26> 'int' 0
[B6.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x56555a4a0d48 <linenoise.c:503:17> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
seq
   4: ImplicitCastExpr 0x56555a4a0d90 <linenoise.c:503:17> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x56555a4a0d48 <col:17> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B6.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: IntegerLiteral 0x56555a4a0d70 <linenoise.c:503:21> 'int' 0
0
   6: ArraySubscriptExpr 0x56555a4a0da8 <linenoise.c:503:17, col:22> 'char' lvalue
|-ImplicitCastExpr 0x56555a4a0d90 <col:17> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x56555a4a0d48 <col:17> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
`-IntegerLiteral 0x56555a4a0d70 <col:21> 'int' 0
[B6.4][[B6.5]]
   7: BinaryOperator 0x56555a4a0e00 <linenoise.c:503:17, col:26> 'char' '='
|-ArraySubscriptExpr 0x56555a4a0da8 <col:17, col:22> 'char' lvalue
| |-ImplicitCastExpr 0x56555a4a0d90 <col:17> 'char *' <ArrayToPointerDecay>
| | `-DeclRefExpr 0x56555a4a0d48 <col:17> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
| `-IntegerLiteral 0x56555a4a0d70 <col:21> 'int' 0
`-ImplicitCastExpr 0x56555a4a0de8 <col:26> 'char' <IntegralCast>
  `-CharacterLiteral 0x56555a4a0dd0 <col:26> 'int' 0
[B6.6] = [B6.2]
   Preds (1): B8
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x56555a4a0b18 <linenoise.c:501:17> 'int (char *, unsigned long, const char *, ...)' Function 0x56555a40c8c8 'snprintf' 'int (char *, unsigned long, const char *, ...)'
snprintf
   2: ImplicitCastExpr 0x56555a4a0c50 <linenoise.c:501:17> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4a0b18 <col:17> 'int (char *, unsigned long, const char *, ...)' Function 0x56555a40c8c8 'snprintf' 'int (char *, unsigned long, const char *, ...)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, unsigned long, const char *, ...))
   3: DeclRefExpr 0x56555a4a0b40 <linenoise.c:501:26> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
seq
   4: ImplicitCastExpr 0x56555a4a0cb8 <linenoise.c:501:26> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x56555a4a0b40 <col:26> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
[B7.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: IntegerLiteral 0x56555a4a0b68 <linenoise.c:501:30> 'int' 64
64
   6: ImplicitCastExpr 0x56555a4a0cd0 <linenoise.c:501:30> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x56555a4a0b68 <col:30> 'int' 64
[B7.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: StringLiteral 0x56555a4a0bc8 <linenoise.c:501:33> 'char [12]' lvalue "\033[%d;%d;49m"
"\033[%d;%d;49m"
   8: ImplicitCastExpr 0x56555a4a0ce8 <linenoise.c:501:33> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x56555a4a0bc8 <col:33> 'char [12]' lvalue "\033[%d;%d;49m"
[B7.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x56555a4a0d00 <linenoise.c:501:33> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4a0ce8 <col:33> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x56555a4a0bc8 <col:33> 'char [12]' lvalue "\033[%d;%d;49m"
[B7.8] (ImplicitCastExpr, BitCast, const char *)
  10: DeclRefExpr 0x56555a4a0c00 <linenoise.c:501:50> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
bold
  11: ImplicitCastExpr 0x56555a4a0d18 <linenoise.c:501:50> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0c00 <col:50> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
[B7.10] (ImplicitCastExpr, LValueToRValue, int)
  12: DeclRefExpr 0x56555a4a0c28 <linenoise.c:501:55> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
color
  13: ImplicitCastExpr 0x56555a4a0d30 <linenoise.c:501:55> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0c28 <col:55> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
[B7.12] (ImplicitCastExpr, LValueToRValue, int)
  14: CallExpr 0x56555a4a0c68 <linenoise.c:501:17, col:60> 'int'
|-ImplicitCastExpr 0x56555a4a0c50 <col:17> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4a0b18 <col:17> 'int (char *, unsigned long, const char *, ...)' Function 0x56555a40c8c8 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|-ImplicitCastExpr 0x56555a4a0cb8 <col:26> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x56555a4a0b40 <col:26> 'char [64]' lvalue Var 0x56555a49fb68 'seq' 'char [64]'
|-ImplicitCastExpr 0x56555a4a0cd0 <col:30> 'unsigned long' <IntegralCast>
| `-IntegerLiteral 0x56555a4a0b68 <col:30> 'int' 64
|-ImplicitCastExpr 0x56555a4a0d00 <col:33> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56555a4a0ce8 <col:33> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x56555a4a0bc8 <col:33> 'char [12]' lvalue "\033[%d;%d;49m"
|-ImplicitCastExpr 0x56555a4a0d18 <col:50> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a0c00 <col:50> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
`-ImplicitCastExpr 0x56555a4a0d30 <col:55> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a0c28 <col:55> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
[B7.2]([B7.4], [B7.6], [B7.9], [B7.11], [B7.13])
   Preds (2): B8 B9
   Succs (1): B5

 [B8]
   1: DeclRefExpr 0x56555a4a0a68 <linenoise.c:500:32> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
bold
   2: ImplicitCastExpr 0x56555a4a0ab0 <linenoise.c:500:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0a68 <col:32> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x56555a4a0a90 <linenoise.c:500:40> 'int' 0
0
   4: BinaryOperator 0x56555a4a0ac8 <linenoise.c:500:32, col:40> 'int' '!='
|-ImplicitCastExpr 0x56555a4a0ab0 <col:32> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a0a68 <col:32> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
`-IntegerLiteral 0x56555a4a0a90 <col:40> 'int' 0
[B8.2] != [B8.3]
   T: if [B9.5] || [B8.4]
   Preds (1): B9
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x56555a4a09c0 <linenoise.c:500:17> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
color
   2: ImplicitCastExpr 0x56555a4a0a28 <linenoise.c:500:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a09c0 <col:17> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
[B9.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x56555a4a09e8 <linenoise.c:500:27> 'int' 1
1
   4: UnaryOperator 0x56555a4a0a08 <linenoise.c:500:26, col:27> 'int' prefix '-'
`-IntegerLiteral 0x56555a4a09e8 <col:27> 'int' 1
-[B9.3]
   5: BinaryOperator 0x56555a4a0a40 <linenoise.c:500:17, col:27> 'int' '!='
|-ImplicitCastExpr 0x56555a4a0a28 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a09c0 <col:17> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
`-UnaryOperator 0x56555a4a0a08 <col:26, col:27> 'int' prefix '-'
  `-IntegerLiteral 0x56555a4a09e8 <col:27> 'int' 1
[B9.2] != [B9.4]
   T: [B9.5] || ...
   Preds (3): B10 B11 B12
   Succs (2): B7 B8

 [B10]
   1: IntegerLiteral 0x56555a4a0940 <linenoise.c:499:51> 'int' 37
37
   2: DeclRefExpr 0x56555a4a0918 <linenoise.c:499:43> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
color
   3: BinaryOperator 0x56555a4a0960 <linenoise.c:499:43, col:51> 'int' '='
|-DeclRefExpr 0x56555a4a0918 <col:43> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
`-IntegerLiteral 0x56555a4a0940 <col:51> 'int' 37
[B10.2] = [B10.1]
   Preds (1): B11
   Succs (1): B9

 [B11]
   1: DeclRefExpr 0x56555a4a0848 <linenoise.c:499:30> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
color
   2: ImplicitCastExpr 0x56555a4a08b0 <linenoise.c:499:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0848 <col:30> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
[B11.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x56555a4a0870 <linenoise.c:499:40> 'int' 1
1
   4: UnaryOperator 0x56555a4a0890 <linenoise.c:499:39, col:40> 'int' prefix '-'
`-IntegerLiteral 0x56555a4a0870 <col:40> 'int' 1
-[B11.3]
   5: BinaryOperator 0x56555a4a08c8 <linenoise.c:499:30, col:40> 'int' '=='
|-ImplicitCastExpr 0x56555a4a08b0 <col:30> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a0848 <col:30> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
`-UnaryOperator 0x56555a4a0890 <col:39, col:40> 'int' prefix '-'
  `-IntegerLiteral 0x56555a4a0870 <col:40> 'int' 1
[B11.2] == [B11.4]
   T: if [B12.4] && [B11.5]
   Preds (1): B12
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x56555a4a07c0 <linenoise.c:499:17> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
bold
   2: ImplicitCastExpr 0x56555a4a0808 <linenoise.c:499:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a07c0 <col:17> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
[B12.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x56555a4a07e8 <linenoise.c:499:25> 'int' 1
1
   4: BinaryOperator 0x56555a4a0820 <linenoise.c:499:17, col:25> 'int' '=='
|-ImplicitCastExpr 0x56555a4a0808 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a07c0 <col:17> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
`-IntegerLiteral 0x56555a4a07e8 <col:25> 'int' 1
[B12.2] == [B12.3]
   T: [B12.4] && ...
   Preds (2): B13 B14
   Succs (2): B11 B9

 [B13]
   1: DeclRefExpr 0x56555a4a0720 <linenoise.c:498:49> 'int' lvalue Var 0x56555a4a03b8 'hintmaxlen' 'int'
hintmaxlen
   2: ImplicitCastExpr 0x56555a4a0748 <linenoise.c:498:49> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0720 <col:49> 'int' lvalue Var 0x56555a4a03b8 'hintmaxlen' 'int'
[B13.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x56555a4a06f8 <linenoise.c:498:39> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
hintlen
   4: BinaryOperator 0x56555a4a0760 <linenoise.c:498:39, col:49> 'int' '='
|-DeclRefExpr 0x56555a4a06f8 <col:39> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
`-ImplicitCastExpr 0x56555a4a0748 <col:49> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a0720 <col:49> 'int' lvalue Var 0x56555a4a03b8 'hintmaxlen' 'int'
[B13.3] = [B13.2]
   Preds (1): B14
   Succs (1): B12

 [B14]
   1: DeclRefExpr 0x56555a4a0290 <linenoise.c:496:27> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
strlen
   2: ImplicitCastExpr 0x56555a4a02f8 <linenoise.c:496:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56555a4a0290 <col:27> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
[B14.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long (*)(const char *))
   3: DeclRefExpr 0x56555a4a02b8 <linenoise.c:496:34> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
hint
   4: ImplicitCastExpr 0x56555a4a0340 <linenoise.c:496:34> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a02b8 <col:34> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B14.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: ImplicitCastExpr 0x56555a4a0358 <linenoise.c:496:34> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4a0340 <col:34> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a02b8 <col:34> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B14.4] (ImplicitCastExpr, BitCast, const char *)
   6: CallExpr 0x56555a4a0310 <linenoise.c:496:27, col:38> 'unsigned long'
|-ImplicitCastExpr 0x56555a4a02f8 <col:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56555a4a0290 <col:27> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
`-ImplicitCastExpr 0x56555a4a0358 <col:34> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x56555a4a0340 <col:34> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x56555a4a02b8 <col:34> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B14.2]([B14.5])
   7: ImplicitCastExpr 0x56555a4a0370 <linenoise.c:496:27, col:38> 'int' <IntegralCast>
`-CallExpr 0x56555a4a0310 <col:27, col:38> 'unsigned long'
  |-ImplicitCastExpr 0x56555a4a02f8 <col:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56555a4a0290 <col:27> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
  `-ImplicitCastExpr 0x56555a4a0358 <col:34> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x56555a4a0340 <col:34> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x56555a4a02b8 <col:34> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B14.6] (ImplicitCastExpr, IntegralCast, int)
   8: DeclStmt 0x56555a4a0388 <linenoise.c:496:13, col:39>col:17
`-VarDecl 0x56555a4a0230 <col:13, col:38> col:17 used hintlen 'int' cinit
  `-ImplicitCastExpr 0x56555a4a0370 <col:27, col:38> 'int' <IntegralCast>
    `-CallExpr 0x56555a4a0310 <col:27, col:38> 'unsigned long'
      |-ImplicitCastExpr 0x56555a4a02f8 <col:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x56555a4a0290 <col:27> 'unsigned long (const char *)' Function 0x56555a4340e8 'strlen' 'unsigned long (const char *)'
      `-ImplicitCastExpr 0x56555a4a0358 <col:34> 'const char *' <BitCast>
        `-ImplicitCastExpr 0x56555a4a0340 <col:34> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x56555a4a02b8 <col:34> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
int hintlen = strlen(hint);
   9: DeclRefExpr 0x56555a4a0418 <linenoise.c:497:30> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
l
  10: ImplicitCastExpr 0x56555a4a0440 <linenoise.c:497:30> 'struct linenoiseState *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0418 <col:30> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.9] (ImplicitCastExpr, LValueToRValue, struct linenoiseState *)
  11: MemberExpr 0x56555a4a0458 <linenoise.c:497:30, col:33> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
`-ImplicitCastExpr 0x56555a4a0440 <col:30> 'struct linenoiseState *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a0418 <col:30> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.10]->cols
  12: ImplicitCastExpr 0x56555a4a05e0 <linenoise.c:497:30, col:33> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x56555a4a0458 <col:30, col:33> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
  `-ImplicitCastExpr 0x56555a4a0440 <col:30> 'struct linenoiseState *' <LValueToRValue>
    `-DeclRefExpr 0x56555a4a0418 <col:30> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.11] (ImplicitCastExpr, LValueToRValue, size_t)
  13: DeclRefExpr 0x56555a4a0490 <linenoise.c:497:39> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
plen
  14: ImplicitCastExpr 0x56555a4a0530 <linenoise.c:497:39> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0490 <col:39> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
[B14.13] (ImplicitCastExpr, LValueToRValue, int)
  15: ImplicitCastExpr 0x56555a4a0580 <linenoise.c:497:39> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x56555a4a0530 <col:39> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a0490 <col:39> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
[B14.14] (ImplicitCastExpr, IntegralCast, unsigned long)
  16: DeclRefExpr 0x56555a4a04b8 <linenoise.c:497:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
l
  17: ImplicitCastExpr 0x56555a4a04e0 <linenoise.c:497:44> 'struct linenoiseState *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a04b8 <col:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.16] (ImplicitCastExpr, LValueToRValue, struct linenoiseState *)
  18: MemberExpr 0x56555a4a04f8 <linenoise.c:497:44, col:47> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
`-ImplicitCastExpr 0x56555a4a04e0 <col:44> 'struct linenoiseState *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a04b8 <col:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.17]->len
  19: ImplicitCastExpr 0x56555a4a0548 <linenoise.c:497:44, col:47> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x56555a4a04f8 <col:44, col:47> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
  `-ImplicitCastExpr 0x56555a4a04e0 <col:44> 'struct linenoiseState *' <LValueToRValue>
    `-DeclRefExpr 0x56555a4a04b8 <col:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.18] (ImplicitCastExpr, LValueToRValue, size_t)
  20: BinaryOperator 0x56555a4a0598 <linenoise.c:497:39, col:47> 'unsigned long' '+'
|-ImplicitCastExpr 0x56555a4a0580 <col:39> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x56555a4a0530 <col:39> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x56555a4a0490 <col:39> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
`-ImplicitCastExpr 0x56555a4a0548 <col:44, col:47> 'size_t':'unsigned long' <LValueToRValue>
  `-MemberExpr 0x56555a4a04f8 <col:44, col:47> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
    `-ImplicitCastExpr 0x56555a4a04e0 <col:44> 'struct linenoiseState *' <LValueToRValue>
      `-DeclRefExpr 0x56555a4a04b8 <col:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.15] + [B14.19]
  21: BinaryOperator 0x56555a4a05f8 <linenoise.c:497:30, col:50> 'unsigned long' '-'
|-ImplicitCastExpr 0x56555a4a05e0 <col:30, col:33> 'size_t':'unsigned long' <LValueToRValue>
| `-MemberExpr 0x56555a4a0458 <col:30, col:33> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
|   `-ImplicitCastExpr 0x56555a4a0440 <col:30> 'struct linenoiseState *' <LValueToRValue>
|     `-DeclRefExpr 0x56555a4a0418 <col:30> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
`-ParenExpr 0x56555a4a05c0 <col:38, col:50> 'unsigned long'
  `-BinaryOperator 0x56555a4a0598 <col:39, col:47> 'unsigned long' '+'
    |-ImplicitCastExpr 0x56555a4a0580 <col:39> 'unsigned long' <IntegralCast>
    | `-ImplicitCastExpr 0x56555a4a0530 <col:39> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56555a4a0490 <col:39> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
    `-ImplicitCastExpr 0x56555a4a0548 <col:44, col:47> 'size_t':'unsigned long' <LValueToRValue>
      `-MemberExpr 0x56555a4a04f8 <col:44, col:47> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
        `-ImplicitCastExpr 0x56555a4a04e0 <col:44> 'struct linenoiseState *' <LValueToRValue>
          `-DeclRefExpr 0x56555a4a04b8 <col:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.12] - ([B14.20])
  22: ImplicitCastExpr 0x56555a4a0620 <linenoise.c:497:30, col:50> 'int' <IntegralCast>
`-BinaryOperator 0x56555a4a05f8 <col:30, col:50> 'unsigned long' '-'
  |-ImplicitCastExpr 0x56555a4a05e0 <col:30, col:33> 'size_t':'unsigned long' <LValueToRValue>
  | `-MemberExpr 0x56555a4a0458 <col:30, col:33> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
  |   `-ImplicitCastExpr 0x56555a4a0440 <col:30> 'struct linenoiseState *' <LValueToRValue>
  |     `-DeclRefExpr 0x56555a4a0418 <col:30> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
  `-ParenExpr 0x56555a4a05c0 <col:38, col:50> 'unsigned long'
    `-BinaryOperator 0x56555a4a0598 <col:39, col:47> 'unsigned long' '+'
      |-ImplicitCastExpr 0x56555a4a0580 <col:39> 'unsigned long' <IntegralCast>
      | `-ImplicitCastExpr 0x56555a4a0530 <col:39> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x56555a4a0490 <col:39> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
      `-ImplicitCastExpr 0x56555a4a0548 <col:44, col:47> 'size_t':'unsigned long' <LValueToRValue>
        `-MemberExpr 0x56555a4a04f8 <col:44, col:47> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
          `-ImplicitCastExpr 0x56555a4a04e0 <col:44> 'struct linenoiseState *' <LValueToRValue>
            `-DeclRefExpr 0x56555a4a04b8 <col:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B14.21] (ImplicitCastExpr, IntegralCast, int)
  23: DeclStmt 0x56555a4a0638 <linenoise.c:497:13, col:51>col:17
`-VarDecl 0x56555a4a03b8 <col:13, col:50> col:17 used hintmaxlen 'int' cinit
  `-ImplicitCastExpr 0x56555a4a0620 <col:30, col:50> 'int' <IntegralCast>
    `-BinaryOperator 0x56555a4a05f8 <col:30, col:50> 'unsigned long' '-'
      |-ImplicitCastExpr 0x56555a4a05e0 <col:30, col:33> 'size_t':'unsigned long' <LValueToRValue>
      | `-MemberExpr 0x56555a4a0458 <col:30, col:33> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
      |   `-ImplicitCastExpr 0x56555a4a0440 <col:30> 'struct linenoiseState *' <LValueToRValue>
      |     `-DeclRefExpr 0x56555a4a0418 <col:30> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
      `-ParenExpr 0x56555a4a05c0 <col:38, col:50> 'unsigned long'
        `-BinaryOperator 0x56555a4a0598 <col:39, col:47> 'unsigned long' '+'
          |-ImplicitCastExpr 0x56555a4a0580 <col:39> 'unsigned long' <IntegralCast>
          | `-ImplicitCastExpr 0x56555a4a0530 <col:39> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x56555a4a0490 <col:39> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
          `-ImplicitCastExpr 0x56555a4a0548 <col:44, col:47> 'size_t':'unsigned long' <LValueToRValue>
            `-MemberExpr 0x56555a4a04f8 <col:44, col:47> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
              `-ImplicitCastExpr 0x56555a4a04e0 <col:44> 'struct linenoiseState *' <LValueToRValue>
                `-DeclRefExpr 0x56555a4a04b8 <col:44> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
int hintmaxlen = l->cols - (plen + l->len);
  24: DeclRefExpr 0x56555a4a0650 <linenoise.c:498:17> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
hintlen
  25: ImplicitCastExpr 0x56555a4a06a0 <linenoise.c:498:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0650 <col:17> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
[B14.24] (ImplicitCastExpr, LValueToRValue, int)
  26: DeclRefExpr 0x56555a4a0678 <linenoise.c:498:27> 'int' lvalue Var 0x56555a4a03b8 'hintmaxlen' 'int'
hintmaxlen
  27: ImplicitCastExpr 0x56555a4a06b8 <linenoise.c:498:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0678 <col:27> 'int' lvalue Var 0x56555a4a03b8 'hintmaxlen' 'int'
[B14.26] (ImplicitCastExpr, LValueToRValue, int)
  28: BinaryOperator 0x56555a4a06d0 <linenoise.c:498:17, col:27> 'int' '>'
|-ImplicitCastExpr 0x56555a4a06a0 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a0650 <col:17> 'int' lvalue Var 0x56555a4a0230 'hintlen' 'int'
`-ImplicitCastExpr 0x56555a4a06b8 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a0678 <col:27> 'int' lvalue Var 0x56555a4a03b8 'hintmaxlen' 'int'
[B14.25] > [B14.27]
   T: if [B14.28]
   Preds (1): B15
   Succs (2): B13 B12

 [B15]
   1: IntegerLiteral 0x56555a49fe88 <linenoise.c:493:22> 'int' 1
1
   2: UnaryOperator 0x56555a49fea8 <linenoise.c:493:21, col:22> 'int' prefix '-'
`-IntegerLiteral 0x56555a49fe88 <col:22> 'int' 1
-[B15.1]
   3: DeclStmt 0x56555a4ced00 <linenoise.c:493:13, col:22>col:13
`-VarDecl 0x56555a49fe28 <col:9, col:22> col:13 used color 'int' cinit
  `-UnaryOperator 0x56555a49fea8 <col:21, col:22> 'int' prefix '-'
    `-IntegerLiteral 0x56555a49fe88 <col:22> 'int' 1
int color = -1;
   4: IntegerLiteral 0x56555a49ff40 <linenoise.c:493:32> 'int' 0
0
   5: DeclStmt 0x56555a4c9e68 <linenoise.c:493:25, col:32>col:25
`-VarDecl 0x56555a49fee0 <col:9, col:32> col:25 used bold 'int' cinit
  `-IntegerLiteral 0x56555a49ff40 <col:32> 'int' 0
int bold = 0;
   6: DeclRefExpr 0x56555a4a0008 <linenoise.c:494:22> 'linenoiseHintsCallback *' lvalue Var 0x56555a48d5c0 'hintsCallback' 'linenoiseHintsCallback *'
hintsCallback
   7: ImplicitCastExpr 0x56555a4a0138 <linenoise.c:494:22> 'linenoiseHintsCallback *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0008 <col:22> 'linenoiseHintsCallback *' lvalue Var 0x56555a48d5c0 'hintsCallback' 'linenoiseHintsCallback *'
[B15.6] (ImplicitCastExpr, LValueToRValue, linenoiseHintsCallback *)
   8: DeclRefExpr 0x56555a4a0030 <linenoise.c:494:36> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
l
   9: ImplicitCastExpr 0x56555a4a0058 <linenoise.c:494:36> 'struct linenoiseState *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a0030 <col:36> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B15.8] (ImplicitCastExpr, LValueToRValue, struct linenoiseState *)
  10: MemberExpr 0x56555a4a0070 <linenoise.c:494:36, col:39> 'char *' lvalue ->buf 0x56555a48ff08
`-ImplicitCastExpr 0x56555a4a0058 <col:36> 'struct linenoiseState *' <LValueToRValue>
  `-DeclRefExpr 0x56555a4a0030 <col:36> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B15.9]->buf
  11: ImplicitCastExpr 0x56555a4a0190 <linenoise.c:494:36, col:39> 'char *' <LValueToRValue>
`-MemberExpr 0x56555a4a0070 <col:36, col:39> 'char *' lvalue ->buf 0x56555a48ff08
  `-ImplicitCastExpr 0x56555a4a0058 <col:36> 'struct linenoiseState *' <LValueToRValue>
    `-DeclRefExpr 0x56555a4a0030 <col:36> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B15.10] (ImplicitCastExpr, LValueToRValue, char *)
  12: ImplicitCastExpr 0x56555a4a01a8 <linenoise.c:494:36, col:39> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56555a4a0190 <col:36, col:39> 'char *' <LValueToRValue>
  `-MemberExpr 0x56555a4a0070 <col:36, col:39> 'char *' lvalue ->buf 0x56555a48ff08
    `-ImplicitCastExpr 0x56555a4a0058 <col:36> 'struct linenoiseState *' <LValueToRValue>
      `-DeclRefExpr 0x56555a4a0030 <col:36> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B15.11] (ImplicitCastExpr, BitCast, const char *)
  13: DeclRefExpr 0x56555a4a00a8 <linenoise.c:494:44> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
color
  14: UnaryOperator 0x56555a4a00d0 <linenoise.c:494:43, col:44> 'int *' prefix '&'
`-DeclRefExpr 0x56555a4a00a8 <col:44> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
&[B15.13]
  15: DeclRefExpr 0x56555a4a00f0 <linenoise.c:494:51> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
bold
  16: UnaryOperator 0x56555a4a0118 <linenoise.c:494:50, col:51> 'int *' prefix '&'
`-DeclRefExpr 0x56555a4a00f0 <col:51> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
&[B15.15]
  17: CallExpr 0x56555a4a0150 <linenoise.c:494:22, col:55> 'char *'
|-ImplicitCastExpr 0x56555a4a0138 <col:22> 'linenoiseHintsCallback *' <LValueToRValue>
| `-DeclRefExpr 0x56555a4a0008 <col:22> 'linenoiseHintsCallback *' lvalue Var 0x56555a48d5c0 'hintsCallback' 'linenoiseHintsCallback *'
|-ImplicitCastExpr 0x56555a4a01a8 <col:36, col:39> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x56555a4a0190 <col:36, col:39> 'char *' <LValueToRValue>
|   `-MemberExpr 0x56555a4a0070 <col:36, col:39> 'char *' lvalue ->buf 0x56555a48ff08
|     `-ImplicitCastExpr 0x56555a4a0058 <col:36> 'struct linenoiseState *' <LValueToRValue>
|       `-DeclRefExpr 0x56555a4a0030 <col:36> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
|-UnaryOperator 0x56555a4a00d0 <col:43, col:44> 'int *' prefix '&'
| `-DeclRefExpr 0x56555a4a00a8 <col:44> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
`-UnaryOperator 0x56555a4a0118 <col:50, col:51> 'int *' prefix '&'
  `-DeclRefExpr 0x56555a4a00f0 <col:51> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
[B15.7]([B15.12], [B15.14], [B15.16])
  18: DeclStmt 0x56555a4a01c0 <linenoise.c:494:9, col:56>col:15
`-VarDecl 0x56555a49ffa8 <col:9, col:55> col:15 used hint 'char *' cinit
  `-CallExpr 0x56555a4a0150 <col:22, col:55> 'char *'
    |-ImplicitCastExpr 0x56555a4a0138 <col:22> 'linenoiseHintsCallback *' <LValueToRValue>
    | `-DeclRefExpr 0x56555a4a0008 <col:22> 'linenoiseHintsCallback *' lvalue Var 0x56555a48d5c0 'hintsCallback' 'linenoiseHintsCallback *'
    |-ImplicitCastExpr 0x56555a4a01a8 <col:36, col:39> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x56555a4a0190 <col:36, col:39> 'char *' <LValueToRValue>
    |   `-MemberExpr 0x56555a4a0070 <col:36, col:39> 'char *' lvalue ->buf 0x56555a48ff08
    |     `-ImplicitCastExpr 0x56555a4a0058 <col:36> 'struct linenoiseState *' <LValueToRValue>
    |       `-DeclRefExpr 0x56555a4a0030 <col:36> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
    |-UnaryOperator 0x56555a4a00d0 <col:43, col:44> 'int *' prefix '&'
    | `-DeclRefExpr 0x56555a4a00a8 <col:44> 'int' lvalue Var 0x56555a49fe28 'color' 'int'
    `-UnaryOperator 0x56555a4a0118 <col:50, col:51> 'int *' prefix '&'
      `-DeclRefExpr 0x56555a4a00f0 <col:51> 'int' lvalue Var 0x56555a49fee0 'bold' 'int'
char *hint = hintsCallback(l->buf, &color, &bold);
  19: DeclRefExpr 0x56555a4a01d8 <linenoise.c:495:13> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
hint
  20: ImplicitCastExpr 0x56555a4a0200 <linenoise.c:495:13> 'char *' <LValueToRValue>
`-DeclRefExpr 0x56555a4a01d8 <col:13> 'char *' lvalue Var 0x56555a49ffa8 'hint' 'char *'
[B15.19] (ImplicitCastExpr, LValueToRValue, char *)
   T: if [B15.20]
   Preds (1): B16
   Succs (2): B14 B0

 [B16]
   1: DeclRefExpr 0x56555a49fc08 <linenoise.c:492:26> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
plen
   2: ImplicitCastExpr 0x56555a49fca8 <linenoise.c:492:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x56555a49fc08 <col:26> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
[B16.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ImplicitCastExpr 0x56555a49fcd8 <linenoise.c:492:26> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x56555a49fca8 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56555a49fc08 <col:26> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
[B16.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: DeclRefExpr 0x56555a49fc30 <linenoise.c:492:31> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
l
   5: ImplicitCastExpr 0x56555a49fc58 <linenoise.c:492:31> 'struct linenoiseState *' <LValueToRValue>
`-DeclRefExpr 0x56555a49fc30 <col:31> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.4] (ImplicitCastExpr, LValueToRValue, struct linenoiseState *)
   6: MemberExpr 0x56555a49fc70 <linenoise.c:492:31, col:34> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
`-ImplicitCastExpr 0x56555a49fc58 <col:31> 'struct linenoiseState *' <LValueToRValue>
  `-DeclRefExpr 0x56555a49fc30 <col:31> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.5]->len
   7: ImplicitCastExpr 0x56555a49fcc0 <linenoise.c:492:31, col:34> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x56555a49fc70 <col:31, col:34> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
  `-ImplicitCastExpr 0x56555a49fc58 <col:31> 'struct linenoiseState *' <LValueToRValue>
    `-DeclRefExpr 0x56555a49fc30 <col:31> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.6] (ImplicitCastExpr, LValueToRValue, size_t)
   8: BinaryOperator 0x56555a49fcf0 <linenoise.c:492:26, col:34> 'unsigned long' '+'
|-ImplicitCastExpr 0x56555a49fcd8 <col:26> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x56555a49fca8 <col:26> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x56555a49fc08 <col:26> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
`-ImplicitCastExpr 0x56555a49fcc0 <col:31, col:34> 'size_t':'unsigned long' <LValueToRValue>
  `-MemberExpr 0x56555a49fc70 <col:31, col:34> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
    `-ImplicitCastExpr 0x56555a49fc58 <col:31> 'struct linenoiseState *' <LValueToRValue>
      `-DeclRefExpr 0x56555a49fc30 <col:31> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.3] + [B16.7]
   9: DeclRefExpr 0x56555a49fd18 <linenoise.c:492:40> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
l
  10: ImplicitCastExpr 0x56555a49fd40 <linenoise.c:492:40> 'struct linenoiseState *' <LValueToRValue>
`-DeclRefExpr 0x56555a49fd18 <col:40> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.9] (ImplicitCastExpr, LValueToRValue, struct linenoiseState *)
  11: MemberExpr 0x56555a49fd58 <linenoise.c:492:40, col:43> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
`-ImplicitCastExpr 0x56555a49fd40 <col:40> 'struct linenoiseState *' <LValueToRValue>
  `-DeclRefExpr 0x56555a49fd18 <col:40> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.10]->cols
  12: ImplicitCastExpr 0x56555a49fd90 <linenoise.c:492:40, col:43> 'size_t':'unsigned long' <LValueToRValue>
`-MemberExpr 0x56555a49fd58 <col:40, col:43> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
  `-ImplicitCastExpr 0x56555a49fd40 <col:40> 'struct linenoiseState *' <LValueToRValue>
    `-DeclRefExpr 0x56555a49fd18 <col:40> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.11] (ImplicitCastExpr, LValueToRValue, size_t)
  13: BinaryOperator 0x56555a49fda8 <linenoise.c:492:26, col:43> 'int' '<'
|-BinaryOperator 0x56555a49fcf0 <col:26, col:34> 'unsigned long' '+'
| |-ImplicitCastExpr 0x56555a49fcd8 <col:26> 'unsigned long' <IntegralCast>
| | `-ImplicitCastExpr 0x56555a49fca8 <col:26> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x56555a49fc08 <col:26> 'int' lvalue ParmVar 0x56555a49f8f8 'plen' 'int'
| `-ImplicitCastExpr 0x56555a49fcc0 <col:31, col:34> 'size_t':'unsigned long' <LValueToRValue>
|   `-MemberExpr 0x56555a49fc70 <col:31, col:34> 'size_t':'unsigned long' lvalue ->len 0x56555a490120
|     `-ImplicitCastExpr 0x56555a49fc58 <col:31> 'struct linenoiseState *' <LValueToRValue>
|       `-DeclRefExpr 0x56555a49fc30 <col:31> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
`-ImplicitCastExpr 0x56555a49fd90 <col:40, col:43> 'size_t':'unsigned long' <LValueToRValue>
  `-MemberExpr 0x56555a49fd58 <col:40, col:43> 'size_t':'unsigned long' lvalue ->cols 0x56555a490178
    `-ImplicitCastExpr 0x56555a49fd40 <col:40> 'struct linenoiseState *' <LValueToRValue>
      `-DeclRefExpr 0x56555a49fd18 <col:40> 'struct linenoiseState *' lvalue ParmVar 0x56555a49f880 'l' 'struct linenoiseState *'
[B16.8] < [B16.12]
   T: if [B17.3] && [B16.13]
   Preds (1): B17
   Succs (2): B15 B0

 [B17]
   1: DeclStmt 0x56555a49fbc8 <linenoise.c:491:5, col:17>col:10
`-VarDecl 0x56555a49fb68 <col:5, col:16> col:10 used seq 'char [64]'
char seq[64];
   2: DeclRefExpr 0x56555a49fbe0 <linenoise.c:492:9> 'linenoiseHintsCallback *' lvalue Var 0x56555a48d5c0 'hintsCallback' 'linenoiseHintsCallback *'
hintsCallback
   3: ImplicitCastExpr 0x56555a49fdd0 <linenoise.c:492:9> 'linenoiseHintsCallback *' <LValueToRValue>
`-DeclRefExpr 0x56555a49fbe0 <col:9> 'linenoiseHintsCallback *' lvalue Var 0x56555a48d5c0 'hintsCallback' 'linenoiseHintsCallback *'
[B17.2] (ImplicitCastExpr, LValueToRValue, linenoiseHintsCallback *)
   T: [B17.3] && ...
   Preds (1): B18
   Succs (2): B16 B0

 [B0 (EXIT)]
   Preds (5): B1 B2 B15 B16 B17
