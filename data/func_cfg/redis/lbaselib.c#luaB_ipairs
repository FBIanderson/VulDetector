static int luaB_ipairs(lua_State *L)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x562da281b6a8 <lbaselib.c:258:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x562da2803548 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
luaL_checktype
   2: ImplicitCastExpr 0x562da281b738 <lbaselib.c:258:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281b6a8 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x562da2803548 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
   3: DeclRefExpr 0x562da281b6d0 <lbaselib.c:258:18> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da281b790 <lbaselib.c:258:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281b6d0 <col:18> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x562da281b6f8 <lbaselib.c:258:21> 'int' 1
1
   6: IntegerLiteral 0x562da281b718 <./lua.h:79:21> 'int' 5
5
   7: CallExpr 0x562da281b750 <lbaselib.c:258:3, col:34> 'void'
|-ImplicitCastExpr 0x562da281b738 <col:3> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281b6a8 <col:3> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x562da2803548 'luaL_checktype' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x562da281b790 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281b6d0 <col:18> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
|-IntegerLiteral 0x562da281b6f8 <col:21> 'int' 1
`-IntegerLiteral 0x562da281b718 <./lua.h:79:21> 'int' 5
[B1.2]([B1.4], [B1.5], [B1.6])
   8: DeclRefExpr 0x562da281b7a8 <lbaselib.c:259:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
   9: ImplicitCastExpr 0x562da281b8e0 <lbaselib.c:259:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281b7a8 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  10: DeclRefExpr 0x562da281b7d0 <lbaselib.c:259:17> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x562da281b930 <lbaselib.c:259:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281b7d0 <col:17> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x562da281b7f8 <./lua.h:38:28> 'int' 10002
10002
  13: UnaryOperator 0x562da281b818 <./lua.h:38:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x562da281b7f8 <col:28> 'int' 10002
-[B1.12]
  14: IntegerLiteral 0x562da281b858 <lbaselib.c:259:37> 'int' 1
1
  15: BinaryOperator 0x562da281b898 <./lua.h:38:26, line:39:49> 'int' '-'
|-ParenExpr 0x562da281b838 <line:38:26, col:33> 'int'
| `-UnaryOperator 0x562da281b818 <col:27, col:28> 'int' prefix '-'
|   `-IntegerLiteral 0x562da281b7f8 <col:28> 'int' 10002
`-ParenExpr 0x562da281b878 <line:39:47, col:49> 'int'
  `-IntegerLiteral 0x562da281b858 <lbaselib.c:259:37> 'int' 1
([B1.13]) - ([B1.14])
  16: CallExpr 0x562da281b8f8 <lbaselib.c:259:3, col:39> 'void'
|-ImplicitCastExpr 0x562da281b8e0 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281b7a8 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da281b930 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281b7d0 <col:17> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
`-ParenExpr 0x562da281b8c0 <./lua.h:39:29, col:50> 'int'
  `-BinaryOperator 0x562da281b898 <line:38:26, line:39:49> 'int' '-'
    |-ParenExpr 0x562da281b838 <line:38:26, col:33> 'int'
    | `-UnaryOperator 0x562da281b818 <col:27, col:28> 'int' prefix '-'
    |   `-IntegerLiteral 0x562da281b7f8 <col:28> 'int' 10002
    `-ParenExpr 0x562da281b878 <line:39:47, col:49> 'int'
      `-IntegerLiteral 0x562da281b858 <lbaselib.c:259:37> 'int' 1
[B1.9]([B1.11], ([B1.15]))
  17: DeclRefExpr 0x562da281b948 <lbaselib.c:260:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
  18: ImplicitCastExpr 0x562da281b9b8 <lbaselib.c:260:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281b948 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.17] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  19: DeclRefExpr 0x562da281b970 <lbaselib.c:260:17> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
L
  20: ImplicitCastExpr 0x562da281ba08 <lbaselib.c:260:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281b970 <col:17> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
[B1.19] (ImplicitCastExpr, LValueToRValue, lua_State *)
  21: IntegerLiteral 0x562da281b998 <lbaselib.c:260:20> 'int' 1
1
  22: CallExpr 0x562da281b9d0 <lbaselib.c:260:3, col:21> 'void'
|-ImplicitCastExpr 0x562da281b9b8 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281b948 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x562da27ebec0 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x562da281ba08 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281b970 <col:17> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
`-IntegerLiteral 0x562da281b998 <col:20> 'int' 1
[B1.18]([B1.20], [B1.21])
  23: DeclRefExpr 0x562da281ba20 <lbaselib.c:261:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x562da27f0210 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
  24: ImplicitCastExpr 0x562da281ba90 <lbaselib.c:261:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da281ba20 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x562da27f0210 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B1.23] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
  25: DeclRefExpr 0x562da281ba48 <lbaselib.c:261:19> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
L
  26: ImplicitCastExpr 0x562da281bae0 <lbaselib.c:261:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da281ba48 <col:19> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
[B1.25] (ImplicitCastExpr, LValueToRValue, lua_State *)
  27: IntegerLiteral 0x562da281ba70 <lbaselib.c:261:22> 'int' 0
0
  28: ImplicitCastExpr 0x562da281baf8 <lbaselib.c:261:22> 'lua_Integer':'long' <IntegralCast>
`-IntegerLiteral 0x562da281ba70 <col:22> 'int' 0
[B1.27] (ImplicitCastExpr, IntegralCast, lua_Integer)
  29: CallExpr 0x562da281baa8 <lbaselib.c:261:3, col:23> 'void'
|-ImplicitCastExpr 0x562da281ba90 <col:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da281ba20 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x562da27f0210 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x562da281bae0 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da281ba48 <col:19> 'lua_State *' lvalue ParmVar 0x562da281b570 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da281baf8 <col:22> 'lua_Integer':'long' <IntegralCast>
  `-IntegerLiteral 0x562da281ba70 <col:22> 'int' 0
[B1.24]([B1.26], [B1.28])
  30: IntegerLiteral 0x562da281bb10 <lbaselib.c:262:10> 'int' 3
3
  31: ReturnStmt 0x562da281bb30 <lbaselib.c:262:3, col:10>
`-IntegerLiteral 0x562da281bb10 <col:10> 'int' 3
return [B1.30];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
