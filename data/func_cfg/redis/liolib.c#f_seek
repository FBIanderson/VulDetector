static int f_seek(lua_State *L)
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: DeclRefExpr 0x5643dfe72a80 <liolib.c:452:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5643dfe3a4a0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x5643dfe72bd8 <liolib.c:452:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe72a80 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5643dfe3a4a0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x5643dfe72aa8 <liolib.c:452:21> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5643dfe72c28 <liolib.c:452:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe72aa8 <col:21> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5643dfe72ad0 <liolib.c:452:24> 'long (FILE *)' Function 0x5643dfd91308 'ftell' 'long (FILE *)'
ftell
   6: ImplicitCastExpr 0x5643dfe72b78 <liolib.c:452:24> 'long (*)(FILE *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe72ad0 <col:24> 'long (FILE *)' Function 0x5643dfd91308 'ftell' 'long (FILE *)'
[B1.5] (ImplicitCastExpr, FunctionToPointerDecay, long (*)(FILE *))
   7: DeclRefExpr 0x5643dfe72af8 <liolib.c:452:30> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
f
   8: ImplicitCastExpr 0x5643dfe72bc0 <liolib.c:452:30> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe72af8 <col:30> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
[B1.7] (ImplicitCastExpr, LValueToRValue, FILE *)
   9: CallExpr 0x5643dfe72b90 <liolib.c:452:24, col:31> 'long'
|-ImplicitCastExpr 0x5643dfe72b78 <col:24> 'long (*)(FILE *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe72ad0 <col:24> 'long (FILE *)' Function 0x5643dfd91308 'ftell' 'long (FILE *)'
`-ImplicitCastExpr 0x5643dfe72bc0 <col:30> 'FILE *' <LValueToRValue>
  `-DeclRefExpr 0x5643dfe72af8 <col:30> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
[B1.6]([B1.8])
  10: CallExpr 0x5643dfe72bf0 <liolib.c:452:5, col:32> 'void'
|-ImplicitCastExpr 0x5643dfe72bd8 <col:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe72a80 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x5643dfe3a4a0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x5643dfe72c28 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe72aa8 <col:21> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
`-CallExpr 0x5643dfe72b90 <col:24, col:31> 'long'
  |-ImplicitCastExpr 0x5643dfe72b78 <col:24> 'long (*)(FILE *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5643dfe72ad0 <col:24> 'long (FILE *)' Function 0x5643dfd91308 'ftell' 'long (FILE *)'
  `-ImplicitCastExpr 0x5643dfe72bc0 <col:30> 'FILE *' <LValueToRValue>
    `-DeclRefExpr 0x5643dfe72af8 <col:30> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
[B1.2]([B1.4], [B1.9])
  11: IntegerLiteral 0x5643dfe72c40 <liolib.c:453:12> 'int' 1
1
  12: ReturnStmt 0x5643dfe72c60 <liolib.c:453:5, col:12>
`-IntegerLiteral 0x5643dfe72c40 <col:12> 'int' 1
return [B1.11];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5643dfe728f0 <liolib.c:450:12> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
pushresult
   2: ImplicitCastExpr 0x5643dfe729e0 <liolib.c:450:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe728f0 <col:12> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x5643dfe72918 <liolib.c:450:23> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5643dfe72a38 <liolib.c:450:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe72918 <col:23> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5643dfe72940 <liolib.c:450:26> 'int' 0
0
   6: IntegerLiteral 0x5643dfe72960 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x5643dfe72998 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5643dfe72960 <col:24> 'int' 0
(void *)[B2.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x5643dfe72a50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x5643dfe729c0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5643dfe72998 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5643dfe72960 <col:24> 'int' 0
([B2.7]) (ImplicitCastExpr, NullToPointer, const char *)
   9: CallExpr 0x5643dfe729f8 <liolib.c:450:12, col:33> 'int'
|-ImplicitCastExpr 0x5643dfe729e0 <col:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe728f0 <col:12> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x5643dfe72a38 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe72918 <col:23> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
|-IntegerLiteral 0x5643dfe72940 <col:26> 'int' 0
`-ImplicitCastExpr 0x5643dfe72a50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x5643dfe729c0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5643dfe72998 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5643dfe72960 <col:24> 'int' 0
[B2.2]([B2.4], [B2.5], [B2.8])
  10: ReturnStmt 0x5643dfe72a68 <liolib.c:450:5, col:33>
`-CallExpr 0x5643dfe729f8 <col:12, col:33> 'int'
  |-ImplicitCastExpr 0x5643dfe729e0 <col:12> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5643dfe728f0 <col:12> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x5643dfe72a38 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5643dfe72918 <col:23> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
  |-IntegerLiteral 0x5643dfe72940 <col:26> 'int' 0
  `-ImplicitCastExpr 0x5643dfe72a50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
    `-ParenExpr 0x5643dfe729c0 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x5643dfe72998 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x5643dfe72960 <col:24> 'int' 0
return [B2.9];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5643dfe72060 <liolib.c:445:13> 'FILE *(lua_State *)' Function 0x5643dfe5c1e0 'tofile' 'FILE *(lua_State *)'
tofile
   2: ImplicitCastExpr 0x5643dfe720b0 <liolib.c:445:13> 'FILE *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe72060 <col:13> 'FILE *(lua_State *)' Function 0x5643dfe5c1e0 'tofile' 'FILE *(lua_State *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, FILE *(*)(lua_State *))
   3: DeclRefExpr 0x5643dfe72088 <liolib.c:445:20> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5643dfe720f8 <liolib.c:445:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe72088 <col:20> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x5643dfe720c8 <liolib.c:445:13, col:21> 'FILE *'
|-ImplicitCastExpr 0x5643dfe720b0 <col:13> 'FILE *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe72060 <col:13> 'FILE *(lua_State *)' Function 0x5643dfe5c1e0 'tofile' 'FILE *(lua_State *)'
`-ImplicitCastExpr 0x5643dfe720f8 <col:20> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5643dfe72088 <col:20> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
[B3.2]([B3.4])
   6: DeclStmt 0x5643dfe72110 <liolib.c:445:3, col:22>col:9
`-VarDecl 0x5643dfe72000 <col:3, col:21> col:9 used f 'FILE *' cinit
  `-CallExpr 0x5643dfe720c8 <col:13, col:21> 'FILE *'
    |-ImplicitCastExpr 0x5643dfe720b0 <col:13> 'FILE *(*)(lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5643dfe72060 <col:13> 'FILE *(lua_State *)' Function 0x5643dfe5c1e0 'tofile' 'FILE *(lua_State *)'
    `-ImplicitCastExpr 0x5643dfe720f8 <col:20> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5643dfe72088 <col:20> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
FILE *f = tofile(L);
   7: DeclRefExpr 0x5643dfe721a0 <liolib.c:446:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x5643dfe4ed88 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
luaL_checkoption
   8: ImplicitCastExpr 0x5643dfe722c8 <liolib.c:446:12> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe721a0 <col:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x5643dfe4ed88 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
[B3.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *, const char *const *))
   9: DeclRefExpr 0x5643dfe721c8 <liolib.c:446:29> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x5643dfe72328 <liolib.c:446:29> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe721c8 <col:29> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
[B3.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: IntegerLiteral 0x5643dfe721f0 <liolib.c:446:32> 'int' 2
2
  12: StringLiteral 0x5643dfe72210 <liolib.c:446:35> 'char [4]' lvalue "cur"
"cur"
  13: ImplicitCastExpr 0x5643dfe72340 <liolib.c:446:35> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5643dfe72210 <col:35> 'char [4]' lvalue "cur"
[B3.12] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  14: ImplicitCastExpr 0x5643dfe72358 <liolib.c:446:35> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5643dfe72340 <col:35> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5643dfe72210 <col:35> 'char [4]' lvalue "cur"
[B3.13] (ImplicitCastExpr, BitCast, const char *)
  15: DeclRefExpr 0x5643dfe72240 <liolib.c:446:42> 'const char *const [4]' lvalue Var 0x5643dfe71838 'modenames' 'const char *const [4]'
modenames
  16: ImplicitCastExpr 0x5643dfe72370 <liolib.c:446:42> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5643dfe72240 <col:42> 'const char *const [4]' lvalue Var 0x5643dfe71838 'modenames' 'const char *const [4]'
[B3.15] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
  17: CallExpr 0x5643dfe722e0 <liolib.c:446:12, col:51> 'int'
|-ImplicitCastExpr 0x5643dfe722c8 <col:12> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe721a0 <col:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x5643dfe4ed88 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
|-ImplicitCastExpr 0x5643dfe72328 <col:29> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe721c8 <col:29> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
|-IntegerLiteral 0x5643dfe721f0 <col:32> 'int' 2
|-ImplicitCastExpr 0x5643dfe72358 <col:35> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5643dfe72340 <col:35> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5643dfe72210 <col:35> 'char [4]' lvalue "cur"
`-ImplicitCastExpr 0x5643dfe72370 <col:42> 'const char *const *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x5643dfe72240 <col:42> 'const char *const [4]' lvalue Var 0x5643dfe71838 'modenames' 'const char *const [4]'
[B3.8]([B3.10], [B3.11], [B3.14], [B3.16])
  18: DeclStmt 0x5643dfe72388 <liolib.c:446:3, col:52>col:7
`-VarDecl 0x5643dfe72140 <col:3, col:51> col:7 used op 'int' cinit
  `-CallExpr 0x5643dfe722e0 <col:12, col:51> 'int'
    |-ImplicitCastExpr 0x5643dfe722c8 <col:12> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5643dfe721a0 <col:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x5643dfe4ed88 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
    |-ImplicitCastExpr 0x5643dfe72328 <col:29> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5643dfe721c8 <col:29> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
    |-IntegerLiteral 0x5643dfe721f0 <col:32> 'int' 2
    |-ImplicitCastExpr 0x5643dfe72358 <col:35> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x5643dfe72340 <col:35> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x5643dfe72210 <col:35> 'char [4]' lvalue "cur"
    `-ImplicitCastExpr 0x5643dfe72370 <col:42> 'const char *const *' <ArrayToPointerDecay>
      `-DeclRefExpr 0x5643dfe72240 <col:42> 'const char *const [4]' lvalue Var 0x5643dfe71838 'modenames' 'const char *const [4]'
int op = luaL_checkoption(L, 2, "cur", modenames);
  19: DeclRefExpr 0x5643dfe72418 <./lauxlib.h:107:36> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x5643dfe4d8a8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
luaL_optinteger
  20: ImplicitCastExpr 0x5643dfe72548 <./lauxlib.h:107:36> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe72418 <col:36> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x5643dfe4d8a8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
[B3.19] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int, lua_Integer))
  21: DeclRefExpr 0x5643dfe72440 <liolib.c:447:30> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
L
  22: ImplicitCastExpr 0x5643dfe725a0 <liolib.c:447:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe72440 <col:30> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
[B3.21] (ImplicitCastExpr, LValueToRValue, lua_State *)
  23: IntegerLiteral 0x5643dfe72468 <liolib.c:447:33> 'int' 3
3
  24: IntegerLiteral 0x5643dfe724a8 <liolib.c:447:36> 'int' 0
0
  25: ImplicitCastExpr 0x5643dfe725b8 <./lauxlib.h:107:60, col:62> 'lua_Integer':'long' <IntegralCast>
`-ParenExpr 0x5643dfe724c8 <col:60, col:62> 'int'
  `-IntegerLiteral 0x5643dfe724a8 <liolib.c:447:36> 'int' 0
([B3.24]) (ImplicitCastExpr, IntegralCast, lua_Integer)
  26: CallExpr 0x5643dfe72560 <./lauxlib.h:107:36, col:63> 'lua_Integer':'long'
|-ImplicitCastExpr 0x5643dfe72548 <col:36> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe72418 <col:36> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x5643dfe4d8a8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
|-ImplicitCastExpr 0x5643dfe725a0 <liolib.c:447:30> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe72440 <col:30> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
|-ParenExpr 0x5643dfe72488 <./lauxlib.h:107:55, col:57> 'int'
| `-IntegerLiteral 0x5643dfe72468 <liolib.c:447:33> 'int' 3
`-ImplicitCastExpr 0x5643dfe725b8 <./lauxlib.h:107:60, col:62> 'lua_Integer':'long' <IntegralCast>
  `-ParenExpr 0x5643dfe724c8 <col:60, col:62> 'int'
    `-IntegerLiteral 0x5643dfe724a8 <liolib.c:447:36> 'int' 0
[B3.20]([B3.22], ([B3.23]), [B3.25])
  27: CStyleCastExpr 0x5643dfe725e8 <./lauxlib.h:107:30, col:63> 'long' <NoOp>
`-CallExpr 0x5643dfe72560 <col:36, col:63> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x5643dfe72548 <col:36> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5643dfe72418 <col:36> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x5643dfe4d8a8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
  |-ImplicitCastExpr 0x5643dfe725a0 <liolib.c:447:30> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5643dfe72440 <col:30> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
  |-ParenExpr 0x5643dfe72488 <./lauxlib.h:107:55, col:57> 'int'
  | `-IntegerLiteral 0x5643dfe72468 <liolib.c:447:33> 'int' 3
  `-ImplicitCastExpr 0x5643dfe725b8 <./lauxlib.h:107:60, col:62> 'lua_Integer':'long' <IntegralCast>
    `-ParenExpr 0x5643dfe724c8 <col:60, col:62> 'int'
      `-IntegerLiteral 0x5643dfe724a8 <liolib.c:447:36> 'int' 0
(long)[B3.26] (CStyleCastExpr, NoOp, long)
  28: DeclStmt 0x5643dfe72630 <liolib.c:447:3, col:38>col:8
`-VarDecl 0x5643dfe723b8 <col:3, ./lauxlib.h:107:64> liolib.c:447:8 used offset 'long' cinit
  `-ParenExpr 0x5643dfe72610 <./lauxlib.h:107:29, col:64> 'long'
    `-CStyleCastExpr 0x5643dfe725e8 <col:30, col:63> 'long' <NoOp>
      `-CallExpr 0x5643dfe72560 <col:36, col:63> 'lua_Integer':'long'
        |-ImplicitCastExpr 0x5643dfe72548 <col:36> 'lua_Integer (*)(lua_State *, int, lua_Integer)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5643dfe72418 <col:36> 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)' Function 0x5643dfe4d8a8 'luaL_optinteger' 'lua_Integer (lua_State *, int, lua_Integer)':'lua_Integer (lua_State *, int, lua_Integer)'
        |-ImplicitCastExpr 0x5643dfe725a0 <liolib.c:447:30> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5643dfe72440 <col:30> 'lua_State *' lvalue ParmVar 0x5643dfe71430 'L' 'lua_State *'
        |-ParenExpr 0x5643dfe72488 <./lauxlib.h:107:55, col:57> 'int'
        | `-IntegerLiteral 0x5643dfe72468 <liolib.c:447:33> 'int' 3
        `-ImplicitCastExpr 0x5643dfe725b8 <./lauxlib.h:107:60, col:62> 'lua_Integer':'long' <IntegralCast>
          `-ParenExpr 0x5643dfe724c8 <col:60, col:62> 'int'
            `-IntegerLiteral 0x5643dfe724a8 <liolib.c:447:36> 'int' 0
long offset = ((long)luaL_optinteger(L, (3), (0)));
  29: DeclRefExpr 0x5643dfe72670 <liolib.c:448:8> 'int (FILE *, long, int)' Function 0x5643dfd91138 'fseek' 'int (FILE *, long, int)'
fseek
  30: ImplicitCastExpr 0x5643dfe727e8 <liolib.c:448:8> 'int (*)(FILE *, long, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe72670 <col:8> 'int (FILE *, long, int)' Function 0x5643dfd91138 'fseek' 'int (FILE *, long, int)'
[B3.29] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *, long, int))
  31: DeclRefExpr 0x5643dfe72698 <liolib.c:448:14> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
f
  32: ImplicitCastExpr 0x5643dfe72840 <liolib.c:448:14> 'FILE *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe72698 <col:14> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
[B3.31] (ImplicitCastExpr, LValueToRValue, FILE *)
  33: DeclRefExpr 0x5643dfe726c0 <liolib.c:448:17> 'long' lvalue Var 0x5643dfe723b8 'offset' 'long'
offset
  34: ImplicitCastExpr 0x5643dfe72858 <liolib.c:448:17> 'long' <LValueToRValue>
`-DeclRefExpr 0x5643dfe726c0 <col:17> 'long' lvalue Var 0x5643dfe723b8 'offset' 'long'
[B3.33] (ImplicitCastExpr, LValueToRValue, long)
  35: DeclRefExpr 0x5643dfe726e8 <liolib.c:448:25> 'const int [3]' lvalue Var 0x5643dfe715f0 'mode' 'const int [3]'
mode
  36: ImplicitCastExpr 0x5643dfe72738 <liolib.c:448:25> 'const int *' <ArrayToPointerDecay>
`-DeclRefExpr 0x5643dfe726e8 <col:25> 'const int [3]' lvalue Var 0x5643dfe715f0 'mode' 'const int [3]'
[B3.35] (ImplicitCastExpr, ArrayToPointerDecay, const int *)
  37: DeclRefExpr 0x5643dfe72710 <liolib.c:448:30> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
op
  38: ImplicitCastExpr 0x5643dfe72750 <liolib.c:448:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x5643dfe72710 <col:30> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
[B3.37] (ImplicitCastExpr, LValueToRValue, int)
  39: ArraySubscriptExpr 0x5643dfe72768 <liolib.c:448:25, col:32> 'const int' lvalue
|-ImplicitCastExpr 0x5643dfe72738 <col:25> 'const int *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x5643dfe726e8 <col:25> 'const int [3]' lvalue Var 0x5643dfe715f0 'mode' 'const int [3]'
`-ImplicitCastExpr 0x5643dfe72750 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5643dfe72710 <col:30> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
[B3.36][[B3.38]]
  40: ImplicitCastExpr 0x5643dfe72870 <liolib.c:448:25, col:32> 'int' <LValueToRValue>
`-ArraySubscriptExpr 0x5643dfe72768 <col:25, col:32> 'const int' lvalue
  |-ImplicitCastExpr 0x5643dfe72738 <col:25> 'const int *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x5643dfe726e8 <col:25> 'const int [3]' lvalue Var 0x5643dfe715f0 'mode' 'const int [3]'
  `-ImplicitCastExpr 0x5643dfe72750 <col:30> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5643dfe72710 <col:30> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
[B3.39] (ImplicitCastExpr, LValueToRValue, int)
  41: CallExpr 0x5643dfe72800 <liolib.c:448:8, col:33> 'int'
|-ImplicitCastExpr 0x5643dfe727e8 <col:8> 'int (*)(FILE *, long, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe72670 <col:8> 'int (FILE *, long, int)' Function 0x5643dfd91138 'fseek' 'int (FILE *, long, int)'
|-ImplicitCastExpr 0x5643dfe72840 <col:14> 'FILE *' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe72698 <col:14> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
|-ImplicitCastExpr 0x5643dfe72858 <col:17> 'long' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe726c0 <col:17> 'long' lvalue Var 0x5643dfe723b8 'offset' 'long'
`-ImplicitCastExpr 0x5643dfe72870 <col:25, col:32> 'int' <LValueToRValue>
  `-ArraySubscriptExpr 0x5643dfe72768 <col:25, col:32> 'const int' lvalue
    |-ImplicitCastExpr 0x5643dfe72738 <col:25> 'const int *' <ArrayToPointerDecay>
    | `-DeclRefExpr 0x5643dfe726e8 <col:25> 'const int [3]' lvalue Var 0x5643dfe715f0 'mode' 'const int [3]'
    `-ImplicitCastExpr 0x5643dfe72750 <col:30> 'int' <LValueToRValue>
      `-DeclRefExpr 0x5643dfe72710 <col:30> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
[B3.30]([B3.32], [B3.34], [B3.40])
  42: DeclRefExpr 0x5643dfe72648 <liolib.c:448:3> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
op
  43: BinaryOperator 0x5643dfe72888 <liolib.c:448:3, col:33> 'int' '='
|-DeclRefExpr 0x5643dfe72648 <col:3> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
`-CallExpr 0x5643dfe72800 <col:8, col:33> 'int'
  |-ImplicitCastExpr 0x5643dfe727e8 <col:8> 'int (*)(FILE *, long, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5643dfe72670 <col:8> 'int (FILE *, long, int)' Function 0x5643dfd91138 'fseek' 'int (FILE *, long, int)'
  |-ImplicitCastExpr 0x5643dfe72840 <col:14> 'FILE *' <LValueToRValue>
  | `-DeclRefExpr 0x5643dfe72698 <col:14> 'FILE *' lvalue Var 0x5643dfe72000 'f' 'FILE *'
  |-ImplicitCastExpr 0x5643dfe72858 <col:17> 'long' <LValueToRValue>
  | `-DeclRefExpr 0x5643dfe726c0 <col:17> 'long' lvalue Var 0x5643dfe723b8 'offset' 'long'
  `-ImplicitCastExpr 0x5643dfe72870 <col:25, col:32> 'int' <LValueToRValue>
    `-ArraySubscriptExpr 0x5643dfe72768 <col:25, col:32> 'const int' lvalue
      |-ImplicitCastExpr 0x5643dfe72738 <col:25> 'const int *' <ArrayToPointerDecay>
      | `-DeclRefExpr 0x5643dfe726e8 <col:25> 'const int [3]' lvalue Var 0x5643dfe715f0 'mode' 'const int [3]'
      `-ImplicitCastExpr 0x5643dfe72750 <col:30> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5643dfe72710 <col:30> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
[B3.42] = [B3.41]
  44: DeclRefExpr 0x5643dfe728b0 <liolib.c:449:7> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
op
  45: ImplicitCastExpr 0x5643dfe728d8 <liolib.c:449:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x5643dfe728b0 <col:7> 'int' lvalue Var 0x5643dfe72140 'op' 'int'
[B3.44] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B3.45]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: StringLiteral 0x5643dfe71898 <liolib.c:444:43> 'char [4]' lvalue "set"
"set"
   2: ImplicitCastExpr 0x5643dfe71e80 <liolib.c:444:43> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5643dfe71898 <col:43> 'char [4]' lvalue "set"
[B4.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x5643dfe71e98 <liolib.c:444:43> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5643dfe71e80 <col:43> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5643dfe71898 <col:43> 'char [4]' lvalue "set"
[B4.2] (ImplicitCastExpr, BitCast, const char *)
   4: StringLiteral 0x5643dfe71d00 <liolib.c:444:50> 'char [4]' lvalue "cur"
"cur"
   5: ImplicitCastExpr 0x5643dfe71eb8 <liolib.c:444:50> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5643dfe71d00 <col:50> 'char [4]' lvalue "cur"
[B4.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: ImplicitCastExpr 0x5643dfe71ed0 <liolib.c:444:50> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5643dfe71eb8 <col:50> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5643dfe71d00 <col:50> 'char [4]' lvalue "cur"
[B4.5] (ImplicitCastExpr, BitCast, const char *)
   7: StringLiteral 0x5643dfe71d30 <liolib.c:444:57> 'char [4]' lvalue "end"
"end"
   8: ImplicitCastExpr 0x5643dfe71ef8 <liolib.c:444:57> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5643dfe71d30 <col:57> 'char [4]' lvalue "end"
[B4.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x5643dfe71f10 <liolib.c:444:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5643dfe71ef8 <col:57> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5643dfe71d30 <col:57> 'char [4]' lvalue "end"
[B4.8] (ImplicitCastExpr, BitCast, const char *)
  10: IntegerLiteral 0x5643dfe71d60 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  11: CStyleCastExpr 0x5643dfe71d98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5643dfe71d60 <col:24> 'int' 0
(void *)[B4.10] (CStyleCastExpr, NullToPointer, void *)
  12: ImplicitCastExpr 0x5643dfe71f48 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
`-ParenExpr 0x5643dfe71dc0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5643dfe71d98 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5643dfe71d60 <col:24> 'int' 0
([B4.11]) (ImplicitCastExpr, NullToPointer, const char *const)
  13: InitListExpr 0x5643dfe71e40 <liolib.c:444:42, col:68> 'const char *const [4]'
|-ImplicitCastExpr 0x5643dfe71e98 <col:43> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5643dfe71e80 <col:43> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5643dfe71898 <col:43> 'char [4]' lvalue "set"
|-ImplicitCastExpr 0x5643dfe71ed0 <col:50> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5643dfe71eb8 <col:50> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5643dfe71d00 <col:50> 'char [4]' lvalue "cur"
|-ImplicitCastExpr 0x5643dfe71f10 <col:57> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5643dfe71ef8 <col:57> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5643dfe71d30 <col:57> 'char [4]' lvalue "end"
`-ImplicitCastExpr 0x5643dfe71f48 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
  `-ParenExpr 0x5643dfe71dc0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5643dfe71d98 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5643dfe71d60 <col:24> 'int' 0
{[B4.3], [B4.6], [B4.9], [B4.12]}
  14: DeclStmt 0x5643dfe71fd8 <liolib.c:444:3, col:69>col:28
`-VarDecl 0x5643dfe71838 <col:3, col:68> col:28 used modenames 'const char *const [4]' static cinit
  `-InitListExpr 0x5643dfe71e40 <col:42, col:68> 'const char *const [4]'
    |-ImplicitCastExpr 0x5643dfe71e98 <col:43> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x5643dfe71e80 <col:43> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x5643dfe71898 <col:43> 'char [4]' lvalue "set"
    |-ImplicitCastExpr 0x5643dfe71ed0 <col:50> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x5643dfe71eb8 <col:50> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x5643dfe71d00 <col:50> 'char [4]' lvalue "cur"
    |-ImplicitCastExpr 0x5643dfe71f10 <col:57> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x5643dfe71ef8 <col:57> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x5643dfe71d30 <col:57> 'char [4]' lvalue "end"
    `-ImplicitCastExpr 0x5643dfe71f48 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
      `-ParenExpr 0x5643dfe71dc0 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x5643dfe71d98 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x5643dfe71d60 <col:24> 'int' 0
static const char *const modenames[] = {"set", "cur", "end", ((void *)0)};
   Preds (1): B5
   Succs (1): B3

 [B5]
   T: static init modenames
   Preds (2): B6 B7
   Succs (2): B3 B4

 [B6]
   1: IntegerLiteral 0x5643dfe71650 </usr/include/stdio.h:109:18> 'int' 0
0
   2: IntegerLiteral 0x5643dfe71670 </usr/include/stdio.h:110:18> 'int' 1
1
   3: IntegerLiteral 0x5643dfe71690 </usr/include/stdio.h:111:18> 'int' 2
2
   4: InitListExpr 0x5643dfe71708 <liolib.c:443:29, col:58> 'const int [3]'
|-IntegerLiteral 0x5643dfe71650 </usr/include/stdio.h:109:18> 'int' 0
|-IntegerLiteral 0x5643dfe71670 <line:110:18> 'int' 1
`-IntegerLiteral 0x5643dfe71690 <line:111:18> 'int' 2
{[B6.1], [B6.2], [B6.3]}
   5: DeclStmt 0x5643dfe717f8 <liolib.c:443:3, col:59>col:20
`-VarDecl 0x5643dfe715f0 <col:3, col:58> col:20 used mode 'const int [3]' static cinit
  `-InitListExpr 0x5643dfe71708 <col:29, col:58> 'const int [3]'
    |-IntegerLiteral 0x5643dfe71650 </usr/include/stdio.h:109:18> 'int' 0
    |-IntegerLiteral 0x5643dfe71670 <line:110:18> 'int' 1
    `-IntegerLiteral 0x5643dfe71690 <line:111:18> 'int' 2
static const int mode[] = {0, 1, 2};
   Preds (1): B7
   Succs (1): B5

 [B7]
   T: static init mode
   Preds (1): B8
   Succs (2): B5 B6

 [B0 (EXIT)]
   Preds (2): B1 B2
