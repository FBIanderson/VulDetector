static int lessequal(lua_State *L, const TValue *l, const TValue *r)
 [B12 (ENTRY)]
   Succs (1): B11

 [B1]
   1: DeclRefExpr 0x5590eceee860 <lvm.c:251:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
luaG_ordererror
   2: ImplicitCastExpr 0x5590eceee900 <lvm.c:251:10> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceee860 <col:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *))
   3: DeclRefExpr 0x5590eceee888 <lvm.c:251:26> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceee958 <lvm.c:251:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee888 <col:26> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceee8b0 <lvm.c:251:29> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   6: ImplicitCastExpr 0x5590eceee970 <lvm.c:251:29> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee8b0 <col:29> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590eceee8d8 <lvm.c:251:32> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
r
   8: ImplicitCastExpr 0x5590eceee988 <lvm.c:251:32> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee8d8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B1.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: CallExpr 0x5590eceee918 <lvm.c:251:10, col:33> 'int'
|-ImplicitCastExpr 0x5590eceee900 <col:10> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceee860 <col:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590eceee958 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee888 <col:26> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590eceee970 <col:29> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee8b0 <col:29> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceee988 <col:32> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceee8d8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B1.2]([B1.4], [B1.6], [B1.8])
  10: ReturnStmt 0x5590eceee9a0 <lvm.c:251:3, col:33>
`-CallExpr 0x5590eceee918 <col:10, col:33> 'int'
  |-ImplicitCastExpr 0x5590eceee900 <col:10> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceee860 <col:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
  |-ImplicitCastExpr 0x5590eceee958 <col:26> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee888 <col:26> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590eceee970 <col:29> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee8b0 <col:29> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceee988 <col:32> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceee8d8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5590eceee6d0 <lvm.c:250:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
res
   2: ImplicitCastExpr 0x5590eceee6f8 <lvm.c:250:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590eceee6d0 <col:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x5590eceee710 <lvm.c:250:12, col:13> 'int' prefix '!'
`-ImplicitCastExpr 0x5590eceee6f8 <col:13> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590eceee6d0 <col:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
![B2.2]
   4: ReturnStmt 0x5590eceee730 <lvm.c:250:5, col:13>
`-UnaryOperator 0x5590eceee710 <col:12, col:13> 'int' prefix '!'
  `-ImplicitCastExpr 0x5590eceee6f8 <col:13> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5590eceee6d0 <col:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
return [B2.3];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5590eceee498 <lvm.c:249:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
call_orderTM
   2: ImplicitCastExpr 0x5590eceee560 <lvm.c:249:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceee498 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *, TMS))
   3: DeclRefExpr 0x5590eceee4c0 <lvm.c:249:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceee5c0 <lvm.c:249:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee4c0 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceee4e8 <lvm.c:249:35> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
r
   6: ImplicitCastExpr 0x5590eceee5d8 <lvm.c:249:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee4e8 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B3.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590eceee510 <lvm.c:249:38> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   8: ImplicitCastExpr 0x5590eceee5f0 <lvm.c:249:38> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee510 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B3.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: DeclRefExpr 0x5590eceee538 <lvm.c:249:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
TM_LT
  10: ImplicitCastExpr 0x5590eceee608 <lvm.c:249:41> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590eceee538 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
[B3.9] (ImplicitCastExpr, IntegralCast, TMS)
  11: CallExpr 0x5590eceee578 <lvm.c:249:19, col:46> 'int'
|-ImplicitCastExpr 0x5590eceee560 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceee498 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
|-ImplicitCastExpr 0x5590eceee5c0 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee4c0 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590eceee5d8 <col:35> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee4e8 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
|-ImplicitCastExpr 0x5590eceee5f0 <col:38> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee510 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceee608 <col:41> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x5590eceee538 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
[B3.2]([B3.4], [B3.6], [B3.8], [B3.10])
  12: DeclRefExpr 0x5590eceee470 <lvm.c:249:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
res
  13: BinaryOperator 0x5590eceee620 <lvm.c:249:13, col:46> 'int' '='
|-DeclRefExpr 0x5590eceee470 <col:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
`-CallExpr 0x5590eceee578 <col:19, col:46> 'int'
  |-ImplicitCastExpr 0x5590eceee560 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceee498 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
  |-ImplicitCastExpr 0x5590eceee5c0 <col:32> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee4c0 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590eceee5d8 <col:35> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee4e8 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
  |-ImplicitCastExpr 0x5590eceee5f0 <col:38> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee510 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceee608 <col:41> 'TMS':'TMS' <IntegralCast>
    `-DeclRefExpr 0x5590eceee538 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
[B3.12] = [B3.11]
  14: IntegerLiteral 0x5590eceee668 <lvm.c:249:53> 'int' 1
1
  15: UnaryOperator 0x5590eceee688 <lvm.c:249:52, col:53> 'int' prefix '-'
`-IntegerLiteral 0x5590eceee668 <col:53> 'int' 1
-[B3.14]
  16: BinaryOperator 0x5590eceee6a8 <lvm.c:249:12, col:53> 'int' '!='
|-ParenExpr 0x5590eceee648 <col:12, col:47> 'int'
| `-BinaryOperator 0x5590eceee620 <col:13, col:46> 'int' '='
|   |-DeclRefExpr 0x5590eceee470 <col:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
|   `-CallExpr 0x5590eceee578 <col:19, col:46> 'int'
|     |-ImplicitCastExpr 0x5590eceee560 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5590eceee498 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
|     |-ImplicitCastExpr 0x5590eceee5c0 <col:32> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceee4c0 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
|     |-ImplicitCastExpr 0x5590eceee5d8 <col:35> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceee4e8 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
|     |-ImplicitCastExpr 0x5590eceee5f0 <col:38> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceee510 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
|     `-ImplicitCastExpr 0x5590eceee608 <col:41> 'TMS':'TMS' <IntegralCast>
|       `-DeclRefExpr 0x5590eceee538 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
`-UnaryOperator 0x5590eceee688 <col:52, col:53> 'int' prefix '-'
  `-IntegerLiteral 0x5590eceee668 <col:53> 'int' 1
([B3.13]) != [B3.15]
   T: if [B3.16]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5590eceee418 <lvm.c:248:12> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
res
   2: ImplicitCastExpr 0x5590eceee440 <lvm.c:248:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590eceee418 <col:12> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x5590eceee458 <lvm.c:248:5, col:12>
`-ImplicitCastExpr 0x5590eceee440 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590eceee418 <col:12> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
return [B4.2];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x5590eceee1e0 <lvm.c:247:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
call_orderTM
   2: ImplicitCastExpr 0x5590eceee2a8 <lvm.c:247:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceee1e0 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *, TMS))
   3: DeclRefExpr 0x5590eceee208 <lvm.c:247:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceee308 <lvm.c:247:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee208 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceee230 <lvm.c:247:35> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   6: ImplicitCastExpr 0x5590eceee320 <lvm.c:247:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee230 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B5.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590eceee258 <lvm.c:247:38> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
r
   8: ImplicitCastExpr 0x5590eceee338 <lvm.c:247:38> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceee258 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B5.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: DeclRefExpr 0x5590eceee280 <lvm.c:247:41> 'int' EnumConstant 0x5590ece94730 'TM_LE' 'int'
TM_LE
  10: ImplicitCastExpr 0x5590eceee350 <lvm.c:247:41> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590eceee280 <col:41> 'int' EnumConstant 0x5590ece94730 'TM_LE' 'int'
[B5.9] (ImplicitCastExpr, IntegralCast, TMS)
  11: CallExpr 0x5590eceee2c0 <lvm.c:247:19, col:46> 'int'
|-ImplicitCastExpr 0x5590eceee2a8 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceee1e0 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
|-ImplicitCastExpr 0x5590eceee308 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee208 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590eceee320 <col:35> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee230 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
|-ImplicitCastExpr 0x5590eceee338 <col:38> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceee258 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
`-ImplicitCastExpr 0x5590eceee350 <col:41> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x5590eceee280 <col:41> 'int' EnumConstant 0x5590ece94730 'TM_LE' 'int'
[B5.2]([B5.4], [B5.6], [B5.8], [B5.10])
  12: DeclRefExpr 0x5590eceee1b8 <lvm.c:247:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
res
  13: BinaryOperator 0x5590eceee368 <lvm.c:247:13, col:46> 'int' '='
|-DeclRefExpr 0x5590eceee1b8 <col:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
`-CallExpr 0x5590eceee2c0 <col:19, col:46> 'int'
  |-ImplicitCastExpr 0x5590eceee2a8 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceee1e0 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
  |-ImplicitCastExpr 0x5590eceee308 <col:32> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee208 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590eceee320 <col:35> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee230 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
  |-ImplicitCastExpr 0x5590eceee338 <col:38> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceee258 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceee350 <col:41> 'TMS':'TMS' <IntegralCast>
    `-DeclRefExpr 0x5590eceee280 <col:41> 'int' EnumConstant 0x5590ece94730 'TM_LE' 'int'
[B5.12] = [B5.11]
  14: IntegerLiteral 0x5590eceee3b0 <lvm.c:247:53> 'int' 1
1
  15: UnaryOperator 0x5590eceee3d0 <lvm.c:247:52, col:53> 'int' prefix '-'
`-IntegerLiteral 0x5590eceee3b0 <col:53> 'int' 1
-[B5.14]
  16: BinaryOperator 0x5590eceee3f0 <lvm.c:247:12, col:53> 'int' '!='
|-ParenExpr 0x5590eceee390 <col:12, col:47> 'int'
| `-BinaryOperator 0x5590eceee368 <col:13, col:46> 'int' '='
|   |-DeclRefExpr 0x5590eceee1b8 <col:13> 'int' lvalue Var 0x5590eceecb20 'res' 'int'
|   `-CallExpr 0x5590eceee2c0 <col:19, col:46> 'int'
|     |-ImplicitCastExpr 0x5590eceee2a8 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5590eceee1e0 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
|     |-ImplicitCastExpr 0x5590eceee308 <col:32> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceee208 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
|     |-ImplicitCastExpr 0x5590eceee320 <col:35> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceee230 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
|     |-ImplicitCastExpr 0x5590eceee338 <col:38> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceee258 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
|     `-ImplicitCastExpr 0x5590eceee350 <col:41> 'TMS':'TMS' <IntegralCast>
|       `-DeclRefExpr 0x5590eceee280 <col:41> 'int' EnumConstant 0x5590ece94730 'TM_LE' 'int'
`-UnaryOperator 0x5590eceee3d0 <col:52, col:53> 'int' prefix '-'
  `-IntegerLiteral 0x5590eceee3b0 <col:53> 'int' 1
([B5.13]) != [B5.15]
   T: if [B5.16]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x5590eceeddf0 <lvm.c:246:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
l_strcmp
   2: ImplicitCastExpr 0x5590eceee0d8 <lvm.c:246:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceeddf0 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const TString *, const TString *))
   3: DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   4: ImplicitCastExpr 0x5590eceede60 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B6.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x5590eceede78 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B6.4]->value
   6: MemberExpr 0x5590eceedeb0 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B6.5].gc
   7: ImplicitCastExpr 0x5590eceedee8 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceedeb0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B6.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x5590eceedf00 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590eceedee8 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceedeb0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B6.7]->ts
   9: UnaryOperator 0x5590eceedf38 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590eceedf00 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590eceedee8 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceedeb0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
&[B6.8]
  10: ImplicitCastExpr 0x5590eceee128 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
`-ParenExpr 0x5590eceedf58 <col:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590eceedf38 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590eceedf00 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590eceedee8 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceedeb0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B6.9]) (ImplicitCastExpr, BitCast, const TString *)
  11: DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
r
  12: ImplicitCastExpr 0x5590eceedfc0 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
([B6.11]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  13: MemberExpr 0x5590eceedfd8 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B6.12]->value
  14: MemberExpr 0x5590eceee010 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B6.13].gc
  15: ImplicitCastExpr 0x5590eceee048 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceee010 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B6.14] (ImplicitCastExpr, LValueToRValue, GCObject *)
  16: MemberExpr 0x5590eceee060 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590eceee048 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceee010 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B6.15]->ts
  17: UnaryOperator 0x5590eceee098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590eceee060 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590eceee048 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceee010 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
&[B6.16]
  18: ImplicitCastExpr 0x5590eceee140 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
`-ParenExpr 0x5590eceee0b8 <col:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590eceee098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590eceee060 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590eceee048 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceee010 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
([B6.17]) (ImplicitCastExpr, BitCast, const TString *)
  19: CallExpr 0x5590eceee0f0 <lvm.c:246:12, col:49> 'int'
|-ImplicitCastExpr 0x5590eceee0d8 <col:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceeddf0 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
|-ImplicitCastExpr 0x5590eceee128 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
| `-ParenExpr 0x5590eceedf58 <col:25, col:27> 'union TString *'
|   `-UnaryOperator 0x5590eceedf38 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|     `-MemberExpr 0x5590eceedf00 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
|       `-ImplicitCastExpr 0x5590eceedee8 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         `-MemberExpr 0x5590eceedeb0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|           `-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|             `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
|               `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
|                 `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceee140 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
  `-ParenExpr 0x5590eceee0b8 <col:25, col:27> 'union TString *'
    `-UnaryOperator 0x5590eceee098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x5590eceee060 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
        `-ImplicitCastExpr 0x5590eceee048 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590eceee010 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B6.2]([B6.10], [B6.18])
  20: IntegerLiteral 0x5590eceee158 <lvm.c:246:54> 'int' 0
0
  21: BinaryOperator 0x5590eceee178 <lvm.c:246:12, col:54> 'int' '<='
|-CallExpr 0x5590eceee0f0 <col:12, col:49> 'int'
| |-ImplicitCastExpr 0x5590eceee0d8 <col:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5590eceeddf0 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
| |-ImplicitCastExpr 0x5590eceee128 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
| | `-ParenExpr 0x5590eceedf58 <col:25, col:27> 'union TString *'
| |   `-UnaryOperator 0x5590eceedf38 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
| |     `-MemberExpr 0x5590eceedf00 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
| |       `-ImplicitCastExpr 0x5590eceedee8 <col:49, col:60> 'GCObject *' <LValueToRValue>
| |         `-MemberExpr 0x5590eceedeb0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
| |           `-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
| |             `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
| |               `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
| |                 `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
| `-ImplicitCastExpr 0x5590eceee140 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
|   `-ParenExpr 0x5590eceee0b8 <col:25, col:27> 'union TString *'
|     `-UnaryOperator 0x5590eceee098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|       `-MemberExpr 0x5590eceee060 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
|         `-ImplicitCastExpr 0x5590eceee048 <col:49, col:60> 'GCObject *' <LValueToRValue>
|           `-MemberExpr 0x5590eceee010 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|             `-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|               `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
|                 `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
|                   `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
`-IntegerLiteral 0x5590eceee158 <col:54> 'int' 0
[B6.19] <= [B6.20]
  22: ReturnStmt 0x5590eceee1a0 <lvm.c:246:5, col:54>
`-BinaryOperator 0x5590eceee178 <col:12, col:54> 'int' '<='
  |-CallExpr 0x5590eceee0f0 <col:12, col:49> 'int'
  | |-ImplicitCastExpr 0x5590eceee0d8 <col:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x5590eceeddf0 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
  | |-ImplicitCastExpr 0x5590eceee128 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
  | | `-ParenExpr 0x5590eceedf58 <col:25, col:27> 'union TString *'
  | |   `-UnaryOperator 0x5590eceedf38 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
  | |     `-MemberExpr 0x5590eceedf00 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  | |       `-ImplicitCastExpr 0x5590eceedee8 <col:49, col:60> 'GCObject *' <LValueToRValue>
  | |         `-MemberExpr 0x5590eceedeb0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  | |           `-MemberExpr 0x5590eceede78 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  | |             `-ImplicitCastExpr 0x5590eceede60 <col:49, col:51> 'const TValue *' <LValueToRValue>
  | |               `-ParenExpr 0x5590eceede40 <col:49, col:51> 'const TValue *' lvalue
  | |                 `-DeclRefExpr 0x5590eceede18 <lvm.c:246:32> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
  | `-ImplicitCastExpr 0x5590eceee140 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
  |   `-ParenExpr 0x5590eceee0b8 <col:25, col:27> 'union TString *'
  |     `-UnaryOperator 0x5590eceee098 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
  |       `-MemberExpr 0x5590eceee060 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  |         `-ImplicitCastExpr 0x5590eceee048 <col:49, col:60> 'GCObject *' <LValueToRValue>
  |           `-MemberExpr 0x5590eceee010 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  |             `-MemberExpr 0x5590eceedfd8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |               `-ImplicitCastExpr 0x5590eceedfc0 <col:49, col:51> 'const TValue *' <LValueToRValue>
  |                 `-ParenExpr 0x5590eceedfa0 <col:49, col:51> 'const TValue *' lvalue
  |                   `-DeclRefExpr 0x5590eceedf78 <lvm.c:246:47> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
  `-IntegerLiteral 0x5590eceee158 <col:54> 'int' 0
return [B6.21];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x5590eceed2a0 <lvm.c:245:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   2: ImplicitCastExpr 0x5590eceedd00 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceedce0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceed2a0 <lvm.c:245:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceedd18 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceedd00 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceedce0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceed2a0 <lvm.c:245:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B7.2]->tt
   4: ImplicitCastExpr 0x5590eceedd90 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceedd50 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceedd18 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceedd00 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceedce0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceed2a0 <lvm.c:245:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B7.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5590eceedd70 <./lua.h:78:22> 'int' 4
4
   6: BinaryOperator 0x5590eceedda8 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x5590eceedd90 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590eceedd50 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590eceedd18 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590eceedd00 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590eceedce0 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590eceed2a0 <lvm.c:245:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-IntegerLiteral 0x5590eceedd70 <./lua.h:78:22> 'int' 4
[B7.4] == [B7.5]
   T: if ([B7.6])
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x5590eceecff0 <lvm.c:244:30> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   2: ImplicitCastExpr 0x5590eceed038 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceed018 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceecff0 <lvm.c:244:30> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B8.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceed050 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceed038 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceed018 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceecff0 <lvm.c:244:30> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B8.2]->value
   4: MemberExpr 0x5590eceed088 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590eceed050 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceed038 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceed018 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceecff0 <lvm.c:244:30> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B8.3].n
   5: ImplicitCastExpr 0x5590eceed210 <./luaconf.h:542:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590eceed0e0 <col:27, col:29> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5590eceed0c0 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x5590eceed088 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
      `-MemberExpr 0x5590eceed050 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceed038 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceed018 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceecff0 <lvm.c:244:30> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
(([B8.4])) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590eceed100 <lvm.c:244:41> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
r
   7: ImplicitCastExpr 0x5590eceed148 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceed128 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceed100 <lvm.c:244:41> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
([B8.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590eceed160 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceed148 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceed128 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceed100 <lvm.c:244:41> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B8.7]->value
   9: MemberExpr 0x5590eceed198 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590eceed160 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceed148 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceed128 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceed100 <lvm.c:244:41> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B8.8].n
  10: ImplicitCastExpr 0x5590eceed228 <./luaconf.h:542:32, col:34> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590eceed1f0 <col:32, col:34> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5590eceed1d0 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x5590eceed198 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
      `-MemberExpr 0x5590eceed160 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceed148 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceed128 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceed100 <lvm.c:244:41> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
(([B8.9])) (ImplicitCastExpr, LValueToRValue, lua_Number)
  11: BinaryOperator 0x5590eceed240 <./luaconf.h:542:27, col:34> 'int' '<='
|-ImplicitCastExpr 0x5590eceed210 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590eceed0e0 <col:27, col:29> 'const lua_Number':'const double' lvalue
|   `-ParenExpr 0x5590eceed0c0 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
|     `-MemberExpr 0x5590eceed088 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
|       `-MemberExpr 0x5590eceed050 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|         `-ImplicitCastExpr 0x5590eceed038 <col:44, col:46> 'const TValue *' <LValueToRValue>
|           `-ParenExpr 0x5590eceed018 <col:44, col:46> 'const TValue *' lvalue
|             `-DeclRefExpr 0x5590eceecff0 <lvm.c:244:30> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceed228 <./luaconf.h:542:32, col:34> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590eceed1f0 <col:32, col:34> 'const lua_Number':'const double' lvalue
    `-ParenExpr 0x5590eceed1d0 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5590eceed198 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
        `-MemberExpr 0x5590eceed160 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590eceed148 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590eceed128 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590eceed100 <lvm.c:244:41> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B8.5] <= [B8.10]
  12: ReturnStmt 0x5590eceed288 <lvm.c:244:5, ./luaconf.h:542:35>
`-ParenExpr 0x5590eceed268 <col:26, col:35> 'int'
  `-BinaryOperator 0x5590eceed240 <col:27, col:34> 'int' '<='
    |-ImplicitCastExpr 0x5590eceed210 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
    | `-ParenExpr 0x5590eceed0e0 <col:27, col:29> 'const lua_Number':'const double' lvalue
    |   `-ParenExpr 0x5590eceed0c0 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    |     `-MemberExpr 0x5590eceed088 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
    |       `-MemberExpr 0x5590eceed050 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    |         `-ImplicitCastExpr 0x5590eceed038 <col:44, col:46> 'const TValue *' <LValueToRValue>
    |           `-ParenExpr 0x5590eceed018 <col:44, col:46> 'const TValue *' lvalue
    |             `-DeclRefExpr 0x5590eceecff0 <lvm.c:244:30> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
    `-ImplicitCastExpr 0x5590eceed228 <./luaconf.h:542:32, col:34> 'lua_Number':'double' <LValueToRValue>
      `-ParenExpr 0x5590eceed1f0 <col:32, col:34> 'const lua_Number':'const double' lvalue
        `-ParenExpr 0x5590eceed1d0 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
          `-MemberExpr 0x5590eceed198 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
            `-MemberExpr 0x5590eceed160 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceed148 <col:44, col:46> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceed128 <col:44, col:46> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceed100 <lvm.c:244:41> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
return ([B8.11]);
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x5590eceeceb8 <lvm.c:243:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   2: ImplicitCastExpr 0x5590eceecf00 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceecee0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceeceb8 <lvm.c:243:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B9.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceecf18 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceecf00 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceecee0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceeceb8 <lvm.c:243:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B9.2]->tt
   4: ImplicitCastExpr 0x5590eceecf90 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceecf50 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceecf18 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceecf00 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceecee0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceeceb8 <lvm.c:243:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B9.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5590eceecf70 <./lua.h:77:22> 'int' 3
3
   6: BinaryOperator 0x5590eceecfa8 <./lobject.h:90:18, ./lua.h:77:22> 'int' '=='
|-ImplicitCastExpr 0x5590eceecf90 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590eceecf50 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590eceecf18 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590eceecf00 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590eceecee0 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590eceeceb8 <lvm.c:243:23> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-IntegerLiteral 0x5590eceecf70 <./lua.h:77:22> 'int' 3
[B9.4] == [B9.5]
   T: if ([B9.6])
   Preds (1): B11
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x5590eceecd60 <lvm.c:242:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
luaG_ordererror
   2: ImplicitCastExpr 0x5590eceece00 <lvm.c:242:12> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceecd60 <col:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *))
   3: DeclRefExpr 0x5590eceecd88 <lvm.c:242:28> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceece58 <lvm.c:242:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceecd88 <col:28> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceecdb0 <lvm.c:242:31> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   6: ImplicitCastExpr 0x5590eceece70 <lvm.c:242:31> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceecdb0 <col:31> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B10.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590eceecdd8 <lvm.c:242:34> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
r
   8: ImplicitCastExpr 0x5590eceece88 <lvm.c:242:34> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceecdd8 <col:34> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B10.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: CallExpr 0x5590eceece18 <lvm.c:242:12, col:35> 'int'
|-ImplicitCastExpr 0x5590eceece00 <col:12> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceecd60 <col:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590eceece58 <col:28> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceecd88 <col:28> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590eceece70 <col:31> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceecdb0 <col:31> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceece88 <col:34> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceecdd8 <col:34> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B10.2]([B10.4], [B10.6], [B10.8])
  10: ReturnStmt 0x5590eceecea0 <lvm.c:242:5, col:35>
`-CallExpr 0x5590eceece18 <col:12, col:35> 'int'
  |-ImplicitCastExpr 0x5590eceece00 <col:12> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceecd60 <col:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
  |-ImplicitCastExpr 0x5590eceece58 <col:28> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceecd88 <col:28> 'lua_State *' lvalue ParmVar 0x5590eceec8d0 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590eceece70 <col:31> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceecdb0 <col:31> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceece88 <col:34> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceecdd8 <col:34> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
return [B10.9];
   Preds (1): B11
   Succs (1): B0

 [B11]
   1: DeclStmt 0x5590eceecb80 <lvm.c:240:3, col:10>col:7
`-VarDecl 0x5590eceecb20 <col:3, col:7> col:7 used res 'int'
int res;
   2: DeclRefExpr 0x5590eceecb98 <lvm.c:241:13> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
l
   3: ImplicitCastExpr 0x5590eceecbe0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceecbc0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceecb98 <lvm.c:241:13> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B11.2]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   4: MemberExpr 0x5590eceecbf8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceecbe0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceecbc0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceecb98 <lvm.c:241:13> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
[B11.3]->tt
   5: ImplicitCastExpr 0x5590eceecd08 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceecc30 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceecbf8 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceecbe0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceecbc0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceecb98 <lvm.c:241:13> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
([B11.4]) (ImplicitCastExpr, LValueToRValue, int)
   6: DeclRefExpr 0x5590eceecc50 <lvm.c:241:25> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
r
   7: ImplicitCastExpr 0x5590eceecc98 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceecc78 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceecc50 <lvm.c:241:25> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
([B11.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590eceeccb0 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceecc98 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceecc78 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceecc50 <lvm.c:241:25> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B11.7]->tt
   9: ImplicitCastExpr 0x5590eceecd20 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceecce8 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceeccb0 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceecc98 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceecc78 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceecc50 <lvm.c:241:25> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
([B11.8]) (ImplicitCastExpr, LValueToRValue, int)
  10: BinaryOperator 0x5590eceecd38 <./lobject.h:90:18, col:26> 'int' '!='
|-ImplicitCastExpr 0x5590eceecd08 <col:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590eceecc30 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590eceecbf8 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590eceecbe0 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590eceecbc0 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590eceecb98 <lvm.c:241:13> 'const TValue *' lvalue ParmVar 0x5590eceec940 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceecd20 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
  `-ParenExpr 0x5590eceecce8 <col:18, col:26> 'const int' lvalue
    `-MemberExpr 0x5590eceeccb0 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
      `-ImplicitCastExpr 0x5590eceecc98 <col:19, col:21> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceecc78 <col:19, col:21> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceecc50 <lvm.c:241:25> 'const TValue *' lvalue ParmVar 0x5590eceec9b0 'r' 'const TValue *'
[B11.5] != [B11.9]
   T: if [B11.10]
   Preds (1): B12
   Succs (2): B10 B9

 [B0 (EXIT)]
   Preds (6): B1 B2 B4 B6 B8 B10
