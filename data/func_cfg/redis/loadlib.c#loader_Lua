static int loader_Lua(lua_State *L)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: IntegerLiteral 0x558048c29560 <loadlib.c:387:10> 'int' 1
1
   2: ReturnStmt 0x558048c29580 <loadlib.c:387:3, col:10>
`-IntegerLiteral 0x558048c29560 <col:10> 'int' 1
return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x558048c29400 <loadlib.c:386:5> 'void (lua_State *, const char *)' Function 0x558048c284b0 'loaderror' 'void (lua_State *, const char *)'
loaderror
   2: ImplicitCastExpr 0x558048c294a8 <loadlib.c:386:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c29400 <col:5> 'void (lua_State *, const char *)' Function 0x558048c284b0 'loaderror' 'void (lua_State *, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x558048c29428 <loadlib.c:386:15> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c294f8 <loadlib.c:386:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c29428 <col:15> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x558048c29450 <loadlib.c:386:18> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
filename
   6: ImplicitCastExpr 0x558048c29510 <loadlib.c:386:18> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c29450 <col:18> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
[B2.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x558048c294c0 <loadlib.c:386:5, col:26> 'void'
|-ImplicitCastExpr 0x558048c294a8 <col:5> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c29400 <col:5> 'void (lua_State *, const char *)' Function 0x558048c284b0 'loaderror' 'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x558048c294f8 <col:15> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c29428 <col:15> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
`-ImplicitCastExpr 0x558048c29510 <col:18> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x558048c29450 <col:18> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
[B2.2]([B2.4], [B2.6])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x558048c29268 <loadlib.c:385:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x558048c14780 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
luaL_loadfile
   2: ImplicitCastExpr 0x558048c29338 <loadlib.c:385:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c29268 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x558048c14780 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *))
   3: DeclRefExpr 0x558048c29290 <loadlib.c:385:21> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c29388 <loadlib.c:385:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c29290 <col:21> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x558048c292b8 <loadlib.c:385:24> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
filename
   6: ImplicitCastExpr 0x558048c293a0 <loadlib.c:385:24> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c292b8 <col:24> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
[B3.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: CallExpr 0x558048c29350 <loadlib.c:385:7, col:32> 'int'
|-ImplicitCastExpr 0x558048c29338 <col:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c29268 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x558048c14780 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
|-ImplicitCastExpr 0x558048c29388 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c29290 <col:21> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
`-ImplicitCastExpr 0x558048c293a0 <col:24> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x558048c292b8 <col:24> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
[B3.2]([B3.4], [B3.6])
   8: IntegerLiteral 0x558048c293b8 <loadlib.c:385:37> 'int' 0
0
   9: BinaryOperator 0x558048c293d8 <loadlib.c:385:7, col:37> 'int' '!='
|-CallExpr 0x558048c29350 <col:7, col:32> 'int'
| |-ImplicitCastExpr 0x558048c29338 <col:7> 'int (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x558048c29268 <col:7> 'int (lua_State *, const char *)':'int (lua_State *, const char *)' Function 0x558048c14780 'luaL_loadfile' 'int (lua_State *, const char *)':'int (lua_State *, const char *)'
| |-ImplicitCastExpr 0x558048c29388 <col:21> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x558048c29290 <col:21> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
| `-ImplicitCastExpr 0x558048c293a0 <col:24> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x558048c292b8 <col:24> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
`-IntegerLiteral 0x558048c293b8 <col:37> 'int' 0
[B3.7] != [B3.8]
   T: if [B3.9]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x558048c291f8 <loadlib.c:384:32> 'int' 1
1
   2: ReturnStmt 0x558048c29218 <loadlib.c:384:25, col:32>
`-IntegerLiteral 0x558048c291f8 <col:32> 'int' 1
return [B4.1];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclStmt 0x558048c28c88 <loadlib.c:381:3, col:23>col:15
`-VarDecl 0x558048c28c28 <col:3, col:15> col:15 used filename 'const char *'
const char *filename;
   2: DeclRefExpr 0x558048c28d18 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   3: ImplicitCastExpr 0x558048c28e28 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c28d18 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B5.2] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   4: DeclRefExpr 0x558048c28d40 <loadlib.c:382:39> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x558048c28e80 <loadlib.c:382:39> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c28d40 <col:39> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
[B5.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: IntegerLiteral 0x558048c28d68 <loadlib.c:382:42> 'int' 1
1
   7: IntegerLiteral 0x558048c28da8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x558048c28de0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558048c28da8 <col:24> 'int' 0
(void *)[B5.7] (CStyleCastExpr, NullToPointer, void *)
   9: ImplicitCastExpr 0x558048c28e98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x558048c28e08 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x558048c28de0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558048c28da8 <col:24> 'int' 0
([B5.8]) (ImplicitCastExpr, NullToPointer, size_t *)
  10: CallExpr 0x558048c28e40 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x558048c28e28 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c28d18 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x558048c28e80 <loadlib.c:382:39> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c28d40 <col:39> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
|-ParenExpr 0x558048c28d88 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x558048c28d68 <loadlib.c:382:42> 'int' 1
`-ImplicitCastExpr 0x558048c28e98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x558048c28e08 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x558048c28de0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x558048c28da8 <col:24> 'int' 0
[B5.3]([B5.5], ([B5.6]), [B5.9])
  11: DeclStmt 0x558048c28ed0 <loadlib.c:382:3, col:44>col:15
`-VarDecl 0x558048c28cb8 <col:3, ./lauxlib.h:102:63> loadlib.c:382:15 used name 'const char *' cinit
  `-ParenExpr 0x558048c28eb0 <./lauxlib.h:102:31, col:63> 'const char *'
    `-CallExpr 0x558048c28e40 <col:32, col:62> 'const char *'
      |-ImplicitCastExpr 0x558048c28e28 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x558048c28d18 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x558048c11ee8 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
      |-ImplicitCastExpr 0x558048c28e80 <loadlib.c:382:39> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x558048c28d40 <col:39> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
      |-ParenExpr 0x558048c28d88 <./lauxlib.h:102:53, col:55> 'int'
      | `-IntegerLiteral 0x558048c28d68 <loadlib.c:382:42> 'int' 1
      `-ImplicitCastExpr 0x558048c28e98 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x558048c28e08 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x558048c28de0 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x558048c28da8 <col:24> 'int' 0
const char *name = (luaL_checklstring(L, (1), ((void *)0)));
  12: DeclRefExpr 0x558048c28f10 <loadlib.c:383:14> 'const char *(lua_State *, const char *, const char *)' Function 0x558048c26908 'findfile' 'const char *(lua_State *, const char *, const char *)'
findfile
  13: ImplicitCastExpr 0x558048c29018 <loadlib.c:383:14> 'const char *(*)(lua_State *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c28f10 <col:14> 'const char *(lua_State *, const char *, const char *)' Function 0x558048c26908 'findfile' 'const char *(lua_State *, const char *, const char *)'
[B5.12] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, const char *))
  14: DeclRefExpr 0x558048c28f38 <loadlib.c:383:23> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
L
  15: ImplicitCastExpr 0x558048c29070 <loadlib.c:383:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c28f38 <col:23> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
[B5.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: DeclRefExpr 0x558048c28f60 <loadlib.c:383:26> 'const char *' lvalue Var 0x558048c28cb8 'name' 'const char *'
name
  17: ImplicitCastExpr 0x558048c29088 <loadlib.c:383:26> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c28f60 <col:26> 'const char *' lvalue Var 0x558048c28cb8 'name' 'const char *'
[B5.16] (ImplicitCastExpr, LValueToRValue, const char *)
  18: StringLiteral 0x558048c28f88 <loadlib.c:383:32> 'char [5]' lvalue "path"
"path"
  19: ImplicitCastExpr 0x558048c290a0 <loadlib.c:383:32> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x558048c28f88 <col:32> 'char [5]' lvalue "path"
[B5.18] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  20: ImplicitCastExpr 0x558048c290b8 <loadlib.c:383:32> 'const char *' <BitCast>
`-ImplicitCastExpr 0x558048c290a0 <col:32> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x558048c28f88 <col:32> 'char [5]' lvalue "path"
[B5.19] (ImplicitCastExpr, BitCast, const char *)
  21: CallExpr 0x558048c29030 <loadlib.c:383:14, col:38> 'const char *'
|-ImplicitCastExpr 0x558048c29018 <col:14> 'const char *(*)(lua_State *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c28f10 <col:14> 'const char *(lua_State *, const char *, const char *)' Function 0x558048c26908 'findfile' 'const char *(lua_State *, const char *, const char *)'
|-ImplicitCastExpr 0x558048c29070 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c28f38 <col:23> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
|-ImplicitCastExpr 0x558048c29088 <col:26> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x558048c28f60 <col:26> 'const char *' lvalue Var 0x558048c28cb8 'name' 'const char *'
`-ImplicitCastExpr 0x558048c290b8 <col:32> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x558048c290a0 <col:32> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x558048c28f88 <col:32> 'char [5]' lvalue "path"
[B5.13]([B5.15], [B5.17], [B5.20])
  22: DeclRefExpr 0x558048c28ee8 <loadlib.c:383:3> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
filename
  23: BinaryOperator 0x558048c290d0 <loadlib.c:383:3, col:38> 'const char *' '='
|-DeclRefExpr 0x558048c28ee8 <col:3> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
`-CallExpr 0x558048c29030 <col:14, col:38> 'const char *'
  |-ImplicitCastExpr 0x558048c29018 <col:14> 'const char *(*)(lua_State *, const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x558048c28f10 <col:14> 'const char *(lua_State *, const char *, const char *)' Function 0x558048c26908 'findfile' 'const char *(lua_State *, const char *, const char *)'
  |-ImplicitCastExpr 0x558048c29070 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x558048c28f38 <col:23> 'lua_State *' lvalue ParmVar 0x558048c28ad8 'L' 'lua_State *'
  |-ImplicitCastExpr 0x558048c29088 <col:26> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x558048c28f60 <col:26> 'const char *' lvalue Var 0x558048c28cb8 'name' 'const char *'
  `-ImplicitCastExpr 0x558048c290b8 <col:32> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x558048c290a0 <col:32> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x558048c28f88 <col:32> 'char [5]' lvalue "path"
[B5.22] = [B5.21]
  24: DeclRefExpr 0x558048c290f8 <loadlib.c:384:7> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
filename
  25: ImplicitCastExpr 0x558048c291a0 <loadlib.c:384:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x558048c290f8 <col:7> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
[B5.24] (ImplicitCastExpr, LValueToRValue, const char *)
  26: IntegerLiteral 0x558048c29120 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  27: CStyleCastExpr 0x558048c29158 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558048c29120 <col:24> 'int' 0
(void *)[B5.26] (CStyleCastExpr, NullToPointer, void *)
  28: ImplicitCastExpr 0x558048c291b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x558048c29180 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x558048c29158 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558048c29120 <col:24> 'int' 0
([B5.27]) (ImplicitCastExpr, BitCast, const char *)
  29: BinaryOperator 0x558048c291d0 <loadlib.c:384:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x558048c291a0 <loadlib.c:384:7> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x558048c290f8 <col:7> 'const char *' lvalue Var 0x558048c28c28 'filename' 'const char *'
`-ImplicitCastExpr 0x558048c291b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x558048c29180 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x558048c29158 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x558048c29120 <col:24> 'int' 0
[B5.25] == [B5.28]
   T: if [B5.29]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (2): B1 B4
