static TString *newlstr(lua_State *L, const char *str, size_t l, unsigned int h)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x55a112e36168 <lstring.c:71:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
   2: ImplicitCastExpr 0x55a112e36190 <lstring.c:71:10> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e36168 <col:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B1.1] (ImplicitCastExpr, LValueToRValue, TString *)
   3: ReturnStmt 0x55a112e361a8 <lstring.c:71:3, col:10>
`-ImplicitCastExpr 0x55a112e36190 <col:10> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e36168 <col:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
return [B1.2];
   Preds (3): B2 B3 B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55a112e35850 <lstring.c:70:5> 'void (lua_State *, int)' Function 0x55a112e2b158 'luaS_resize' 'void (lua_State *, int)'
luaS_resize
   2: ImplicitCastExpr 0x55a112e360c8 <lstring.c:70:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55a112e35850 <col:5> 'void (lua_State *, int)' Function 0x55a112e2b158 'luaS_resize' 'void (lua_State *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55a112e35878 <lstring.c:70:17> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55a112e36118 <lstring.c:70:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e35878 <col:17> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55a112e358a0 <lstring.c:70:20> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
   6: ImplicitCastExpr 0x55a112e358c8 <lstring.c:70:20> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e358a0 <col:20> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B2.5] (ImplicitCastExpr, LValueToRValue, stringtable *)
   7: MemberExpr 0x55a112e358e0 <lstring.c:70:20, col:24> 'int' lvalue ->size 0x55a112e169c8
`-ImplicitCastExpr 0x55a112e358c8 <col:20> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e358a0 <col:20> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B2.6]->size
   8: ImplicitCastExpr 0x55a112e35938 <lstring.c:70:20, col:24> 'int' <LValueToRValue>
`-MemberExpr 0x55a112e358e0 <col:20, col:24> 'int' lvalue ->size 0x55a112e169c8
  `-ImplicitCastExpr 0x55a112e358c8 <col:20> 'stringtable *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e358a0 <col:20> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B2.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55a112e35918 <lstring.c:70:29> 'int' 2
2
  10: BinaryOperator 0x55a112e35950 <lstring.c:70:20, col:29> 'int' '*'
|-ImplicitCastExpr 0x55a112e35938 <col:20, col:24> 'int' <LValueToRValue>
| `-MemberExpr 0x55a112e358e0 <col:20, col:24> 'int' lvalue ->size 0x55a112e169c8
|   `-ImplicitCastExpr 0x55a112e358c8 <col:20> 'stringtable *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e358a0 <col:20> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
`-IntegerLiteral 0x55a112e35918 <col:29> 'int' 2
[B2.8] * [B2.9]
  11: CallExpr 0x55a112e360e0 <lstring.c:70:5, col:30> 'void'
|-ImplicitCastExpr 0x55a112e360c8 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55a112e35850 <col:5> 'void (lua_State *, int)' Function 0x55a112e2b158 'luaS_resize' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x55a112e36118 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e35878 <col:17> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
`-BinaryOperator 0x55a112e35950 <col:20, col:29> 'int' '*'
  |-ImplicitCastExpr 0x55a112e35938 <col:20, col:24> 'int' <LValueToRValue>
  | `-MemberExpr 0x55a112e358e0 <col:20, col:24> 'int' lvalue ->size 0x55a112e169c8
  |   `-ImplicitCastExpr 0x55a112e358c8 <col:20> 'stringtable *' <LValueToRValue>
  |     `-DeclRefExpr 0x55a112e358a0 <col:20> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
  `-IntegerLiteral 0x55a112e35918 <col:29> 'int' 2
[B2.2]([B2.4], [B2.10])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55a112e356a0 <lstring.c:69:46> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
   2: ImplicitCastExpr 0x55a112e356c8 <lstring.c:69:46> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e356a0 <col:46> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B3.1] (ImplicitCastExpr, LValueToRValue, stringtable *)
   3: MemberExpr 0x55a112e356e0 <lstring.c:69:46, col:50> 'int' lvalue ->size 0x55a112e169c8
`-ImplicitCastExpr 0x55a112e356c8 <col:46> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e356a0 <col:46> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B3.2]->size
   4: ImplicitCastExpr 0x55a112e357e8 <lstring.c:69:46, col:50> 'int' <LValueToRValue>
`-MemberExpr 0x55a112e356e0 <col:46, col:50> 'int' lvalue ->size 0x55a112e169c8
  `-ImplicitCastExpr 0x55a112e356c8 <col:46> 'stringtable *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e356a0 <col:46> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x55a112e35718 <<built-in>:37:21> 'int' 2147483647
2147483647
   6: IntegerLiteral 0x55a112e35738 <./llimits.h:35:26> 'int' 2
2
   7: BinaryOperator 0x55a112e35758 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|-IntegerLiteral 0x55a112e35718 <<built-in>:37:21> 'int' 2147483647
`-IntegerLiteral 0x55a112e35738 <./llimits.h:35:26> 'int' 2
[B3.5] - [B3.6]
   8: IntegerLiteral 0x55a112e357a0 <lstring.c:69:66> 'int' 2
2
   9: BinaryOperator 0x55a112e357c0 <./llimits.h:35:17, lstring.c:69:66> 'int' '/'
|-ParenExpr 0x55a112e35780 <./llimits.h:35:17, col:27> 'int'
| `-BinaryOperator 0x55a112e35758 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|   |-IntegerLiteral 0x55a112e35718 <<built-in>:37:21> 'int' 2147483647
|   `-IntegerLiteral 0x55a112e35738 <./llimits.h:35:26> 'int' 2
`-IntegerLiteral 0x55a112e357a0 <lstring.c:69:66> 'int' 2
([B3.7]) / [B3.8]
  10: BinaryOperator 0x55a112e35800 <lstring.c:69:46, col:66> 'int' '<='
|-ImplicitCastExpr 0x55a112e357e8 <col:46, col:50> 'int' <LValueToRValue>
| `-MemberExpr 0x55a112e356e0 <col:46, col:50> 'int' lvalue ->size 0x55a112e169c8
|   `-ImplicitCastExpr 0x55a112e356c8 <col:46> 'stringtable *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e356a0 <col:46> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
`-BinaryOperator 0x55a112e357c0 <./llimits.h:35:17, lstring.c:69:66> 'int' '/'
  |-ParenExpr 0x55a112e35780 <./llimits.h:35:17, col:27> 'int'
  | `-BinaryOperator 0x55a112e35758 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
  |   |-IntegerLiteral 0x55a112e35718 <<built-in>:37:21> 'int' 2147483647
  |   `-IntegerLiteral 0x55a112e35738 <./llimits.h:35:26> 'int' 2
  `-IntegerLiteral 0x55a112e357a0 <lstring.c:69:66> 'int' 2
[B3.4] <= [B3.9]
   T: if [B4.156] && [B3.10]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55a112e33438 <./lmem.h:28:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55a112df2f48 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
luaM_realloc_
   2: ImplicitCastExpr 0x55a112e336b8 <./lmem.h:28:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55a112e33438 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55a112df2f48 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, size_t, size_t))
   3: DeclRefExpr 0x55a112e33460 <lstring.c:56:36> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55a112e33718 <lstring.c:56:36> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33460 <col:36> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55a112e33488 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x55a112e334c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55a112e33488 <col:24> 'int' 0
(void *)[B4.5] (CStyleCastExpr, NullToPointer, void *)
   7: IntegerLiteral 0x55a112e33508 <./lmem.h:28:49> 'int' 0
0
   8: ImplicitCastExpr 0x55a112e33730 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55a112e33508 <col:49> 'int' 0
[B4.7] (ImplicitCastExpr, IntegralCast, size_t)
   9: DeclRefExpr 0x55a112e33528 <lstring.c:56:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
l
  10: ImplicitCastExpr 0x55a112e33570 <lstring.c:56:40> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e33528 <col:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
[B4.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: IntegerLiteral 0x55a112e33550 <lstring.c:56:42> 'int' 1
1
  12: ImplicitCastExpr 0x55a112e33588 <lstring.c:56:42> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55a112e33550 <col:42> 'int' 1
[B4.11] (ImplicitCastExpr, IntegralCast, unsigned long)
  13: BinaryOperator 0x55a112e335a0 <lstring.c:56:40, col:42> 'unsigned long' '+'
|-ImplicitCastExpr 0x55a112e33570 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55a112e33528 <col:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e33588 <col:42> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55a112e33550 <col:42> 'int' 1
[B4.10] + [B4.12]
  14: UnaryExprOrTypeTraitExpr 0x55a112e335f8 <lstring.c:56:45, col:56> 'unsigned long' sizeof 'char'
sizeof(char)
  15: BinaryOperator 0x55a112e33618 <lstring.c:56:39, col:56> 'unsigned long' '*'
|-ParenExpr 0x55a112e335c8 <col:39, col:43> 'unsigned long'
| `-BinaryOperator 0x55a112e335a0 <col:40, col:42> 'unsigned long' '+'
|   |-ImplicitCastExpr 0x55a112e33570 <col:40> 'size_t':'unsigned long' <LValueToRValue>
|   | `-DeclRefExpr 0x55a112e33528 <col:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
|   `-ImplicitCastExpr 0x55a112e33588 <col:42> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x55a112e33550 <col:42> 'int' 1
`-UnaryExprOrTypeTraitExpr 0x55a112e335f8 <col:45, col:56> 'unsigned long' sizeof 'char'
([B4.13]) * [B4.14]
  16: UnaryExprOrTypeTraitExpr 0x55a112e33650 <lstring.c:56:58, col:72> 'unsigned long' sizeof 'TString':'union TString'
sizeof(TString)
  17: BinaryOperator 0x55a112e33670 <lstring.c:56:39, col:72> 'unsigned long' '+'
|-BinaryOperator 0x55a112e33618 <col:39, col:56> 'unsigned long' '*'
| |-ParenExpr 0x55a112e335c8 <col:39, col:43> 'unsigned long'
| | `-BinaryOperator 0x55a112e335a0 <col:40, col:42> 'unsigned long' '+'
| |   |-ImplicitCastExpr 0x55a112e33570 <col:40> 'size_t':'unsigned long' <LValueToRValue>
| |   | `-DeclRefExpr 0x55a112e33528 <col:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
| |   `-ImplicitCastExpr 0x55a112e33588 <col:42> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55a112e33550 <col:42> 'int' 1
| `-UnaryExprOrTypeTraitExpr 0x55a112e335f8 <col:45, col:56> 'unsigned long' sizeof 'char'
`-UnaryExprOrTypeTraitExpr 0x55a112e33650 <col:58, col:72> 'unsigned long' sizeof 'TString':'union TString'
[B4.15] + [B4.16]
  18: CallExpr 0x55a112e336d0 <./lmem.h:28:26, col:55> 'void *'
|-ImplicitCastExpr 0x55a112e336b8 <col:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55a112e33438 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55a112df2f48 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
|-ImplicitCastExpr 0x55a112e33718 <lstring.c:56:36> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e33460 <col:36> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
|-ParenExpr 0x55a112e334e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
| `-CStyleCastExpr 0x55a112e334c0 <col:17, col:24> 'void *' <NullToPointer>
|   `-IntegerLiteral 0x55a112e33488 <col:24> 'int' 0
|-ImplicitCastExpr 0x55a112e33730 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
| `-IntegerLiteral 0x55a112e33508 <col:49> 'int' 0
`-ParenExpr 0x55a112e33698 <col:52, col:54> 'unsigned long'
  `-BinaryOperator 0x55a112e33670 <lstring.c:56:39, col:72> 'unsigned long' '+'
    |-BinaryOperator 0x55a112e33618 <col:39, col:56> 'unsigned long' '*'
    | |-ParenExpr 0x55a112e335c8 <col:39, col:43> 'unsigned long'
    | | `-BinaryOperator 0x55a112e335a0 <col:40, col:42> 'unsigned long' '+'
    | |   |-ImplicitCastExpr 0x55a112e33570 <col:40> 'size_t':'unsigned long' <LValueToRValue>
    | |   | `-DeclRefExpr 0x55a112e33528 <col:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
    | |   `-ImplicitCastExpr 0x55a112e33588 <col:42> 'unsigned long' <IntegralCast>
    | |     `-IntegerLiteral 0x55a112e33550 <col:42> 'int' 1
    | `-UnaryExprOrTypeTraitExpr 0x55a112e335f8 <col:45, col:56> 'unsigned long' sizeof 'char'
    `-UnaryExprOrTypeTraitExpr 0x55a112e33650 <col:58, col:72> 'unsigned long' sizeof 'TString':'union TString'
[B4.2]([B4.4], ([B4.6]), [B4.8], ([B4.17]))
  19: CStyleCastExpr 0x55a112e337a8 <./llimits.h:75:23, col:30> 'TString *' <BitCast>
`-ParenExpr 0x55a112e33788 <col:26, col:30> 'void *'
  `-CallExpr 0x55a112e336d0 <./lmem.h:28:26, col:55> 'void *'
    |-ImplicitCastExpr 0x55a112e336b8 <col:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55a112e33438 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55a112df2f48 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
    |-ImplicitCastExpr 0x55a112e33718 <lstring.c:56:36> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55a112e33460 <col:36> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
    |-ParenExpr 0x55a112e334e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
    | `-CStyleCastExpr 0x55a112e334c0 <col:17, col:24> 'void *' <NullToPointer>
    |   `-IntegerLiteral 0x55a112e33488 <col:24> 'int' 0
    |-ImplicitCastExpr 0x55a112e33730 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
    | `-IntegerLiteral 0x55a112e33508 <col:49> 'int' 0
    `-ParenExpr 0x55a112e33698 <col:52, col:54> 'unsigned long'
      `-BinaryOperator 0x55a112e33670 <lstring.c:56:39, col:72> 'unsigned long' '+'
        |-BinaryOperator 0x55a112e33618 <col:39, col:56> 'unsigned long' '*'
        | |-ParenExpr 0x55a112e335c8 <col:39, col:43> 'unsigned long'
        | | `-BinaryOperator 0x55a112e335a0 <col:40, col:42> 'unsigned long' '+'
        | |   |-ImplicitCastExpr 0x55a112e33570 <col:40> 'size_t':'unsigned long' <LValueToRValue>
        | |   | `-DeclRefExpr 0x55a112e33528 <col:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
        | |   `-ImplicitCastExpr 0x55a112e33588 <col:42> 'unsigned long' <IntegralCast>
        | |     `-IntegerLiteral 0x55a112e33550 <col:42> 'int' 1
        | `-UnaryExprOrTypeTraitExpr 0x55a112e335f8 <col:45, col:56> 'unsigned long' sizeof 'char'
        `-UnaryExprOrTypeTraitExpr 0x55a112e33650 <col:58, col:72> 'unsigned long' sizeof 'TString':'union TString'
(TString *)([B4.18]) (CStyleCastExpr, BitCast, TString *)
  20: DeclRefExpr 0x55a112e33410 <lstring.c:56:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  21: BinaryOperator 0x55a112e337f0 <lstring.c:56:3, ./llimits.h:75:31> 'TString *' '='
|-DeclRefExpr 0x55a112e33410 <lstring.c:56:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-ParenExpr 0x55a112e337d0 <./llimits.h:75:22, col:31> 'TString *'
  `-CStyleCastExpr 0x55a112e337a8 <col:23, col:30> 'TString *' <BitCast>
    `-ParenExpr 0x55a112e33788 <col:26, col:30> 'void *'
      `-CallExpr 0x55a112e336d0 <./lmem.h:28:26, col:55> 'void *'
        |-ImplicitCastExpr 0x55a112e336b8 <col:26> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55a112e33438 <col:26> 'void *(lua_State *, void *, size_t, size_t)' Function 0x55a112df2f48 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
        |-ImplicitCastExpr 0x55a112e33718 <lstring.c:56:36> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x55a112e33460 <col:36> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
        |-ParenExpr 0x55a112e334e8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
        | `-CStyleCastExpr 0x55a112e334c0 <col:17, col:24> 'void *' <NullToPointer>
        |   `-IntegerLiteral 0x55a112e33488 <col:24> 'int' 0
        |-ImplicitCastExpr 0x55a112e33730 <./lmem.h:28:49> 'size_t':'unsigned long' <IntegralCast>
        | `-IntegerLiteral 0x55a112e33508 <col:49> 'int' 0
        `-ParenExpr 0x55a112e33698 <col:52, col:54> 'unsigned long'
          `-BinaryOperator 0x55a112e33670 <lstring.c:56:39, col:72> 'unsigned long' '+'
            |-BinaryOperator 0x55a112e33618 <col:39, col:56> 'unsigned long' '*'
            | |-ParenExpr 0x55a112e335c8 <col:39, col:43> 'unsigned long'
            | | `-BinaryOperator 0x55a112e335a0 <col:40, col:42> 'unsigned long' '+'
            | |   |-ImplicitCastExpr 0x55a112e33570 <col:40> 'size_t':'unsigned long' <LValueToRValue>
            | |   | `-DeclRefExpr 0x55a112e33528 <col:40> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
            | |   `-ImplicitCastExpr 0x55a112e33588 <col:42> 'unsigned long' <IntegralCast>
            | |     `-IntegerLiteral 0x55a112e33550 <col:42> 'int' 1
            | `-UnaryExprOrTypeTraitExpr 0x55a112e335f8 <col:45, col:56> 'unsigned long' sizeof 'char'
            `-UnaryExprOrTypeTraitExpr 0x55a112e33650 <col:58, col:72> 'unsigned long' sizeof 'TString':'union TString'
[B4.20] = ([B4.19])
  22: DeclRefExpr 0x55a112e338c8 <lstring.c:57:17> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
l
  23: ImplicitCastExpr 0x55a112e338f0 <lstring.c:57:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e338c8 <col:17> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
[B4.22] (ImplicitCastExpr, LValueToRValue, size_t)
  24: DeclRefExpr 0x55a112e33818 <lstring.c:57:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  25: ImplicitCastExpr 0x55a112e33840 <lstring.c:57:3> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33818 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.24] (ImplicitCastExpr, LValueToRValue, TString *)
  26: MemberExpr 0x55a112e33858 <lstring.c:57:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
`-ImplicitCastExpr 0x55a112e33840 <col:3> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e33818 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.25]->tsv
  27: MemberExpr 0x55a112e33890 <lstring.c:57:3, col:11> 'size_t':'unsigned long' lvalue .len 0x55a112dfaba0
`-MemberExpr 0x55a112e33858 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
  `-ImplicitCastExpr 0x55a112e33840 <col:3> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e33818 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.26].len
  28: BinaryOperator 0x55a112e33908 <lstring.c:57:3, col:17> 'size_t':'unsigned long' '='
|-MemberExpr 0x55a112e33890 <col:3, col:11> 'size_t':'unsigned long' lvalue .len 0x55a112dfaba0
| `-MemberExpr 0x55a112e33858 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
|   `-ImplicitCastExpr 0x55a112e33840 <col:3> 'TString *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e33818 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-ImplicitCastExpr 0x55a112e338f0 <col:17> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55a112e338c8 <col:17> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
[B4.27] = [B4.23]
  29: DeclRefExpr 0x55a112e339e0 <lstring.c:58:18> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
h
  30: ImplicitCastExpr 0x55a112e33a08 <lstring.c:58:18> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x55a112e339e0 <col:18> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.29] (ImplicitCastExpr, LValueToRValue, unsigned int)
  31: DeclRefExpr 0x55a112e33930 <lstring.c:58:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  32: ImplicitCastExpr 0x55a112e33958 <lstring.c:58:3> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33930 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.31] (ImplicitCastExpr, LValueToRValue, TString *)
  33: MemberExpr 0x55a112e33970 <lstring.c:58:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
`-ImplicitCastExpr 0x55a112e33958 <col:3> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e33930 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.32]->tsv
  34: MemberExpr 0x55a112e339a8 <lstring.c:58:3, col:11> 'unsigned int' lvalue .hash 0x55a112dfab48
`-MemberExpr 0x55a112e33970 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
  `-ImplicitCastExpr 0x55a112e33958 <col:3> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e33930 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.33].hash
  35: BinaryOperator 0x55a112e33a20 <lstring.c:58:3, col:18> 'unsigned int' '='
|-MemberExpr 0x55a112e339a8 <col:3, col:11> 'unsigned int' lvalue .hash 0x55a112dfab48
| `-MemberExpr 0x55a112e33970 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
|   `-ImplicitCastExpr 0x55a112e33958 <col:3> 'TString *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e33930 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-ImplicitCastExpr 0x55a112e33a08 <col:18> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x55a112e339e0 <col:18> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.34] = [B4.30]
  36: DeclRefExpr 0x55a112e33af8 <lstring.c:59:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
L
  37: ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.36] (ImplicitCastExpr, LValueToRValue, lua_State *)
  38: MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
`-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.37]->l_G
  39: ImplicitCastExpr 0x55a112e33bb0 <./lgc.h:77:37, col:39> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55a112e33b90 <col:37, col:39> 'global_State *' lvalue
  `-ParenExpr 0x55a112e33b70 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
      `-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
(([B4.38])) (ImplicitCastExpr, LValueToRValue, global_State *)
  40: MemberExpr 0x55a112e33bc8 <./lgc.h:77:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
`-ImplicitCastExpr 0x55a112e33bb0 <col:37, col:39> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55a112e33b90 <col:37, col:39> 'global_State *' lvalue
    `-ParenExpr 0x55a112e33b70 <./lstate.h:130:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
        `-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.39]->currentwhite
  41: ImplicitCastExpr 0x55a112e33d98 <./lgc.h:77:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55a112e33bc8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
  `-ImplicitCastExpr 0x55a112e33bb0 <col:37, col:39> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55a112e33b90 <col:37, col:39> 'global_State *' lvalue
      `-ParenExpr 0x55a112e33b70 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        `-MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
          `-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.40] (ImplicitCastExpr, LValueToRValue, lu_byte)
  42: ImplicitCastExpr 0x55a112e33db0 <./lgc.h:77:37, col:42> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55a112e33d98 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55a112e33bc8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
    `-ImplicitCastExpr 0x55a112e33bb0 <col:37, col:39> 'global_State *' <LValueToRValue>
      `-ParenExpr 0x55a112e33b90 <col:37, col:39> 'global_State *' lvalue
        `-ParenExpr 0x55a112e33b70 <./lstate.h:130:14, col:21> 'global_State *' lvalue
          `-MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
            `-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.41] (ImplicitCastExpr, IntegralCast, int)
  43: IntegerLiteral 0x55a112e33c00 <./lgc.h:30:21> 'int' 1
1
  44: IntegerLiteral 0x55a112e33c20 <./lgc.h:54:19> 'int' 0
0
  45: BinaryOperator 0x55a112e33c60 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e33c00 <col:21> 'int' 1
`-ParenExpr 0x55a112e33c40 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e33c20 <line:54:19> 'int' 0
[B4.43] << ([B4.44])
  46: IntegerLiteral 0x55a112e33ca8 <./lgc.h:30:21> 'int' 1
1
  47: IntegerLiteral 0x55a112e33cc8 <./lgc.h:55:19> 'int' 1
1
  48: BinaryOperator 0x55a112e33d08 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55a112e33ca8 <col:21> 'int' 1
`-ParenExpr 0x55a112e33ce8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55a112e33cc8 <line:55:19> 'int' 1
[B4.46] << ([B4.47])
  49: BinaryOperator 0x55a112e33d50 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55a112e33c88 <col:20, col:27> 'int'
| `-BinaryOperator 0x55a112e33c60 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55a112e33c00 <col:21> 'int' 1
|   `-ParenExpr 0x55a112e33c40 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55a112e33c20 <line:54:19> 'int' 0
`-ParenExpr 0x55a112e33d30 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55a112e33d08 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55a112e33ca8 <col:21> 'int' 1
    `-ParenExpr 0x55a112e33ce8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55a112e33cc8 <line:55:19> 'int' 1
([B4.45]) | ([B4.48])
  50: BinaryOperator 0x55a112e33dc8 <./lgc.h:77:37, line:31:51> 'int' '&'
|-ImplicitCastExpr 0x55a112e33db0 <line:77:37, col:42> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55a112e33d98 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55a112e33bc8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
|     `-ImplicitCastExpr 0x55a112e33bb0 <col:37, col:39> 'global_State *' <LValueToRValue>
|       `-ParenExpr 0x55a112e33b90 <col:37, col:39> 'global_State *' lvalue
|         `-ParenExpr 0x55a112e33b70 <./lstate.h:130:14, col:21> 'global_State *' lvalue
|           `-MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
|             `-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
|               `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
`-ParenExpr 0x55a112e33d78 <./lgc.h:31:25, col:51> 'int'
  `-BinaryOperator 0x55a112e33d50 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55a112e33c88 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55a112e33c60 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55a112e33c00 <col:21> 'int' 1
    |   `-ParenExpr 0x55a112e33c40 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55a112e33c20 <line:54:19> 'int' 0
    `-ParenExpr 0x55a112e33d30 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55a112e33d08 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55a112e33ca8 <col:21> 'int' 1
        `-ParenExpr 0x55a112e33ce8 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55a112e33cc8 <line:55:19> 'int' 1
[B4.42] & ([B4.49])
  51: CStyleCastExpr 0x55a112e33e50 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55a112e33e30 <col:26, col:30> 'int'
  `-BinaryOperator 0x55a112e33dc8 <./lgc.h:77:37, line:31:51> 'int' '&'
    |-ImplicitCastExpr 0x55a112e33db0 <line:77:37, col:42> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55a112e33d98 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-MemberExpr 0x55a112e33bc8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
    |     `-ImplicitCastExpr 0x55a112e33bb0 <col:37, col:39> 'global_State *' <LValueToRValue>
    |       `-ParenExpr 0x55a112e33b90 <col:37, col:39> 'global_State *' lvalue
    |         `-ParenExpr 0x55a112e33b70 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    |           `-MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    |             `-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
    |               `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
    `-ParenExpr 0x55a112e33d78 <./lgc.h:31:25, col:51> 'int'
      `-BinaryOperator 0x55a112e33d50 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55a112e33c88 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55a112e33c60 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55a112e33c00 <col:21> 'int' 1
        |   `-ParenExpr 0x55a112e33c40 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55a112e33c20 <line:54:19> 'int' 0
        `-ParenExpr 0x55a112e33d30 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55a112e33d08 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55a112e33ca8 <col:21> 'int' 1
            `-ParenExpr 0x55a112e33ce8 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55a112e33cc8 <line:55:19> 'int' 1
(lu_byte)([B4.50]) (CStyleCastExpr, IntegralCast, lu_byte)
  52: DeclRefExpr 0x55a112e33a48 <lstring.c:59:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  53: ImplicitCastExpr 0x55a112e33a70 <lstring.c:59:3> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33a48 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.52] (ImplicitCastExpr, LValueToRValue, TString *)
  54: MemberExpr 0x55a112e33a88 <lstring.c:59:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
`-ImplicitCastExpr 0x55a112e33a70 <col:3> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e33a48 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.53]->tsv
  55: MemberExpr 0x55a112e33ac0 <lstring.c:59:3, col:11> 'lu_byte':'unsigned char' lvalue .marked 0x55a112dfaa90
`-MemberExpr 0x55a112e33a88 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
  `-ImplicitCastExpr 0x55a112e33a70 <col:3> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e33a48 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.54].marked
  56: BinaryOperator 0x55a112e33e98 <lstring.c:59:3, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55a112e33ac0 <lstring.c:59:3, col:11> 'lu_byte':'unsigned char' lvalue .marked 0x55a112dfaa90
| `-MemberExpr 0x55a112e33a88 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
|   `-ImplicitCastExpr 0x55a112e33a70 <col:3> 'TString *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e33a48 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-ParenExpr 0x55a112e33e78 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55a112e33e50 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55a112e33e30 <col:26, col:30> 'int'
      `-BinaryOperator 0x55a112e33dc8 <./lgc.h:77:37, line:31:51> 'int' '&'
        |-ImplicitCastExpr 0x55a112e33db0 <line:77:37, col:42> 'int' <IntegralCast>
        | `-ImplicitCastExpr 0x55a112e33d98 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
        |   `-MemberExpr 0x55a112e33bc8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55a112e170d0
        |     `-ImplicitCastExpr 0x55a112e33bb0 <col:37, col:39> 'global_State *' <LValueToRValue>
        |       `-ParenExpr 0x55a112e33b90 <col:37, col:39> 'global_State *' lvalue
        |         `-ParenExpr 0x55a112e33b70 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        |           `-MemberExpr 0x55a112e33b38 <lstring.c:59:33, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
        |             `-ImplicitCastExpr 0x55a112e33b20 <lstring.c:59:33> 'lua_State *' <LValueToRValue>
        |               `-DeclRefExpr 0x55a112e33af8 <col:33> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
        `-ParenExpr 0x55a112e33d78 <./lgc.h:31:25, col:51> 'int'
          `-BinaryOperator 0x55a112e33d50 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55a112e33c88 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55a112e33c60 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55a112e33c00 <col:21> 'int' 1
            |   `-ParenExpr 0x55a112e33c40 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55a112e33c20 <line:54:19> 'int' 0
            `-ParenExpr 0x55a112e33d30 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55a112e33d08 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55a112e33ca8 <col:21> 'int' 1
                `-ParenExpr 0x55a112e33ce8 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55a112e33cc8 <line:55:19> 'int' 1
[B4.55] = ([B4.51])
  57: IntegerLiteral 0x55a112e33f70 <./lua.h:78:22> 'int' 4
4
  58: ImplicitCastExpr 0x55a112e33f90 <./lua.h:78:22> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x55a112e33f70 <col:22> 'int' 4
[B4.57] (ImplicitCastExpr, IntegralCast, lu_byte)
  59: DeclRefExpr 0x55a112e33ec0 <lstring.c:60:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  60: ImplicitCastExpr 0x55a112e33ee8 <lstring.c:60:3> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33ec0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.59] (ImplicitCastExpr, LValueToRValue, TString *)
  61: MemberExpr 0x55a112e33f00 <lstring.c:60:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
`-ImplicitCastExpr 0x55a112e33ee8 <col:3> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e33ec0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.60]->tsv
  62: MemberExpr 0x55a112e33f38 <lstring.c:60:3, col:11> 'lu_byte':'unsigned char' lvalue .tt 0x55a112dfaa38
`-MemberExpr 0x55a112e33f00 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
  `-ImplicitCastExpr 0x55a112e33ee8 <col:3> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e33ec0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.61].tt
  63: BinaryOperator 0x55a112e33fa8 <lstring.c:60:3, ./lua.h:78:22> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55a112e33f38 <lstring.c:60:3, col:11> 'lu_byte':'unsigned char' lvalue .tt 0x55a112dfaa38
| `-MemberExpr 0x55a112e33f00 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
|   `-ImplicitCastExpr 0x55a112e33ee8 <col:3> 'TString *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e33ec0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-ImplicitCastExpr 0x55a112e33f90 <./lua.h:78:22> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x55a112e33f70 <col:22> 'int' 4
[B4.62] = [B4.58]
  64: IntegerLiteral 0x55a112e34080 <lstring.c:61:22> 'int' 0
0
  65: ImplicitCastExpr 0x55a112e340a0 <lstring.c:61:22> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x55a112e34080 <col:22> 'int' 0
[B4.64] (ImplicitCastExpr, IntegralCast, lu_byte)
  66: DeclRefExpr 0x55a112e33fd0 <lstring.c:61:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  67: ImplicitCastExpr 0x55a112e33ff8 <lstring.c:61:3> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33fd0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.66] (ImplicitCastExpr, LValueToRValue, TString *)
  68: MemberExpr 0x55a112e34010 <lstring.c:61:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
`-ImplicitCastExpr 0x55a112e33ff8 <col:3> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e33fd0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.67]->tsv
  69: MemberExpr 0x55a112e34048 <lstring.c:61:3, col:11> 'lu_byte':'unsigned char' lvalue .reserved 0x55a112dfaae8
`-MemberExpr 0x55a112e34010 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
  `-ImplicitCastExpr 0x55a112e33ff8 <col:3> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e33fd0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.68].reserved
  70: BinaryOperator 0x55a112e340b8 <lstring.c:61:3, col:22> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55a112e34048 <col:3, col:11> 'lu_byte':'unsigned char' lvalue .reserved 0x55a112dfaae8
| `-MemberExpr 0x55a112e34010 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
|   `-ImplicitCastExpr 0x55a112e33ff8 <col:3> 'TString *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e33fd0 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-ImplicitCastExpr 0x55a112e340a0 <col:22> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x55a112e34080 <col:22> 'int' 0
[B4.69] = [B4.65]
  71: DeclRefExpr 0x55a112e340e0 <lstring.c:62:3> 'void *(void *, const void *, unsigned long)' Function 0x55a112d19760 'memcpy' 'void *(void *, const void *, unsigned long)'
memcpy
  72: ImplicitCastExpr 0x55a112e34298 <lstring.c:62:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55a112e340e0 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x55a112d19760 'memcpy' 'void *(void *, const void *, unsigned long)'
[B4.71] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
  73: DeclRefExpr 0x55a112e34108 <lstring.c:62:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  74: ImplicitCastExpr 0x55a112e34150 <lstring.c:62:10> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e34108 <col:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.73] (ImplicitCastExpr, LValueToRValue, TString *)
  75: IntegerLiteral 0x55a112e34130 <lstring.c:62:13> 'int' 1
1
  76: BinaryOperator 0x55a112e34168 <lstring.c:62:10, col:13> 'TString *' '+'
|-ImplicitCastExpr 0x55a112e34150 <col:10> 'TString *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e34108 <col:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-IntegerLiteral 0x55a112e34130 <col:13> 'int' 1
[B4.74] + [B4.75]
  77: ImplicitCastExpr 0x55a112e342f0 <lstring.c:62:10, col:13> 'void *' <BitCast>
`-BinaryOperator 0x55a112e34168 <col:10, col:13> 'TString *' '+'
  |-ImplicitCastExpr 0x55a112e34150 <col:10> 'TString *' <LValueToRValue>
  | `-DeclRefExpr 0x55a112e34108 <col:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
  `-IntegerLiteral 0x55a112e34130 <col:13> 'int' 1
[B4.76] (ImplicitCastExpr, BitCast, void *)
  78: DeclRefExpr 0x55a112e34190 <lstring.c:62:16> 'const char *' lvalue ParmVar 0x55a112e32b38 'str' 'const char *'
str
  79: ImplicitCastExpr 0x55a112e34308 <lstring.c:62:16> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55a112e34190 <col:16> 'const char *' lvalue ParmVar 0x55a112e32b38 'str' 'const char *'
[B4.78] (ImplicitCastExpr, LValueToRValue, const char *)
  80: ImplicitCastExpr 0x55a112e34320 <lstring.c:62:16> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55a112e34308 <col:16> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e34190 <col:16> 'const char *' lvalue ParmVar 0x55a112e32b38 'str' 'const char *'
[B4.79] (ImplicitCastExpr, BitCast, const void *)
  81: DeclRefExpr 0x55a112e341b8 <lstring.c:62:21> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
l
  82: ImplicitCastExpr 0x55a112e34210 <lstring.c:62:21> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e341b8 <col:21> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
[B4.81] (ImplicitCastExpr, LValueToRValue, size_t)
  83: UnaryExprOrTypeTraitExpr 0x55a112e341f0 <lstring.c:62:23, col:34> 'unsigned long' sizeof 'char'
sizeof(char)
  84: BinaryOperator 0x55a112e34228 <lstring.c:62:21, col:34> 'unsigned long' '*'
|-ImplicitCastExpr 0x55a112e34210 <col:21> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55a112e341b8 <col:21> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
`-UnaryExprOrTypeTraitExpr 0x55a112e341f0 <col:23, col:34> 'unsigned long' sizeof 'char'
[B4.82] * [B4.83]
  85: CallExpr 0x55a112e342b0 <lstring.c:62:3, col:35> 'void *'
|-ImplicitCastExpr 0x55a112e34298 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55a112e340e0 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x55a112d19760 'memcpy' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55a112e342f0 <col:10, col:13> 'void *' <BitCast>
| `-BinaryOperator 0x55a112e34168 <col:10, col:13> 'TString *' '+'
|   |-ImplicitCastExpr 0x55a112e34150 <col:10> 'TString *' <LValueToRValue>
|   | `-DeclRefExpr 0x55a112e34108 <col:10> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
|   `-IntegerLiteral 0x55a112e34130 <col:13> 'int' 1
|-ImplicitCastExpr 0x55a112e34320 <col:16> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55a112e34308 <col:16> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55a112e34190 <col:16> 'const char *' lvalue ParmVar 0x55a112e32b38 'str' 'const char *'
`-BinaryOperator 0x55a112e34228 <col:21, col:34> 'unsigned long' '*'
  |-ImplicitCastExpr 0x55a112e34210 <col:21> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55a112e341b8 <col:21> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x55a112e341f0 <col:23, col:34> 'unsigned long' sizeof 'char'
[B4.72]([B4.77], [B4.80], [B4.84])
  86: CharacterLiteral 0x55a112e34b08 <lstring.c:63:25> 'int' 0
'\x00'
  87: ImplicitCastExpr 0x55a112e34b20 <lstring.c:63:25> 'char' <IntegralCast>
`-CharacterLiteral 0x55a112e34b08 <col:25> 'int' 0
[B4.86] (ImplicitCastExpr, IntegralCast, char)
  88: DeclRefExpr 0x55a112e34338 <lstring.c:63:13> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
  89: ImplicitCastExpr 0x55a112e349b0 <lstring.c:63:13> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e34338 <col:13> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.88] (ImplicitCastExpr, LValueToRValue, TString *)
  90: IntegerLiteral 0x55a112e34360 <lstring.c:63:16> 'int' 1
1
  91: BinaryOperator 0x55a112e349c8 <lstring.c:63:13, col:16> 'TString *' '+'
|-ImplicitCastExpr 0x55a112e349b0 <col:13> 'TString *' <LValueToRValue>
| `-DeclRefExpr 0x55a112e34338 <col:13> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-IntegerLiteral 0x55a112e34360 <col:16> 'int' 1
[B4.89] + [B4.90]
  92: CStyleCastExpr 0x55a112e34a58 <lstring.c:63:4, col:17> 'char *' <BitCast>
`-ParenExpr 0x55a112e34a38 <col:12, col:17> 'TString *'
  `-BinaryOperator 0x55a112e349c8 <col:13, col:16> 'TString *' '+'
    |-ImplicitCastExpr 0x55a112e349b0 <col:13> 'TString *' <LValueToRValue>
    | `-DeclRefExpr 0x55a112e34338 <col:13> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
    `-IntegerLiteral 0x55a112e34360 <col:16> 'int' 1
(char *)([B4.91]) (CStyleCastExpr, BitCast, char *)
  93: DeclRefExpr 0x55a112e34aa0 <lstring.c:63:20> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
l
  94: ImplicitCastExpr 0x55a112e34ac8 <lstring.c:63:20> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e34aa0 <col:20> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
[B4.93] (ImplicitCastExpr, LValueToRValue, size_t)
  95: ArraySubscriptExpr 0x55a112e34ae0 <lstring.c:63:3, col:21> 'char' lvalue
|-ParenExpr 0x55a112e34a80 <col:3, col:18> 'char *'
| `-CStyleCastExpr 0x55a112e34a58 <col:4, col:17> 'char *' <BitCast>
|   `-ParenExpr 0x55a112e34a38 <col:12, col:17> 'TString *'
|     `-BinaryOperator 0x55a112e349c8 <col:13, col:16> 'TString *' '+'
|       |-ImplicitCastExpr 0x55a112e349b0 <col:13> 'TString *' <LValueToRValue>
|       | `-DeclRefExpr 0x55a112e34338 <col:13> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
|       `-IntegerLiteral 0x55a112e34360 <col:16> 'int' 1
`-ImplicitCastExpr 0x55a112e34ac8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55a112e34aa0 <col:20> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
([B4.92])[[B4.94]]
  96: BinaryOperator 0x55a112e34b38 <lstring.c:63:3, col:25> 'char' '='
|-ArraySubscriptExpr 0x55a112e34ae0 <col:3, col:21> 'char' lvalue
| |-ParenExpr 0x55a112e34a80 <col:3, col:18> 'char *'
| | `-CStyleCastExpr 0x55a112e34a58 <col:4, col:17> 'char *' <BitCast>
| |   `-ParenExpr 0x55a112e34a38 <col:12, col:17> 'TString *'
| |     `-BinaryOperator 0x55a112e349c8 <col:13, col:16> 'TString *' '+'
| |       |-ImplicitCastExpr 0x55a112e349b0 <col:13> 'TString *' <LValueToRValue>
| |       | `-DeclRefExpr 0x55a112e34338 <col:13> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
| |       `-IntegerLiteral 0x55a112e34360 <col:16> 'int' 1
| `-ImplicitCastExpr 0x55a112e34ac8 <col:20> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55a112e34aa0 <col:20> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e34b20 <col:25> 'char' <IntegralCast>
  `-CharacterLiteral 0x55a112e34b08 <col:25> 'int' 0
[B4.95] = [B4.87]
  97: DeclRefExpr 0x55a112e34b88 <lstring.c:64:11> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
L
  98: ImplicitCastExpr 0x55a112e34bb0 <lstring.c:64:11> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e34b88 <col:11> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.97] (ImplicitCastExpr, LValueToRValue, lua_State *)
  99: MemberExpr 0x55a112e34bc8 <lstring.c:64:11, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
`-ImplicitCastExpr 0x55a112e34bb0 <lstring.c:64:11> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e34b88 <col:11> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.98]->l_G
 100: ImplicitCastExpr 0x55a112e34c20 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55a112e34c00 <col:14, col:21> 'global_State *' lvalue
  `-MemberExpr 0x55a112e34bc8 <lstring.c:64:11, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
    `-ImplicitCastExpr 0x55a112e34bb0 <lstring.c:64:11> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e34b88 <col:11> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
([B4.99]) (ImplicitCastExpr, LValueToRValue, global_State *)
 101: MemberExpr 0x55a112e34c38 <./lstate.h:130:14, lstring.c:64:15> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
`-ImplicitCastExpr 0x55a112e34c20 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55a112e34c00 <col:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x55a112e34bc8 <lstring.c:64:11, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
      `-ImplicitCastExpr 0x55a112e34bb0 <lstring.c:64:11> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55a112e34b88 <col:11> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.100]->strt
 102: UnaryOperator 0x55a112e34c70 <lstring.c:64:8, col:15> 'stringtable *' prefix '&'
`-MemberExpr 0x55a112e34c38 <./lstate.h:130:14, lstring.c:64:15> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
  `-ImplicitCastExpr 0x55a112e34c20 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55a112e34c00 <col:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x55a112e34bc8 <lstring.c:64:11, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
        `-ImplicitCastExpr 0x55a112e34bb0 <lstring.c:64:11> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55a112e34b88 <col:11> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
&[B4.101]
 103: DeclRefExpr 0x55a112e34b60 <lstring.c:64:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
 104: BinaryOperator 0x55a112e34c90 <lstring.c:64:3, col:15> 'stringtable *' '='
|-DeclRefExpr 0x55a112e34b60 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
`-UnaryOperator 0x55a112e34c70 <col:8, col:15> 'stringtable *' prefix '&'
  `-MemberExpr 0x55a112e34c38 <./lstate.h:130:14, lstring.c:64:15> 'stringtable':'struct stringtable' lvalue ->strt 0x55a112e16fc0
    `-ImplicitCastExpr 0x55a112e34c20 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
      `-ParenExpr 0x55a112e34c00 <col:14, col:21> 'global_State *' lvalue
        `-MemberExpr 0x55a112e34bc8 <lstring.c:64:11, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55a112e19738
          `-ImplicitCastExpr 0x55a112e34bb0 <lstring.c:64:11> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x55a112e34b88 <col:11> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B4.103] = [B4.102]
 105: DeclRefExpr 0x55a112e34ce0 <lstring.c:65:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
h
 106: ImplicitCastExpr 0x55a112e34e40 <./lobject.h:356:44, col:46> 'unsigned int' <LValueToRValue>
`-ParenExpr 0x55a112e34d08 <col:44, col:46> 'unsigned int' lvalue
  `-DeclRefExpr 0x55a112e34ce0 <lstring.c:65:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
([B4.105]) (ImplicitCastExpr, LValueToRValue, unsigned int)
 107: DeclRefExpr 0x55a112e34d28 <lstring.c:65:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
 108: ImplicitCastExpr 0x55a112e34d50 <lstring.c:65:15> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.107] (ImplicitCastExpr, LValueToRValue, stringtable *)
 109: MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
`-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.108]->size
 110: ImplicitCastExpr 0x55a112e34de0 <./lobject.h:356:51, col:56> 'int' <LValueToRValue>
`-ParenExpr 0x55a112e34da0 <col:51, col:56> 'int' lvalue
  `-MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
    `-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
([B4.109]) (ImplicitCastExpr, LValueToRValue, int)
 111: IntegerLiteral 0x55a112e34dc0 <./lobject.h:356:58> 'int' 1
1
 112: BinaryOperator 0x55a112e34df8 <./lobject.h:356:51, col:58> 'int' '-'
|-ImplicitCastExpr 0x55a112e34de0 <col:51, col:56> 'int' <LValueToRValue>
| `-ParenExpr 0x55a112e34da0 <col:51, col:56> 'int' lvalue
|   `-MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
|     `-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
|       `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
`-IntegerLiteral 0x55a112e34dc0 <./lobject.h:356:58> 'int' 1
[B4.110] - [B4.111]
 113: ImplicitCastExpr 0x55a112e34e58 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55a112e34e20 <col:50, col:59> 'int'
  `-BinaryOperator 0x55a112e34df8 <col:51, col:58> 'int' '-'
    |-ImplicitCastExpr 0x55a112e34de0 <col:51, col:56> 'int' <LValueToRValue>
    | `-ParenExpr 0x55a112e34da0 <col:51, col:56> 'int' lvalue
    |   `-MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
    |     `-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
    |       `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
    `-IntegerLiteral 0x55a112e34dc0 <./lobject.h:356:58> 'int' 1
([B4.112]) (ImplicitCastExpr, IntegralCast, unsigned int)
 114: BinaryOperator 0x55a112e34e70 <./lobject.h:356:44, col:59> 'unsigned int' '&'
|-ImplicitCastExpr 0x55a112e34e40 <col:44, col:46> 'unsigned int' <LValueToRValue>
| `-ParenExpr 0x55a112e34d08 <col:44, col:46> 'unsigned int' lvalue
|   `-DeclRefExpr 0x55a112e34ce0 <lstring.c:65:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
`-ImplicitCastExpr 0x55a112e34e58 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55a112e34e20 <col:50, col:59> 'int'
    `-BinaryOperator 0x55a112e34df8 <col:51, col:58> 'int' '-'
      |-ImplicitCastExpr 0x55a112e34de0 <col:51, col:56> 'int' <LValueToRValue>
      | `-ParenExpr 0x55a112e34da0 <col:51, col:56> 'int' lvalue
      |   `-MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
      |     `-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
      |       `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
      `-IntegerLiteral 0x55a112e34dc0 <./lobject.h:356:58> 'int' 1
[B4.106] & [B4.113]
 115: CStyleCastExpr 0x55a112e34f00 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x55a112e34ee0 <col:26, col:30> 'unsigned int'
  `-BinaryOperator 0x55a112e34e70 <./lobject.h:356:44, col:59> 'unsigned int' '&'
    |-ImplicitCastExpr 0x55a112e34e40 <col:44, col:46> 'unsigned int' <LValueToRValue>
    | `-ParenExpr 0x55a112e34d08 <col:44, col:46> 'unsigned int' lvalue
    |   `-DeclRefExpr 0x55a112e34ce0 <lstring.c:65:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
    `-ImplicitCastExpr 0x55a112e34e58 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
      `-ParenExpr 0x55a112e34e20 <col:50, col:59> 'int'
        `-BinaryOperator 0x55a112e34df8 <col:51, col:58> 'int' '-'
          |-ImplicitCastExpr 0x55a112e34de0 <col:51, col:56> 'int' <LValueToRValue>
          | `-ParenExpr 0x55a112e34da0 <col:51, col:56> 'int' lvalue
          |   `-MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
          |     `-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
          |       `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
          `-IntegerLiteral 0x55a112e34dc0 <./lobject.h:356:58> 'int' 1
(int)([B4.114]) (CStyleCastExpr, IntegralCast, int)
 116: ImplicitCastExpr 0x55a112e34fa8 <./lobject.h:356:2, col:63> 'unsigned int' <IntegralCast>
`-ParenExpr 0x55a112e34f88 <col:2, col:63> 'int'
  `-ParenExpr 0x55a112e34f68 <./llimits.h:63:25, col:27> 'int'
    `-ParenExpr 0x55a112e34f48 <./lobject.h:356:33, col:61> 'int'
      `-ParenExpr 0x55a112e34f28 <./llimits.h:75:22, col:31> 'int'
        `-CStyleCastExpr 0x55a112e34f00 <col:23, col:30> 'int' <IntegralCast>
          `-ParenExpr 0x55a112e34ee0 <col:26, col:30> 'unsigned int'
            `-BinaryOperator 0x55a112e34e70 <./lobject.h:356:44, col:59> 'unsigned int' '&'
              |-ImplicitCastExpr 0x55a112e34e40 <col:44, col:46> 'unsigned int' <LValueToRValue>
              | `-ParenExpr 0x55a112e34d08 <col:44, col:46> 'unsigned int' lvalue
              |   `-DeclRefExpr 0x55a112e34ce0 <lstring.c:65:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
              `-ImplicitCastExpr 0x55a112e34e58 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
                `-ParenExpr 0x55a112e34e20 <col:50, col:59> 'int'
                  `-BinaryOperator 0x55a112e34df8 <col:51, col:58> 'int' '-'
                    |-ImplicitCastExpr 0x55a112e34de0 <col:51, col:56> 'int' <LValueToRValue>
                    | `-ParenExpr 0x55a112e34da0 <col:51, col:56> 'int' lvalue
                    |   `-MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
                    |     `-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
                    |       `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
                    `-IntegerLiteral 0x55a112e34dc0 <./lobject.h:356:58> 'int' 1
(((([B4.115])))) (ImplicitCastExpr, IntegralCast, unsigned int)
 117: DeclRefExpr 0x55a112e34cb8 <lstring.c:65:3> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
h
 118: BinaryOperator 0x55a112e34fc0 <lstring.c:65:3, ./lobject.h:356:63> 'unsigned int' '='
|-DeclRefExpr 0x55a112e34cb8 <lstring.c:65:3> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
`-ImplicitCastExpr 0x55a112e34fa8 <./lobject.h:356:2, col:63> 'unsigned int' <IntegralCast>
  `-ParenExpr 0x55a112e34f88 <col:2, col:63> 'int'
    `-ParenExpr 0x55a112e34f68 <./llimits.h:63:25, col:27> 'int'
      `-ParenExpr 0x55a112e34f48 <./lobject.h:356:33, col:61> 'int'
        `-ParenExpr 0x55a112e34f28 <./llimits.h:75:22, col:31> 'int'
          `-CStyleCastExpr 0x55a112e34f00 <col:23, col:30> 'int' <IntegralCast>
            `-ParenExpr 0x55a112e34ee0 <col:26, col:30> 'unsigned int'
              `-BinaryOperator 0x55a112e34e70 <./lobject.h:356:44, col:59> 'unsigned int' '&'
                |-ImplicitCastExpr 0x55a112e34e40 <col:44, col:46> 'unsigned int' <LValueToRValue>
                | `-ParenExpr 0x55a112e34d08 <col:44, col:46> 'unsigned int' lvalue
                |   `-DeclRefExpr 0x55a112e34ce0 <lstring.c:65:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
                `-ImplicitCastExpr 0x55a112e34e58 <./lobject.h:356:50, col:59> 'unsigned int' <IntegralCast>
                  `-ParenExpr 0x55a112e34e20 <col:50, col:59> 'int'
                    `-BinaryOperator 0x55a112e34df8 <col:51, col:58> 'int' '-'
                      |-ImplicitCastExpr 0x55a112e34de0 <col:51, col:56> 'int' <LValueToRValue>
                      | `-ParenExpr 0x55a112e34da0 <col:51, col:56> 'int' lvalue
                      |   `-MemberExpr 0x55a112e34d68 <lstring.c:65:15, col:19> 'int' lvalue ->size 0x55a112e169c8
                      |     `-ImplicitCastExpr 0x55a112e34d50 <col:15> 'stringtable *' <LValueToRValue>
                      |       `-DeclRefExpr 0x55a112e34d28 <col:15> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
                      `-IntegerLiteral 0x55a112e34dc0 <./lobject.h:356:58> 'int' 1
[B4.117] = [B4.116]
 119: DeclRefExpr 0x55a112e35098 <lstring.c:66:18> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
 120: ImplicitCastExpr 0x55a112e350c0 <lstring.c:66:18> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e35098 <col:18> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.119] (ImplicitCastExpr, LValueToRValue, stringtable *)
 121: MemberExpr 0x55a112e350d8 <lstring.c:66:18, col:22> 'GCObject **' lvalue ->hash 0x55a112e16910
`-ImplicitCastExpr 0x55a112e350c0 <col:18> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e35098 <col:18> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.120]->hash
 122: ImplicitCastExpr 0x55a112e35138 <lstring.c:66:18, col:22> 'GCObject **' <LValueToRValue>
`-MemberExpr 0x55a112e350d8 <col:18, col:22> 'GCObject **' lvalue ->hash 0x55a112e16910
  `-ImplicitCastExpr 0x55a112e350c0 <col:18> 'stringtable *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e35098 <col:18> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.121] (ImplicitCastExpr, LValueToRValue, GCObject **)
 123: DeclRefExpr 0x55a112e35110 <lstring.c:66:27> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
h
 124: ImplicitCastExpr 0x55a112e35150 <lstring.c:66:27> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x55a112e35110 <col:27> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.123] (ImplicitCastExpr, LValueToRValue, unsigned int)
 125: ArraySubscriptExpr 0x55a112e35168 <lstring.c:66:18, col:28> 'GCObject *' lvalue
|-ImplicitCastExpr 0x55a112e35138 <col:18, col:22> 'GCObject **' <LValueToRValue>
| `-MemberExpr 0x55a112e350d8 <col:18, col:22> 'GCObject **' lvalue ->hash 0x55a112e16910
|   `-ImplicitCastExpr 0x55a112e350c0 <col:18> 'stringtable *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e35098 <col:18> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
`-ImplicitCastExpr 0x55a112e35150 <col:27> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x55a112e35110 <col:27> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.122][[B4.124]]
 126: ImplicitCastExpr 0x55a112e35190 <lstring.c:66:18, col:28> 'GCObject *' <LValueToRValue>
`-ArraySubscriptExpr 0x55a112e35168 <col:18, col:28> 'GCObject *' lvalue
  |-ImplicitCastExpr 0x55a112e35138 <col:18, col:22> 'GCObject **' <LValueToRValue>
  | `-MemberExpr 0x55a112e350d8 <col:18, col:22> 'GCObject **' lvalue ->hash 0x55a112e16910
  |   `-ImplicitCastExpr 0x55a112e350c0 <col:18> 'stringtable *' <LValueToRValue>
  |     `-DeclRefExpr 0x55a112e35098 <col:18> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
  `-ImplicitCastExpr 0x55a112e35150 <col:27> 'unsigned int' <LValueToRValue>
    `-DeclRefExpr 0x55a112e35110 <col:27> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.125] (ImplicitCastExpr, LValueToRValue, GCObject *)
 127: DeclRefExpr 0x55a112e34fe8 <lstring.c:66:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
 128: ImplicitCastExpr 0x55a112e35010 <lstring.c:66:3> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x55a112e34fe8 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.127] (ImplicitCastExpr, LValueToRValue, TString *)
 129: MemberExpr 0x55a112e35028 <lstring.c:66:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
`-ImplicitCastExpr 0x55a112e35010 <col:3> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e34fe8 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.128]->tsv
 130: MemberExpr 0x55a112e35060 <lstring.c:66:3, col:11> 'GCObject *' lvalue .next 0x55a112dfa9e0
`-MemberExpr 0x55a112e35028 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
  `-ImplicitCastExpr 0x55a112e35010 <col:3> 'TString *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e34fe8 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.129].next
 131: BinaryOperator 0x55a112e351a8 <lstring.c:66:3, col:28> 'GCObject *' '='
|-MemberExpr 0x55a112e35060 <col:3, col:11> 'GCObject *' lvalue .next 0x55a112dfa9e0
| `-MemberExpr 0x55a112e35028 <col:3, col:7> 'struct (anonymous struct at ./lobject.h:201:3)':'struct TString::(anonymous at ./lobject.h:201:3)' lvalue ->tsv 0x55a112dfac40
|   `-ImplicitCastExpr 0x55a112e35010 <col:3> 'TString *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e34fe8 <col:3> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
`-ImplicitCastExpr 0x55a112e35190 <col:18, col:28> 'GCObject *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55a112e35168 <col:18, col:28> 'GCObject *' lvalue
    |-ImplicitCastExpr 0x55a112e35138 <col:18, col:22> 'GCObject **' <LValueToRValue>
    | `-MemberExpr 0x55a112e350d8 <col:18, col:22> 'GCObject **' lvalue ->hash 0x55a112e16910
    |   `-ImplicitCastExpr 0x55a112e350c0 <col:18> 'stringtable *' <LValueToRValue>
    |     `-DeclRefExpr 0x55a112e35098 <col:18> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
    `-ImplicitCastExpr 0x55a112e35150 <col:27> 'unsigned int' <LValueToRValue>
      `-DeclRefExpr 0x55a112e35110 <col:27> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.130] = [B4.126]
 132: DeclRefExpr 0x55a112e352c8 <lstring.c:67:25> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
ts
 133: ImplicitCastExpr 0x55a112e35370 <./llimits.h:75:26, col:30> 'TString *' <LValueToRValue>
`-ParenExpr 0x55a112e35350 <col:26, col:30> 'TString *' lvalue
  `-ParenExpr 0x55a112e352f0 <./lstate.h:162:38, col:40> 'TString *' lvalue
    `-DeclRefExpr 0x55a112e352c8 <lstring.c:67:25> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
(([B4.132])) (ImplicitCastExpr, LValueToRValue, TString *)
 134: CStyleCastExpr 0x55a112e35388 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55a112e35370 <col:26, col:30> 'TString *' <LValueToRValue>
  `-ParenExpr 0x55a112e35350 <col:26, col:30> 'TString *' lvalue
    `-ParenExpr 0x55a112e352f0 <./lstate.h:162:38, col:40> 'TString *' lvalue
      `-DeclRefExpr 0x55a112e352c8 <lstring.c:67:25> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
(GCObject *)[B4.133] (CStyleCastExpr, BitCast, GCObject *)
 135: DeclRefExpr 0x55a112e351d0 <lstring.c:67:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
 136: ImplicitCastExpr 0x55a112e351f8 <lstring.c:67:3> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e351d0 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.135] (ImplicitCastExpr, LValueToRValue, stringtable *)
 137: MemberExpr 0x55a112e35210 <lstring.c:67:3, col:7> 'GCObject **' lvalue ->hash 0x55a112e16910
`-ImplicitCastExpr 0x55a112e351f8 <col:3> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e351d0 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.136]->hash
 138: ImplicitCastExpr 0x55a112e35270 <lstring.c:67:3, col:7> 'GCObject **' <LValueToRValue>
`-MemberExpr 0x55a112e35210 <col:3, col:7> 'GCObject **' lvalue ->hash 0x55a112e16910
  `-ImplicitCastExpr 0x55a112e351f8 <col:3> 'stringtable *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e351d0 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.137] (ImplicitCastExpr, LValueToRValue, GCObject **)
 139: DeclRefExpr 0x55a112e35248 <lstring.c:67:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
h
 140: ImplicitCastExpr 0x55a112e35288 <lstring.c:67:12> 'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x55a112e35248 <col:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.139] (ImplicitCastExpr, LValueToRValue, unsigned int)
 141: ArraySubscriptExpr 0x55a112e352a0 <lstring.c:67:3, col:13> 'GCObject *' lvalue
|-ImplicitCastExpr 0x55a112e35270 <col:3, col:7> 'GCObject **' <LValueToRValue>
| `-MemberExpr 0x55a112e35210 <col:3, col:7> 'GCObject **' lvalue ->hash 0x55a112e16910
|   `-ImplicitCastExpr 0x55a112e351f8 <col:3> 'stringtable *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e351d0 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
`-ImplicitCastExpr 0x55a112e35288 <col:12> 'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x55a112e35248 <col:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
[B4.138][[B4.140]]
 142: BinaryOperator 0x55a112e353f0 <lstring.c:67:3, ./lstate.h:162:42> 'GCObject *' '='
|-ArraySubscriptExpr 0x55a112e352a0 <lstring.c:67:3, col:13> 'GCObject *' lvalue
| |-ImplicitCastExpr 0x55a112e35270 <col:3, col:7> 'GCObject **' <LValueToRValue>
| | `-MemberExpr 0x55a112e35210 <col:3, col:7> 'GCObject **' lvalue ->hash 0x55a112e16910
| |   `-ImplicitCastExpr 0x55a112e351f8 <col:3> 'stringtable *' <LValueToRValue>
| |     `-DeclRefExpr 0x55a112e351d0 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
| `-ImplicitCastExpr 0x55a112e35288 <col:12> 'unsigned int' <LValueToRValue>
|   `-DeclRefExpr 0x55a112e35248 <col:12> 'unsigned int' lvalue ParmVar 0x55a112e32c20 'h' 'unsigned int'
`-ParenExpr 0x55a112e353d0 <./lstate.h:162:20, col:42> 'GCObject *'
  `-ParenExpr 0x55a112e353b0 <./llimits.h:75:22, col:31> 'GCObject *'
    `-CStyleCastExpr 0x55a112e35388 <col:23, col:30> 'GCObject *' <BitCast>
      `-ImplicitCastExpr 0x55a112e35370 <col:26, col:30> 'TString *' <LValueToRValue>
        `-ParenExpr 0x55a112e35350 <col:26, col:30> 'TString *' lvalue
          `-ParenExpr 0x55a112e352f0 <./lstate.h:162:38, col:40> 'TString *' lvalue
            `-DeclRefExpr 0x55a112e352c8 <lstring.c:67:25> 'TString *' lvalue Var 0x55a112e32e30 'ts' 'TString *'
[B4.141] = (([B4.134]))
 143: DeclRefExpr 0x55a112e35418 <lstring.c:68:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
 144: ImplicitCastExpr 0x55a112e35440 <lstring.c:68:3> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e35418 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.143] (ImplicitCastExpr, LValueToRValue, stringtable *)
 145: MemberExpr 0x55a112e35458 <lstring.c:68:3, col:7> 'lu_int32':'unsigned int' lvalue ->nuse 0x55a112e16968
`-ImplicitCastExpr 0x55a112e35440 <col:3> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e35418 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.144]->nuse
 146: UnaryOperator 0x55a112e35490 <lstring.c:68:3, col:11> 'lu_int32':'unsigned int' postfix '++'
`-MemberExpr 0x55a112e35458 <col:3, col:7> 'lu_int32':'unsigned int' lvalue ->nuse 0x55a112e16968
  `-ImplicitCastExpr 0x55a112e35440 <col:3> 'stringtable *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e35418 <col:3> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.145]++
 147: DeclRefExpr 0x55a112e354b0 <lstring.c:69:7> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
 148: ImplicitCastExpr 0x55a112e354d8 <lstring.c:69:7> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e354b0 <col:7> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.147] (ImplicitCastExpr, LValueToRValue, stringtable *)
 149: MemberExpr 0x55a112e354f0 <lstring.c:69:7, col:11> 'lu_int32':'unsigned int' lvalue ->nuse 0x55a112e16968
`-ImplicitCastExpr 0x55a112e354d8 <col:7> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e354b0 <col:7> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.148]->nuse
 150: ImplicitCastExpr 0x55a112e35660 <lstring.c:69:7, col:11> 'lu_int32':'unsigned int' <LValueToRValue>
`-MemberExpr 0x55a112e354f0 <col:7, col:11> 'lu_int32':'unsigned int' lvalue ->nuse 0x55a112e16968
  `-ImplicitCastExpr 0x55a112e354d8 <col:7> 'stringtable *' <LValueToRValue>
    `-DeclRefExpr 0x55a112e354b0 <col:7> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.149] (ImplicitCastExpr, LValueToRValue, lu_int32)
 151: DeclRefExpr 0x55a112e35528 <lstring.c:69:33> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
tb
 152: ImplicitCastExpr 0x55a112e35550 <lstring.c:69:33> 'stringtable *' <LValueToRValue>
`-DeclRefExpr 0x55a112e35528 <col:33> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.151] (ImplicitCastExpr, LValueToRValue, stringtable *)
 153: MemberExpr 0x55a112e35568 <lstring.c:69:33, col:37> 'int' lvalue ->size 0x55a112e169c8
`-ImplicitCastExpr 0x55a112e35550 <col:33> 'stringtable *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e35528 <col:33> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.152]->size
 154: ImplicitCastExpr 0x55a112e35600 <./llimits.h:75:26, col:30> 'int' <LValueToRValue>
`-ParenExpr 0x55a112e355e0 <col:26, col:30> 'int' lvalue
  `-MemberExpr 0x55a112e35568 <lstring.c:69:33, col:37> 'int' lvalue ->size 0x55a112e169c8
    `-ImplicitCastExpr 0x55a112e35550 <col:33> 'stringtable *' <LValueToRValue>
      `-DeclRefExpr 0x55a112e35528 <col:33> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
([B4.153]) (ImplicitCastExpr, LValueToRValue, int)
 155: CStyleCastExpr 0x55a112e35618 <./llimits.h:75:23, col:30> 'lu_int32':'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x55a112e35600 <col:26, col:30> 'int' <LValueToRValue>
  `-ParenExpr 0x55a112e355e0 <col:26, col:30> 'int' lvalue
    `-MemberExpr 0x55a112e35568 <lstring.c:69:33, col:37> 'int' lvalue ->size 0x55a112e169c8
      `-ImplicitCastExpr 0x55a112e35550 <col:33> 'stringtable *' <LValueToRValue>
        `-DeclRefExpr 0x55a112e35528 <col:33> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
(lu_int32)[B4.154] (CStyleCastExpr, IntegralCast, lu_int32)
 156: BinaryOperator 0x55a112e35678 <lstring.c:69:7, ./llimits.h:75:31> 'int' '>'
|-ImplicitCastExpr 0x55a112e35660 <lstring.c:69:7, col:11> 'lu_int32':'unsigned int' <LValueToRValue>
| `-MemberExpr 0x55a112e354f0 <col:7, col:11> 'lu_int32':'unsigned int' lvalue ->nuse 0x55a112e16968
|   `-ImplicitCastExpr 0x55a112e354d8 <col:7> 'stringtable *' <LValueToRValue>
|     `-DeclRefExpr 0x55a112e354b0 <col:7> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
`-ParenExpr 0x55a112e35640 <./llimits.h:75:22, col:31> 'lu_int32':'unsigned int'
  `-CStyleCastExpr 0x55a112e35618 <col:23, col:30> 'lu_int32':'unsigned int' <IntegralCast>
    `-ImplicitCastExpr 0x55a112e35600 <col:26, col:30> 'int' <LValueToRValue>
      `-ParenExpr 0x55a112e355e0 <col:26, col:30> 'int' lvalue
        `-MemberExpr 0x55a112e35568 <lstring.c:69:33, col:37> 'int' lvalue ->size 0x55a112e169c8
          `-ImplicitCastExpr 0x55a112e35550 <col:33> 'stringtable *' <LValueToRValue>
            `-DeclRefExpr 0x55a112e35528 <col:33> 'stringtable *' lvalue Var 0x55a112e32eb8 'tb' 'stringtable *'
[B4.150] > ([B4.155])
   T: [B4.156] && ...
   Preds (2): B5 B6
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x55a112e33308 <lstring.c:55:5> 'void *(lua_State *)' Function 0x55a112df3198 'luaM_toobig' 'void *(lua_State *)'
luaM_toobig
   2: ImplicitCastExpr 0x55a112e33358 <lstring.c:55:5> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55a112e33308 <col:5> 'void *(lua_State *)' Function 0x55a112df3198 'luaM_toobig' 'void *(lua_State *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *))
   3: DeclRefExpr 0x55a112e33330 <lstring.c:55:17> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55a112e333c0 <lstring.c:55:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55a112e33330 <col:17> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x55a112e33390 <lstring.c:55:5, col:18> 'void *'
|-ImplicitCastExpr 0x55a112e33358 <col:5> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55a112e33308 <col:5> 'void *(lua_State *)' Function 0x55a112df3198 'luaM_toobig' 'void *(lua_State *)'
`-ImplicitCastExpr 0x55a112e333c0 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55a112e33330 <col:17> 'lua_State *' lvalue ParmVar 0x55a112e32ac0 'L' 'lua_State *'
[B5.2]([B5.4])
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclStmt 0x55a112e32e90 <lstring.c:52:3, col:14>col:12
`-VarDecl 0x55a112e32e30 <col:3, col:12> col:12 used ts 'TString *'
TString *ts;
   2: DeclStmt 0x55a112e32f18 <lstring.c:53:3, col:18>col:16
`-VarDecl 0x55a112e32eb8 <col:3, col:16> col:16 used tb 'stringtable *'
stringtable *tb;
   3: DeclRefExpr 0x55a112e32f30 <lstring.c:54:7> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
l
   4: ImplicitCastExpr 0x55a112e32f78 <lstring.c:54:7> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55a112e32f30 <col:7> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
[B6.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: IntegerLiteral 0x55a112e32f58 <lstring.c:54:9> 'int' 1
1
   6: ImplicitCastExpr 0x55a112e32f90 <lstring.c:54:9> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55a112e32f58 <col:9> 'int' 1
[B6.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: BinaryOperator 0x55a112e32fa8 <lstring.c:54:7, col:9> 'unsigned long' '+'
|-ImplicitCastExpr 0x55a112e32f78 <col:7> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55a112e32f30 <col:7> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55a112e32f90 <col:9> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55a112e32f58 <col:9> 'int' 1
[B6.4] + [B6.6]
   8: IntegerLiteral 0x55a112e32fd0 <./llimits.h:30:38> 'int' 0
0
   9: CStyleCastExpr 0x55a112e33000 <./llimits.h:30:30, col:38> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55a112e32fd0 <col:38> 'int' 0
(size_t)[B6.8] (CStyleCastExpr, IntegralCast, size_t)
  10: UnaryOperator 0x55a112e33028 <./llimits.h:30:29, col:38> 'size_t':'unsigned long' prefix '~'
`-CStyleCastExpr 0x55a112e33000 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55a112e32fd0 <col:38> 'int' 0
~[B6.9]
  11: CStyleCastExpr 0x55a112e330a8 <./llimits.h:30:20, col:39> 'size_t':'unsigned long' <NoOp>
`-ParenExpr 0x55a112e33088 <col:28, col:39> 'size_t':'unsigned long'
  `-UnaryOperator 0x55a112e33028 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
    `-CStyleCastExpr 0x55a112e33000 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55a112e32fd0 <col:38> 'int' 0
(size_t)([B6.10]) (CStyleCastExpr, NoOp, size_t)
  12: IntegerLiteral 0x55a112e330d0 <./llimits.h:30:41> 'int' 2
2
  13: ImplicitCastExpr 0x55a112e330f0 <./llimits.h:30:41> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55a112e330d0 <col:41> 'int' 2
[B6.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: BinaryOperator 0x55a112e33108 <./llimits.h:30:20, col:41> 'unsigned long' '-'
|-CStyleCastExpr 0x55a112e330a8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
| `-ParenExpr 0x55a112e33088 <col:28, col:39> 'size_t':'unsigned long'
|   `-UnaryOperator 0x55a112e33028 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     `-CStyleCastExpr 0x55a112e33000 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x55a112e32fd0 <col:38> 'int' 0
`-ImplicitCastExpr 0x55a112e330f0 <col:41> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55a112e330d0 <col:41> 'int' 2
[B6.11] - [B6.13]
  15: UnaryExprOrTypeTraitExpr 0x55a112e33160 <lstring.c:54:26, col:40> 'unsigned long' sizeof 'TString':'union TString'
sizeof(TString)
  16: BinaryOperator 0x55a112e33180 <./llimits.h:30:19, lstring.c:54:40> 'unsigned long' '-'
|-ParenExpr 0x55a112e33130 <./llimits.h:30:19, col:42> 'unsigned long'
| `-BinaryOperator 0x55a112e33108 <col:20, col:41> 'unsigned long' '-'
|   |-CStyleCastExpr 0x55a112e330a8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   | `-ParenExpr 0x55a112e33088 <col:28, col:39> 'size_t':'unsigned long'
|   |   `-UnaryOperator 0x55a112e33028 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |     `-CStyleCastExpr 0x55a112e33000 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x55a112e32fd0 <col:38> 'int' 0
|   `-ImplicitCastExpr 0x55a112e330f0 <col:41> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x55a112e330d0 <col:41> 'int' 2
`-UnaryExprOrTypeTraitExpr 0x55a112e33160 <lstring.c:54:26, col:40> 'unsigned long' sizeof 'TString':'union TString'
([B6.14]) - [B6.15]
  17: UnaryExprOrTypeTraitExpr 0x55a112e331d8 <lstring.c:54:43, col:54> 'unsigned long' sizeof 'char'
sizeof(char)
  18: BinaryOperator 0x55a112e331f8 <lstring.c:54:13, col:54> 'unsigned long' '/'
|-ParenExpr 0x55a112e331a8 <col:13, col:41> 'unsigned long'
| `-BinaryOperator 0x55a112e33180 <./llimits.h:30:19, lstring.c:54:40> 'unsigned long' '-'
|   |-ParenExpr 0x55a112e33130 <./llimits.h:30:19, col:42> 'unsigned long'
|   | `-BinaryOperator 0x55a112e33108 <col:20, col:41> 'unsigned long' '-'
|   |   |-CStyleCastExpr 0x55a112e330a8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   |   | `-ParenExpr 0x55a112e33088 <col:28, col:39> 'size_t':'unsigned long'
|   |   |   `-UnaryOperator 0x55a112e33028 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |   |     `-CStyleCastExpr 0x55a112e33000 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x55a112e32fd0 <col:38> 'int' 0
|   |   `-ImplicitCastExpr 0x55a112e330f0 <col:41> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x55a112e330d0 <col:41> 'int' 2
|   `-UnaryExprOrTypeTraitExpr 0x55a112e33160 <lstring.c:54:26, col:40> 'unsigned long' sizeof 'TString':'union TString'
`-UnaryExprOrTypeTraitExpr 0x55a112e331d8 <col:43, col:54> 'unsigned long' sizeof 'char'
([B6.16]) / [B6.17]
  19: BinaryOperator 0x55a112e33220 <lstring.c:54:7, col:54> 'int' '>'
|-BinaryOperator 0x55a112e32fa8 <col:7, col:9> 'unsigned long' '+'
| |-ImplicitCastExpr 0x55a112e32f78 <col:7> 'size_t':'unsigned long' <LValueToRValue>
| | `-DeclRefExpr 0x55a112e32f30 <col:7> 'size_t':'unsigned long' lvalue ParmVar 0x55a112e32ba8 'l' 'size_t':'unsigned long'
| `-ImplicitCastExpr 0x55a112e32f90 <col:9> 'unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x55a112e32f58 <col:9> 'int' 1
`-BinaryOperator 0x55a112e331f8 <col:13, col:54> 'unsigned long' '/'
  |-ParenExpr 0x55a112e331a8 <col:13, col:41> 'unsigned long'
  | `-BinaryOperator 0x55a112e33180 <./llimits.h:30:19, lstring.c:54:40> 'unsigned long' '-'
  |   |-ParenExpr 0x55a112e33130 <./llimits.h:30:19, col:42> 'unsigned long'
  |   | `-BinaryOperator 0x55a112e33108 <col:20, col:41> 'unsigned long' '-'
  |   |   |-CStyleCastExpr 0x55a112e330a8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
  |   |   | `-ParenExpr 0x55a112e33088 <col:28, col:39> 'size_t':'unsigned long'
  |   |   |   `-UnaryOperator 0x55a112e33028 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
  |   |   |     `-CStyleCastExpr 0x55a112e33000 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  |   |   |       `-IntegerLiteral 0x55a112e32fd0 <col:38> 'int' 0
  |   |   `-ImplicitCastExpr 0x55a112e330f0 <col:41> 'unsigned long' <IntegralCast>
  |   |     `-IntegerLiteral 0x55a112e330d0 <col:41> 'int' 2
  |   `-UnaryExprOrTypeTraitExpr 0x55a112e33160 <lstring.c:54:26, col:40> 'unsigned long' sizeof 'TString':'union TString'
  `-UnaryExprOrTypeTraitExpr 0x55a112e331d8 <col:43, col:54> 'unsigned long' sizeof 'char'
[B6.7] > [B6.18]
   T: if [B6.19]
   Preds (1): B7
   Succs (2): B5 B4

 [B0 (EXIT)]
   Preds (1): B1
