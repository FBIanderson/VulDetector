static int gmatch(lua_State *L)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x55fb421ecc78 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   2: ImplicitCastExpr 0x55fb421ecd88 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ecc78 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   3: DeclRefExpr 0x55fb421ecca0 <lstrlib.c:575:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421ecde0 <lstrlib.c:575:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ecca0 <col:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55fb421eccc8 <lstrlib.c:575:23> 'int' 1
1
   6: IntegerLiteral 0x55fb421ecd08 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x55fb421ecd40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421ecd08 <col:24> 'int' 0
(void *)[B1.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x55fb421ecdf8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x55fb421ecd68 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb421ecd40 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421ecd08 <col:24> 'int' 0
([B1.7]) (ImplicitCastExpr, NullToPointer, size_t *)
   9: CallExpr 0x55fb421ecda0 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x55fb421ecd88 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ecc78 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55fb421ecde0 <lstrlib.c:575:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ecca0 <col:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
|-ParenExpr 0x55fb421ecce8 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x55fb421eccc8 <lstrlib.c:575:23> 'int' 1
`-ImplicitCastExpr 0x55fb421ecdf8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x55fb421ecd68 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55fb421ecd40 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55fb421ecd08 <col:24> 'int' 0
[B1.2]([B1.4], ([B1.5]), [B1.8])
  10: DeclRefExpr 0x55fb421ece30 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
  11: ImplicitCastExpr 0x55fb421ecf40 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ece30 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B1.10] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
  12: DeclRefExpr 0x55fb421ece58 <lstrlib.c:576:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x55fb421ecf98 <lstrlib.c:576:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ece58 <col:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
[B1.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: IntegerLiteral 0x55fb421ece80 <lstrlib.c:576:23> 'int' 2
2
  15: IntegerLiteral 0x55fb421ecec0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  16: CStyleCastExpr 0x55fb421ecef8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421ecec0 <col:24> 'int' 0
(void *)[B1.15] (CStyleCastExpr, NullToPointer, void *)
  17: ImplicitCastExpr 0x55fb421ecfb0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x55fb421ecf20 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb421ecef8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421ecec0 <col:24> 'int' 0
([B1.16]) (ImplicitCastExpr, NullToPointer, size_t *)
  18: CallExpr 0x55fb421ecf58 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x55fb421ecf40 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ece30 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb421a5638 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55fb421ecf98 <lstrlib.c:576:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ece58 <col:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
|-ParenExpr 0x55fb421ecea0 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x55fb421ece80 <lstrlib.c:576:23> 'int' 2
`-ImplicitCastExpr 0x55fb421ecfb0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x55fb421ecf20 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55fb421ecef8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55fb421ecec0 <col:24> 'int' 0
[B1.11]([B1.13], ([B1.14]), [B1.17])
  19: DeclRefExpr 0x55fb421ecfe8 <lstrlib.c:577:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218ee80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
  20: ImplicitCastExpr 0x55fb421ed058 <lstrlib.c:577:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ecfe8 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218ee80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.19] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  21: DeclRefExpr 0x55fb421ed010 <lstrlib.c:577:14> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
L
  22: ImplicitCastExpr 0x55fb421ed0a8 <lstrlib.c:577:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ed010 <col:14> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
[B1.21] (ImplicitCastExpr, LValueToRValue, lua_State *)
  23: IntegerLiteral 0x55fb421ed038 <lstrlib.c:577:17> 'int' 2
2
  24: CallExpr 0x55fb421ed070 <lstrlib.c:577:3, col:18> 'void'
|-ImplicitCastExpr 0x55fb421ed058 <col:3> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ecfe8 <col:3> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218ee80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421ed0a8 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ed010 <col:14> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
`-IntegerLiteral 0x55fb421ed038 <col:17> 'int' 2
[B1.20]([B1.22], [B1.23])
  25: DeclRefExpr 0x55fb421ed0c0 <lstrlib.c:578:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
  26: ImplicitCastExpr 0x55fb421ed130 <lstrlib.c:578:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ed0c0 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B1.25] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
  27: DeclRefExpr 0x55fb421ed0e8 <lstrlib.c:578:19> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
L
  28: ImplicitCastExpr 0x55fb421ed180 <lstrlib.c:578:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ed0e8 <col:19> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
[B1.27] (ImplicitCastExpr, LValueToRValue, lua_State *)
  29: IntegerLiteral 0x55fb421ed110 <lstrlib.c:578:22> 'int' 0
0
  30: ImplicitCastExpr 0x55fb421ed198 <lstrlib.c:578:22> 'lua_Integer':'long' <IntegralCast>
`-IntegerLiteral 0x55fb421ed110 <col:22> 'int' 0
[B1.29] (ImplicitCastExpr, IntegralCast, lua_Integer)
  31: CallExpr 0x55fb421ed148 <lstrlib.c:578:3, col:23> 'void'
|-ImplicitCastExpr 0x55fb421ed130 <col:3> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ed0c0 <col:3> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x55fb421ed180 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ed0e8 <col:19> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
`-ImplicitCastExpr 0x55fb421ed198 <col:22> 'lua_Integer':'long' <IntegralCast>
  `-IntegerLiteral 0x55fb421ed110 <col:22> 'int' 0
[B1.26]([B1.28], [B1.30])
  32: DeclRefExpr 0x55fb421ed1b0 <lstrlib.c:579:3> 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)' Function 0x55fb42194398 'lua_pushcclosure' 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)'
lua_pushcclosure
  33: ImplicitCastExpr 0x55fb421ed2a8 <lstrlib.c:579:3> 'void (*)(lua_State *, lua_CFunction, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ed1b0 <col:3> 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)' Function 0x55fb42194398 'lua_pushcclosure' 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)'
[B1.32] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_CFunction, int))
  34: DeclRefExpr 0x55fb421ed1d8 <lstrlib.c:579:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
L
  35: ImplicitCastExpr 0x55fb421ed300 <lstrlib.c:579:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ed1d8 <col:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
[B1.34] (ImplicitCastExpr, LValueToRValue, lua_State *)
  36: DeclRefExpr 0x55fb421ed200 <lstrlib.c:579:23> 'int (lua_State *)' Function 0x55fb421ea170 'gmatch_aux' 'int (lua_State *)'
gmatch_aux
  37: ImplicitCastExpr 0x55fb421ed348 <lstrlib.c:579:23> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ed200 <col:23> 'int (lua_State *)' Function 0x55fb421ea170 'gmatch_aux' 'int (lua_State *)'
[B1.36] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
  38: IntegerLiteral 0x55fb421ed228 <lstrlib.c:579:35> 'int' 3
3
  39: CallExpr 0x55fb421ed2c0 <lstrlib.c:579:3, col:36> 'void'
|-ImplicitCastExpr 0x55fb421ed2a8 <col:3> 'void (*)(lua_State *, lua_CFunction, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ed1b0 <col:3> 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)' Function 0x55fb42194398 'lua_pushcclosure' 'void (lua_State *, lua_CFunction, int)':'void (lua_State *, lua_CFunction, int)'
|-ImplicitCastExpr 0x55fb421ed300 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ed1d8 <col:20> 'lua_State *' lvalue ParmVar 0x55fb421ecb40 'L' 'lua_State *'
|-ImplicitCastExpr 0x55fb421ed348 <col:23> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ed200 <col:23> 'int (lua_State *)' Function 0x55fb421ea170 'gmatch_aux' 'int (lua_State *)'
`-IntegerLiteral 0x55fb421ed228 <col:35> 'int' 3
[B1.33]([B1.35], [B1.37], [B1.38])
  40: IntegerLiteral 0x55fb421ed360 <lstrlib.c:580:10> 'int' 1
1
  41: ReturnStmt 0x55fb421ed380 <lstrlib.c:580:3, col:10>
`-IntegerLiteral 0x55fb421ed360 <col:10> 'int' 1
return [B1.40];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
