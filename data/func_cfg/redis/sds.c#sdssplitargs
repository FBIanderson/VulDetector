sds *sdssplitargs(const char *line, int *argc)
 [B73 (ENTRY)]
   Succs (1): B72

 [B1]
   1: IntegerLiteral 0x55e83d1292c0 <sds.c:1056:13> 'int' 0
0
   2: DeclRefExpr 0x55e83d129260 <sds.c:1056:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
argc
   3: ImplicitCastExpr 0x55e83d129288 <sds.c:1056:6> 'int *' <LValueToRValue>
`-DeclRefExpr 0x55e83d129260 <col:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B1.2] (ImplicitCastExpr, LValueToRValue, int *)
   4: UnaryOperator 0x55e83d1292a0 <sds.c:1056:5, col:6> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d129288 <col:6> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129260 <col:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
*[B1.3]
   5: BinaryOperator 0x55e83d1292e0 <sds.c:1056:5, col:13> 'int' '='
|-UnaryOperator 0x55e83d1292a0 <col:5, col:6> 'int' lvalue prefix '*'
| `-ImplicitCastExpr 0x55e83d129288 <col:6> 'int *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d129260 <col:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
`-IntegerLiteral 0x55e83d1292c0 <col:13> 'int' 0
[B1.4] = [B1.1]
   6: IntegerLiteral 0x55e83d129308 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x55e83d129340 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d129308 <col:24> 'int' 0
(void *)[B1.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x55e83d129388 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds *' <NullToPointer>
`-ParenExpr 0x55e83d129368 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d129340 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d129308 <col:24> 'int' 0
([B1.7]) (ImplicitCastExpr, NullToPointer, sds *)
   9: ReturnStmt 0x55e83d1293a0 <sds.c:1057:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55e83d129388 <col:16, col:25> 'sds *' <NullToPointer>
  `-ParenExpr 0x55e83d129368 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d129340 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d129308 <col:24> 'int' 0
return [B1.8];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d129178 <sds.c:1055:18> 'void (sds)' Function 0x55e83d0fba30 'sdsfree' 'void (sds)'
sdsfree
   2: ImplicitCastExpr 0x55e83d1291c8 <sds.c:1055:18> 'void (*)(sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d129178 <col:18> 'void (sds)' Function 0x55e83d0fba30 'sdsfree' 'void (sds)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds))
   3: DeclRefExpr 0x55e83d1291a0 <sds.c:1055:26> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   4: ImplicitCastExpr 0x55e83d129210 <sds.c:1055:26> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1291a0 <col:26> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B2.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: CallExpr 0x55e83d1291e0 <sds.c:1055:18, col:33> 'void'
|-ImplicitCastExpr 0x55e83d1291c8 <col:18> 'void (*)(sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d129178 <col:18> 'void (sds)' Function 0x55e83d0fba30 'sdsfree' 'void (sds)'
`-ImplicitCastExpr 0x55e83d129210 <col:26> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1291a0 <col:26> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B2.2]([B2.4])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55e83d129070 <./sdsalloc.h:42:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
free
   2: ImplicitCastExpr 0x55e83d1290c0 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d129070 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *))
   3: DeclRefExpr 0x55e83d129098 <sds.c:1054:12> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   4: ImplicitCastExpr 0x55e83d129108 <sds.c:1054:12> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d129098 <col:12> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B3.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: ImplicitCastExpr 0x55e83d129120 <sds.c:1054:12> 'void *' <BitCast>
`-ImplicitCastExpr 0x55e83d129108 <col:12> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129098 <col:12> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B3.4] (ImplicitCastExpr, BitCast, void *)
   6: CallExpr 0x55e83d1290d8 <./sdsalloc.h:42:16, sds.c:1054:18> 'void'
|-ImplicitCastExpr 0x55e83d1290c0 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d129070 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
`-ImplicitCastExpr 0x55e83d129120 <sds.c:1054:12> 'void *' <BitCast>
  `-ImplicitCastExpr 0x55e83d129108 <col:12> 'char **' <LValueToRValue>
    `-DeclRefExpr 0x55e83d129098 <col:12> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B3.2]([B3.5])
   7: DeclRefExpr 0x55e83d129138 <sds.c:1055:9> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   8: ImplicitCastExpr 0x55e83d129160 <sds.c:1055:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d129138 <col:9> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B3.7] (ImplicitCastExpr, LValueToRValue, char *)
   T: if [B3.8]
   Preds (1): B6
   Succs (2): B2 B1

 [B4]
   Preds (1): B5
   Succs (1): B6

 [B5]
   1: DeclRefExpr 0x55e83d128ed0 <sds.c:1053:9> 'void (sds)' Function 0x55e83d0fba30 'sdsfree' 'void (sds)'
sdsfree
   2: ImplicitCastExpr 0x55e83d128fd8 <sds.c:1053:9> 'void (*)(sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d128ed0 <col:9> 'void (sds)' Function 0x55e83d0fba30 'sdsfree' 'void (sds)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds))
   3: DeclRefExpr 0x55e83d128ef8 <sds.c:1053:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   4: ImplicitCastExpr 0x55e83d128f80 <sds.c:1053:17> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d128ef8 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B5.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: DeclRefExpr 0x55e83d128f20 <sds.c:1053:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
argc
   6: ImplicitCastExpr 0x55e83d128f48 <sds.c:1053:25> 'int *' <LValueToRValue>
`-DeclRefExpr 0x55e83d128f20 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B5.5] (ImplicitCastExpr, LValueToRValue, int *)
   7: UnaryOperator 0x55e83d128f60 <sds.c:1053:24, col:25> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d128f48 <col:25> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d128f20 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
*[B5.6]
   8: ImplicitCastExpr 0x55e83d128f98 <sds.c:1053:24, col:25> 'int' <LValueToRValue>
`-UnaryOperator 0x55e83d128f60 <col:24, col:25> 'int' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d128f48 <col:25> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d128f20 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B5.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55e83d128fb0 <sds.c:1053:17, col:29> 'char *' lvalue
|-ImplicitCastExpr 0x55e83d128f80 <col:17> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55e83d128ef8 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
`-ImplicitCastExpr 0x55e83d128f98 <col:24, col:25> 'int' <LValueToRValue>
  `-UnaryOperator 0x55e83d128f60 <col:24, col:25> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d128f48 <col:25> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d128f20 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B5.4][[B5.8]]
  10: ImplicitCastExpr 0x55e83d129020 <sds.c:1053:17, col:29> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d128fb0 <col:17, col:29> 'char *' lvalue
  |-ImplicitCastExpr 0x55e83d128f80 <col:17> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d128ef8 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
  `-ImplicitCastExpr 0x55e83d128f98 <col:24, col:25> 'int' <LValueToRValue>
    `-UnaryOperator 0x55e83d128f60 <col:24, col:25> 'int' lvalue prefix '*'
      `-ImplicitCastExpr 0x55e83d128f48 <col:25> 'int *' <LValueToRValue>
        `-DeclRefExpr 0x55e83d128f20 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B5.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: CallExpr 0x55e83d128ff0 <sds.c:1053:9, col:30> 'void'
|-ImplicitCastExpr 0x55e83d128fd8 <col:9> 'void (*)(sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d128ed0 <col:9> 'void (sds)' Function 0x55e83d0fba30 'sdsfree' 'void (sds)'
`-ImplicitCastExpr 0x55e83d129020 <col:17, col:29> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d128fb0 <col:17, col:29> 'char *' lvalue
    |-ImplicitCastExpr 0x55e83d128f80 <col:17> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d128ef8 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
    `-ImplicitCastExpr 0x55e83d128f98 <col:24, col:25> 'int' <LValueToRValue>
      `-UnaryOperator 0x55e83d128f60 <col:24, col:25> 'int' lvalue prefix '*'
        `-ImplicitCastExpr 0x55e83d128f48 <col:25> 'int *' <LValueToRValue>
          `-DeclRefExpr 0x55e83d128f20 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B5.2]([B5.10])
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: DeclRefExpr 0x55e83d128e30 <sds.c:1052:13> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
argc
   2: ImplicitCastExpr 0x55e83d128e58 <sds.c:1052:13> 'int *' <LValueToRValue>
`-DeclRefExpr 0x55e83d128e30 <col:13> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B6.1] (ImplicitCastExpr, LValueToRValue, int *)
   3: UnaryOperator 0x55e83d128e70 <sds.c:1052:12, col:13> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d128e58 <col:13> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d128e30 <col:13> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
*[B6.2]
   4: UnaryOperator 0x55e83d128eb0 <sds.c:1052:11, col:18> 'int' postfix '--'
`-ParenExpr 0x55e83d128e90 <col:11, col:17> 'int' lvalue
  `-UnaryOperator 0x55e83d128e70 <col:12, col:13> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d128e58 <col:13> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d128e30 <col:13> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
([B6.3])--
   T: while [B6.4]
   Preds (2): B4 B7
   Succs (2): B5 B3

 [B7]
  err:
   Preds (4): B28 B31 B40 B43
   Succs (1): B6

 [B8]
   Preds (1): B12
   Succs (1): B71

 [B9]
   1: DeclRefExpr 0x55e83d128d40 <sds.c:1047:20> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   2: ImplicitCastExpr 0x55e83d128d68 <sds.c:1047:20> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d128d40 <col:20> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B9.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: ReturnStmt 0x55e83d128d80 <sds.c:1047:13, col:20>
`-ImplicitCastExpr 0x55e83d128d68 <col:20> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x55e83d128d40 <col:20> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
return [B9.2];
   Preds (2): B10 B11
   Succs (1): B0

 [B10]
   1: DeclRefExpr 0x55e83d128c20 <./sdsalloc.h:40:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
malloc
   2: ImplicitCastExpr 0x55e83d128c80 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d128c20 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(unsigned long))
   3: UnaryExprOrTypeTraitExpr 0x55e83d128c60 <sds.c:1046:51, col:63> 'unsigned long' sizeof 'void *'
sizeof(void *)
   4: CallExpr 0x55e83d128c98 <./sdsalloc.h:40:18, sds.c:1046:64> 'void *'
|-ImplicitCastExpr 0x55e83d128c80 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d128c20 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
`-UnaryExprOrTypeTraitExpr 0x55e83d128c60 <sds.c:1046:51, col:63> 'unsigned long' sizeof 'void *'
[B10.2]([B10.3])
   5: ImplicitCastExpr 0x55e83d128cc8 <./sdsalloc.h:40:18, sds.c:1046:64> 'char **' <BitCast>
`-CallExpr 0x55e83d128c98 <./sdsalloc.h:40:18, sds.c:1046:64> 'void *'
  |-ImplicitCastExpr 0x55e83d128c80 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d128c20 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
  `-UnaryExprOrTypeTraitExpr 0x55e83d128c60 <sds.c:1046:51, col:63> 'unsigned long' sizeof 'void *'
[B10.4] (ImplicitCastExpr, BitCast, char **)
   6: DeclRefExpr 0x55e83d128bf8 <sds.c:1046:33> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   7: BinaryOperator 0x55e83d128ce0 <sds.c:1046:33, col:64> 'char **' '='
|-DeclRefExpr 0x55e83d128bf8 <col:33> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
`-ImplicitCastExpr 0x55e83d128cc8 <./sdsalloc.h:40:18, sds.c:1046:64> 'char **' <BitCast>
  `-CallExpr 0x55e83d128c98 <./sdsalloc.h:40:18, sds.c:1046:64> 'void *'
    |-ImplicitCastExpr 0x55e83d128c80 <./sdsalloc.h:40:18> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d128c20 <col:18> 'void *(unsigned long)' Function 0x55e83d0a0620 'malloc' 'void *(unsigned long)'
    `-UnaryExprOrTypeTraitExpr 0x55e83d128c60 <sds.c:1046:51, col:63> 'unsigned long' sizeof 'void *'
[B10.6] = [B10.5]
   Preds (1): B11
   Succs (1): B9

 [B11]
   1: DeclRefExpr 0x55e83d128af8 <sds.c:1046:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   2: ImplicitCastExpr 0x55e83d128ba0 <sds.c:1046:17> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d128af8 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B11.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: IntegerLiteral 0x55e83d128b20 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x55e83d128b58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d128b20 <col:24> 'int' 0
(void *)[B11.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x55e83d128bb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
`-ParenExpr 0x55e83d128b80 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d128b58 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d128b20 <col:24> 'int' 0
([B11.4]) (ImplicitCastExpr, BitCast, char **)
   6: BinaryOperator 0x55e83d128bd0 <sds.c:1046:17, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55e83d128ba0 <sds.c:1046:17> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55e83d128af8 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
`-ImplicitCastExpr 0x55e83d128bb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
  `-ParenExpr 0x55e83d128b80 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d128b58 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d128b20 <col:24> 'int' 0
[B11.2] == [B11.5]
   T: if [B11.6]
   Preds (1): B66
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x55e83d128730 <sds.c:1039:26> 'char **' lvalue Var 0x55e83d128148 'new_vector' 'char **'
new_vector
   2: ImplicitCastExpr 0x55e83d128758 <sds.c:1039:26> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d128730 <col:26> 'char **' lvalue Var 0x55e83d128148 'new_vector' 'char **'
[B12.1] (ImplicitCastExpr, LValueToRValue, char **)
   3: DeclRefExpr 0x55e83d128708 <sds.c:1039:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   4: BinaryOperator 0x55e83d128770 <sds.c:1039:17, col:26> 'char **' '='
|-DeclRefExpr 0x55e83d128708 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
`-ImplicitCastExpr 0x55e83d128758 <col:26> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x55e83d128730 <col:26> 'char **' lvalue Var 0x55e83d128148 'new_vector' 'char **'
[B12.3] = [B12.2]
   5: DeclRefExpr 0x55e83d128878 <sds.c:1040:33> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   6: ImplicitCastExpr 0x55e83d1288a0 <sds.c:1040:33> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d128878 <col:33> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B12.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: DeclRefExpr 0x55e83d128798 <sds.c:1040:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   8: ImplicitCastExpr 0x55e83d128820 <sds.c:1040:17> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d128798 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B12.7] (ImplicitCastExpr, LValueToRValue, char **)
   9: DeclRefExpr 0x55e83d1287c0 <sds.c:1040:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
argc
  10: ImplicitCastExpr 0x55e83d1287e8 <sds.c:1040:25> 'int *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1287c0 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B12.9] (ImplicitCastExpr, LValueToRValue, int *)
  11: UnaryOperator 0x55e83d128800 <sds.c:1040:24, col:25> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d1287e8 <col:25> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1287c0 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
*[B12.10]
  12: ImplicitCastExpr 0x55e83d128838 <sds.c:1040:24, col:25> 'int' <LValueToRValue>
`-UnaryOperator 0x55e83d128800 <col:24, col:25> 'int' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d1287e8 <col:25> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1287c0 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B12.11] (ImplicitCastExpr, LValueToRValue, int)
  13: ArraySubscriptExpr 0x55e83d128850 <sds.c:1040:17, col:29> 'char *' lvalue
|-ImplicitCastExpr 0x55e83d128820 <col:17> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55e83d128798 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
`-ImplicitCastExpr 0x55e83d128838 <col:24, col:25> 'int' <LValueToRValue>
  `-UnaryOperator 0x55e83d128800 <col:24, col:25> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d1287e8 <col:25> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1287c0 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B12.8][[B12.12]]
  14: BinaryOperator 0x55e83d1288b8 <sds.c:1040:17, col:33> 'char *' '='
|-ArraySubscriptExpr 0x55e83d128850 <col:17, col:29> 'char *' lvalue
| |-ImplicitCastExpr 0x55e83d128820 <col:17> 'char **' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d128798 <col:17> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
| `-ImplicitCastExpr 0x55e83d128838 <col:24, col:25> 'int' <LValueToRValue>
|   `-UnaryOperator 0x55e83d128800 <col:24, col:25> 'int' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55e83d1287e8 <col:25> 'int *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d1287c0 <col:25> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
`-ImplicitCastExpr 0x55e83d1288a0 <col:33> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d128878 <col:33> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B12.13] = [B12.6]
  15: DeclRefExpr 0x55e83d1288e0 <sds.c:1041:19> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
argc
  16: ImplicitCastExpr 0x55e83d128908 <sds.c:1041:19> 'int *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1288e0 <col:19> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B12.15] (ImplicitCastExpr, LValueToRValue, int *)
  17: UnaryOperator 0x55e83d128920 <sds.c:1041:18, col:19> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d128908 <col:19> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1288e0 <col:19> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
*[B12.16]
  18: UnaryOperator 0x55e83d128970 <sds.c:1041:17, col:24> 'int' postfix '++'
`-ParenExpr 0x55e83d128940 <col:17, col:23> 'int' lvalue
  `-UnaryOperator 0x55e83d128920 <col:18, col:19> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d128908 <col:19> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1288e0 <col:19> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
([B12.17])++
  19: IntegerLiteral 0x55e83d1289b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  20: CStyleCastExpr 0x55e83d1289f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d1289b8 <col:24> 'int' 0
(void *)[B12.19] (CStyleCastExpr, NullToPointer, void *)
  21: ImplicitCastExpr 0x55e83d128a38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
`-ParenExpr 0x55e83d128a18 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d1289f0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d1289b8 <col:24> 'int' 0
([B12.20]) (ImplicitCastExpr, NullToPointer, char *)
  22: DeclRefExpr 0x55e83d128990 <sds.c:1042:17> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  23: BinaryOperator 0x55e83d128a50 <sds.c:1042:17, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'char *' '='
|-DeclRefExpr 0x55e83d128990 <sds.c:1042:17> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-ImplicitCastExpr 0x55e83d128a38 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
  `-ParenExpr 0x55e83d128a18 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d1289f0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d1289b8 <col:24> 'int' 0
[B12.22] = [B12.21]
   Preds (1): B14
   Succs (1): B8

 [B13]
   1: DeclRefExpr 0x55e83d128538 <./sdsalloc.h:42:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
free
   2: ImplicitCastExpr 0x55e83d128588 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d128538 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *))
   3: DeclRefExpr 0x55e83d128560 <sds.c:1035:28> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   4: ImplicitCastExpr 0x55e83d1285d0 <sds.c:1035:28> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d128560 <col:28> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B13.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: ImplicitCastExpr 0x55e83d1285e8 <sds.c:1035:28> 'void *' <BitCast>
`-ImplicitCastExpr 0x55e83d1285d0 <col:28> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x55e83d128560 <col:28> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B13.4] (ImplicitCastExpr, BitCast, void *)
   6: CallExpr 0x55e83d1285a0 <./sdsalloc.h:42:16, sds.c:1035:34> 'void'
|-ImplicitCastExpr 0x55e83d128588 <./sdsalloc.h:42:16> 'void (*)(void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d128538 <col:16> 'void (void *)' Function 0x55e83d0a1040 'free' 'void (void *)'
`-ImplicitCastExpr 0x55e83d1285e8 <sds.c:1035:28> 'void *' <BitCast>
  `-ImplicitCastExpr 0x55e83d1285d0 <col:28> 'char **' <LValueToRValue>
    `-DeclRefExpr 0x55e83d128560 <col:28> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B13.2]([B13.5])
   7: IntegerLiteral 0x55e83d128600 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x55e83d128638 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d128600 <col:24> 'int' 0
(void *)[B13.7] (CStyleCastExpr, NullToPointer, void *)
   9: ImplicitCastExpr 0x55e83d128680 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'sds *' <NullToPointer>
`-ParenExpr 0x55e83d128660 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d128638 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d128600 <col:24> 'int' 0
([B13.8]) (ImplicitCastExpr, NullToPointer, sds *)
  10: ReturnStmt 0x55e83d128698 <sds.c:1036:21, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25>
`-ImplicitCastExpr 0x55e83d128680 <col:16, col:25> 'sds *' <NullToPointer>
  `-ParenExpr 0x55e83d128660 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d128638 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d128600 <col:24> 'int' 0
return [B13.9];
   Preds (1): B14
   Succs (1): B0

 [B14]
   1: DeclRefExpr 0x55e83d1281a8 <./sdsalloc.h:41:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
realloc
   2: ImplicitCastExpr 0x55e83d128388 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1281a8 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
[B14.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, unsigned long))
   3: DeclRefExpr 0x55e83d1281d0 <sds.c:1033:47> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
vector
   4: ImplicitCastExpr 0x55e83d1283d8 <sds.c:1033:47> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d1281d0 <col:47> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B14.3] (ImplicitCastExpr, LValueToRValue, char **)
   5: ImplicitCastExpr 0x55e83d1283f0 <sds.c:1033:47> 'void *' <BitCast>
`-ImplicitCastExpr 0x55e83d1283d8 <col:47> 'char **' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1281d0 <col:47> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
[B14.4] (ImplicitCastExpr, BitCast, void *)
   6: DeclRefExpr 0x55e83d1281f8 <sds.c:1033:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
argc
   7: ImplicitCastExpr 0x55e83d128220 <sds.c:1033:57> 'int *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B14.6] (ImplicitCastExpr, LValueToRValue, int *)
   8: UnaryOperator 0x55e83d128238 <sds.c:1033:56, col:57> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
*[B14.7]
   9: ImplicitCastExpr 0x55e83d128298 <sds.c:1033:55, col:61> 'int' <LValueToRValue>
`-ParenExpr 0x55e83d128258 <col:55, col:61> 'int' lvalue
  `-UnaryOperator 0x55e83d128238 <col:56, col:57> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
([B14.8]) (ImplicitCastExpr, LValueToRValue, int)
  10: IntegerLiteral 0x55e83d128278 <sds.c:1033:63> 'int' 1
1
  11: BinaryOperator 0x55e83d1282b0 <sds.c:1033:55, col:63> 'int' '+'
|-ImplicitCastExpr 0x55e83d128298 <col:55, col:61> 'int' <LValueToRValue>
| `-ParenExpr 0x55e83d128258 <col:55, col:61> 'int' lvalue
|   `-UnaryOperator 0x55e83d128238 <col:56, col:57> 'int' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
`-IntegerLiteral 0x55e83d128278 <col:63> 'int' 1
[B14.9] + [B14.10]
  12: ImplicitCastExpr 0x55e83d128330 <sds.c:1033:54, col:64> 'unsigned long' <IntegralCast>
`-ParenExpr 0x55e83d1282d8 <col:54, col:64> 'int'
  `-BinaryOperator 0x55e83d1282b0 <col:55, col:63> 'int' '+'
    |-ImplicitCastExpr 0x55e83d128298 <col:55, col:61> 'int' <LValueToRValue>
    | `-ParenExpr 0x55e83d128258 <col:55, col:61> 'int' lvalue
    |   `-UnaryOperator 0x55e83d128238 <col:56, col:57> 'int' lvalue prefix '*'
    |     `-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
    |       `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
    `-IntegerLiteral 0x55e83d128278 <col:63> 'int' 1
([B14.11]) (ImplicitCastExpr, IntegralCast, unsigned long)
  13: UnaryExprOrTypeTraitExpr 0x55e83d128310 <sds.c:1033:66, col:78> 'unsigned long' sizeof 'char *'
sizeof(char *)
  14: BinaryOperator 0x55e83d128348 <sds.c:1033:54, col:78> 'unsigned long' '*'
|-ImplicitCastExpr 0x55e83d128330 <col:54, col:64> 'unsigned long' <IntegralCast>
| `-ParenExpr 0x55e83d1282d8 <col:54, col:64> 'int'
|   `-BinaryOperator 0x55e83d1282b0 <col:55, col:63> 'int' '+'
|     |-ImplicitCastExpr 0x55e83d128298 <col:55, col:61> 'int' <LValueToRValue>
|     | `-ParenExpr 0x55e83d128258 <col:55, col:61> 'int' lvalue
|     |   `-UnaryOperator 0x55e83d128238 <col:56, col:57> 'int' lvalue prefix '*'
|     |     `-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
|     |       `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
|     `-IntegerLiteral 0x55e83d128278 <col:63> 'int' 1
`-UnaryExprOrTypeTraitExpr 0x55e83d128310 <col:66, col:78> 'unsigned long' sizeof 'char *'
[B14.12] * [B14.13]
  15: CallExpr 0x55e83d1283a0 <./sdsalloc.h:41:19, sds.c:1033:79> 'void *'
|-ImplicitCastExpr 0x55e83d128388 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1281a8 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d1283f0 <sds.c:1033:47> 'void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d1283d8 <col:47> 'char **' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1281d0 <col:47> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
`-BinaryOperator 0x55e83d128348 <col:54, col:78> 'unsigned long' '*'
  |-ImplicitCastExpr 0x55e83d128330 <col:54, col:64> 'unsigned long' <IntegralCast>
  | `-ParenExpr 0x55e83d1282d8 <col:54, col:64> 'int'
  |   `-BinaryOperator 0x55e83d1282b0 <col:55, col:63> 'int' '+'
  |     |-ImplicitCastExpr 0x55e83d128298 <col:55, col:61> 'int' <LValueToRValue>
  |     | `-ParenExpr 0x55e83d128258 <col:55, col:61> 'int' lvalue
  |     |   `-UnaryOperator 0x55e83d128238 <col:56, col:57> 'int' lvalue prefix '*'
  |     |     `-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
  |     |       `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
  |     `-IntegerLiteral 0x55e83d128278 <col:63> 'int' 1
  `-UnaryExprOrTypeTraitExpr 0x55e83d128310 <col:66, col:78> 'unsigned long' sizeof 'char *'
[B14.2]([B14.5], [B14.14])
  16: ImplicitCastExpr 0x55e83d128408 <./sdsalloc.h:41:19, sds.c:1033:79> 'char **' <BitCast>
`-CallExpr 0x55e83d1283a0 <./sdsalloc.h:41:19, sds.c:1033:79> 'void *'
  |-ImplicitCastExpr 0x55e83d128388 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d1281a8 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
  |-ImplicitCastExpr 0x55e83d1283f0 <sds.c:1033:47> 'void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d1283d8 <col:47> 'char **' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d1281d0 <col:47> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
  `-BinaryOperator 0x55e83d128348 <col:54, col:78> 'unsigned long' '*'
    |-ImplicitCastExpr 0x55e83d128330 <col:54, col:64> 'unsigned long' <IntegralCast>
    | `-ParenExpr 0x55e83d1282d8 <col:54, col:64> 'int'
    |   `-BinaryOperator 0x55e83d1282b0 <col:55, col:63> 'int' '+'
    |     |-ImplicitCastExpr 0x55e83d128298 <col:55, col:61> 'int' <LValueToRValue>
    |     | `-ParenExpr 0x55e83d128258 <col:55, col:61> 'int' lvalue
    |     |   `-UnaryOperator 0x55e83d128238 <col:56, col:57> 'int' lvalue prefix '*'
    |     |     `-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
    |     `-IntegerLiteral 0x55e83d128278 <col:63> 'int' 1
    `-UnaryExprOrTypeTraitExpr 0x55e83d128310 <col:66, col:78> 'unsigned long' sizeof 'char *'
[B14.15] (ImplicitCastExpr, BitCast, char **)
  17: DeclStmt 0x55e83d128420 <sds.c:1033:17, col:80>col:24
`-VarDecl 0x55e83d128148 <col:17, col:79> col:24 used new_vector 'char **' cinit
  `-ImplicitCastExpr 0x55e83d128408 <./sdsalloc.h:41:19, sds.c:1033:79> 'char **' <BitCast>
    `-CallExpr 0x55e83d1283a0 <./sdsalloc.h:41:19, sds.c:1033:79> 'void *'
      |-ImplicitCastExpr 0x55e83d128388 <./sdsalloc.h:41:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55e83d1281a8 <col:19> 'void *(void *, unsigned long)' Function 0x55e83d0a0e48 'realloc' 'void *(void *, unsigned long)'
      |-ImplicitCastExpr 0x55e83d1283f0 <sds.c:1033:47> 'void *' <BitCast>
      | `-ImplicitCastExpr 0x55e83d1283d8 <col:47> 'char **' <LValueToRValue>
      |   `-DeclRefExpr 0x55e83d1281d0 <col:47> 'char **' lvalue Var 0x55e83d123a88 'vector' 'char **'
      `-BinaryOperator 0x55e83d128348 <col:54, col:78> 'unsigned long' '*'
        |-ImplicitCastExpr 0x55e83d128330 <col:54, col:64> 'unsigned long' <IntegralCast>
        | `-ParenExpr 0x55e83d1282d8 <col:54, col:64> 'int'
        |   `-BinaryOperator 0x55e83d1282b0 <col:55, col:63> 'int' '+'
        |     |-ImplicitCastExpr 0x55e83d128298 <col:55, col:61> 'int' <LValueToRValue>
        |     | `-ParenExpr 0x55e83d128258 <col:55, col:61> 'int' lvalue
        |     |   `-UnaryOperator 0x55e83d128238 <col:56, col:57> 'int' lvalue prefix '*'
        |     |     `-ImplicitCastExpr 0x55e83d128220 <col:57> 'int *' <LValueToRValue>
        |     |       `-DeclRefExpr 0x55e83d1281f8 <col:57> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
        |     `-IntegerLiteral 0x55e83d128278 <col:63> 'int' 1
        `-UnaryExprOrTypeTraitExpr 0x55e83d128310 <col:66, col:78> 'unsigned long' sizeof 'char *'
char **new_vector = realloc(vector, ((*argc) + 1) * sizeof(char *));
  18: DeclRefExpr 0x55e83d128438 <sds.c:1034:21> 'char **' lvalue Var 0x55e83d128148 'new_vector' 'char **'
new_vector
  19: ImplicitCastExpr 0x55e83d1284e0 <sds.c:1034:21> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d128438 <col:21> 'char **' lvalue Var 0x55e83d128148 'new_vector' 'char **'
[B14.18] (ImplicitCastExpr, LValueToRValue, char **)
  20: IntegerLiteral 0x55e83d128460 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  21: CStyleCastExpr 0x55e83d128498 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d128460 <col:24> 'int' 0
(void *)[B14.20] (CStyleCastExpr, NullToPointer, void *)
  22: ImplicitCastExpr 0x55e83d1284f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
`-ParenExpr 0x55e83d1284c0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d128498 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d128460 <col:24> 'int' 0
([B14.21]) (ImplicitCastExpr, BitCast, char **)
  23: BinaryOperator 0x55e83d128510 <sds.c:1034:21, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55e83d1284e0 <sds.c:1034:21> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55e83d128438 <col:21> 'char **' lvalue Var 0x55e83d128148 'new_vector' 'char **'
`-ImplicitCastExpr 0x55e83d1284f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <BitCast>
  `-ParenExpr 0x55e83d1284c0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d128498 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d128460 <col:24> 'int' 0
[B14.19] == [B14.22]
   T: if [B14.23]
   Preds (1): B63
   Succs (2): B13 B12

 [B15]
   Preds (2): B16 B17
   Succs (1): B63

 [B16]
   1: DeclRefExpr 0x55e83d128070 <sds.c:1029:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: UnaryOperator 0x55e83d128098 <sds.c:1029:25, col:26> 'const char *' postfix '++'
`-DeclRefExpr 0x55e83d128070 <col:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B16.1]++
   Preds (1): B17
   Succs (1): B15

 [B17]
   1: DeclRefExpr 0x55e83d127ff8 <sds.c:1029:22> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d128020 <sds.c:1029:22> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d127ff8 <col:22> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B17.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d128038 <sds.c:1029:21, col:22> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d128020 <col:22> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d127ff8 <col:22> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B17.2]
   4: ImplicitCastExpr 0x55e83d128058 <sds.c:1029:21, col:22> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d128038 <col:21, col:22> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d128020 <col:22> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d127ff8 <col:22> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B17.3] (ImplicitCastExpr, LValueToRValue, char)
   T: if [B17.4]
   Preds (11): B19 B20 B21 B22 B27 B30 B35 B39
      B42 B47 B57
   Succs (2): B16 B15

 [B18]
   1: DeclRefExpr 0x55e83d1278f0 <sds.c:1010:29> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d127918 <sds.c:1010:29> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1278f0 <col:29> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B18.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d127930 <sds.c:1010:28, col:29> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d127918 <col:29> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1278f0 <col:29> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B18.2]
   4: ImplicitCastExpr 0x55e83d127960 <sds.c:1010:28, col:29> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d127930 <col:28, col:29> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d127918 <col:29> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1278f0 <col:29> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B18.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55e83d127978 <sds.c:1010:28, col:29> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d127960 <col:28, col:29> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d127930 <col:28, col:29> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d127918 <col:29> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1278f0 <col:29> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B18.4] (ImplicitCastExpr, IntegralCast, int)
   T: switch [B18.5]
   Preds (1): B38
   Succs (8): B20 B21 B23 B24 B25 B26 B22 B19

 [B19]
  default:
   1: DeclRefExpr 0x55e83d127d80 <sds.c:1025:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
   2: ImplicitCastExpr 0x55e83d127e18 <sds.c:1025:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d127d80 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
[B19.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
   3: DeclRefExpr 0x55e83d127da8 <sds.c:1025:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   4: ImplicitCastExpr 0x55e83d127e70 <sds.c:1025:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d127da8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B19.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x55e83d127dd0 <sds.c:1025:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   6: ImplicitCastExpr 0x55e83d127e88 <sds.c:1025:53> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d127dd0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B19.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: ImplicitCastExpr 0x55e83d127ea0 <sds.c:1025:53> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d127e88 <col:53> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d127dd0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B19.6] (ImplicitCastExpr, BitCast, const void *)
   8: IntegerLiteral 0x55e83d127df8 <sds.c:1025:55> 'int' 1
1
   9: ImplicitCastExpr 0x55e83d127eb8 <sds.c:1025:55> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d127df8 <col:55> 'int' 1
[B19.8] (ImplicitCastExpr, IntegralCast, size_t)
  10: CallExpr 0x55e83d127e30 <sds.c:1025:35, col:56> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d127e18 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d127d80 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x55e83d127e70 <col:45> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d127da8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
|-ImplicitCastExpr 0x55e83d127ea0 <col:53> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d127e88 <col:53> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d127dd0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-ImplicitCastExpr 0x55e83d127eb8 <col:55> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d127df8 <col:55> 'int' 1
[B19.2]([B19.4], [B19.7], [B19.9])
  11: DeclRefExpr 0x55e83d127d58 <sds.c:1025:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  12: BinaryOperator 0x55e83d127ed0 <sds.c:1025:25, col:56> 'char *' '='
|-DeclRefExpr 0x55e83d127d58 <col:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-CallExpr 0x55e83d127e30 <col:35, col:56> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d127e18 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d127d80 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d127e70 <col:45> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d127da8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
  |-ImplicitCastExpr 0x55e83d127ea0 <col:53> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d127e88 <col:53> 'const char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d127dd0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
  `-ImplicitCastExpr 0x55e83d127eb8 <col:55> 'size_t':'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d127df8 <col:55> 'int' 1
[B19.11] = [B19.10]
   T: break;
   Preds (1): B18
   Succs (1): B17

 [B20]
  case '\'':
   1: IntegerLiteral 0x55e83d127d08 <sds.c:1022:30> 'int' 1
1
   2: DeclRefExpr 0x55e83d127ce0 <sds.c:1022:25> 'int' lvalue Var 0x55e83d1241c8 'insq' 'int'
insq
   3: BinaryOperator 0x55e83d127d28 <sds.c:1022:25, col:30> 'int' '='
|-DeclRefExpr 0x55e83d127ce0 <col:25> 'int' lvalue Var 0x55e83d1241c8 'insq' 'int'
`-IntegerLiteral 0x55e83d127d08 <col:30> 'int' 1
[B20.2] = [B20.1]
   T: break;
   Preds (1): B18
   Succs (1): B17

 [B21]
  case '"':
   1: IntegerLiteral 0x55e83d127c40 <sds.c:1019:29> 'int' 1
1
   2: DeclRefExpr 0x55e83d127c18 <sds.c:1019:25> 'int' lvalue Var 0x55e83d124118 'inq' 'int'
inq
   3: BinaryOperator 0x55e83d127c60 <sds.c:1019:25, col:29> 'int' '='
|-DeclRefExpr 0x55e83d127c18 <col:25> 'int' lvalue Var 0x55e83d124118 'inq' 'int'
`-IntegerLiteral 0x55e83d127c40 <col:29> 'int' 1
[B21.2] = [B21.1]
   T: break;
   Preds (1): B18
   Succs (1): B17

 [B22]
  case '\x00':
   1: IntegerLiteral 0x55e83d127b78 <sds.c:1016:30> 'int' 1
1
   2: DeclRefExpr 0x55e83d127b50 <sds.c:1016:25> 'int' lvalue Var 0x55e83d124278 'done' 'int'
done
   3: BinaryOperator 0x55e83d127b98 <sds.c:1016:25, col:30> 'int' '='
|-DeclRefExpr 0x55e83d127b50 <col:25> 'int' lvalue Var 0x55e83d124278 'done' 'int'
`-IntegerLiteral 0x55e83d127b78 <col:30> 'int' 1
[B22.2] = [B22.1]
   T: break;
   Preds (2): B18 B26
   Succs (1): B17

 [B23]
  case ' ':
   Preds (1): B18
   Succs (1): B24

 [B24]
  case '\n':
   Preds (2): B23 B18
   Succs (1): B25

 [B25]
  case '\r':
   Preds (2): B24 B18
   Succs (1): B26

 [B26]
  case '\t':
   Preds (2): B25 B18
   Succs (1): B22

 [B27]
   1: DeclRefExpr 0x55e83d1276a0 <sds.c:1007:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
   2: ImplicitCastExpr 0x55e83d127738 <sds.c:1007:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1276a0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
[B27.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
   3: DeclRefExpr 0x55e83d1276c8 <sds.c:1007:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   4: ImplicitCastExpr 0x55e83d127790 <sds.c:1007:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1276c8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B27.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x55e83d1276f0 <sds.c:1007:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   6: ImplicitCastExpr 0x55e83d1277a8 <sds.c:1007:53> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1276f0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B27.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: ImplicitCastExpr 0x55e83d1277c0 <sds.c:1007:53> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d1277a8 <col:53> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1276f0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B27.6] (ImplicitCastExpr, BitCast, const void *)
   8: IntegerLiteral 0x55e83d127718 <sds.c:1007:55> 'int' 1
1
   9: ImplicitCastExpr 0x55e83d1277d8 <sds.c:1007:55> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d127718 <col:55> 'int' 1
[B27.8] (ImplicitCastExpr, IntegralCast, size_t)
  10: CallExpr 0x55e83d127750 <sds.c:1007:35, col:56> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d127738 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1276a0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x55e83d127790 <col:45> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1276c8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
|-ImplicitCastExpr 0x55e83d1277c0 <col:53> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d1277a8 <col:53> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1276f0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-ImplicitCastExpr 0x55e83d1277d8 <col:55> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d127718 <col:55> 'int' 1
[B27.2]([B27.4], [B27.7], [B27.9])
  11: DeclRefExpr 0x55e83d127678 <sds.c:1007:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  12: BinaryOperator 0x55e83d1277f0 <sds.c:1007:25, col:56> 'char *' '='
|-DeclRefExpr 0x55e83d127678 <col:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-CallExpr 0x55e83d127750 <col:35, col:56> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d127738 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d1276a0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d127790 <col:45> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d1276c8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
  |-ImplicitCastExpr 0x55e83d1277c0 <col:53> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d1277a8 <col:53> 'const char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d1276f0 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
  `-ImplicitCastExpr 0x55e83d1277d8 <col:55> 'size_t':'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d127718 <col:55> 'int' 1
[B27.11] = [B27.10]
   Preds (1): B29
   Succs (1): B17

 [B28]
   T: goto err;
   Preds (1): B29
   Succs (1): B7

 [B29]
   1: DeclRefExpr 0x55e83d1275b0 <sds.c:1003:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d1275d8 <sds.c:1003:34> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1275b0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B29.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d1275f0 <sds.c:1003:33, col:34> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d1275d8 <col:34> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1275b0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B29.2]
   4: ImplicitCastExpr 0x55e83d127610 <sds.c:1003:33, col:34> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d1275f0 <col:33, col:34> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d1275d8 <col:34> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1275b0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B29.3] (ImplicitCastExpr, LValueToRValue, char)
   5: UnaryOperator 0x55e83d127628 <sds.c:1003:32, col:34> 'int' prefix '!'
`-ImplicitCastExpr 0x55e83d127610 <col:33, col:34> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d1275f0 <col:33, col:34> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d1275d8 <col:34> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1275b0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
![B29.4]
   T: if [B29.5]
   Preds (1): B34
   Succs (2): B28 B27

 [B30]
   1: IntegerLiteral 0x55e83d127548 <sds.c:1002:30> 'int' 1
1
   2: DeclRefExpr 0x55e83d127520 <sds.c:1002:25> 'int' lvalue Var 0x55e83d124278 'done' 'int'
done
   3: BinaryOperator 0x55e83d127568 <sds.c:1002:25, col:30> 'int' '='
|-DeclRefExpr 0x55e83d127520 <col:25> 'int' lvalue Var 0x55e83d124278 'done' 'int'
`-IntegerLiteral 0x55e83d127548 <col:30> 'int' 1
[B30.2] = [B30.1]
   Preds (2): B32 B33
   Succs (1): B17

 [B31]
   T: goto err;
   Preds (1): B32
   Succs (1): B7

 [B32]
   1: DeclRefExpr 0x55e83d1270e8 </usr/include/ctype.h:89:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
__ctype_b_loc
   2: ImplicitCastExpr 0x55e83d127110 </usr/include/ctype.h:89:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
[B32.1] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned short **(*)(void))
   3: CallExpr 0x55e83d127128 </usr/include/ctype.h:89:6, col:21> 'const unsigned short **'
`-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
[B32.2]()
   4: UnaryOperator 0x55e83d127150 </usr/include/ctype.h:89:5, col:21> 'const unsigned short *' lvalue prefix '*'
`-CallExpr 0x55e83d127128 <col:6, col:21> 'const unsigned short **'
  `-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
*[B32.3]
   5: ImplicitCastExpr 0x55e83d127320 </usr/include/ctype.h:89:4, col:22> 'const unsigned short *' <LValueToRValue>
`-ParenExpr 0x55e83d127170 <col:4, col:22> 'const unsigned short *' lvalue
  `-UnaryOperator 0x55e83d127150 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    `-CallExpr 0x55e83d127128 <col:6, col:21> 'const unsigned short **'
      `-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
([B32.4]) (ImplicitCastExpr, LValueToRValue, const unsigned short *)
   6: DeclRefExpr 0x55e83d127190 <sds.c:1001:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   7: ImplicitCastExpr 0x55e83d1271d8 <sds.c:1001:50> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B32.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: IntegerLiteral 0x55e83d1271b8 <sds.c:1001:52> 'int' 1
1
   9: BinaryOperator 0x55e83d1271f0 <sds.c:1001:50, col:52> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
[B32.7] + [B32.8]
  10: UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
  `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
*([B32.9])
  11: ImplicitCastExpr 0x55e83d1272e0 </usr/include/ctype.h:89:30, col:32> 'char' <LValueToRValue>
`-ParenExpr 0x55e83d1272c0 <col:30, col:32> 'const char' lvalue
  `-ParenExpr 0x55e83d127258 <line:197:31, col:33> 'const char' lvalue
    `-UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
      `-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
        `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
          |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
          `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
(([B32.10])) (ImplicitCastExpr, LValueToRValue, char)
  12: CStyleCastExpr 0x55e83d1272f8 </usr/include/ctype.h:89:24, col:32> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1272e0 <col:30, col:32> 'char' <LValueToRValue>
  `-ParenExpr 0x55e83d1272c0 <col:30, col:32> 'const char' lvalue
    `-ParenExpr 0x55e83d127258 <line:197:31, col:33> 'const char' lvalue
      `-UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
        `-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
          `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
            |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
            `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
(int)[B32.11] (CStyleCastExpr, IntegralCast, int)
  13: ArraySubscriptExpr 0x55e83d127338 </usr/include/ctype.h:89:4, col:33> 'const unsigned short' lvalue
|-ImplicitCastExpr 0x55e83d127320 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
| `-ParenExpr 0x55e83d127170 <col:4, col:22> 'const unsigned short *' lvalue
|   `-UnaryOperator 0x55e83d127150 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     `-CallExpr 0x55e83d127128 <col:6, col:21> 'const unsigned short **'
|       `-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
`-CStyleCastExpr 0x55e83d1272f8 <col:24, col:32> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d1272e0 <col:30, col:32> 'char' <LValueToRValue>
    `-ParenExpr 0x55e83d1272c0 <col:30, col:32> 'const char' lvalue
      `-ParenExpr 0x55e83d127258 <line:197:31, col:33> 'const char' lvalue
        `-UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
          `-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
            `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
              |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
              | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
              `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
[B32.5][[B32.12]]
  14: ImplicitCastExpr 0x55e83d1273c8 </usr/include/ctype.h:89:4, col:33> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d127338 <col:4, col:33> 'const unsigned short' lvalue
  |-ImplicitCastExpr 0x55e83d127320 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  | `-ParenExpr 0x55e83d127170 <col:4, col:22> 'const unsigned short *' lvalue
  |   `-UnaryOperator 0x55e83d127150 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     `-CallExpr 0x55e83d127128 <col:6, col:21> 'const unsigned short **'
  |       `-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
  `-CStyleCastExpr 0x55e83d1272f8 <col:24, col:32> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d1272e0 <col:30, col:32> 'char' <LValueToRValue>
      `-ParenExpr 0x55e83d1272c0 <col:30, col:32> 'const char' lvalue
        `-ParenExpr 0x55e83d127258 <line:197:31, col:33> 'const char' lvalue
          `-UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
            `-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
              `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
                |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
                | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
                `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
[B32.13] (ImplicitCastExpr, LValueToRValue, unsigned short)
  15: ImplicitCastExpr 0x55e83d1273e0 </usr/include/ctype.h:89:4, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1273c8 <col:4, col:33> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d127338 <col:4, col:33> 'const unsigned short' lvalue
    |-ImplicitCastExpr 0x55e83d127320 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    | `-ParenExpr 0x55e83d127170 <col:4, col:22> 'const unsigned short *' lvalue
    |   `-UnaryOperator 0x55e83d127150 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     `-CallExpr 0x55e83d127128 <col:6, col:21> 'const unsigned short **'
    |       `-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
    `-CStyleCastExpr 0x55e83d1272f8 <col:24, col:32> 'int' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d1272e0 <col:30, col:32> 'char' <LValueToRValue>
        `-ParenExpr 0x55e83d1272c0 <col:30, col:32> 'const char' lvalue
          `-ParenExpr 0x55e83d127258 <line:197:31, col:33> 'const char' lvalue
            `-UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
              `-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
                `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
                  |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
                  | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
                  `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
[B32.14] (ImplicitCastExpr, IntegralCast, int)
  16: DeclRefExpr 0x55e83d127360 </usr/include/ctype.h:197:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
_ISspace
  17: CStyleCastExpr 0x55e83d1273a0 </usr/include/ctype.h:89:37, line:197:36> 'unsigned short' <IntegralCast>
`-DeclRefExpr 0x55e83d127360 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
(unsigned short)[B32.16] (CStyleCastExpr, IntegralCast, unsigned short)
  18: ImplicitCastExpr 0x55e83d1273f8 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
`-CStyleCastExpr 0x55e83d1273a0 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
  `-DeclRefExpr 0x55e83d127360 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
[B32.17] (ImplicitCastExpr, IntegralCast, int)
  19: BinaryOperator 0x55e83d127410 </usr/include/ctype.h:89:4, line:197:36> 'int' '&'
|-ImplicitCastExpr 0x55e83d1273e0 <line:89:4, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d1273c8 <col:4, col:33> 'unsigned short' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55e83d127338 <col:4, col:33> 'const unsigned short' lvalue
|     |-ImplicitCastExpr 0x55e83d127320 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     | `-ParenExpr 0x55e83d127170 <col:4, col:22> 'const unsigned short *' lvalue
|     |   `-UnaryOperator 0x55e83d127150 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     `-CallExpr 0x55e83d127128 <col:6, col:21> 'const unsigned short **'
|     |       `-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |         `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
|     `-CStyleCastExpr 0x55e83d1272f8 <col:24, col:32> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55e83d1272e0 <col:30, col:32> 'char' <LValueToRValue>
|         `-ParenExpr 0x55e83d1272c0 <col:30, col:32> 'const char' lvalue
|           `-ParenExpr 0x55e83d127258 <line:197:31, col:33> 'const char' lvalue
|             `-UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
|               `-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
|                 `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
|                   |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
|                   | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
|                   `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
`-ImplicitCastExpr 0x55e83d1273f8 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
  `-CStyleCastExpr 0x55e83d1273a0 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
    `-DeclRefExpr 0x55e83d127360 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
[B32.15] & [B32.18]
  20: UnaryOperator 0x55e83d127458 <sds.c:1001:39, /usr/include/ctype.h:89:62> 'int' prefix '!'
`-ParenExpr 0x55e83d127438 <col:3, col:62> 'int'
  `-BinaryOperator 0x55e83d127410 <col:4, line:197:36> 'int' '&'
    |-ImplicitCastExpr 0x55e83d1273e0 <line:89:4, col:33> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55e83d1273c8 <col:4, col:33> 'unsigned short' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55e83d127338 <col:4, col:33> 'const unsigned short' lvalue
    |     |-ImplicitCastExpr 0x55e83d127320 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    |     | `-ParenExpr 0x55e83d127170 <col:4, col:22> 'const unsigned short *' lvalue
    |     |   `-UnaryOperator 0x55e83d127150 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     |     `-CallExpr 0x55e83d127128 <col:6, col:21> 'const unsigned short **'
    |     |       `-ImplicitCastExpr 0x55e83d127110 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |     |         `-DeclRefExpr 0x55e83d1270e8 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
    |     `-CStyleCastExpr 0x55e83d1272f8 <col:24, col:32> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e83d1272e0 <col:30, col:32> 'char' <LValueToRValue>
    |         `-ParenExpr 0x55e83d1272c0 <col:30, col:32> 'const char' lvalue
    |           `-ParenExpr 0x55e83d127258 <line:197:31, col:33> 'const char' lvalue
    |             `-UnaryOperator 0x55e83d127238 <sds.c:1001:48, col:53> 'const char' lvalue prefix '*'
    |               `-ParenExpr 0x55e83d127218 <col:49, col:53> 'const char *'
    |                 `-BinaryOperator 0x55e83d1271f0 <col:50, col:52> 'const char *' '+'
    |                   |-ImplicitCastExpr 0x55e83d1271d8 <col:50> 'const char *' <LValueToRValue>
    |                   | `-DeclRefExpr 0x55e83d127190 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    |                   `-IntegerLiteral 0x55e83d1271b8 <col:52> 'int' 1
    `-ImplicitCastExpr 0x55e83d1273f8 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
      `-CStyleCastExpr 0x55e83d1273a0 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
        `-DeclRefExpr 0x55e83d127360 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
!([B32.19])
   T: if [B33.7] && [B32.20]
   Preds (1): B33
   Succs (2): B31 B30

 [B33]
   1: DeclRefExpr 0x55e83d127020 <sds.c:1001:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d127068 <sds.c:1001:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d127020 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B33.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x55e83d127048 <sds.c:1001:33> 'int' 1
1
   4: BinaryOperator 0x55e83d127080 <sds.c:1001:31, col:33> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d127068 <col:31> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d127020 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d127048 <col:33> 'int' 1
[B33.2] + [B33.3]
   5: UnaryOperator 0x55e83d1270c8 <sds.c:1001:29, col:34> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d1270a8 <col:30, col:34> 'const char *'
  `-BinaryOperator 0x55e83d127080 <col:31, col:33> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d127068 <col:31> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d127020 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d127048 <col:33> 'int' 1
*([B33.4])
   6: ImplicitCastExpr 0x55e83d127478 <sds.c:1001:29, col:34> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d1270c8 <col:29, col:34> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d1270a8 <col:30, col:34> 'const char *'
    `-BinaryOperator 0x55e83d127080 <col:31, col:33> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d127068 <col:31> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d127020 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d127048 <col:33> 'int' 1
[B33.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d127490 <sds.c:1001:29, col:34> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d127478 <col:29, col:34> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d1270c8 <col:29, col:34> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d1270a8 <col:30, col:34> 'const char *'
      `-BinaryOperator 0x55e83d127080 <col:31, col:33> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d127068 <col:31> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d127020 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d127048 <col:33> 'int' 1
[B33.6] (ImplicitCastExpr, IntegralCast, int)
   T: [B33.7] && ...
   Preds (1): B34
   Succs (2): B32 B30

 [B34]
   1: DeclRefExpr 0x55e83d126f50 <sds.c:998:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d126f78 <sds.c:998:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d126f50 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B34.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d126f90 <sds.c:998:32, col:33> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d126f78 <col:33> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d126f50 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B34.2]
   4: ImplicitCastExpr 0x55e83d126fc8 <sds.c:998:32, col:33> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d126f90 <col:32, col:33> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d126f78 <col:33> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d126f50 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B34.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55e83d126fe0 <sds.c:998:32, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d126fc8 <col:32, col:33> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d126f90 <col:32, col:33> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d126f78 <col:33> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d126f50 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B34.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x55e83d126fb0 <sds.c:998:38> 'int' 39
'\''
   7: BinaryOperator 0x55e83d126ff8 <sds.c:998:32, col:38> 'int' '=='
|-ImplicitCastExpr 0x55e83d126fe0 <col:32, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d126fc8 <col:32, col:33> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d126f90 <col:32, col:33> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55e83d126f78 <col:33> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d126f50 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-CharacterLiteral 0x55e83d126fb0 <col:38> 'int' 39
[B34.5] == [B34.6]
   T: if [B34.7]
   Preds (2): B36 B37
   Succs (2): B33 B29

 [B35]
   1: DeclRefExpr 0x55e83d126d40 <sds.c:996:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: UnaryOperator 0x55e83d126d68 <sds.c:996:25, col:26> 'const char *' postfix '++'
`-DeclRefExpr 0x55e83d126d40 <col:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B35.1]++
   3: DeclRefExpr 0x55e83d126db0 <sds.c:997:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
   4: ImplicitCastExpr 0x55e83d126e50 <sds.c:997:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d126db0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
[B35.3] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
   5: DeclRefExpr 0x55e83d126dd8 <sds.c:997:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   6: ImplicitCastExpr 0x55e83d126ea8 <sds.c:997:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d126dd8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B35.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: StringLiteral 0x55e83d126e00 <sds.c:997:53> 'const char [2]' lvalue "'"
"'"
   8: ImplicitCastExpr 0x55e83d126ec0 <sds.c:997:53> 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x55e83d126e00 <col:53> 'const char [2]' lvalue "'"
[B35.7] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   9: ImplicitCastExpr 0x55e83d126ed8 <sds.c:997:53> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d126ec0 <col:53> 'const char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55e83d126e00 <col:53> 'const char [2]' lvalue "'"
[B35.8] (ImplicitCastExpr, BitCast, const void *)
  10: IntegerLiteral 0x55e83d126e30 <sds.c:997:57> 'int' 1
1
  11: ImplicitCastExpr 0x55e83d126ef0 <sds.c:997:57> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d126e30 <col:57> 'int' 1
[B35.10] (ImplicitCastExpr, IntegralCast, size_t)
  12: CallExpr 0x55e83d126e68 <sds.c:997:35, col:58> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d126e50 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d126db0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x55e83d126ea8 <col:45> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d126dd8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
|-ImplicitCastExpr 0x55e83d126ed8 <col:53> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d126ec0 <col:53> 'const char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55e83d126e00 <col:53> 'const char [2]' lvalue "'"
`-ImplicitCastExpr 0x55e83d126ef0 <col:57> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d126e30 <col:57> 'int' 1
[B35.4]([B35.6], [B35.9], [B35.11])
  13: DeclRefExpr 0x55e83d126d88 <sds.c:997:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  14: BinaryOperator 0x55e83d126f08 <sds.c:997:25, col:58> 'char *' '='
|-DeclRefExpr 0x55e83d126d88 <col:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-CallExpr 0x55e83d126e68 <col:35, col:58> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d126e50 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d126db0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d126ea8 <col:45> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d126dd8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
  |-ImplicitCastExpr 0x55e83d126ed8 <col:53> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d126ec0 <col:53> 'const char *' <ArrayToPointerDecay>
  |   `-StringLiteral 0x55e83d126e00 <col:53> 'const char [2]' lvalue "'"
  `-ImplicitCastExpr 0x55e83d126ef0 <col:57> 'size_t':'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d126e30 <col:57> 'int' 1
[B35.13] = [B35.12]
   Preds (1): B36
   Succs (1): B17

 [B36]
   1: DeclRefExpr 0x55e83d126be0 <sds.c:995:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d126c28 <sds.c:995:41> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d126be0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B36.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x55e83d126c08 <sds.c:995:43> 'int' 1
1
   4: BinaryOperator 0x55e83d126c40 <sds.c:995:41, col:43> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d126c28 <col:41> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d126be0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d126c08 <col:43> 'int' 1
[B36.2] + [B36.3]
   5: UnaryOperator 0x55e83d126c88 <sds.c:995:39, col:44> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d126c68 <col:40, col:44> 'const char *'
  `-BinaryOperator 0x55e83d126c40 <col:41, col:43> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d126c28 <col:41> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d126be0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d126c08 <col:43> 'int' 1
*([B36.4])
   6: ImplicitCastExpr 0x55e83d126cc0 <sds.c:995:39, col:44> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d126c88 <col:39, col:44> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d126c68 <col:40, col:44> 'const char *'
    `-BinaryOperator 0x55e83d126c40 <col:41, col:43> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d126c28 <col:41> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d126be0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d126c08 <col:43> 'int' 1
[B36.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d126cd8 <sds.c:995:39, col:44> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d126cc0 <col:39, col:44> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d126c88 <col:39, col:44> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d126c68 <col:40, col:44> 'const char *'
      `-BinaryOperator 0x55e83d126c40 <col:41, col:43> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d126c28 <col:41> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d126be0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d126c08 <col:43> 'int' 1
[B36.6] (ImplicitCastExpr, IntegralCast, int)
   8: CharacterLiteral 0x55e83d126ca8 <sds.c:995:49> 'int' 39
'\''
   9: BinaryOperator 0x55e83d126cf0 <sds.c:995:39, col:49> 'int' '=='
|-ImplicitCastExpr 0x55e83d126cd8 <col:39, col:44> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d126cc0 <col:39, col:44> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d126c88 <col:39, col:44> 'const char' lvalue prefix '*'
|     `-ParenExpr 0x55e83d126c68 <col:40, col:44> 'const char *'
|       `-BinaryOperator 0x55e83d126c40 <col:41, col:43> 'const char *' '+'
|         |-ImplicitCastExpr 0x55e83d126c28 <col:41> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x55e83d126be0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
|         `-IntegerLiteral 0x55e83d126c08 <col:43> 'int' 1
`-CharacterLiteral 0x55e83d126ca8 <col:49> 'int' 39
[B36.7] == [B36.8]
   T: if [B37.7] && [B36.9]
   Preds (1): B37
   Succs (2): B35 B34

 [B37]
   1: DeclRefExpr 0x55e83d126b10 <sds.c:995:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d126b38 <sds.c:995:26> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d126b10 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B37.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d126b50 <sds.c:995:25, col:26> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d126b38 <col:26> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d126b10 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B37.2]
   4: ImplicitCastExpr 0x55e83d126b88 <sds.c:995:25, col:26> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d126b50 <col:25, col:26> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d126b38 <col:26> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d126b10 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B37.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55e83d126ba0 <sds.c:995:25, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d126b88 <col:25, col:26> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d126b50 <col:25, col:26> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d126b38 <col:26> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d126b10 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B37.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x55e83d126b70 <sds.c:995:31> 'int' 92
'\\'
   7: BinaryOperator 0x55e83d126bb8 <sds.c:995:25, col:31> 'int' '=='
|-ImplicitCastExpr 0x55e83d126ba0 <col:25, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d126b88 <col:25, col:26> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d126b50 <col:25, col:26> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55e83d126b38 <col:26> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d126b10 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-CharacterLiteral 0x55e83d126b70 <col:31> 'int' 92
[B37.5] == [B37.6]
   T: [B37.7] && ...
   Preds (1): B38
   Succs (2): B36 B34

 [B38]
   1: DeclRefExpr 0x55e83d126ad0 <sds.c:994:28> 'int' lvalue Var 0x55e83d1241c8 'insq' 'int'
insq
   2: ImplicitCastExpr 0x55e83d126af8 <sds.c:994:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d126ad0 <col:28> 'int' lvalue Var 0x55e83d1241c8 'insq' 'int'
[B38.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B38.2]
   Preds (1): B62
   Succs (2): B37 B18

 [B39]
   1: DeclRefExpr 0x55e83d1264b0 <sds.c:992:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
   2: ImplicitCastExpr 0x55e83d126548 <sds.c:992:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1264b0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
[B39.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
   3: DeclRefExpr 0x55e83d1264d8 <sds.c:992:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   4: ImplicitCastExpr 0x55e83d1265a0 <sds.c:992:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1264d8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B39.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x55e83d126500 <sds.c:992:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   6: ImplicitCastExpr 0x55e83d126950 <sds.c:992:53> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d126500 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B39.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: ImplicitCastExpr 0x55e83d126968 <sds.c:992:53> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d126950 <col:53> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d126500 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B39.6] (ImplicitCastExpr, BitCast, const void *)
   8: IntegerLiteral 0x55e83d126528 <sds.c:992:55> 'int' 1
1
   9: ImplicitCastExpr 0x55e83d126980 <sds.c:992:55> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d126528 <col:55> 'int' 1
[B39.8] (ImplicitCastExpr, IntegralCast, size_t)
  10: CallExpr 0x55e83d126560 <sds.c:992:35, col:56> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d126548 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1264b0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x55e83d1265a0 <col:45> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1264d8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
|-ImplicitCastExpr 0x55e83d126968 <col:53> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d126950 <col:53> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d126500 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-ImplicitCastExpr 0x55e83d126980 <col:55> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d126528 <col:55> 'int' 1
[B39.2]([B39.4], [B39.7], [B39.9])
  11: DeclRefExpr 0x55e83d126488 <sds.c:992:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  12: BinaryOperator 0x55e83d126998 <sds.c:992:25, col:56> 'char *' '='
|-DeclRefExpr 0x55e83d126488 <col:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-CallExpr 0x55e83d126560 <col:35, col:56> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d126548 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d1264b0 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d1265a0 <col:45> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d1264d8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
  |-ImplicitCastExpr 0x55e83d126968 <col:53> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d126950 <col:53> 'const char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55e83d126500 <col:53> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
  `-ImplicitCastExpr 0x55e83d126980 <col:55> 'size_t':'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d126528 <col:55> 'int' 1
[B39.11] = [B39.10]
   Preds (1): B41
   Succs (1): B17

 [B40]
   T: goto err;
   Preds (1): B41
   Succs (1): B7

 [B41]
   1: DeclRefExpr 0x55e83d1263c0 <sds.c:988:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d1263e8 <sds.c:988:34> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1263c0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B41.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d126400 <sds.c:988:33, col:34> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d1263e8 <col:34> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1263c0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B41.2]
   4: ImplicitCastExpr 0x55e83d126420 <sds.c:988:33, col:34> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d126400 <col:33, col:34> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d1263e8 <col:34> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1263c0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B41.3] (ImplicitCastExpr, LValueToRValue, char)
   5: UnaryOperator 0x55e83d126438 <sds.c:988:32, col:34> 'int' prefix '!'
`-ImplicitCastExpr 0x55e83d126420 <col:33, col:34> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d126400 <col:33, col:34> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d1263e8 <col:34> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1263c0 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
![B41.4]
   T: if [B41.5]
   Preds (1): B46
   Succs (2): B40 B39

 [B42]
   1: IntegerLiteral 0x55e83d126358 <sds.c:987:30> 'int' 1
1
   2: DeclRefExpr 0x55e83d126330 <sds.c:987:25> 'int' lvalue Var 0x55e83d124278 'done' 'int'
done
   3: BinaryOperator 0x55e83d126378 <sds.c:987:25, col:30> 'int' '='
|-DeclRefExpr 0x55e83d126330 <col:25> 'int' lvalue Var 0x55e83d124278 'done' 'int'
`-IntegerLiteral 0x55e83d126358 <col:30> 'int' 1
[B42.2] = [B42.1]
   Preds (2): B44 B45
   Succs (1): B17

 [B43]
   T: goto err;
   Preds (1): B44
   Succs (1): B7

 [B44]
   1: DeclRefExpr 0x55e83d125eb0 </usr/include/ctype.h:89:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
__ctype_b_loc
   2: ImplicitCastExpr 0x55e83d125ed8 </usr/include/ctype.h:89:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
[B44.1] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned short **(*)(void))
   3: CallExpr 0x55e83d125ef0 </usr/include/ctype.h:89:6, col:21> 'const unsigned short **'
`-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
[B44.2]()
   4: UnaryOperator 0x55e83d125f18 </usr/include/ctype.h:89:5, col:21> 'const unsigned short *' lvalue prefix '*'
`-CallExpr 0x55e83d125ef0 <col:6, col:21> 'const unsigned short **'
  `-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
*[B44.3]
   5: ImplicitCastExpr 0x55e83d1260e8 </usr/include/ctype.h:89:4, col:22> 'const unsigned short *' <LValueToRValue>
`-ParenExpr 0x55e83d125f38 <col:4, col:22> 'const unsigned short *' lvalue
  `-UnaryOperator 0x55e83d125f18 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    `-CallExpr 0x55e83d125ef0 <col:6, col:21> 'const unsigned short **'
      `-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
([B44.4]) (ImplicitCastExpr, LValueToRValue, const unsigned short *)
   6: DeclRefExpr 0x55e83d125f58 <sds.c:986:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   7: ImplicitCastExpr 0x55e83d125fa0 <sds.c:986:50> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B44.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: IntegerLiteral 0x55e83d125f80 <sds.c:986:52> 'int' 1
1
   9: BinaryOperator 0x55e83d125fb8 <sds.c:986:50, col:52> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
[B44.7] + [B44.8]
  10: UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
  `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
*([B44.9])
  11: ImplicitCastExpr 0x55e83d1260a8 </usr/include/ctype.h:89:30, col:32> 'char' <LValueToRValue>
`-ParenExpr 0x55e83d126088 <col:30, col:32> 'const char' lvalue
  `-ParenExpr 0x55e83d126020 <line:197:31, col:33> 'const char' lvalue
    `-UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
      `-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
        `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
          |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
          `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
(([B44.10])) (ImplicitCastExpr, LValueToRValue, char)
  12: CStyleCastExpr 0x55e83d1260c0 </usr/include/ctype.h:89:24, col:32> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1260a8 <col:30, col:32> 'char' <LValueToRValue>
  `-ParenExpr 0x55e83d126088 <col:30, col:32> 'const char' lvalue
    `-ParenExpr 0x55e83d126020 <line:197:31, col:33> 'const char' lvalue
      `-UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
        `-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
          `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
            |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
            `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
(int)[B44.11] (CStyleCastExpr, IntegralCast, int)
  13: ArraySubscriptExpr 0x55e83d126100 </usr/include/ctype.h:89:4, col:33> 'const unsigned short' lvalue
|-ImplicitCastExpr 0x55e83d1260e8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
| `-ParenExpr 0x55e83d125f38 <col:4, col:22> 'const unsigned short *' lvalue
|   `-UnaryOperator 0x55e83d125f18 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     `-CallExpr 0x55e83d125ef0 <col:6, col:21> 'const unsigned short **'
|       `-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
`-CStyleCastExpr 0x55e83d1260c0 <col:24, col:32> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d1260a8 <col:30, col:32> 'char' <LValueToRValue>
    `-ParenExpr 0x55e83d126088 <col:30, col:32> 'const char' lvalue
      `-ParenExpr 0x55e83d126020 <line:197:31, col:33> 'const char' lvalue
        `-UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
          `-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
            `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
              |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
              | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
              `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
[B44.5][[B44.12]]
  14: ImplicitCastExpr 0x55e83d126190 </usr/include/ctype.h:89:4, col:33> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d126100 <col:4, col:33> 'const unsigned short' lvalue
  |-ImplicitCastExpr 0x55e83d1260e8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  | `-ParenExpr 0x55e83d125f38 <col:4, col:22> 'const unsigned short *' lvalue
  |   `-UnaryOperator 0x55e83d125f18 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     `-CallExpr 0x55e83d125ef0 <col:6, col:21> 'const unsigned short **'
  |       `-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
  `-CStyleCastExpr 0x55e83d1260c0 <col:24, col:32> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d1260a8 <col:30, col:32> 'char' <LValueToRValue>
      `-ParenExpr 0x55e83d126088 <col:30, col:32> 'const char' lvalue
        `-ParenExpr 0x55e83d126020 <line:197:31, col:33> 'const char' lvalue
          `-UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
            `-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
              `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
                |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
                | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
                `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
[B44.13] (ImplicitCastExpr, LValueToRValue, unsigned short)
  15: ImplicitCastExpr 0x55e83d1261a8 </usr/include/ctype.h:89:4, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d126190 <col:4, col:33> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d126100 <col:4, col:33> 'const unsigned short' lvalue
    |-ImplicitCastExpr 0x55e83d1260e8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    | `-ParenExpr 0x55e83d125f38 <col:4, col:22> 'const unsigned short *' lvalue
    |   `-UnaryOperator 0x55e83d125f18 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     `-CallExpr 0x55e83d125ef0 <col:6, col:21> 'const unsigned short **'
    |       `-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
    `-CStyleCastExpr 0x55e83d1260c0 <col:24, col:32> 'int' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d1260a8 <col:30, col:32> 'char' <LValueToRValue>
        `-ParenExpr 0x55e83d126088 <col:30, col:32> 'const char' lvalue
          `-ParenExpr 0x55e83d126020 <line:197:31, col:33> 'const char' lvalue
            `-UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
              `-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
                `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
                  |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
                  | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
                  `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
[B44.14] (ImplicitCastExpr, IntegralCast, int)
  16: DeclRefExpr 0x55e83d126128 </usr/include/ctype.h:197:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
_ISspace
  17: CStyleCastExpr 0x55e83d126168 </usr/include/ctype.h:89:37, line:197:36> 'unsigned short' <IntegralCast>
`-DeclRefExpr 0x55e83d126128 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
(unsigned short)[B44.16] (CStyleCastExpr, IntegralCast, unsigned short)
  18: ImplicitCastExpr 0x55e83d1261c0 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
`-CStyleCastExpr 0x55e83d126168 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
  `-DeclRefExpr 0x55e83d126128 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
[B44.17] (ImplicitCastExpr, IntegralCast, int)
  19: BinaryOperator 0x55e83d1261d8 </usr/include/ctype.h:89:4, line:197:36> 'int' '&'
|-ImplicitCastExpr 0x55e83d1261a8 <line:89:4, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d126190 <col:4, col:33> 'unsigned short' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55e83d126100 <col:4, col:33> 'const unsigned short' lvalue
|     |-ImplicitCastExpr 0x55e83d1260e8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     | `-ParenExpr 0x55e83d125f38 <col:4, col:22> 'const unsigned short *' lvalue
|     |   `-UnaryOperator 0x55e83d125f18 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     `-CallExpr 0x55e83d125ef0 <col:6, col:21> 'const unsigned short **'
|     |       `-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |         `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
|     `-CStyleCastExpr 0x55e83d1260c0 <col:24, col:32> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55e83d1260a8 <col:30, col:32> 'char' <LValueToRValue>
|         `-ParenExpr 0x55e83d126088 <col:30, col:32> 'const char' lvalue
|           `-ParenExpr 0x55e83d126020 <line:197:31, col:33> 'const char' lvalue
|             `-UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
|               `-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
|                 `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
|                   |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
|                   | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
|                   `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
`-ImplicitCastExpr 0x55e83d1261c0 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
  `-CStyleCastExpr 0x55e83d126168 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
    `-DeclRefExpr 0x55e83d126128 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
[B44.15] & [B44.18]
  20: UnaryOperator 0x55e83d126220 <sds.c:986:39, /usr/include/ctype.h:89:62> 'int' prefix '!'
`-ParenExpr 0x55e83d126200 <col:3, col:62> 'int'
  `-BinaryOperator 0x55e83d1261d8 <col:4, line:197:36> 'int' '&'
    |-ImplicitCastExpr 0x55e83d1261a8 <line:89:4, col:33> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55e83d126190 <col:4, col:33> 'unsigned short' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x55e83d126100 <col:4, col:33> 'const unsigned short' lvalue
    |     |-ImplicitCastExpr 0x55e83d1260e8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    |     | `-ParenExpr 0x55e83d125f38 <col:4, col:22> 'const unsigned short *' lvalue
    |     |   `-UnaryOperator 0x55e83d125f18 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     |     `-CallExpr 0x55e83d125ef0 <col:6, col:21> 'const unsigned short **'
    |     |       `-ImplicitCastExpr 0x55e83d125ed8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |     |         `-DeclRefExpr 0x55e83d125eb0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
    |     `-CStyleCastExpr 0x55e83d1260c0 <col:24, col:32> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e83d1260a8 <col:30, col:32> 'char' <LValueToRValue>
    |         `-ParenExpr 0x55e83d126088 <col:30, col:32> 'const char' lvalue
    |           `-ParenExpr 0x55e83d126020 <line:197:31, col:33> 'const char' lvalue
    |             `-UnaryOperator 0x55e83d126000 <sds.c:986:48, col:53> 'const char' lvalue prefix '*'
    |               `-ParenExpr 0x55e83d125fe0 <col:49, col:53> 'const char *'
    |                 `-BinaryOperator 0x55e83d125fb8 <col:50, col:52> 'const char *' '+'
    |                   |-ImplicitCastExpr 0x55e83d125fa0 <col:50> 'const char *' <LValueToRValue>
    |                   | `-DeclRefExpr 0x55e83d125f58 <col:50> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    |                   `-IntegerLiteral 0x55e83d125f80 <col:52> 'int' 1
    `-ImplicitCastExpr 0x55e83d1261c0 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
      `-CStyleCastExpr 0x55e83d126168 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
        `-DeclRefExpr 0x55e83d126128 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
!([B44.19])
   T: if [B45.7] && [B44.20]
   Preds (1): B45
   Succs (2): B43 B42

 [B45]
   1: DeclRefExpr 0x55e83d125de8 <sds.c:986:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d125e30 <sds.c:986:31> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d125de8 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B45.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x55e83d125e10 <sds.c:986:33> 'int' 1
1
   4: BinaryOperator 0x55e83d125e48 <sds.c:986:31, col:33> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d125e30 <col:31> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d125de8 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d125e10 <col:33> 'int' 1
[B45.2] + [B45.3]
   5: UnaryOperator 0x55e83d125e90 <sds.c:986:29, col:34> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d125e70 <col:30, col:34> 'const char *'
  `-BinaryOperator 0x55e83d125e48 <col:31, col:33> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d125e30 <col:31> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d125de8 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d125e10 <col:33> 'int' 1
*([B45.4])
   6: ImplicitCastExpr 0x55e83d126240 <sds.c:986:29, col:34> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d125e90 <col:29, col:34> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d125e70 <col:30, col:34> 'const char *'
    `-BinaryOperator 0x55e83d125e48 <col:31, col:33> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d125e30 <col:31> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d125de8 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d125e10 <col:33> 'int' 1
[B45.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d126258 <sds.c:986:29, col:34> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d126240 <col:29, col:34> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d125e90 <col:29, col:34> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d125e70 <col:30, col:34> 'const char *'
      `-BinaryOperator 0x55e83d125e48 <col:31, col:33> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d125e30 <col:31> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d125de8 <col:31> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d125e10 <col:33> 'int' 1
[B45.6] (ImplicitCastExpr, IntegralCast, int)
   T: [B45.7] && ...
   Preds (1): B46
   Succs (2): B44 B42

 [B46]
   1: DeclRefExpr 0x55e83d125d18 <sds.c:983:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d125d40 <sds.c:983:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d125d18 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B46.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d125d58 <sds.c:983:32, col:33> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d125d40 <col:33> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d125d18 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B46.2]
   4: ImplicitCastExpr 0x55e83d125d90 <sds.c:983:32, col:33> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d125d58 <col:32, col:33> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d125d40 <col:33> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d125d18 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B46.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55e83d125da8 <sds.c:983:32, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d125d90 <col:32, col:33> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d125d58 <col:32, col:33> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d125d40 <col:33> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d125d18 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B46.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x55e83d125d78 <sds.c:983:38> 'int' 34
'"'
   7: BinaryOperator 0x55e83d125dc0 <sds.c:983:32, col:38> 'int' '=='
|-ImplicitCastExpr 0x55e83d125da8 <col:32, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d125d90 <col:32, col:33> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d125d58 <col:32, col:33> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55e83d125d40 <col:33> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d125d18 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-CharacterLiteral 0x55e83d125d78 <col:38> 'int' 34
[B46.5] == [B46.6]
   T: if [B46.7]
   Preds (2): B55 B56
   Succs (2): B45 B41

 [B47]
   1: DeclRefExpr 0x55e83d125b68 <sds.c:982:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
   2: ImplicitCastExpr 0x55e83d125c20 <sds.c:982:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d125b68 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
[B47.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
   3: DeclRefExpr 0x55e83d125b90 <sds.c:982:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   4: ImplicitCastExpr 0x55e83d125c78 <sds.c:982:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d125b90 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B47.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: DeclRefExpr 0x55e83d125bb8 <sds.c:982:54> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
c
   6: UnaryOperator 0x55e83d125be0 <sds.c:982:53, col:54> 'char *' prefix '&'
`-DeclRefExpr 0x55e83d125bb8 <col:54> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
&[B47.5]
   7: ImplicitCastExpr 0x55e83d125c90 <sds.c:982:53, col:54> 'const void *' <BitCast>
`-UnaryOperator 0x55e83d125be0 <col:53, col:54> 'char *' prefix '&'
  `-DeclRefExpr 0x55e83d125bb8 <col:54> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
[B47.6] (ImplicitCastExpr, BitCast, const void *)
   8: IntegerLiteral 0x55e83d125c00 <sds.c:982:56> 'int' 1
1
   9: ImplicitCastExpr 0x55e83d125ca8 <sds.c:982:56> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d125c00 <col:56> 'int' 1
[B47.8] (ImplicitCastExpr, IntegralCast, size_t)
  10: CallExpr 0x55e83d125c38 <sds.c:982:35, col:57> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d125c20 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d125b68 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x55e83d125c78 <col:45> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d125b90 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
|-ImplicitCastExpr 0x55e83d125c90 <col:53, col:54> 'const void *' <BitCast>
| `-UnaryOperator 0x55e83d125be0 <col:53, col:54> 'char *' prefix '&'
|   `-DeclRefExpr 0x55e83d125bb8 <col:54> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
`-ImplicitCastExpr 0x55e83d125ca8 <col:56> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d125c00 <col:56> 'int' 1
[B47.2]([B47.4], [B47.7], [B47.9])
  11: DeclRefExpr 0x55e83d125b40 <sds.c:982:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  12: BinaryOperator 0x55e83d125cc0 <sds.c:982:25, col:57> 'char *' '='
|-DeclRefExpr 0x55e83d125b40 <col:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-CallExpr 0x55e83d125c38 <col:35, col:57> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d125c20 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d125b68 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d125c78 <col:45> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d125b90 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
  |-ImplicitCastExpr 0x55e83d125c90 <col:53, col:54> 'const void *' <BitCast>
  | `-UnaryOperator 0x55e83d125be0 <col:53, col:54> 'char *' prefix '&'
  |   `-DeclRefExpr 0x55e83d125bb8 <col:54> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
  `-ImplicitCastExpr 0x55e83d125ca8 <col:56> 'size_t':'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d125c00 <col:56> 'int' 1
[B47.11] = [B47.10]
   Preds (6): B49 B50 B51 B52 B53 B54
   Succs (1): B17

 [B48]
   1: DeclStmt 0x55e83d125450 <sds.c:971:25, col:31>col:30
`-VarDecl 0x55e83d1253f0 <col:25, col:30> col:30 used c 'char'
char c;
   2: DeclRefExpr 0x55e83d125468 <sds.c:973:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   3: UnaryOperator 0x55e83d125490 <sds.c:973:25, col:26> 'const char *' postfix '++'
`-DeclRefExpr 0x55e83d125468 <col:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B48.2]++
   4: DeclRefExpr 0x55e83d1254b0 <sds.c:974:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   5: ImplicitCastExpr 0x55e83d1254d8 <sds.c:974:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1254b0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B48.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: UnaryOperator 0x55e83d1254f0 <sds.c:974:32, col:33> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d1254d8 <col:33> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1254b0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B48.5]
   7: ImplicitCastExpr 0x55e83d125510 <sds.c:974:32, col:33> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d1254f0 <col:32, col:33> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d1254d8 <col:33> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1254b0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B48.6] (ImplicitCastExpr, LValueToRValue, char)
   8: ImplicitCastExpr 0x55e83d125528 <sds.c:974:32, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d125510 <col:32, col:33> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d1254f0 <col:32, col:33> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d1254d8 <col:33> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1254b0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B48.7] (ImplicitCastExpr, IntegralCast, int)
   T: switch [B48.8]
   Preds (1): B55
   Succs (6): B50 B51 B52 B53 B54 B49

 [B49]
  default:
   1: DeclRefExpr 0x55e83d125a08 <sds.c:980:39> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d125a30 <sds.c:980:39> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d125a08 <col:39> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B49.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d125a48 <sds.c:980:38, col:39> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d125a30 <col:39> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d125a08 <col:39> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B49.2]
   4: ImplicitCastExpr 0x55e83d125a68 <sds.c:980:38, col:39> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d125a48 <col:38, col:39> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d125a30 <col:39> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d125a08 <col:39> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B49.3] (ImplicitCastExpr, LValueToRValue, char)
   5: DeclRefExpr 0x55e83d1259e0 <sds.c:980:34> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
c
   6: BinaryOperator 0x55e83d125a80 <sds.c:980:34, col:39> 'char' '='
|-DeclRefExpr 0x55e83d1259e0 <col:34> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
`-ImplicitCastExpr 0x55e83d125a68 <col:38, col:39> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d125a48 <col:38, col:39> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d125a30 <col:39> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d125a08 <col:39> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B49.5] = [B49.4]
   T: break;
   Preds (1): B48
   Succs (1): B47

 [B50]
  case 'a':
   1: CharacterLiteral 0x55e83d125980 <sds.c:979:39> 'int' 7
'\a'
   2: ImplicitCastExpr 0x55e83d125998 <sds.c:979:39> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d125980 <col:39> 'int' 7
[B50.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d125958 <sds.c:979:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
c
   4: BinaryOperator 0x55e83d1259b0 <sds.c:979:35, col:39> 'char' '='
|-DeclRefExpr 0x55e83d125958 <col:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
`-ImplicitCastExpr 0x55e83d125998 <col:39> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d125980 <col:39> 'int' 7
[B50.3] = [B50.2]
   T: break;
   Preds (1): B48
   Succs (1): B47

 [B51]
  case 'b':
   1: CharacterLiteral 0x55e83d1258a8 <sds.c:978:39> 'int' 8
'\b'
   2: ImplicitCastExpr 0x55e83d1258c0 <sds.c:978:39> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d1258a8 <col:39> 'int' 8
[B51.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d125880 <sds.c:978:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
c
   4: BinaryOperator 0x55e83d1258d8 <sds.c:978:35, col:39> 'char' '='
|-DeclRefExpr 0x55e83d125880 <col:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
`-ImplicitCastExpr 0x55e83d1258c0 <col:39> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d1258a8 <col:39> 'int' 8
[B51.3] = [B51.2]
   T: break;
   Preds (1): B48
   Succs (1): B47

 [B52]
  case 't':
   1: CharacterLiteral 0x55e83d1257d0 <sds.c:977:39> 'int' 9
'\t'
   2: ImplicitCastExpr 0x55e83d1257e8 <sds.c:977:39> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d1257d0 <col:39> 'int' 9
[B52.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d1257a8 <sds.c:977:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
c
   4: BinaryOperator 0x55e83d125800 <sds.c:977:35, col:39> 'char' '='
|-DeclRefExpr 0x55e83d1257a8 <col:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
`-ImplicitCastExpr 0x55e83d1257e8 <col:39> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d1257d0 <col:39> 'int' 9
[B52.3] = [B52.2]
   T: break;
   Preds (1): B48
   Succs (1): B47

 [B53]
  case 'r':
   1: CharacterLiteral 0x55e83d1256f8 <sds.c:976:39> 'int' 13
'\r'
   2: ImplicitCastExpr 0x55e83d125710 <sds.c:976:39> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d1256f8 <col:39> 'int' 13
[B53.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d1256d0 <sds.c:976:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
c
   4: BinaryOperator 0x55e83d125728 <sds.c:976:35, col:39> 'char' '='
|-DeclRefExpr 0x55e83d1256d0 <col:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
`-ImplicitCastExpr 0x55e83d125710 <col:39> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d1256f8 <col:39> 'int' 13
[B53.3] = [B53.2]
   T: break;
   Preds (1): B48
   Succs (1): B47

 [B54]
  case 'n':
   1: CharacterLiteral 0x55e83d125620 <sds.c:975:39> 'int' 10
'\n'
   2: ImplicitCastExpr 0x55e83d125638 <sds.c:975:39> 'char' <IntegralCast>
`-CharacterLiteral 0x55e83d125620 <col:39> 'int' 10
[B54.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d1255f8 <sds.c:975:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
c
   4: BinaryOperator 0x55e83d125650 <sds.c:975:35, col:39> 'char' '='
|-DeclRefExpr 0x55e83d1255f8 <col:35> 'char' lvalue Var 0x55e83d1253f0 'c' 'char'
`-ImplicitCastExpr 0x55e83d125638 <col:39> 'char' <IntegralCast>
  `-CharacterLiteral 0x55e83d125620 <col:39> 'int' 10
[B54.3] = [B54.2]
   T: break;
   Preds (1): B48
   Succs (1): B47

 [B55]
   1: DeclRefExpr 0x55e83d1252c0 <sds.c:970:48> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d125308 <sds.c:970:48> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1252c0 <col:48> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B55.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x55e83d1252e8 <sds.c:970:50> 'int' 1
1
   4: BinaryOperator 0x55e83d125320 <sds.c:970:48, col:50> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d125308 <col:48> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1252c0 <col:48> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d1252e8 <col:50> 'int' 1
[B55.2] + [B55.3]
   5: UnaryOperator 0x55e83d125368 <sds.c:970:46, col:51> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d125348 <col:47, col:51> 'const char *'
  `-BinaryOperator 0x55e83d125320 <col:48, col:50> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d125308 <col:48> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d1252c0 <col:48> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d1252e8 <col:50> 'int' 1
*([B55.4])
   6: ImplicitCastExpr 0x55e83d125388 <sds.c:970:46, col:51> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d125368 <col:46, col:51> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d125348 <col:47, col:51> 'const char *'
    `-BinaryOperator 0x55e83d125320 <col:48, col:50> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d125308 <col:48> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d1252c0 <col:48> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d1252e8 <col:50> 'int' 1
[B55.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d1253a0 <sds.c:970:46, col:51> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d125388 <col:46, col:51> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d125368 <col:46, col:51> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d125348 <col:47, col:51> 'const char *'
      `-BinaryOperator 0x55e83d125320 <col:48, col:50> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d125308 <col:48> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d1252c0 <col:48> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d1252e8 <col:50> 'int' 1
[B55.6] (ImplicitCastExpr, IntegralCast, int)
   T: if [B56.7] && [B55.7]
   Preds (1): B56
   Succs (2): B48 B46

 [B56]
   1: DeclRefExpr 0x55e83d1251f0 <sds.c:970:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d125218 <sds.c:970:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1251f0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B56.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d125230 <sds.c:970:32, col:33> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d125218 <col:33> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1251f0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B56.2]
   4: ImplicitCastExpr 0x55e83d125268 <sds.c:970:32, col:33> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d125230 <col:32, col:33> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d125218 <col:33> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1251f0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B56.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55e83d125280 <sds.c:970:32, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d125268 <col:32, col:33> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d125230 <col:32, col:33> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d125218 <col:33> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1251f0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B56.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x55e83d125250 <sds.c:970:38> 'int' 92
'\\'
   7: BinaryOperator 0x55e83d125298 <sds.c:970:32, col:38> 'int' '=='
|-ImplicitCastExpr 0x55e83d125280 <col:32, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d125268 <col:32, col:33> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d125230 <col:32, col:33> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55e83d125218 <col:33> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d1251f0 <col:33> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-CharacterLiteral 0x55e83d125250 <col:38> 'int' 92
[B56.5] == [B56.6]
   T: [B56.7] && ...
   Preds (4): B58 B59 B60 B61
   Succs (2): B55 B46

 [B57]
   1: DeclStmt 0x55e83d124ba8 <sds.c:964:25, col:43>col:39
`-VarDecl 0x55e83d124b48 <col:25, col:39> col:39 used byte 'unsigned char'
unsigned char byte;
   2: DeclRefExpr 0x55e83d124be8 <sds.c:966:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
hex_digit_to_int
   3: ImplicitCastExpr 0x55e83d124cd8 <sds.c:966:33> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d124be8 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
[B57.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
   4: DeclRefExpr 0x55e83d124c10 <sds.c:966:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   5: ImplicitCastExpr 0x55e83d124c58 <sds.c:966:52> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B57.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: IntegerLiteral 0x55e83d124c38 <sds.c:966:54> 'int' 2
2
   7: BinaryOperator 0x55e83d124c70 <sds.c:966:52, col:54> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
[B57.5] + [B57.6]
   8: UnaryOperator 0x55e83d124cb8 <sds.c:966:50, col:55> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d124c98 <col:51, col:55> 'const char *'
  `-BinaryOperator 0x55e83d124c70 <col:52, col:54> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
*([B57.7])
   9: ImplicitCastExpr 0x55e83d124d20 <sds.c:966:50, col:55> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d124cb8 <col:50, col:55> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d124c98 <col:51, col:55> 'const char *'
    `-BinaryOperator 0x55e83d124c70 <col:52, col:54> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
[B57.8] (ImplicitCastExpr, LValueToRValue, char)
  10: CallExpr 0x55e83d124cf0 <sds.c:966:33, col:56> 'int'
|-ImplicitCastExpr 0x55e83d124cd8 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d124be8 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
`-ImplicitCastExpr 0x55e83d124d20 <col:50, col:55> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d124cb8 <col:50, col:55> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d124c98 <col:51, col:55> 'const char *'
      `-BinaryOperator 0x55e83d124c70 <col:52, col:54> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
[B57.3]([B57.9])
  11: IntegerLiteral 0x55e83d124d38 <sds.c:966:58> 'int' 16
16
  12: BinaryOperator 0x55e83d124d58 <sds.c:966:33, col:58> 'int' '*'
|-CallExpr 0x55e83d124cf0 <col:33, col:56> 'int'
| |-ImplicitCastExpr 0x55e83d124cd8 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55e83d124be8 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
| `-ImplicitCastExpr 0x55e83d124d20 <col:50, col:55> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d124cb8 <col:50, col:55> 'const char' lvalue prefix '*'
|     `-ParenExpr 0x55e83d124c98 <col:51, col:55> 'const char *'
|       `-BinaryOperator 0x55e83d124c70 <col:52, col:54> 'const char *' '+'
|         |-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
|         `-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
`-IntegerLiteral 0x55e83d124d38 <col:58> 'int' 16
[B57.10] * [B57.11]
  13: DeclRefExpr 0x55e83d124da0 <sds.c:967:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
hex_digit_to_int
  14: ImplicitCastExpr 0x55e83d124e90 <sds.c:967:33> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d124da0 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
[B57.13] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
  15: DeclRefExpr 0x55e83d124dc8 <sds.c:967:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
  16: ImplicitCastExpr 0x55e83d124e10 <sds.c:967:52> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B57.15] (ImplicitCastExpr, LValueToRValue, const char *)
  17: IntegerLiteral 0x55e83d124df0 <sds.c:967:54> 'int' 3
3
  18: BinaryOperator 0x55e83d124e28 <sds.c:967:52, col:54> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d124e10 <col:52> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d124df0 <col:54> 'int' 3
[B57.16] + [B57.17]
  19: UnaryOperator 0x55e83d124e70 <sds.c:967:50, col:55> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d124e50 <col:51, col:55> 'const char *'
  `-BinaryOperator 0x55e83d124e28 <col:52, col:54> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d124e10 <col:52> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d124df0 <col:54> 'int' 3
*([B57.18])
  20: ImplicitCastExpr 0x55e83d124ed8 <sds.c:967:50, col:55> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d124e70 <col:50, col:55> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d124e50 <col:51, col:55> 'const char *'
    `-BinaryOperator 0x55e83d124e28 <col:52, col:54> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d124e10 <col:52> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d124df0 <col:54> 'int' 3
[B57.19] (ImplicitCastExpr, LValueToRValue, char)
  21: CallExpr 0x55e83d124ea8 <sds.c:967:33, col:56> 'int'
|-ImplicitCastExpr 0x55e83d124e90 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d124da0 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
`-ImplicitCastExpr 0x55e83d124ed8 <col:50, col:55> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d124e70 <col:50, col:55> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d124e50 <col:51, col:55> 'const char *'
      `-BinaryOperator 0x55e83d124e28 <col:52, col:54> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d124e10 <col:52> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d124df0 <col:54> 'int' 3
[B57.14]([B57.20])
  22: BinaryOperator 0x55e83d124ef0 <sds.c:966:32, line:967:56> 'int' '+'
|-ParenExpr 0x55e83d124d80 <line:966:32, col:60> 'int'
| `-BinaryOperator 0x55e83d124d58 <col:33, col:58> 'int' '*'
|   |-CallExpr 0x55e83d124cf0 <col:33, col:56> 'int'
|   | |-ImplicitCastExpr 0x55e83d124cd8 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55e83d124be8 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
|   | `-ImplicitCastExpr 0x55e83d124d20 <col:50, col:55> 'char' <LValueToRValue>
|   |   `-UnaryOperator 0x55e83d124cb8 <col:50, col:55> 'const char' lvalue prefix '*'
|   |     `-ParenExpr 0x55e83d124c98 <col:51, col:55> 'const char *'
|   |       `-BinaryOperator 0x55e83d124c70 <col:52, col:54> 'const char *' '+'
|   |         |-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
|   |         `-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
|   `-IntegerLiteral 0x55e83d124d38 <col:58> 'int' 16
`-CallExpr 0x55e83d124ea8 <line:967:33, col:56> 'int'
  |-ImplicitCastExpr 0x55e83d124e90 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d124da0 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
  `-ImplicitCastExpr 0x55e83d124ed8 <col:50, col:55> 'char' <LValueToRValue>
    `-UnaryOperator 0x55e83d124e70 <col:50, col:55> 'const char' lvalue prefix '*'
      `-ParenExpr 0x55e83d124e50 <col:51, col:55> 'const char *'
        `-BinaryOperator 0x55e83d124e28 <col:52, col:54> 'const char *' '+'
          |-ImplicitCastExpr 0x55e83d124e10 <col:52> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
          `-IntegerLiteral 0x55e83d124df0 <col:54> 'int' 3
([B57.12]) + [B57.21]
  23: ImplicitCastExpr 0x55e83d124f18 <sds.c:966:32, line:967:56> 'unsigned char' <IntegralCast>
`-BinaryOperator 0x55e83d124ef0 <line:966:32, line:967:56> 'int' '+'
  |-ParenExpr 0x55e83d124d80 <line:966:32, col:60> 'int'
  | `-BinaryOperator 0x55e83d124d58 <col:33, col:58> 'int' '*'
  |   |-CallExpr 0x55e83d124cf0 <col:33, col:56> 'int'
  |   | |-ImplicitCastExpr 0x55e83d124cd8 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
  |   | | `-DeclRefExpr 0x55e83d124be8 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
  |   | `-ImplicitCastExpr 0x55e83d124d20 <col:50, col:55> 'char' <LValueToRValue>
  |   |   `-UnaryOperator 0x55e83d124cb8 <col:50, col:55> 'const char' lvalue prefix '*'
  |   |     `-ParenExpr 0x55e83d124c98 <col:51, col:55> 'const char *'
  |   |       `-BinaryOperator 0x55e83d124c70 <col:52, col:54> 'const char *' '+'
  |   |         |-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
  |   |         | `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
  |   |         `-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
  |   `-IntegerLiteral 0x55e83d124d38 <col:58> 'int' 16
  `-CallExpr 0x55e83d124ea8 <line:967:33, col:56> 'int'
    |-ImplicitCastExpr 0x55e83d124e90 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d124da0 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
    `-ImplicitCastExpr 0x55e83d124ed8 <col:50, col:55> 'char' <LValueToRValue>
      `-UnaryOperator 0x55e83d124e70 <col:50, col:55> 'const char' lvalue prefix '*'
        `-ParenExpr 0x55e83d124e50 <col:51, col:55> 'const char *'
          `-BinaryOperator 0x55e83d124e28 <col:52, col:54> 'const char *' '+'
            |-ImplicitCastExpr 0x55e83d124e10 <col:52> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
            `-IntegerLiteral 0x55e83d124df0 <col:54> 'int' 3
[B57.22] (ImplicitCastExpr, IntegralCast, unsigned char)
  24: DeclRefExpr 0x55e83d124bc0 <sds.c:966:25> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
byte
  25: BinaryOperator 0x55e83d124f30 <sds.c:966:25, line:967:56> 'unsigned char' '='
|-DeclRefExpr 0x55e83d124bc0 <line:966:25> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
`-ImplicitCastExpr 0x55e83d124f18 <col:32, line:967:56> 'unsigned char' <IntegralCast>
  `-BinaryOperator 0x55e83d124ef0 <line:966:32, line:967:56> 'int' '+'
    |-ParenExpr 0x55e83d124d80 <line:966:32, col:60> 'int'
    | `-BinaryOperator 0x55e83d124d58 <col:33, col:58> 'int' '*'
    |   |-CallExpr 0x55e83d124cf0 <col:33, col:56> 'int'
    |   | |-ImplicitCastExpr 0x55e83d124cd8 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x55e83d124be8 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
    |   | `-ImplicitCastExpr 0x55e83d124d20 <col:50, col:55> 'char' <LValueToRValue>
    |   |   `-UnaryOperator 0x55e83d124cb8 <col:50, col:55> 'const char' lvalue prefix '*'
    |   |     `-ParenExpr 0x55e83d124c98 <col:51, col:55> 'const char *'
    |   |       `-BinaryOperator 0x55e83d124c70 <col:52, col:54> 'const char *' '+'
    |   |         |-ImplicitCastExpr 0x55e83d124c58 <col:52> 'const char *' <LValueToRValue>
    |   |         | `-DeclRefExpr 0x55e83d124c10 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    |   |         `-IntegerLiteral 0x55e83d124c38 <col:54> 'int' 2
    |   `-IntegerLiteral 0x55e83d124d38 <col:58> 'int' 16
    `-CallExpr 0x55e83d124ea8 <line:967:33, col:56> 'int'
      |-ImplicitCastExpr 0x55e83d124e90 <col:33> 'int (*)(char)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55e83d124da0 <col:33> 'int (char)' Function 0x55e83d1229e8 'hex_digit_to_int' 'int (char)'
      `-ImplicitCastExpr 0x55e83d124ed8 <col:50, col:55> 'char' <LValueToRValue>
        `-UnaryOperator 0x55e83d124e70 <col:50, col:55> 'const char' lvalue prefix '*'
          `-ParenExpr 0x55e83d124e50 <col:51, col:55> 'const char *'
            `-BinaryOperator 0x55e83d124e28 <col:52, col:54> 'const char *' '+'
              |-ImplicitCastExpr 0x55e83d124e10 <col:52> 'const char *' <LValueToRValue>
              | `-DeclRefExpr 0x55e83d124dc8 <col:52> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
              `-IntegerLiteral 0x55e83d124df0 <col:54> 'int' 3
[B57.24] = [B57.23]
  26: DeclRefExpr 0x55e83d124f80 <sds.c:968:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
sdscatlen
  27: ImplicitCastExpr 0x55e83d125078 <sds.c:968:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d124f80 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
[B57.26] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const void *, size_t))
  28: DeclRefExpr 0x55e83d124fa8 <sds.c:968:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  29: ImplicitCastExpr 0x55e83d1250d0 <sds.c:968:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d124fa8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B57.28] (ImplicitCastExpr, LValueToRValue, char *)
  30: DeclRefExpr 0x55e83d124fd0 <sds.c:968:61> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
byte
  31: UnaryOperator 0x55e83d124ff8 <sds.c:968:60, col:61> 'unsigned char *' prefix '&'
`-DeclRefExpr 0x55e83d124fd0 <col:61> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
&[B57.30]
  32: CStyleCastExpr 0x55e83d125030 <sds.c:968:53, col:61> 'char *' <BitCast>
`-UnaryOperator 0x55e83d124ff8 <col:60, col:61> 'unsigned char *' prefix '&'
  `-DeclRefExpr 0x55e83d124fd0 <col:61> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
(char *)[B57.31] (CStyleCastExpr, BitCast, char *)
  33: ImplicitCastExpr 0x55e83d1250e8 <sds.c:968:53, col:61> 'const void *' <BitCast>
`-CStyleCastExpr 0x55e83d125030 <col:53, col:61> 'char *' <BitCast>
  `-UnaryOperator 0x55e83d124ff8 <col:60, col:61> 'unsigned char *' prefix '&'
    `-DeclRefExpr 0x55e83d124fd0 <col:61> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
[B57.32] (ImplicitCastExpr, BitCast, const void *)
  34: IntegerLiteral 0x55e83d125058 <sds.c:968:66> 'int' 1
1
  35: ImplicitCastExpr 0x55e83d125100 <sds.c:968:66> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d125058 <col:66> 'int' 1
[B57.34] (ImplicitCastExpr, IntegralCast, size_t)
  36: CallExpr 0x55e83d125090 <sds.c:968:35, col:67> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d125078 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d124f80 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
|-ImplicitCastExpr 0x55e83d1250d0 <col:45> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d124fa8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
|-ImplicitCastExpr 0x55e83d1250e8 <col:53, col:61> 'const void *' <BitCast>
| `-CStyleCastExpr 0x55e83d125030 <col:53, col:61> 'char *' <BitCast>
|   `-UnaryOperator 0x55e83d124ff8 <col:60, col:61> 'unsigned char *' prefix '&'
|     `-DeclRefExpr 0x55e83d124fd0 <col:61> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
`-ImplicitCastExpr 0x55e83d125100 <col:66> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d125058 <col:66> 'int' 1
[B57.27]([B57.29], [B57.33], [B57.35])
  37: DeclRefExpr 0x55e83d124f58 <sds.c:968:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
  38: BinaryOperator 0x55e83d125118 <sds.c:968:25, col:67> 'char *' '='
|-DeclRefExpr 0x55e83d124f58 <col:25> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-CallExpr 0x55e83d125090 <col:35, col:67> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d125078 <col:35> 'sds (*)(sds, const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d124f80 <col:35> 'sds (sds, const void *, size_t)' Function 0x55e83d10a308 'sdscatlen' 'sds (sds, const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d1250d0 <col:45> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d124fa8 <col:45> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
  |-ImplicitCastExpr 0x55e83d1250e8 <col:53, col:61> 'const void *' <BitCast>
  | `-CStyleCastExpr 0x55e83d125030 <col:53, col:61> 'char *' <BitCast>
  |   `-UnaryOperator 0x55e83d124ff8 <col:60, col:61> 'unsigned char *' prefix '&'
  |     `-DeclRefExpr 0x55e83d124fd0 <col:61> 'unsigned char' lvalue Var 0x55e83d124b48 'byte' 'unsigned char'
  `-ImplicitCastExpr 0x55e83d125100 <col:66> 'size_t':'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d125058 <col:66> 'int' 1
[B57.37] = [B57.36]
  39: DeclRefExpr 0x55e83d125140 <sds.c:969:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
  40: IntegerLiteral 0x55e83d125168 <sds.c:969:30> 'int' 3
3
  41: CompoundAssignOperator 0x55e83d125188 <sds.c:969:25, col:30> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|-DeclRefExpr 0x55e83d125140 <col:25> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d125168 <col:30> 'int' 3
[B57.39] += [B57.40]
   Preds (1): B58
   Succs (1): B17

 [B58]
   1: DeclRefExpr 0x55e83d1249b8 <sds.c:962:46> 'int (char)' Function 0x55e83d122398 'is_hex_digit' 'int (char)'
is_hex_digit
   2: ImplicitCastExpr 0x55e83d124aa8 <sds.c:962:46> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1249b8 <col:46> 'int (char)' Function 0x55e83d122398 'is_hex_digit' 'int (char)'
[B58.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
   3: DeclRefExpr 0x55e83d1249e0 <sds.c:962:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   4: ImplicitCastExpr 0x55e83d124a28 <sds.c:962:61> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1249e0 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B58.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: IntegerLiteral 0x55e83d124a08 <sds.c:962:63> 'int' 3
3
   6: BinaryOperator 0x55e83d124a40 <sds.c:962:61, col:63> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d124a28 <col:61> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1249e0 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d124a08 <col:63> 'int' 3
[B58.4] + [B58.5]
   7: UnaryOperator 0x55e83d124a88 <sds.c:962:59, col:64> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d124a68 <col:60, col:64> 'const char *'
  `-BinaryOperator 0x55e83d124a40 <col:61, col:63> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d124a28 <col:61> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d1249e0 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d124a08 <col:63> 'int' 3
*([B58.6])
   8: ImplicitCastExpr 0x55e83d124af0 <sds.c:962:59, col:64> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d124a88 <col:59, col:64> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d124a68 <col:60, col:64> 'const char *'
    `-BinaryOperator 0x55e83d124a40 <col:61, col:63> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d124a28 <col:61> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d1249e0 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d124a08 <col:63> 'int' 3
[B58.7] (ImplicitCastExpr, LValueToRValue, char)
   9: CallExpr 0x55e83d124ac0 <sds.c:962:46, col:65> 'int'
|-ImplicitCastExpr 0x55e83d124aa8 <col:46> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1249b8 <col:46> 'int (char)' Function 0x55e83d122398 'is_hex_digit' 'int (char)'
`-ImplicitCastExpr 0x55e83d124af0 <col:59, col:64> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d124a88 <col:59, col:64> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d124a68 <col:60, col:64> 'const char *'
      `-BinaryOperator 0x55e83d124a40 <col:61, col:63> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d124a28 <col:61> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d1249e0 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d124a08 <col:63> 'int' 3
[B58.2]([B58.8])
   T: if [B61.7] && [B60.9] && [B59.9] && [B58.9]
   Preds (1): B59
   Succs (2): B57 B56

 [B59]
   1: DeclRefExpr 0x55e83d124840 <sds.c:961:46> 'int (char)' Function 0x55e83d122398 'is_hex_digit' 'int (char)'
is_hex_digit
   2: ImplicitCastExpr 0x55e83d124930 <sds.c:961:46> 'int (*)(char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d124840 <col:46> 'int (char)' Function 0x55e83d122398 'is_hex_digit' 'int (char)'
[B59.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char))
   3: DeclRefExpr 0x55e83d124868 <sds.c:961:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   4: ImplicitCastExpr 0x55e83d1248b0 <sds.c:961:61> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d124868 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B59.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: IntegerLiteral 0x55e83d124890 <sds.c:961:63> 'int' 2
2
   6: BinaryOperator 0x55e83d1248c8 <sds.c:961:61, col:63> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d1248b0 <col:61> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d124868 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d124890 <col:63> 'int' 2
[B59.4] + [B59.5]
   7: UnaryOperator 0x55e83d124910 <sds.c:961:59, col:64> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d1248f0 <col:60, col:64> 'const char *'
  `-BinaryOperator 0x55e83d1248c8 <col:61, col:63> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d1248b0 <col:61> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d124868 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d124890 <col:63> 'int' 2
*([B59.6])
   8: ImplicitCastExpr 0x55e83d124978 <sds.c:961:59, col:64> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d124910 <col:59, col:64> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d1248f0 <col:60, col:64> 'const char *'
    `-BinaryOperator 0x55e83d1248c8 <col:61, col:63> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d1248b0 <col:61> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d124868 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d124890 <col:63> 'int' 2
[B59.7] (ImplicitCastExpr, LValueToRValue, char)
   9: CallExpr 0x55e83d124948 <sds.c:961:46, col:65> 'int'
|-ImplicitCastExpr 0x55e83d124930 <col:46> 'int (*)(char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d124840 <col:46> 'int (char)' Function 0x55e83d122398 'is_hex_digit' 'int (char)'
`-ImplicitCastExpr 0x55e83d124978 <col:59, col:64> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d124910 <col:59, col:64> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d1248f0 <col:60, col:64> 'const char *'
      `-BinaryOperator 0x55e83d1248c8 <col:61, col:63> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d1248b0 <col:61> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d124868 <col:61> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d124890 <col:63> 'int' 2
[B59.2]([B59.8])
   T: [B61.7] && [B60.9] && [B59.9] && ...
   Preds (1): B60
   Succs (2): B58 B56

 [B60]
   1: DeclRefExpr 0x55e83d1246e0 <sds.c:960:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d124728 <sds.c:960:41> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1246e0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B60.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: IntegerLiteral 0x55e83d124708 <sds.c:960:43> 'int' 1
1
   4: BinaryOperator 0x55e83d124740 <sds.c:960:41, col:43> 'const char *' '+'
|-ImplicitCastExpr 0x55e83d124728 <col:41> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1246e0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-IntegerLiteral 0x55e83d124708 <col:43> 'int' 1
[B60.2] + [B60.3]
   5: UnaryOperator 0x55e83d124788 <sds.c:960:39, col:44> 'const char' lvalue prefix '*'
`-ParenExpr 0x55e83d124768 <col:40, col:44> 'const char *'
  `-BinaryOperator 0x55e83d124740 <col:41, col:43> 'const char *' '+'
    |-ImplicitCastExpr 0x55e83d124728 <col:41> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d1246e0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
    `-IntegerLiteral 0x55e83d124708 <col:43> 'int' 1
*([B60.4])
   6: ImplicitCastExpr 0x55e83d1247c0 <sds.c:960:39, col:44> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d124788 <col:39, col:44> 'const char' lvalue prefix '*'
  `-ParenExpr 0x55e83d124768 <col:40, col:44> 'const char *'
    `-BinaryOperator 0x55e83d124740 <col:41, col:43> 'const char *' '+'
      |-ImplicitCastExpr 0x55e83d124728 <col:41> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d1246e0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
      `-IntegerLiteral 0x55e83d124708 <col:43> 'int' 1
[B60.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d1247d8 <sds.c:960:39, col:44> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1247c0 <col:39, col:44> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d124788 <col:39, col:44> 'const char' lvalue prefix '*'
    `-ParenExpr 0x55e83d124768 <col:40, col:44> 'const char *'
      `-BinaryOperator 0x55e83d124740 <col:41, col:43> 'const char *' '+'
        |-ImplicitCastExpr 0x55e83d124728 <col:41> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d1246e0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
        `-IntegerLiteral 0x55e83d124708 <col:43> 'int' 1
[B60.6] (ImplicitCastExpr, IntegralCast, int)
   8: CharacterLiteral 0x55e83d1247a8 <sds.c:960:49> 'int' 120
'x'
   9: BinaryOperator 0x55e83d1247f0 <sds.c:960:39, col:49> 'int' '=='
|-ImplicitCastExpr 0x55e83d1247d8 <col:39, col:44> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d1247c0 <col:39, col:44> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d124788 <col:39, col:44> 'const char' lvalue prefix '*'
|     `-ParenExpr 0x55e83d124768 <col:40, col:44> 'const char *'
|       `-BinaryOperator 0x55e83d124740 <col:41, col:43> 'const char *' '+'
|         |-ImplicitCastExpr 0x55e83d124728 <col:41> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x55e83d1246e0 <col:41> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
|         `-IntegerLiteral 0x55e83d124708 <col:43> 'int' 1
`-CharacterLiteral 0x55e83d1247a8 <col:49> 'int' 120
[B60.7] == [B60.8]
   T: [B61.7] && [B60.9] && ...
   Preds (1): B61
   Succs (2): B59 B56

 [B61]
   1: DeclRefExpr 0x55e83d124610 <sds.c:960:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d124638 <sds.c:960:26> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d124610 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B61.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d124650 <sds.c:960:25, col:26> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d124638 <col:26> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d124610 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B61.2]
   4: ImplicitCastExpr 0x55e83d124688 <sds.c:960:25, col:26> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d124650 <col:25, col:26> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d124638 <col:26> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d124610 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B61.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55e83d1246a0 <sds.c:960:25, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d124688 <col:25, col:26> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d124650 <col:25, col:26> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d124638 <col:26> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d124610 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B61.4] (ImplicitCastExpr, IntegralCast, int)
   6: CharacterLiteral 0x55e83d124670 <sds.c:960:31> 'int' 92
'\\'
   7: BinaryOperator 0x55e83d1246b8 <sds.c:960:25, col:31> 'int' '=='
|-ImplicitCastExpr 0x55e83d1246a0 <col:25, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d124688 <col:25, col:26> 'char' <LValueToRValue>
|   `-UnaryOperator 0x55e83d124650 <col:25, col:26> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x55e83d124638 <col:26> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d124610 <col:26> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-CharacterLiteral 0x55e83d124670 <col:31> 'int' 92
[B61.5] == [B61.6]
   T: [B61.7] && ...
   Preds (1): B62
   Succs (2): B60 B56

 [B62]
   1: DeclRefExpr 0x55e83d1245d0 <sds.c:959:21> 'int' lvalue Var 0x55e83d124118 'inq' 'int'
inq
   2: ImplicitCastExpr 0x55e83d1245f8 <sds.c:959:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d1245d0 <col:21> 'int' lvalue Var 0x55e83d124118 'inq' 'int'
[B62.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B62.2]
   Preds (1): B63
   Succs (2): B61 B38

 [B63]
   1: DeclRefExpr 0x55e83d124558 <sds.c:958:20> 'int' lvalue Var 0x55e83d124278 'done' 'int'
done
   2: ImplicitCastExpr 0x55e83d124580 <sds.c:958:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d124558 <col:20> 'int' lvalue Var 0x55e83d124278 'done' 'int'
[B63.1] (ImplicitCastExpr, LValueToRValue, int)
   3: UnaryOperator 0x55e83d1245b0 <sds.c:958:19, col:20> 'int' prefix '!'
`-ImplicitCastExpr 0x55e83d124580 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d124558 <col:20> 'int' lvalue Var 0x55e83d124278 'done' 'int'
![B63.2]
   T: while [B63.3]
   Preds (3): B15 B64 B65
   Succs (2): B62 B14

 [B64]
   1: DeclRefExpr 0x55e83d124438 <sds.c:957:44> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
sdsempty
   2: ImplicitCastExpr 0x55e83d1244b8 <sds.c:957:44> 'sds (*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d124438 <col:44> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
[B64.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(void))
   3: CallExpr 0x55e83d1244d0 <sds.c:957:44, col:53> 'sds':'char *'
`-ImplicitCastExpr 0x55e83d1244b8 <col:44> 'sds (*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d124438 <col:44> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
[B64.2]()
   4: DeclRefExpr 0x55e83d124410 <sds.c:957:34> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   5: BinaryOperator 0x55e83d1244f8 <sds.c:957:34, col:53> 'char *' '='
|-DeclRefExpr 0x55e83d124410 <col:34> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-CallExpr 0x55e83d1244d0 <col:44, col:53> 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d1244b8 <col:44> 'sds (*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55e83d124438 <col:44> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
[B64.4] = [B64.3]
   Preds (1): B65
   Succs (1): B63

 [B65]
   1: IntegerLiteral 0x55e83d124178 <sds.c:953:21> 'int' 0
0
   2: DeclStmt 0x55e83d124198 <sds.c:953:13, col:22>col:17
`-VarDecl 0x55e83d124118 <col:13, col:21> col:17 used inq 'int' cinit
  `-IntegerLiteral 0x55e83d124178 <col:21> 'int' 0
int inq = 0;
   3: IntegerLiteral 0x55e83d124228 <sds.c:954:22> 'int' 0
0
   4: DeclStmt 0x55e83d124248 <sds.c:954:13, col:23>col:17
`-VarDecl 0x55e83d1241c8 <col:13, col:22> col:17 used insq 'int' cinit
  `-IntegerLiteral 0x55e83d124228 <col:22> 'int' 0
int insq = 0;
   5: IntegerLiteral 0x55e83d1242d8 <sds.c:955:22> 'int' 0
0
   6: DeclStmt 0x55e83d1242f8 <sds.c:955:13, col:23>col:17
`-VarDecl 0x55e83d124278 <col:13, col:22> col:17 used done 'int' cinit
  `-IntegerLiteral 0x55e83d1242d8 <col:22> 'int' 0
int done = 0;
   7: DeclRefExpr 0x55e83d124310 <sds.c:957:17> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
current
   8: ImplicitCastExpr 0x55e83d1243b8 <sds.c:957:17> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d124310 <col:17> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
[B65.7] (ImplicitCastExpr, LValueToRValue, char *)
   9: IntegerLiteral 0x55e83d124338 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  10: CStyleCastExpr 0x55e83d124370 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d124338 <col:24> 'int' 0
(void *)[B65.9] (CStyleCastExpr, NullToPointer, void *)
  11: ImplicitCastExpr 0x55e83d1243d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
`-ParenExpr 0x55e83d124398 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d124370 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d124338 <col:24> 'int' 0
([B65.10]) (ImplicitCastExpr, BitCast, char *)
  12: BinaryOperator 0x55e83d1243e8 <sds.c:957:17, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x55e83d1243b8 <sds.c:957:17> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d124310 <col:17> 'char *' lvalue Var 0x55e83d123960 'current' 'char *'
`-ImplicitCastExpr 0x55e83d1243d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <BitCast>
  `-ParenExpr 0x55e83d124398 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55e83d124370 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55e83d124338 <col:24> 'int' 0
[B65.8] == [B65.11]
   T: if [B65.12]
   Preds (1): B66
   Succs (2): B64 B63

 [B66]
   1: DeclRefExpr 0x55e83d124088 <sds.c:951:14> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d1240b0 <sds.c:951:14> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d124088 <col:14> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B66.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d1240c8 <sds.c:951:13, col:14> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d1240b0 <col:14> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d124088 <col:14> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B66.2]
   4: ImplicitCastExpr 0x55e83d1240e8 <sds.c:951:13, col:14> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d1240c8 <col:13, col:14> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d1240b0 <col:14> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d124088 <col:14> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B66.3] (ImplicitCastExpr, LValueToRValue, char)
   T: if [B66.4]
   Preds (2): B69 B70
   Succs (2): B65 B11

 [B67]
   Preds (1): B68
   Succs (1): B70

 [B68]
   1: DeclRefExpr 0x55e83d124020 <sds.c:950:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: UnaryOperator 0x55e83d124048 <sds.c:950:34, col:35> 'const char *' postfix '++'
`-DeclRefExpr 0x55e83d124020 <col:34> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B68.1]++
   Preds (1): B69
   Succs (1): B67

 [B69]
   1: DeclRefExpr 0x55e83d123cc0 </usr/include/ctype.h:89:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
__ctype_b_loc
   2: ImplicitCastExpr 0x55e83d123ce8 </usr/include/ctype.h:89:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
[B69.1] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned short **(*)(void))
   3: CallExpr 0x55e83d123d00 </usr/include/ctype.h:89:6, col:21> 'const unsigned short **'
`-ImplicitCastExpr 0x55e83d123ce8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
[B69.2]()
   4: UnaryOperator 0x55e83d123d28 </usr/include/ctype.h:89:5, col:21> 'const unsigned short *' lvalue prefix '*'
`-CallExpr 0x55e83d123d00 <col:6, col:21> 'const unsigned short **'
  `-ImplicitCastExpr 0x55e83d123ce8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
*[B69.3]
   5: ImplicitCastExpr 0x55e83d123e90 </usr/include/ctype.h:89:4, col:22> 'const unsigned short *' <LValueToRValue>
`-ParenExpr 0x55e83d123d48 <col:4, col:22> 'const unsigned short *' lvalue
  `-UnaryOperator 0x55e83d123d28 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    `-CallExpr 0x55e83d123d00 <col:6, col:21> 'const unsigned short **'
      `-ImplicitCastExpr 0x55e83d123ce8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
([B69.4]) (ImplicitCastExpr, LValueToRValue, const unsigned short *)
   6: DeclRefExpr 0x55e83d123d68 <sds.c:950:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   7: ImplicitCastExpr 0x55e83d123d90 <sds.c:950:30> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B69.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: UnaryOperator 0x55e83d123da8 <sds.c:950:29, col:30> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d123d90 <col:30> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B69.7]
   9: ImplicitCastExpr 0x55e83d123e50 </usr/include/ctype.h:89:30, col:32> 'char' <LValueToRValue>
`-ParenExpr 0x55e83d123e30 <col:30, col:32> 'const char' lvalue
  `-ParenExpr 0x55e83d123dc8 <line:197:31, col:33> 'const char' lvalue
    `-UnaryOperator 0x55e83d123da8 <sds.c:950:29, col:30> 'const char' lvalue prefix '*'
      `-ImplicitCastExpr 0x55e83d123d90 <col:30> 'const char *' <LValueToRValue>
        `-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
(([B69.8])) (ImplicitCastExpr, LValueToRValue, char)
  10: CStyleCastExpr 0x55e83d123e68 </usr/include/ctype.h:89:24, col:32> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d123e50 <col:30, col:32> 'char' <LValueToRValue>
  `-ParenExpr 0x55e83d123e30 <col:30, col:32> 'const char' lvalue
    `-ParenExpr 0x55e83d123dc8 <line:197:31, col:33> 'const char' lvalue
      `-UnaryOperator 0x55e83d123da8 <sds.c:950:29, col:30> 'const char' lvalue prefix '*'
        `-ImplicitCastExpr 0x55e83d123d90 <col:30> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
(int)[B69.9] (CStyleCastExpr, IntegralCast, int)
  11: ArraySubscriptExpr 0x55e83d123ea8 </usr/include/ctype.h:89:4, col:33> 'const unsigned short' lvalue
|-ImplicitCastExpr 0x55e83d123e90 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
| `-ParenExpr 0x55e83d123d48 <col:4, col:22> 'const unsigned short *' lvalue
|   `-UnaryOperator 0x55e83d123d28 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     `-CallExpr 0x55e83d123d00 <col:6, col:21> 'const unsigned short **'
|       `-ImplicitCastExpr 0x55e83d123ce8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
`-CStyleCastExpr 0x55e83d123e68 <col:24, col:32> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d123e50 <col:30, col:32> 'char' <LValueToRValue>
    `-ParenExpr 0x55e83d123e30 <col:30, col:32> 'const char' lvalue
      `-ParenExpr 0x55e83d123dc8 <line:197:31, col:33> 'const char' lvalue
        `-UnaryOperator 0x55e83d123da8 <sds.c:950:29, col:30> 'const char' lvalue prefix '*'
          `-ImplicitCastExpr 0x55e83d123d90 <col:30> 'const char *' <LValueToRValue>
            `-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B69.5][[B69.10]]
  12: ImplicitCastExpr 0x55e83d123f38 </usr/include/ctype.h:89:4, col:33> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d123ea8 <col:4, col:33> 'const unsigned short' lvalue
  |-ImplicitCastExpr 0x55e83d123e90 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  | `-ParenExpr 0x55e83d123d48 <col:4, col:22> 'const unsigned short *' lvalue
  |   `-UnaryOperator 0x55e83d123d28 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     `-CallExpr 0x55e83d123d00 <col:6, col:21> 'const unsigned short **'
  |       `-ImplicitCastExpr 0x55e83d123ce8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
  `-CStyleCastExpr 0x55e83d123e68 <col:24, col:32> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d123e50 <col:30, col:32> 'char' <LValueToRValue>
      `-ParenExpr 0x55e83d123e30 <col:30, col:32> 'const char' lvalue
        `-ParenExpr 0x55e83d123dc8 <line:197:31, col:33> 'const char' lvalue
          `-UnaryOperator 0x55e83d123da8 <sds.c:950:29, col:30> 'const char' lvalue prefix '*'
            `-ImplicitCastExpr 0x55e83d123d90 <col:30> 'const char *' <LValueToRValue>
              `-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B69.11] (ImplicitCastExpr, LValueToRValue, unsigned short)
  13: ImplicitCastExpr 0x55e83d123f50 </usr/include/ctype.h:89:4, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d123f38 <col:4, col:33> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d123ea8 <col:4, col:33> 'const unsigned short' lvalue
    |-ImplicitCastExpr 0x55e83d123e90 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    | `-ParenExpr 0x55e83d123d48 <col:4, col:22> 'const unsigned short *' lvalue
    |   `-UnaryOperator 0x55e83d123d28 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     `-CallExpr 0x55e83d123d00 <col:6, col:21> 'const unsigned short **'
    |       `-ImplicitCastExpr 0x55e83d123ce8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
    `-CStyleCastExpr 0x55e83d123e68 <col:24, col:32> 'int' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d123e50 <col:30, col:32> 'char' <LValueToRValue>
        `-ParenExpr 0x55e83d123e30 <col:30, col:32> 'const char' lvalue
          `-ParenExpr 0x55e83d123dc8 <line:197:31, col:33> 'const char' lvalue
            `-UnaryOperator 0x55e83d123da8 <sds.c:950:29, col:30> 'const char' lvalue prefix '*'
              `-ImplicitCastExpr 0x55e83d123d90 <col:30> 'const char *' <LValueToRValue>
                `-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B69.12] (ImplicitCastExpr, IntegralCast, int)
  14: DeclRefExpr 0x55e83d123ed0 </usr/include/ctype.h:197:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
_ISspace
  15: CStyleCastExpr 0x55e83d123f10 </usr/include/ctype.h:89:37, line:197:36> 'unsigned short' <IntegralCast>
`-DeclRefExpr 0x55e83d123ed0 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
(unsigned short)[B69.14] (CStyleCastExpr, IntegralCast, unsigned short)
  16: ImplicitCastExpr 0x55e83d123f68 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
`-CStyleCastExpr 0x55e83d123f10 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
  `-DeclRefExpr 0x55e83d123ed0 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
[B69.15] (ImplicitCastExpr, IntegralCast, int)
  17: BinaryOperator 0x55e83d123f80 </usr/include/ctype.h:89:4, line:197:36> 'int' '&'
|-ImplicitCastExpr 0x55e83d123f50 <line:89:4, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d123f38 <col:4, col:33> 'unsigned short' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55e83d123ea8 <col:4, col:33> 'const unsigned short' lvalue
|     |-ImplicitCastExpr 0x55e83d123e90 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     | `-ParenExpr 0x55e83d123d48 <col:4, col:22> 'const unsigned short *' lvalue
|     |   `-UnaryOperator 0x55e83d123d28 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     `-CallExpr 0x55e83d123d00 <col:6, col:21> 'const unsigned short **'
|     |       `-ImplicitCastExpr 0x55e83d123ce8 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |         `-DeclRefExpr 0x55e83d123cc0 <col:6> 'const unsigned short **(void)' Function 0x55e83d0b9490 '__ctype_b_loc' 'const unsigned short **(void)'
|     `-CStyleCastExpr 0x55e83d123e68 <col:24, col:32> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55e83d123e50 <col:30, col:32> 'char' <LValueToRValue>
|         `-ParenExpr 0x55e83d123e30 <col:30, col:32> 'const char' lvalue
|           `-ParenExpr 0x55e83d123dc8 <line:197:31, col:33> 'const char' lvalue
|             `-UnaryOperator 0x55e83d123da8 <sds.c:950:29, col:30> 'const char' lvalue prefix '*'
|               `-ImplicitCastExpr 0x55e83d123d90 <col:30> 'const char *' <LValueToRValue>
|                 `-DeclRefExpr 0x55e83d123d68 <col:30> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
`-ImplicitCastExpr 0x55e83d123f68 </usr/include/ctype.h:89:37, line:197:36> 'int' <IntegralCast>
  `-CStyleCastExpr 0x55e83d123f10 <line:89:37, line:197:36> 'unsigned short' <IntegralCast>
    `-DeclRefExpr 0x55e83d123ed0 <col:36> 'int' EnumConstant 0x55e83d0b7f48 '_ISspace' 'int'
[B69.13] & [B69.16]
   T: while [B70.5] && ([B69.17])
   Preds (1): B70
   Succs (2): B68 B66

 [B70]
   1: DeclRefExpr 0x55e83d123c60 <sds.c:950:16> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
p
   2: ImplicitCastExpr 0x55e83d123c88 <sds.c:950:16> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d123c60 <col:16> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B70.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: UnaryOperator 0x55e83d123ca0 <sds.c:950:15, col:16> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d123c88 <col:16> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d123c60 <col:16> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
*[B70.2]
   4: ImplicitCastExpr 0x55e83d123fc8 <sds.c:950:15, col:16> 'char' <LValueToRValue>
`-UnaryOperator 0x55e83d123ca0 <col:15, col:16> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x55e83d123c88 <col:16> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d123c60 <col:16> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B70.3] (ImplicitCastExpr, LValueToRValue, char)
   5: ImplicitCastExpr 0x55e83d123fe0 <sds.c:950:15, col:16> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d123fc8 <col:15, col:16> 'char' <LValueToRValue>
  `-UnaryOperator 0x55e83d123ca0 <col:15, col:16> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x55e83d123c88 <col:16> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d123c60 <col:16> 'const char *' lvalue Var 0x55e83d123890 'p' 'const char *'
[B70.4] (ImplicitCastExpr, IntegralCast, int)
   T: [B70.5] && ...
   Preds (2): B67 B71
   Succs (2): B69 B66

 [B71]
   1: IntegerLiteral 0x55e83d123c40 <sds.c:948:11> 'int' 1
1
   T: while [B71.1]
   Preds (2): B8 B72
   Succs (2): B70 NULL

 [B72]
   1: DeclRefExpr 0x55e83d1238f0 <sds.c:943:21> 'const char *' lvalue ParmVar 0x55e83d1236c0 'line' 'const char *'
line
   2: ImplicitCastExpr 0x55e83d123918 <sds.c:943:21> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1238f0 <col:21> 'const char *' lvalue ParmVar 0x55e83d1236c0 'line' 'const char *'
[B72.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclStmt 0x55e83d123930 <sds.c:943:5, col:25>col:17
`-VarDecl 0x55e83d123890 <col:5, col:21> col:17 used p 'const char *' cinit
  `-ImplicitCastExpr 0x55e83d123918 <col:21> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1238f0 <col:21> 'const char *' lvalue ParmVar 0x55e83d1236c0 'line' 'const char *'
const char *p = line;
   4: IntegerLiteral 0x55e83d1239c0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   5: CStyleCastExpr 0x55e83d1239f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d1239c0 <col:24> 'int' 0
(void *)[B72.4] (CStyleCastExpr, NullToPointer, void *)
   6: ImplicitCastExpr 0x55e83d123a40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
`-ParenExpr 0x55e83d123a20 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d1239f8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d1239c0 <col:24> 'int' 0
([B72.5]) (ImplicitCastExpr, NullToPointer, char *)
   7: DeclStmt 0x55e83d123a58 <sds.c:944:5, col:25>col:11
`-VarDecl 0x55e83d123960 <col:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> sds.c:944:11 used current 'char *' cinit
  `-ImplicitCastExpr 0x55e83d123a40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char *' <NullToPointer>
    `-ParenExpr 0x55e83d123a20 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x55e83d1239f8 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x55e83d1239c0 <col:24> 'int' 0
char *current = ((void *)0);
   8: IntegerLiteral 0x55e83d123ae8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   9: CStyleCastExpr 0x55e83d123b20 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55e83d123ae8 <col:24> 'int' 0
(void *)[B72.8] (CStyleCastExpr, NullToPointer, void *)
  10: ImplicitCastExpr 0x55e83d123b68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <NullToPointer>
`-ParenExpr 0x55e83d123b48 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55e83d123b20 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55e83d123ae8 <col:24> 'int' 0
([B72.9]) (ImplicitCastExpr, NullToPointer, char **)
  11: DeclStmt 0x55e83d123b80 <sds.c:945:5, col:25>col:12
`-VarDecl 0x55e83d123a88 <col:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> sds.c:945:12 used vector 'char **' cinit
  `-ImplicitCastExpr 0x55e83d123b68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'char **' <NullToPointer>
    `-ParenExpr 0x55e83d123b48 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x55e83d123b20 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x55e83d123ae8 <col:24> 'int' 0
char **vector = ((void *)0);
  12: IntegerLiteral 0x55e83d123bf8 <sds.c:947:13> 'int' 0
0
  13: DeclRefExpr 0x55e83d123b98 <sds.c:947:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
argc
  14: ImplicitCastExpr 0x55e83d123bc0 <sds.c:947:6> 'int *' <LValueToRValue>
`-DeclRefExpr 0x55e83d123b98 <col:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
[B72.13] (ImplicitCastExpr, LValueToRValue, int *)
  15: UnaryOperator 0x55e83d123bd8 <sds.c:947:5, col:6> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x55e83d123bc0 <col:6> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d123b98 <col:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
*[B72.14]
  16: BinaryOperator 0x55e83d123c18 <sds.c:947:5, col:13> 'int' '='
|-UnaryOperator 0x55e83d123bd8 <col:5, col:6> 'int' lvalue prefix '*'
| `-ImplicitCastExpr 0x55e83d123bc0 <col:6> 'int *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d123b98 <col:6> 'int *' lvalue ParmVar 0x55e83d123738 'argc' 'int *'
`-IntegerLiteral 0x55e83d123bf8 <col:13> 'int' 0
[B72.15] = [B72.12]
   Preds (1): B73
   Succs (1): B71

 [B0 (EXIT)]
   Preds (3): B1 B9 B13
