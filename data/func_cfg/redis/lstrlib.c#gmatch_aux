static int gmatch_aux(lua_State *L)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: IntegerLiteral 0x55fb421eca98 <lstrlib.c:570:10> 'int' 0
0
   2: ReturnStmt 0x55fb421ecab8 <lstrlib.c:570:3, col:10>
`-IntegerLiteral 0x55fb421eca98 <col:10> 'int' 0
return [B1.1];
   Preds (1): B7
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55fb421ebf80 <lstrlib.c:559:8> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
src
   2: UnaryOperator 0x55fb421ebfa8 <lstrlib.c:559:8, col:11> 'const char *' postfix '++'
`-DeclRefExpr 0x55fb421ebf80 <col:8> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
[B2.1]++
   Preds (1): B6
   Succs (1): B7

 [B3]
   1: DeclRefExpr 0x55fb421ec5d0 <lstrlib.c:565:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x55fb421ec648 <lstrlib.c:565:7> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ec5d0 <col:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x55fb421ec5f8 <lstrlib.c:565:23> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55fb421ec698 <lstrlib.c:565:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec5f8 <col:23> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55fb421ec620 <lstrlib.c:565:26> 'lua_Integer':'long' lvalue Var 0x55fb421ec388 'newstart' 'lua_Integer':'long'
newstart
   6: ImplicitCastExpr 0x55fb421ec6b0 <lstrlib.c:565:26> 'lua_Integer':'long' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec620 <col:26> 'lua_Integer':'long' lvalue Var 0x55fb421ec388 'newstart' 'lua_Integer':'long'
[B3.5] (ImplicitCastExpr, LValueToRValue, lua_Integer)
   7: CallExpr 0x55fb421ec660 <lstrlib.c:565:7, col:34> 'void'
|-ImplicitCastExpr 0x55fb421ec648 <col:7> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ec5d0 <col:7> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x55fb421934f0 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x55fb421ec698 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ec5f8 <col:23> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
`-ImplicitCastExpr 0x55fb421ec6b0 <col:26> 'lua_Integer':'long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421ec620 <col:26> 'lua_Integer':'long' lvalue Var 0x55fb421ec388 'newstart' 'lua_Integer':'long'
[B3.2]([B3.4], [B3.6])
   8: DeclRefExpr 0x55fb421ec6c8 <lstrlib.c:566:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218f5c0 'lua_replace' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_replace
   9: ImplicitCastExpr 0x55fb421ec800 <lstrlib.c:566:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ec6c8 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218f5c0 'lua_replace' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  10: DeclRefExpr 0x55fb421ec6f0 <lstrlib.c:566:19> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x55fb421ec850 <lstrlib.c:566:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec6f0 <col:19> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
[B3.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x55fb421ec718 <./lua.h:38:28> 'int' 10002
10002
  13: UnaryOperator 0x55fb421ec738 <./lua.h:38:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x55fb421ec718 <col:28> 'int' 10002
-[B3.12]
  14: IntegerLiteral 0x55fb421ec778 <lstrlib.c:566:39> 'int' 3
3
  15: BinaryOperator 0x55fb421ec7b8 <./lua.h:38:26, line:39:49> 'int' '-'
|-ParenExpr 0x55fb421ec758 <line:38:26, col:33> 'int'
| `-UnaryOperator 0x55fb421ec738 <col:27, col:28> 'int' prefix '-'
|   `-IntegerLiteral 0x55fb421ec718 <col:28> 'int' 10002
`-ParenExpr 0x55fb421ec798 <line:39:47, col:49> 'int'
  `-IntegerLiteral 0x55fb421ec778 <lstrlib.c:566:39> 'int' 3
([B3.13]) - ([B3.14])
  16: CallExpr 0x55fb421ec818 <lstrlib.c:566:7, col:41> 'void'
|-ImplicitCastExpr 0x55fb421ec800 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ec6c8 <col:7> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55fb4218f5c0 'lua_replace' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421ec850 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ec6f0 <col:19> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
`-ParenExpr 0x55fb421ec7e0 <./lua.h:39:29, col:50> 'int'
  `-BinaryOperator 0x55fb421ec7b8 <line:38:26, line:39:49> 'int' '-'
    |-ParenExpr 0x55fb421ec758 <line:38:26, col:33> 'int'
    | `-UnaryOperator 0x55fb421ec738 <col:27, col:28> 'int' prefix '-'
    |   `-IntegerLiteral 0x55fb421ec718 <col:28> 'int' 10002
    `-ParenExpr 0x55fb421ec798 <line:39:47, col:49> 'int'
      `-IntegerLiteral 0x55fb421ec778 <lstrlib.c:566:39> 'int' 3
[B3.9]([B3.11], ([B3.15]))
  17: DeclRefExpr 0x55fb421ec868 <lstrlib.c:567:14> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
push_captures
  18: ImplicitCastExpr 0x55fb421ec928 <lstrlib.c:567:14> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ec868 <col:14> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
[B3.17] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(MatchState *, const char *, const char *))
  19: DeclRefExpr 0x55fb421ec890 <lstrlib.c:567:29> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
ms
  20: UnaryOperator 0x55fb421ec8b8 <lstrlib.c:567:28, col:29> 'MatchState *' prefix '&'
`-DeclRefExpr 0x55fb421ec890 <col:29> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
&[B3.19]
  21: DeclRefExpr 0x55fb421ec8d8 <lstrlib.c:567:33> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
src
  22: ImplicitCastExpr 0x55fb421ec980 <lstrlib.c:567:33> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec8d8 <col:33> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
[B3.21] (ImplicitCastExpr, LValueToRValue, const char *)
  23: DeclRefExpr 0x55fb421ec900 <lstrlib.c:567:38> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
e
  24: ImplicitCastExpr 0x55fb421ec998 <lstrlib.c:567:38> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec900 <col:38> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
[B3.23] (ImplicitCastExpr, LValueToRValue, const char *)
  25: CallExpr 0x55fb421ec940 <lstrlib.c:567:14, col:39> 'int'
|-ImplicitCastExpr 0x55fb421ec928 <col:14> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ec868 <col:14> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
|-UnaryOperator 0x55fb421ec8b8 <col:28, col:29> 'MatchState *' prefix '&'
| `-DeclRefExpr 0x55fb421ec890 <col:29> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
|-ImplicitCastExpr 0x55fb421ec980 <col:33> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ec8d8 <col:33> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
`-ImplicitCastExpr 0x55fb421ec998 <col:38> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421ec900 <col:38> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
[B3.18]([B3.20], [B3.22], [B3.24])
  26: ReturnStmt 0x55fb421ec9b0 <lstrlib.c:567:7, col:39>
`-CallExpr 0x55fb421ec940 <col:14, col:39> 'int'
  |-ImplicitCastExpr 0x55fb421ec928 <col:14> 'int (*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421ec868 <col:14> 'int (MatchState *, const char *, const char *)' Function 0x55fb421e6238 'push_captures' 'int (MatchState *, const char *, const char *)'
  |-UnaryOperator 0x55fb421ec8b8 <col:28, col:29> 'MatchState *' prefix '&'
  | `-DeclRefExpr 0x55fb421ec890 <col:29> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
  |-ImplicitCastExpr 0x55fb421ec980 <col:33> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421ec8d8 <col:33> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
  `-ImplicitCastExpr 0x55fb421ec998 <col:38> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421ec900 <col:38> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
return [B3.25];
   Preds (2): B4 B5
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x55fb421ec550 <lstrlib.c:564:21> 'lua_Integer':'long' lvalue Var 0x55fb421ec388 'newstart' 'lua_Integer':'long'
newstart
   2: UnaryOperator 0x55fb421ec578 <lstrlib.c:564:21, col:29> 'lua_Integer':'long' postfix '++'
`-DeclRefExpr 0x55fb421ec550 <col:21> 'lua_Integer':'long' lvalue Var 0x55fb421ec388 'newstart' 'lua_Integer':'long'
[B4.1]++
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x55fb421ec3e8 <lstrlib.c:563:30> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
e
   2: ImplicitCastExpr 0x55fb421ec438 <lstrlib.c:563:30> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec3e8 <col:30> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
[B5.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x55fb421ec410 <lstrlib.c:563:32> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
s
   4: ImplicitCastExpr 0x55fb421ec450 <lstrlib.c:563:32> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec410 <col:32> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
[B5.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: BinaryOperator 0x55fb421ec468 <lstrlib.c:563:30, col:32> 'long' '-'
|-ImplicitCastExpr 0x55fb421ec438 <col:30> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ec3e8 <col:30> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
`-ImplicitCastExpr 0x55fb421ec450 <col:32> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421ec410 <col:32> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
[B5.2] - [B5.4]
   6: DeclStmt 0x55fb421ec490 <lstrlib.c:563:7, col:33>col:19
`-VarDecl 0x55fb421ec388 <col:7, col:32> col:19 used newstart 'lua_Integer':'long' cinit
  `-BinaryOperator 0x55fb421ec468 <col:30, col:32> 'long' '-'
    |-ImplicitCastExpr 0x55fb421ec438 <col:30> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421ec3e8 <col:30> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
    `-ImplicitCastExpr 0x55fb421ec450 <col:32> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55fb421ec410 <col:32> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
lua_Integer newstart = e - s;
   7: DeclRefExpr 0x55fb421ec4a8 <lstrlib.c:564:11> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
e
   8: ImplicitCastExpr 0x55fb421ec4f8 <lstrlib.c:564:11> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec4a8 <col:11> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
[B5.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: DeclRefExpr 0x55fb421ec4d0 <lstrlib.c:564:16> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
src
  10: ImplicitCastExpr 0x55fb421ec510 <lstrlib.c:564:16> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec4d0 <col:16> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
[B5.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: BinaryOperator 0x55fb421ec528 <lstrlib.c:564:11, col:16> 'int' '=='
|-ImplicitCastExpr 0x55fb421ec4f8 <col:11> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ec4a8 <col:11> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
`-ImplicitCastExpr 0x55fb421ec510 <col:16> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421ec4d0 <col:16> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
[B5.8] == [B5.10]
   T: if [B5.11]
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclStmt 0x55fb421ec040 <lstrlib.c:560:5, col:18>col:17
`-VarDecl 0x55fb421ebfe0 <col:5, col:17> col:17 used e 'const char *'
const char *e;
   2: IntegerLiteral 0x55fb421ec0b8 <lstrlib.c:561:16> 'int' 0
0
   3: DeclRefExpr 0x55fb421ec058 <lstrlib.c:561:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
ms
   4: MemberExpr 0x55fb421ec080 <lstrlib.c:561:5, col:8> 'int' lvalue .level 0x55fb421c3700
`-DeclRefExpr 0x55fb421ec058 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
[B6.3].level
   5: BinaryOperator 0x55fb421ec0d8 <lstrlib.c:561:5, col:16> 'int' '='
|-MemberExpr 0x55fb421ec080 <col:5, col:8> 'int' lvalue .level 0x55fb421c3700
| `-DeclRefExpr 0x55fb421ec058 <col:5> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
`-IntegerLiteral 0x55fb421ec0b8 <col:16> 'int' 0
[B6.4] = [B6.2]
   6: DeclRefExpr 0x55fb421ec128 <lstrlib.c:562:14> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
match
   7: ImplicitCastExpr 0x55fb421ec1e8 <lstrlib.c:562:14> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ec128 <col:14> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
[B6.6] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(MatchState *, const char *, const char *))
   8: DeclRefExpr 0x55fb421ec150 <lstrlib.c:562:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
ms
   9: UnaryOperator 0x55fb421ec178 <lstrlib.c:562:20, col:21> 'MatchState *' prefix '&'
`-DeclRefExpr 0x55fb421ec150 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
&[B6.8]
  10: DeclRefExpr 0x55fb421ec198 <lstrlib.c:562:25> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
src
  11: ImplicitCastExpr 0x55fb421ec240 <lstrlib.c:562:25> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec198 <col:25> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
[B6.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: DeclRefExpr 0x55fb421ec1c0 <lstrlib.c:562:30> 'const char *' lvalue Var 0x55fb421ea5c0 'p' 'const char *'
p
  13: ImplicitCastExpr 0x55fb421ec258 <lstrlib.c:562:30> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ec1c0 <col:30> 'const char *' lvalue Var 0x55fb421ea5c0 'p' 'const char *'
[B6.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: CallExpr 0x55fb421ec200 <lstrlib.c:562:14, col:31> 'const char *'
|-ImplicitCastExpr 0x55fb421ec1e8 <col:14> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ec128 <col:14> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
|-UnaryOperator 0x55fb421ec178 <col:20, col:21> 'MatchState *' prefix '&'
| `-DeclRefExpr 0x55fb421ec150 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
|-ImplicitCastExpr 0x55fb421ec240 <col:25> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ec198 <col:25> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
`-ImplicitCastExpr 0x55fb421ec258 <col:30> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421ec1c0 <col:30> 'const char *' lvalue Var 0x55fb421ea5c0 'p' 'const char *'
[B6.7]([B6.9], [B6.11], [B6.13])
  15: DeclRefExpr 0x55fb421ec100 <lstrlib.c:562:10> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
e
  16: BinaryOperator 0x55fb421ec270 <lstrlib.c:562:10, col:31> 'const char *' '='
|-DeclRefExpr 0x55fb421ec100 <col:10> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
`-CallExpr 0x55fb421ec200 <col:14, col:31> 'const char *'
  |-ImplicitCastExpr 0x55fb421ec1e8 <col:14> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421ec128 <col:14> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
  |-UnaryOperator 0x55fb421ec178 <col:20, col:21> 'MatchState *' prefix '&'
  | `-DeclRefExpr 0x55fb421ec150 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
  |-ImplicitCastExpr 0x55fb421ec240 <col:25> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421ec198 <col:25> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
  `-ImplicitCastExpr 0x55fb421ec258 <col:30> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421ec1c0 <col:30> 'const char *' lvalue Var 0x55fb421ea5c0 'p' 'const char *'
[B6.15] = [B6.14]
  17: IntegerLiteral 0x55fb421ec2b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  18: CStyleCastExpr 0x55fb421ec2f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421ec2b8 <col:24> 'int' 0
(void *)[B6.17] (CStyleCastExpr, NullToPointer, void *)
  19: ImplicitCastExpr 0x55fb421ec338 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
`-ParenExpr 0x55fb421ec318 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb421ec2f0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421ec2b8 <col:24> 'int' 0
([B6.18]) (ImplicitCastExpr, BitCast, const char *)
  20: BinaryOperator 0x55fb421ec350 <lstrlib.c:562:9, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ParenExpr 0x55fb421ec298 <lstrlib.c:562:9, col:32> 'const char *'
| `-BinaryOperator 0x55fb421ec270 <col:10, col:31> 'const char *' '='
|   |-DeclRefExpr 0x55fb421ec100 <col:10> 'const char *' lvalue Var 0x55fb421ebfe0 'e' 'const char *'
|   `-CallExpr 0x55fb421ec200 <col:14, col:31> 'const char *'
|     |-ImplicitCastExpr 0x55fb421ec1e8 <col:14> 'const char *(*)(MatchState *, const char *, const char *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55fb421ec128 <col:14> 'const char *(MatchState *, const char *, const char *)' Function 0x55fb42119170 'match' 'const char *(MatchState *, const char *, const char *)'
|     |-UnaryOperator 0x55fb421ec178 <col:20, col:21> 'MatchState *' prefix '&'
|     | `-DeclRefExpr 0x55fb421ec150 <col:21> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
|     |-ImplicitCastExpr 0x55fb421ec240 <col:25> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55fb421ec198 <col:25> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
|     `-ImplicitCastExpr 0x55fb421ec258 <col:30> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55fb421ec1c0 <col:30> 'const char *' lvalue Var 0x55fb421ea5c0 'p' 'const char *'
`-ImplicitCastExpr 0x55fb421ec338 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <BitCast>
  `-ParenExpr 0x55fb421ec318 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55fb421ec2f0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55fb421ec2b8 <col:24> 'int' 0
([B6.16]) != [B6.19]
   T: if [B6.20]
   Preds (1): B7
   Succs (2): B5 B2

 [B7]
   1: DeclRefExpr 0x55fb421ebea0 <lstrlib.c:558:8> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
src
   2: ImplicitCastExpr 0x55fb421ebf28 <lstrlib.c:558:8> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ebea0 <col:8> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
[B7.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x55fb421ebec8 <lstrlib.c:558:15> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
ms
   4: MemberExpr 0x55fb421ebef0 <lstrlib.c:558:15, col:18> 'const char *' lvalue .src_end 0x55fb421c3648
`-DeclRefExpr 0x55fb421ebec8 <col:15> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
[B7.3].src_end
   5: ImplicitCastExpr 0x55fb421ebf40 <lstrlib.c:558:15, col:18> 'const char *' <LValueToRValue>
`-MemberExpr 0x55fb421ebef0 <col:15, col:18> 'const char *' lvalue .src_end 0x55fb421c3648
  `-DeclRefExpr 0x55fb421ebec8 <col:15> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
[B7.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: BinaryOperator 0x55fb421ebf58 <lstrlib.c:558:8, col:18> 'int' '<='
|-ImplicitCastExpr 0x55fb421ebf28 <col:8> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ebea0 <col:8> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
`-ImplicitCastExpr 0x55fb421ebf40 <col:15, col:18> 'const char *' <LValueToRValue>
  `-MemberExpr 0x55fb421ebef0 <col:15, col:18> 'const char *' lvalue .src_end 0x55fb421c3648
    `-DeclRefExpr 0x55fb421ebec8 <col:15> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
[B7.2] <= [B7.5]
   T: for (...; [B7.6]; ...)
   Preds (2): B2 B8
   Succs (2): B6 B1

 [B8]
   1: DeclStmt 0x55fb421ea288 <lstrlib.c:549:3, col:16>col:14
`-VarDecl 0x55fb421ea228 <col:3, col:14> col:14 used ms 'MatchState':'struct MatchState'
MatchState ms;
   2: DeclStmt 0x55fb421ea310 <lstrlib.c:550:3, col:12>col:10
`-VarDecl 0x55fb421ea2b0 <col:3, col:10> col:10 used ls 'size_t':'unsigned long'
size_t ls;
   3: DeclRefExpr 0x55fb421ea3a0 <lstrlib.c:551:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
lua_tolstring
   4: ImplicitCastExpr 0x55fb421ea520 <lstrlib.c:551:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ea3a0 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B8.3] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   5: DeclRefExpr 0x55fb421ea3c8 <lstrlib.c:551:33> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55fb421ea578 <lstrlib.c:551:33> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ea3c8 <col:33> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
[B8.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x55fb421ea3f0 <./lua.h:38:28> 'int' 10002
10002
   8: UnaryOperator 0x55fb421ea410 <./lua.h:38:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x55fb421ea3f0 <col:28> 'int' 10002
-[B8.7]
   9: IntegerLiteral 0x55fb421ea450 <lstrlib.c:551:53> 'int' 1
1
  10: BinaryOperator 0x55fb421ea490 <./lua.h:38:26, line:39:49> 'int' '-'
|-ParenExpr 0x55fb421ea430 <line:38:26, col:33> 'int'
| `-UnaryOperator 0x55fb421ea410 <col:27, col:28> 'int' prefix '-'
|   `-IntegerLiteral 0x55fb421ea3f0 <col:28> 'int' 10002
`-ParenExpr 0x55fb421ea470 <line:39:47, col:49> 'int'
  `-IntegerLiteral 0x55fb421ea450 <lstrlib.c:551:53> 'int' 1
([B8.8]) - ([B8.9])
  11: DeclRefExpr 0x55fb421ea4d8 <lstrlib.c:551:58> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
ls
  12: UnaryOperator 0x55fb421ea500 <lstrlib.c:551:57, col:58> 'size_t *' prefix '&'
`-DeclRefExpr 0x55fb421ea4d8 <col:58> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
&[B8.11]
  13: CallExpr 0x55fb421ea538 <lstrlib.c:551:19, col:60> 'const char *'
|-ImplicitCastExpr 0x55fb421ea520 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ea3a0 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55fb421ea578 <col:33> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ea3c8 <col:33> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
|-ParenExpr 0x55fb421ea4b8 <./lua.h:39:29, col:50> 'int'
| `-BinaryOperator 0x55fb421ea490 <line:38:26, line:39:49> 'int' '-'
|   |-ParenExpr 0x55fb421ea430 <line:38:26, col:33> 'int'
|   | `-UnaryOperator 0x55fb421ea410 <col:27, col:28> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55fb421ea3f0 <col:28> 'int' 10002
|   `-ParenExpr 0x55fb421ea470 <line:39:47, col:49> 'int'
|     `-IntegerLiteral 0x55fb421ea450 <lstrlib.c:551:53> 'int' 1
`-UnaryOperator 0x55fb421ea500 <col:57, col:58> 'size_t *' prefix '&'
  `-DeclRefExpr 0x55fb421ea4d8 <col:58> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
[B8.4]([B8.6], ([B8.10]), [B8.12])
  14: DeclStmt 0x55fb421ea590 <lstrlib.c:551:3, col:61>col:15
`-VarDecl 0x55fb421ea340 <col:3, col:60> col:15 used s 'const char *' cinit
  `-CallExpr 0x55fb421ea538 <col:19, col:60> 'const char *'
    |-ImplicitCastExpr 0x55fb421ea520 <col:19> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421ea3a0 <col:19> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
    |-ImplicitCastExpr 0x55fb421ea578 <col:33> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421ea3c8 <col:33> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
    |-ParenExpr 0x55fb421ea4b8 <./lua.h:39:29, col:50> 'int'
    | `-BinaryOperator 0x55fb421ea490 <line:38:26, line:39:49> 'int' '-'
    |   |-ParenExpr 0x55fb421ea430 <line:38:26, col:33> 'int'
    |   | `-UnaryOperator 0x55fb421ea410 <col:27, col:28> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x55fb421ea3f0 <col:28> 'int' 10002
    |   `-ParenExpr 0x55fb421ea470 <line:39:47, col:49> 'int'
    |     `-IntegerLiteral 0x55fb421ea450 <lstrlib.c:551:53> 'int' 1
    `-UnaryOperator 0x55fb421ea500 <col:57, col:58> 'size_t *' prefix '&'
      `-DeclRefExpr 0x55fb421ea4d8 <col:58> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
const char *s = lua_tolstring(L, ((-10002) - (1)), &ls);
  15: DeclRefExpr 0x55fb421ea620 <./lua.h:279:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
lua_tolstring
  16: ImplicitCastExpr 0x55fb421ea7f8 <./lua.h:279:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ea620 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B8.15] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
  17: DeclRefExpr 0x55fb421ea648 <lstrlib.c:552:32> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
L
  18: ImplicitCastExpr 0x55fb421ea850 <lstrlib.c:552:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ea648 <col:32> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
[B8.17] (ImplicitCastExpr, LValueToRValue, lua_State *)
  19: IntegerLiteral 0x55fb421ea670 <./lua.h:38:28> 'int' 10002
10002
  20: UnaryOperator 0x55fb421ea690 <./lua.h:38:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x55fb421ea670 <col:28> 'int' 10002
-[B8.19]
  21: IntegerLiteral 0x55fb421ea6d0 <lstrlib.c:552:52> 'int' 2
2
  22: BinaryOperator 0x55fb421ea710 <./lua.h:38:26, line:39:49> 'int' '-'
|-ParenExpr 0x55fb421ea6b0 <line:38:26, col:33> 'int'
| `-UnaryOperator 0x55fb421ea690 <col:27, col:28> 'int' prefix '-'
|   `-IntegerLiteral 0x55fb421ea670 <col:28> 'int' 10002
`-ParenExpr 0x55fb421ea6f0 <line:39:47, col:49> 'int'
  `-IntegerLiteral 0x55fb421ea6d0 <lstrlib.c:552:52> 'int' 2
([B8.20]) - ([B8.21])
  23: IntegerLiteral 0x55fb421ea778 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  24: CStyleCastExpr 0x55fb421ea7b0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55fb421ea778 <col:24> 'int' 0
(void *)[B8.23] (CStyleCastExpr, NullToPointer, void *)
  25: ImplicitCastExpr 0x55fb421ea868 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x55fb421ea7d8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55fb421ea7b0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55fb421ea778 <col:24> 'int' 0
([B8.24]) (ImplicitCastExpr, NullToPointer, size_t *)
  26: CallExpr 0x55fb421ea810 <./lua.h:279:27, col:53> 'const char *'
|-ImplicitCastExpr 0x55fb421ea7f8 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ea620 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55fb421ea850 <lstrlib.c:552:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ea648 <col:32> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
|-ParenExpr 0x55fb421ea758 <./lua.h:279:44, col:46> 'int'
| `-ParenExpr 0x55fb421ea738 <line:39:29, col:50> 'int'
|   `-BinaryOperator 0x55fb421ea710 <line:38:26, line:39:49> 'int' '-'
|     |-ParenExpr 0x55fb421ea6b0 <line:38:26, col:33> 'int'
|     | `-UnaryOperator 0x55fb421ea690 <col:27, col:28> 'int' prefix '-'
|     |   `-IntegerLiteral 0x55fb421ea670 <col:28> 'int' 10002
|     `-ParenExpr 0x55fb421ea6f0 <line:39:47, col:49> 'int'
|       `-IntegerLiteral 0x55fb421ea6d0 <lstrlib.c:552:52> 'int' 2
`-ImplicitCastExpr 0x55fb421ea868 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x55fb421ea7d8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55fb421ea7b0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55fb421ea778 <col:24> 'int' 0
[B8.16]([B8.18], (([B8.22])), [B8.25])
  27: DeclStmt 0x55fb421ea880 <lstrlib.c:552:3, col:55>col:15
`-VarDecl 0x55fb421ea5c0 <col:3, ./lua.h:279:53> lstrlib.c:552:15 used p 'const char *' cinit
  `-CallExpr 0x55fb421ea810 <./lua.h:279:27, col:53> 'const char *'
    |-ImplicitCastExpr 0x55fb421ea7f8 <col:27> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421ea620 <col:27> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55fb42191c70 'lua_tolstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
    |-ImplicitCastExpr 0x55fb421ea850 <lstrlib.c:552:32> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421ea648 <col:32> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
    |-ParenExpr 0x55fb421ea758 <./lua.h:279:44, col:46> 'int'
    | `-ParenExpr 0x55fb421ea738 <line:39:29, col:50> 'int'
    |   `-BinaryOperator 0x55fb421ea710 <line:38:26, line:39:49> 'int' '-'
    |     |-ParenExpr 0x55fb421ea6b0 <line:38:26, col:33> 'int'
    |     | `-UnaryOperator 0x55fb421ea690 <col:27, col:28> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x55fb421ea670 <col:28> 'int' 10002
    |     `-ParenExpr 0x55fb421ea6f0 <line:39:47, col:49> 'int'
    |       `-IntegerLiteral 0x55fb421ea6d0 <lstrlib.c:552:52> 'int' 2
    `-ImplicitCastExpr 0x55fb421ea868 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
      `-ParenExpr 0x55fb421ea7d8 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x55fb421ea7b0 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x55fb421ea778 <col:24> 'int' 0
const char *p = lua_tolstring(L, (((-10002) - (2))), ((void *)0));
  28: DeclStmt 0x55fb421ea910 <lstrlib.c:553:3, col:18>col:15
`-VarDecl 0x55fb421ea8b0 <col:3, col:15> col:15 used src 'const char *'
const char *src;
  29: DeclRefExpr 0x55fb421ea988 <lstrlib.c:554:10> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x55fb421ea9b0 <lstrlib.c:554:10> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ea988 <col:10> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
[B8.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: DeclRefExpr 0x55fb421ea928 <lstrlib.c:554:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
ms
  32: MemberExpr 0x55fb421ea950 <lstrlib.c:554:3, col:6> 'lua_State *' lvalue .L 0x55fb421c36a0
`-DeclRefExpr 0x55fb421ea928 <col:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
[B8.31].L
  33: BinaryOperator 0x55fb421ea9c8 <lstrlib.c:554:3, col:10> 'lua_State *' '='
|-MemberExpr 0x55fb421ea950 <col:3, col:6> 'lua_State *' lvalue .L 0x55fb421c36a0
| `-DeclRefExpr 0x55fb421ea928 <col:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
`-ImplicitCastExpr 0x55fb421ea9b0 <col:10> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421ea988 <col:10> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
[B8.32] = [B8.30]
  34: DeclRefExpr 0x55fb421eaa50 <lstrlib.c:555:17> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
s
  35: ImplicitCastExpr 0x55fb421eaa78 <lstrlib.c:555:17> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421eaa50 <col:17> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
[B8.34] (ImplicitCastExpr, LValueToRValue, const char *)
  36: DeclRefExpr 0x55fb421ea9f0 <lstrlib.c:555:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
ms
  37: MemberExpr 0x55fb421eaa18 <lstrlib.c:555:3, col:6> 'const char *' lvalue .src_init 0x55fb421c35e8
`-DeclRefExpr 0x55fb421ea9f0 <col:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
[B8.36].src_init
  38: BinaryOperator 0x55fb421eaa90 <lstrlib.c:555:3, col:17> 'const char *' '='
|-MemberExpr 0x55fb421eaa18 <col:3, col:6> 'const char *' lvalue .src_init 0x55fb421c35e8
| `-DeclRefExpr 0x55fb421ea9f0 <col:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
`-ImplicitCastExpr 0x55fb421eaa78 <col:17> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421eaa50 <col:17> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
[B8.37] = [B8.35]
  39: DeclRefExpr 0x55fb421ebb40 <lstrlib.c:556:16> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
s
  40: ImplicitCastExpr 0x55fb421ebb90 <lstrlib.c:556:16> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ebb40 <col:16> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
[B8.39] (ImplicitCastExpr, LValueToRValue, const char *)
  41: DeclRefExpr 0x55fb421ebb68 <lstrlib.c:556:18> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
ls
  42: ImplicitCastExpr 0x55fb421ebba8 <lstrlib.c:556:18> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55fb421ebb68 <col:18> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
[B8.41] (ImplicitCastExpr, LValueToRValue, size_t)
  43: BinaryOperator 0x55fb421ebbc0 <lstrlib.c:556:16, col:18> 'const char *' '+'
|-ImplicitCastExpr 0x55fb421ebb90 <col:16> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ebb40 <col:16> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
`-ImplicitCastExpr 0x55fb421ebba8 <col:18> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55fb421ebb68 <col:18> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
[B8.40] + [B8.42]
  44: DeclRefExpr 0x55fb421eaab8 <lstrlib.c:556:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
ms
  45: MemberExpr 0x55fb421eaae0 <lstrlib.c:556:3, col:6> 'const char *' lvalue .src_end 0x55fb421c3648
`-DeclRefExpr 0x55fb421eaab8 <col:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
[B8.44].src_end
  46: BinaryOperator 0x55fb421ebbe8 <lstrlib.c:556:3, col:18> 'const char *' '='
|-MemberExpr 0x55fb421eaae0 <col:3, col:6> 'const char *' lvalue .src_end 0x55fb421c3648
| `-DeclRefExpr 0x55fb421eaab8 <col:3> 'MatchState':'struct MatchState' lvalue Var 0x55fb421ea228 'ms' 'MatchState':'struct MatchState'
`-BinaryOperator 0x55fb421ebbc0 <col:16, col:18> 'const char *' '+'
  |-ImplicitCastExpr 0x55fb421ebb90 <col:16> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421ebb40 <col:16> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
  `-ImplicitCastExpr 0x55fb421ebba8 <col:18> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55fb421ebb68 <col:18> 'size_t':'unsigned long' lvalue Var 0x55fb421ea2b0 'ls' 'size_t':'unsigned long'
[B8.45] = [B8.43]
  47: DeclRefExpr 0x55fb421ebc38 <lstrlib.c:557:14> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
s
  48: ImplicitCastExpr 0x55fb421ebe38 <lstrlib.c:557:14> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ebc38 <col:14> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
[B8.47] (ImplicitCastExpr, LValueToRValue, const char *)
  49: DeclRefExpr 0x55fb421ebc60 <lstrlib.c:557:26> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x55fb42191780 'lua_tointeger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
lua_tointeger
  50: ImplicitCastExpr 0x55fb421ebd98 <lstrlib.c:557:26> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421ebc60 <col:26> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x55fb42191780 'lua_tointeger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B8.49] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
  51: DeclRefExpr 0x55fb421ebc88 <lstrlib.c:557:40> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
L
  52: ImplicitCastExpr 0x55fb421ebde8 <lstrlib.c:557:40> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55fb421ebc88 <col:40> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
[B8.51] (ImplicitCastExpr, LValueToRValue, lua_State *)
  53: IntegerLiteral 0x55fb421ebcb0 <./lua.h:38:28> 'int' 10002
10002
  54: UnaryOperator 0x55fb421ebcd0 <./lua.h:38:27, col:28> 'int' prefix '-'
`-IntegerLiteral 0x55fb421ebcb0 <col:28> 'int' 10002
-[B8.53]
  55: IntegerLiteral 0x55fb421ebd10 <lstrlib.c:557:60> 'int' 3
3
  56: BinaryOperator 0x55fb421ebd50 <./lua.h:38:26, line:39:49> 'int' '-'
|-ParenExpr 0x55fb421ebcf0 <line:38:26, col:33> 'int'
| `-UnaryOperator 0x55fb421ebcd0 <col:27, col:28> 'int' prefix '-'
|   `-IntegerLiteral 0x55fb421ebcb0 <col:28> 'int' 10002
`-ParenExpr 0x55fb421ebd30 <line:39:47, col:49> 'int'
  `-IntegerLiteral 0x55fb421ebd10 <lstrlib.c:557:60> 'int' 3
([B8.54]) - ([B8.55])
  57: CallExpr 0x55fb421ebdb0 <lstrlib.c:557:26, col:62> 'lua_Integer':'long'
|-ImplicitCastExpr 0x55fb421ebd98 <col:26> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421ebc60 <col:26> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x55fb42191780 'lua_tointeger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x55fb421ebde8 <col:40> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ebc88 <col:40> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
`-ParenExpr 0x55fb421ebd78 <./lua.h:39:29, col:50> 'int'
  `-BinaryOperator 0x55fb421ebd50 <line:38:26, line:39:49> 'int' '-'
    |-ParenExpr 0x55fb421ebcf0 <line:38:26, col:33> 'int'
    | `-UnaryOperator 0x55fb421ebcd0 <col:27, col:28> 'int' prefix '-'
    |   `-IntegerLiteral 0x55fb421ebcb0 <col:28> 'int' 10002
    `-ParenExpr 0x55fb421ebd30 <line:39:47, col:49> 'int'
      `-IntegerLiteral 0x55fb421ebd10 <lstrlib.c:557:60> 'int' 3
[B8.50]([B8.52], ([B8.56]))
  58: CStyleCastExpr 0x55fb421ebe10 <lstrlib.c:557:18, col:62> 'size_t':'unsigned long' <IntegralCast>
`-CallExpr 0x55fb421ebdb0 <col:26, col:62> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x55fb421ebd98 <col:26> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421ebc60 <col:26> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x55fb42191780 'lua_tointeger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x55fb421ebde8 <col:40> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421ebc88 <col:40> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
  `-ParenExpr 0x55fb421ebd78 <./lua.h:39:29, col:50> 'int'
    `-BinaryOperator 0x55fb421ebd50 <line:38:26, line:39:49> 'int' '-'
      |-ParenExpr 0x55fb421ebcf0 <line:38:26, col:33> 'int'
      | `-UnaryOperator 0x55fb421ebcd0 <col:27, col:28> 'int' prefix '-'
      |   `-IntegerLiteral 0x55fb421ebcb0 <col:28> 'int' 10002
      `-ParenExpr 0x55fb421ebd30 <line:39:47, col:49> 'int'
        `-IntegerLiteral 0x55fb421ebd10 <lstrlib.c:557:60> 'int' 3
(size_t)[B8.57] (CStyleCastExpr, IntegralCast, size_t)
  59: BinaryOperator 0x55fb421ebe50 <lstrlib.c:557:14, col:62> 'const char *' '+'
|-ImplicitCastExpr 0x55fb421ebe38 <col:14> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55fb421ebc38 <col:14> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
`-CStyleCastExpr 0x55fb421ebe10 <col:18, col:62> 'size_t':'unsigned long' <IntegralCast>
  `-CallExpr 0x55fb421ebdb0 <col:26, col:62> 'lua_Integer':'long'
    |-ImplicitCastExpr 0x55fb421ebd98 <col:26> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55fb421ebc60 <col:26> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x55fb42191780 'lua_tointeger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
    |-ImplicitCastExpr 0x55fb421ebde8 <col:40> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55fb421ebc88 <col:40> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
    `-ParenExpr 0x55fb421ebd78 <./lua.h:39:29, col:50> 'int'
      `-BinaryOperator 0x55fb421ebd50 <line:38:26, line:39:49> 'int' '-'
        |-ParenExpr 0x55fb421ebcf0 <line:38:26, col:33> 'int'
        | `-UnaryOperator 0x55fb421ebcd0 <col:27, col:28> 'int' prefix '-'
        |   `-IntegerLiteral 0x55fb421ebcb0 <col:28> 'int' 10002
        `-ParenExpr 0x55fb421ebd30 <line:39:47, col:49> 'int'
          `-IntegerLiteral 0x55fb421ebd10 <lstrlib.c:557:60> 'int' 3
[B8.48] + [B8.58]
  60: DeclRefExpr 0x55fb421ebc10 <lstrlib.c:557:8> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
src
  61: BinaryOperator 0x55fb421ebe78 <lstrlib.c:557:8, col:62> 'const char *' '='
|-DeclRefExpr 0x55fb421ebc10 <col:8> 'const char *' lvalue Var 0x55fb421ea8b0 'src' 'const char *'
`-BinaryOperator 0x55fb421ebe50 <col:14, col:62> 'const char *' '+'
  |-ImplicitCastExpr 0x55fb421ebe38 <col:14> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55fb421ebc38 <col:14> 'const char *' lvalue Var 0x55fb421ea340 's' 'const char *'
  `-CStyleCastExpr 0x55fb421ebe10 <col:18, col:62> 'size_t':'unsigned long' <IntegralCast>
    `-CallExpr 0x55fb421ebdb0 <col:26, col:62> 'lua_Integer':'long'
      |-ImplicitCastExpr 0x55fb421ebd98 <col:26> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55fb421ebc60 <col:26> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x55fb42191780 'lua_tointeger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
      |-ImplicitCastExpr 0x55fb421ebde8 <col:40> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x55fb421ebc88 <col:40> 'lua_State *' lvalue ParmVar 0x55fb421ea0e0 'L' 'lua_State *'
      `-ParenExpr 0x55fb421ebd78 <./lua.h:39:29, col:50> 'int'
        `-BinaryOperator 0x55fb421ebd50 <line:38:26, line:39:49> 'int' '-'
          |-ParenExpr 0x55fb421ebcf0 <line:38:26, col:33> 'int'
          | `-UnaryOperator 0x55fb421ebcd0 <col:27, col:28> 'int' prefix '-'
          |   `-IntegerLiteral 0x55fb421ebcb0 <col:28> 'int' 10002
          `-ParenExpr 0x55fb421ebd30 <line:39:47, col:49> 'int'
            `-IntegerLiteral 0x55fb421ebd10 <lstrlib.c:557:60> 'int' 3
[B8.60] = [B8.59]
   Preds (1): B9
   Succs (1): B7

 [B0 (EXIT)]
   Preds (2): B1 B3
