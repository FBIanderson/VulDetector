static int json_decode(lua_State *l)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: DeclRefExpr 0x563107e30560 <lua_cjson.c:1288:5> 'void (strbuf_t *)' Function 0x563107de7db0 'strbuf_free' 'void (strbuf_t *)'
strbuf_free
   2: ImplicitCastExpr 0x563107e305e8 <lua_cjson.c:1288:5> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e30560 <col:5> 'void (strbuf_t *)' Function 0x563107de7db0 'strbuf_free' 'void (strbuf_t *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *))
   3: DeclRefExpr 0x563107e30588 <lua_cjson.c:1288:17> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
   4: MemberExpr 0x563107e305b0 <lua_cjson.c:1288:17, col:22> 'strbuf_t *' lvalue .tmp 0x563107df15d0
`-DeclRefExpr 0x563107e30588 <col:17> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B1.3].tmp
   5: ImplicitCastExpr 0x563107e30630 <lua_cjson.c:1288:17, col:22> 'strbuf_t *' <LValueToRValue>
`-MemberExpr 0x563107e305b0 <col:17, col:22> 'strbuf_t *' lvalue .tmp 0x563107df15d0
  `-DeclRefExpr 0x563107e30588 <col:17> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B1.4] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   6: CallExpr 0x563107e30600 <lua_cjson.c:1288:5, col:25> 'void'
|-ImplicitCastExpr 0x563107e305e8 <col:5> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e30560 <col:5> 'void (strbuf_t *)' Function 0x563107de7db0 'strbuf_free' 'void (strbuf_t *)'
`-ImplicitCastExpr 0x563107e30630 <col:17, col:22> 'strbuf_t *' <LValueToRValue>
  `-MemberExpr 0x563107e305b0 <col:17, col:22> 'strbuf_t *' lvalue .tmp 0x563107df15d0
    `-DeclRefExpr 0x563107e30588 <col:17> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B1.2]([B1.5])
   7: IntegerLiteral 0x563107e30648 <lua_cjson.c:1290:12> 'int' 1
1
   8: ReturnStmt 0x563107e30668 <lua_cjson.c:1290:5, col:12>
`-IntegerLiteral 0x563107e30648 <col:12> 'int' 1
return [B1.7];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x563107e30370 <lua_cjson.c:1286:9> 'void (lua_State *, json_parse_t *, const char *, json_token_t *)' Function 0x563107e28670 'json_throw_parse_error' 'void (lua_State *, json_parse_t *, const char *, json_token_t *)'
json_throw_parse_error
   2: ImplicitCastExpr 0x563107e30480 <lua_cjson.c:1286:9> 'void (*)(lua_State *, json_parse_t *, const char *, json_token_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e30370 <col:9> 'void (lua_State *, json_parse_t *, const char *, json_token_t *)' Function 0x563107e28670 'json_throw_parse_error' 'void (lua_State *, json_parse_t *, const char *, json_token_t *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, json_parse_t *, const char *, json_token_t *))
   3: DeclRefExpr 0x563107e30398 <lua_cjson.c:1286:32> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e304e0 <lua_cjson.c:1286:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e30398 <col:32> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e303c0 <lua_cjson.c:1286:36> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
   6: UnaryOperator 0x563107e303e8 <lua_cjson.c:1286:35, col:36> 'json_parse_t *' prefix '&'
`-DeclRefExpr 0x563107e303c0 <col:36> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
&[B2.5]
   7: StringLiteral 0x563107e30408 <lua_cjson.c:1286:42> 'char [8]' lvalue "the end"
"the end"
   8: ImplicitCastExpr 0x563107e304f8 <lua_cjson.c:1286:42> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e30408 <col:42> 'char [8]' lvalue "the end"
[B2.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x563107e30510 <lua_cjson.c:1286:42> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e304f8 <col:42> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e30408 <col:42> 'char [8]' lvalue "the end"
[B2.8] (ImplicitCastExpr, BitCast, const char *)
  10: DeclRefExpr 0x563107e30438 <lua_cjson.c:1286:54> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
token
  11: UnaryOperator 0x563107e30460 <lua_cjson.c:1286:53, col:54> 'json_token_t *' prefix '&'
`-DeclRefExpr 0x563107e30438 <col:54> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
&[B2.10]
  12: CallExpr 0x563107e30498 <lua_cjson.c:1286:9, col:59> 'void'
|-ImplicitCastExpr 0x563107e30480 <col:9> 'void (*)(lua_State *, json_parse_t *, const char *, json_token_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e30370 <col:9> 'void (lua_State *, json_parse_t *, const char *, json_token_t *)' Function 0x563107e28670 'json_throw_parse_error' 'void (lua_State *, json_parse_t *, const char *, json_token_t *)'
|-ImplicitCastExpr 0x563107e304e0 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e30398 <col:32> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
|-UnaryOperator 0x563107e303e8 <col:35, col:36> 'json_parse_t *' prefix '&'
| `-DeclRefExpr 0x563107e303c0 <col:36> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
|-ImplicitCastExpr 0x563107e30510 <col:42> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e304f8 <col:42> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e30408 <col:42> 'char [8]' lvalue "the end"
`-UnaryOperator 0x563107e30460 <col:53, col:54> 'json_token_t *' prefix '&'
  `-DeclRefExpr 0x563107e30438 <col:54> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
[B2.2]([B2.4], [B2.6], [B2.9], [B2.11])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x563107e2fdd0 <lua_cjson.c:1277:16> 'strbuf_t *(int)' Function 0x563107de70f0 'strbuf_new' 'strbuf_t *(int)'
strbuf_new
   2: ImplicitCastExpr 0x563107e2fe78 <lua_cjson.c:1277:16> 'strbuf_t *(*)(int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e2fdd0 <col:16> 'strbuf_t *(int)' Function 0x563107de70f0 'strbuf_new' 'strbuf_t *(int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, strbuf_t *(*)(int))
   3: DeclRefExpr 0x563107e2fdf8 <lua_cjson.c:1277:27> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
json_len
   4: ImplicitCastExpr 0x563107e2fec0 <lua_cjson.c:1277:27> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x563107e2fdf8 <col:27> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
[B3.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: ImplicitCastExpr 0x563107e2fed8 <lua_cjson.c:1277:27> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e2fec0 <col:27> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x563107e2fdf8 <col:27> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
[B3.4] (ImplicitCastExpr, IntegralCast, int)
   6: CallExpr 0x563107e2fe90 <lua_cjson.c:1277:16, col:35> 'strbuf_t *'
|-ImplicitCastExpr 0x563107e2fe78 <col:16> 'strbuf_t *(*)(int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e2fdd0 <col:16> 'strbuf_t *(int)' Function 0x563107de70f0 'strbuf_new' 'strbuf_t *(int)'
`-ImplicitCastExpr 0x563107e2fed8 <col:27> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x563107e2fec0 <col:27> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x563107e2fdf8 <col:27> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
[B3.2]([B3.5])
   7: DeclRefExpr 0x563107e2fd70 <lua_cjson.c:1277:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
   8: MemberExpr 0x563107e2fd98 <lua_cjson.c:1277:5, col:10> 'strbuf_t *' lvalue .tmp 0x563107df15d0
`-DeclRefExpr 0x563107e2fd70 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B3.7].tmp
   9: BinaryOperator 0x563107e2fef0 <lua_cjson.c:1277:5, col:35> 'strbuf_t *' '='
|-MemberExpr 0x563107e2fd98 <col:5, col:10> 'strbuf_t *' lvalue .tmp 0x563107df15d0
| `-DeclRefExpr 0x563107e2fd70 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-CallExpr 0x563107e2fe90 <col:16, col:35> 'strbuf_t *'
  |-ImplicitCastExpr 0x563107e2fe78 <col:16> 'strbuf_t *(*)(int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e2fdd0 <col:16> 'strbuf_t *(int)' Function 0x563107de70f0 'strbuf_new' 'strbuf_t *(int)'
  `-ImplicitCastExpr 0x563107e2fed8 <col:27> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x563107e2fec0 <col:27> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x563107e2fdf8 <col:27> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
[B3.8] = [B3.6]
  10: DeclRefExpr 0x563107e2ff18 <lua_cjson.c:1279:5> 'void (json_parse_t *, json_token_t *)' Function 0x563107e255f8 'json_next_token' 'void (json_parse_t *, json_token_t *)'
json_next_token
  11: ImplicitCastExpr 0x563107e2ffd0 <lua_cjson.c:1279:5> 'void (*)(json_parse_t *, json_token_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e2ff18 <col:5> 'void (json_parse_t *, json_token_t *)' Function 0x563107e255f8 'json_next_token' 'void (json_parse_t *, json_token_t *)'
[B3.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(json_parse_t *, json_token_t *))
  12: DeclRefExpr 0x563107e2ff40 <lua_cjson.c:1279:22> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
  13: UnaryOperator 0x563107e2ff68 <lua_cjson.c:1279:21, col:22> 'json_parse_t *' prefix '&'
`-DeclRefExpr 0x563107e2ff40 <col:22> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
&[B3.12]
  14: DeclRefExpr 0x563107e2ff88 <lua_cjson.c:1279:29> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
token
  15: UnaryOperator 0x563107e2ffb0 <lua_cjson.c:1279:28, col:29> 'json_token_t *' prefix '&'
`-DeclRefExpr 0x563107e2ff88 <col:29> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
&[B3.14]
  16: CallExpr 0x563107e2ffe8 <lua_cjson.c:1279:5, col:34> 'void'
|-ImplicitCastExpr 0x563107e2ffd0 <col:5> 'void (*)(json_parse_t *, json_token_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e2ff18 <col:5> 'void (json_parse_t *, json_token_t *)' Function 0x563107e255f8 'json_next_token' 'void (json_parse_t *, json_token_t *)'
|-UnaryOperator 0x563107e2ff68 <col:21, col:22> 'json_parse_t *' prefix '&'
| `-DeclRefExpr 0x563107e2ff40 <col:22> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-UnaryOperator 0x563107e2ffb0 <col:28, col:29> 'json_token_t *' prefix '&'
  `-DeclRefExpr 0x563107e2ff88 <col:29> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
[B3.11]([B3.13], [B3.15])
  17: DeclRefExpr 0x563107e30020 <lua_cjson.c:1280:5> 'void (lua_State *, json_parse_t *, json_token_t *)' Function 0x563107e2dc80 'json_process_value' 'void (lua_State *, json_parse_t *, json_token_t *)'
json_process_value
  18: ImplicitCastExpr 0x563107e30100 <lua_cjson.c:1280:5> 'void (*)(lua_State *, json_parse_t *, json_token_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e30020 <col:5> 'void (lua_State *, json_parse_t *, json_token_t *)' Function 0x563107e2dc80 'json_process_value' 'void (lua_State *, json_parse_t *, json_token_t *)'
[B3.17] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, json_parse_t *, json_token_t *))
  19: DeclRefExpr 0x563107e30048 <lua_cjson.c:1280:24> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
l
  20: ImplicitCastExpr 0x563107e30158 <lua_cjson.c:1280:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e30048 <col:24> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B3.19] (ImplicitCastExpr, LValueToRValue, lua_State *)
  21: DeclRefExpr 0x563107e30070 <lua_cjson.c:1280:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
  22: UnaryOperator 0x563107e30098 <lua_cjson.c:1280:27, col:28> 'json_parse_t *' prefix '&'
`-DeclRefExpr 0x563107e30070 <col:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
&[B3.21]
  23: DeclRefExpr 0x563107e300b8 <lua_cjson.c:1280:35> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
token
  24: UnaryOperator 0x563107e300e0 <lua_cjson.c:1280:34, col:35> 'json_token_t *' prefix '&'
`-DeclRefExpr 0x563107e300b8 <col:35> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
&[B3.23]
  25: CallExpr 0x563107e30118 <lua_cjson.c:1280:5, col:40> 'void'
|-ImplicitCastExpr 0x563107e30100 <col:5> 'void (*)(lua_State *, json_parse_t *, json_token_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e30020 <col:5> 'void (lua_State *, json_parse_t *, json_token_t *)' Function 0x563107e2dc80 'json_process_value' 'void (lua_State *, json_parse_t *, json_token_t *)'
|-ImplicitCastExpr 0x563107e30158 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e30048 <col:24> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
|-UnaryOperator 0x563107e30098 <col:27, col:28> 'json_parse_t *' prefix '&'
| `-DeclRefExpr 0x563107e30070 <col:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-UnaryOperator 0x563107e300e0 <col:34, col:35> 'json_token_t *' prefix '&'
  `-DeclRefExpr 0x563107e300b8 <col:35> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
[B3.18]([B3.20], [B3.22], [B3.24])
  26: DeclRefExpr 0x563107e30170 <lua_cjson.c:1283:5> 'void (json_parse_t *, json_token_t *)' Function 0x563107e255f8 'json_next_token' 'void (json_parse_t *, json_token_t *)'
json_next_token
  27: ImplicitCastExpr 0x563107e30228 <lua_cjson.c:1283:5> 'void (*)(json_parse_t *, json_token_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e30170 <col:5> 'void (json_parse_t *, json_token_t *)' Function 0x563107e255f8 'json_next_token' 'void (json_parse_t *, json_token_t *)'
[B3.26] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(json_parse_t *, json_token_t *))
  28: DeclRefExpr 0x563107e30198 <lua_cjson.c:1283:22> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
  29: UnaryOperator 0x563107e301c0 <lua_cjson.c:1283:21, col:22> 'json_parse_t *' prefix '&'
`-DeclRefExpr 0x563107e30198 <col:22> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
&[B3.28]
  30: DeclRefExpr 0x563107e301e0 <lua_cjson.c:1283:29> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
token
  31: UnaryOperator 0x563107e30208 <lua_cjson.c:1283:28, col:29> 'json_token_t *' prefix '&'
`-DeclRefExpr 0x563107e301e0 <col:29> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
&[B3.30]
  32: CallExpr 0x563107e30240 <lua_cjson.c:1283:5, col:34> 'void'
|-ImplicitCastExpr 0x563107e30228 <col:5> 'void (*)(json_parse_t *, json_token_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e30170 <col:5> 'void (json_parse_t *, json_token_t *)' Function 0x563107e255f8 'json_next_token' 'void (json_parse_t *, json_token_t *)'
|-UnaryOperator 0x563107e301c0 <col:21, col:22> 'json_parse_t *' prefix '&'
| `-DeclRefExpr 0x563107e30198 <col:22> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-UnaryOperator 0x563107e30208 <col:28, col:29> 'json_token_t *' prefix '&'
  `-DeclRefExpr 0x563107e301e0 <col:29> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
[B3.27]([B3.29], [B3.31])
  33: DeclRefExpr 0x563107e30278 <lua_cjson.c:1285:9> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
token
  34: MemberExpr 0x563107e302a0 <lua_cjson.c:1285:9, col:15> 'json_token_type_t':'json_token_type_t' lvalue .type 0x563107df18d0
`-DeclRefExpr 0x563107e30278 <col:9> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
[B3.33].type
  35: ImplicitCastExpr 0x563107e30300 <lua_cjson.c:1285:9, col:15> 'json_token_type_t':'json_token_type_t' <LValueToRValue>
`-MemberExpr 0x563107e302a0 <col:9, col:15> 'json_token_type_t':'json_token_type_t' lvalue .type 0x563107df18d0
  `-DeclRefExpr 0x563107e30278 <col:9> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
[B3.34] (ImplicitCastExpr, LValueToRValue, json_token_type_t)
  36: ImplicitCastExpr 0x563107e30318 <lua_cjson.c:1285:9, col:15> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x563107e30300 <col:9, col:15> 'json_token_type_t':'json_token_type_t' <LValueToRValue>
  `-MemberExpr 0x563107e302a0 <col:9, col:15> 'json_token_type_t':'json_token_type_t' lvalue .type 0x563107df18d0
    `-DeclRefExpr 0x563107e30278 <col:9> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
[B3.35] (ImplicitCastExpr, IntegralCast, unsigned int)
  37: DeclRefExpr 0x563107e302d8 <lua_cjson.c:1285:23> 'int' EnumConstant 0x563107ded5b0 'T_END' 'int'
T_END
  38: ImplicitCastExpr 0x563107e30330 <lua_cjson.c:1285:23> 'unsigned int' <IntegralCast>
`-DeclRefExpr 0x563107e302d8 <col:23> 'int' EnumConstant 0x563107ded5b0 'T_END' 'int'
[B3.37] (ImplicitCastExpr, IntegralCast, unsigned int)
  39: BinaryOperator 0x563107e30348 <lua_cjson.c:1285:9, col:23> 'int' '!='
|-ImplicitCastExpr 0x563107e30318 <col:9, col:15> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e30300 <col:9, col:15> 'json_token_type_t':'json_token_type_t' <LValueToRValue>
|   `-MemberExpr 0x563107e302a0 <col:9, col:15> 'json_token_type_t':'json_token_type_t' lvalue .type 0x563107df18d0
|     `-DeclRefExpr 0x563107e30278 <col:9> 'json_token_t':'json_token_t' lvalue Var 0x563107e2ef50 'token' 'json_token_t':'json_token_t'
`-ImplicitCastExpr 0x563107e30330 <col:23> 'unsigned int' <IntegralCast>
  `-DeclRefExpr 0x563107e302d8 <col:23> 'int' EnumConstant 0x563107ded5b0 'T_END' 'int'
[B3.36] != [B3.38]
   T: if [B3.39]
   Preds (3): B4 B5 B7
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x563107e2fbc0 <lua_cjson.c:1272:9> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x563107d95e58 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x563107e2fca0 <lua_cjson.c:1272:9> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e2fbc0 <col:9> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x563107d95e58 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x563107e2fbe8 <lua_cjson.c:1272:20> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e2fcf0 <lua_cjson.c:1272:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e2fbe8 <col:20> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x563107e2fc48 <lua_cjson.c:1272:23> 'char [46]' lvalue "JSON parser does not support UTF-16 or UTF-32"
"JSON parser does not support UTF-16 or UTF-32"
   6: ImplicitCastExpr 0x563107e2fd08 <lua_cjson.c:1272:23> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e2fc48 <col:23> 'char [46]' lvalue "JSON parser does not support UTF-16 or UTF-32"
[B4.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x563107e2fd20 <lua_cjson.c:1272:23> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e2fd08 <col:23> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e2fc48 <col:23> 'char [46]' lvalue "JSON parser does not support UTF-16 or UTF-32"
[B4.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x563107e2fcb8 <lua_cjson.c:1272:9, col:70> 'int'
|-ImplicitCastExpr 0x563107e2fca0 <col:9> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e2fbc0 <col:9> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x563107d95e58 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x563107e2fcf0 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e2fbe8 <col:20> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e2fd20 <col:23> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e2fd08 <col:23> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e2fc48 <col:23> 'char [46]' lvalue "JSON parser does not support UTF-16 or UTF-32"
[B4.2]([B4.4], [B4.7])
   Preds (2): B5 B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x563107e2fa58 <lua_cjson.c:1271:45> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
   2: MemberExpr 0x563107e2fa80 <lua_cjson.c:1271:45, col:50> 'const char *' lvalue .data 0x563107df1518
`-DeclRefExpr 0x563107e2fa58 <col:45> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B5.1].data
   3: ImplicitCastExpr 0x563107e2fad8 <lua_cjson.c:1271:45, col:50> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e2fa80 <col:45, col:50> 'const char *' lvalue .data 0x563107df1518
  `-DeclRefExpr 0x563107e2fa58 <col:45> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B5.2] (ImplicitCastExpr, LValueToRValue, const char *)
   4: IntegerLiteral 0x563107e2fab8 <lua_cjson.c:1271:55> 'int' 1
1
   5: ArraySubscriptExpr 0x563107e2faf0 <lua_cjson.c:1271:45, col:56> 'const char' lvalue
|-ImplicitCastExpr 0x563107e2fad8 <col:45, col:50> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e2fa80 <col:45, col:50> 'const char *' lvalue .data 0x563107df1518
|   `-DeclRefExpr 0x563107e2fa58 <col:45> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-IntegerLiteral 0x563107e2fab8 <col:55> 'int' 1
[B5.3][[B5.4]]
   6: ImplicitCastExpr 0x563107e2fb18 <lua_cjson.c:1271:45, col:56> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x563107e2faf0 <col:45, col:56> 'const char' lvalue
  |-ImplicitCastExpr 0x563107e2fad8 <col:45, col:50> 'const char *' <LValueToRValue>
  | `-MemberExpr 0x563107e2fa80 <col:45, col:50> 'const char *' lvalue .data 0x563107df1518
  |   `-DeclRefExpr 0x563107e2fa58 <col:45> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
  `-IntegerLiteral 0x563107e2fab8 <col:55> 'int' 1
[B5.5] (ImplicitCastExpr, LValueToRValue, char)
   7: UnaryOperator 0x563107e2fb30 <lua_cjson.c:1271:44, col:56> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e2fb18 <col:45, col:56> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x563107e2faf0 <col:45, col:56> 'const char' lvalue
    |-ImplicitCastExpr 0x563107e2fad8 <col:45, col:50> 'const char *' <LValueToRValue>
    | `-MemberExpr 0x563107e2fa80 <col:45, col:50> 'const char *' lvalue .data 0x563107df1518
    |   `-DeclRefExpr 0x563107e2fa58 <col:45> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
    `-IntegerLiteral 0x563107e2fab8 <col:55> 'int' 1
![B5.6]
   T: if [B7.36] && ([B6.7] || [B5.7])
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x563107e2f960 <lua_cjson.c:1271:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
   2: MemberExpr 0x563107e2f988 <lua_cjson.c:1271:28, col:33> 'const char *' lvalue .data 0x563107df1518
`-DeclRefExpr 0x563107e2f960 <col:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B6.1].data
   3: ImplicitCastExpr 0x563107e2f9e0 <lua_cjson.c:1271:28, col:33> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e2f988 <col:28, col:33> 'const char *' lvalue .data 0x563107df1518
  `-DeclRefExpr 0x563107e2f960 <col:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B6.2] (ImplicitCastExpr, LValueToRValue, const char *)
   4: IntegerLiteral 0x563107e2f9c0 <lua_cjson.c:1271:38> 'int' 0
0
   5: ArraySubscriptExpr 0x563107e2f9f8 <lua_cjson.c:1271:28, col:39> 'const char' lvalue
|-ImplicitCastExpr 0x563107e2f9e0 <col:28, col:33> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e2f988 <col:28, col:33> 'const char *' lvalue .data 0x563107df1518
|   `-DeclRefExpr 0x563107e2f960 <col:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-IntegerLiteral 0x563107e2f9c0 <col:38> 'int' 0
[B6.3][[B6.4]]
   6: ImplicitCastExpr 0x563107e2fa20 <lua_cjson.c:1271:28, col:39> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x563107e2f9f8 <col:28, col:39> 'const char' lvalue
  |-ImplicitCastExpr 0x563107e2f9e0 <col:28, col:33> 'const char *' <LValueToRValue>
  | `-MemberExpr 0x563107e2f988 <col:28, col:33> 'const char *' lvalue .data 0x563107df1518
  |   `-DeclRefExpr 0x563107e2f960 <col:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
  `-IntegerLiteral 0x563107e2f9c0 <col:38> 'int' 0
[B6.5] (ImplicitCastExpr, LValueToRValue, char)
   7: UnaryOperator 0x563107e2fa38 <lua_cjson.c:1271:27, col:39> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e2fa20 <col:28, col:39> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x563107e2f9f8 <col:28, col:39> 'const char' lvalue
    |-ImplicitCastExpr 0x563107e2f9e0 <col:28, col:33> 'const char *' <LValueToRValue>
    | `-MemberExpr 0x563107e2f988 <col:28, col:33> 'const char *' lvalue .data 0x563107df1518
    |   `-DeclRefExpr 0x563107e2f960 <col:28> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
    `-IntegerLiteral 0x563107e2f9c0 <col:38> 'int' 0
![B6.6]
   T: [B6.7] || ...
   Preds (1): B7
   Succs (2): B4 B5

 [B7]
   1: BinaryOperator 0x563107e2f2f8 <./lauxlib.h:101:11, col:58> 'int' '||'
|-ParenExpr 0x563107e2f148 <col:11, col:16> 'int'
| `-BinaryOperator 0x563107e2f120 <lua_cjson.c:1259:22, col:39> 'int' '=='
|   |-CallExpr 0x563107e2f0b8 <col:22, col:34> 'int'
|   | |-ImplicitCastExpr 0x563107e2f0a0 <col:22> 'int (*)(lua_State *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563107e2f050 <col:22> 'int (lua_State *)':'int (lua_State *)' Function 0x563107d50668 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
|   | `-ImplicitCastExpr 0x563107e2f0e8 <col:33> 'lua_State *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563107e2f078 <col:33> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
|   `-IntegerLiteral 0x563107e2f100 <col:39> 'int' 1
`-CallExpr 0x563107e2f270 <./lauxlib.h:101:21, col:58> 'int'
  |-ImplicitCastExpr 0x563107e2f258 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e2f168 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x563107e2f2b0 <lua_cjson.c:1259:19> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e2f190 <col:19> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
  |-ParenExpr 0x563107e2f1d8 <./lauxlib.h:101:38, col:45> 'int'
  | `-IntegerLiteral 0x563107e2f1b8 <lua_cjson.c:1259:42> 'int' 1
  `-ImplicitCastExpr 0x563107e2f2e0 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x563107e2f2c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
      `-ParenExpr 0x563107e2f238 <col:48, col:57> 'char [20]' lvalue
        `-StringLiteral 0x563107e2f1f8 <lua_cjson.c:1259:45> 'char [20]' lvalue "expected 1 argument"
([B9.10]) || [B8.9]
   2: CStyleCastExpr 0x563107e2f380 <./lauxlib.h:101:4, col:59> 'void' <ToVoid>
`-ParenExpr 0x563107e2f360 <col:10, col:59> 'int'
  `-BinaryOperator 0x563107e2f2f8 <col:11, col:58> 'int' '||'
    |-ParenExpr 0x563107e2f148 <col:11, col:16> 'int'
    | `-BinaryOperator 0x563107e2f120 <lua_cjson.c:1259:22, col:39> 'int' '=='
    |   |-CallExpr 0x563107e2f0b8 <col:22, col:34> 'int'
    |   | |-ImplicitCastExpr 0x563107e2f0a0 <col:22> 'int (*)(lua_State *)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x563107e2f050 <col:22> 'int (lua_State *)':'int (lua_State *)' Function 0x563107d50668 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
    |   | `-ImplicitCastExpr 0x563107e2f0e8 <col:33> 'lua_State *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x563107e2f078 <col:33> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
    |   `-IntegerLiteral 0x563107e2f100 <col:39> 'int' 1
    `-CallExpr 0x563107e2f270 <./lauxlib.h:101:21, col:58> 'int'
      |-ImplicitCastExpr 0x563107e2f258 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x563107e2f168 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
      |-ImplicitCastExpr 0x563107e2f2b0 <lua_cjson.c:1259:19> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x563107e2f190 <col:19> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
      |-ParenExpr 0x563107e2f1d8 <./lauxlib.h:101:38, col:45> 'int'
      | `-IntegerLiteral 0x563107e2f1b8 <lua_cjson.c:1259:42> 'int' 1
      `-ImplicitCastExpr 0x563107e2f2e0 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
        `-ImplicitCastExpr 0x563107e2f2c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
          `-ParenExpr 0x563107e2f238 <col:48, col:57> 'char [20]' lvalue
            `-StringLiteral 0x563107e2f1f8 <lua_cjson.c:1259:45> 'char [20]' lvalue "expected 1 argument"
(void)([B7.1]) (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x563107e2f428 <lua_cjson.c:1261:16> 'json_config_t *(lua_State *)' Function 0x563107dfe940 'json_fetch_config' 'json_config_t *(lua_State *)'
json_fetch_config
   4: ImplicitCastExpr 0x563107e2f478 <lua_cjson.c:1261:16> 'json_config_t *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e2f428 <col:16> 'json_config_t *(lua_State *)' Function 0x563107dfe940 'json_fetch_config' 'json_config_t *(lua_State *)'
[B7.3] (ImplicitCastExpr, FunctionToPointerDecay, json_config_t *(*)(lua_State *))
   5: DeclRefExpr 0x563107e2f450 <lua_cjson.c:1261:34> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
l
   6: ImplicitCastExpr 0x563107e2f4c0 <lua_cjson.c:1261:34> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e2f450 <col:34> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B7.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: CallExpr 0x563107e2f490 <lua_cjson.c:1261:16, col:35> 'json_config_t *'
|-ImplicitCastExpr 0x563107e2f478 <col:16> 'json_config_t *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e2f428 <col:16> 'json_config_t *(lua_State *)' Function 0x563107dfe940 'json_fetch_config' 'json_config_t *(lua_State *)'
`-ImplicitCastExpr 0x563107e2f4c0 <col:34> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x563107e2f450 <col:34> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B7.4]([B7.6])
   8: DeclRefExpr 0x563107e2f3c8 <lua_cjson.c:1261:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
   9: MemberExpr 0x563107e2f3f0 <lua_cjson.c:1261:5, col:10> 'json_config_t *' lvalue .cfg 0x563107df16a8
`-DeclRefExpr 0x563107e2f3c8 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B7.8].cfg
  10: BinaryOperator 0x563107e2f4d8 <lua_cjson.c:1261:5, col:35> 'json_config_t *' '='
|-MemberExpr 0x563107e2f3f0 <col:5, col:10> 'json_config_t *' lvalue .cfg 0x563107df16a8
| `-DeclRefExpr 0x563107e2f3c8 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-CallExpr 0x563107e2f490 <col:16, col:35> 'json_config_t *'
  |-ImplicitCastExpr 0x563107e2f478 <col:16> 'json_config_t *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e2f428 <col:16> 'json_config_t *(lua_State *)' Function 0x563107dfe940 'json_fetch_config' 'json_config_t *(lua_State *)'
  `-ImplicitCastExpr 0x563107e2f4c0 <col:34> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x563107e2f450 <col:34> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B7.9] = [B7.7]
  11: DeclRefExpr 0x563107e2f560 <lua_cjson.c:1262:17> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x563107d90f98 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
  12: ImplicitCastExpr 0x563107e2f618 <lua_cjson.c:1262:17> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e2f560 <col:17> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x563107d90f98 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B7.11] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
  13: DeclRefExpr 0x563107e2f588 <lua_cjson.c:1262:35> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
l
  14: ImplicitCastExpr 0x563107e2f670 <lua_cjson.c:1262:35> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e2f588 <col:35> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B7.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: IntegerLiteral 0x563107e2f5b0 <lua_cjson.c:1262:38> 'int' 1
1
  16: DeclRefExpr 0x563107e2f5d0 <lua_cjson.c:1262:42> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
json_len
  17: UnaryOperator 0x563107e2f5f8 <lua_cjson.c:1262:41, col:42> 'size_t *' prefix '&'
`-DeclRefExpr 0x563107e2f5d0 <col:42> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
&[B7.16]
  18: CallExpr 0x563107e2f630 <lua_cjson.c:1262:17, col:50> 'const char *'
|-ImplicitCastExpr 0x563107e2f618 <col:17> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e2f560 <col:17> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x563107d90f98 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x563107e2f670 <col:35> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e2f588 <col:35> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
|-IntegerLiteral 0x563107e2f5b0 <col:38> 'int' 1
`-UnaryOperator 0x563107e2f5f8 <col:41, col:42> 'size_t *' prefix '&'
  `-DeclRefExpr 0x563107e2f5d0 <col:42> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
[B7.12]([B7.14], [B7.15], [B7.17])
  19: DeclRefExpr 0x563107e2f500 <lua_cjson.c:1262:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
  20: MemberExpr 0x563107e2f528 <lua_cjson.c:1262:5, col:10> 'const char *' lvalue .data 0x563107df1518
`-DeclRefExpr 0x563107e2f500 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B7.19].data
  21: BinaryOperator 0x563107e2f688 <lua_cjson.c:1262:5, col:50> 'const char *' '='
|-MemberExpr 0x563107e2f528 <col:5, col:10> 'const char *' lvalue .data 0x563107df1518
| `-DeclRefExpr 0x563107e2f500 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-CallExpr 0x563107e2f630 <col:17, col:50> 'const char *'
  |-ImplicitCastExpr 0x563107e2f618 <col:17> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e2f560 <col:17> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x563107d90f98 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
  |-ImplicitCastExpr 0x563107e2f670 <col:35> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e2f588 <col:35> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
  |-IntegerLiteral 0x563107e2f5b0 <col:38> 'int' 1
  `-UnaryOperator 0x563107e2f5f8 <col:41, col:42> 'size_t *' prefix '&'
    `-DeclRefExpr 0x563107e2f5d0 <col:42> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
[B7.20] = [B7.18]
  22: IntegerLiteral 0x563107e2f710 <lua_cjson.c:1263:26> 'int' 0
0
  23: DeclRefExpr 0x563107e2f6b0 <lua_cjson.c:1263:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
  24: MemberExpr 0x563107e2f6d8 <lua_cjson.c:1263:5, col:10> 'int' lvalue .current_depth 0x563107df1708
`-DeclRefExpr 0x563107e2f6b0 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B7.23].current_depth
  25: BinaryOperator 0x563107e2f730 <lua_cjson.c:1263:5, col:26> 'int' '='
|-MemberExpr 0x563107e2f6d8 <col:5, col:10> 'int' lvalue .current_depth 0x563107df1708
| `-DeclRefExpr 0x563107e2f6b0 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-IntegerLiteral 0x563107e2f710 <col:26> 'int' 0
[B7.24] = [B7.22]
  26: DeclRefExpr 0x563107e2f820 <lua_cjson.c:1264:16> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
  27: MemberExpr 0x563107e2f848 <lua_cjson.c:1264:16, col:21> 'const char *' lvalue .data 0x563107df1518
`-DeclRefExpr 0x563107e2f820 <col:16> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B7.26].data
  28: ImplicitCastExpr 0x563107e2f880 <lua_cjson.c:1264:16, col:21> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e2f848 <col:16, col:21> 'const char *' lvalue .data 0x563107df1518
  `-DeclRefExpr 0x563107e2f820 <col:16> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B7.27] (ImplicitCastExpr, LValueToRValue, const char *)
  29: DeclRefExpr 0x563107e2f7c0 <lua_cjson.c:1264:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
json
  30: MemberExpr 0x563107e2f7e8 <lua_cjson.c:1264:5, col:10> 'const char *' lvalue .ptr 0x563107df1578
`-DeclRefExpr 0x563107e2f7c0 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B7.29].ptr
  31: BinaryOperator 0x563107e2f898 <lua_cjson.c:1264:5, col:21> 'const char *' '='
|-MemberExpr 0x563107e2f7e8 <col:5, col:10> 'const char *' lvalue .ptr 0x563107df1578
| `-DeclRefExpr 0x563107e2f7c0 <col:5> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
`-ImplicitCastExpr 0x563107e2f880 <col:16, col:21> 'const char *' <LValueToRValue>
  `-MemberExpr 0x563107e2f848 <col:16, col:21> 'const char *' lvalue .data 0x563107df1518
    `-DeclRefExpr 0x563107e2f820 <col:16> 'json_parse_t':'json_parse_t' lvalue Var 0x563107e2eec8 'json' 'json_parse_t':'json_parse_t'
[B7.30] = [B7.28]
  32: DeclRefExpr 0x563107e2f8c0 <lua_cjson.c:1271:9> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
json_len
  33: ImplicitCastExpr 0x563107e2f908 <lua_cjson.c:1271:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x563107e2f8c0 <col:9> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
[B7.32] (ImplicitCastExpr, LValueToRValue, size_t)
  34: IntegerLiteral 0x563107e2f8e8 <lua_cjson.c:1271:21> 'int' 2
2
  35: ImplicitCastExpr 0x563107e2f920 <lua_cjson.c:1271:21> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x563107e2f8e8 <col:21> 'int' 2
[B7.34] (ImplicitCastExpr, IntegralCast, unsigned long)
  36: BinaryOperator 0x563107e2f938 <lua_cjson.c:1271:9, col:21> 'int' '>='
|-ImplicitCastExpr 0x563107e2f908 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x563107e2f8c0 <col:9> 'size_t':'unsigned long' lvalue Var 0x563107e2efd8 'json_len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x563107e2f920 <col:21> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x563107e2f8e8 <col:21> 'int' 2
[B7.33] >= [B7.35]
   T: [B7.36] && ...
   Preds (2): B8 B9
   Succs (2): B6 B3

 [B8]
   1: DeclRefExpr 0x563107e2f168 <./lauxlib.h:101:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x563107e2f258 <./lauxlib.h:101:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e2f168 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x563107e2f190 <lua_cjson.c:1259:19> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e2f2b0 <lua_cjson.c:1259:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e2f190 <col:19> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e2f1b8 <lua_cjson.c:1259:42> 'int' 1
1
   6: StringLiteral 0x563107e2f1f8 <lua_cjson.c:1259:45> 'char [20]' lvalue "expected 1 argument"
"expected 1 argument"
   7: ImplicitCastExpr 0x563107e2f2c8 <./lauxlib.h:101:48, col:57> 'char *' <ArrayToPointerDecay>
`-ParenExpr 0x563107e2f238 <col:48, col:57> 'char [20]' lvalue
  `-StringLiteral 0x563107e2f1f8 <lua_cjson.c:1259:45> 'char [20]' lvalue "expected 1 argument"
([B8.6]) (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x563107e2f2e0 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e2f2c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
  `-ParenExpr 0x563107e2f238 <col:48, col:57> 'char [20]' lvalue
    `-StringLiteral 0x563107e2f1f8 <lua_cjson.c:1259:45> 'char [20]' lvalue "expected 1 argument"
[B8.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x563107e2f270 <./lauxlib.h:101:21, col:58> 'int'
|-ImplicitCastExpr 0x563107e2f258 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e2f168 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x563107e2f2b0 <lua_cjson.c:1259:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e2f190 <col:19> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
|-ParenExpr 0x563107e2f1d8 <./lauxlib.h:101:38, col:45> 'int'
| `-IntegerLiteral 0x563107e2f1b8 <lua_cjson.c:1259:42> 'int' 1
`-ImplicitCastExpr 0x563107e2f2e0 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e2f2c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
    `-ParenExpr 0x563107e2f238 <col:48, col:57> 'char [20]' lvalue
      `-StringLiteral 0x563107e2f1f8 <lua_cjson.c:1259:45> 'char [20]' lvalue "expected 1 argument"
[B8.2]([B8.4], ([B8.5]), [B8.8])
   Preds (1): B9
   Succs (1): B7

 [B9]
   1: DeclStmt 0x563107e2ef28 <lua_cjson.c:1255:5, col:22>col:18
`-VarDecl 0x563107e2eec8 <col:5, col:18> col:18 used json 'json_parse_t':'json_parse_t'
json_parse_t json;
   2: DeclStmt 0x563107e2efb0 <lua_cjson.c:1256:5, col:23>col:18
`-VarDecl 0x563107e2ef50 <col:5, col:18> col:18 used token 'json_token_t':'json_token_t'
json_token_t token;
   3: DeclStmt 0x563107e2f038 <lua_cjson.c:1257:5, col:20>col:12
`-VarDecl 0x563107e2efd8 <col:5, col:12> col:12 used json_len 'size_t':'unsigned long'
size_t json_len;
   4: DeclRefExpr 0x563107e2f050 <lua_cjson.c:1259:22> 'int (lua_State *)':'int (lua_State *)' Function 0x563107d50668 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
   5: ImplicitCastExpr 0x563107e2f0a0 <lua_cjson.c:1259:22> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e2f050 <col:22> 'int (lua_State *)':'int (lua_State *)' Function 0x563107d50668 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B9.4] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   6: DeclRefExpr 0x563107e2f078 <lua_cjson.c:1259:33> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
l
   7: ImplicitCastExpr 0x563107e2f0e8 <lua_cjson.c:1259:33> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e2f078 <col:33> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B9.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: CallExpr 0x563107e2f0b8 <lua_cjson.c:1259:22, col:34> 'int'
|-ImplicitCastExpr 0x563107e2f0a0 <col:22> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e2f050 <col:22> 'int (lua_State *)':'int (lua_State *)' Function 0x563107d50668 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x563107e2f0e8 <col:33> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x563107e2f078 <col:33> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
[B9.5]([B9.7])
   9: IntegerLiteral 0x563107e2f100 <lua_cjson.c:1259:39> 'int' 1
1
  10: BinaryOperator 0x563107e2f120 <lua_cjson.c:1259:22, col:39> 'int' '=='
|-CallExpr 0x563107e2f0b8 <col:22, col:34> 'int'
| |-ImplicitCastExpr 0x563107e2f0a0 <col:22> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e2f050 <col:22> 'int (lua_State *)':'int (lua_State *)' Function 0x563107d50668 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
| `-ImplicitCastExpr 0x563107e2f0e8 <col:33> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e2f078 <col:33> 'lua_State *' lvalue ParmVar 0x563107e2ed80 'l' 'lua_State *'
`-IntegerLiteral 0x563107e2f100 <col:39> 'int' 1
[B9.8] == [B9.9]
   T: ([B9.10]) || ...
   Preds (1): B10
   Succs (2): B7 B8

 [B0 (EXIT)]
   Preds (1): B1
