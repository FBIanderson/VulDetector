int redisvAsyncCommand(redisAsyncContext *ac, redisCallbackFn *fn, void *privdata, const char *format, va_list ap)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x55bf9a628b08 <async.c:724:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
__redisAsyncCommand
   2: ImplicitCastExpr 0x55bf9a628c58 <async.c:724:14> 'int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a628b08 <col:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t))
   3: DeclRefExpr 0x55bf9a628b30 <async.c:724:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a6282d8 'ac' 'redisAsyncContext *'
ac
   4: ImplicitCastExpr 0x55bf9a628cc0 <async.c:724:34> 'redisAsyncContext *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628b30 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a6282d8 'ac' 'redisAsyncContext *'
[B1.3] (ImplicitCastExpr, LValueToRValue, redisAsyncContext *)
   5: DeclRefExpr 0x55bf9a628b58 <async.c:724:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a628348 'fn' 'redisCallbackFn *'
fn
   6: ImplicitCastExpr 0x55bf9a628cd8 <async.c:724:37> 'redisCallbackFn *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628b58 <col:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a628348 'fn' 'redisCallbackFn *'
[B1.5] (ImplicitCastExpr, LValueToRValue, redisCallbackFn *)
   7: DeclRefExpr 0x55bf9a628b80 <async.c:724:40> 'void *' lvalue ParmVar 0x55bf9a6283c0 'privdata' 'void *'
privdata
   8: ImplicitCastExpr 0x55bf9a628cf0 <async.c:724:40> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628b80 <col:40> 'void *' lvalue ParmVar 0x55bf9a6283c0 'privdata' 'void *'
[B1.7] (ImplicitCastExpr, LValueToRValue, void *)
   9: DeclRefExpr 0x55bf9a628ba8 <async.c:724:49> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
cmd
  10: ImplicitCastExpr 0x55bf9a628d08 <async.c:724:49> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628ba8 <col:49> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
[B1.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: ImplicitCastExpr 0x55bf9a628d20 <async.c:724:49> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55bf9a628d08 <col:49> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a628ba8 <col:49> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
[B1.10] (ImplicitCastExpr, BitCast, const char *)
  12: DeclRefExpr 0x55bf9a628bd0 <async.c:724:53> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
len
  13: ImplicitCastExpr 0x55bf9a628d38 <async.c:724:53> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628bd0 <col:53> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: ImplicitCastExpr 0x55bf9a628d50 <async.c:724:53> 'size_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a628d38 <col:53> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a628bd0 <col:53> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
[B1.13] (ImplicitCastExpr, IntegralCast, size_t)
  15: CallExpr 0x55bf9a628c70 <async.c:724:14, col:56> 'int'
|-ImplicitCastExpr 0x55bf9a628c58 <col:14> 'int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a628b08 <col:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
|-ImplicitCastExpr 0x55bf9a628cc0 <col:34> 'redisAsyncContext *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a628b30 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a6282d8 'ac' 'redisAsyncContext *'
|-ImplicitCastExpr 0x55bf9a628cd8 <col:37> 'redisCallbackFn *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a628b58 <col:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a628348 'fn' 'redisCallbackFn *'
|-ImplicitCastExpr 0x55bf9a628cf0 <col:40> 'void *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a628b80 <col:40> 'void *' lvalue ParmVar 0x55bf9a6283c0 'privdata' 'void *'
|-ImplicitCastExpr 0x55bf9a628d20 <col:49> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55bf9a628d08 <col:49> 'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55bf9a628ba8 <col:49> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
`-ImplicitCastExpr 0x55bf9a628d50 <col:53> 'size_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55bf9a628d38 <col:53> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a628bd0 <col:53> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
[B1.2]([B1.4], [B1.6], [B1.8], [B1.11], [B1.14])
  16: DeclRefExpr 0x55bf9a628ae0 <async.c:724:5> 'int' lvalue Var 0x55bf9a628758 'status' 'int'
status
  17: BinaryOperator 0x55bf9a628d68 <async.c:724:5, col:56> 'int' '='
|-DeclRefExpr 0x55bf9a628ae0 <col:5> 'int' lvalue Var 0x55bf9a628758 'status' 'int'
`-CallExpr 0x55bf9a628c70 <col:14, col:56> 'int'
  |-ImplicitCastExpr 0x55bf9a628c58 <col:14> 'int (*)(redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a628b08 <col:14> 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)' Function 0x55bf9a622608 '__redisAsyncCommand' 'int (redisAsyncContext *, redisCallbackFn *, void *, const char *, size_t)'
  |-ImplicitCastExpr 0x55bf9a628cc0 <col:34> 'redisAsyncContext *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a628b30 <col:34> 'redisAsyncContext *' lvalue ParmVar 0x55bf9a6282d8 'ac' 'redisAsyncContext *'
  |-ImplicitCastExpr 0x55bf9a628cd8 <col:37> 'redisCallbackFn *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a628b58 <col:37> 'redisCallbackFn *' lvalue ParmVar 0x55bf9a628348 'fn' 'redisCallbackFn *'
  |-ImplicitCastExpr 0x55bf9a628cf0 <col:40> 'void *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a628b80 <col:40> 'void *' lvalue ParmVar 0x55bf9a6283c0 'privdata' 'void *'
  |-ImplicitCastExpr 0x55bf9a628d20 <col:49> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x55bf9a628d08 <col:49> 'char *' <LValueToRValue>
  |   `-DeclRefExpr 0x55bf9a628ba8 <col:49> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
  `-ImplicitCastExpr 0x55bf9a628d50 <col:53> 'size_t':'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x55bf9a628d38 <col:53> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a628bd0 <col:53> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
[B1.16] = [B1.15]
  18: DeclRefExpr 0x55bf9a628d90 <async.c:725:5> 'void (void *)' Function 0x55bf9a516b90 'free' 'void (void *)'
free
  19: ImplicitCastExpr 0x55bf9a628de0 <async.c:725:5> 'void (*)(void *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a628d90 <col:5> 'void (void *)' Function 0x55bf9a516b90 'free' 'void (void *)'
[B1.18] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *))
  20: DeclRefExpr 0x55bf9a628db8 <async.c:725:10> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
cmd
  21: ImplicitCastExpr 0x55bf9a628e28 <async.c:725:10> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628db8 <col:10> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
[B1.20] (ImplicitCastExpr, LValueToRValue, char *)
  22: ImplicitCastExpr 0x55bf9a628e40 <async.c:725:10> 'void *' <BitCast>
`-ImplicitCastExpr 0x55bf9a628e28 <col:10> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a628db8 <col:10> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
[B1.21] (ImplicitCastExpr, BitCast, void *)
  23: CallExpr 0x55bf9a628df8 <async.c:725:5, col:13> 'void'
|-ImplicitCastExpr 0x55bf9a628de0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a628d90 <col:5> 'void (void *)' Function 0x55bf9a516b90 'free' 'void (void *)'
`-ImplicitCastExpr 0x55bf9a628e40 <col:10> 'void *' <BitCast>
  `-ImplicitCastExpr 0x55bf9a628e28 <col:10> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a628db8 <col:10> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
[B1.19]([B1.22])
  24: DeclRefExpr 0x55bf9a628e58 <async.c:726:12> 'int' lvalue Var 0x55bf9a628758 'status' 'int'
status
  25: ImplicitCastExpr 0x55bf9a628e80 <async.c:726:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628e58 <col:12> 'int' lvalue Var 0x55bf9a628758 'status' 'int'
[B1.24] (ImplicitCastExpr, LValueToRValue, int)
  26: ReturnStmt 0x55bf9a628e98 <async.c:726:5, col:12>
`-ImplicitCastExpr 0x55bf9a628e80 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a628e58 <col:12> 'int' lvalue Var 0x55bf9a628758 'status' 'int'
return [B1.25];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55bf9a628a50 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x55bf9a628a70 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55bf9a628a50 <col:20> 'int' 1
-[B2.1]
   3: ReturnStmt 0x55bf9a628a90 <async.c:722:9, ./read.h:37:20>
`-UnaryOperator 0x55bf9a628a70 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55bf9a628a50 <col:20> 'int' 1
return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclStmt 0x55bf9a628698 <async.c:715:5, col:14>col:11
`-VarDecl 0x55bf9a628638 <col:5, col:11> col:11 used cmd 'char *'
char *cmd;
   2: DeclStmt 0x55bf9a628728 <async.c:716:5, col:12>col:9
`-VarDecl 0x55bf9a6286c8 <col:5, col:9> col:9 used len 'int'
int len;
   3: DeclStmt 0x55bf9a6287b8 <async.c:717:5, col:15>col:9
`-VarDecl 0x55bf9a628758 <col:5, col:9> col:9 used status 'int'
int status;
   4: DeclRefExpr 0x55bf9a6287f8 <async.c:718:11> 'int (char **, const char *, struct __va_list_tag *)' Function 0x55bf9a5b6968 'redisvFormatCommand' 'int (char **, const char *, struct __va_list_tag *)'
redisvFormatCommand
   5: ImplicitCastExpr 0x55bf9a628918 <async.c:718:11> 'int (*)(char **, const char *, struct __va_list_tag *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a6287f8 <col:11> 'int (char **, const char *, struct __va_list_tag *)' Function 0x55bf9a5b6968 'redisvFormatCommand' 'int (char **, const char *, struct __va_list_tag *)'
[B3.4] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char **, const char *, struct __va_list_tag *))
   6: DeclRefExpr 0x55bf9a628820 <async.c:718:32> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
cmd
   7: UnaryOperator 0x55bf9a628848 <async.c:718:31, col:32> 'char **' prefix '&'
`-DeclRefExpr 0x55bf9a628820 <col:32> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
&[B3.6]
   8: DeclRefExpr 0x55bf9a628868 <async.c:718:36> 'const char *' lvalue ParmVar 0x55bf9a628438 'format' 'const char *'
format
   9: ImplicitCastExpr 0x55bf9a628970 <async.c:718:36> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628868 <col:36> 'const char *' lvalue ParmVar 0x55bf9a628438 'format' 'const char *'
[B3.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x55bf9a628890 <async.c:718:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x55bf9a6284a8 'ap' 'struct __va_list_tag *':'struct __va_list_tag *'
ap
  11: ImplicitCastExpr 0x55bf9a628988 <async.c:718:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a628890 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x55bf9a6284a8 'ap' 'struct __va_list_tag *':'struct __va_list_tag *'
[B3.10] (ImplicitCastExpr, LValueToRValue, struct __va_list_tag *)
  12: CallExpr 0x55bf9a628930 <async.c:718:11, col:45> 'int'
|-ImplicitCastExpr 0x55bf9a628918 <col:11> 'int (*)(char **, const char *, struct __va_list_tag *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a6287f8 <col:11> 'int (char **, const char *, struct __va_list_tag *)' Function 0x55bf9a5b6968 'redisvFormatCommand' 'int (char **, const char *, struct __va_list_tag *)'
|-UnaryOperator 0x55bf9a628848 <col:31, col:32> 'char **' prefix '&'
| `-DeclRefExpr 0x55bf9a628820 <col:32> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
|-ImplicitCastExpr 0x55bf9a628970 <col:36> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a628868 <col:36> 'const char *' lvalue ParmVar 0x55bf9a628438 'format' 'const char *'
`-ImplicitCastExpr 0x55bf9a628988 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a628890 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x55bf9a6284a8 'ap' 'struct __va_list_tag *':'struct __va_list_tag *'
[B3.5]([B3.7], [B3.9], [B3.11])
  13: DeclRefExpr 0x55bf9a6287d0 <async.c:718:5> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
len
  14: BinaryOperator 0x55bf9a6289a0 <async.c:718:5, col:45> 'int' '='
|-DeclRefExpr 0x55bf9a6287d0 <col:5> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
`-CallExpr 0x55bf9a628930 <col:11, col:45> 'int'
  |-ImplicitCastExpr 0x55bf9a628918 <col:11> 'int (*)(char **, const char *, struct __va_list_tag *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a6287f8 <col:11> 'int (char **, const char *, struct __va_list_tag *)' Function 0x55bf9a5b6968 'redisvFormatCommand' 'int (char **, const char *, struct __va_list_tag *)'
  |-UnaryOperator 0x55bf9a628848 <col:31, col:32> 'char **' prefix '&'
  | `-DeclRefExpr 0x55bf9a628820 <col:32> 'char *' lvalue Var 0x55bf9a628638 'cmd' 'char *'
  |-ImplicitCastExpr 0x55bf9a628970 <col:36> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55bf9a628868 <col:36> 'const char *' lvalue ParmVar 0x55bf9a628438 'format' 'const char *'
  `-ImplicitCastExpr 0x55bf9a628988 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a628890 <col:43> 'struct __va_list_tag *':'struct __va_list_tag *' lvalue ParmVar 0x55bf9a6284a8 'ap' 'struct __va_list_tag *':'struct __va_list_tag *'
[B3.13] = [B3.12]
  15: DeclRefExpr 0x55bf9a6289c8 <async.c:721:9> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
len
  16: ImplicitCastExpr 0x55bf9a628a10 <async.c:721:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a6289c8 <col:9> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
[B3.15] (ImplicitCastExpr, LValueToRValue, int)
  17: IntegerLiteral 0x55bf9a6289f0 <async.c:721:15> 'int' 0
0
  18: BinaryOperator 0x55bf9a628a28 <async.c:721:9, col:15> 'int' '<'
|-ImplicitCastExpr 0x55bf9a628a10 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a6289c8 <col:9> 'int' lvalue Var 0x55bf9a6286c8 'len' 'int'
`-IntegerLiteral 0x55bf9a6289f0 <col:15> 'int' 0
[B3.16] < [B3.17]
   T: if [B3.18]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
