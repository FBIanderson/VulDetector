sds sdsmapchars(sds s, const char *from, const char *to, size_t setlen)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: DeclRefExpr 0x55e83d12a090 <sds.c:1080:12> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d12a0b8 <sds.c:1080:12> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a090 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
[B1.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: ReturnStmt 0x55e83d12a0d0 <sds.c:1080:5, col:12>
`-ImplicitCastExpr 0x55e83d12a0b8 <col:12> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12a090 <col:12> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
return [B1.2];
   Preds (1): B8
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d129a68 <sds.c:1072:24> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
j
   2: UnaryOperator 0x55e83d129a90 <sds.c:1072:24, col:25> 'size_t':'unsigned long' postfix '++'
`-DeclRefExpr 0x55e83d129a68 <col:24> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B2.1]++
   Preds (2): B4 B6
   Succs (1): B8

 [B3]
   1: DeclRefExpr 0x55e83d129be0 <sds.c:1073:33> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
i
   2: UnaryOperator 0x55e83d129c08 <sds.c:1073:33, col:34> 'size_t':'unsigned long' postfix '++'
`-DeclRefExpr 0x55e83d129be0 <col:33> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B3.1]++
   Preds (1): B5
   Succs (1): B6

 [B4]
   1: DeclRefExpr 0x55e83d129ea8 <sds.c:1075:24> 'const char *' lvalue ParmVar 0x55e83d129518 'to' 'const char *'
to
   2: ImplicitCastExpr 0x55e83d129ef8 <sds.c:1075:24> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d129ea8 <col:24> 'const char *' lvalue ParmVar 0x55e83d129518 'to' 'const char *'
[B4.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: DeclRefExpr 0x55e83d129ed0 <sds.c:1075:27> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
i
   4: ImplicitCastExpr 0x55e83d129f10 <sds.c:1075:27> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d129ed0 <col:27> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B4.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: ArraySubscriptExpr 0x55e83d129f28 <sds.c:1075:24, col:28> 'const char' lvalue
|-ImplicitCastExpr 0x55e83d129ef8 <col:24> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d129ea8 <col:24> 'const char *' lvalue ParmVar 0x55e83d129518 'to' 'const char *'
`-ImplicitCastExpr 0x55e83d129f10 <col:27> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129ed0 <col:27> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B4.2][[B4.4]]
   6: ImplicitCastExpr 0x55e83d129f50 <sds.c:1075:24, col:28> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d129f28 <col:24, col:28> 'const char' lvalue
  |-ImplicitCastExpr 0x55e83d129ef8 <col:24> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d129ea8 <col:24> 'const char *' lvalue ParmVar 0x55e83d129518 'to' 'const char *'
  `-ImplicitCastExpr 0x55e83d129f10 <col:27> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d129ed0 <col:27> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B4.5] (ImplicitCastExpr, LValueToRValue, char)
   7: DeclRefExpr 0x55e83d129e00 <sds.c:1075:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
s
   8: ImplicitCastExpr 0x55e83d129e50 <sds.c:1075:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d129e00 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
[B4.7] (ImplicitCastExpr, LValueToRValue, sds)
   9: DeclRefExpr 0x55e83d129e28 <sds.c:1075:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
j
  10: ImplicitCastExpr 0x55e83d129e68 <sds.c:1075:19> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d129e28 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B4.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: ArraySubscriptExpr 0x55e83d129e80 <sds.c:1075:17, col:20> 'char' lvalue
|-ImplicitCastExpr 0x55e83d129e50 <col:17> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d129e00 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d129e68 <col:19> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129e28 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B4.8][[B4.10]]
  12: BinaryOperator 0x55e83d129f68 <sds.c:1075:17, col:28> 'char' '='
|-ArraySubscriptExpr 0x55e83d129e80 <col:17, col:20> 'char' lvalue
| |-ImplicitCastExpr 0x55e83d129e50 <col:17> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d129e00 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
| `-ImplicitCastExpr 0x55e83d129e68 <col:19> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d129e28 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d129f50 <col:24, col:28> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d129f28 <col:24, col:28> 'const char' lvalue
    |-ImplicitCastExpr 0x55e83d129ef8 <col:24> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d129ea8 <col:24> 'const char *' lvalue ParmVar 0x55e83d129518 'to' 'const char *'
    `-ImplicitCastExpr 0x55e83d129f10 <col:27> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55e83d129ed0 <col:27> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B4.11] = [B4.6]
   T: break;
   Preds (1): B5
   Succs (1): B2

 [B5]
   1: DeclRefExpr 0x55e83d129c28 <sds.c:1074:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d129c78 <sds.c:1074:17> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d129c28 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
[B5.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: DeclRefExpr 0x55e83d129c50 <sds.c:1074:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
j
   4: ImplicitCastExpr 0x55e83d129c90 <sds.c:1074:19> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d129c50 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B5.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: ArraySubscriptExpr 0x55e83d129ca8 <sds.c:1074:17, col:20> 'char' lvalue
|-ImplicitCastExpr 0x55e83d129c78 <col:17> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d129c28 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d129c90 <col:19> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129c50 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B5.2][[B5.4]]
   6: ImplicitCastExpr 0x55e83d129d78 <sds.c:1074:17, col:20> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d129ca8 <col:17, col:20> 'char' lvalue
  |-ImplicitCastExpr 0x55e83d129c78 <col:17> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d129c28 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d129c90 <col:19> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d129c50 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B5.5] (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d129d90 <sds.c:1074:17, col:20> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d129d78 <col:17, col:20> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d129ca8 <col:17, col:20> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d129c78 <col:17> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d129c28 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
    `-ImplicitCastExpr 0x55e83d129c90 <col:19> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55e83d129c50 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B5.6] (ImplicitCastExpr, IntegralCast, int)
   8: DeclRefExpr 0x55e83d129cd0 <sds.c:1074:25> 'const char *' lvalue ParmVar 0x55e83d1294a0 'from' 'const char *'
from
   9: ImplicitCastExpr 0x55e83d129d20 <sds.c:1074:25> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d129cd0 <col:25> 'const char *' lvalue ParmVar 0x55e83d1294a0 'from' 'const char *'
[B5.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: DeclRefExpr 0x55e83d129cf8 <sds.c:1074:30> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
i
  11: ImplicitCastExpr 0x55e83d129d38 <sds.c:1074:30> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d129cf8 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B5.10] (ImplicitCastExpr, LValueToRValue, size_t)
  12: ArraySubscriptExpr 0x55e83d129d50 <sds.c:1074:25, col:31> 'const char' lvalue
|-ImplicitCastExpr 0x55e83d129d20 <col:25> 'const char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d129cd0 <col:25> 'const char *' lvalue ParmVar 0x55e83d1294a0 'from' 'const char *'
`-ImplicitCastExpr 0x55e83d129d38 <col:30> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129cf8 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B5.9][[B5.11]]
  13: ImplicitCastExpr 0x55e83d129da8 <sds.c:1074:25, col:31> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d129d50 <col:25, col:31> 'const char' lvalue
  |-ImplicitCastExpr 0x55e83d129d20 <col:25> 'const char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d129cd0 <col:25> 'const char *' lvalue ParmVar 0x55e83d1294a0 'from' 'const char *'
  `-ImplicitCastExpr 0x55e83d129d38 <col:30> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d129cf8 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B5.12] (ImplicitCastExpr, LValueToRValue, char)
  14: ImplicitCastExpr 0x55e83d129dc0 <sds.c:1074:25, col:31> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d129da8 <col:25, col:31> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d129d50 <col:25, col:31> 'const char' lvalue
    |-ImplicitCastExpr 0x55e83d129d20 <col:25> 'const char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d129cd0 <col:25> 'const char *' lvalue ParmVar 0x55e83d1294a0 'from' 'const char *'
    `-ImplicitCastExpr 0x55e83d129d38 <col:30> 'size_t':'unsigned long' <LValueToRValue>
      `-DeclRefExpr 0x55e83d129cf8 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B5.13] (ImplicitCastExpr, IntegralCast, int)
  15: BinaryOperator 0x55e83d129dd8 <sds.c:1074:17, col:31> 'int' '=='
|-ImplicitCastExpr 0x55e83d129d90 <col:17, col:20> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55e83d129d78 <col:17, col:20> 'char' <LValueToRValue>
|   `-ArraySubscriptExpr 0x55e83d129ca8 <col:17, col:20> 'char' lvalue
|     |-ImplicitCastExpr 0x55e83d129c78 <col:17> 'sds':'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55e83d129c28 <col:17> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
|     `-ImplicitCastExpr 0x55e83d129c90 <col:19> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d129c50 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d129dc0 <col:25, col:31> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d129da8 <col:25, col:31> 'char' <LValueToRValue>
    `-ArraySubscriptExpr 0x55e83d129d50 <col:25, col:31> 'const char' lvalue
      |-ImplicitCastExpr 0x55e83d129d20 <col:25> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d129cd0 <col:25> 'const char *' lvalue ParmVar 0x55e83d1294a0 'from' 'const char *'
      `-ImplicitCastExpr 0x55e83d129d38 <col:30> 'size_t':'unsigned long' <LValueToRValue>
        `-DeclRefExpr 0x55e83d129cf8 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B5.7] == [B5.14]
   T: if [B5.15]
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x55e83d129b38 <sds.c:1073:21> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
i
   2: ImplicitCastExpr 0x55e83d129b88 <sds.c:1073:21> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d129b38 <col:21> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
[B6.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x55e83d129b60 <sds.c:1073:25> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d129588 'setlen' 'size_t':'unsigned long'
setlen
   4: ImplicitCastExpr 0x55e83d129ba0 <sds.c:1073:25> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d129b60 <col:25> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d129588 'setlen' 'size_t':'unsigned long'
[B6.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: BinaryOperator 0x55e83d129bb8 <sds.c:1073:21, col:25> 'int' '<'
|-ImplicitCastExpr 0x55e83d129b88 <col:21> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d129b38 <col:21> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d129ba0 <col:25> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129b60 <col:25> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d129588 'setlen' 'size_t':'unsigned long'
[B6.2] < [B6.4]
   T: for (...; [B6.5]; ...)
   Preds (2): B3 B7
   Succs (2): B5 B2

 [B7]
   1: IntegerLiteral 0x55e83d129ad8 <sds.c:1073:18> 'int' 0
0
   2: ImplicitCastExpr 0x55e83d129af8 <sds.c:1073:18> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d129ad8 <col:18> 'int' 0
[B7.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: DeclRefExpr 0x55e83d129ab0 <sds.c:1073:14> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
i
   4: BinaryOperator 0x55e83d129b10 <sds.c:1073:14, col:18> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d129ab0 <col:14> 'size_t':'unsigned long' lvalue Var 0x55e83d129768 'i' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d129af8 <col:18> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d129ad8 <col:18> 'int' 0
[B7.3] = [B7.2]
   Preds (1): B8
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x55e83d1299c0 <sds.c:1072:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
j
   2: ImplicitCastExpr 0x55e83d129a10 <sds.c:1072:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d1299c0 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
[B8.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x55e83d1299e8 <sds.c:1072:21> 'size_t':'unsigned long' lvalue Var 0x55e83d1297d8 'l' 'size_t':'unsigned long'
l
   4: ImplicitCastExpr 0x55e83d129a28 <sds.c:1072:21> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d1299e8 <col:21> 'size_t':'unsigned long' lvalue Var 0x55e83d1297d8 'l' 'size_t':'unsigned long'
[B8.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: BinaryOperator 0x55e83d129a40 <sds.c:1072:17, col:21> 'int' '<'
|-ImplicitCastExpr 0x55e83d129a10 <col:17> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1299c0 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d129a28 <col:21> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1299e8 <col:21> 'size_t':'unsigned long' lvalue Var 0x55e83d1297d8 'l' 'size_t':'unsigned long'
[B8.2] < [B8.4]
   T: for (...; [B8.5]; ...)
   Preds (2): B2 B9
   Succs (2): B7 B1

 [B9]
   1: DeclStmt 0x55e83d1326a0 <sds.c:1070:12>col:12
`-VarDecl 0x55e83d1296f8 <col:5, col:12> col:12 used j 'size_t':'unsigned long'
size_t j;
   2: DeclStmt 0x55e83d132688 <sds.c:1070:15>col:15
`-VarDecl 0x55e83d129768 <col:5, col:15> col:15 used i 'size_t':'unsigned long'
size_t i;
   3: DeclRefExpr 0x55e83d129838 <sds.c:1070:22> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
   4: ImplicitCastExpr 0x55e83d129888 <sds.c:1070:22> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d129838 <col:22> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B9.3] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   5: DeclRefExpr 0x55e83d129860 <sds.c:1070:29> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
s
   6: ImplicitCastExpr 0x55e83d1298d0 <sds.c:1070:29> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d129860 <col:29> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
[B9.5] (ImplicitCastExpr, LValueToRValue, sds)
   7: CallExpr 0x55e83d1298a0 <sds.c:1070:22, col:30> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d129888 <col:22> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d129838 <col:22> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d1298d0 <col:29> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d129860 <col:29> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
[B9.4]([B9.6])
   8: DeclStmt 0x55e83d1324f0 <sds.c:1070:18, col:30>col:18
`-VarDecl 0x55e83d1297d8 <col:5, col:30> col:18 used l 'size_t':'unsigned long' cinit
  `-CallExpr 0x55e83d1298a0 <col:22, col:30> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55e83d129888 <col:22> 'size_t (*)(const sds)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d129838 <col:22> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
    `-ImplicitCastExpr 0x55e83d1298d0 <col:29> 'sds':'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d129860 <col:29> 'sds':'char *' lvalue ParmVar 0x55e83d129428 's' 'sds':'char *'
size_t l = sdslen(s);
   9: IntegerLiteral 0x55e83d129948 <sds.c:1072:14> 'int' 0
0
  10: ImplicitCastExpr 0x55e83d129980 <sds.c:1072:14> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d129948 <col:14> 'int' 0
[B9.9] (ImplicitCastExpr, IntegralCast, size_t)
  11: DeclRefExpr 0x55e83d129920 <sds.c:1072:10> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
j
  12: BinaryOperator 0x55e83d129998 <sds.c:1072:10, col:14> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d129920 <col:10> 'size_t':'unsigned long' lvalue Var 0x55e83d1296f8 'j' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d129980 <col:14> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d129948 <col:14> 'int' 0
[B9.11] = [B9.10]
   Preds (1): B10
   Succs (1): B8

 [B0 (EXIT)]
   Preds (1): B1
