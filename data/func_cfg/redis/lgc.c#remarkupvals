static void remarkupvals(global_State *g)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x55ef1b207178 <lgc.c:517:56> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   2: ImplicitCastExpr 0x55ef1b2071a0 <lgc.c:517:56> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b207178 <col:56> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B1.1] (ImplicitCastExpr, LValueToRValue, UpVal *)
   3: MemberExpr 0x55ef1b2071b8 <lgc.c:517:56, col:60> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue ->u 0x55ef1b18d6b0
`-ImplicitCastExpr 0x55ef1b2071a0 <col:56> 'UpVal *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b207178 <col:56> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B1.2]->u
   4: MemberExpr 0x55ef1b2071f0 <lgc.c:517:56, col:62> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
`-MemberExpr 0x55ef1b2071b8 <col:56, col:60> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue ->u 0x55ef1b18d6b0
  `-ImplicitCastExpr 0x55ef1b2071a0 <col:56> 'UpVal *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b207178 <col:56> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B1.3].l
   5: MemberExpr 0x55ef1b207228 <lgc.c:517:56, col:64> 'struct UpVal *' lvalue .next 0x55ef1b18d520
`-MemberExpr 0x55ef1b2071f0 <col:56, col:62> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
  `-MemberExpr 0x55ef1b2071b8 <col:56, col:60> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue ->u 0x55ef1b18d6b0
    `-ImplicitCastExpr 0x55ef1b2071a0 <col:56> 'UpVal *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b207178 <col:56> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B1.4].next
   6: ImplicitCastExpr 0x55ef1b207260 <lgc.c:517:56, col:64> 'struct UpVal *' <LValueToRValue>
`-MemberExpr 0x55ef1b207228 <col:56, col:64> 'struct UpVal *' lvalue .next 0x55ef1b18d520
  `-MemberExpr 0x55ef1b2071f0 <col:56, col:62> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
    `-MemberExpr 0x55ef1b2071b8 <col:56, col:60> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue ->u 0x55ef1b18d6b0
      `-ImplicitCastExpr 0x55ef1b2071a0 <col:56> 'UpVal *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b207178 <col:56> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B1.5] (ImplicitCastExpr, LValueToRValue, struct UpVal *)
   7: DeclRefExpr 0x55ef1b207150 <lgc.c:517:51> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   8: BinaryOperator 0x55ef1b207278 <lgc.c:517:51, col:64> 'UpVal *' '='
|-DeclRefExpr 0x55ef1b207150 <col:51> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
`-ImplicitCastExpr 0x55ef1b207260 <col:56, col:64> 'struct UpVal *' <LValueToRValue>
  `-MemberExpr 0x55ef1b207228 <col:56, col:64> 'struct UpVal *' lvalue .next 0x55ef1b18d520
    `-MemberExpr 0x55ef1b2071f0 <col:56, col:62> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
      `-MemberExpr 0x55ef1b2071b8 <col:56, col:60> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue ->u 0x55ef1b18d6b0
        `-ImplicitCastExpr 0x55ef1b2071a0 <col:56> 'UpVal *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b207178 <col:56> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B1.7] = [B1.6]
   Preds (5): B2 B3 B4 B5 B6
   Succs (1): B7

 [B2]
   1: DeclRefExpr 0x55ef1b208160 <lgc.c:53:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
   2: ImplicitCastExpr 0x55ef1b2082f0 <lgc.c:53:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b208160 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
   3: DeclRefExpr 0x55ef1b208188 <lgc.c:520:17> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b208340 <lgc.c:520:17> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b208188 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclRefExpr 0x55ef1b2081b0 <lgc.c:520:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   6: ImplicitCastExpr 0x55ef1b2081d8 <lgc.c:520:20> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b2081b0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B2.5] (ImplicitCastExpr, LValueToRValue, UpVal *)
   7: MemberExpr 0x55ef1b2081f0 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
`-ImplicitCastExpr 0x55ef1b2081d8 <col:20> 'UpVal *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b2081b0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B2.6]->v
   8: ImplicitCastExpr 0x55ef1b208248 <./lobject.h:91:48, col:50> 'TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b208228 <col:48, col:50> 'TValue *' lvalue
  `-MemberExpr 0x55ef1b2081f0 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
    `-ImplicitCastExpr 0x55ef1b2081d8 <col:20> 'UpVal *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b2081b0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B2.7]) (ImplicitCastExpr, LValueToRValue, TValue *)
   9: MemberExpr 0x55ef1b208260 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b208248 <col:48, col:50> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b208228 <col:48, col:50> 'TValue *' lvalue
    `-MemberExpr 0x55ef1b2081f0 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
      `-ImplicitCastExpr 0x55ef1b2081d8 <col:20> 'UpVal *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b2081b0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B2.8]->value
  10: MemberExpr 0x55ef1b208298 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b208260 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b208248 <col:48, col:50> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b208228 <col:48, col:50> 'TValue *' lvalue
      `-MemberExpr 0x55ef1b2081f0 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
        `-ImplicitCastExpr 0x55ef1b2081d8 <col:20> 'UpVal *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b2081b0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B2.9].gc
  11: ImplicitCastExpr 0x55ef1b208358 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b2082d0 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x55ef1b208298 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b208260 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
      `-ImplicitCastExpr 0x55ef1b208248 <col:48, col:50> 'TValue *' <LValueToRValue>
        `-ParenExpr 0x55ef1b208228 <col:48, col:50> 'TValue *' lvalue
          `-MemberExpr 0x55ef1b2081f0 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
            `-ImplicitCastExpr 0x55ef1b2081d8 <col:20> 'UpVal *' <LValueToRValue>
              `-DeclRefExpr 0x55ef1b2081b0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B2.10]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  12: CallExpr 0x55ef1b208308 <lgc.c:53:48, col:77> 'void'
|-ImplicitCastExpr 0x55ef1b2082f0 <col:48> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b208160 <col:48> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b208340 <line:520:17> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b208188 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
`-ImplicitCastExpr 0x55ef1b208358 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b2082d0 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b208298 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b208260 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b208248 <col:48, col:50> 'TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b208228 <col:48, col:50> 'TValue *' lvalue
            `-MemberExpr 0x55ef1b2081f0 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
              `-ImplicitCastExpr 0x55ef1b2081d8 <col:20> 'UpVal *' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b2081b0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B2.2]([B2.4], [B2.11])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55ef1b207ce0 <lgc.c:520:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   2: ImplicitCastExpr 0x55ef1b207d08 <lgc.c:520:20> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B3.1] (ImplicitCastExpr, LValueToRValue, UpVal *)
   3: MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
`-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B3.2]->v
   4: ImplicitCastExpr 0x55ef1b207d78 <./lobject.h:91:48, col:50> 'TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
  `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
    `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B3.3]) (ImplicitCastExpr, LValueToRValue, TValue *)
   5: MemberExpr 0x55ef1b207d90 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
    `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
      `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B3.4]->value
   6: MemberExpr 0x55ef1b207dc8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b207d90 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
      `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
        `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B3.5].gc
   7: ImplicitCastExpr 0x55ef1b207e40 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b207e20 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x55ef1b207e00 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b207dc8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b207d90 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
            `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
              `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
(([B3.6])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x55ef1b207e58 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b207e40 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b207e20 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x55ef1b207e00 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x55ef1b207dc8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
        `-MemberExpr 0x55ef1b207d90 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
          `-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
            `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
              `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
                `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
                  `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B3.7]->gch
   9: MemberExpr 0x55ef1b207e90 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b207e58 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b207e40 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b207e20 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x55ef1b207e00 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x55ef1b207dc8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b207d90 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
            `-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
              `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
                `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
                  `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
                    `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B3.8].marked
  10: ImplicitCastExpr 0x55ef1b2080c0 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b207ec8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b207e90 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b207e58 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b207e40 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b207e20 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x55ef1b207e00 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x55ef1b207dc8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b207d90 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                `-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
                    `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
                      `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
                        `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B3.9]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  11: ImplicitCastExpr 0x55ef1b2080d8 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b2080c0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b207ec8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b207e90 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b207e58 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b207e40 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b207e20 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x55ef1b207e00 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x55ef1b207dc8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
                `-MemberExpr 0x55ef1b207d90 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                  `-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
                    `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
                      `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
                        `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
                          `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B3.10] (ImplicitCastExpr, IntegralCast, int)
  12: IntegerLiteral 0x55ef1b207ee8 <./lgc.h:30:21> 'int' 1
1
  13: IntegerLiteral 0x55ef1b207f08 <./lgc.h:54:19> 'int' 0
0
  14: BinaryOperator 0x55ef1b207f48 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b207ee8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b207f28 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b207f08 <line:54:19> 'int' 0
[B3.12] << ([B3.13])
  15: IntegerLiteral 0x55ef1b207f90 <./lgc.h:30:21> 'int' 1
1
  16: IntegerLiteral 0x55ef1b207fb0 <./lgc.h:55:19> 'int' 1
1
  17: BinaryOperator 0x55ef1b207ff0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b207f90 <col:21> 'int' 1
`-ParenExpr 0x55ef1b207fd0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b207fb0 <line:55:19> 'int' 1
[B3.15] << ([B3.16])
  18: BinaryOperator 0x55ef1b208038 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b207f70 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b207f48 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b207ee8 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b207f28 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b207f08 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b208018 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b207ff0 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b207f90 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b207fd0 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b207fb0 <line:55:19> 'int' 1
([B3.14]) | ([B3.17])
  19: BinaryOperator 0x55ef1b2080f0 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b2080d8 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b2080c0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b207ec8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b207e90 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b207e58 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b207e40 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b207e20 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x55ef1b207e00 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x55ef1b207dc8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b207d90 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
|                   `-ImplicitCastExpr 0x55ef1b207d78 <col:48, col:50> 'TValue *' <LValueToRValue>
|                     `-ParenExpr 0x55ef1b207d58 <col:48, col:50> 'TValue *' lvalue
|                       `-MemberExpr 0x55ef1b207d20 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
|                         `-ImplicitCastExpr 0x55ef1b207d08 <col:20> 'UpVal *' <LValueToRValue>
|                           `-DeclRefExpr 0x55ef1b207ce0 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
`-ParenExpr 0x55ef1b2080a0 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b208080 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b208060 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b208038 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b207f70 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b207f48 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b207ee8 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b207f28 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b207f08 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b208018 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b207ff0 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b207f90 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b207fd0 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b207fb0 <line:55:19> 'int' 1
[B3.11] & ((([B3.18])))
   T: if ([B4.10]) && ([B3.19])
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x55ef1b207ae0 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b207b10 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b207ae0 <col:31> 'int' 0
(void)[B4.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55ef1b207b58 <lgc.c:520:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   4: ImplicitCastExpr 0x55ef1b207b80 <lgc.c:520:20> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b207b58 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B4.3] (ImplicitCastExpr, LValueToRValue, UpVal *)
   5: MemberExpr 0x55ef1b207b98 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
`-ImplicitCastExpr 0x55ef1b207b80 <col:20> 'UpVal *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b207b58 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B4.4]->v
   6: ImplicitCastExpr 0x55ef1b207bf0 <./lobject.h:90:19, col:21> 'TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b207bd0 <col:19, col:21> 'TValue *' lvalue
  `-MemberExpr 0x55ef1b207b98 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
    `-ImplicitCastExpr 0x55ef1b207b80 <col:20> 'UpVal *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b207b58 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B4.5]) (ImplicitCastExpr, LValueToRValue, TValue *)
   7: MemberExpr 0x55ef1b207c08 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
`-ImplicitCastExpr 0x55ef1b207bf0 <col:19, col:21> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b207bd0 <col:19, col:21> 'TValue *' lvalue
    `-MemberExpr 0x55ef1b207b98 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
      `-ImplicitCastExpr 0x55ef1b207b80 <col:20> 'UpVal *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b207b58 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B4.6]->tt
   8: ImplicitCastExpr 0x55ef1b207c80 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b207c40 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x55ef1b207c08 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
    `-ImplicitCastExpr 0x55ef1b207bf0 <col:19, col:21> 'TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b207bd0 <col:19, col:21> 'TValue *' lvalue
        `-MemberExpr 0x55ef1b207b98 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
          `-ImplicitCastExpr 0x55ef1b207b80 <col:20> 'UpVal *' <LValueToRValue>
            `-DeclRefExpr 0x55ef1b207b58 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B4.7]) (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55ef1b207c60 <./lua.h:78:22> 'int' 4
4
  10: BinaryOperator 0x55ef1b207c98 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x55ef1b207c80 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b207c40 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x55ef1b207c08 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
|     `-ImplicitCastExpr 0x55ef1b207bf0 <col:19, col:21> 'TValue *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b207bd0 <col:19, col:21> 'TValue *' lvalue
|         `-MemberExpr 0x55ef1b207b98 <lgc.c:520:20, col:24> 'TValue *' lvalue ->v 0x55ef1b18d208
|           `-ImplicitCastExpr 0x55ef1b207b80 <col:20> 'UpVal *' <LValueToRValue>
|             `-DeclRefExpr 0x55ef1b207b58 <col:20> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
`-IntegerLiteral 0x55ef1b207c60 <./lua.h:78:22> 'int' 4
[B4.8] >= [B4.9]
   T: ([B4.10]) && ...
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   2: ImplicitCastExpr 0x55ef1b2076f8 <./llimits.h:75:26, col:30> 'UpVal *' <LValueToRValue>
`-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
  `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
    `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
(([B5.1])) (ImplicitCastExpr, LValueToRValue, UpVal *)
   3: CStyleCastExpr 0x55ef1b207710 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b2076f8 <col:26, col:30> 'UpVal *' <LValueToRValue>
  `-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
    `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
      `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
(GCObject *)[B5.2] (CStyleCastExpr, BitCast, GCObject *)
   4: MemberExpr 0x55ef1b207798 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ParenExpr 0x55ef1b207778 <col:35, col:37> 'GCObject *'
  `-ParenExpr 0x55ef1b207758 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x55ef1b207738 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x55ef1b207710 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x55ef1b2076f8 <col:26, col:30> 'UpVal *' <LValueToRValue>
          `-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
            `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
              `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
((([B5.3])))->gch
   5: MemberExpr 0x55ef1b2077d0 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b207798 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ParenExpr 0x55ef1b207778 <col:35, col:37> 'GCObject *'
    `-ParenExpr 0x55ef1b207758 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x55ef1b207738 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x55ef1b207710 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x55ef1b2076f8 <col:26, col:30> 'UpVal *' <LValueToRValue>
            `-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
              `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B5.4].marked
   6: ImplicitCastExpr 0x55ef1b207a00 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b207808 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b2077d0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b207798 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ParenExpr 0x55ef1b207778 <col:35, col:37> 'GCObject *'
        `-ParenExpr 0x55ef1b207758 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x55ef1b207738 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x55ef1b207710 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x55ef1b2076f8 <col:26, col:30> 'UpVal *' <LValueToRValue>
                `-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
                  `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                    `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B5.5]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x55ef1b207a18 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b207a00 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b207808 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b2077d0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b207798 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ParenExpr 0x55ef1b207778 <col:35, col:37> 'GCObject *'
          `-ParenExpr 0x55ef1b207758 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x55ef1b207738 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x55ef1b207710 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x55ef1b2076f8 <col:26, col:30> 'UpVal *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
                    `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                      `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B5.6] (ImplicitCastExpr, IntegralCast, int)
   8: IntegerLiteral 0x55ef1b207828 <./lgc.h:30:21> 'int' 1
1
   9: IntegerLiteral 0x55ef1b207848 <./lgc.h:54:19> 'int' 0
0
  10: BinaryOperator 0x55ef1b207888 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b207828 <col:21> 'int' 1
`-ParenExpr 0x55ef1b207868 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b207848 <line:54:19> 'int' 0
[B5.8] << ([B5.9])
  11: IntegerLiteral 0x55ef1b2078d0 <./lgc.h:30:21> 'int' 1
1
  12: IntegerLiteral 0x55ef1b2078f0 <./lgc.h:55:19> 'int' 1
1
  13: BinaryOperator 0x55ef1b207930 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b2078d0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b207910 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b2078f0 <line:55:19> 'int' 1
[B5.11] << ([B5.12])
  14: BinaryOperator 0x55ef1b207978 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b2078b0 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b207888 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b207828 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b207868 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b207848 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b207958 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b207930 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b2078d0 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b207910 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b2078f0 <line:55:19> 'int' 1
([B5.10]) | ([B5.13])
  15: BinaryOperator 0x55ef1b207a30 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b207a18 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b207a00 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b207808 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b2077d0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b207798 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ParenExpr 0x55ef1b207778 <col:35, col:37> 'GCObject *'
|           `-ParenExpr 0x55ef1b207758 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x55ef1b207738 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x55ef1b207710 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x55ef1b2076f8 <col:26, col:30> 'UpVal *' <LValueToRValue>
|                   `-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
|                     `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
|                       `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
`-ParenExpr 0x55ef1b2079e0 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b2079c0 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b2079a0 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b207978 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b2078b0 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b207888 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b207828 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b207868 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b207848 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b207958 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b207930 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b2078d0 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b207910 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b2078f0 <line:55:19> 'int' 1
[B5.7] & ((([B5.14])))
  16: UnaryOperator 0x55ef1b207a78 <./lgc.h:67:35, line:29:33> 'int' prefix '!'
`-ParenExpr 0x55ef1b207a58 <col:23, col:33> 'int'
  `-BinaryOperator 0x55ef1b207a30 <col:24, col:32> 'int' '&'
    |-ImplicitCastExpr 0x55ef1b207a18 <col:24, col:26> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55ef1b207a00 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-ParenExpr 0x55ef1b207808 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    |     `-MemberExpr 0x55ef1b2077d0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    |       `-MemberExpr 0x55ef1b207798 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
    |         `-ParenExpr 0x55ef1b207778 <col:35, col:37> 'GCObject *'
    |           `-ParenExpr 0x55ef1b207758 <./lstate.h:162:20, col:42> 'GCObject *'
    |             `-ParenExpr 0x55ef1b207738 <./llimits.h:75:22, col:31> 'GCObject *'
    |               `-CStyleCastExpr 0x55ef1b207710 <col:23, col:30> 'GCObject *' <BitCast>
    |                 `-ImplicitCastExpr 0x55ef1b2076f8 <col:26, col:30> 'UpVal *' <LValueToRValue>
    |                   `-ParenExpr 0x55ef1b2076d8 <col:26, col:30> 'UpVal *' lvalue
    |                     `-ParenExpr 0x55ef1b207678 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
    |                       `-DeclRefExpr 0x55ef1b207650 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
    `-ParenExpr 0x55ef1b2079e0 <./lgc.h:29:30, col:32> 'int'
      `-ParenExpr 0x55ef1b2079c0 <line:37:40, col:57> 'int'
        `-ParenExpr 0x55ef1b2079a0 <line:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b207978 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b2078b0 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b207888 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b207828 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b207868 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b207848 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b207958 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b207930 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b2078d0 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b207910 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b2078f0 <line:55:19> 'int' 1
!([B5.15])
   T: if ([B6.14] && [B5.16])
   Preds (1): B6
   Succs (2): B4 B1

 [B6]
   1: IntegerLiteral 0x55ef1b2072a0 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55ef1b2072d0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b2072a0 <col:31> 'int' 0
(void)[B6.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   4: ImplicitCastExpr 0x55ef1b2073c0 <./llimits.h:75:26, col:30> 'UpVal *' <LValueToRValue>
`-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
  `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
    `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
(([B6.3])) (ImplicitCastExpr, LValueToRValue, UpVal *)
   5: CStyleCastExpr 0x55ef1b2073d8 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b2073c0 <col:26, col:30> 'UpVal *' <LValueToRValue>
  `-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
    `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
      `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
(GCObject *)[B6.4] (CStyleCastExpr, BitCast, GCObject *)
   6: MemberExpr 0x55ef1b207460 <./lgc.h:66:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ParenExpr 0x55ef1b207440 <col:33, col:35> 'GCObject *'
  `-ParenExpr 0x55ef1b207420 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x55ef1b207400 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x55ef1b2073d8 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x55ef1b2073c0 <col:26, col:30> 'UpVal *' <LValueToRValue>
          `-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
            `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
              `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
((([B6.5])))->gch
   7: MemberExpr 0x55ef1b207498 <./lgc.h:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b207460 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ParenExpr 0x55ef1b207440 <col:33, col:35> 'GCObject *'
    `-ParenExpr 0x55ef1b207420 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x55ef1b207400 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x55ef1b2073d8 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x55ef1b2073c0 <col:26, col:30> 'UpVal *' <LValueToRValue>
            `-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
              `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B6.6].marked
   8: ImplicitCastExpr 0x55ef1b2075b8 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b2074d0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b207498 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b207460 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ParenExpr 0x55ef1b207440 <col:33, col:35> 'GCObject *'
        `-ParenExpr 0x55ef1b207420 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x55ef1b207400 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x55ef1b2073d8 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x55ef1b2073c0 <col:26, col:30> 'UpVal *' <LValueToRValue>
                `-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
                  `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                    `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
([B6.7]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   9: ImplicitCastExpr 0x55ef1b2075d0 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b2075b8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b2074d0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b207498 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b207460 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ParenExpr 0x55ef1b207440 <col:33, col:35> 'GCObject *'
          `-ParenExpr 0x55ef1b207420 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x55ef1b207400 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x55ef1b2073d8 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x55ef1b2073c0 <col:26, col:30> 'UpVal *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
                    `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                      `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B6.8] (ImplicitCastExpr, IntegralCast, int)
  10: IntegerLiteral 0x55ef1b2074f0 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x55ef1b207510 <./lgc.h:56:18> 'int' 2
2
  12: BinaryOperator 0x55ef1b207550 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b2074f0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b207530 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b207510 <line:56:18> 'int' 2
[B6.10] << ([B6.11])
  13: BinaryOperator 0x55ef1b2075e8 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b2075d0 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b2075b8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b2074d0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b207498 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b207460 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ParenExpr 0x55ef1b207440 <col:33, col:35> 'GCObject *'
|           `-ParenExpr 0x55ef1b207420 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x55ef1b207400 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x55ef1b2073d8 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x55ef1b2073c0 <col:26, col:30> 'UpVal *' <LValueToRValue>
|                   `-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
|                     `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
|                       `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
`-ParenExpr 0x55ef1b207598 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b207578 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x55ef1b207550 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x55ef1b2074f0 <col:21> 'int' 1
      `-ParenExpr 0x55ef1b207530 <col:24, col:26> 'int'
        `-IntegerLiteral 0x55ef1b207510 <line:56:18> 'int' 2
[B6.9] & (([B6.12]))
  14: UnaryOperator 0x55ef1b207630 <./lgc.h:67:20, line:29:33> 'int' prefix '!'
`-ParenExpr 0x55ef1b207610 <col:23, col:33> 'int'
  `-BinaryOperator 0x55ef1b2075e8 <col:24, col:32> 'int' '&'
    |-ImplicitCastExpr 0x55ef1b2075d0 <col:24, col:26> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55ef1b2075b8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-ParenExpr 0x55ef1b2074d0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    |     `-MemberExpr 0x55ef1b207498 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    |       `-MemberExpr 0x55ef1b207460 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
    |         `-ParenExpr 0x55ef1b207440 <col:33, col:35> 'GCObject *'
    |           `-ParenExpr 0x55ef1b207420 <./lstate.h:162:20, col:42> 'GCObject *'
    |             `-ParenExpr 0x55ef1b207400 <./llimits.h:75:22, col:31> 'GCObject *'
    |               `-CStyleCastExpr 0x55ef1b2073d8 <col:23, col:30> 'GCObject *' <BitCast>
    |                 `-ImplicitCastExpr 0x55ef1b2073c0 <col:26, col:30> 'UpVal *' <LValueToRValue>
    |                   `-ParenExpr 0x55ef1b2073a0 <col:26, col:30> 'UpVal *' lvalue
    |                     `-ParenExpr 0x55ef1b207340 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
    |                       `-DeclRefExpr 0x55ef1b207318 <lgc.c:519:24> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
    `-ParenExpr 0x55ef1b207598 <./lgc.h:29:30, col:32> 'int'
      `-ParenExpr 0x55ef1b207578 <line:30:20, col:27> 'int'
        `-BinaryOperator 0x55ef1b207550 <col:21, col:26> 'int' '<<'
          |-IntegerLiteral 0x55ef1b2074f0 <col:21> 'int' 1
          `-ParenExpr 0x55ef1b207530 <col:24, col:26> 'int'
            `-IntegerLiteral 0x55ef1b207510 <line:56:18> 'int' 2
!([B6.13])
   T: [B6.14] && ...
   Preds (1): B7
   Succs (2): B5 B1

 [B7]
   1: DeclRefExpr 0x55ef1b207050 <lgc.c:517:33> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
   2: ImplicitCastExpr 0x55ef1b207110 <lgc.c:517:33> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b207050 <col:33> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
[B7.1] (ImplicitCastExpr, LValueToRValue, UpVal *)
   3: DeclRefExpr 0x55ef1b207078 <lgc.c:517:40> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b2070a0 <lgc.c:517:40> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b207078 <col:40> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: MemberExpr 0x55ef1b2070b8 <lgc.c:517:40, col:43> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
`-ImplicitCastExpr 0x55ef1b2070a0 <col:40> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b207078 <col:40> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B7.4]->uvhead
   6: UnaryOperator 0x55ef1b2070f0 <lgc.c:517:39, col:43> 'UpVal *' prefix '&'
`-MemberExpr 0x55ef1b2070b8 <col:40, col:43> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
  `-ImplicitCastExpr 0x55ef1b2070a0 <col:40> 'global_State *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b207078 <col:40> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
&[B7.5]
   7: BinaryOperator 0x55ef1b207128 <lgc.c:517:33, col:43> 'int' '!='
|-ImplicitCastExpr 0x55ef1b207110 <col:33> 'UpVal *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b207050 <col:33> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
`-UnaryOperator 0x55ef1b2070f0 <col:39, col:43> 'UpVal *' prefix '&'
  `-MemberExpr 0x55ef1b2070b8 <col:40, col:43> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
    `-ImplicitCastExpr 0x55ef1b2070a0 <col:40> 'global_State *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b207078 <col:40> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B7.2] != [B7.6]
   T: for (...; [B7.7]; ...)
   Preds (2): B1 B8
   Succs (2): B6 B0

 [B8]
   1: DeclStmt 0x55ef1b206eb0 <lgc.c:516:3, col:12>col:10
`-VarDecl 0x55ef1b206e50 <col:3, col:10> col:10 used uv 'UpVal *'
UpVal *uv;
   2: DeclRefExpr 0x55ef1b206ef0 <lgc.c:517:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
g
   3: ImplicitCastExpr 0x55ef1b206f18 <lgc.c:517:13> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b206ef0 <col:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B8.2] (ImplicitCastExpr, LValueToRValue, global_State *)
   4: MemberExpr 0x55ef1b206f30 <lgc.c:517:13, col:16> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
`-ImplicitCastExpr 0x55ef1b206f18 <col:13> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b206ef0 <col:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B8.3]->uvhead
   5: MemberExpr 0x55ef1b206f68 <lgc.c:517:13, col:23> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue .u 0x55ef1b18d6b0
`-MemberExpr 0x55ef1b206f30 <col:13, col:16> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
  `-ImplicitCastExpr 0x55ef1b206f18 <col:13> 'global_State *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b206ef0 <col:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B8.4].u
   6: MemberExpr 0x55ef1b206fa0 <lgc.c:517:13, col:25> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
`-MemberExpr 0x55ef1b206f68 <col:13, col:23> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue .u 0x55ef1b18d6b0
  `-MemberExpr 0x55ef1b206f30 <col:13, col:16> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
    `-ImplicitCastExpr 0x55ef1b206f18 <col:13> 'global_State *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b206ef0 <col:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B8.5].l
   7: MemberExpr 0x55ef1b206fd8 <lgc.c:517:13, col:27> 'struct UpVal *' lvalue .next 0x55ef1b18d520
`-MemberExpr 0x55ef1b206fa0 <col:13, col:25> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
  `-MemberExpr 0x55ef1b206f68 <col:13, col:23> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue .u 0x55ef1b18d6b0
    `-MemberExpr 0x55ef1b206f30 <col:13, col:16> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
      `-ImplicitCastExpr 0x55ef1b206f18 <col:13> 'global_State *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b206ef0 <col:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B8.6].next
   8: ImplicitCastExpr 0x55ef1b207010 <lgc.c:517:13, col:27> 'struct UpVal *' <LValueToRValue>
`-MemberExpr 0x55ef1b206fd8 <col:13, col:27> 'struct UpVal *' lvalue .next 0x55ef1b18d520
  `-MemberExpr 0x55ef1b206fa0 <col:13, col:25> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
    `-MemberExpr 0x55ef1b206f68 <col:13, col:23> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue .u 0x55ef1b18d6b0
      `-MemberExpr 0x55ef1b206f30 <col:13, col:16> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
        `-ImplicitCastExpr 0x55ef1b206f18 <col:13> 'global_State *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b206ef0 <col:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B8.7] (ImplicitCastExpr, LValueToRValue, struct UpVal *)
   9: DeclRefExpr 0x55ef1b206ec8 <lgc.c:517:8> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
uv
  10: BinaryOperator 0x55ef1b207028 <lgc.c:517:8, col:27> 'UpVal *' '='
|-DeclRefExpr 0x55ef1b206ec8 <col:8> 'UpVal *' lvalue Var 0x55ef1b206e50 'uv' 'UpVal *'
`-ImplicitCastExpr 0x55ef1b207010 <col:13, col:27> 'struct UpVal *' <LValueToRValue>
  `-MemberExpr 0x55ef1b206fd8 <col:13, col:27> 'struct UpVal *' lvalue .next 0x55ef1b18d520
    `-MemberExpr 0x55ef1b206fa0 <col:13, col:25> 'struct (anonymous struct at ./lobject.h:279:5)':'struct UpVal::(anonymous at ./lobject.h:279:5)' lvalue .l 0x55ef1b18d5c0
      `-MemberExpr 0x55ef1b206f68 <col:13, col:23> 'union (anonymous union at ./lobject.h:277:3)':'union UpVal::(anonymous at ./lobject.h:277:3)' lvalue .u 0x55ef1b18d6b0
        `-MemberExpr 0x55ef1b206f30 <col:13, col:16> 'UpVal':'struct UpVal' lvalue ->uvhead 0x55ef1b1a0af8
          `-ImplicitCastExpr 0x55ef1b206f18 <col:13> 'global_State *' <LValueToRValue>
            `-DeclRefExpr 0x55ef1b206ef0 <col:13> 'global_State *' lvalue ParmVar 0x55ef1b205190 'g' 'global_State *'
[B8.9] = [B8.8]
   Preds (1): B9
   Succs (1): B7

 [B0 (EXIT)]
   Preds (1): B7
