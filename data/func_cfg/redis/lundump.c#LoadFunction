static Proto *LoadFunction(LoadState *S, TString *p)
 [B11 (ENTRY)]
   Succs (1): B10

 [B1]
   1: DeclRefExpr 0x56282187b398 <lundump.c:178:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   2: ImplicitCastExpr 0x56282187b3c0 <lundump.c:178:2> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187b398 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.1] (ImplicitCastExpr, LValueToRValue, LoadState *)
   3: MemberExpr 0x56282187b3d8 <lundump.c:178:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x56282187b3c0 <col:2> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187b398 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.2]->L
   4: ImplicitCastExpr 0x56282187b410 <lundump.c:178:2, col:5> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x56282187b3d8 <col:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x56282187b3c0 <col:2> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187b398 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x56282187b428 <lundump.c:178:2, col:8> 'StkId':'TValue *' lvalue ->top 0x562821847408
`-ImplicitCastExpr 0x56282187b410 <col:2, col:5> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x56282187b3d8 <col:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x56282187b3c0 <col:2> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x56282187b398 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.4]->top
   6: UnaryOperator 0x56282187b460 <lundump.c:178:2, col:11> 'StkId':'TValue *' postfix '--'
`-MemberExpr 0x56282187b428 <col:2, col:8> 'StkId':'TValue *' lvalue ->top 0x562821847408
  `-ImplicitCastExpr 0x56282187b410 <col:2, col:5> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x56282187b3d8 <col:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x56282187b3c0 <col:2> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x56282187b398 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.5]--
   7: DeclRefExpr 0x56282187b480 <lundump.c:179:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   8: ImplicitCastExpr 0x56282187b4a8 <lundump.c:179:2> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187b480 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.7] (ImplicitCastExpr, LValueToRValue, LoadState *)
   9: MemberExpr 0x56282187b4c0 <lundump.c:179:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x56282187b4a8 <col:2> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187b480 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.8]->L
  10: ImplicitCastExpr 0x56282187b4f8 <lundump.c:179:2, col:5> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x56282187b4c0 <col:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x56282187b4a8 <col:2> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187b480 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: MemberExpr 0x56282187b510 <lundump.c:179:2, col:8> 'unsigned short' lvalue ->nCcalls 0x5628218478e0
`-ImplicitCastExpr 0x56282187b4f8 <col:2, col:5> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x56282187b4c0 <col:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x56282187b4a8 <col:2> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x56282187b480 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.10]->nCcalls
  12: UnaryOperator 0x56282187b548 <lundump.c:179:2, col:15> 'unsigned short' postfix '--'
`-MemberExpr 0x56282187b510 <col:2, col:8> 'unsigned short' lvalue ->nCcalls 0x5628218478e0
  `-ImplicitCastExpr 0x56282187b4f8 <col:2, col:5> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x56282187b4c0 <col:2, col:5> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x56282187b4a8 <col:2> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x56282187b480 <col:2> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B1.11]--
  13: DeclRefExpr 0x56282187b568 <lundump.c:180:9> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  14: ImplicitCastExpr 0x56282187b590 <lundump.c:180:9> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187b568 <col:9> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B1.13] (ImplicitCastExpr, LValueToRValue, Proto *)
  15: ReturnStmt 0x56282187b5a8 <lundump.c:180:2, col:9>
`-ImplicitCastExpr 0x56282187b590 <col:9> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187b568 <col:9> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
return [B1.14];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x56282187b210 <lundump.c:34:25> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
error
   2: ImplicitCastExpr 0x56282187b2c8 <lundump.c:34:25> 'void (*)(LoadState *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187b210 <col:25> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, const char *))
   3: DeclRefExpr 0x56282187b238 <lundump.c:34:31> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x56282187b318 <lundump.c:34:31> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187b238 <col:31> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: StringLiteral 0x56282187b298 <lundump.c:177:26> 'char [9]' lvalue "bad code"
"bad code"
   6: ImplicitCastExpr 0x56282187b330 <lundump.c:177:26> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x56282187b298 <col:26> 'char [9]' lvalue "bad code"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x56282187b348 <lundump.c:177:26> 'const char *' <BitCast>
`-ImplicitCastExpr 0x56282187b330 <col:26> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x56282187b298 <col:26> 'char [9]' lvalue "bad code"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x56282187b2e0 <lundump.c:34:25, col:34> 'void'
|-ImplicitCastExpr 0x56282187b2c8 <col:25> 'void (*)(LoadState *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187b210 <col:25> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
|-ImplicitCastExpr 0x56282187b318 <col:31> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x56282187b238 <col:31> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-ImplicitCastExpr 0x56282187b348 <line:177:26> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x56282187b330 <col:26> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x56282187b298 <col:26> 'char [9]' lvalue "bad code"
[B2.2]([B2.4], [B2.7])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x56282187a540 <lundump.c:168:17> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
LoadInt
   2: ImplicitCastExpr 0x56282187a590 <lundump.c:168:17> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187a540 <col:17> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
   3: DeclRefExpr 0x56282187a568 <lundump.c:168:25> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x56282187a5d8 <lundump.c:168:25> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187a568 <col:25> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: CallExpr 0x56282187a5a8 <lundump.c:168:17, col:26> 'int'
|-ImplicitCastExpr 0x56282187a590 <col:17> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187a540 <col:17> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
`-ImplicitCastExpr 0x56282187a5d8 <col:25> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a568 <col:25> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.2]([B3.4])
   6: DeclRefExpr 0x56282187a098 <lundump.c:168:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
   7: ImplicitCastExpr 0x56282187a0c0 <lundump.c:168:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187a098 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.6] (ImplicitCastExpr, LValueToRValue, Proto *)
   8: MemberExpr 0x56282187a0d8 <lundump.c:168:2, col:5> 'int' lvalue ->linedefined 0x562821832e48
`-ImplicitCastExpr 0x56282187a0c0 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a098 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.7]->linedefined
   9: BinaryOperator 0x56282187a5f0 <lundump.c:168:2, col:26> 'int' '='
|-MemberExpr 0x56282187a0d8 <col:2, col:5> 'int' lvalue ->linedefined 0x562821832e48
| `-ImplicitCastExpr 0x56282187a0c0 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282187a098 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CallExpr 0x56282187a5a8 <col:17, col:26> 'int'
  |-ImplicitCastExpr 0x56282187a590 <col:17> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187a540 <col:17> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
  `-ImplicitCastExpr 0x56282187a5d8 <col:25> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187a568 <col:25> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.8] = [B3.5]
  10: DeclRefExpr 0x56282187a690 <lundump.c:169:21> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
LoadInt
  11: ImplicitCastExpr 0x56282187a6e0 <lundump.c:169:21> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187a690 <col:21> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
[B3.10] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
  12: DeclRefExpr 0x56282187a6b8 <lundump.c:169:29> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  13: ImplicitCastExpr 0x56282187a728 <lundump.c:169:29> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187a6b8 <col:29> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.12] (ImplicitCastExpr, LValueToRValue, LoadState *)
  14: CallExpr 0x56282187a6f8 <lundump.c:169:21, col:30> 'int'
|-ImplicitCastExpr 0x56282187a6e0 <col:21> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187a690 <col:21> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
`-ImplicitCastExpr 0x56282187a728 <col:29> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a6b8 <col:29> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.11]([B3.13])
  15: DeclRefExpr 0x56282187a618 <lundump.c:169:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  16: ImplicitCastExpr 0x56282187a640 <lundump.c:169:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187a618 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.15] (ImplicitCastExpr, LValueToRValue, Proto *)
  17: MemberExpr 0x56282187a658 <lundump.c:169:2, col:5> 'int' lvalue ->lastlinedefined 0x562821832ea8
`-ImplicitCastExpr 0x56282187a640 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a618 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.16]->lastlinedefined
  18: BinaryOperator 0x56282187a740 <lundump.c:169:2, col:30> 'int' '='
|-MemberExpr 0x56282187a658 <col:2, col:5> 'int' lvalue ->lastlinedefined 0x562821832ea8
| `-ImplicitCastExpr 0x56282187a640 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282187a618 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CallExpr 0x56282187a6f8 <col:21, col:30> 'int'
  |-ImplicitCastExpr 0x56282187a6e0 <col:21> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187a690 <col:21> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
  `-ImplicitCastExpr 0x56282187a728 <col:29> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187a6b8 <col:29> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.17] = [B3.14]
  19: DeclRefExpr 0x56282187a7e0 <lundump.c:44:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
LoadChar
  20: ImplicitCastExpr 0x56282187a830 <lundump.c:44:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187a7e0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
[B3.19] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
  21: DeclRefExpr 0x56282187a808 <lundump.c:170:19> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  22: ImplicitCastExpr 0x56282187a878 <lundump.c:170:19> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187a808 <col:19> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.21] (ImplicitCastExpr, LValueToRValue, LoadState *)
  23: CallExpr 0x56282187a848 <lundump.c:44:31, col:41> 'int'
|-ImplicitCastExpr 0x56282187a830 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187a7e0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
`-ImplicitCastExpr 0x56282187a878 <line:170:19> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a808 <col:19> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.20]([B3.22])
  24: CStyleCastExpr 0x56282187a8a0 <lundump.c:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
`-CallExpr 0x56282187a848 <col:31, col:41> 'int'
  |-ImplicitCastExpr 0x56282187a830 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187a7e0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
  `-ImplicitCastExpr 0x56282187a878 <line:170:19> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187a808 <col:19> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
(lu_byte)[B3.23] (CStyleCastExpr, IntegralCast, lu_byte)
  25: DeclRefExpr 0x56282187a768 <lundump.c:170:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  26: ImplicitCastExpr 0x56282187a790 <lundump.c:170:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187a768 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.25] (ImplicitCastExpr, LValueToRValue, Proto *)
  27: MemberExpr 0x56282187a7a8 <lundump.c:170:2, col:5> 'lu_byte':'unsigned char' lvalue ->nups 0x562821832f58
`-ImplicitCastExpr 0x56282187a790 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a768 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.26]->nups
  28: BinaryOperator 0x56282187a8c8 <lundump.c:170:2, line:44:41> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x56282187a7a8 <line:170:2, col:5> 'lu_byte':'unsigned char' lvalue ->nups 0x562821832f58
| `-ImplicitCastExpr 0x56282187a790 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282187a768 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CStyleCastExpr 0x56282187a8a0 <line:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
  `-CallExpr 0x56282187a848 <col:31, col:41> 'int'
    |-ImplicitCastExpr 0x56282187a830 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56282187a7e0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
    `-ImplicitCastExpr 0x56282187a878 <line:170:19> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x56282187a808 <col:19> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.27] = [B3.24]
  29: DeclRefExpr 0x56282187a968 <lundump.c:44:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
LoadChar
  30: ImplicitCastExpr 0x56282187a9b8 <lundump.c:44:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187a968 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
[B3.29] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
  31: DeclRefExpr 0x56282187a990 <lundump.c:171:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  32: ImplicitCastExpr 0x56282187aa00 <lundump.c:171:24> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187a990 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.31] (ImplicitCastExpr, LValueToRValue, LoadState *)
  33: CallExpr 0x56282187a9d0 <lundump.c:44:31, col:41> 'int'
|-ImplicitCastExpr 0x56282187a9b8 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187a968 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
`-ImplicitCastExpr 0x56282187aa00 <line:171:24> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a990 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.30]([B3.32])
  34: CStyleCastExpr 0x56282187aa28 <lundump.c:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
`-CallExpr 0x56282187a9d0 <col:31, col:41> 'int'
  |-ImplicitCastExpr 0x56282187a9b8 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187a968 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
  `-ImplicitCastExpr 0x56282187aa00 <line:171:24> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187a990 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
(lu_byte)[B3.33] (CStyleCastExpr, IntegralCast, lu_byte)
  35: DeclRefExpr 0x56282187a8f0 <lundump.c:171:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  36: ImplicitCastExpr 0x56282187a918 <lundump.c:171:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187a8f0 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.35] (ImplicitCastExpr, LValueToRValue, Proto *)
  37: MemberExpr 0x56282187a930 <lundump.c:171:2, col:5> 'lu_byte':'unsigned char' lvalue ->numparams 0x562821832fb0
`-ImplicitCastExpr 0x56282187a918 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187a8f0 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.36]->numparams
  38: BinaryOperator 0x56282187aa50 <lundump.c:171:2, line:44:41> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x56282187a930 <line:171:2, col:5> 'lu_byte':'unsigned char' lvalue ->numparams 0x562821832fb0
| `-ImplicitCastExpr 0x56282187a918 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282187a8f0 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CStyleCastExpr 0x56282187aa28 <line:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
  `-CallExpr 0x56282187a9d0 <col:31, col:41> 'int'
    |-ImplicitCastExpr 0x56282187a9b8 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56282187a968 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
    `-ImplicitCastExpr 0x56282187aa00 <line:171:24> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x56282187a990 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.37] = [B3.34]
  39: DeclRefExpr 0x56282187aaf0 <lundump.c:44:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
LoadChar
  40: ImplicitCastExpr 0x56282187ab40 <lundump.c:44:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187aaf0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
[B3.39] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
  41: DeclRefExpr 0x56282187ab18 <lundump.c:172:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  42: ImplicitCastExpr 0x56282187ab88 <lundump.c:172:24> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187ab18 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.41] (ImplicitCastExpr, LValueToRValue, LoadState *)
  43: CallExpr 0x56282187ab58 <lundump.c:44:31, col:41> 'int'
|-ImplicitCastExpr 0x56282187ab40 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187aaf0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
`-ImplicitCastExpr 0x56282187ab88 <line:172:24> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187ab18 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.40]([B3.42])
  44: CStyleCastExpr 0x56282187abb0 <lundump.c:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
`-CallExpr 0x56282187ab58 <col:31, col:41> 'int'
  |-ImplicitCastExpr 0x56282187ab40 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187aaf0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
  `-ImplicitCastExpr 0x56282187ab88 <line:172:24> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187ab18 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
(lu_byte)[B3.43] (CStyleCastExpr, IntegralCast, lu_byte)
  45: DeclRefExpr 0x56282187aa78 <lundump.c:172:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  46: ImplicitCastExpr 0x56282187aaa0 <lundump.c:172:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187aa78 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.45] (ImplicitCastExpr, LValueToRValue, Proto *)
  47: MemberExpr 0x56282187aab8 <lundump.c:172:2, col:5> 'lu_byte':'unsigned char' lvalue ->is_vararg 0x562821833008
`-ImplicitCastExpr 0x56282187aaa0 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187aa78 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.46]->is_vararg
  48: BinaryOperator 0x56282187abd8 <lundump.c:172:2, line:44:41> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x56282187aab8 <line:172:2, col:5> 'lu_byte':'unsigned char' lvalue ->is_vararg 0x562821833008
| `-ImplicitCastExpr 0x56282187aaa0 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282187aa78 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CStyleCastExpr 0x56282187abb0 <line:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
  `-CallExpr 0x56282187ab58 <col:31, col:41> 'int'
    |-ImplicitCastExpr 0x56282187ab40 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56282187aaf0 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
    `-ImplicitCastExpr 0x56282187ab88 <line:172:24> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x56282187ab18 <col:24> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.47] = [B3.44]
  49: DeclRefExpr 0x56282187ac78 <lundump.c:44:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
LoadChar
  50: ImplicitCastExpr 0x56282187acc8 <lundump.c:44:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187ac78 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
[B3.49] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
  51: DeclRefExpr 0x56282187aca0 <lundump.c:173:27> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  52: ImplicitCastExpr 0x56282187ad10 <lundump.c:173:27> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187aca0 <col:27> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.51] (ImplicitCastExpr, LValueToRValue, LoadState *)
  53: CallExpr 0x56282187ace0 <lundump.c:44:31, col:41> 'int'
|-ImplicitCastExpr 0x56282187acc8 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187ac78 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
`-ImplicitCastExpr 0x56282187ad10 <line:173:27> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282187aca0 <col:27> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.50]([B3.52])
  54: CStyleCastExpr 0x56282187ad38 <lundump.c:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
`-CallExpr 0x56282187ace0 <col:31, col:41> 'int'
  |-ImplicitCastExpr 0x56282187acc8 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187ac78 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
  `-ImplicitCastExpr 0x56282187ad10 <line:173:27> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282187aca0 <col:27> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
(lu_byte)[B3.53] (CStyleCastExpr, IntegralCast, lu_byte)
  55: DeclRefExpr 0x56282187ac00 <lundump.c:173:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  56: ImplicitCastExpr 0x56282187ac28 <lundump.c:173:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187ac00 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.55] (ImplicitCastExpr, LValueToRValue, Proto *)
  57: MemberExpr 0x56282187ac40 <lundump.c:173:2, col:5> 'lu_byte':'unsigned char' lvalue ->maxstacksize 0x562821833060
`-ImplicitCastExpr 0x56282187ac28 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187ac00 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.56]->maxstacksize
  58: BinaryOperator 0x56282187ad60 <lundump.c:173:2, line:44:41> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x56282187ac40 <line:173:2, col:5> 'lu_byte':'unsigned char' lvalue ->maxstacksize 0x562821833060
| `-ImplicitCastExpr 0x56282187ac28 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282187ac00 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CStyleCastExpr 0x56282187ad38 <line:44:22, col:41> 'lu_byte':'unsigned char' <IntegralCast>
  `-CallExpr 0x56282187ace0 <col:31, col:41> 'int'
    |-ImplicitCastExpr 0x56282187acc8 <col:31> 'int (*)(LoadState *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x56282187ac78 <col:31> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
    `-ImplicitCastExpr 0x56282187ad10 <line:173:27> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x56282187aca0 <col:27> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.57] = [B3.54]
  59: DeclRefExpr 0x56282187ad88 <lundump.c:174:2> 'void (LoadState *, Proto *)' Function 0x56282186c4c0 'LoadCode' 'void (LoadState *, Proto *)'
LoadCode
  60: ImplicitCastExpr 0x56282187ae58 <lundump.c:174:2> 'void (*)(LoadState *, Proto *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187ad88 <col:2> 'void (LoadState *, Proto *)' Function 0x56282186c4c0 'LoadCode' 'void (LoadState *, Proto *)'
[B3.59] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, Proto *))
  61: DeclRefExpr 0x56282187adb0 <lundump.c:174:11> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  62: ImplicitCastExpr 0x56282187aea8 <lundump.c:174:11> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187adb0 <col:11> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.61] (ImplicitCastExpr, LValueToRValue, LoadState *)
  63: DeclRefExpr 0x56282187add8 <lundump.c:174:13> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  64: ImplicitCastExpr 0x56282187aec0 <lundump.c:174:13> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187add8 <col:13> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.63] (ImplicitCastExpr, LValueToRValue, Proto *)
  65: CallExpr 0x56282187ae70 <lundump.c:174:2, col:14> 'void'
|-ImplicitCastExpr 0x56282187ae58 <col:2> 'void (*)(LoadState *, Proto *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187ad88 <col:2> 'void (LoadState *, Proto *)' Function 0x56282186c4c0 'LoadCode' 'void (LoadState *, Proto *)'
|-ImplicitCastExpr 0x56282187aea8 <col:11> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x56282187adb0 <col:11> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-ImplicitCastExpr 0x56282187aec0 <col:13> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187add8 <col:13> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.60]([B3.62], [B3.64])
  66: DeclRefExpr 0x56282187aed8 <lundump.c:175:2> 'void (LoadState *, Proto *)' Function 0x56282186f2e0 'LoadConstants' 'void (LoadState *, Proto *)'
LoadConstants
  67: ImplicitCastExpr 0x56282187af50 <lundump.c:175:2> 'void (*)(LoadState *, Proto *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187aed8 <col:2> 'void (LoadState *, Proto *)' Function 0x56282186f2e0 'LoadConstants' 'void (LoadState *, Proto *)'
[B3.66] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, Proto *))
  68: DeclRefExpr 0x56282187af00 <lundump.c:175:16> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  69: ImplicitCastExpr 0x56282187afa0 <lundump.c:175:16> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187af00 <col:16> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.68] (ImplicitCastExpr, LValueToRValue, LoadState *)
  70: DeclRefExpr 0x56282187af28 <lundump.c:175:18> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  71: ImplicitCastExpr 0x56282187afb8 <lundump.c:175:18> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187af28 <col:18> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.70] (ImplicitCastExpr, LValueToRValue, Proto *)
  72: CallExpr 0x56282187af68 <lundump.c:175:2, col:19> 'void'
|-ImplicitCastExpr 0x56282187af50 <col:2> 'void (*)(LoadState *, Proto *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187aed8 <col:2> 'void (LoadState *, Proto *)' Function 0x56282186f2e0 'LoadConstants' 'void (LoadState *, Proto *)'
|-ImplicitCastExpr 0x56282187afa0 <col:16> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x56282187af00 <col:16> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-ImplicitCastExpr 0x56282187afb8 <col:18> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187af28 <col:18> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.67]([B3.69], [B3.71])
  73: DeclRefExpr 0x56282187afd0 <lundump.c:176:2> 'void (LoadState *, Proto *)' Function 0x562821874ba0 'LoadDebug' 'void (LoadState *, Proto *)'
LoadDebug
  74: ImplicitCastExpr 0x56282187b048 <lundump.c:176:2> 'void (*)(LoadState *, Proto *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187afd0 <col:2> 'void (LoadState *, Proto *)' Function 0x562821874ba0 'LoadDebug' 'void (LoadState *, Proto *)'
[B3.73] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, Proto *))
  75: DeclRefExpr 0x56282187aff8 <lundump.c:176:12> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  76: ImplicitCastExpr 0x56282187b098 <lundump.c:176:12> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282187aff8 <col:12> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B3.75] (ImplicitCastExpr, LValueToRValue, LoadState *)
  77: DeclRefExpr 0x56282187b020 <lundump.c:176:14> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  78: ImplicitCastExpr 0x56282187b0b0 <lundump.c:176:14> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187b020 <col:14> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.77] (ImplicitCastExpr, LValueToRValue, Proto *)
  79: CallExpr 0x56282187b060 <lundump.c:176:2, col:15> 'void'
|-ImplicitCastExpr 0x56282187b048 <col:2> 'void (*)(LoadState *, Proto *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187afd0 <col:2> 'void (LoadState *, Proto *)' Function 0x562821874ba0 'LoadDebug' 'void (LoadState *, Proto *)'
|-ImplicitCastExpr 0x56282187b098 <col:12> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x56282187aff8 <col:12> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-ImplicitCastExpr 0x56282187b0b0 <col:14> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187b020 <col:14> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.74]([B3.76], [B3.78])
  80: DeclRefExpr 0x56282187b0c8 <lundump.c:177:7> 'int (const Proto *)' Function 0x56282184eaf8 'luaG_checkcode' 'int (const Proto *)'
luaG_checkcode
  81: ImplicitCastExpr 0x56282187b178 <lundump.c:177:7> 'int (*)(const Proto *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282187b0c8 <col:7> 'int (const Proto *)' Function 0x56282184eaf8 'luaG_checkcode' 'int (const Proto *)'
[B3.80] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const Proto *))
  82: DeclRefExpr 0x56282187b0f0 <lundump.c:177:22> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  83: ImplicitCastExpr 0x56282187b1c0 <lundump.c:177:22> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282187b0f0 <col:22> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.82] (ImplicitCastExpr, LValueToRValue, Proto *)
  84: ImplicitCastExpr 0x56282187b1d8 <lundump.c:177:22> 'const Proto *' <BitCast>
`-ImplicitCastExpr 0x56282187b1c0 <col:22> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282187b0f0 <col:22> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.83] (ImplicitCastExpr, BitCast, const Proto *)
  85: CallExpr 0x56282187b190 <lundump.c:177:7, col:23> 'int'
|-ImplicitCastExpr 0x56282187b178 <col:7> 'int (*)(const Proto *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282187b0c8 <col:7> 'int (const Proto *)' Function 0x56282184eaf8 'luaG_checkcode' 'int (const Proto *)'
`-ImplicitCastExpr 0x56282187b1d8 <col:22> 'const Proto *' <BitCast>
  `-ImplicitCastExpr 0x56282187b1c0 <col:22> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x56282187b0f0 <col:22> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B3.81]([B3.84])
  86: UnaryOperator 0x56282187b1f0 <lundump.c:177:6, col:23> 'int' prefix '!'
`-CallExpr 0x56282187b190 <col:7, col:23> 'int'
  |-ImplicitCastExpr 0x56282187b178 <col:7> 'int (*)(const Proto *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282187b0c8 <col:7> 'int (const Proto *)' Function 0x56282184eaf8 'luaG_checkcode' 'int (const Proto *)'
  `-ImplicitCastExpr 0x56282187b1d8 <col:22> 'const Proto *' <BitCast>
    `-ImplicitCastExpr 0x56282187b1c0 <col:22> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x56282187b0f0 <col:22> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
![B3.85]
   T: if [B3.86]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x562821879ff8 <lundump.c:167:58> 'TString *' lvalue ParmVar 0x562821878ab8 'p' 'TString *'
p
   2: ImplicitCastExpr 0x56282187a020 <lundump.c:167:58> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x562821879ff8 <col:58> 'TString *' lvalue ParmVar 0x562821878ab8 'p' 'TString *'
[B4.1] (ImplicitCastExpr, LValueToRValue, TString *)
   3: DeclRefExpr 0x562821879f80 <lundump.c:167:48> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x562821879fa8 <lundump.c:167:48> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x562821879f80 <col:48> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B4.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x562821879fc0 <lundump.c:167:48, col:51> 'TString *' lvalue ->source 0x5628218329e8
`-ImplicitCastExpr 0x562821879fa8 <col:48> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562821879f80 <col:48> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B4.4]->source
   6: BinaryOperator 0x56282187a038 <lundump.c:167:48, col:58> 'TString *' '='
|-MemberExpr 0x562821879fc0 <col:48, col:51> 'TString *' lvalue ->source 0x5628218329e8
| `-ImplicitCastExpr 0x562821879fa8 <col:48> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x562821879f80 <col:48> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-ImplicitCastExpr 0x56282187a020 <col:58> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x562821879ff8 <col:58> 'TString *' lvalue ParmVar 0x562821878ab8 'p' 'TString *'
[B4.5] = [B4.2]
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x562821879bc0 <lundump.c:166:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   2: ImplicitCastExpr 0x562821879be8 <lundump.c:166:43> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821879bc0 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.1] (ImplicitCastExpr, LValueToRValue, LoadState *)
   3: MemberExpr 0x562821879c00 <lundump.c:166:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x562821879be8 <col:43> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821879bc0 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.2]->L
   4: ImplicitCastExpr 0x562821879c38 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x562821879c00 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x562821879be8 <col:43> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821879bc0 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x562821879c50 <lundump.c:166:43, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x562821847408
`-ImplicitCastExpr 0x562821879c38 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x562821879c00 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x562821879be8 <col:43> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821879bc0 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.4]->top
   6: UnaryOperator 0x562821879c88 <lundump.c:166:43, ./ldo.h:22:50> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x562821879c50 <lundump.c:166:43, ./ldo.h:22:47> 'StkId':'TValue *' lvalue ->top 0x562821847408
  `-ImplicitCastExpr 0x562821879c38 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x562821879c00 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x562821879be8 <col:43> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x562821879bc0 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.5]++
   7: DeclRefExpr 0x562821879d58 <lundump.c:167:12> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
LoadString
   8: ImplicitCastExpr 0x562821879da8 <lundump.c:167:12> 'TString *(*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821879d58 <col:12> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
[B5.7] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(LoadState *))
   9: DeclRefExpr 0x562821879d80 <lundump.c:167:23> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  10: ImplicitCastExpr 0x562821879df0 <lundump.c:167:23> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821879d80 <col:23> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.9] (ImplicitCastExpr, LValueToRValue, LoadState *)
  11: CallExpr 0x562821879dc0 <lundump.c:167:12, col:24> 'TString *'
|-ImplicitCastExpr 0x562821879da8 <col:12> 'TString *(*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821879d58 <col:12> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
`-ImplicitCastExpr 0x562821879df0 <col:23> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821879d80 <col:23> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.8]([B5.10])
  12: DeclRefExpr 0x562821879ce0 <lundump.c:167:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  13: ImplicitCastExpr 0x562821879d08 <lundump.c:167:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x562821879ce0 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B5.12] (ImplicitCastExpr, LValueToRValue, Proto *)
  14: MemberExpr 0x562821879d20 <lundump.c:167:2, col:5> 'TString *' lvalue ->source 0x5628218329e8
`-ImplicitCastExpr 0x562821879d08 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562821879ce0 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B5.13]->source
  15: BinaryOperator 0x562821879e08 <lundump.c:167:2, col:24> 'TString *' '='
|-MemberExpr 0x562821879d20 <col:2, col:5> 'TString *' lvalue ->source 0x5628218329e8
| `-ImplicitCastExpr 0x562821879d08 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x562821879ce0 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CallExpr 0x562821879dc0 <col:12, col:24> 'TString *'
  |-ImplicitCastExpr 0x562821879da8 <col:12> 'TString *(*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562821879d58 <col:12> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
  `-ImplicitCastExpr 0x562821879df0 <col:23> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821879d80 <col:23> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B5.14] = [B5.11]
  16: DeclRefExpr 0x562821879e30 <lundump.c:167:31> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  17: ImplicitCastExpr 0x562821879e58 <lundump.c:167:31> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x562821879e30 <col:31> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B5.16] (ImplicitCastExpr, LValueToRValue, Proto *)
  18: MemberExpr 0x562821879e70 <lundump.c:167:31, col:34> 'TString *' lvalue ->source 0x5628218329e8
`-ImplicitCastExpr 0x562821879e58 <col:31> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562821879e30 <col:31> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B5.17]->source
  19: ImplicitCastExpr 0x562821879f28 <lundump.c:167:31, col:34> 'TString *' <LValueToRValue>
`-MemberExpr 0x562821879e70 <col:31, col:34> 'TString *' lvalue ->source 0x5628218329e8
  `-ImplicitCastExpr 0x562821879e58 <col:31> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562821879e30 <col:31> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B5.18] (ImplicitCastExpr, LValueToRValue, TString *)
  20: IntegerLiteral 0x562821879ea8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  21: CStyleCastExpr 0x562821879ee0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x562821879ea8 <col:24> 'int' 0
(void *)[B5.20] (CStyleCastExpr, NullToPointer, void *)
  22: ImplicitCastExpr 0x562821879f40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'TString *' <BitCast>
`-ParenExpr 0x562821879f08 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562821879ee0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x562821879ea8 <col:24> 'int' 0
([B5.21]) (ImplicitCastExpr, BitCast, TString *)
  23: BinaryOperator 0x562821879f58 <lundump.c:167:31, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x562821879f28 <lundump.c:167:31, col:34> 'TString *' <LValueToRValue>
| `-MemberExpr 0x562821879e70 <col:31, col:34> 'TString *' lvalue ->source 0x5628218329e8
|   `-ImplicitCastExpr 0x562821879e58 <col:31> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562821879e30 <col:31> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-ImplicitCastExpr 0x562821879f40 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'TString *' <BitCast>
  `-ParenExpr 0x562821879f08 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562821879ee0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x562821879ea8 <col:24> 'int' 0
[B5.19] == [B5.22]
   T: if [B5.23]
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: IntegerLiteral 0x562821879b00 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x562821879b30 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x562821879b00 <col:38> 'int' 0
(void)[B6.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B8
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5628218799d8 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x5628217d5ae8 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x562821879a98 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5628218799d8 <col:5> 'void (lua_State *, int)' Function 0x5628217d5ae8 'luaD_growstack' 'void (lua_State *, int)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x562821879a00 <lundump.c:166:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821879a28 <lundump.c:166:43> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821879a00 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B7.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: MemberExpr 0x562821879a40 <lundump.c:166:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x562821879a28 <col:43> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821879a00 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B7.4]->L
   6: ImplicitCastExpr 0x562821879ae8 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x562821879a40 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x562821879a28 <col:43> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821879a00 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B7.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x562821879a78 <./ldo.h:22:40> 'int' 1
1
   8: CallExpr 0x562821879ab0 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x562821879a98 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5628218799d8 <col:5> 'void (lua_State *, int)' Function 0x5628217d5ae8 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x562821879ae8 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
| `-MemberExpr 0x562821879a40 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
|   `-ImplicitCastExpr 0x562821879a28 <col:43> 'LoadState *' <LValueToRValue>
|     `-DeclRefExpr 0x562821879a00 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-IntegerLiteral 0x562821879a78 <./ldo.h:22:40> 'int' 1
[B7.2]([B7.6], [B7.7])
   Preds (1): B8
   Succs (1): B5

 [B8]
   1: DeclRefExpr 0x562821878f88 <lundump.c:165:4> 'Proto *(lua_State *)' Function 0x5628218587e0 'luaF_newproto' 'Proto *(lua_State *)'
luaF_newproto
   2: ImplicitCastExpr 0x562821879088 <lundump.c:165:4> 'Proto *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821878f88 <col:4> 'Proto *(lua_State *)' Function 0x5628218587e0 'luaF_newproto' 'Proto *(lua_State *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, Proto *(*)(lua_State *))
   3: DeclRefExpr 0x562821878fb0 <lundump.c:165:18> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821878fd8 <lundump.c:165:18> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821878fb0 <col:18> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: MemberExpr 0x562821878ff0 <lundump.c:165:18, col:21> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x562821878fd8 <col:18> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821878fb0 <col:18> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.4]->L
   6: ImplicitCastExpr 0x5628218790d0 <lundump.c:165:18, col:21> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x562821878ff0 <col:18, col:21> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x562821878fd8 <col:18> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821878fb0 <col:18> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: CallExpr 0x5628218790a0 <lundump.c:165:4, col:22> 'Proto *'
|-ImplicitCastExpr 0x562821879088 <col:4> 'Proto *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821878f88 <col:4> 'Proto *(lua_State *)' Function 0x5628218587e0 'luaF_newproto' 'Proto *(lua_State *)'
`-ImplicitCastExpr 0x5628218790d0 <col:18, col:21> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x562821878ff0 <col:18, col:21> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x562821878fd8 <col:18> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821878fb0 <col:18> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.2]([B8.6])
   8: DeclRefExpr 0x562821878f60 <lundump.c:165:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
   9: BinaryOperator 0x5628218790e8 <lundump.c:165:2, col:22> 'Proto *' '='
|-DeclRefExpr 0x562821878f60 <col:2> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
`-CallExpr 0x5628218790a0 <col:4, col:22> 'Proto *'
  |-ImplicitCastExpr 0x562821879088 <col:4> 'Proto *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562821878f88 <col:4> 'Proto *(lua_State *)' Function 0x5628218587e0 'luaF_newproto' 'Proto *(lua_State *)'
  `-ImplicitCastExpr 0x5628218790d0 <col:18, col:21> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x562821878ff0 <col:18, col:21> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x562821878fd8 <col:18> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x562821878fb0 <col:18> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.8] = [B8.7]
  10: DeclRefExpr 0x562821879180 <lundump.c:166:20> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  11: ImplicitCastExpr 0x5628218791a8 <lundump.c:166:20> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821879180 <col:20> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.10] (ImplicitCastExpr, LValueToRValue, LoadState *)
  12: MemberExpr 0x5628218791c0 <lundump.c:166:20, col:23> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x5628218791a8 <col:20> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821879180 <col:20> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.11]->L
  13: ImplicitCastExpr 0x5628218791f8 <lundump.c:166:20, col:23> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x5628218791c0 <col:20, col:23> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x5628218791a8 <col:20> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821879180 <col:20> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: MemberExpr 0x562821879210 <lundump.c:166:20, col:26> 'StkId':'TValue *' lvalue ->top 0x562821847408
`-ImplicitCastExpr 0x5628218791f8 <col:20, col:23> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x5628218791c0 <col:20, col:23> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x5628218791a8 <col:20> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821879180 <col:20> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.13]->top
  15: ImplicitCastExpr 0x562821879268 <./lobject.h:154:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x562821879248 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x562821879210 <lundump.c:166:20, col:26> 'StkId':'TValue *' lvalue ->top 0x562821847408
    `-ImplicitCastExpr 0x5628218791f8 <col:20, col:23> 'lua_State *' <LValueToRValue>
      `-MemberExpr 0x5628218791c0 <col:20, col:23> 'lua_State *' lvalue ->L 0x562821866780
        `-ImplicitCastExpr 0x5628218791a8 <col:20> 'LoadState *' <LValueToRValue>
          `-DeclRefExpr 0x562821879180 <col:20> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
([B8.14]) (ImplicitCastExpr, LValueToRValue, StkId)
  16: DeclStmt 0x562821879280 <./lobject.h:154:5, col:22>col:13
`-VarDecl 0x562821879120 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x562821879268 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x562821879248 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x562821879210 <lundump.c:166:20, col:26> 'StkId':'TValue *' lvalue ->top 0x562821847408
        `-ImplicitCastExpr 0x5628218791f8 <col:20, col:23> 'lua_State *' <LValueToRValue>
          `-MemberExpr 0x5628218791c0 <col:20, col:23> 'lua_State *' lvalue ->L 0x562821866780
            `-ImplicitCastExpr 0x5628218791a8 <col:20> 'LoadState *' <LValueToRValue>
              `-DeclRefExpr 0x562821879180 <col:20> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
TValue *i_o = (S->L->top);
  17: DeclRefExpr 0x562821879348 <lundump.c:166:30> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
f
  18: ImplicitCastExpr 0x5628218793f0 <./llimits.h:75:26, col:30> 'Proto *' <LValueToRValue>
`-ParenExpr 0x5628218793d0 <col:26, col:30> 'Proto *' lvalue
  `-ParenExpr 0x562821879370 <./lobject.h:155:36, col:38> 'Proto *' lvalue
    `-DeclRefExpr 0x562821879348 <lundump.c:166:30> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
(([B8.17])) (ImplicitCastExpr, LValueToRValue, Proto *)
  19: CStyleCastExpr 0x562821879408 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x5628218793f0 <col:26, col:30> 'Proto *' <LValueToRValue>
  `-ParenExpr 0x5628218793d0 <col:26, col:30> 'Proto *' lvalue
    `-ParenExpr 0x562821879370 <./lobject.h:155:36, col:38> 'Proto *' lvalue
      `-DeclRefExpr 0x562821879348 <lundump.c:166:30> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
(GCObject *)[B8.18] (CStyleCastExpr, BitCast, GCObject *)
  20: DeclRefExpr 0x562821879298 <./lobject.h:155:5> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
i_o
  21: ImplicitCastExpr 0x5628218792c0 <./lobject.h:155:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x562821879298 <col:5> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
[B8.20] (ImplicitCastExpr, LValueToRValue, TValue *)
  22: MemberExpr 0x5628218792d8 <./lobject.h:155:5, col:10> 'Value':'Value' lvalue ->value 0x562821825530
`-ImplicitCastExpr 0x5628218792c0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x562821879298 <col:5> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
[B8.21]->value
  23: MemberExpr 0x562821879310 <./lobject.h:155:5, col:16> 'GCObject *' lvalue .gc 0x562821825230
`-MemberExpr 0x5628218792d8 <col:5, col:10> 'Value':'Value' lvalue ->value 0x562821825530
  `-ImplicitCastExpr 0x5628218792c0 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x562821879298 <col:5> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
[B8.22].gc
  24: BinaryOperator 0x562821879450 <./lobject.h:155:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x562821879310 <./lobject.h:155:5, col:16> 'GCObject *' lvalue .gc 0x562821825230
| `-MemberExpr 0x5628218792d8 <col:5, col:10> 'Value':'Value' lvalue ->value 0x562821825530
|   `-ImplicitCastExpr 0x5628218792c0 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x562821879298 <col:5> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
`-ParenExpr 0x562821879430 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x562821879408 <col:23, col:30> 'GCObject *' <BitCast>
    `-ImplicitCastExpr 0x5628218793f0 <col:26, col:30> 'Proto *' <LValueToRValue>
      `-ParenExpr 0x5628218793d0 <col:26, col:30> 'Proto *' lvalue
        `-ParenExpr 0x562821879370 <./lobject.h:155:36, col:38> 'Proto *' lvalue
          `-DeclRefExpr 0x562821879348 <lundump.c:166:30> 'Proto *' lvalue Var 0x562821878c08 'f' 'Proto *'
[B8.23] = ([B8.19])
  25: IntegerLiteral 0x5628218794f0 <./lua.h:82:22> 'int' 8
8
  26: IntegerLiteral 0x562821879510 <./lobject.h:28:30> 'int' 1
1
  27: BinaryOperator 0x562821879530 <./lua.h:82:22, ./lobject.h:28:30> 'int' '+'
|-IntegerLiteral 0x5628218794f0 <./lua.h:82:22> 'int' 8
`-IntegerLiteral 0x562821879510 <./lobject.h:28:30> 'int' 1
[B8.25] + [B8.26]
  28: DeclRefExpr 0x562821879478 <./lobject.h:155:42> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
i_o
  29: ImplicitCastExpr 0x5628218794a0 <./lobject.h:155:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x562821879478 <col:42> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
[B8.28] (ImplicitCastExpr, LValueToRValue, TValue *)
  30: MemberExpr 0x5628218794b8 <./lobject.h:155:42, col:47> 'int' lvalue ->tt 0x562821825590
`-ImplicitCastExpr 0x5628218794a0 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x562821879478 <col:42> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
[B8.29]->tt
  31: BinaryOperator 0x562821879578 <./lobject.h:155:42, line:28:31> 'int' '='
|-MemberExpr 0x5628218794b8 <line:155:42, col:47> 'int' lvalue ->tt 0x562821825590
| `-ImplicitCastExpr 0x5628218794a0 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x562821879478 <col:42> 'TValue *' lvalue Var 0x562821879120 'i_o' 'TValue *'
`-ParenExpr 0x562821879558 <line:28:20, col:31> 'int'
  `-BinaryOperator 0x562821879530 <./lua.h:82:22, ./lobject.h:28:30> 'int' '+'
    |-IntegerLiteral 0x5628218794f0 <./lua.h:82:22> 'int' 8
    `-IntegerLiteral 0x562821879510 <./lobject.h:28:30> 'int' 1
[B8.30] = ([B8.27])
  32: IntegerLiteral 0x5628218795a0 <./llimits.h:62:31> 'int' 0
0
  33: CStyleCastExpr 0x5628218795d0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5628218795a0 <col:31> 'int' 0
(void)[B8.32] (CStyleCastExpr, ToVoid, void)
  34: DeclRefExpr 0x562821879658 <lundump.c:166:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  35: ImplicitCastExpr 0x562821879680 <lundump.c:166:43> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.34] (ImplicitCastExpr, LValueToRValue, LoadState *)
  36: MemberExpr 0x562821879698 <lundump.c:166:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x562821879680 <col:43> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.35]->L
  37: ImplicitCastExpr 0x5628218796d0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x562821879698 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x562821879680 <col:43> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.36] (ImplicitCastExpr, LValueToRValue, lua_State *)
  38: MemberExpr 0x5628218796e8 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5628218476b8
`-ImplicitCastExpr 0x5628218796d0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x562821879698 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x562821879680 <col:43> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.37]->stack_last
  39: ImplicitCastExpr 0x562821879738 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5628218796e8 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5628218476b8
  `-ImplicitCastExpr 0x5628218796d0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x562821879698 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x562821879680 <col:43> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.38] (ImplicitCastExpr, LValueToRValue, StkId)
  40: CStyleCastExpr 0x562821879750 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x562821879738 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5628218796e8 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5628218476b8
    `-ImplicitCastExpr 0x5628218796d0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
      `-MemberExpr 0x562821879698 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
        `-ImplicitCastExpr 0x562821879680 <col:43> 'LoadState *' <LValueToRValue>
          `-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
(char *)[B8.39] (CStyleCastExpr, BitCast, char *)
  41: DeclRefExpr 0x562821879778 <lundump.c:166:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
  42: ImplicitCastExpr 0x5628218797a0 <lundump.c:166:43> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.41] (ImplicitCastExpr, LValueToRValue, LoadState *)
  43: MemberExpr 0x5628218797b8 <lundump.c:166:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x5628218797a0 <col:43> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.42]->L
  44: ImplicitCastExpr 0x5628218797f0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x5628218797b8 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x5628218797a0 <col:43> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.43] (ImplicitCastExpr, LValueToRValue, lua_State *)
  45: MemberExpr 0x562821879808 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x562821847408
`-ImplicitCastExpr 0x5628218797f0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x5628218797b8 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x5628218797a0 <col:43> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.44]->top
  46: ImplicitCastExpr 0x562821879858 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x562821879808 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x562821847408
  `-ImplicitCastExpr 0x5628218797f0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x5628218797b8 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x5628218797a0 <col:43> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.45] (ImplicitCastExpr, LValueToRValue, StkId)
  47: CStyleCastExpr 0x562821879870 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x562821879858 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x562821879808 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x562821847408
    `-ImplicitCastExpr 0x5628218797f0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
      `-MemberExpr 0x5628218797b8 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
        `-ImplicitCastExpr 0x5628218797a0 <col:43> 'LoadState *' <LValueToRValue>
          `-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
(char *)[B8.46] (CStyleCastExpr, BitCast, char *)
  48: BinaryOperator 0x562821879898 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x562821879750 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x562821879738 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x5628218796e8 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5628218476b8
|     `-ImplicitCastExpr 0x5628218796d0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
|       `-MemberExpr 0x562821879698 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
|         `-ImplicitCastExpr 0x562821879680 <col:43> 'LoadState *' <LValueToRValue>
|           `-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-CStyleCastExpr 0x562821879870 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x562821879858 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x562821879808 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x562821847408
      `-ImplicitCastExpr 0x5628218797f0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
        `-MemberExpr 0x5628218797b8 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
          `-ImplicitCastExpr 0x5628218797a0 <col:43> 'LoadState *' <LValueToRValue>
            `-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B8.40] - [B8.47]
  49: IntegerLiteral 0x5628218798c0 <./ldo.h:22:40> 'int' 1
1
  50: UnaryExprOrTypeTraitExpr 0x562821879910 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  51: CStyleCastExpr 0x562821879948 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x562821879910 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B8.50] (CStyleCastExpr, IntegralCast, int)
  52: BinaryOperator 0x562821879970 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x5628218798e0 <col:49, col:51> 'int'
| `-IntegerLiteral 0x5628218798c0 <line:22:40> 'int' 1
`-CStyleCastExpr 0x562821879948 <line:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x562821879910 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B8.49]) * [B8.51]
  53: ImplicitCastExpr 0x562821879998 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x562821879970 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x5628218798e0 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x5628218798c0 <line:22:40> 'int' 1
  `-CStyleCastExpr 0x562821879948 <line:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x562821879910 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B8.52] (ImplicitCastExpr, IntegralCast, long)
  54: BinaryOperator 0x5628218799b0 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x562821879898 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x562821879750 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x562821879738 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x5628218796e8 <lundump.c:166:43, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5628218476b8
| |     `-ImplicitCastExpr 0x5628218796d0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
| |       `-MemberExpr 0x562821879698 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
| |         `-ImplicitCastExpr 0x562821879680 <col:43> 'LoadState *' <LValueToRValue>
| |           `-DeclRefExpr 0x562821879658 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
| `-CStyleCastExpr 0x562821879870 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x562821879858 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x562821879808 <lundump.c:166:43, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x562821847408
|       `-ImplicitCastExpr 0x5628218797f0 <lundump.c:166:43, col:46> 'lua_State *' <LValueToRValue>
|         `-MemberExpr 0x5628218797b8 <col:43, col:46> 'lua_State *' lvalue ->L 0x562821866780
|           `-ImplicitCastExpr 0x5628218797a0 <col:43> 'LoadState *' <LValueToRValue>
|             `-DeclRefExpr 0x562821879778 <col:43> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-ImplicitCastExpr 0x562821879998 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x562821879970 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x5628218798e0 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x5628218798c0 <line:22:40> 'int' 1
    `-CStyleCastExpr 0x562821879948 <line:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x562821879910 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B8.48] <= [B8.53]
   T: if [B8.54]
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x562821878dc8 <lundump.c:164:40> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
error
   2: ImplicitCastExpr 0x562821878e90 <lundump.c:164:40> 'void (*)(LoadState *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821878dc8 <col:40> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, const char *))
   3: DeclRefExpr 0x562821878df0 <lundump.c:164:46> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821878ee0 <lundump.c:164:46> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821878df0 <col:46> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B9.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: StringLiteral 0x562821878e58 <lundump.c:164:48> 'char [14]' lvalue "code too deep"
"code too deep"
   6: ImplicitCastExpr 0x562821878ef8 <lundump.c:164:48> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562821878e58 <col:48> 'char [14]' lvalue "code too deep"
[B9.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x562821878f10 <lundump.c:164:48> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562821878ef8 <col:48> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562821878e58 <col:48> 'char [14]' lvalue "code too deep"
[B9.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x562821878ea8 <lundump.c:164:40, col:63> 'void'
|-ImplicitCastExpr 0x562821878e90 <col:40> 'void (*)(LoadState *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821878dc8 <col:40> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
|-ImplicitCastExpr 0x562821878ee0 <col:46> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x562821878df0 <col:46> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-ImplicitCastExpr 0x562821878f10 <col:48> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562821878ef8 <col:48> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x562821878e58 <col:48> 'char [14]' lvalue "code too deep"
[B9.2]([B9.4], [B9.7])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclStmt 0x562821878c68 <lundump.c:163:2, col:10>col:9
`-VarDecl 0x562821878c08 <col:2, col:9> col:9 used f 'Proto *'
Proto *f;
   2: DeclRefExpr 0x562821878c80 <lundump.c:164:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
S
   3: ImplicitCastExpr 0x562821878ca8 <lundump.c:164:8> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821878c80 <col:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B10.2] (ImplicitCastExpr, LValueToRValue, LoadState *)
   4: MemberExpr 0x562821878cc0 <lundump.c:164:8, col:11> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x562821878ca8 <col:8> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821878c80 <col:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B10.3]->L
   5: ImplicitCastExpr 0x562821878cf8 <lundump.c:164:8, col:11> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x562821878cc0 <col:8, col:11> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x562821878ca8 <col:8> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821878c80 <col:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B10.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: MemberExpr 0x562821878d10 <lundump.c:164:8, col:14> 'unsigned short' lvalue ->nCcalls 0x5628218478e0
`-ImplicitCastExpr 0x562821878cf8 <col:8, col:11> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x562821878cc0 <col:8, col:11> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x562821878ca8 <col:8> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821878c80 <col:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B10.5]->nCcalls
   7: UnaryOperator 0x562821878d48 <lundump.c:164:6, col:14> 'unsigned short' prefix '++'
`-MemberExpr 0x562821878d10 <col:8, col:14> 'unsigned short' lvalue ->nCcalls 0x5628218478e0
  `-ImplicitCastExpr 0x562821878cf8 <col:8, col:11> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x562821878cc0 <col:8, col:11> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x562821878ca8 <col:8> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x562821878c80 <col:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
++[B10.6]
   8: ImplicitCastExpr 0x562821878d88 <lundump.c:164:6, col:14> 'int' <IntegralCast>
`-UnaryOperator 0x562821878d48 <col:6, col:14> 'unsigned short' prefix '++'
  `-MemberExpr 0x562821878d10 <col:8, col:14> 'unsigned short' lvalue ->nCcalls 0x5628218478e0
    `-ImplicitCastExpr 0x562821878cf8 <col:8, col:11> 'lua_State *' <LValueToRValue>
      `-MemberExpr 0x562821878cc0 <col:8, col:11> 'lua_State *' lvalue ->L 0x562821866780
        `-ImplicitCastExpr 0x562821878ca8 <col:8> 'LoadState *' <LValueToRValue>
          `-DeclRefExpr 0x562821878c80 <col:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
[B10.7] (ImplicitCastExpr, IntegralCast, int)
   9: IntegerLiteral 0x562821878d68 <./luaconf.h:468:25> 'int' 200
200
  10: BinaryOperator 0x562821878da0 <lundump.c:164:6, ./luaconf.h:468:25> 'int' '>'
|-ImplicitCastExpr 0x562821878d88 <lundump.c:164:6, col:14> 'int' <IntegralCast>
| `-UnaryOperator 0x562821878d48 <col:6, col:14> 'unsigned short' prefix '++'
|   `-MemberExpr 0x562821878d10 <col:8, col:14> 'unsigned short' lvalue ->nCcalls 0x5628218478e0
|     `-ImplicitCastExpr 0x562821878cf8 <col:8, col:11> 'lua_State *' <LValueToRValue>
|       `-MemberExpr 0x562821878cc0 <col:8, col:11> 'lua_State *' lvalue ->L 0x562821866780
|         `-ImplicitCastExpr 0x562821878ca8 <col:8> 'LoadState *' <LValueToRValue>
|           `-DeclRefExpr 0x562821878c80 <col:8> 'LoadState *' lvalue ParmVar 0x562821878a48 'S' 'LoadState *'
`-IntegerLiteral 0x562821878d68 <./luaconf.h:468:25> 'int' 200
[B10.8] > [B10.9]
   T: if [B10.10]
   Preds (1): B11
   Succs (2): B9 B8

 [B0 (EXIT)]
   Preds (1): B1
