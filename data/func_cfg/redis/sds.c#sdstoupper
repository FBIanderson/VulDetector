void sdstoupper(sds s)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x55e83d11b330 <sds.c:762:26> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
   2: UnaryOperator 0x55e83d11b358 <sds.c:762:26, col:27> 'int' postfix '++'
`-DeclRefExpr 0x55e83d11b330 <col:26> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B1.1]++
   Preds (1): B2
   Succs (1): B12

 [B2]
   1: DeclRefExpr 0x55e83d11c0f0 </usr/include/ctype.h:170:7> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
__res
   2: ImplicitCastExpr 0x55e83d11c118 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11c0f0 <col:7> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   3: StmtExpr 0x55e83d11c158 </usr/include/ctype.h:157:4, line:170:15> 'int'
`-CompoundStmt 0x55e83d11c130 <line:157:5, line:170:14>
  |-DeclStmt 0x55e83d11b498 <line:157:7, col:16>col:11
  | `-VarDecl 0x55e83d11b438 <col:7, col:11> col:11 used __res 'int'
  |-IfStmt 0x55e83d11c0b8 <line:158:7, line:169:23>
  | |-<<<NULL>>>
  | |-<<<NULL>>>
  | |-BinaryOperator 0x55e83d11b5f0 <line:158:11, col:24> 'int' '>'
  | | |-UnaryExprOrTypeTraitExpr 0x55e83d11b598 <col:11, col:20> 'unsigned long' sizeof
  | | | `-ParenExpr 0x55e83d11b578 <col:18, col:20> 'char' lvalue
  | | |   `-ArraySubscriptExpr 0x55e83d11b550 <sds.c:762:46, col:49> 'char' lvalue
  | | |     |-ImplicitCastExpr 0x55e83d11b520 <col:46> 'sds':'char *' <LValueToRValue>
  | | |     | `-DeclRefExpr 0x55e83d11b4b0 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
  | | |     `-ImplicitCastExpr 0x55e83d11b538 <col:48> 'int' <LValueToRValue>
  | | |       `-DeclRefExpr 0x55e83d11b4d8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
  | | `-ImplicitCastExpr 0x55e83d11b5d8 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
  | |   `-IntegerLiteral 0x55e83d11b5b8 <col:24> 'int' 1
  | |-CompoundStmt 0x55e83d11be00 <line:159:2, line:167:2>
  | | `-IfStmt 0x55e83d11bdc8 <line:160:4, line:221:71>
  | |   |-<<<NULL>>>
  | |   |-<<<NULL>>>
  | |   |-CallExpr 0x55e83d11b700 <line:160:8, col:31> 'int'
  | |   | |-ImplicitCastExpr 0x55e83d11b6e8 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
  | |   | | `-DeclRefExpr 0x55e83d11b618 <col:8> '<builtin fn type>' Function 0x55e83d119498 '__builtin_constant_p' 'int ()'
  | |   | `-ArraySubscriptExpr 0x55e83d11b6c0 <sds.c:762:46, col:49> 'char' lvalue
  | |   |   |-ImplicitCastExpr 0x55e83d11b690 <col:46> 'sds':'char *' <LValueToRValue>
  | |   |   | `-DeclRefExpr 0x55e83d11b640 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
  | |   |   `-ImplicitCastExpr 0x55e83d11b6a8 <col:48> 'int' <LValueToRValue>
  | |   |     `-DeclRefExpr 0x55e83d11b668 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
  | |   |-CompoundStmt 0x55e83d11bc10 </usr/include/ctype.h:161:6, line:164:6>
  | |   | |-DeclStmt 0x55e83d11b8a0 <line:162:8, col:21>col:12
  | |   | | `-VarDecl 0x55e83d11b748 <col:8, col:20> col:12 used __c 'int' cinit
  | |   | |   `-ImplicitCastExpr 0x55e83d11b888 <col:18, col:20> 'int' <IntegralCast>
  | |   | |     `-ImplicitCastExpr 0x55e83d11b870 <col:18, col:20> 'char' <LValueToRValue>
  | |   | |       `-ParenExpr 0x55e83d11b850 <col:18, col:20> 'char' lvalue
  | |   | |         `-ArraySubscriptExpr 0x55e83d11b828 <sds.c:762:46, col:49> 'char' lvalue
  | |   | |           |-ImplicitCastExpr 0x55e83d11b7f8 <col:46> 'sds':'char *' <LValueToRValue>
  | |   | |           | `-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
  | |   | |           `-ImplicitCastExpr 0x55e83d11b810 <col:48> 'int' <LValueToRValue>
  | |   | |             `-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
  | |   | `-BinaryOperator 0x55e83d11bbe8 </usr/include/ctype.h:163:8, col:55> 'int' '='
  | |   |   |-DeclRefExpr 0x55e83d11b8b8 <col:8> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
  | |   |   `-ConditionalOperator 0x55e83d11bbb8 <col:16, col:55> 'int'
  | |   |     |-BinaryOperator 0x55e83d11ba10 <col:16, col:36> 'int' '||'
  | |   |     | |-BinaryOperator 0x55e83d11b960 <col:16, col:23> 'int' '<'
  | |   |     | | |-ImplicitCastExpr 0x55e83d11b948 <col:16> 'int' <LValueToRValue>
  | |   |     | | | `-DeclRefExpr 0x55e83d11b8e0 <col:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
  | |   |     | | `-UnaryOperator 0x55e83d11b928 <col:22, col:23> 'int' prefix '-'
  | |   |     | |   `-IntegerLiteral 0x55e83d11b908 <col:23> 'int' 128
  | |   |     | `-BinaryOperator 0x55e83d11b9e8 <col:30, col:36> 'int' '>'
  | |   |     |   |-ImplicitCastExpr 0x55e83d11b9d0 <col:30> 'int' <LValueToRValue>
  | |   |     |   | `-DeclRefExpr 0x55e83d11b988 <col:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
  | |   |     |   `-IntegerLiteral 0x55e83d11b9b0 <col:36> 'int' 255
  | |   |     |-ImplicitCastExpr 0x55e83d11bb88 <col:42> 'int' <LValueToRValue>
  | |   |     | `-DeclRefExpr 0x55e83d11ba38 <col:42> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
  | |   |     `-ImplicitCastExpr 0x55e83d11bba0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
  | |   |       `-ArraySubscriptExpr 0x55e83d11bb60 <col:48, col:55> 'const __int32_t':'const int' lvalue
  | |   |         |-ImplicitCastExpr 0x55e83d11bb30 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
  | |   |         | `-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
  | |   |         |   `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
  | |   |         |     `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
  | |   |         |       `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  | |   |         |         `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
  | |   |         `-ImplicitCastExpr 0x55e83d11bb48 <line:163:52> 'int' <LValueToRValue>
  | |   |           `-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
  | |   `-BinaryOperator 0x55e83d11bda0 <line:166:6, line:221:71> 'int' '='
  | |     |-DeclRefExpr 0x55e83d11bc30 <line:166:6> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
  | |     `-CallExpr 0x55e83d11bd40 <line:221:35, col:71> 'int'
  | |       |-ImplicitCastExpr 0x55e83d11bd28 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
  | |       | `-DeclRefExpr 0x55e83d11bc58 <col:35> 'int (int)' Function 0x55e83d0bce08 'toupper' 'int (int)'
  | |       `-ImplicitCastExpr 0x55e83d11bd88 <sds.c:762:46, col:49> 'int' <IntegralCast>
  | |         `-ImplicitCastExpr 0x55e83d11bd70 <col:46, col:49> 'char' <LValueToRValue>
  | |           `-ArraySubscriptExpr 0x55e83d11bd00 <col:46, col:49> 'char' lvalue
  | |             |-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
  | |             | `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
  | |             `-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
  | |               `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
  | `-BinaryOperator 0x55e83d11c090 </usr/include/ctype.h:169:2, col:23> 'int' '='
  |   |-DeclRefExpr 0x55e83d11be18 <col:2> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
  |   `-ImplicitCastExpr 0x55e83d11c078 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
  |     `-ArraySubscriptExpr 0x55e83d11c050 <col:10, col:23> 'const __int32_t':'const int' lvalue
  |       |-ImplicitCastExpr 0x55e83d11c038 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
  |       | `-ParenExpr 0x55e83d11bec8 <col:10, col:12> 'const __int32_t *' lvalue
  |       |   `-UnaryOperator 0x55e83d11bea8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |       |     `-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
  |       |       `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |       |         `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
  |       `-CStyleCastExpr 0x55e83d11c010 <line:169:14, col:22> 'int' <IntegralCast>
  |         `-ImplicitCastExpr 0x55e83d11bff8 <col:20, col:22> 'char' <LValueToRValue>
  |           `-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
  |             `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
  |               |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
  |               | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
  |               `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
  |                 `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
  `-ImplicitCastExpr 0x55e83d11c118 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11c0f0 <col:7> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
({ ... ; [B2.2] })
   4: ImplicitCastExpr 0x55e83d11c1b8 </usr/include/ctype.h:156:3, line:170:16> 'char' <IntegralCast>
`-ParenExpr 0x55e83d11c198 <line:156:3, line:170:16> 'int'
  `-UnaryOperator 0x55e83d11c178 <line:156:4, line:170:15> 'int' prefix '__extension__'
    `-StmtExpr 0x55e83d11c158 <line:157:4, line:170:15> 'int'
      `-CompoundStmt 0x55e83d11c130 <line:157:5, line:170:14>
        |-DeclStmt 0x55e83d11b498 <line:157:7, col:16>col:11
        | `-VarDecl 0x55e83d11b438 <col:7, col:11> col:11 used __res 'int'
        |-IfStmt 0x55e83d11c0b8 <line:158:7, line:169:23>
        | |-<<<NULL>>>
        | |-<<<NULL>>>
        | |-BinaryOperator 0x55e83d11b5f0 <line:158:11, col:24> 'int' '>'
        | | |-UnaryExprOrTypeTraitExpr 0x55e83d11b598 <col:11, col:20> 'unsigned long' sizeof
        | | | `-ParenExpr 0x55e83d11b578 <col:18, col:20> 'char' lvalue
        | | |   `-ArraySubscriptExpr 0x55e83d11b550 <sds.c:762:46, col:49> 'char' lvalue
        | | |     |-ImplicitCastExpr 0x55e83d11b520 <col:46> 'sds':'char *' <LValueToRValue>
        | | |     | `-DeclRefExpr 0x55e83d11b4b0 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
        | | |     `-ImplicitCastExpr 0x55e83d11b538 <col:48> 'int' <LValueToRValue>
        | | |       `-DeclRefExpr 0x55e83d11b4d8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
        | | `-ImplicitCastExpr 0x55e83d11b5d8 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
        | |   `-IntegerLiteral 0x55e83d11b5b8 <col:24> 'int' 1
        | |-CompoundStmt 0x55e83d11be00 <line:159:2, line:167:2>
        | | `-IfStmt 0x55e83d11bdc8 <line:160:4, line:221:71>
        | |   |-<<<NULL>>>
        | |   |-<<<NULL>>>
        | |   |-CallExpr 0x55e83d11b700 <line:160:8, col:31> 'int'
        | |   | |-ImplicitCastExpr 0x55e83d11b6e8 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
        | |   | | `-DeclRefExpr 0x55e83d11b618 <col:8> '<builtin fn type>' Function 0x55e83d119498 '__builtin_constant_p' 'int ()'
        | |   | `-ArraySubscriptExpr 0x55e83d11b6c0 <sds.c:762:46, col:49> 'char' lvalue
        | |   |   |-ImplicitCastExpr 0x55e83d11b690 <col:46> 'sds':'char *' <LValueToRValue>
        | |   |   | `-DeclRefExpr 0x55e83d11b640 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
        | |   |   `-ImplicitCastExpr 0x55e83d11b6a8 <col:48> 'int' <LValueToRValue>
        | |   |     `-DeclRefExpr 0x55e83d11b668 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
        | |   |-CompoundStmt 0x55e83d11bc10 </usr/include/ctype.h:161:6, line:164:6>
        | |   | |-DeclStmt 0x55e83d11b8a0 <line:162:8, col:21>col:12
        | |   | | `-VarDecl 0x55e83d11b748 <col:8, col:20> col:12 used __c 'int' cinit
        | |   | |   `-ImplicitCastExpr 0x55e83d11b888 <col:18, col:20> 'int' <IntegralCast>
        | |   | |     `-ImplicitCastExpr 0x55e83d11b870 <col:18, col:20> 'char' <LValueToRValue>
        | |   | |       `-ParenExpr 0x55e83d11b850 <col:18, col:20> 'char' lvalue
        | |   | |         `-ArraySubscriptExpr 0x55e83d11b828 <sds.c:762:46, col:49> 'char' lvalue
        | |   | |           |-ImplicitCastExpr 0x55e83d11b7f8 <col:46> 'sds':'char *' <LValueToRValue>
        | |   | |           | `-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
        | |   | |           `-ImplicitCastExpr 0x55e83d11b810 <col:48> 'int' <LValueToRValue>
        | |   | |             `-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
        | |   | `-BinaryOperator 0x55e83d11bbe8 </usr/include/ctype.h:163:8, col:55> 'int' '='
        | |   |   |-DeclRefExpr 0x55e83d11b8b8 <col:8> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
        | |   |   `-ConditionalOperator 0x55e83d11bbb8 <col:16, col:55> 'int'
        | |   |     |-BinaryOperator 0x55e83d11ba10 <col:16, col:36> 'int' '||'
        | |   |     | |-BinaryOperator 0x55e83d11b960 <col:16, col:23> 'int' '<'
        | |   |     | | |-ImplicitCastExpr 0x55e83d11b948 <col:16> 'int' <LValueToRValue>
        | |   |     | | | `-DeclRefExpr 0x55e83d11b8e0 <col:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
        | |   |     | | `-UnaryOperator 0x55e83d11b928 <col:22, col:23> 'int' prefix '-'
        | |   |     | |   `-IntegerLiteral 0x55e83d11b908 <col:23> 'int' 128
        | |   |     | `-BinaryOperator 0x55e83d11b9e8 <col:30, col:36> 'int' '>'
        | |   |     |   |-ImplicitCastExpr 0x55e83d11b9d0 <col:30> 'int' <LValueToRValue>
        | |   |     |   | `-DeclRefExpr 0x55e83d11b988 <col:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
        | |   |     |   `-IntegerLiteral 0x55e83d11b9b0 <col:36> 'int' 255
        | |   |     |-ImplicitCastExpr 0x55e83d11bb88 <col:42> 'int' <LValueToRValue>
        | |   |     | `-DeclRefExpr 0x55e83d11ba38 <col:42> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
        | |   |     `-ImplicitCastExpr 0x55e83d11bba0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
        | |   |       `-ArraySubscriptExpr 0x55e83d11bb60 <col:48, col:55> 'const __int32_t':'const int' lvalue
        | |   |         |-ImplicitCastExpr 0x55e83d11bb30 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
        | |   |         | `-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
        | |   |         |   `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
        | |   |         |     `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
        | |   |         |       `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
        | |   |         |         `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
        | |   |         `-ImplicitCastExpr 0x55e83d11bb48 <line:163:52> 'int' <LValueToRValue>
        | |   |           `-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
        | |   `-BinaryOperator 0x55e83d11bda0 <line:166:6, line:221:71> 'int' '='
        | |     |-DeclRefExpr 0x55e83d11bc30 <line:166:6> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
        | |     `-CallExpr 0x55e83d11bd40 <line:221:35, col:71> 'int'
        | |       |-ImplicitCastExpr 0x55e83d11bd28 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
        | |       | `-DeclRefExpr 0x55e83d11bc58 <col:35> 'int (int)' Function 0x55e83d0bce08 'toupper' 'int (int)'
        | |       `-ImplicitCastExpr 0x55e83d11bd88 <sds.c:762:46, col:49> 'int' <IntegralCast>
        | |         `-ImplicitCastExpr 0x55e83d11bd70 <col:46, col:49> 'char' <LValueToRValue>
        | |           `-ArraySubscriptExpr 0x55e83d11bd00 <col:46, col:49> 'char' lvalue
        | |             |-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
        | |             | `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
        | |             `-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
        | |               `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
        | `-BinaryOperator 0x55e83d11c090 </usr/include/ctype.h:169:2, col:23> 'int' '='
        |   |-DeclRefExpr 0x55e83d11be18 <col:2> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
        |   `-ImplicitCastExpr 0x55e83d11c078 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
        |     `-ArraySubscriptExpr 0x55e83d11c050 <col:10, col:23> 'const __int32_t':'const int' lvalue
        |       |-ImplicitCastExpr 0x55e83d11c038 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
        |       | `-ParenExpr 0x55e83d11bec8 <col:10, col:12> 'const __int32_t *' lvalue
        |       |   `-UnaryOperator 0x55e83d11bea8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
        |       |     `-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
        |       |       `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
        |       |         `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
        |       `-CStyleCastExpr 0x55e83d11c010 <line:169:14, col:22> 'int' <IntegralCast>
        |         `-ImplicitCastExpr 0x55e83d11bff8 <col:20, col:22> 'char' <LValueToRValue>
        |           `-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
        |             `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
        |               |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
        |               | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
        |               `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
        |                 `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
        `-ImplicitCastExpr 0x55e83d11c118 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55e83d11c0f0 <col:7> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
(__extension__ [B2.3]) (ImplicitCastExpr, IntegralCast, char)
   5: DeclRefExpr 0x55e83d11b378 <sds.c:762:31> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
s
   6: ImplicitCastExpr 0x55e83d11b3c8 <sds.c:762:31> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b378 <col:31> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B2.5] (ImplicitCastExpr, LValueToRValue, sds)
   7: DeclRefExpr 0x55e83d11b3a0 <sds.c:762:33> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
   8: ImplicitCastExpr 0x55e83d11b3e0 <sds.c:762:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b3a0 <col:33> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B2.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55e83d11b3f8 <sds.c:762:31, col:34> 'char' lvalue
|-ImplicitCastExpr 0x55e83d11b3c8 <col:31> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11b378 <col:31> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d11b3e0 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11b3a0 <col:33> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B2.6][[B2.8]]
  10: BinaryOperator 0x55e83d11c1d0 <sds.c:762:31, /usr/include/ctype.h:170:16> 'char' '='
|-ArraySubscriptExpr 0x55e83d11b3f8 <sds.c:762:31, col:34> 'char' lvalue
| |-ImplicitCastExpr 0x55e83d11b3c8 <col:31> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d11b378 <col:31> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
| `-ImplicitCastExpr 0x55e83d11b3e0 <col:33> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d11b3a0 <col:33> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
`-ImplicitCastExpr 0x55e83d11c1b8 </usr/include/ctype.h:156:3, line:170:16> 'char' <IntegralCast>
  `-ParenExpr 0x55e83d11c198 <line:156:3, line:170:16> 'int'
    `-UnaryOperator 0x55e83d11c178 <line:156:4, line:170:15> 'int' prefix '__extension__'
      `-StmtExpr 0x55e83d11c158 <line:157:4, line:170:15> 'int'
        `-CompoundStmt 0x55e83d11c130 <line:157:5, line:170:14>
          |-DeclStmt 0x55e83d11b498 <line:157:7, col:16>col:11
          | `-VarDecl 0x55e83d11b438 <col:7, col:11> col:11 used __res 'int'
          |-IfStmt 0x55e83d11c0b8 <line:158:7, line:169:23>
          | |-<<<NULL>>>
          | |-<<<NULL>>>
          | |-BinaryOperator 0x55e83d11b5f0 <line:158:11, col:24> 'int' '>'
          | | |-UnaryExprOrTypeTraitExpr 0x55e83d11b598 <col:11, col:20> 'unsigned long' sizeof
          | | | `-ParenExpr 0x55e83d11b578 <col:18, col:20> 'char' lvalue
          | | |   `-ArraySubscriptExpr 0x55e83d11b550 <sds.c:762:46, col:49> 'char' lvalue
          | | |     |-ImplicitCastExpr 0x55e83d11b520 <col:46> 'sds':'char *' <LValueToRValue>
          | | |     | `-DeclRefExpr 0x55e83d11b4b0 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
          | | |     `-ImplicitCastExpr 0x55e83d11b538 <col:48> 'int' <LValueToRValue>
          | | |       `-DeclRefExpr 0x55e83d11b4d8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
          | | `-ImplicitCastExpr 0x55e83d11b5d8 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
          | |   `-IntegerLiteral 0x55e83d11b5b8 <col:24> 'int' 1
          | |-CompoundStmt 0x55e83d11be00 <line:159:2, line:167:2>
          | | `-IfStmt 0x55e83d11bdc8 <line:160:4, line:221:71>
          | |   |-<<<NULL>>>
          | |   |-<<<NULL>>>
          | |   |-CallExpr 0x55e83d11b700 <line:160:8, col:31> 'int'
          | |   | |-ImplicitCastExpr 0x55e83d11b6e8 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
          | |   | | `-DeclRefExpr 0x55e83d11b618 <col:8> '<builtin fn type>' Function 0x55e83d119498 '__builtin_constant_p' 'int ()'
          | |   | `-ArraySubscriptExpr 0x55e83d11b6c0 <sds.c:762:46, col:49> 'char' lvalue
          | |   |   |-ImplicitCastExpr 0x55e83d11b690 <col:46> 'sds':'char *' <LValueToRValue>
          | |   |   | `-DeclRefExpr 0x55e83d11b640 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
          | |   |   `-ImplicitCastExpr 0x55e83d11b6a8 <col:48> 'int' <LValueToRValue>
          | |   |     `-DeclRefExpr 0x55e83d11b668 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
          | |   |-CompoundStmt 0x55e83d11bc10 </usr/include/ctype.h:161:6, line:164:6>
          | |   | |-DeclStmt 0x55e83d11b8a0 <line:162:8, col:21>col:12
          | |   | | `-VarDecl 0x55e83d11b748 <col:8, col:20> col:12 used __c 'int' cinit
          | |   | |   `-ImplicitCastExpr 0x55e83d11b888 <col:18, col:20> 'int' <IntegralCast>
          | |   | |     `-ImplicitCastExpr 0x55e83d11b870 <col:18, col:20> 'char' <LValueToRValue>
          | |   | |       `-ParenExpr 0x55e83d11b850 <col:18, col:20> 'char' lvalue
          | |   | |         `-ArraySubscriptExpr 0x55e83d11b828 <sds.c:762:46, col:49> 'char' lvalue
          | |   | |           |-ImplicitCastExpr 0x55e83d11b7f8 <col:46> 'sds':'char *' <LValueToRValue>
          | |   | |           | `-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
          | |   | |           `-ImplicitCastExpr 0x55e83d11b810 <col:48> 'int' <LValueToRValue>
          | |   | |             `-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
          | |   | `-BinaryOperator 0x55e83d11bbe8 </usr/include/ctype.h:163:8, col:55> 'int' '='
          | |   |   |-DeclRefExpr 0x55e83d11b8b8 <col:8> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
          | |   |   `-ConditionalOperator 0x55e83d11bbb8 <col:16, col:55> 'int'
          | |   |     |-BinaryOperator 0x55e83d11ba10 <col:16, col:36> 'int' '||'
          | |   |     | |-BinaryOperator 0x55e83d11b960 <col:16, col:23> 'int' '<'
          | |   |     | | |-ImplicitCastExpr 0x55e83d11b948 <col:16> 'int' <LValueToRValue>
          | |   |     | | | `-DeclRefExpr 0x55e83d11b8e0 <col:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
          | |   |     | | `-UnaryOperator 0x55e83d11b928 <col:22, col:23> 'int' prefix '-'
          | |   |     | |   `-IntegerLiteral 0x55e83d11b908 <col:23> 'int' 128
          | |   |     | `-BinaryOperator 0x55e83d11b9e8 <col:30, col:36> 'int' '>'
          | |   |     |   |-ImplicitCastExpr 0x55e83d11b9d0 <col:30> 'int' <LValueToRValue>
          | |   |     |   | `-DeclRefExpr 0x55e83d11b988 <col:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
          | |   |     |   `-IntegerLiteral 0x55e83d11b9b0 <col:36> 'int' 255
          | |   |     |-ImplicitCastExpr 0x55e83d11bb88 <col:42> 'int' <LValueToRValue>
          | |   |     | `-DeclRefExpr 0x55e83d11ba38 <col:42> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
          | |   |     `-ImplicitCastExpr 0x55e83d11bba0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
          | |   |       `-ArraySubscriptExpr 0x55e83d11bb60 <col:48, col:55> 'const __int32_t':'const int' lvalue
          | |   |         |-ImplicitCastExpr 0x55e83d11bb30 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
          | |   |         | `-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
          | |   |         |   `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
          | |   |         |     `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
          | |   |         |       `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
          | |   |         |         `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
          | |   |         `-ImplicitCastExpr 0x55e83d11bb48 <line:163:52> 'int' <LValueToRValue>
          | |   |           `-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
          | |   `-BinaryOperator 0x55e83d11bda0 <line:166:6, line:221:71> 'int' '='
          | |     |-DeclRefExpr 0x55e83d11bc30 <line:166:6> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
          | |     `-CallExpr 0x55e83d11bd40 <line:221:35, col:71> 'int'
          | |       |-ImplicitCastExpr 0x55e83d11bd28 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
          | |       | `-DeclRefExpr 0x55e83d11bc58 <col:35> 'int (int)' Function 0x55e83d0bce08 'toupper' 'int (int)'
          | |       `-ImplicitCastExpr 0x55e83d11bd88 <sds.c:762:46, col:49> 'int' <IntegralCast>
          | |         `-ImplicitCastExpr 0x55e83d11bd70 <col:46, col:49> 'char' <LValueToRValue>
          | |           `-ArraySubscriptExpr 0x55e83d11bd00 <col:46, col:49> 'char' lvalue
          | |             |-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
          | |             | `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
          | |             `-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
          | |               `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
          | `-BinaryOperator 0x55e83d11c090 </usr/include/ctype.h:169:2, col:23> 'int' '='
          |   |-DeclRefExpr 0x55e83d11be18 <col:2> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
          |   `-ImplicitCastExpr 0x55e83d11c078 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
          |     `-ArraySubscriptExpr 0x55e83d11c050 <col:10, col:23> 'const __int32_t':'const int' lvalue
          |       |-ImplicitCastExpr 0x55e83d11c038 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
          |       | `-ParenExpr 0x55e83d11bec8 <col:10, col:12> 'const __int32_t *' lvalue
          |       |   `-UnaryOperator 0x55e83d11bea8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
          |       |     `-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
          |       |       `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
          |       |         `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
          |       `-CStyleCastExpr 0x55e83d11c010 <line:169:14, col:22> 'int' <IntegralCast>
          |         `-ImplicitCastExpr 0x55e83d11bff8 <col:20, col:22> 'char' <LValueToRValue>
          |           `-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
          |             `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
          |               |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
          |               | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
          |               `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
          |                 `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
          `-ImplicitCastExpr 0x55e83d11c118 </usr/include/ctype.h:170:7> 'int' <LValueToRValue>
            `-DeclRefExpr 0x55e83d11c0f0 <col:7> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
[B2.9] = [B2.4]
   Preds (3): B3 B4 B5
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55e83d11be40 </usr/include/ctype.h:221:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
__ctype_toupper_loc
   2: ImplicitCastExpr 0x55e83d11be68 </usr/include/ctype.h:221:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, const __int32_t **(*)(void))
   3: CallExpr 0x55e83d11be80 </usr/include/ctype.h:221:45, col:66> 'const __int32_t **'
`-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
[B3.2]()
   4: UnaryOperator 0x55e83d11bea8 </usr/include/ctype.h:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
`-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
  `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
*[B3.3]
   5: ImplicitCastExpr 0x55e83d11c038 </usr/include/ctype.h:169:10, col:12> 'const __int32_t *' <LValueToRValue>
`-ParenExpr 0x55e83d11bec8 <col:10, col:12> 'const __int32_t *' lvalue
  `-UnaryOperator 0x55e83d11bea8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
    `-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
      `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
([B3.4]) (ImplicitCastExpr, LValueToRValue, const __int32_t *)
   6: DeclRefExpr 0x55e83d11bee8 <sds.c:762:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
s
   7: ImplicitCastExpr 0x55e83d11bf38 <sds.c:762:46> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B3.6] (ImplicitCastExpr, LValueToRValue, sds)
   8: DeclRefExpr 0x55e83d11bf10 <sds.c:762:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
   9: ImplicitCastExpr 0x55e83d11bf50 <sds.c:762:48> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B3.8] (ImplicitCastExpr, LValueToRValue, int)
  10: ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
|-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B3.7][[B3.9]]
  11: ImplicitCastExpr 0x55e83d11bff8 </usr/include/ctype.h:169:20, col:22> 'char' <LValueToRValue>
`-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
  `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
    `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
([B3.10]) (ImplicitCastExpr, LValueToRValue, char)
  12: CStyleCastExpr 0x55e83d11c010 </usr/include/ctype.h:169:14, col:22> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d11bff8 <col:20, col:22> 'char' <LValueToRValue>
  `-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
    `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
      |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
      `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
(int)[B3.11] (CStyleCastExpr, IntegralCast, int)
  13: ArraySubscriptExpr 0x55e83d11c050 </usr/include/ctype.h:169:10, col:23> 'const __int32_t':'const int' lvalue
|-ImplicitCastExpr 0x55e83d11c038 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
| `-ParenExpr 0x55e83d11bec8 <col:10, col:12> 'const __int32_t *' lvalue
|   `-UnaryOperator 0x55e83d11bea8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
|     `-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
|       `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
`-CStyleCastExpr 0x55e83d11c010 <line:169:14, col:22> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d11bff8 <col:20, col:22> 'char' <LValueToRValue>
    `-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
      `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
        |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
        `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B3.5][[B3.12]]
  14: ImplicitCastExpr 0x55e83d11c078 </usr/include/ctype.h:169:10, col:23> '__int32_t':'int' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d11c050 <col:10, col:23> 'const __int32_t':'const int' lvalue
  |-ImplicitCastExpr 0x55e83d11c038 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
  | `-ParenExpr 0x55e83d11bec8 <col:10, col:12> 'const __int32_t *' lvalue
  |   `-UnaryOperator 0x55e83d11bea8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |     `-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
  |       `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
  `-CStyleCastExpr 0x55e83d11c010 <line:169:14, col:22> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d11bff8 <col:20, col:22> 'char' <LValueToRValue>
      `-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
        `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
          |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
          | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
          `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
            `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B3.13] (ImplicitCastExpr, LValueToRValue, __int32_t)
  15: DeclRefExpr 0x55e83d11be18 </usr/include/ctype.h:169:2> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
__res
  16: BinaryOperator 0x55e83d11c090 </usr/include/ctype.h:169:2, col:23> 'int' '='
|-DeclRefExpr 0x55e83d11be18 <col:2> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
`-ImplicitCastExpr 0x55e83d11c078 <col:10, col:23> '__int32_t':'int' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d11c050 <col:10, col:23> 'const __int32_t':'const int' lvalue
    |-ImplicitCastExpr 0x55e83d11c038 <col:10, col:12> 'const __int32_t *' <LValueToRValue>
    | `-ParenExpr 0x55e83d11bec8 <col:10, col:12> 'const __int32_t *' lvalue
    |   `-UnaryOperator 0x55e83d11bea8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
    |     `-CallExpr 0x55e83d11be80 <col:45, col:66> 'const __int32_t **'
    |       `-ImplicitCastExpr 0x55e83d11be68 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55e83d11be40 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
    `-CStyleCastExpr 0x55e83d11c010 <line:169:14, col:22> 'int' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d11bff8 <col:20, col:22> 'char' <LValueToRValue>
        `-ParenExpr 0x55e83d11bfd8 <col:20, col:22> 'char' lvalue
          `-ArraySubscriptExpr 0x55e83d11bf68 <sds.c:762:46, col:49> 'char' lvalue
            |-ImplicitCastExpr 0x55e83d11bf38 <col:46> 'sds':'char *' <LValueToRValue>
            | `-DeclRefExpr 0x55e83d11bee8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
            `-ImplicitCastExpr 0x55e83d11bf50 <col:48> 'int' <LValueToRValue>
              `-DeclRefExpr 0x55e83d11bf10 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B3.15] = [B3.14]
   Preds (1): B11
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55e83d11bc58 </usr/include/ctype.h:221:35> 'int (int)' Function 0x55e83d0bce08 'toupper' 'int (int)'
toupper
   2: ImplicitCastExpr 0x55e83d11bd28 </usr/include/ctype.h:221:35> 'int (*)(int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d11bc58 <col:35> 'int (int)' Function 0x55e83d0bce08 'toupper' 'int (int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int))
   3: DeclRefExpr 0x55e83d11bc80 <sds.c:762:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d11bcd0 <sds.c:762:46> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d11bca8 <sds.c:762:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
   6: ImplicitCastExpr 0x55e83d11bce8 <sds.c:762:48> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55e83d11bd00 <sds.c:762:46, col:49> 'char' lvalue
|-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B4.4][[B4.6]]
   8: ImplicitCastExpr 0x55e83d11bd70 <sds.c:762:46, col:49> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d11bd00 <col:46, col:49> 'char' lvalue
  |-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B4.7] (ImplicitCastExpr, LValueToRValue, char)
   9: ImplicitCastExpr 0x55e83d11bd88 <sds.c:762:46, col:49> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d11bd70 <col:46, col:49> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d11bd00 <col:46, col:49> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
    `-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B4.8] (ImplicitCastExpr, IntegralCast, int)
  10: CallExpr 0x55e83d11bd40 </usr/include/ctype.h:221:35, col:71> 'int'
|-ImplicitCastExpr 0x55e83d11bd28 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d11bc58 <col:35> 'int (int)' Function 0x55e83d0bce08 'toupper' 'int (int)'
`-ImplicitCastExpr 0x55e83d11bd88 <sds.c:762:46, col:49> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d11bd70 <col:46, col:49> 'char' <LValueToRValue>
    `-ArraySubscriptExpr 0x55e83d11bd00 <col:46, col:49> 'char' lvalue
      |-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
      `-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B4.2]([B4.9])
  11: DeclRefExpr 0x55e83d11bc30 </usr/include/ctype.h:166:6> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
__res
  12: BinaryOperator 0x55e83d11bda0 </usr/include/ctype.h:166:6, line:221:71> 'int' '='
|-DeclRefExpr 0x55e83d11bc30 <line:166:6> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
`-CallExpr 0x55e83d11bd40 <line:221:35, col:71> 'int'
  |-ImplicitCastExpr 0x55e83d11bd28 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d11bc58 <col:35> 'int (int)' Function 0x55e83d0bce08 'toupper' 'int (int)'
  `-ImplicitCastExpr 0x55e83d11bd88 <sds.c:762:46, col:49> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d11bd70 <col:46, col:49> 'char' <LValueToRValue>
      `-ArraySubscriptExpr 0x55e83d11bd00 <col:46, col:49> 'char' lvalue
        |-ImplicitCastExpr 0x55e83d11bcd0 <col:46> 'sds':'char *' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d11bc80 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
        `-ImplicitCastExpr 0x55e83d11bce8 <col:48> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55e83d11bca8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B4.11] = [B4.10]
   Preds (1): B10
   Succs (1): B2

 [B5]
   1: ConditionalOperator 0x55e83d11bbb8 </usr/include/ctype.h:163:16, col:55> 'int'
|-BinaryOperator 0x55e83d11ba10 <col:16, col:36> 'int' '||'
| |-BinaryOperator 0x55e83d11b960 <col:16, col:23> 'int' '<'
| | |-ImplicitCastExpr 0x55e83d11b948 <col:16> 'int' <LValueToRValue>
| | | `-DeclRefExpr 0x55e83d11b8e0 <col:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
| | `-UnaryOperator 0x55e83d11b928 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x55e83d11b908 <col:23> 'int' 128
| `-BinaryOperator 0x55e83d11b9e8 <col:30, col:36> 'int' '>'
|   |-ImplicitCastExpr 0x55e83d11b9d0 <col:30> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d11b988 <col:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
|   `-IntegerLiteral 0x55e83d11b9b0 <col:36> 'int' 255
|-ImplicitCastExpr 0x55e83d11bb88 <col:42> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11ba38 <col:42> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
`-ImplicitCastExpr 0x55e83d11bba0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d11bb60 <col:48, col:55> 'const __int32_t':'const int' lvalue
    |-ImplicitCastExpr 0x55e83d11bb30 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
    | `-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
    |   `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
    |     `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
    |       `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
    `-ImplicitCastExpr 0x55e83d11bb48 <line:163:52> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B9.13] || [B8.4] ? [B6.2] : [B7.9]
   2: DeclRefExpr 0x55e83d11b8b8 </usr/include/ctype.h:163:8> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
__res
   3: BinaryOperator 0x55e83d11bbe8 </usr/include/ctype.h:163:8, col:55> 'int' '='
|-DeclRefExpr 0x55e83d11b8b8 <col:8> 'int' lvalue Var 0x55e83d11b438 '__res' 'int'
`-ConditionalOperator 0x55e83d11bbb8 <col:16, col:55> 'int'
  |-BinaryOperator 0x55e83d11ba10 <col:16, col:36> 'int' '||'
  | |-BinaryOperator 0x55e83d11b960 <col:16, col:23> 'int' '<'
  | | |-ImplicitCastExpr 0x55e83d11b948 <col:16> 'int' <LValueToRValue>
  | | | `-DeclRefExpr 0x55e83d11b8e0 <col:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
  | | `-UnaryOperator 0x55e83d11b928 <col:22, col:23> 'int' prefix '-'
  | |   `-IntegerLiteral 0x55e83d11b908 <col:23> 'int' 128
  | `-BinaryOperator 0x55e83d11b9e8 <col:30, col:36> 'int' '>'
  |   |-ImplicitCastExpr 0x55e83d11b9d0 <col:30> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x55e83d11b988 <col:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
  |   `-IntegerLiteral 0x55e83d11b9b0 <col:36> 'int' 255
  |-ImplicitCastExpr 0x55e83d11bb88 <col:42> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d11ba38 <col:42> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
  `-ImplicitCastExpr 0x55e83d11bba0 <col:48, col:55> '__int32_t':'int' <LValueToRValue>
    `-ArraySubscriptExpr 0x55e83d11bb60 <col:48, col:55> 'const __int32_t':'const int' lvalue
      |-ImplicitCastExpr 0x55e83d11bb30 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
      | `-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
      |   `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
      |     `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
      |       `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
      |         `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
      `-ImplicitCastExpr 0x55e83d11bb48 <line:163:52> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B5.2] = [B5.1]
   Preds (2): B6 B7
   Succs (1): B2

 [B6]
   1: DeclRefExpr 0x55e83d11ba38 </usr/include/ctype.h:163:42> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
__c
   2: ImplicitCastExpr 0x55e83d11bb88 </usr/include/ctype.h:163:42> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11ba38 <col:42> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   Preds (2): B8 B9
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x55e83d11ba60 </usr/include/ctype.h:221:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
__ctype_toupper_loc
   2: ImplicitCastExpr 0x55e83d11ba88 </usr/include/ctype.h:221:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, const __int32_t **(*)(void))
   3: CallExpr 0x55e83d11baa0 </usr/include/ctype.h:221:45, col:66> 'const __int32_t **'
`-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
[B7.2]()
   4: UnaryOperator 0x55e83d11bac8 </usr/include/ctype.h:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
`-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
  `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
*[B7.3]
   5: ImplicitCastExpr 0x55e83d11bb30 </usr/include/ctype.h:163:48, col:50> 'const __int32_t *' <LValueToRValue>
`-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
  `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
    `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
      `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
([B7.4]) (ImplicitCastExpr, LValueToRValue, const __int32_t *)
   6: DeclRefExpr 0x55e83d11bb08 </usr/include/ctype.h:163:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
__c
   7: ImplicitCastExpr 0x55e83d11bb48 </usr/include/ctype.h:163:52> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B7.6] (ImplicitCastExpr, LValueToRValue, int)
   8: ArraySubscriptExpr 0x55e83d11bb60 </usr/include/ctype.h:163:48, col:55> 'const __int32_t':'const int' lvalue
|-ImplicitCastExpr 0x55e83d11bb30 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
| `-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
|   `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
|     `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
|       `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
`-ImplicitCastExpr 0x55e83d11bb48 <line:163:52> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B7.5][[B7.7]]
   9: ImplicitCastExpr 0x55e83d11bba0 </usr/include/ctype.h:163:48, col:55> '__int32_t':'int' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d11bb60 <col:48, col:55> 'const __int32_t':'const int' lvalue
  |-ImplicitCastExpr 0x55e83d11bb30 <col:48, col:50> 'const __int32_t *' <LValueToRValue>
  | `-ParenExpr 0x55e83d11bae8 <col:48, col:50> 'const __int32_t *' lvalue
  |   `-UnaryOperator 0x55e83d11bac8 <line:221:44, col:66> 'const __int32_t *' lvalue prefix '*'
  |     `-CallExpr 0x55e83d11baa0 <col:45, col:66> 'const __int32_t **'
  |       `-ImplicitCastExpr 0x55e83d11ba88 <col:45> 'const __int32_t **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x55e83d11ba60 <col:45> 'const __int32_t **(void)' Function 0x55e83d0b98a8 '__ctype_toupper_loc' 'const __int32_t **(void)'
  `-ImplicitCastExpr 0x55e83d11bb48 <line:163:52> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11bb08 <col:52> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B7.8] (ImplicitCastExpr, LValueToRValue, __int32_t)
   Preds (1): B8
   Succs (1): B5

 [B8]
   1: DeclRefExpr 0x55e83d11b988 </usr/include/ctype.h:163:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
__c
   2: ImplicitCastExpr 0x55e83d11b9d0 </usr/include/ctype.h:163:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b988 <col:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d11b9b0 </usr/include/ctype.h:163:36> 'int' 255
255
   4: BinaryOperator 0x55e83d11b9e8 </usr/include/ctype.h:163:30, col:36> 'int' '>'
|-ImplicitCastExpr 0x55e83d11b9d0 <col:30> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11b988 <col:30> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
`-IntegerLiteral 0x55e83d11b9b0 <col:36> 'int' 255
[B8.2] > [B8.3]
   T: [B9.13] || [B8.4] ? ... : ...
   Preds (1): B9
   Succs (2): B6 B7

 [B9]
   1: DeclRefExpr 0x55e83d11b7a8 <sds.c:762:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
s
   2: ImplicitCastExpr 0x55e83d11b7f8 <sds.c:762:46> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B9.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: DeclRefExpr 0x55e83d11b7d0 <sds.c:762:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
   4: ImplicitCastExpr 0x55e83d11b810 <sds.c:762:48> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B9.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ArraySubscriptExpr 0x55e83d11b828 <sds.c:762:46, col:49> 'char' lvalue
|-ImplicitCastExpr 0x55e83d11b7f8 <col:46> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d11b810 <col:48> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B9.2][[B9.4]]
   6: ImplicitCastExpr 0x55e83d11b870 </usr/include/ctype.h:162:18, col:20> 'char' <LValueToRValue>
`-ParenExpr 0x55e83d11b850 <col:18, col:20> 'char' lvalue
  `-ArraySubscriptExpr 0x55e83d11b828 <sds.c:762:46, col:49> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d11b7f8 <col:46> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
    `-ImplicitCastExpr 0x55e83d11b810 <col:48> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
([B9.5]) (ImplicitCastExpr, LValueToRValue, char)
   7: ImplicitCastExpr 0x55e83d11b888 </usr/include/ctype.h:162:18, col:20> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d11b870 <col:18, col:20> 'char' <LValueToRValue>
  `-ParenExpr 0x55e83d11b850 <col:18, col:20> 'char' lvalue
    `-ArraySubscriptExpr 0x55e83d11b828 <sds.c:762:46, col:49> 'char' lvalue
      |-ImplicitCastExpr 0x55e83d11b7f8 <col:46> 'sds':'char *' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
      `-ImplicitCastExpr 0x55e83d11b810 <col:48> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B9.6] (ImplicitCastExpr, IntegralCast, int)
   8: DeclStmt 0x55e83d11b8a0 </usr/include/ctype.h:162:8, col:21>col:12
`-VarDecl 0x55e83d11b748 <col:8, col:20> col:12 used __c 'int' cinit
  `-ImplicitCastExpr 0x55e83d11b888 <col:18, col:20> 'int' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d11b870 <col:18, col:20> 'char' <LValueToRValue>
      `-ParenExpr 0x55e83d11b850 <col:18, col:20> 'char' lvalue
        `-ArraySubscriptExpr 0x55e83d11b828 <sds.c:762:46, col:49> 'char' lvalue
          |-ImplicitCastExpr 0x55e83d11b7f8 <col:46> 'sds':'char *' <LValueToRValue>
          | `-DeclRefExpr 0x55e83d11b7a8 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
          `-ImplicitCastExpr 0x55e83d11b810 <col:48> 'int' <LValueToRValue>
            `-DeclRefExpr 0x55e83d11b7d0 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
int __c = (s[j]);
   9: DeclRefExpr 0x55e83d11b8e0 </usr/include/ctype.h:163:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
__c
  10: ImplicitCastExpr 0x55e83d11b948 </usr/include/ctype.h:163:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b8e0 <col:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
[B9.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x55e83d11b908 </usr/include/ctype.h:163:23> 'int' 128
128
  12: UnaryOperator 0x55e83d11b928 </usr/include/ctype.h:163:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x55e83d11b908 <col:23> 'int' 128
-[B9.11]
  13: BinaryOperator 0x55e83d11b960 </usr/include/ctype.h:163:16, col:23> 'int' '<'
|-ImplicitCastExpr 0x55e83d11b948 <col:16> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11b8e0 <col:16> 'int' lvalue Var 0x55e83d11b748 '__c' 'int'
`-UnaryOperator 0x55e83d11b928 <col:22, col:23> 'int' prefix '-'
  `-IntegerLiteral 0x55e83d11b908 <col:23> 'int' 128
[B9.10] < [B9.12]
   T: [B9.13] || ...
   Preds (1): B10(Unreachable)
   Succs (2): B6 B8

 [B10]
   1: DeclRefExpr 0x55e83d11b618 </usr/include/ctype.h:160:8> '<builtin fn type>' Function 0x55e83d119498 '__builtin_constant_p' 'int ()'
__builtin_constant_p
   2: ImplicitCastExpr 0x55e83d11b6e8 </usr/include/ctype.h:160:8> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x55e83d11b618 <col:8> '<builtin fn type>' Function 0x55e83d119498 '__builtin_constant_p' 'int ()'
[B10.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x55e83d11b640 <sds.c:762:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d11b690 <sds.c:762:46> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b640 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B10.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d11b668 <sds.c:762:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
   6: ImplicitCastExpr 0x55e83d11b6a8 <sds.c:762:48> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b668 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B10.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55e83d11b6c0 <sds.c:762:46, col:49> 'char' lvalue
|-ImplicitCastExpr 0x55e83d11b690 <col:46> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11b640 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d11b6a8 <col:48> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11b668 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B10.4][[B10.6]]
   8: CallExpr 0x55e83d11b700 </usr/include/ctype.h:160:8, col:31> 'int'
|-ImplicitCastExpr 0x55e83d11b6e8 <col:8> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x55e83d11b618 <col:8> '<builtin fn type>' Function 0x55e83d119498 '__builtin_constant_p' 'int ()'
`-ArraySubscriptExpr 0x55e83d11b6c0 <sds.c:762:46, col:49> 'char' lvalue
  |-ImplicitCastExpr 0x55e83d11b690 <col:46> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d11b640 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d11b6a8 <col:48> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11b668 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B10.2]([B10.7])
   T: if [B10.8]
   Preds (1): B11(Unreachable)
   Succs (2): B9(Unreachable) B4

 [B11]
   1: DeclStmt 0x55e83d11b498 </usr/include/ctype.h:157:7, col:16>col:11
`-VarDecl 0x55e83d11b438 <col:7, col:11> col:11 used __res 'int'
int __res;
   2: UnaryExprOrTypeTraitExpr 0x55e83d11b598 </usr/include/ctype.h:158:11, col:20> 'unsigned long' sizeof
`-ParenExpr 0x55e83d11b578 <col:18, col:20> 'char' lvalue
  `-ArraySubscriptExpr 0x55e83d11b550 <sds.c:762:46, col:49> 'char' lvalue
    |-ImplicitCastExpr 0x55e83d11b520 <col:46> 'sds':'char *' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d11b4b0 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
    `-ImplicitCastExpr 0x55e83d11b538 <col:48> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d11b4d8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
sizeof (s[j])
   3: IntegerLiteral 0x55e83d11b5b8 </usr/include/ctype.h:158:24> 'int' 1
1
   4: ImplicitCastExpr 0x55e83d11b5d8 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d11b5b8 <col:24> 'int' 1
[B11.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: BinaryOperator 0x55e83d11b5f0 </usr/include/ctype.h:158:11, col:24> 'int' '>'
|-UnaryExprOrTypeTraitExpr 0x55e83d11b598 <col:11, col:20> 'unsigned long' sizeof
| `-ParenExpr 0x55e83d11b578 <col:18, col:20> 'char' lvalue
|   `-ArraySubscriptExpr 0x55e83d11b550 <sds.c:762:46, col:49> 'char' lvalue
|     |-ImplicitCastExpr 0x55e83d11b520 <col:46> 'sds':'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55e83d11b4b0 <col:46> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
|     `-ImplicitCastExpr 0x55e83d11b538 <col:48> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55e83d11b4d8 <col:48> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
`-ImplicitCastExpr 0x55e83d11b5d8 </usr/include/ctype.h:158:24> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d11b5b8 <col:24> 'int' 1
[B11.2] > [B11.4]
   T: if [B11.5]
   Preds (1): B12
   Succs (2): B10(Unreachable) B3

 [B12]
   1: DeclRefExpr 0x55e83d11b288 <sds.c:762:17> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
   2: ImplicitCastExpr 0x55e83d11b2d8 <sds.c:762:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b288 <col:17> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
[B12.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d11b2b0 <sds.c:762:21> 'int' lvalue Var 0x55e83d11b048 'len' 'int'
len
   4: ImplicitCastExpr 0x55e83d11b2f0 <sds.c:762:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b2b0 <col:21> 'int' lvalue Var 0x55e83d11b048 'len' 'int'
[B12.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55e83d11b308 <sds.c:762:17, col:21> 'int' '<'
|-ImplicitCastExpr 0x55e83d11b2d8 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d11b288 <col:17> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
`-ImplicitCastExpr 0x55e83d11b2f0 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11b2b0 <col:21> 'int' lvalue Var 0x55e83d11b048 'len' 'int'
[B12.2] < [B12.4]
   T: for (...; [B12.5]; ...)
   Preds (2): B1 B13
   Succs (2): B11 B0

 [B13]
   1: DeclRefExpr 0x55e83d11b0a8 <sds.c:760:15> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
   2: ImplicitCastExpr 0x55e83d11b0f8 <sds.c:760:15> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d11b0a8 <col:15> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   3: DeclRefExpr 0x55e83d11b0d0 <sds.c:760:22> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d11b140 <sds.c:760:22> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d11b0d0 <col:22> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B13.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: CallExpr 0x55e83d11b110 <sds.c:760:15, col:23> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d11b0f8 <col:15> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d11b0a8 <col:15> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d11b140 <col:22> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d11b0d0 <col:22> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B13.2]([B13.4])
   6: ImplicitCastExpr 0x55e83d11b158 <sds.c:760:15, col:23> 'int' <IntegralCast>
`-CallExpr 0x55e83d11b110 <col:15, col:23> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55e83d11b0f8 <col:15> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d11b0a8 <col:15> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
  `-ImplicitCastExpr 0x55e83d11b140 <col:22> 'sds':'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d11b0d0 <col:22> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
[B13.5] (ImplicitCastExpr, IntegralCast, int)
   7: DeclStmt 0x55e83d1322b8 <sds.c:760:9, col:23>col:9
`-VarDecl 0x55e83d11b048 <col:5, col:23> col:9 used len 'int' cinit
  `-ImplicitCastExpr 0x55e83d11b158 <col:15, col:23> 'int' <IntegralCast>
    `-CallExpr 0x55e83d11b110 <col:15, col:23> 'size_t':'unsigned long'
      |-ImplicitCastExpr 0x55e83d11b0f8 <col:15> 'size_t (*)(const sds)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55e83d11b0a8 <col:15> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
      `-ImplicitCastExpr 0x55e83d11b140 <col:22> 'sds':'char *' <LValueToRValue>
        `-DeclRefExpr 0x55e83d11b0d0 <col:22> 'sds':'char *' lvalue ParmVar 0x55e83d11af00 's' 'sds':'char *'
int len = sdslen(s);
   8: DeclStmt 0x55e83d1322a0 <sds.c:760:26>col:26
`-VarDecl 0x55e83d11b188 <col:5, col:26> col:26 used j 'int'
int j;
   9: IntegerLiteral 0x55e83d11b240 <sds.c:762:14> 'int' 0
0
  10: DeclRefExpr 0x55e83d11b218 <sds.c:762:10> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
j
  11: BinaryOperator 0x55e83d11b260 <sds.c:762:10, col:14> 'int' '='
|-DeclRefExpr 0x55e83d11b218 <col:10> 'int' lvalue Var 0x55e83d11b188 'j' 'int'
`-IntegerLiteral 0x55e83d11b240 <col:14> 'int' 0
[B13.10] = [B13.9]
   Preds (1): B14
   Succs (1): B12

 [B0 (EXIT)]
   Preds (1): B12
