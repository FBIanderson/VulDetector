void luaC_linkupval(lua_State *L, UpVal *uv)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: DeclRefExpr 0x55ef1b216478 <lgc.c:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55ef1b2164c0 <lgc.c:35:34, col:36> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
  `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
([B1.1]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55ef1b2164d8 <lgc.c:35:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
    `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B1.2]->gch
   4: MemberExpr 0x55ef1b216510 <lgc.c:35:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b2164d8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
      `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B1.3].marked
   5: ImplicitCastExpr 0x55ef1b2168b8 <lgc.c:35:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55ef1b216510 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
  `-MemberExpr 0x55ef1b2164d8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
    `-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
      `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
        `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B1.4] (ImplicitCastExpr, LValueToRValue, lu_byte)
   6: ImplicitCastExpr 0x55ef1b2168d0 <lgc.c:35:34, col:43> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b2168b8 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55ef1b216510 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b2164d8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
          `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: IntegerLiteral 0x55ef1b216548 <./lgc.h:30:21> 'int' 1
1
   8: IntegerLiteral 0x55ef1b216568 <./lgc.h:56:18> 'int' 2
2
   9: BinaryOperator 0x55ef1b2165a8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
`-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
[B1.7] << ([B1.8])
  10: IntegerLiteral 0x55ef1b2165f0 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x55ef1b216610 <./lgc.h:54:19> 'int' 0
0
  12: BinaryOperator 0x55ef1b216650 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
[B1.10] << ([B1.11])
  13: IntegerLiteral 0x55ef1b216698 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x55ef1b2166b8 <./lgc.h:55:19> 'int' 1
1
  15: BinaryOperator 0x55ef1b2166f8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
`-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
[B1.13] << ([B1.14])
  16: BinaryOperator 0x55ef1b216740 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
([B1.12]) | ([B1.15])
  17: BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
|-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
`-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
  `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
    |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
    `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
        `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
([B1.9]) | ([B1.16])
  18: UnaryOperator 0x55ef1b2167d0 <lgc.c:32:29, col:58> 'int' prefix '~'
`-ParenExpr 0x55ef1b2167b0 <col:30, col:58> 'int'
  `-BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
    |-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
    | `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
    |   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
    `-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
~([B1.17])
  19: CStyleCastExpr 0x55ef1b216870 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b216850 <col:26, col:30> 'int'
  `-ParenExpr 0x55ef1b2167f0 <line:78:36, col:38> 'int'
    `-UnaryOperator 0x55ef1b2167d0 <lgc.c:32:29, col:58> 'int' prefix '~'
      `-ParenExpr 0x55ef1b2167b0 <col:30, col:58> 'int'
        `-BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
          |-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
          | `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
          |   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
          |   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
          |     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
          `-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
            `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
              |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
              | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
              |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
              |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
              |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
              `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
                `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
                  |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
                  `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
                    `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
(lu_byte)(([B1.18])) (CStyleCastExpr, IntegralCast, lu_byte)
  20: ImplicitCastExpr 0x55ef1b2168e8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b216898 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b216870 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b216850 <col:26, col:30> 'int'
      `-ParenExpr 0x55ef1b2167f0 <line:78:36, col:38> 'int'
        `-UnaryOperator 0x55ef1b2167d0 <lgc.c:32:29, col:58> 'int' prefix '~'
          `-ParenExpr 0x55ef1b2167b0 <col:30, col:58> 'int'
            `-BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
              |-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
              | `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
              |   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
              |   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
              |     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
              `-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
                `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
                  |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
                  | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
                  |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
                  |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
                  |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
                  `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
                    `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
                      |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
                      `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
                        `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
([B1.19]) (ImplicitCastExpr, IntegralCast, int)
  21: BinaryOperator 0x55ef1b216900 <lgc.c:35:34, ./llimits.h:75:31> 'int' '&'
|-ImplicitCastExpr 0x55ef1b2168d0 <lgc.c:35:34, col:43> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b2168b8 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55ef1b216510 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|     `-MemberExpr 0x55ef1b2164d8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|       `-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
|         `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
|           `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
`-ImplicitCastExpr 0x55ef1b2168e8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b216898 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b216870 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b216850 <col:26, col:30> 'int'
        `-ParenExpr 0x55ef1b2167f0 <line:78:36, col:38> 'int'
          `-UnaryOperator 0x55ef1b2167d0 <lgc.c:32:29, col:58> 'int' prefix '~'
            `-ParenExpr 0x55ef1b2167b0 <col:30, col:58> 'int'
              `-BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
                |-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
                | `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
                |   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
                |   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
                |     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
                `-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
                  `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
                    |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
                    | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
                    |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
                    |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
                    |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
                    `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
                      `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
                        |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
                        `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
                          `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
[B1.6] & [B1.20]
  22: DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
g
  23: ImplicitCastExpr 0x55ef1b216990 <./lgc.h:77:37, col:39> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
  `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
([B1.22]) (ImplicitCastExpr, LValueToRValue, global_State *)
  24: MemberExpr 0x55ef1b2169a8 <./lgc.h:77:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
`-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
    `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B1.23]->currentwhite
  25: ImplicitCastExpr 0x55ef1b216b78 <./lgc.h:77:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
  `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
      `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B1.24] (ImplicitCastExpr, LValueToRValue, lu_byte)
  26: ImplicitCastExpr 0x55ef1b216b90 <./lgc.h:77:37, col:42> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b216b78 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
    `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
      `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
        `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B1.25] (ImplicitCastExpr, IntegralCast, int)
  27: IntegerLiteral 0x55ef1b2169e0 <./lgc.h:30:21> 'int' 1
1
  28: IntegerLiteral 0x55ef1b216a00 <./lgc.h:54:19> 'int' 0
0
  29: BinaryOperator 0x55ef1b216a40 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
[B1.27] << ([B1.28])
  30: IntegerLiteral 0x55ef1b216a88 <./lgc.h:30:21> 'int' 1
1
  31: IntegerLiteral 0x55ef1b216aa8 <./lgc.h:55:19> 'int' 1
1
  32: BinaryOperator 0x55ef1b216ae8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
`-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
[B1.30] << ([B1.31])
  33: BinaryOperator 0x55ef1b216b30 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b216a68 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b216a40 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b216b10 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b216ae8 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
([B1.29]) | ([B1.32])
  34: BinaryOperator 0x55ef1b216ba8 <./lgc.h:77:37, line:31:51> 'int' '&'
|-ImplicitCastExpr 0x55ef1b216b90 <line:77:37, col:42> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b216b78 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
|     `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
|         `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
`-ParenExpr 0x55ef1b216b58 <./lgc.h:31:25, col:51> 'int'
  `-BinaryOperator 0x55ef1b216b30 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55ef1b216a68 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55ef1b216a40 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
    |   `-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
    `-ParenExpr 0x55ef1b216b10 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55ef1b216ae8 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
        `-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
[B1.26] & ([B1.33])
  35: CStyleCastExpr 0x55ef1b216c30 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b216c10 <col:26, col:30> 'int'
  `-BinaryOperator 0x55ef1b216ba8 <./lgc.h:77:37, line:31:51> 'int' '&'
    |-ImplicitCastExpr 0x55ef1b216b90 <line:77:37, col:42> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55ef1b216b78 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
    |     `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
    |       `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
    |         `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
    `-ParenExpr 0x55ef1b216b58 <./lgc.h:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b216b30 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b216a68 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b216a40 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b216b10 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b216ae8 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
(lu_byte)([B1.34]) (CStyleCastExpr, IntegralCast, lu_byte)
  36: ImplicitCastExpr 0x55ef1b216c78 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b216c58 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b216c30 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b216c10 <col:26, col:30> 'int'
      `-BinaryOperator 0x55ef1b216ba8 <./lgc.h:77:37, line:31:51> 'int' '&'
        |-ImplicitCastExpr 0x55ef1b216b90 <line:77:37, col:42> 'int' <IntegralCast>
        | `-ImplicitCastExpr 0x55ef1b216b78 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
        |   `-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
        |     `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
        |       `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
        |         `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
        `-ParenExpr 0x55ef1b216b58 <./lgc.h:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b216b30 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b216a68 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b216a40 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b216b10 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b216ae8 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
([B1.35]) (ImplicitCastExpr, IntegralCast, int)
  37: BinaryOperator 0x55ef1b216c90 <lgc.c:35:33, ./llimits.h:75:31> 'int' '|'
|-ParenExpr 0x55ef1b216928 <lgc.c:35:33, col:61> 'int'
| `-BinaryOperator 0x55ef1b216900 <col:34, ./llimits.h:75:31> 'int' '&'
|   |-ImplicitCastExpr 0x55ef1b2168d0 <lgc.c:35:34, col:43> 'int' <IntegralCast>
|   | `-ImplicitCastExpr 0x55ef1b2168b8 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-MemberExpr 0x55ef1b216510 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|   |     `-MemberExpr 0x55ef1b2164d8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|   |       `-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
|   |         `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
|   |           `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
|   `-ImplicitCastExpr 0x55ef1b2168e8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
|     `-ParenExpr 0x55ef1b216898 <col:22, col:31> 'lu_byte':'unsigned char'
|       `-CStyleCastExpr 0x55ef1b216870 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
|         `-ParenExpr 0x55ef1b216850 <col:26, col:30> 'int'
|           `-ParenExpr 0x55ef1b2167f0 <line:78:36, col:38> 'int'
|             `-UnaryOperator 0x55ef1b2167d0 <lgc.c:32:29, col:58> 'int' prefix '~'
|               `-ParenExpr 0x55ef1b2167b0 <col:30, col:58> 'int'
|                 `-BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
|                   |-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
|                   | `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
|                   |   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
|                   |   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
|                   |     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
|                   `-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
|                     `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
|                       |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
|                       | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
|                       |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
|                       |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
|                       |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
|                       `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
|                         `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
|                           |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
|                           `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
|                             `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
`-ImplicitCastExpr 0x55ef1b216c78 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b216c58 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b216c30 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b216c10 <col:26, col:30> 'int'
        `-BinaryOperator 0x55ef1b216ba8 <./lgc.h:77:37, line:31:51> 'int' '&'
          |-ImplicitCastExpr 0x55ef1b216b90 <line:77:37, col:42> 'int' <IntegralCast>
          | `-ImplicitCastExpr 0x55ef1b216b78 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
          |   `-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
          |     `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
          |       `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
          |         `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
          `-ParenExpr 0x55ef1b216b58 <./lgc.h:31:25, col:51> 'int'
            `-BinaryOperator 0x55ef1b216b30 <line:30:20, col:27> 'int' '|'
              |-ParenExpr 0x55ef1b216a68 <col:20, col:27> 'int'
              | `-BinaryOperator 0x55ef1b216a40 <col:21, col:26> 'int' '<<'
              |   |-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
              |   `-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
              |     `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
              `-ParenExpr 0x55ef1b216b10 <line:30:20, col:27> 'int'
                `-BinaryOperator 0x55ef1b216ae8 <col:21, col:26> 'int' '<<'
                  |-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
                  `-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
                    `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
([B1.21]) | [B1.36]
  38: CStyleCastExpr 0x55ef1b216d38 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b216d18 <col:26, col:30> 'int'
  `-ParenExpr 0x55ef1b216cb8 <line:78:36, col:38> 'int'
    `-BinaryOperator 0x55ef1b216c90 <lgc.c:35:33, ./llimits.h:75:31> 'int' '|'
      |-ParenExpr 0x55ef1b216928 <lgc.c:35:33, col:61> 'int'
      | `-BinaryOperator 0x55ef1b216900 <col:34, ./llimits.h:75:31> 'int' '&'
      |   |-ImplicitCastExpr 0x55ef1b2168d0 <lgc.c:35:34, col:43> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x55ef1b2168b8 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
      |   |   `-MemberExpr 0x55ef1b216510 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      |   |     `-MemberExpr 0x55ef1b2164d8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      |   |       `-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
      |   |         `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
      |   |           `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
      |   `-ImplicitCastExpr 0x55ef1b2168e8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
      |     `-ParenExpr 0x55ef1b216898 <col:22, col:31> 'lu_byte':'unsigned char'
      |       `-CStyleCastExpr 0x55ef1b216870 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      |         `-ParenExpr 0x55ef1b216850 <col:26, col:30> 'int'
      |           `-ParenExpr 0x55ef1b2167f0 <line:78:36, col:38> 'int'
      |             `-UnaryOperator 0x55ef1b2167d0 <lgc.c:32:29, col:58> 'int' prefix '~'
      |               `-ParenExpr 0x55ef1b2167b0 <col:30, col:58> 'int'
      |                 `-BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
      |                   |-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
      |                   | `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
      |                   |   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
      |                   |   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
      |                   |     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
      |                   `-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
      |                     `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
      |                       |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
      |                       | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
      |                       |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
      |                       |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
      |                       |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
      |                       `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
      |                         `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
      |                           |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
      |                           `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
      |                             `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
      `-ImplicitCastExpr 0x55ef1b216c78 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
        `-ParenExpr 0x55ef1b216c58 <col:22, col:31> 'lu_byte':'unsigned char'
          `-CStyleCastExpr 0x55ef1b216c30 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
            `-ParenExpr 0x55ef1b216c10 <col:26, col:30> 'int'
              `-BinaryOperator 0x55ef1b216ba8 <./lgc.h:77:37, line:31:51> 'int' '&'
                |-ImplicitCastExpr 0x55ef1b216b90 <line:77:37, col:42> 'int' <IntegralCast>
                | `-ImplicitCastExpr 0x55ef1b216b78 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
                |   `-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
                |     `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
                |       `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
                |         `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
                `-ParenExpr 0x55ef1b216b58 <./lgc.h:31:25, col:51> 'int'
                  `-BinaryOperator 0x55ef1b216b30 <line:30:20, col:27> 'int' '|'
                    |-ParenExpr 0x55ef1b216a68 <col:20, col:27> 'int'
                    | `-BinaryOperator 0x55ef1b216a40 <col:21, col:26> 'int' '<<'
                    |   |-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
                    |   `-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
                    |     `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
                    `-ParenExpr 0x55ef1b216b10 <line:30:20, col:27> 'int'
                      `-BinaryOperator 0x55ef1b216ae8 <col:21, col:26> 'int' '<<'
                        |-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
                        `-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
                          `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
(lu_byte)(([B1.37])) (CStyleCastExpr, IntegralCast, lu_byte)
  39: DeclRefExpr 0x55ef1b2163a8 <lgc.c:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
o
  40: ImplicitCastExpr 0x55ef1b2163f0 <lgc.c:35:5, col:7> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b2163d0 <col:5, col:7> 'GCObject *' lvalue
  `-DeclRefExpr 0x55ef1b2163a8 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
([B1.39]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  41: MemberExpr 0x55ef1b216408 <lgc.c:35:5, col:10> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b2163f0 <col:5, col:7> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b2163d0 <col:5, col:7> 'GCObject *' lvalue
    `-DeclRefExpr 0x55ef1b2163a8 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B1.40]->gch
  42: MemberExpr 0x55ef1b216440 <lgc.c:35:5, col:14> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b216408 <col:5, col:10> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b2163f0 <col:5, col:7> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b2163d0 <col:5, col:7> 'GCObject *' lvalue
      `-DeclRefExpr 0x55ef1b2163a8 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B1.41].marked
  43: BinaryOperator 0x55ef1b216d80 <lgc.c:35:5, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55ef1b216440 <lgc.c:35:5, col:14> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
| `-MemberExpr 0x55ef1b216408 <col:5, col:10> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|   `-ImplicitCastExpr 0x55ef1b2163f0 <col:5, col:7> 'GCObject *' <LValueToRValue>
|     `-ParenExpr 0x55ef1b2163d0 <col:5, col:7> 'GCObject *' lvalue
|       `-DeclRefExpr 0x55ef1b2163a8 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
`-ParenExpr 0x55ef1b216d60 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b216d38 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b216d18 <col:26, col:30> 'int'
      `-ParenExpr 0x55ef1b216cb8 <line:78:36, col:38> 'int'
        `-BinaryOperator 0x55ef1b216c90 <lgc.c:35:33, ./llimits.h:75:31> 'int' '|'
          |-ParenExpr 0x55ef1b216928 <lgc.c:35:33, col:61> 'int'
          | `-BinaryOperator 0x55ef1b216900 <col:34, ./llimits.h:75:31> 'int' '&'
          |   |-ImplicitCastExpr 0x55ef1b2168d0 <lgc.c:35:34, col:43> 'int' <IntegralCast>
          |   | `-ImplicitCastExpr 0x55ef1b2168b8 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
          |   |   `-MemberExpr 0x55ef1b216510 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
          |   |     `-MemberExpr 0x55ef1b2164d8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
          |   |       `-ImplicitCastExpr 0x55ef1b2164c0 <col:34, col:36> 'GCObject *' <LValueToRValue>
          |   |         `-ParenExpr 0x55ef1b2164a0 <col:34, col:36> 'GCObject *' lvalue
          |   |           `-DeclRefExpr 0x55ef1b216478 <line:705:20> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
          |   `-ImplicitCastExpr 0x55ef1b2168e8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
          |     `-ParenExpr 0x55ef1b216898 <col:22, col:31> 'lu_byte':'unsigned char'
          |       `-CStyleCastExpr 0x55ef1b216870 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
          |         `-ParenExpr 0x55ef1b216850 <col:26, col:30> 'int'
          |           `-ParenExpr 0x55ef1b2167f0 <line:78:36, col:38> 'int'
          |             `-UnaryOperator 0x55ef1b2167d0 <lgc.c:32:29, col:58> 'int' prefix '~'
          |               `-ParenExpr 0x55ef1b2167b0 <col:30, col:58> 'int'
          |                 `-BinaryOperator 0x55ef1b216788 <./lgc.h:30:20, line:31:51> 'int' '|'
          |                   |-ParenExpr 0x55ef1b2165d0 <line:30:20, col:27> 'int'
          |                   | `-BinaryOperator 0x55ef1b2165a8 <col:21, col:26> 'int' '<<'
          |                   |   |-IntegerLiteral 0x55ef1b216548 <col:21> 'int' 1
          |                   |   `-ParenExpr 0x55ef1b216588 <col:24, col:26> 'int'
          |                   |     `-IntegerLiteral 0x55ef1b216568 <line:56:18> 'int' 2
          |                   `-ParenExpr 0x55ef1b216768 <line:31:25, col:51> 'int'
          |                     `-BinaryOperator 0x55ef1b216740 <line:30:20, col:27> 'int' '|'
          |                       |-ParenExpr 0x55ef1b216678 <col:20, col:27> 'int'
          |                       | `-BinaryOperator 0x55ef1b216650 <col:21, col:26> 'int' '<<'
          |                       |   |-IntegerLiteral 0x55ef1b2165f0 <col:21> 'int' 1
          |                       |   `-ParenExpr 0x55ef1b216630 <col:24, col:26> 'int'
          |                       |     `-IntegerLiteral 0x55ef1b216610 <line:54:19> 'int' 0
          |                       `-ParenExpr 0x55ef1b216720 <line:30:20, col:27> 'int'
          |                         `-BinaryOperator 0x55ef1b2166f8 <col:21, col:26> 'int' '<<'
          |                           |-IntegerLiteral 0x55ef1b216698 <col:21> 'int' 1
          |                           `-ParenExpr 0x55ef1b2166d8 <col:24, col:26> 'int'
          |                             `-IntegerLiteral 0x55ef1b2166b8 <line:55:19> 'int' 1
          `-ImplicitCastExpr 0x55ef1b216c78 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
            `-ParenExpr 0x55ef1b216c58 <col:22, col:31> 'lu_byte':'unsigned char'
              `-CStyleCastExpr 0x55ef1b216c30 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
                `-ParenExpr 0x55ef1b216c10 <col:26, col:30> 'int'
                  `-BinaryOperator 0x55ef1b216ba8 <./lgc.h:77:37, line:31:51> 'int' '&'
                    |-ImplicitCastExpr 0x55ef1b216b90 <line:77:37, col:42> 'int' <IntegralCast>
                    | `-ImplicitCastExpr 0x55ef1b216b78 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
                    |   `-MemberExpr 0x55ef1b2169a8 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
                    |     `-ImplicitCastExpr 0x55ef1b216990 <col:37, col:39> 'global_State *' <LValueToRValue>
                    |       `-ParenExpr 0x55ef1b216970 <col:37, col:39> 'global_State *' lvalue
                    |         `-DeclRefExpr 0x55ef1b216948 <lgc.c:705:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
                    `-ParenExpr 0x55ef1b216b58 <./lgc.h:31:25, col:51> 'int'
                      `-BinaryOperator 0x55ef1b216b30 <line:30:20, col:27> 'int' '|'
                        |-ParenExpr 0x55ef1b216a68 <col:20, col:27> 'int'
                        | `-BinaryOperator 0x55ef1b216a40 <col:21, col:26> 'int' '<<'
                        |   |-IntegerLiteral 0x55ef1b2169e0 <col:21> 'int' 1
                        |   `-ParenExpr 0x55ef1b216a20 <col:24, col:26> 'int'
                        |     `-IntegerLiteral 0x55ef1b216a00 <line:54:19> 'int' 0
                        `-ParenExpr 0x55ef1b216b10 <line:30:20, col:27> 'int'
                          `-BinaryOperator 0x55ef1b216ae8 <col:21, col:26> 'int' '<<'
                            |-IntegerLiteral 0x55ef1b216a88 <col:21> 'int' 1
                            `-ParenExpr 0x55ef1b216ac8 <col:24, col:26> 'int'
                              `-IntegerLiteral 0x55ef1b216aa8 <line:55:19> 'int' 1
[B1.42] = ([B1.38])
  44: IntegerLiteral 0x55ef1b216dc8 <./llimits.h:62:31> 'int' 0
0
  45: CStyleCastExpr 0x55ef1b216df8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55ef1b216dc8 <col:31> 'int' 0
(void)[B1.44] (CStyleCastExpr, ToVoid, void)
   Preds (1): B6
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55ef1b215f88 <./lgc.h:87:2> 'void (lua_State *, GCObject *, GCObject *)' Function 0x55ef1b20f5a8 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
luaC_barrierf
   2: ImplicitCastExpr 0x55ef1b216298 <./lgc.h:87:2> 'void (*)(lua_State *, GCObject *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b215f88 <col:2> 'void (lua_State *, GCObject *, GCObject *)' Function 0x55ef1b20f5a8 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, GCObject *, GCObject *))
   3: DeclRefExpr 0x55ef1b215fb0 <lgc.c:702:20> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55ef1b2162f0 <lgc.c:702:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b215fb0 <col:20> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55ef1b215fd8 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
uv
   6: ImplicitCastExpr 0x55ef1b216080 <./llimits.h:75:26, col:30> 'UpVal *' <LValueToRValue>
`-ParenExpr 0x55ef1b216060 <col:26, col:30> 'UpVal *' lvalue
  `-ParenExpr 0x55ef1b216000 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
    `-DeclRefExpr 0x55ef1b215fd8 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
(([B2.5])) (ImplicitCastExpr, LValueToRValue, UpVal *)
   7: CStyleCastExpr 0x55ef1b216098 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b216080 <col:26, col:30> 'UpVal *' <LValueToRValue>
  `-ParenExpr 0x55ef1b216060 <col:26, col:30> 'UpVal *' lvalue
    `-ParenExpr 0x55ef1b216000 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
      `-DeclRefExpr 0x55ef1b215fd8 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
(GCObject *)[B2.6] (CStyleCastExpr, BitCast, GCObject *)
   8: DeclRefExpr 0x55ef1b216100 <lgc.c:702:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
uv
   9: ImplicitCastExpr 0x55ef1b216128 <lgc.c:702:27> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b216100 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B2.8] (ImplicitCastExpr, LValueToRValue, UpVal *)
  10: MemberExpr 0x55ef1b216140 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
`-ImplicitCastExpr 0x55ef1b216128 <col:27> 'UpVal *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b216100 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B2.9]->v
  11: ImplicitCastExpr 0x55ef1b216198 <./lobject.h:91:48, col:50> 'TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b216178 <col:48, col:50> 'TValue *' lvalue
  `-MemberExpr 0x55ef1b216140 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
    `-ImplicitCastExpr 0x55ef1b216128 <col:27> 'UpVal *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b216100 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
([B2.10]) (ImplicitCastExpr, LValueToRValue, TValue *)
  12: MemberExpr 0x55ef1b2161b0 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b216198 <col:48, col:50> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b216178 <col:48, col:50> 'TValue *' lvalue
    `-MemberExpr 0x55ef1b216140 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
      `-ImplicitCastExpr 0x55ef1b216128 <col:27> 'UpVal *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b216100 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B2.11]->value
  13: MemberExpr 0x55ef1b2161e8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b2161b0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b216198 <col:48, col:50> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b216178 <col:48, col:50> 'TValue *' lvalue
      `-MemberExpr 0x55ef1b216140 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
        `-ImplicitCastExpr 0x55ef1b216128 <col:27> 'UpVal *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b216100 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B2.12].gc
  14: ImplicitCastExpr 0x55ef1b216308 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b216220 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x55ef1b2161e8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
    `-MemberExpr 0x55ef1b2161b0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
      `-ImplicitCastExpr 0x55ef1b216198 <col:48, col:50> 'TValue *' <LValueToRValue>
        `-ParenExpr 0x55ef1b216178 <col:48, col:50> 'TValue *' lvalue
          `-MemberExpr 0x55ef1b216140 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
            `-ImplicitCastExpr 0x55ef1b216128 <col:27> 'UpVal *' <LValueToRValue>
              `-DeclRefExpr 0x55ef1b216100 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
([B2.13]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  15: CallExpr 0x55ef1b2162b0 <./lgc.h:87:2, col:39> 'void'
|-ImplicitCastExpr 0x55ef1b216298 <col:2> 'void (*)(lua_State *, GCObject *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b215f88 <col:2> 'void (lua_State *, GCObject *, GCObject *)' Function 0x55ef1b20f5a8 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b2162f0 <lgc.c:702:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b215fb0 <col:20> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
|-ParenExpr 0x55ef1b2160e0 <./lstate.h:162:20, col:42> 'GCObject *'
| `-ParenExpr 0x55ef1b2160c0 <./llimits.h:75:22, col:31> 'GCObject *'
|   `-CStyleCastExpr 0x55ef1b216098 <col:23, col:30> 'GCObject *' <BitCast>
|     `-ImplicitCastExpr 0x55ef1b216080 <col:26, col:30> 'UpVal *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b216060 <col:26, col:30> 'UpVal *' lvalue
|         `-ParenExpr 0x55ef1b216000 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
|           `-DeclRefExpr 0x55ef1b215fd8 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
`-ImplicitCastExpr 0x55ef1b216308 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b216220 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b2161e8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b2161b0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b216198 <col:48, col:50> 'TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b216178 <col:48, col:50> 'TValue *' lvalue
            `-MemberExpr 0x55ef1b216140 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
              `-ImplicitCastExpr 0x55ef1b216128 <col:27> 'UpVal *' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b216100 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B2.2]([B2.4], (([B2.7])), [B2.14])
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
uv
   2: ImplicitCastExpr 0x55ef1b215cf0 <./llimits.h:75:26, col:30> 'UpVal *' <LValueToRValue>
`-ParenExpr 0x55ef1b215cd0 <col:26, col:30> 'UpVal *' lvalue
  `-ParenExpr 0x55ef1b215c70 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
    `-DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
(([B3.1])) (ImplicitCastExpr, LValueToRValue, UpVal *)
   3: CStyleCastExpr 0x55ef1b215d08 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b215cf0 <col:26, col:30> 'UpVal *' <LValueToRValue>
  `-ParenExpr 0x55ef1b215cd0 <col:26, col:30> 'UpVal *' lvalue
    `-ParenExpr 0x55ef1b215c70 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
      `-DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
(GCObject *)[B3.2] (CStyleCastExpr, BitCast, GCObject *)
   4: MemberExpr 0x55ef1b215d90 <./lgc.h:66:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ParenExpr 0x55ef1b215d70 <col:33, col:35> 'GCObject *'
  `-ParenExpr 0x55ef1b215d50 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x55ef1b215d30 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x55ef1b215d08 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x55ef1b215cf0 <col:26, col:30> 'UpVal *' <LValueToRValue>
          `-ParenExpr 0x55ef1b215cd0 <col:26, col:30> 'UpVal *' lvalue
            `-ParenExpr 0x55ef1b215c70 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
              `-DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
((([B3.3])))->gch
   5: MemberExpr 0x55ef1b215dc8 <./lgc.h:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b215d90 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ParenExpr 0x55ef1b215d70 <col:33, col:35> 'GCObject *'
    `-ParenExpr 0x55ef1b215d50 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x55ef1b215d30 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x55ef1b215d08 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x55ef1b215cf0 <col:26, col:30> 'UpVal *' <LValueToRValue>
            `-ParenExpr 0x55ef1b215cd0 <col:26, col:30> 'UpVal *' lvalue
              `-ParenExpr 0x55ef1b215c70 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                `-DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B3.4].marked
   6: ImplicitCastExpr 0x55ef1b215ee8 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b215e00 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b215dc8 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b215d90 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ParenExpr 0x55ef1b215d70 <col:33, col:35> 'GCObject *'
        `-ParenExpr 0x55ef1b215d50 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x55ef1b215d30 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x55ef1b215d08 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x55ef1b215cf0 <col:26, col:30> 'UpVal *' <LValueToRValue>
                `-ParenExpr 0x55ef1b215cd0 <col:26, col:30> 'UpVal *' lvalue
                  `-ParenExpr 0x55ef1b215c70 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                    `-DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
([B3.5]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x55ef1b215f00 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b215ee8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b215e00 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b215dc8 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b215d90 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ParenExpr 0x55ef1b215d70 <col:33, col:35> 'GCObject *'
          `-ParenExpr 0x55ef1b215d50 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x55ef1b215d30 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x55ef1b215d08 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x55ef1b215cf0 <col:26, col:30> 'UpVal *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b215cd0 <col:26, col:30> 'UpVal *' lvalue
                    `-ParenExpr 0x55ef1b215c70 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
                      `-DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B3.6] (ImplicitCastExpr, IntegralCast, int)
   8: IntegerLiteral 0x55ef1b215e20 <./lgc.h:30:21> 'int' 1
1
   9: IntegerLiteral 0x55ef1b215e40 <./lgc.h:56:18> 'int' 2
2
  10: BinaryOperator 0x55ef1b215e80 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b215e20 <col:21> 'int' 1
`-ParenExpr 0x55ef1b215e60 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b215e40 <line:56:18> 'int' 2
[B3.8] << ([B3.9])
  11: BinaryOperator 0x55ef1b215f18 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b215f00 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b215ee8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b215e00 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b215dc8 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b215d90 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ParenExpr 0x55ef1b215d70 <col:33, col:35> 'GCObject *'
|           `-ParenExpr 0x55ef1b215d50 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x55ef1b215d30 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x55ef1b215d08 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x55ef1b215cf0 <col:26, col:30> 'UpVal *' <LValueToRValue>
|                   `-ParenExpr 0x55ef1b215cd0 <col:26, col:30> 'UpVal *' lvalue
|                     `-ParenExpr 0x55ef1b215c70 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
|                       `-DeclRefExpr 0x55ef1b215c48 <lgc.c:702:23> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
`-ParenExpr 0x55ef1b215ec8 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b215ea8 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x55ef1b215e80 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x55ef1b215e20 <col:21> 'int' 1
      `-ParenExpr 0x55ef1b215e60 <col:24, col:26> 'int'
        `-IntegerLiteral 0x55ef1b215e40 <line:56:18> 'int' 2
[B3.7] & (([B3.10]))
   T: if (([B5.16]) && ([B4.19])) && ([B3.11])
   Preds (1): B4
   Succs (2): B2 B0

 [B4]
   1: DeclRefExpr 0x55ef1b215780 <lgc.c:702:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
uv
   2: ImplicitCastExpr 0x55ef1b2157a8 <lgc.c:702:27> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B4.1] (ImplicitCastExpr, LValueToRValue, UpVal *)
   3: MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
`-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B4.2]->v
   4: ImplicitCastExpr 0x55ef1b215840 <./lobject.h:91:48, col:50> 'TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
  `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
    `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, TValue *)
   5: MemberExpr 0x55ef1b215858 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
`-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
    `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
      `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B4.4]->value
   6: MemberExpr 0x55ef1b215890 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
`-MemberExpr 0x55ef1b215858 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
  `-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
      `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
        `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B4.5].gc
   7: ImplicitCastExpr 0x55ef1b215908 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b2158e8 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x55ef1b2158c8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x55ef1b215890 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
      `-MemberExpr 0x55ef1b215858 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
        `-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
          `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
            `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
              `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
                `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
(([B4.6])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x55ef1b215920 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b215908 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b2158e8 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x55ef1b2158c8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x55ef1b215890 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
        `-MemberExpr 0x55ef1b215858 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
          `-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
            `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
              `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
                `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
                  `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B4.7]->gch
   9: MemberExpr 0x55ef1b215958 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b215920 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b215908 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b2158e8 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x55ef1b2158c8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x55ef1b215890 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
          `-MemberExpr 0x55ef1b215858 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
            `-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
              `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
                `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
                  `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
                    `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B4.8].marked
  10: ImplicitCastExpr 0x55ef1b215b88 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b215990 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b215958 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b215920 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b215908 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b2158e8 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x55ef1b2158c8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x55ef1b215890 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
              `-MemberExpr 0x55ef1b215858 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                `-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
                  `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
                    `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
                      `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
                        `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
([B4.9]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  11: ImplicitCastExpr 0x55ef1b215ba0 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b215b88 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b215990 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b215958 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b215920 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b215908 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b2158e8 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x55ef1b2158c8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x55ef1b215890 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
                `-MemberExpr 0x55ef1b215858 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
                  `-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
                    `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
                      `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
                        `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
                          `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B4.10] (ImplicitCastExpr, IntegralCast, int)
  12: IntegerLiteral 0x55ef1b2159b0 <./lgc.h:30:21> 'int' 1
1
  13: IntegerLiteral 0x55ef1b2159d0 <./lgc.h:54:19> 'int' 0
0
  14: BinaryOperator 0x55ef1b215a10 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b2159b0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b2159f0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b2159d0 <line:54:19> 'int' 0
[B4.12] << ([B4.13])
  15: IntegerLiteral 0x55ef1b215a58 <./lgc.h:30:21> 'int' 1
1
  16: IntegerLiteral 0x55ef1b215a78 <./lgc.h:55:19> 'int' 1
1
  17: BinaryOperator 0x55ef1b215ab8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b215a58 <col:21> 'int' 1
`-ParenExpr 0x55ef1b215a98 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b215a78 <line:55:19> 'int' 1
[B4.15] << ([B4.16])
  18: BinaryOperator 0x55ef1b215b00 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b215a38 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b215a10 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b2159b0 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b2159f0 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b2159d0 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b215ae0 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b215ab8 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b215a58 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b215a98 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b215a78 <line:55:19> 'int' 1
([B4.14]) | ([B4.17])
  19: BinaryOperator 0x55ef1b215bb8 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b215ba0 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b215b88 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b215990 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b215958 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b215920 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b215908 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b2158e8 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x55ef1b2158c8 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x55ef1b215890 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x55ef1b17ef10
|                 `-MemberExpr 0x55ef1b215858 <col:48, col:53> 'Value':'Value' lvalue ->value 0x55ef1b17f210
|                   `-ImplicitCastExpr 0x55ef1b215840 <col:48, col:50> 'TValue *' <LValueToRValue>
|                     `-ParenExpr 0x55ef1b215820 <col:48, col:50> 'TValue *' lvalue
|                       `-MemberExpr 0x55ef1b2157c0 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
|                         `-ImplicitCastExpr 0x55ef1b2157a8 <col:27> 'UpVal *' <LValueToRValue>
|                           `-DeclRefExpr 0x55ef1b215780 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
`-ParenExpr 0x55ef1b215b68 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b215b48 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b215b28 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b215b00 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b215a38 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b215a10 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b2159b0 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b2159f0 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b2159d0 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b215ae0 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b215ab8 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b215a58 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b215a98 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b215a78 <line:55:19> 'int' 1
[B4.11] & ((([B4.18])))
   T: (([B5.16]) && ([B4.19])) && ...
   Preds (1): B5
   Succs (2): B3 B0

 [B5]
   1: DeclRefExpr 0x55ef1b2153e8 <lgc.c:701:18> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55ef1b215430 <./lgc.h:73:32, col:34> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b215410 <col:32, col:34> 'GCObject *' lvalue
  `-DeclRefExpr 0x55ef1b2153e8 <lgc.c:701:18> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55ef1b215448 <./lgc.h:73:32, col:37> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b215430 <col:32, col:34> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b215410 <col:32, col:34> 'GCObject *' lvalue
    `-DeclRefExpr 0x55ef1b2153e8 <lgc.c:701:18> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B5.2]->gch
   4: MemberExpr 0x55ef1b215480 <./lgc.h:73:32, col:41> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b215448 <col:32, col:37> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b215430 <col:32, col:34> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b215410 <col:32, col:34> 'GCObject *' lvalue
      `-DeclRefExpr 0x55ef1b2153e8 <lgc.c:701:18> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B5.3].marked
   5: IntegerLiteral 0x55ef1b2154d8 <./lgc.h:30:21> 'int' 1
1
   6: IntegerLiteral 0x55ef1b2154f8 <./lgc.h:56:18> 'int' 2
2
   7: BinaryOperator 0x55ef1b215538 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b2154d8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b215518 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b2154f8 <line:56:18> 'int' 2
[B5.5] << ([B5.6])
   8: CompoundAssignOperator 0x55ef1b2155a0 <./lgc.h:28:23, col:32> 'lu_byte':'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|-ParenExpr 0x55ef1b2154b8 <col:23, col:25> 'lu_byte':'unsigned char' lvalue
| `-MemberExpr 0x55ef1b215480 <line:73:32, col:41> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|   `-MemberExpr 0x55ef1b215448 <col:32, col:37> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|     `-ImplicitCastExpr 0x55ef1b215430 <col:32, col:34> 'GCObject *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b215410 <col:32, col:34> 'GCObject *' lvalue
|         `-DeclRefExpr 0x55ef1b2153e8 <lgc.c:701:18> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
`-ParenExpr 0x55ef1b215580 <./lgc.h:28:30, col:32> 'int'
  `-ParenExpr 0x55ef1b215560 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x55ef1b215538 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x55ef1b2154d8 <col:21> 'int' 1
      `-ParenExpr 0x55ef1b215518 <col:24, col:26> 'int'
        `-IntegerLiteral 0x55ef1b2154f8 <line:56:18> 'int' 2
([B5.4]) |= (([B5.7]))
   9: DeclRefExpr 0x55ef1b2155f8 <lgc.c:702:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
uv
  10: ImplicitCastExpr 0x55ef1b215620 <lgc.c:702:27> 'UpVal *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b2155f8 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B5.9] (ImplicitCastExpr, LValueToRValue, UpVal *)
  11: MemberExpr 0x55ef1b215638 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
`-ImplicitCastExpr 0x55ef1b215620 <col:27> 'UpVal *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b2155f8 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B5.10]->v
  12: ImplicitCastExpr 0x55ef1b215690 <./lobject.h:90:19, col:21> 'TValue *' <LValueToRValue>
`-ParenExpr 0x55ef1b215670 <col:19, col:21> 'TValue *' lvalue
  `-MemberExpr 0x55ef1b215638 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
    `-ImplicitCastExpr 0x55ef1b215620 <col:27> 'UpVal *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b2155f8 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
([B5.11]) (ImplicitCastExpr, LValueToRValue, TValue *)
  13: MemberExpr 0x55ef1b2156a8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
`-ImplicitCastExpr 0x55ef1b215690 <col:19, col:21> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x55ef1b215670 <col:19, col:21> 'TValue *' lvalue
    `-MemberExpr 0x55ef1b215638 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
      `-ImplicitCastExpr 0x55ef1b215620 <col:27> 'UpVal *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b2155f8 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
[B5.12]->tt
  14: ImplicitCastExpr 0x55ef1b215720 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x55ef1b2156e0 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x55ef1b2156a8 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
    `-ImplicitCastExpr 0x55ef1b215690 <col:19, col:21> 'TValue *' <LValueToRValue>
      `-ParenExpr 0x55ef1b215670 <col:19, col:21> 'TValue *' lvalue
        `-MemberExpr 0x55ef1b215638 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
          `-ImplicitCastExpr 0x55ef1b215620 <col:27> 'UpVal *' <LValueToRValue>
            `-DeclRefExpr 0x55ef1b2155f8 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
([B5.13]) (ImplicitCastExpr, LValueToRValue, int)
  15: IntegerLiteral 0x55ef1b215700 <./lua.h:78:22> 'int' 4
4
  16: BinaryOperator 0x55ef1b215738 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x55ef1b215720 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x55ef1b2156e0 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x55ef1b2156a8 <col:19, col:24> 'int' lvalue ->tt 0x55ef1b17f270
|     `-ImplicitCastExpr 0x55ef1b215690 <col:19, col:21> 'TValue *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b215670 <col:19, col:21> 'TValue *' lvalue
|         `-MemberExpr 0x55ef1b215638 <lgc.c:702:27, col:31> 'TValue *' lvalue ->v 0x55ef1b18d208
|           `-ImplicitCastExpr 0x55ef1b215620 <col:27> 'UpVal *' <LValueToRValue>
|             `-DeclRefExpr 0x55ef1b2155f8 <col:27> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
`-IntegerLiteral 0x55ef1b215700 <./lua.h:78:22> 'int' 4
[B5.14] >= [B5.15]
   T: ([B5.16]) && ...
   Preds (1): B6
   Succs (2): B4 B0

 [B6]
   1: DeclRefExpr 0x55ef1b2152f8 <lgc.c:700:9> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
g
   2: ImplicitCastExpr 0x55ef1b215320 <lgc.c:700:9> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b2152f8 <col:9> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B6.1] (ImplicitCastExpr, LValueToRValue, global_State *)
   3: MemberExpr 0x55ef1b215338 <lgc.c:700:9, col:12> 'lu_byte':'unsigned char' lvalue ->gcstate 0x55ef1b19ebe8
`-ImplicitCastExpr 0x55ef1b215320 <col:9> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b2152f8 <col:9> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B6.2]->gcstate
   4: ImplicitCastExpr 0x55ef1b215390 <lgc.c:700:9, col:12> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55ef1b215338 <col:9, col:12> 'lu_byte':'unsigned char' lvalue ->gcstate 0x55ef1b19ebe8
  `-ImplicitCastExpr 0x55ef1b215320 <col:9> 'global_State *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b2152f8 <col:9> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lu_byte)
   5: ImplicitCastExpr 0x55ef1b2153a8 <lgc.c:700:9, col:12> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b215390 <col:9, col:12> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55ef1b215338 <col:9, col:12> 'lu_byte':'unsigned char' lvalue ->gcstate 0x55ef1b19ebe8
    `-ImplicitCastExpr 0x55ef1b215320 <col:9> 'global_State *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b2152f8 <col:9> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B6.4] (ImplicitCastExpr, IntegralCast, int)
   6: IntegerLiteral 0x55ef1b215370 <./lgc.h:18:22> 'int' 1
1
   7: BinaryOperator 0x55ef1b2153c0 <lgc.c:700:9, ./lgc.h:18:22> 'int' '=='
|-ImplicitCastExpr 0x55ef1b2153a8 <lgc.c:700:9, col:12> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b215390 <col:9, col:12> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55ef1b215338 <col:9, col:12> 'lu_byte':'unsigned char' lvalue ->gcstate 0x55ef1b19ebe8
|     `-ImplicitCastExpr 0x55ef1b215320 <col:9> 'global_State *' <LValueToRValue>
|       `-DeclRefExpr 0x55ef1b2152f8 <col:9> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
`-IntegerLiteral 0x55ef1b215370 <./lgc.h:18:22> 'int' 1
[B6.5] == [B6.6]
   T: if [B6.7]
   Preds (1): B7
   Succs (2): B5 B1

 [B7]
   1: DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
o
   2: ImplicitCastExpr 0x55ef1b214f98 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b214f78 <col:35, col:37> 'GCObject *' lvalue
  `-DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55ef1b214fb0 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b214f98 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b214f78 <col:35, col:37> 'GCObject *' lvalue
    `-DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B7.2]->gch
   4: MemberExpr 0x55ef1b214fe8 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b214fb0 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b214f98 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b214f78 <col:35, col:37> 'GCObject *' lvalue
      `-DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B7.3].marked
   5: ImplicitCastExpr 0x55ef1b215218 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b215020 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b214fe8 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b214fb0 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b214f98 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b214f78 <col:35, col:37> 'GCObject *' lvalue
          `-DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
([B7.4]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   6: ImplicitCastExpr 0x55ef1b215230 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b215218 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b215020 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b214fe8 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b214fb0 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b214f98 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b214f78 <col:35, col:37> 'GCObject *' lvalue
            `-DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B7.5] (ImplicitCastExpr, IntegralCast, int)
   7: IntegerLiteral 0x55ef1b215040 <./lgc.h:30:21> 'int' 1
1
   8: IntegerLiteral 0x55ef1b215060 <./lgc.h:54:19> 'int' 0
0
   9: BinaryOperator 0x55ef1b2150a0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b215040 <col:21> 'int' 1
`-ParenExpr 0x55ef1b215080 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b215060 <line:54:19> 'int' 0
[B7.7] << ([B7.8])
  10: IntegerLiteral 0x55ef1b2150e8 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x55ef1b215108 <./lgc.h:55:19> 'int' 1
1
  12: BinaryOperator 0x55ef1b215148 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b2150e8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b215128 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b215108 <line:55:19> 'int' 1
[B7.10] << ([B7.11])
  13: BinaryOperator 0x55ef1b215190 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b2150c8 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b2150a0 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b215040 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b215080 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b215060 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b215170 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b215148 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b2150e8 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b215128 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b215108 <line:55:19> 'int' 1
([B7.9]) | ([B7.12])
  14: BinaryOperator 0x55ef1b215248 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b215230 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b215218 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b215020 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b214fe8 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b214fb0 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b214f98 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b214f78 <col:35, col:37> 'GCObject *' lvalue
|             `-DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
`-ParenExpr 0x55ef1b2151f8 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b2151d8 <line:37:40, col:57> 'int'
    `-ParenExpr 0x55ef1b2151b8 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b215190 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b2150c8 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b2150a0 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b215040 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b215080 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b215060 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b215170 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b215148 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b2150e8 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b215128 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b215108 <line:55:19> 'int' 1
[B7.6] & ((([B7.13])))
  15: UnaryOperator 0x55ef1b215290 <./lgc.h:67:35, line:29:33> 'int' prefix '!'
`-ParenExpr 0x55ef1b215270 <col:23, col:33> 'int'
  `-BinaryOperator 0x55ef1b215248 <col:24, col:32> 'int' '&'
    |-ImplicitCastExpr 0x55ef1b215230 <col:24, col:26> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55ef1b215218 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-ParenExpr 0x55ef1b215020 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    |     `-MemberExpr 0x55ef1b214fe8 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    |       `-MemberExpr 0x55ef1b214fb0 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
    |         `-ImplicitCastExpr 0x55ef1b214f98 <col:35, col:37> 'GCObject *' <LValueToRValue>
    |           `-ParenExpr 0x55ef1b214f78 <col:35, col:37> 'GCObject *' lvalue
    |             `-DeclRefExpr 0x55ef1b214f50 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
    `-ParenExpr 0x55ef1b2151f8 <./lgc.h:29:30, col:32> 'int'
      `-ParenExpr 0x55ef1b2151d8 <line:37:40, col:57> 'int'
        `-ParenExpr 0x55ef1b2151b8 <line:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b215190 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b2150c8 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b2150a0 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b215040 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b215080 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b215060 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b215170 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b215148 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b2150e8 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b215128 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b215108 <line:55:19> 'int' 1
!([B7.14])
   T: if ([B8.35] && [B7.15])
   Preds (1): B8
   Succs (2): B6 B0

 [B8]
   1: DeclRefExpr 0x55ef1b214840 <lgc.c:695:23> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55ef1b214868 <lgc.c:695:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b214840 <col:23> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
[B8.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55ef1b214880 <lgc.c:695:23, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55ef1b1a1218
`-ImplicitCastExpr 0x55ef1b214868 <lgc.c:695:23> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b214840 <col:23> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
[B8.2]->l_G
   4: ImplicitCastExpr 0x55ef1b2148d8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55ef1b2148b8 <col:14, col:21> 'global_State *' lvalue
  `-MemberExpr 0x55ef1b214880 <lgc.c:695:23, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55ef1b1a1218
    `-ImplicitCastExpr 0x55ef1b214868 <lgc.c:695:23> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b214840 <col:23> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
([B8.3]) (ImplicitCastExpr, LValueToRValue, global_State *)
   5: DeclStmt 0x55ef1b2148f0 <lgc.c:695:3, col:25>col:17
`-VarDecl 0x55ef1b2147e0 <col:3, ./lstate.h:130:21> lgc.c:695:17 used g 'global_State *' cinit
  `-ImplicitCastExpr 0x55ef1b2148d8 <./lstate.h:130:14, col:21> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55ef1b2148b8 <col:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x55ef1b214880 <lgc.c:695:23, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x55ef1b1a1218
        `-ImplicitCastExpr 0x55ef1b214868 <lgc.c:695:23> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x55ef1b214840 <col:23> 'lua_State *' lvalue ParmVar 0x55ef1b2145d8 'L' 'lua_State *'
global_State *g = (L->l_G);
   6: DeclRefExpr 0x55ef1b214978 <lgc.c:696:25> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
uv
   7: ImplicitCastExpr 0x55ef1b214a20 <./llimits.h:75:26, col:30> 'UpVal *' <LValueToRValue>
`-ParenExpr 0x55ef1b214a00 <col:26, col:30> 'UpVal *' lvalue
  `-ParenExpr 0x55ef1b2149a0 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
    `-DeclRefExpr 0x55ef1b214978 <lgc.c:696:25> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
(([B8.6])) (ImplicitCastExpr, LValueToRValue, UpVal *)
   8: CStyleCastExpr 0x55ef1b214a38 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x55ef1b214a20 <col:26, col:30> 'UpVal *' <LValueToRValue>
  `-ParenExpr 0x55ef1b214a00 <col:26, col:30> 'UpVal *' lvalue
    `-ParenExpr 0x55ef1b2149a0 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
      `-DeclRefExpr 0x55ef1b214978 <lgc.c:696:25> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
(GCObject *)[B8.7] (CStyleCastExpr, BitCast, GCObject *)
   9: DeclStmt 0x55ef1b214aa0 <lgc.c:696:3, col:28>col:13
`-VarDecl 0x55ef1b214918 <col:3, ./lstate.h:162:42> lgc.c:696:13 used o 'GCObject *' cinit
  `-ParenExpr 0x55ef1b214a80 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x55ef1b214a60 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x55ef1b214a38 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x55ef1b214a20 <col:26, col:30> 'UpVal *' <LValueToRValue>
          `-ParenExpr 0x55ef1b214a00 <col:26, col:30> 'UpVal *' lvalue
            `-ParenExpr 0x55ef1b2149a0 <./lstate.h:162:38, col:40> 'UpVal *' lvalue
              `-DeclRefExpr 0x55ef1b214978 <lgc.c:696:25> 'UpVal *' lvalue ParmVar 0x55ef1b214648 'uv' 'UpVal *'
GCObject *o = (((GCObject *)((uv))));
  10: DeclRefExpr 0x55ef1b214b68 <lgc.c:697:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
g
  11: ImplicitCastExpr 0x55ef1b214b90 <lgc.c:697:17> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b214b68 <col:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B8.10] (ImplicitCastExpr, LValueToRValue, global_State *)
  12: MemberExpr 0x55ef1b214ba8 <lgc.c:697:17, col:20> 'GCObject *' lvalue ->rootgc 0x55ef1b19eca0
`-ImplicitCastExpr 0x55ef1b214b90 <col:17> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b214b68 <col:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B8.11]->rootgc
  13: ImplicitCastExpr 0x55ef1b214be0 <lgc.c:697:17, col:20> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b214ba8 <col:17, col:20> 'GCObject *' lvalue ->rootgc 0x55ef1b19eca0
  `-ImplicitCastExpr 0x55ef1b214b90 <col:17> 'global_State *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b214b68 <col:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B8.12] (ImplicitCastExpr, LValueToRValue, GCObject *)
  14: DeclRefExpr 0x55ef1b214ab8 <lgc.c:697:3> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
o
  15: ImplicitCastExpr 0x55ef1b214ae0 <lgc.c:697:3> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b214ab8 <col:3> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.14] (ImplicitCastExpr, LValueToRValue, GCObject *)
  16: MemberExpr 0x55ef1b214af8 <lgc.c:697:3, col:6> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b214ae0 <col:3> 'GCObject *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b214ab8 <col:3> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.15]->gch
  17: MemberExpr 0x55ef1b214b30 <lgc.c:697:3, col:10> 'GCObject *' lvalue .next 0x55ef1b17ec78
`-MemberExpr 0x55ef1b214af8 <col:3, col:6> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b214ae0 <col:3> 'GCObject *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b214ab8 <col:3> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.16].next
  18: BinaryOperator 0x55ef1b214bf8 <lgc.c:697:3, col:20> 'GCObject *' '='
|-MemberExpr 0x55ef1b214b30 <col:3, col:10> 'GCObject *' lvalue .next 0x55ef1b17ec78
| `-MemberExpr 0x55ef1b214af8 <col:3, col:6> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|   `-ImplicitCastExpr 0x55ef1b214ae0 <col:3> 'GCObject *' <LValueToRValue>
|     `-DeclRefExpr 0x55ef1b214ab8 <col:3> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
`-ImplicitCastExpr 0x55ef1b214be0 <col:17, col:20> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b214ba8 <col:17, col:20> 'GCObject *' lvalue ->rootgc 0x55ef1b19eca0
    `-ImplicitCastExpr 0x55ef1b214b90 <col:17> 'global_State *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b214b68 <col:17> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B8.17] = [B8.13]
  19: DeclRefExpr 0x55ef1b214c98 <lgc.c:698:15> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
o
  20: ImplicitCastExpr 0x55ef1b214cc0 <lgc.c:698:15> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b214c98 <col:15> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.19] (ImplicitCastExpr, LValueToRValue, GCObject *)
  21: DeclRefExpr 0x55ef1b214c20 <lgc.c:698:3> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
g
  22: ImplicitCastExpr 0x55ef1b214c48 <lgc.c:698:3> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b214c20 <col:3> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B8.21] (ImplicitCastExpr, LValueToRValue, global_State *)
  23: MemberExpr 0x55ef1b214c60 <lgc.c:698:3, col:6> 'GCObject *' lvalue ->rootgc 0x55ef1b19eca0
`-ImplicitCastExpr 0x55ef1b214c48 <col:3> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b214c20 <col:3> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
[B8.22]->rootgc
  24: BinaryOperator 0x55ef1b214cd8 <lgc.c:698:3, col:15> 'GCObject *' '='
|-MemberExpr 0x55ef1b214c60 <col:3, col:6> 'GCObject *' lvalue ->rootgc 0x55ef1b19eca0
| `-ImplicitCastExpr 0x55ef1b214c48 <col:3> 'global_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55ef1b214c20 <col:3> 'global_State *' lvalue Var 0x55ef1b2147e0 'g' 'global_State *'
`-ImplicitCastExpr 0x55ef1b214cc0 <col:15> 'GCObject *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b214c98 <col:15> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.23] = [B8.20]
  25: DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
o
  26: ImplicitCastExpr 0x55ef1b214d48 <./lgc.h:66:33, col:35> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b214d28 <col:33, col:35> 'GCObject *' lvalue
  `-DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
([B8.25]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  27: MemberExpr 0x55ef1b214d60 <./lgc.h:66:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b214d48 <col:33, col:35> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b214d28 <col:33, col:35> 'GCObject *' lvalue
    `-DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.26]->gch
  28: MemberExpr 0x55ef1b214d98 <./lgc.h:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b214d60 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b214d48 <col:33, col:35> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b214d28 <col:33, col:35> 'GCObject *' lvalue
      `-DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.27].marked
  29: ImplicitCastExpr 0x55ef1b214eb8 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x55ef1b214dd0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x55ef1b214d98 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b214d60 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b214d48 <col:33, col:35> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b214d28 <col:33, col:35> 'GCObject *' lvalue
          `-DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
([B8.28]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  30: ImplicitCastExpr 0x55ef1b214ed0 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b214eb8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x55ef1b214dd0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x55ef1b214d98 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      `-MemberExpr 0x55ef1b214d60 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
        `-ImplicitCastExpr 0x55ef1b214d48 <col:33, col:35> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x55ef1b214d28 <col:33, col:35> 'GCObject *' lvalue
            `-DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
[B8.29] (ImplicitCastExpr, IntegralCast, int)
  31: IntegerLiteral 0x55ef1b214df0 <./lgc.h:30:21> 'int' 1
1
  32: IntegerLiteral 0x55ef1b214e10 <./lgc.h:56:18> 'int' 2
2
  33: BinaryOperator 0x55ef1b214e50 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b214df0 <col:21> 'int' 1
`-ParenExpr 0x55ef1b214e30 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b214e10 <line:56:18> 'int' 2
[B8.31] << ([B8.32])
  34: BinaryOperator 0x55ef1b214ee8 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x55ef1b214ed0 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b214eb8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x55ef1b214dd0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x55ef1b214d98 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|       `-MemberExpr 0x55ef1b214d60 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|         `-ImplicitCastExpr 0x55ef1b214d48 <col:33, col:35> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x55ef1b214d28 <col:33, col:35> 'GCObject *' lvalue
|             `-DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
`-ParenExpr 0x55ef1b214e98 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x55ef1b214e78 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x55ef1b214e50 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x55ef1b214df0 <col:21> 'int' 1
      `-ParenExpr 0x55ef1b214e30 <col:24, col:26> 'int'
        `-IntegerLiteral 0x55ef1b214e10 <line:56:18> 'int' 2
[B8.30] & (([B8.33]))
  35: UnaryOperator 0x55ef1b214f30 <./lgc.h:67:20, line:29:33> 'int' prefix '!'
`-ParenExpr 0x55ef1b214f10 <col:23, col:33> 'int'
  `-BinaryOperator 0x55ef1b214ee8 <col:24, col:32> 'int' '&'
    |-ImplicitCastExpr 0x55ef1b214ed0 <col:24, col:26> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55ef1b214eb8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-ParenExpr 0x55ef1b214dd0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    |     `-MemberExpr 0x55ef1b214d98 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    |       `-MemberExpr 0x55ef1b214d60 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
    |         `-ImplicitCastExpr 0x55ef1b214d48 <col:33, col:35> 'GCObject *' <LValueToRValue>
    |           `-ParenExpr 0x55ef1b214d28 <col:33, col:35> 'GCObject *' lvalue
    |             `-DeclRefExpr 0x55ef1b214d00 <lgc.c:699:14> 'GCObject *' lvalue Var 0x55ef1b214918 'o' 'GCObject *'
    `-ParenExpr 0x55ef1b214e98 <./lgc.h:29:30, col:32> 'int'
      `-ParenExpr 0x55ef1b214e78 <line:30:20, col:27> 'int'
        `-BinaryOperator 0x55ef1b214e50 <col:21, col:26> 'int' '<<'
          |-IntegerLiteral 0x55ef1b214df0 <col:21> 'int' 1
          `-ParenExpr 0x55ef1b214e30 <col:24, col:26> 'int'
            `-IntegerLiteral 0x55ef1b214e10 <line:56:18> 'int' 2
!([B8.34])
   T: [B8.35] && ...
   Preds (1): B9
   Succs (2): B7 B0

 [B0 (EXIT)]
   Preds (7): B1 B2 B3 B4 B5 B7 B8
