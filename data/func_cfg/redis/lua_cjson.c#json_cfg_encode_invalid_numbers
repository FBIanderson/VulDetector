static int json_cfg_encode_invalid_numbers(lua_State *l)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: IntegerLiteral 0x563107e06270 <lua_cjson.c:347:12> 'int' 1
1
   2: ReturnStmt 0x563107e06290 <lua_cjson.c:347:5, col:12>
`-IntegerLiteral 0x563107e06270 <col:12> 'int' 1
return [B1.1];
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x563107e06230 <lua_cjson.c:335:66> 'int' 0
0
   T: do ... while [B2.1]
   Preds (2): B3 B4
   Succs (2): NULL B1

 [B3]
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x563107e05f30 <lua_cjson.c:341:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
json_arg_init
   2: ImplicitCastExpr 0x563107e05fa0 <lua_cjson.c:341:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e05f30 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, json_config_t *(*)(lua_State *, int))
   3: DeclRefExpr 0x563107e05f58 <lua_cjson.c:341:40> 'lua_State *' lvalue ParmVar 0x563107e059e0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e05ff0 <lua_cjson.c:341:40> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e05f58 <col:40> 'lua_State *' lvalue ParmVar 0x563107e059e0 'l' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e05f80 <lua_cjson.c:341:43> 'int' 1
1
   6: CallExpr 0x563107e05fb8 <lua_cjson.c:341:26, col:44> 'json_config_t *'
|-ImplicitCastExpr 0x563107e05fa0 <col:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e05f30 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
|-ImplicitCastExpr 0x563107e05ff0 <col:40> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e05f58 <col:40> 'lua_State *' lvalue ParmVar 0x563107e059e0 'l' 'lua_State *'
`-IntegerLiteral 0x563107e05f80 <col:43> 'int' 1
[B4.2]([B4.4], [B4.5])
   7: DeclStmt 0x563107e06020 <lua_cjson.c:341:5, col:45>col:20
`-VarDecl 0x563107e05ed0 <col:5, col:44> col:20 used cfg 'json_config_t *' cinit
  `-CallExpr 0x563107e05fb8 <col:26, col:44> 'json_config_t *'
    |-ImplicitCastExpr 0x563107e05fa0 <col:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563107e05f30 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
    |-ImplicitCastExpr 0x563107e05ff0 <col:40> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x563107e05f58 <col:40> 'lua_State *' lvalue ParmVar 0x563107e059e0 'l' 'lua_State *'
    `-IntegerLiteral 0x563107e05f80 <col:43> 'int' 1
json_config_t *cfg = json_arg_init(l, 1);
   8: DeclRefExpr 0x563107e06038 <lua_cjson.c:343:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
json_enum_option
   9: ImplicitCastExpr 0x563107e06188 <lua_cjson.c:343:5> 'int (*)(lua_State *, int, int *, const char **, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e06038 <col:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
[B4.8] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int *, const char **, int))
  10: DeclRefExpr 0x563107e06060 <lua_cjson.c:343:22> 'lua_State *' lvalue ParmVar 0x563107e059e0 'l' 'lua_State *'
l
  11: ImplicitCastExpr 0x563107e061f0 <lua_cjson.c:343:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e06060 <col:22> 'lua_State *' lvalue ParmVar 0x563107e059e0 'l' 'lua_State *'
[B4.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x563107e06088 <lua_cjson.c:343:25> 'int' 1
1
  13: DeclRefExpr 0x563107e060a8 <lua_cjson.c:343:29> 'json_config_t *' lvalue Var 0x563107e05ed0 'cfg' 'json_config_t *'
cfg
  14: ImplicitCastExpr 0x563107e060d0 <lua_cjson.c:343:29> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e060a8 <col:29> 'json_config_t *' lvalue Var 0x563107e05ed0 'cfg' 'json_config_t *'
[B4.13] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  15: MemberExpr 0x563107e060e8 <lua_cjson.c:343:29, col:34> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
`-ImplicitCastExpr 0x563107e060d0 <col:29> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e060a8 <col:29> 'json_config_t *' lvalue Var 0x563107e05ed0 'cfg' 'json_config_t *'
[B4.14]->encode_invalid_numbers
  16: UnaryOperator 0x563107e06120 <lua_cjson.c:343:28, col:34> 'int *' prefix '&'
`-MemberExpr 0x563107e060e8 <col:29, col:34> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
  `-ImplicitCastExpr 0x563107e060d0 <col:29> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e060a8 <col:29> 'json_config_t *' lvalue Var 0x563107e05ed0 'cfg' 'json_config_t *'
&[B4.15]
  17: DeclRefExpr 0x563107e06140 <lua_cjson.c:343:58> 'const char *[4]' lvalue Var 0x563107e05b40 'options' 'const char *[4]'
options
  18: ImplicitCastExpr 0x563107e06208 <lua_cjson.c:343:58> 'const char **' <ArrayToPointerDecay>
`-DeclRefExpr 0x563107e06140 <col:58> 'const char *[4]' lvalue Var 0x563107e05b40 'options' 'const char *[4]'
[B4.17] (ImplicitCastExpr, ArrayToPointerDecay, const char **)
  19: IntegerLiteral 0x563107e06168 <lua_cjson.c:343:67> 'int' 1
1
  20: CallExpr 0x563107e061a0 <lua_cjson.c:343:5, col:68> 'int'
|-ImplicitCastExpr 0x563107e06188 <col:5> 'int (*)(lua_State *, int, int *, const char **, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e06038 <col:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
|-ImplicitCastExpr 0x563107e061f0 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e06060 <col:22> 'lua_State *' lvalue ParmVar 0x563107e059e0 'l' 'lua_State *'
|-IntegerLiteral 0x563107e06088 <col:25> 'int' 1
|-UnaryOperator 0x563107e06120 <col:28, col:34> 'int *' prefix '&'
| `-MemberExpr 0x563107e060e8 <col:29, col:34> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
|   `-ImplicitCastExpr 0x563107e060d0 <col:29> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e060a8 <col:29> 'json_config_t *' lvalue Var 0x563107e05ed0 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e06208 <col:58> 'const char **' <ArrayToPointerDecay>
| `-DeclRefExpr 0x563107e06140 <col:58> 'const char *[4]' lvalue Var 0x563107e05b40 'options' 'const char *[4]'
`-IntegerLiteral 0x563107e06168 <col:67> 'int' 1
[B4.9]([B4.11], [B4.12], [B4.16], [B4.18], [B4.19])
   Preds (2): B5 B6
   Succs (1): B2

 [B5]
   1: StringLiteral 0x563107e05ba0 <lua_cjson.c:340:38> 'char [4]' lvalue "off"
"off"
   2: ImplicitCastExpr 0x563107e05d88 <lua_cjson.c:340:38> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e05ba0 <col:38> 'char [4]' lvalue "off"
[B5.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x563107e05da0 <lua_cjson.c:340:38> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e05d88 <col:38> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e05ba0 <col:38> 'char [4]' lvalue "off"
[B5.2] (ImplicitCastExpr, BitCast, const char *)
   4: StringLiteral 0x563107e05bd0 <lua_cjson.c:340:45> 'char [3]' lvalue "on"
"on"
   5: ImplicitCastExpr 0x563107e05dc0 <lua_cjson.c:340:45> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e05bd0 <col:45> 'char [3]' lvalue "on"
[B5.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: ImplicitCastExpr 0x563107e05dd8 <lua_cjson.c:340:45> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e05dc0 <col:45> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e05bd0 <col:45> 'char [3]' lvalue "on"
[B5.5] (ImplicitCastExpr, BitCast, const char *)
   7: StringLiteral 0x563107e05c38 <lua_cjson.c:340:51> 'char [5]' lvalue "null"
"null"
   8: ImplicitCastExpr 0x563107e05e00 <lua_cjson.c:340:51> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e05c38 <col:51> 'char [5]' lvalue "null"
[B5.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x563107e05e18 <lua_cjson.c:340:51> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e05e00 <col:51> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e05c38 <col:51> 'char [5]' lvalue "null"
[B5.8] (ImplicitCastExpr, BitCast, const char *)
  10: IntegerLiteral 0x563107e05c68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  11: CStyleCastExpr 0x563107e05ca0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x563107e05c68 <col:24> 'int' 0
(void *)[B5.10] (CStyleCastExpr, NullToPointer, void *)
  12: ImplicitCastExpr 0x563107e05e50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x563107e05cc8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x563107e05ca0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x563107e05c68 <col:24> 'int' 0
([B5.11]) (ImplicitCastExpr, NullToPointer, const char *)
  13: InitListExpr 0x563107e05d48 <lua_cjson.c:340:36, col:64> 'const char *[4]'
|-ImplicitCastExpr 0x563107e05da0 <col:38> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e05d88 <col:38> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e05ba0 <col:38> 'char [4]' lvalue "off"
|-ImplicitCastExpr 0x563107e05dd8 <col:45> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e05dc0 <col:45> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e05bd0 <col:45> 'char [3]' lvalue "on"
|-ImplicitCastExpr 0x563107e05e18 <col:51> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e05e00 <col:51> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e05c38 <col:51> 'char [5]' lvalue "null"
`-ImplicitCastExpr 0x563107e05e50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x563107e05cc8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x563107e05ca0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x563107e05c68 <col:24> 'int' 0
{[B5.3], [B5.6], [B5.9], [B5.12]}
  14: DeclStmt 0x563107e05ea8 <lua_cjson.c:340:5, col:65>col:24
`-VarDecl 0x563107e05b40 <col:5, col:64> col:24 used options 'const char *[4]' static cinit
  `-InitListExpr 0x563107e05d48 <col:36, col:64> 'const char *[4]'
    |-ImplicitCastExpr 0x563107e05da0 <col:38> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x563107e05d88 <col:38> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x563107e05ba0 <col:38> 'char [4]' lvalue "off"
    |-ImplicitCastExpr 0x563107e05dd8 <col:45> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x563107e05dc0 <col:45> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x563107e05bd0 <col:45> 'char [3]' lvalue "on"
    |-ImplicitCastExpr 0x563107e05e18 <col:51> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x563107e05e00 <col:51> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x563107e05c38 <col:51> 'char [5]' lvalue "null"
    `-ImplicitCastExpr 0x563107e05e50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
      `-ParenExpr 0x563107e05cc8 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x563107e05ca0 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x563107e05c68 <col:24> 'int' 0
static const char *options[] = {"off", "on", "null", ((void *)0)};
   Preds (1): B6
   Succs (1): B4

 [B6]
   T: static init options
   Preds (1): B7
   Succs (2): B4 B5

 [B0 (EXIT)]
   Preds (1): B1
