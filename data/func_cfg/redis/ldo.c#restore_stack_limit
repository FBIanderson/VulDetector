static void restore_stack_limit(lua_State *L)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x55f42eebf398 <ldo.c:76:7> 'void (lua_State *, int)' Function 0x55f42ee93cc8 'luaD_reallocCI' 'void (lua_State *, int)'
luaD_reallocCI
   2: ImplicitCastExpr 0x55f42eebf468 <ldo.c:76:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eebf398 <col:7> 'void (lua_State *, int)' Function 0x55f42ee93cc8 'luaD_reallocCI' 'void (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55f42eebf3c0 <ldo.c:76:22> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f42eebf4b8 <ldo.c:76:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebf3c0 <col:22> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55f42eebf3e8 <./luaconf.h:435:23> 'int' 20000
20000
   6: CallExpr 0x55f42eebf480 <ldo.c:76:7, col:38> 'void'
|-ImplicitCastExpr 0x55f42eebf468 <col:7> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eebf398 <col:7> 'void (lua_State *, int)' Function 0x55f42ee93cc8 'luaD_reallocCI' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x55f42eebf4b8 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eebf3c0 <col:22> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
`-IntegerLiteral 0x55f42eebf3e8 <./luaconf.h:435:23> 'int' 20000
[B1.2]([B1.4], [B1.5])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55f42eebf028 <ldo.c:74:26> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eebf050 <ldo.c:74:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebf028 <col:26> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B2.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eebf068 <ldo.c:74:26, col:29> 'CallInfo *' lvalue ->ci 0x55f42ee88928
`-ImplicitCastExpr 0x55f42eebf050 <col:26> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebf028 <col:26> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B2.2]->ci
   4: ImplicitCastExpr 0x55f42eebf118 <ldo.c:74:26, col:29> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x55f42eebf068 <col:26, col:29> 'CallInfo *' lvalue ->ci 0x55f42ee88928
  `-ImplicitCastExpr 0x55f42eebf050 <col:26> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebf028 <col:26> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   5: DeclRefExpr 0x55f42eebf0a0 <ldo.c:74:34> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eebf0c8 <ldo.c:74:34> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebf0a0 <col:34> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B2.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x55f42eebf0e0 <ldo.c:74:34, col:37> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
`-ImplicitCastExpr 0x55f42eebf0c8 <col:34> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebf0a0 <col:34> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B2.6]->base_ci
   8: ImplicitCastExpr 0x55f42eebf130 <ldo.c:74:34, col:37> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x55f42eebf0e0 <col:34, col:37> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
  `-ImplicitCastExpr 0x55f42eebf0c8 <col:34> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebf0a0 <col:34> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B2.7] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   9: BinaryOperator 0x55f42eebf1b8 <ldo.c:74:26, col:37> 'long' '-'
|-ImplicitCastExpr 0x55f42eebf118 <col:26, col:29> 'CallInfo *' <LValueToRValue>
| `-MemberExpr 0x55f42eebf068 <col:26, col:29> 'CallInfo *' lvalue ->ci 0x55f42ee88928
|   `-ImplicitCastExpr 0x55f42eebf050 <col:26> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x55f42eebf028 <col:26> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eebf130 <col:34, col:37> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x55f42eebf0e0 <col:34, col:37> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
    `-ImplicitCastExpr 0x55f42eebf0c8 <col:34> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eebf0a0 <col:34> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B2.4] - [B2.8]
  10: CStyleCastExpr 0x55f42eebf268 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x55f42eebf248 <col:26, col:30> 'long'
  `-ParenExpr 0x55f42eebf1e0 <line:80:31, col:33> 'long'
    `-BinaryOperator 0x55f42eebf1b8 <ldo.c:74:26, col:37> 'long' '-'
      |-ImplicitCastExpr 0x55f42eebf118 <col:26, col:29> 'CallInfo *' <LValueToRValue>
      | `-MemberExpr 0x55f42eebf068 <col:26, col:29> 'CallInfo *' lvalue ->ci 0x55f42ee88928
      |   `-ImplicitCastExpr 0x55f42eebf050 <col:26> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x55f42eebf028 <col:26> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
      `-ImplicitCastExpr 0x55f42eebf130 <col:34, col:37> 'CallInfo *' <LValueToRValue>
        `-MemberExpr 0x55f42eebf0e0 <col:34, col:37> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
          `-ImplicitCastExpr 0x55f42eebf0c8 <col:34> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x55f42eebf0a0 <col:34> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
(int)(([B2.9])) (CStyleCastExpr, IntegralCast, int)
  11: DeclStmt 0x55f42eebf2b0 <ldo.c:74:5, col:45>col:9
`-VarDecl 0x55f42eebefc8 <col:5, ./llimits.h:75:31> ldo.c:74:9 used inuse 'int' cinit
  `-ParenExpr 0x55f42eebf290 <./llimits.h:75:22, col:31> 'int'
    `-CStyleCastExpr 0x55f42eebf268 <col:23, col:30> 'int' <IntegralCast>
      `-ParenExpr 0x55f42eebf248 <col:26, col:30> 'long'
        `-ParenExpr 0x55f42eebf1e0 <line:80:31, col:33> 'long'
          `-BinaryOperator 0x55f42eebf1b8 <ldo.c:74:26, col:37> 'long' '-'
            |-ImplicitCastExpr 0x55f42eebf118 <col:26, col:29> 'CallInfo *' <LValueToRValue>
            | `-MemberExpr 0x55f42eebf068 <col:26, col:29> 'CallInfo *' lvalue ->ci 0x55f42ee88928
            |   `-ImplicitCastExpr 0x55f42eebf050 <col:26> 'lua_State *' <LValueToRValue>
            |     `-DeclRefExpr 0x55f42eebf028 <col:26> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
            `-ImplicitCastExpr 0x55f42eebf130 <col:34, col:37> 'CallInfo *' <LValueToRValue>
              `-MemberExpr 0x55f42eebf0e0 <col:34, col:37> 'CallInfo *' lvalue ->base_ci 0x55f42ee88ae0
                `-ImplicitCastExpr 0x55f42eebf0c8 <col:34> 'lua_State *' <LValueToRValue>
                  `-DeclRefExpr 0x55f42eebf0a0 <col:34> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
int inuse = ((int)((L->ci - L->base_ci)));
  12: DeclRefExpr 0x55f42eebf2c8 <ldo.c:75:9> 'int' lvalue Var 0x55f42eebefc8 'inuse' 'int'
inuse
  13: ImplicitCastExpr 0x55f42eebf310 <ldo.c:75:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f42eebf2c8 <col:9> 'int' lvalue Var 0x55f42eebefc8 'inuse' 'int'
[B2.12] (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x55f42eebf2f0 <ldo.c:75:17> 'int' 1
1
  15: BinaryOperator 0x55f42eebf328 <ldo.c:75:9, col:17> 'int' '+'
|-ImplicitCastExpr 0x55f42eebf310 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55f42eebf2c8 <col:9> 'int' lvalue Var 0x55f42eebefc8 'inuse' 'int'
`-IntegerLiteral 0x55f42eebf2f0 <col:17> 'int' 1
[B2.13] + [B2.14]
  16: IntegerLiteral 0x55f42eebf350 <./luaconf.h:435:23> 'int' 20000
20000
  17: BinaryOperator 0x55f42eebf370 <ldo.c:75:9, ./luaconf.h:435:23> 'int' '<'
|-BinaryOperator 0x55f42eebf328 <ldo.c:75:9, col:17> 'int' '+'
| |-ImplicitCastExpr 0x55f42eebf310 <col:9> 'int' <LValueToRValue>
| | `-DeclRefExpr 0x55f42eebf2c8 <col:9> 'int' lvalue Var 0x55f42eebefc8 'inuse' 'int'
| `-IntegerLiteral 0x55f42eebf2f0 <col:17> 'int' 1
`-IntegerLiteral 0x55f42eebf350 <./luaconf.h:435:23> 'int' 20000
[B2.15] < [B2.16]
   T: if [B2.17]
   Preds (1): B3
   Succs (2): B1 B0

 [B3]
   1: IntegerLiteral 0x55f42eebee60 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x55f42eebee90 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eebee60 <col:31> 'int' 0
(void)[B3.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x55f42eebeed8 <ldo.c:73:7> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f42eebef00 <ldo.c:73:7> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebeed8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x55f42eebef18 <ldo.c:73:7, col:10> 'int' lvalue ->size_ci 0x55f42ee88ba0
`-ImplicitCastExpr 0x55f42eebef00 <col:7> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebeed8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B3.4]->size_ci
   6: ImplicitCastExpr 0x55f42eebef70 <ldo.c:73:7, col:10> 'int' <LValueToRValue>
`-MemberExpr 0x55f42eebef18 <col:7, col:10> 'int' lvalue ->size_ci 0x55f42ee88ba0
  `-ImplicitCastExpr 0x55f42eebef00 <col:7> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebeed8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x55f42eebef50 <./luaconf.h:435:23> 'int' 20000
20000
   8: BinaryOperator 0x55f42eebef88 <ldo.c:73:7, ./luaconf.h:435:23> 'int' '>'
|-ImplicitCastExpr 0x55f42eebef70 <ldo.c:73:7, col:10> 'int' <LValueToRValue>
| `-MemberExpr 0x55f42eebef18 <col:7, col:10> 'int' lvalue ->size_ci 0x55f42ee88ba0
|   `-ImplicitCastExpr 0x55f42eebef00 <col:7> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x55f42eebeed8 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eebed30 'L' 'lua_State *'
`-IntegerLiteral 0x55f42eebef50 <./luaconf.h:435:23> 'int' 20000
[B3.6] > [B3.7]
   T: if [B3.8]
   Preds (1): B4
   Succs (2): B2 B0

 [B0 (EXIT)]
   Preds (3): B1 B2 B3
