static int json_enum_option(lua_State *l, int optindex, int *setting, const char **options, int bool_true)
 [B16 (ENTRY)]
   Succs (1): B15

 [B1]
   1: IntegerLiteral 0x563107e025d0 <lua_cjson.c:261:12> 'int' 1
1
   2: ReturnStmt 0x563107e025f0 <lua_cjson.c:261:5, col:12>
`-IntegerLiteral 0x563107e025d0 <col:12> 'int' 1
return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x563107e02388 <lua_cjson.c:259:9> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x563107d57158 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
   2: ImplicitCastExpr 0x563107e02518 <lua_cjson.c:259:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e02388 <col:9> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x563107d57158 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
   3: DeclRefExpr 0x563107e023b0 <lua_cjson.c:259:24> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e02568 <lua_cjson.c:259:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e023b0 <col:24> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e023d8 <lua_cjson.c:259:27> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
options
   6: ImplicitCastExpr 0x563107e02460 <lua_cjson.c:259:27> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x563107e023d8 <col:27> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
[B2.5] (ImplicitCastExpr, LValueToRValue, const char **)
   7: DeclRefExpr 0x563107e02400 <lua_cjson.c:259:36> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
setting
   8: ImplicitCastExpr 0x563107e02428 <lua_cjson.c:259:36> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e02400 <col:36> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B2.7] (ImplicitCastExpr, LValueToRValue, int *)
   9: UnaryOperator 0x563107e02440 <lua_cjson.c:259:35, col:36> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e02428 <col:36> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e02400 <col:36> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
*[B2.8]
  10: ImplicitCastExpr 0x563107e02478 <lua_cjson.c:259:35, col:36> 'int' <LValueToRValue>
`-UnaryOperator 0x563107e02440 <col:35, col:36> 'int' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e02428 <col:36> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x563107e02400 <col:36> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B2.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x563107e02490 <lua_cjson.c:259:27, col:43> 'const char *' lvalue
|-ImplicitCastExpr 0x563107e02460 <col:27> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x563107e023d8 <col:27> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
`-ImplicitCastExpr 0x563107e02478 <col:35, col:36> 'int' <LValueToRValue>
  `-UnaryOperator 0x563107e02440 <col:35, col:36> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e02428 <col:36> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x563107e02400 <col:36> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B2.6][[B2.10]]
  12: ImplicitCastExpr 0x563107e02580 <lua_cjson.c:259:27, col:43> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x563107e02490 <col:27, col:43> 'const char *' lvalue
  |-ImplicitCastExpr 0x563107e02460 <col:27> 'const char **' <LValueToRValue>
  | `-DeclRefExpr 0x563107e023d8 <col:27> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
  `-ImplicitCastExpr 0x563107e02478 <col:35, col:36> 'int' <LValueToRValue>
    `-UnaryOperator 0x563107e02440 <col:35, col:36> 'int' lvalue prefix '*'
      `-ImplicitCastExpr 0x563107e02428 <col:36> 'int *' <LValueToRValue>
        `-DeclRefExpr 0x563107e02400 <col:36> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B2.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: CallExpr 0x563107e02530 <lua_cjson.c:259:9, col:44> 'void'
|-ImplicitCastExpr 0x563107e02518 <col:9> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e02388 <col:9> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x563107d57158 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x563107e02568 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e023b0 <col:24> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e02580 <col:27, col:43> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x563107e02490 <col:27, col:43> 'const char *' lvalue
    |-ImplicitCastExpr 0x563107e02460 <col:27> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x563107e023d8 <col:27> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
    `-ImplicitCastExpr 0x563107e02478 <col:35, col:36> 'int' <LValueToRValue>
      `-UnaryOperator 0x563107e02440 <col:35, col:36> 'int' lvalue prefix '*'
        `-ImplicitCastExpr 0x563107e02428 <col:36> 'int *' <LValueToRValue>
          `-DeclRefExpr 0x563107e02400 <col:36> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B2.2]([B2.4], [B2.12])
   Preds (2): B4 B6
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x563107e02200 <lua_cjson.c:257:9> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d57c60 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushboolean
   2: ImplicitCastExpr 0x563107e02308 <lua_cjson.c:257:9> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e02200 <col:9> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d57c60 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e02228 <lua_cjson.c:257:25> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e02358 <lua_cjson.c:257:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e02228 <col:25> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e02250 <lua_cjson.c:257:29> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
setting
   6: ImplicitCastExpr 0x563107e02278 <lua_cjson.c:257:29> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e02250 <col:29> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B3.5] (ImplicitCastExpr, LValueToRValue, int *)
   7: UnaryOperator 0x563107e02290 <lua_cjson.c:257:28, col:29> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e02278 <col:29> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e02250 <col:29> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
*[B3.6]
   8: ImplicitCastExpr 0x563107e02370 <lua_cjson.c:257:28, col:29> 'int' <LValueToRValue>
`-UnaryOperator 0x563107e02290 <col:28, col:29> 'int' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e02278 <col:29> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x563107e02250 <col:29> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B3.7] (ImplicitCastExpr, LValueToRValue, int)
   9: CallExpr 0x563107e02320 <lua_cjson.c:257:9, col:36> 'void'
|-ImplicitCastExpr 0x563107e02308 <col:9> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e02200 <col:9> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d57c60 'lua_pushboolean' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x563107e02358 <col:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e02228 <col:25> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e02370 <col:28, col:29> 'int' <LValueToRValue>
  `-UnaryOperator 0x563107e02290 <col:28, col:29> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e02278 <col:29> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x563107e02250 <col:29> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B3.2]([B3.4], [B3.8])
   Preds (2): B4 B5
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x563107e02098 <lua_cjson.c:256:41> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
setting
   2: ImplicitCastExpr 0x563107e020c0 <lua_cjson.c:256:41> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e02098 <col:41> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B4.1] (ImplicitCastExpr, LValueToRValue, int *)
   3: UnaryOperator 0x563107e020d8 <lua_cjson.c:256:40, col:41> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e020c0 <col:41> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e02098 <col:41> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
*[B4.2]
   4: ImplicitCastExpr 0x563107e02120 <lua_cjson.c:256:40, col:41> 'int' <LValueToRValue>
`-UnaryOperator 0x563107e020d8 <col:40, col:41> 'int' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e020c0 <col:41> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x563107e02098 <col:41> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x563107e020f8 <lua_cjson.c:256:52> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
bool_true
   6: ImplicitCastExpr 0x563107e02138 <lua_cjson.c:256:52> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e020f8 <col:52> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x563107e02150 <lua_cjson.c:256:40, col:52> 'int' '=='
|-ImplicitCastExpr 0x563107e02120 <col:40, col:41> 'int' <LValueToRValue>
| `-UnaryOperator 0x563107e020d8 <col:40, col:41> 'int' lvalue prefix '*'
|   `-ImplicitCastExpr 0x563107e020c0 <col:41> 'int *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e02098 <col:41> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
`-ImplicitCastExpr 0x563107e02138 <col:52> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e020f8 <col:52> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
[B4.4] == [B4.6]
   T: if [B6.2] && ([B5.6] || [B4.7])
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x563107e01fd8 <lua_cjson.c:256:24> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
setting
   2: ImplicitCastExpr 0x563107e02000 <lua_cjson.c:256:24> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e01fd8 <col:24> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B5.1] (ImplicitCastExpr, LValueToRValue, int *)
   3: UnaryOperator 0x563107e02018 <lua_cjson.c:256:23, col:24> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e02000 <col:24> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e01fd8 <col:24> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
*[B5.2]
   4: ImplicitCastExpr 0x563107e02058 <lua_cjson.c:256:23, col:24> 'int' <LValueToRValue>
`-UnaryOperator 0x563107e02018 <col:23, col:24> 'int' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e02000 <col:24> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x563107e01fd8 <col:24> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x563107e02038 <lua_cjson.c:256:35> 'int' 0
0
   6: BinaryOperator 0x563107e02070 <lua_cjson.c:256:23, col:35> 'int' '=='
|-ImplicitCastExpr 0x563107e02058 <col:23, col:24> 'int' <LValueToRValue>
| `-UnaryOperator 0x563107e02018 <col:23, col:24> 'int' lvalue prefix '*'
|   `-ImplicitCastExpr 0x563107e02000 <col:24> 'int *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e01fd8 <col:24> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
`-IntegerLiteral 0x563107e02038 <col:35> 'int' 0
[B5.4] == [B5.5]
   T: [B5.6] || ...
   Preds (1): B6
   Succs (2): B3 B4

 [B6]
   1: DeclRefExpr 0x563107e01fb0 <lua_cjson.c:256:9> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
bool_true
   2: ImplicitCastExpr 0x563107e021c0 <lua_cjson.c:256:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e01fb0 <col:9> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B6.2] && ...
   Preds (3): B7 B8 B11
   Succs (2): B5 B2

 [B7]
   1: DeclRefExpr 0x563107e01ca8 <lua_cjson.c:253:24> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x563107d96268 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
luaL_checkoption
   2: ImplicitCastExpr 0x563107e01e28 <lua_cjson.c:253:24> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e01ca8 <col:24> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x563107d96268 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *, const char *const *))
   3: DeclRefExpr 0x563107e01cd0 <lua_cjson.c:253:41> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e01e88 <lua_cjson.c:253:41> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e01cd0 <col:41> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e01cf8 <lua_cjson.c:253:44> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
optindex
   6: ImplicitCastExpr 0x563107e01ea0 <lua_cjson.c:253:44> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e01cf8 <col:44> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x563107e01d20 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x563107e01d58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x563107e01d20 <col:24> 'int' 0
(void *)[B7.7] (CStyleCastExpr, NullToPointer, void *)
   9: ImplicitCastExpr 0x563107e01eb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x563107e01d80 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x563107e01d58 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x563107e01d20 <col:24> 'int' 0
([B7.8]) (ImplicitCastExpr, NullToPointer, const char *)
  10: DeclRefExpr 0x563107e01da0 <lua_cjson.c:253:60> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
options
  11: ImplicitCastExpr 0x563107e01ed0 <lua_cjson.c:253:60> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x563107e01da0 <col:60> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
[B7.10] (ImplicitCastExpr, LValueToRValue, const char **)
  12: ImplicitCastExpr 0x563107e01ee8 <lua_cjson.c:253:60> 'const char *const *':'const char *const *' <BitCast>
`-ImplicitCastExpr 0x563107e01ed0 <col:60> 'const char **' <LValueToRValue>
  `-DeclRefExpr 0x563107e01da0 <col:60> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
[B7.11] (ImplicitCastExpr, BitCast, const char *const *)
  13: CallExpr 0x563107e01e40 <lua_cjson.c:253:24, col:67> 'int'
|-ImplicitCastExpr 0x563107e01e28 <col:24> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e01ca8 <col:24> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x563107d96268 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
|-ImplicitCastExpr 0x563107e01e88 <col:41> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e01cd0 <col:41> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e01ea0 <col:44> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e01cf8 <col:44> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
|-ImplicitCastExpr 0x563107e01eb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
| `-ParenExpr 0x563107e01d80 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x563107e01d58 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x563107e01d20 <col:24> 'int' 0
`-ImplicitCastExpr 0x563107e01ee8 <lua_cjson.c:253:60> 'const char *const *':'const char *const *' <BitCast>
  `-ImplicitCastExpr 0x563107e01ed0 <col:60> 'const char **' <LValueToRValue>
    `-DeclRefExpr 0x563107e01da0 <col:60> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
[B7.2]([B7.4], [B7.6], [B7.9], [B7.12])
  14: DeclRefExpr 0x563107e01c48 <lua_cjson.c:253:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
setting
  15: ImplicitCastExpr 0x563107e01c70 <lua_cjson.c:253:14> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e01c48 <col:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B7.14] (ImplicitCastExpr, LValueToRValue, int *)
  16: UnaryOperator 0x563107e01c88 <lua_cjson.c:253:13, col:14> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e01c70 <col:14> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e01c48 <col:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
*[B7.15]
  17: BinaryOperator 0x563107e01f00 <lua_cjson.c:253:13, col:67> 'int' '='
|-UnaryOperator 0x563107e01c88 <col:13, col:14> 'int' lvalue prefix '*'
| `-ImplicitCastExpr 0x563107e01c70 <col:14> 'int *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e01c48 <col:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
`-CallExpr 0x563107e01e40 <col:24, col:67> 'int'
  |-ImplicitCastExpr 0x563107e01e28 <col:24> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e01ca8 <col:24> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x563107d96268 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
  |-ImplicitCastExpr 0x563107e01e88 <col:41> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e01cd0 <col:41> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
  |-ImplicitCastExpr 0x563107e01ea0 <col:44> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x563107e01cf8 <col:44> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
  |-ImplicitCastExpr 0x563107e01eb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  | `-ParenExpr 0x563107e01d80 <col:16, col:25> 'void *'
  |   `-CStyleCastExpr 0x563107e01d58 <col:17, col:24> 'void *' <NullToPointer>
  |     `-IntegerLiteral 0x563107e01d20 <col:24> 'int' 0
  `-ImplicitCastExpr 0x563107e01ee8 <lua_cjson.c:253:60> 'const char *const *':'const char *const *' <BitCast>
    `-ImplicitCastExpr 0x563107e01ed0 <col:60> 'const char **' <LValueToRValue>
      `-DeclRefExpr 0x563107e01da0 <col:60> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
[B7.16] = [B7.13]
   Preds (2): B9 B10
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x563107e01ac0 <lua_cjson.c:251:24> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d54578 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_toboolean
   2: ImplicitCastExpr 0x563107e01b38 <lua_cjson.c:251:24> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e01ac0 <col:24> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d54578 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e01ae8 <lua_cjson.c:251:38> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e01b88 <lua_cjson.c:251:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e01ae8 <col:38> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e01b10 <lua_cjson.c:251:41> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
optindex
   6: ImplicitCastExpr 0x563107e01ba0 <lua_cjson.c:251:41> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e01b10 <col:41> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
[B8.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x563107e01b50 <lua_cjson.c:251:24, col:49> 'int'
|-ImplicitCastExpr 0x563107e01b38 <col:24> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e01ac0 <col:24> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d54578 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e01b88 <col:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e01ae8 <col:38> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e01ba0 <col:41> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e01b10 <col:41> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
[B8.2]([B8.4], [B8.6])
   8: DeclRefExpr 0x563107e01bb8 <lua_cjson.c:251:53> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
bool_true
   9: ImplicitCastExpr 0x563107e01be0 <lua_cjson.c:251:53> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e01bb8 <col:53> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
[B8.8] (ImplicitCastExpr, LValueToRValue, int)
  10: BinaryOperator 0x563107e01bf8 <lua_cjson.c:251:24, col:53> 'int' '*'
|-CallExpr 0x563107e01b50 <col:24, col:49> 'int'
| |-ImplicitCastExpr 0x563107e01b38 <col:24> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e01ac0 <col:24> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d54578 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x563107e01b88 <col:38> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e01ae8 <col:38> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
| `-ImplicitCastExpr 0x563107e01ba0 <col:41> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x563107e01b10 <col:41> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
`-ImplicitCastExpr 0x563107e01be0 <col:53> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e01bb8 <col:53> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
[B8.7] * [B8.9]
  11: DeclRefExpr 0x563107e01a60 <lua_cjson.c:251:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
setting
  12: ImplicitCastExpr 0x563107e01a88 <lua_cjson.c:251:14> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e01a60 <col:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
[B8.11] (ImplicitCastExpr, LValueToRValue, int *)
  13: UnaryOperator 0x563107e01aa0 <lua_cjson.c:251:13, col:14> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e01a88 <col:14> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e01a60 <col:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
*[B8.12]
  14: BinaryOperator 0x563107e01c20 <lua_cjson.c:251:13, col:53> 'int' '='
|-UnaryOperator 0x563107e01aa0 <col:13, col:14> 'int' lvalue prefix '*'
| `-ImplicitCastExpr 0x563107e01a88 <col:14> 'int *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e01a60 <col:14> 'int *' lvalue ParmVar 0x563107e00e70 'setting' 'int *'
`-BinaryOperator 0x563107e01bf8 <col:24, col:53> 'int' '*'
  |-CallExpr 0x563107e01b50 <col:24, col:49> 'int'
  | |-ImplicitCastExpr 0x563107e01b38 <col:24> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x563107e01ac0 <col:24> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d54578 'lua_toboolean' 'int (lua_State *, int)':'int (lua_State *, int)'
  | |-ImplicitCastExpr 0x563107e01b88 <col:38> 'lua_State *' <LValueToRValue>
  | | `-DeclRefExpr 0x563107e01ae8 <col:38> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
  | `-ImplicitCastExpr 0x563107e01ba0 <col:41> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x563107e01b10 <col:41> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
  `-ImplicitCastExpr 0x563107e01be0 <col:53> 'int' <LValueToRValue>
    `-DeclRefExpr 0x563107e01bb8 <col:53> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
[B8.13] = [B8.10]
   Preds (1): B9
   Succs (1): B6

 [B9]
   1: DeclRefExpr 0x563107e018a0 <./lua.h:268:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   2: ImplicitCastExpr 0x563107e01938 <./lua.h:268:29> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e018a0 <col:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e018c8 <lua_cjson.c:250:40> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e01988 <lua_cjson.c:250:40> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e018c8 <col:40> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e018f0 <lua_cjson.c:250:43> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
optindex
   6: ImplicitCastExpr 0x563107e019a0 <./lua.h:268:41, col:43> 'int' <LValueToRValue>
`-ParenExpr 0x563107e01918 <col:41, col:43> 'int' lvalue
  `-DeclRefExpr 0x563107e018f0 <lua_cjson.c:250:43> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
([B9.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x563107e01950 <./lua.h:268:29, col:44> 'int'
|-ImplicitCastExpr 0x563107e01938 <col:29> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e018a0 <col:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e01988 <lua_cjson.c:250:40> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e018c8 <col:40> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e019a0 <./lua.h:268:41, col:43> 'int' <LValueToRValue>
  `-ParenExpr 0x563107e01918 <col:41, col:43> 'int' lvalue
    `-DeclRefExpr 0x563107e018f0 <lua_cjson.c:250:43> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
[B9.2]([B9.4], [B9.6])
   8: IntegerLiteral 0x563107e019b8 <./lua.h:75:23> 'int' 1
1
   9: BinaryOperator 0x563107e019d8 <./lua.h:268:29, line:75:23> 'int' '=='
|-CallExpr 0x563107e01950 <line:268:29, col:44> 'int'
| |-ImplicitCastExpr 0x563107e01938 <col:29> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e018a0 <col:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x563107e01988 <lua_cjson.c:250:40> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e018c8 <col:40> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
| `-ImplicitCastExpr 0x563107e019a0 <./lua.h:268:41, col:43> 'int' <LValueToRValue>
|   `-ParenExpr 0x563107e01918 <col:41, col:43> 'int' lvalue
|     `-DeclRefExpr 0x563107e018f0 <lua_cjson.c:250:43> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
`-IntegerLiteral 0x563107e019b8 <./lua.h:75:23> 'int' 1
[B9.7] == [B9.8]
   T: if [B10.2] && ([B9.9])
   Preds (1): B10
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x563107e01878 <lua_cjson.c:250:13> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
bool_true
   2: ImplicitCastExpr 0x563107e01a20 <lua_cjson.c:250:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e01878 <col:13> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B10.2] && ...
   Preds (1): B11
   Succs (2): B9 B7

 [B11]
   1: DeclRefExpr 0x563107e016d8 <./lua.h:267:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   2: ImplicitCastExpr 0x563107e01770 <./lua.h:267:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e016d8 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e01700 <lua_cjson.c:249:20> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e017c0 <lua_cjson.c:249:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e01700 <col:20> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e01728 <lua_cjson.c:249:23> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
optindex
   6: ImplicitCastExpr 0x563107e017d8 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
`-ParenExpr 0x563107e01750 <col:38, col:40> 'int' lvalue
  `-DeclRefExpr 0x563107e01728 <lua_cjson.c:249:23> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
([B11.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x563107e01788 <./lua.h:267:26, col:41> 'int'
|-ImplicitCastExpr 0x563107e01770 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e016d8 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e017c0 <lua_cjson.c:249:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e01700 <col:20> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e017d8 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
  `-ParenExpr 0x563107e01750 <col:38, col:40> 'int' lvalue
    `-DeclRefExpr 0x563107e01728 <lua_cjson.c:249:23> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
[B11.2]([B11.4], [B11.6])
   8: IntegerLiteral 0x563107e017f0 <./lua.h:74:19> 'int' 0
0
   9: BinaryOperator 0x563107e01810 <./lua.h:267:26, line:74:19> 'int' '=='
|-CallExpr 0x563107e01788 <line:267:26, col:41> 'int'
| |-ImplicitCastExpr 0x563107e01770 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e016d8 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x563107e017c0 <lua_cjson.c:249:20> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e01700 <col:20> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
| `-ImplicitCastExpr 0x563107e017d8 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
|   `-ParenExpr 0x563107e01750 <col:38, col:40> 'int' lvalue
|     `-DeclRefExpr 0x563107e01728 <lua_cjson.c:249:23> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
`-IntegerLiteral 0x563107e017f0 <./lua.h:74:19> 'int' 0
[B11.7] == [B11.8]
  10: UnaryOperator 0x563107e01858 <lua_cjson.c:249:9, ./lua.h:267:54> 'int' prefix '!'
`-ParenExpr 0x563107e01838 <col:25, col:54> 'int'
  `-BinaryOperator 0x563107e01810 <col:26, line:74:19> 'int' '=='
    |-CallExpr 0x563107e01788 <line:267:26, col:41> 'int'
    | |-ImplicitCastExpr 0x563107e01770 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563107e016d8 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
    | |-ImplicitCastExpr 0x563107e017c0 <lua_cjson.c:249:20> 'lua_State *' <LValueToRValue>
    | | `-DeclRefExpr 0x563107e01700 <col:20> 'lua_State *' lvalue ParmVar 0x563107e00d80 'l' 'lua_State *'
    | `-ImplicitCastExpr 0x563107e017d8 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
    |   `-ParenExpr 0x563107e01750 <col:38, col:40> 'int' lvalue
    |     `-DeclRefExpr 0x563107e01728 <lua_cjson.c:249:23> 'int' lvalue ParmVar 0x563107e00df8 'optindex' 'int'
    `-IntegerLiteral 0x563107e017f0 <./lua.h:74:19> 'int' 0
!([B11.9])
   T: if [B11.10]
   Preds (2): B12 B13
   Succs (2): B10 B6

 [B12]
   1: DeclRefExpr 0x563107e015a8 <lua_cjson.c:245:19> 'const char *[3]' lvalue Var 0x563107e01248 'bool_options' 'const char *[3]'
bool_options
   2: ImplicitCastExpr 0x563107e015d0 <lua_cjson.c:245:19> 'const char **' <ArrayToPointerDecay>
`-DeclRefExpr 0x563107e015a8 <col:19> 'const char *[3]' lvalue Var 0x563107e01248 'bool_options' 'const char *[3]'
[B12.1] (ImplicitCastExpr, ArrayToPointerDecay, const char **)
   3: DeclRefExpr 0x563107e01580 <lua_cjson.c:245:9> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
options
   4: BinaryOperator 0x563107e015e8 <lua_cjson.c:245:9, col:19> 'const char **' '='
|-DeclRefExpr 0x563107e01580 <col:9> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
`-ImplicitCastExpr 0x563107e015d0 <col:19> 'const char **' <ArrayToPointerDecay>
  `-DeclRefExpr 0x563107e015a8 <col:19> 'const char *[3]' lvalue Var 0x563107e01248 'bool_options' 'const char *[3]'
[B12.3] = [B12.2]
   5: IntegerLiteral 0x563107e01638 <lua_cjson.c:246:21> 'int' 1
1
   6: DeclRefExpr 0x563107e01610 <lua_cjson.c:246:9> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
bool_true
   7: BinaryOperator 0x563107e01658 <lua_cjson.c:246:9, col:21> 'int' '='
|-DeclRefExpr 0x563107e01610 <col:9> 'int' lvalue ParmVar 0x563107e00ff0 'bool_true' 'int'
`-IntegerLiteral 0x563107e01638 <col:21> 'int' 1
[B12.6] = [B12.5]
   Preds (1): B13
   Succs (1): B11

 [B13]
   1: DeclRefExpr 0x563107e01520 <lua_cjson.c:244:10> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
options
   2: ImplicitCastExpr 0x563107e01548 <lua_cjson.c:244:10> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x563107e01520 <col:10> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
[B13.1] (ImplicitCastExpr, LValueToRValue, const char **)
   3: UnaryOperator 0x563107e01560 <lua_cjson.c:244:9, col:10> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e01548 <col:10> 'const char **' <LValueToRValue>
  `-DeclRefExpr 0x563107e01520 <col:10> 'const char **' lvalue ParmVar 0x563107e00f10 'options' 'const char **'
![B13.2]
   T: if [B13.3]
   Preds (2): B14 B15
   Succs (2): B12 B11

 [B14]
   1: StringLiteral 0x563107e012a8 <lua_cjson.c:242:43> 'char [4]' lvalue "off"
"off"
   2: ImplicitCastExpr 0x563107e01420 <lua_cjson.c:242:43> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e012a8 <col:43> 'char [4]' lvalue "off"
[B14.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x563107e01438 <lua_cjson.c:242:43> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e01420 <col:43> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e012a8 <col:43> 'char [4]' lvalue "off"
[B14.2] (ImplicitCastExpr, BitCast, const char *)
   4: StringLiteral 0x563107e012d8 <lua_cjson.c:242:50> 'char [3]' lvalue "on"
"on"
   5: ImplicitCastExpr 0x563107e01458 <lua_cjson.c:242:50> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e012d8 <col:50> 'char [3]' lvalue "on"
[B14.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: ImplicitCastExpr 0x563107e01470 <lua_cjson.c:242:50> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e01458 <col:50> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e012d8 <col:50> 'char [3]' lvalue "on"
[B14.5] (ImplicitCastExpr, BitCast, const char *)
   7: IntegerLiteral 0x563107e01308 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x563107e01340 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x563107e01308 <col:24> 'int' 0
(void *)[B14.7] (CStyleCastExpr, NullToPointer, void *)
   9: ImplicitCastExpr 0x563107e01498 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x563107e01368 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x563107e01340 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x563107e01308 <col:24> 'int' 0
([B14.8]) (ImplicitCastExpr, NullToPointer, const char *)
  10: InitListExpr 0x563107e013e0 <lua_cjson.c:242:41, col:61> 'const char *[3]'
|-ImplicitCastExpr 0x563107e01438 <col:43> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e01420 <col:43> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e012a8 <col:43> 'char [4]' lvalue "off"
|-ImplicitCastExpr 0x563107e01470 <col:50> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e01458 <col:50> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e012d8 <col:50> 'char [3]' lvalue "on"
`-ImplicitCastExpr 0x563107e01498 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x563107e01368 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x563107e01340 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x563107e01308 <col:24> 'int' 0
{[B14.3], [B14.6], [B14.9]}
  11: DeclStmt 0x563107e01508 <lua_cjson.c:242:5, col:62>col:24
`-VarDecl 0x563107e01248 <col:5, col:61> col:24 used bool_options 'const char *[3]' static cinit
  `-InitListExpr 0x563107e013e0 <col:41, col:61> 'const char *[3]'
    |-ImplicitCastExpr 0x563107e01438 <col:43> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x563107e01420 <col:43> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x563107e012a8 <col:43> 'char [4]' lvalue "off"
    |-ImplicitCastExpr 0x563107e01470 <col:50> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x563107e01458 <col:50> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x563107e012d8 <col:50> 'char [3]' lvalue "on"
    `-ImplicitCastExpr 0x563107e01498 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
      `-ParenExpr 0x563107e01368 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x563107e01340 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x563107e01308 <col:24> 'int' 0
static const char *bool_options[] = {"off", "on", ((void *)0)};
   Preds (1): B15
   Succs (1): B13

 [B15]
   T: static init bool_options
   Preds (1): B16
   Succs (2): B13 B14

 [B0 (EXIT)]
   Preds (1): B1
