void luaK_reserveregs(FuncState *fs, int n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768bdda8 <lcode.c:210:3> 'void (FuncState *, int)' Function 0x5637768bd2c8 'luaK_checkstack' 'void (FuncState *, int)'
luaK_checkstack
   2: ImplicitCastExpr 0x5637768bde20 <lcode.c:210:3> 'void (*)(FuncState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768bdda8 <col:3> 'void (FuncState *, int)' Function 0x5637768bd2c8 'luaK_checkstack' 'void (FuncState *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, int))
   3: DeclRefExpr 0x5637768bddd0 <lcode.c:210:19> 'FuncState *' lvalue ParmVar 0x5637768bdba8 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768bde70 <lcode.c:210:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768bddd0 <col:19> 'FuncState *' lvalue ParmVar 0x5637768bdba8 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768bddf8 <lcode.c:210:23> 'int' lvalue ParmVar 0x5637768bdc20 'n' 'int'
n
   6: ImplicitCastExpr 0x5637768bde88 <lcode.c:210:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768bddf8 <col:23> 'int' lvalue ParmVar 0x5637768bdc20 'n' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x5637768bde38 <lcode.c:210:3, col:24> 'void'
|-ImplicitCastExpr 0x5637768bde20 <col:3> 'void (*)(FuncState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768bdda8 <col:3> 'void (FuncState *, int)' Function 0x5637768bd2c8 'luaK_checkstack' 'void (FuncState *, int)'
|-ImplicitCastExpr 0x5637768bde70 <col:19> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768bddd0 <col:19> 'FuncState *' lvalue ParmVar 0x5637768bdba8 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768bde88 <col:23> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5637768bddf8 <col:23> 'int' lvalue ParmVar 0x5637768bdc20 'n' 'int'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x5637768bdea0 <lcode.c:211:3> 'FuncState *' lvalue ParmVar 0x5637768bdba8 'fs' 'FuncState *'
fs
   9: ImplicitCastExpr 0x5637768bdec8 <lcode.c:211:3> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768bdea0 <col:3> 'FuncState *' lvalue ParmVar 0x5637768bdba8 'fs' 'FuncState *'
[B1.8] (ImplicitCastExpr, LValueToRValue, FuncState *)
  10: MemberExpr 0x5637768bdee0 <lcode.c:211:3, col:7> 'int' lvalue ->freereg 0x56377687e268
`-ImplicitCastExpr 0x5637768bdec8 <col:3> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768bdea0 <col:3> 'FuncState *' lvalue ParmVar 0x5637768bdba8 'fs' 'FuncState *'
[B1.9]->freereg
  11: DeclRefExpr 0x5637768bdf18 <lcode.c:211:18> 'int' lvalue ParmVar 0x5637768bdc20 'n' 'int'
n
  12: ImplicitCastExpr 0x5637768bdf40 <lcode.c:211:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768bdf18 <col:18> 'int' lvalue ParmVar 0x5637768bdc20 'n' 'int'
[B1.11] (ImplicitCastExpr, LValueToRValue, int)
  13: CompoundAssignOperator 0x5637768bdf58 <lcode.c:211:3, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|-MemberExpr 0x5637768bdee0 <col:3, col:7> 'int' lvalue ->freereg 0x56377687e268
| `-ImplicitCastExpr 0x5637768bdec8 <col:3> 'FuncState *' <LValueToRValue>
|   `-DeclRefExpr 0x5637768bdea0 <col:3> 'FuncState *' lvalue ParmVar 0x5637768bdba8 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768bdf40 <col:18> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5637768bdf18 <col:18> 'int' lvalue ParmVar 0x5637768bdc20 'n' 'int'
[B1.10] += [B1.12]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
