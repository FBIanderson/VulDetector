static int callbackKeyCompare(void *privdata, const void *key1, const void *key2)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x55bf9a5ff978 <async.c:72:12> 'int (const void *, const void *, unsigned long)' Function 0x55bf9a526740 'memcmp' 'int (const void *, const void *, unsigned long)'
memcmp
   2: ImplicitCastExpr 0x55bf9a5ffa88 <async.c:72:12> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a5ff978 <col:12> 'int (const void *, const void *, unsigned long)' Function 0x55bf9a526740 'memcmp' 'int (const void *, const void *, unsigned long)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const void *, const void *, unsigned long))
   3: DeclRefExpr 0x55bf9a5ff9a0 <async.c:72:19> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
key1
   4: ImplicitCastExpr 0x55bf9a5ffae0 <async.c:72:19> 'const void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff9a0 <col:19> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
[B1.3] (ImplicitCastExpr, LValueToRValue, const void *)
   5: DeclRefExpr 0x55bf9a5ff9c8 <async.c:72:24> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
key2
   6: ImplicitCastExpr 0x55bf9a5ffaf8 <async.c:72:24> 'const void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff9c8 <col:24> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const void *)
   7: DeclRefExpr 0x55bf9a5ff9f0 <async.c:72:29> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
l1
   8: ImplicitCastExpr 0x55bf9a5ffb10 <async.c:72:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff9f0 <col:29> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
[B1.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ImplicitCastExpr 0x55bf9a5ffb28 <async.c:72:29> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55bf9a5ffb10 <col:29> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a5ff9f0 <col:29> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
[B1.8] (ImplicitCastExpr, IntegralCast, unsigned long)
  10: CallExpr 0x55bf9a5ffaa0 <async.c:72:12, col:31> 'int'
|-ImplicitCastExpr 0x55bf9a5ffa88 <col:12> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a5ff978 <col:12> 'int (const void *, const void *, unsigned long)' Function 0x55bf9a526740 'memcmp' 'int (const void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55bf9a5ffae0 <col:19> 'const void *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a5ff9a0 <col:19> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
|-ImplicitCastExpr 0x55bf9a5ffaf8 <col:24> 'const void *' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a5ff9c8 <col:24> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
`-ImplicitCastExpr 0x55bf9a5ffb28 <col:29> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55bf9a5ffb10 <col:29> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a5ff9f0 <col:29> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
[B1.2]([B1.4], [B1.6], [B1.9])
  11: IntegerLiteral 0x55bf9a5ffb40 <async.c:72:36> 'int' 0
0
  12: BinaryOperator 0x55bf9a5ffb60 <async.c:72:12, col:36> 'int' '=='
|-CallExpr 0x55bf9a5ffaa0 <col:12, col:31> 'int'
| |-ImplicitCastExpr 0x55bf9a5ffa88 <col:12> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55bf9a5ff978 <col:12> 'int (const void *, const void *, unsigned long)' Function 0x55bf9a526740 'memcmp' 'int (const void *, const void *, unsigned long)'
| |-ImplicitCastExpr 0x55bf9a5ffae0 <col:19> 'const void *' <LValueToRValue>
| | `-DeclRefExpr 0x55bf9a5ff9a0 <col:19> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
| |-ImplicitCastExpr 0x55bf9a5ffaf8 <col:24> 'const void *' <LValueToRValue>
| | `-DeclRefExpr 0x55bf9a5ff9c8 <col:24> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
| `-ImplicitCastExpr 0x55bf9a5ffb28 <col:29> 'unsigned long' <IntegralCast>
|   `-ImplicitCastExpr 0x55bf9a5ffb10 <col:29> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55bf9a5ff9f0 <col:29> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
`-IntegerLiteral 0x55bf9a5ffb40 <col:36> 'int' 0
[B1.10] == [B1.11]
  13: ReturnStmt 0x55bf9a5ffb88 <async.c:72:5, col:36>
`-BinaryOperator 0x55bf9a5ffb60 <col:12, col:36> 'int' '=='
  |-CallExpr 0x55bf9a5ffaa0 <col:12, col:31> 'int'
  | |-ImplicitCastExpr 0x55bf9a5ffa88 <col:12> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x55bf9a5ff978 <col:12> 'int (const void *, const void *, unsigned long)' Function 0x55bf9a526740 'memcmp' 'int (const void *, const void *, unsigned long)'
  | |-ImplicitCastExpr 0x55bf9a5ffae0 <col:19> 'const void *' <LValueToRValue>
  | | `-DeclRefExpr 0x55bf9a5ff9a0 <col:19> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
  | |-ImplicitCastExpr 0x55bf9a5ffaf8 <col:24> 'const void *' <LValueToRValue>
  | | `-DeclRefExpr 0x55bf9a5ff9c8 <col:24> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
  | `-ImplicitCastExpr 0x55bf9a5ffb28 <col:29> 'unsigned long' <IntegralCast>
  |   `-ImplicitCastExpr 0x55bf9a5ffb10 <col:29> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x55bf9a5ff9f0 <col:29> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
  `-IntegerLiteral 0x55bf9a5ffb40 <col:36> 'int' 0
return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55bf9a5ff8f8 <async.c:71:26> 'int' 0
0
   2: ReturnStmt 0x55bf9a5ff918 <async.c:71:19, col:26>
`-IntegerLiteral 0x55bf9a5ff8f8 <col:26> 'int' 0
return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclStmt 0x55bf9a645bf8 <async.c:66:9>col:9
`-VarDecl 0x55bf9a5ff410 <col:5, col:9> col:9 used l1 'int'
int l1;
   2: DeclStmt 0x55bf9a645be0 <async.c:66:13>col:13
`-VarDecl 0x55bf9a5ff488 <col:5, col:13> col:13 used l2 'int'
int l2;
   3: DeclRefExpr 0x55bf9a5ff518 <async.c:67:13> 'void *' lvalue ParmVar 0x55bf9a5ff1b0 'privdata' 'void *'
privdata
   4: ImplicitCastExpr 0x55bf9a5ff550 <async.c:67:13> 'void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff518 <col:13> 'void *' lvalue ParmVar 0x55bf9a5ff1b0 'privdata' 'void *'
[B3.3] (ImplicitCastExpr, LValueToRValue, void *)
   5: CStyleCastExpr 0x55bf9a5ff568 <async.c:67:6, col:13> 'void' <ToVoid>
`-ImplicitCastExpr 0x55bf9a5ff550 <col:13> 'void *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a5ff518 <col:13> 'void *' lvalue ParmVar 0x55bf9a5ff1b0 'privdata' 'void *'
(void)[B3.4] (CStyleCastExpr, ToVoid, void)
   6: DeclRefExpr 0x55bf9a5ff5d8 <async.c:69:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
sdslen
   7: ImplicitCastExpr 0x55bf9a5ff678 <async.c:69:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a5ff5d8 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
[B3.6] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   8: DeclRefExpr 0x55bf9a5ff600 <async.c:69:28> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
key1
   9: ImplicitCastExpr 0x55bf9a5ff638 <async.c:69:28> 'const void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff600 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
[B3.8] (ImplicitCastExpr, LValueToRValue, const void *)
  10: CStyleCastExpr 0x55bf9a5ff650 <async.c:69:17, col:28> 'sds':'char *' <BitCast>
`-ImplicitCastExpr 0x55bf9a5ff638 <col:28> 'const void *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a5ff600 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
(const sds)[B3.9] (CStyleCastExpr, BitCast, sds)
  11: CallExpr 0x55bf9a5ff690 <async.c:69:10, col:32> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55bf9a5ff678 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a5ff5d8 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
`-CStyleCastExpr 0x55bf9a5ff650 <col:17, col:28> 'sds':'char *' <BitCast>
  `-ImplicitCastExpr 0x55bf9a5ff638 <col:28> 'const void *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a5ff600 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
[B3.7]([B3.10])
  12: ImplicitCastExpr 0x55bf9a5ff6c0 <async.c:69:10, col:32> 'int' <IntegralCast>
`-CallExpr 0x55bf9a5ff690 <col:10, col:32> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55bf9a5ff678 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a5ff5d8 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
  `-CStyleCastExpr 0x55bf9a5ff650 <col:17, col:28> 'sds':'char *' <BitCast>
    `-ImplicitCastExpr 0x55bf9a5ff638 <col:28> 'const void *' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a5ff600 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
[B3.11] (ImplicitCastExpr, IntegralCast, int)
  13: DeclRefExpr 0x55bf9a5ff5b0 <async.c:69:5> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
l1
  14: BinaryOperator 0x55bf9a5ff6d8 <async.c:69:5, col:32> 'int' '='
|-DeclRefExpr 0x55bf9a5ff5b0 <col:5> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
`-ImplicitCastExpr 0x55bf9a5ff6c0 <col:10, col:32> 'int' <IntegralCast>
  `-CallExpr 0x55bf9a5ff690 <col:10, col:32> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55bf9a5ff678 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55bf9a5ff5d8 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
    `-CStyleCastExpr 0x55bf9a5ff650 <col:17, col:28> 'sds':'char *' <BitCast>
      `-ImplicitCastExpr 0x55bf9a5ff638 <col:28> 'const void *' <LValueToRValue>
        `-DeclRefExpr 0x55bf9a5ff600 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff228 'key1' 'const void *'
[B3.13] = [B3.12]
  15: DeclRefExpr 0x55bf9a5ff728 <async.c:70:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
sdslen
  16: ImplicitCastExpr 0x55bf9a5ff7c8 <async.c:70:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55bf9a5ff728 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
[B3.15] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
  17: DeclRefExpr 0x55bf9a5ff750 <async.c:70:28> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
key2
  18: ImplicitCastExpr 0x55bf9a5ff788 <async.c:70:28> 'const void *' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff750 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
[B3.17] (ImplicitCastExpr, LValueToRValue, const void *)
  19: CStyleCastExpr 0x55bf9a5ff7a0 <async.c:70:17, col:28> 'sds':'char *' <BitCast>
`-ImplicitCastExpr 0x55bf9a5ff788 <col:28> 'const void *' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a5ff750 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
(const sds)[B3.18] (CStyleCastExpr, BitCast, sds)
  20: CallExpr 0x55bf9a5ff7e0 <async.c:70:10, col:32> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55bf9a5ff7c8 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55bf9a5ff728 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
`-CStyleCastExpr 0x55bf9a5ff7a0 <col:17, col:28> 'sds':'char *' <BitCast>
  `-ImplicitCastExpr 0x55bf9a5ff788 <col:28> 'const void *' <LValueToRValue>
    `-DeclRefExpr 0x55bf9a5ff750 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
[B3.16]([B3.19])
  21: ImplicitCastExpr 0x55bf9a5ff810 <async.c:70:10, col:32> 'int' <IntegralCast>
`-CallExpr 0x55bf9a5ff7e0 <col:10, col:32> 'size_t':'unsigned long'
  |-ImplicitCastExpr 0x55bf9a5ff7c8 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55bf9a5ff728 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
  `-CStyleCastExpr 0x55bf9a5ff7a0 <col:17, col:28> 'sds':'char *' <BitCast>
    `-ImplicitCastExpr 0x55bf9a5ff788 <col:28> 'const void *' <LValueToRValue>
      `-DeclRefExpr 0x55bf9a5ff750 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
[B3.20] (ImplicitCastExpr, IntegralCast, int)
  22: DeclRefExpr 0x55bf9a5ff700 <async.c:70:5> 'int' lvalue Var 0x55bf9a5ff488 'l2' 'int'
l2
  23: BinaryOperator 0x55bf9a5ff828 <async.c:70:5, col:32> 'int' '='
|-DeclRefExpr 0x55bf9a5ff700 <col:5> 'int' lvalue Var 0x55bf9a5ff488 'l2' 'int'
`-ImplicitCastExpr 0x55bf9a5ff810 <col:10, col:32> 'int' <IntegralCast>
  `-CallExpr 0x55bf9a5ff7e0 <col:10, col:32> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55bf9a5ff7c8 <col:10> 'size_t (*)(const sds)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55bf9a5ff728 <col:10> 'size_t (const sds)' Function 0x55bf9a59d9b0 'sdslen' 'size_t (const sds)'
    `-CStyleCastExpr 0x55bf9a5ff7a0 <col:17, col:28> 'sds':'char *' <BitCast>
      `-ImplicitCastExpr 0x55bf9a5ff788 <col:28> 'const void *' <LValueToRValue>
        `-DeclRefExpr 0x55bf9a5ff750 <col:28> 'const void *' lvalue ParmVar 0x55bf9a5ff2a0 'key2' 'const void *'
[B3.22] = [B3.21]
  24: DeclRefExpr 0x55bf9a5ff850 <async.c:71:9> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
l1
  25: ImplicitCastExpr 0x55bf9a5ff8a0 <async.c:71:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff850 <col:9> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
[B3.24] (ImplicitCastExpr, LValueToRValue, int)
  26: DeclRefExpr 0x55bf9a5ff878 <async.c:71:15> 'int' lvalue Var 0x55bf9a5ff488 'l2' 'int'
l2
  27: ImplicitCastExpr 0x55bf9a5ff8b8 <async.c:71:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55bf9a5ff878 <col:15> 'int' lvalue Var 0x55bf9a5ff488 'l2' 'int'
[B3.26] (ImplicitCastExpr, LValueToRValue, int)
  28: BinaryOperator 0x55bf9a5ff8d0 <async.c:71:9, col:15> 'int' '!='
|-ImplicitCastExpr 0x55bf9a5ff8a0 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55bf9a5ff850 <col:9> 'int' lvalue Var 0x55bf9a5ff410 'l1' 'int'
`-ImplicitCastExpr 0x55bf9a5ff8b8 <col:15> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55bf9a5ff878 <col:15> 'int' lvalue Var 0x55bf9a5ff488 'l2' 'int'
[B3.25] != [B3.27]
   T: if [B3.28]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
