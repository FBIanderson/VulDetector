static void json_next_string_token(json_parse_t *json, json_token_t *token)
 [B19 (ENTRY)]
   Succs (1): B18

 [B1]
   1: DeclRefExpr 0x563107e23518 <lua_cjson.c:937:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e23540 <lua_cjson.c:937:5> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23518 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e23558 <lua_cjson.c:937:5, col:11> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e23540 <col:5> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23518 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.2]->ptr
   4: UnaryOperator 0x563107e23590 <lua_cjson.c:937:5, col:14> 'const char *' postfix '++'
`-MemberExpr 0x563107e23558 <col:5, col:11> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e23540 <col:5> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23518 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.3]++
   5: DeclRefExpr 0x563107e235b0 <lua_cjson.c:939:5> 'void (strbuf_t *)' Function 0x563107dec628 'strbuf_ensure_null' 'void (strbuf_t *)'
strbuf_ensure_null
   6: ImplicitCastExpr 0x563107e23650 <lua_cjson.c:939:5> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e235b0 <col:5> 'void (strbuf_t *)' Function 0x563107dec628 'strbuf_ensure_null' 'void (strbuf_t *)'
[B1.5] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *))
   7: DeclRefExpr 0x563107e235d8 <lua_cjson.c:939:24> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   8: ImplicitCastExpr 0x563107e23600 <lua_cjson.c:939:24> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e235d8 <col:24> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.7] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   9: MemberExpr 0x563107e23618 <lua_cjson.c:939:24, col:30> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
`-ImplicitCastExpr 0x563107e23600 <col:24> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e235d8 <col:24> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.8]->tmp
  10: ImplicitCastExpr 0x563107e23698 <lua_cjson.c:939:24, col:30> 'strbuf_t *' <LValueToRValue>
`-MemberExpr 0x563107e23618 <col:24, col:30> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
  `-ImplicitCastExpr 0x563107e23600 <col:24> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e235d8 <col:24> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.9] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  11: CallExpr 0x563107e23668 <lua_cjson.c:939:5, col:33> 'void'
|-ImplicitCastExpr 0x563107e23650 <col:5> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e235b0 <col:5> 'void (strbuf_t *)' Function 0x563107dec628 'strbuf_ensure_null' 'void (strbuf_t *)'
`-ImplicitCastExpr 0x563107e23698 <col:24, col:30> 'strbuf_t *' <LValueToRValue>
  `-MemberExpr 0x563107e23618 <col:24, col:30> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
    `-ImplicitCastExpr 0x563107e23600 <col:24> 'json_parse_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e235d8 <col:24> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.6]([B1.10])
  12: DeclRefExpr 0x563107e23728 <lua_cjson.c:941:19> 'int' EnumConstant 0x563107ded400 'T_STRING' 'int'
T_STRING
  13: ImplicitCastExpr 0x563107e23750 <lua_cjson.c:941:19> 'json_token_type_t':'json_token_type_t' <IntegralCast>
`-DeclRefExpr 0x563107e23728 <col:19> 'int' EnumConstant 0x563107ded400 'T_STRING' 'int'
[B1.12] (ImplicitCastExpr, IntegralCast, json_token_type_t)
  14: DeclRefExpr 0x563107e236b0 <lua_cjson.c:941:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
token
  15: ImplicitCastExpr 0x563107e236d8 <lua_cjson.c:941:5> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e236b0 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.14] (ImplicitCastExpr, LValueToRValue, json_token_t *)
  16: MemberExpr 0x563107e236f0 <lua_cjson.c:941:5, col:12> 'json_token_type_t':'json_token_type_t' lvalue ->type 0x563107df18d0
`-ImplicitCastExpr 0x563107e236d8 <col:5> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e236b0 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.15]->type
  17: BinaryOperator 0x563107e23768 <lua_cjson.c:941:5, col:19> 'json_token_type_t':'json_token_type_t' '='
|-MemberExpr 0x563107e236f0 <col:5, col:12> 'json_token_type_t':'json_token_type_t' lvalue ->type 0x563107df18d0
| `-ImplicitCastExpr 0x563107e236d8 <col:5> 'json_token_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e236b0 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
`-ImplicitCastExpr 0x563107e23750 <col:19> 'json_token_type_t':'json_token_type_t' <IntegralCast>
  `-DeclRefExpr 0x563107e23728 <col:19> 'int' EnumConstant 0x563107ded400 'T_STRING' 'int'
[B1.16] = [B1.13]
  18: DeclRefExpr 0x563107e23840 <lua_cjson.c:942:27> 'char *(strbuf_t *, int *)' Function 0x563107dec9b0 'strbuf_string' 'char *(strbuf_t *, int *)'
strbuf_string
  19: ImplicitCastExpr 0x563107e23978 <lua_cjson.c:942:27> 'char *(*)(strbuf_t *, int *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e23840 <col:27> 'char *(strbuf_t *, int *)' Function 0x563107dec9b0 'strbuf_string' 'char *(strbuf_t *, int *)'
[B1.18] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(strbuf_t *, int *))
  20: DeclRefExpr 0x563107e23868 <lua_cjson.c:942:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
  21: ImplicitCastExpr 0x563107e23890 <lua_cjson.c:942:41> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23868 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.20] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  22: MemberExpr 0x563107e238a8 <lua_cjson.c:942:41, col:47> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
`-ImplicitCastExpr 0x563107e23890 <col:41> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23868 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.21]->tmp
  23: ImplicitCastExpr 0x563107e239c8 <lua_cjson.c:942:41, col:47> 'strbuf_t *' <LValueToRValue>
`-MemberExpr 0x563107e238a8 <col:41, col:47> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
  `-ImplicitCastExpr 0x563107e23890 <col:41> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23868 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B1.22] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  24: DeclRefExpr 0x563107e238e0 <lua_cjson.c:942:53> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
token
  25: ImplicitCastExpr 0x563107e23908 <lua_cjson.c:942:53> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e238e0 <col:53> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.24] (ImplicitCastExpr, LValueToRValue, json_token_t *)
  26: MemberExpr 0x563107e23920 <lua_cjson.c:942:53, col:60> 'int' lvalue ->string_len 0x563107df1bf0
`-ImplicitCastExpr 0x563107e23908 <col:53> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e238e0 <col:53> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.25]->string_len
  27: UnaryOperator 0x563107e23958 <lua_cjson.c:942:52, col:60> 'int *' prefix '&'
`-MemberExpr 0x563107e23920 <col:53, col:60> 'int' lvalue ->string_len 0x563107df1bf0
  `-ImplicitCastExpr 0x563107e23908 <col:53> 'json_token_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e238e0 <col:53> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
&[B1.26]
  28: CallExpr 0x563107e23990 <lua_cjson.c:942:27, col:70> 'char *'
|-ImplicitCastExpr 0x563107e23978 <col:27> 'char *(*)(strbuf_t *, int *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e23840 <col:27> 'char *(strbuf_t *, int *)' Function 0x563107dec9b0 'strbuf_string' 'char *(strbuf_t *, int *)'
|-ImplicitCastExpr 0x563107e239c8 <col:41, col:47> 'strbuf_t *' <LValueToRValue>
| `-MemberExpr 0x563107e238a8 <col:41, col:47> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
|   `-ImplicitCastExpr 0x563107e23890 <col:41> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e23868 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-UnaryOperator 0x563107e23958 <col:52, col:60> 'int *' prefix '&'
  `-MemberExpr 0x563107e23920 <col:53, col:60> 'int' lvalue ->string_len 0x563107df1bf0
    `-ImplicitCastExpr 0x563107e23908 <col:53> 'json_token_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e238e0 <col:53> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.19]([B1.23], [B1.27])
  29: ImplicitCastExpr 0x563107e239e0 <lua_cjson.c:942:27, col:70> 'const char *' <BitCast>
`-CallExpr 0x563107e23990 <col:27, col:70> 'char *'
  |-ImplicitCastExpr 0x563107e23978 <col:27> 'char *(*)(strbuf_t *, int *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e23840 <col:27> 'char *(strbuf_t *, int *)' Function 0x563107dec9b0 'strbuf_string' 'char *(strbuf_t *, int *)'
  |-ImplicitCastExpr 0x563107e239c8 <col:41, col:47> 'strbuf_t *' <LValueToRValue>
  | `-MemberExpr 0x563107e238a8 <col:41, col:47> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
  |   `-ImplicitCastExpr 0x563107e23890 <col:41> 'json_parse_t *' <LValueToRValue>
  |     `-DeclRefExpr 0x563107e23868 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
  `-UnaryOperator 0x563107e23958 <col:52, col:60> 'int *' prefix '&'
    `-MemberExpr 0x563107e23920 <col:53, col:60> 'int' lvalue ->string_len 0x563107df1bf0
      `-ImplicitCastExpr 0x563107e23908 <col:53> 'json_token_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e238e0 <col:53> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.28] (ImplicitCastExpr, BitCast, const char *)
  30: DeclRefExpr 0x563107e23790 <lua_cjson.c:942:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
token
  31: ImplicitCastExpr 0x563107e237b8 <lua_cjson.c:942:5> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23790 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.30] (ImplicitCastExpr, LValueToRValue, json_token_t *)
  32: MemberExpr 0x563107e237d0 <lua_cjson.c:942:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
`-ImplicitCastExpr 0x563107e237b8 <col:5> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23790 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.31]->value
  33: MemberExpr 0x563107e23808 <lua_cjson.c:942:5, col:18> 'const char *' lvalue .string 0x563107df1a38
`-MemberExpr 0x563107e237d0 <col:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
  `-ImplicitCastExpr 0x563107e237b8 <col:5> 'json_token_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23790 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.32].string
  34: BinaryOperator 0x563107e239f8 <lua_cjson.c:942:5, col:70> 'const char *' '='
|-MemberExpr 0x563107e23808 <col:5, col:18> 'const char *' lvalue .string 0x563107df1a38
| `-MemberExpr 0x563107e237d0 <col:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
|   `-ImplicitCastExpr 0x563107e237b8 <col:5> 'json_token_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e23790 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
`-ImplicitCastExpr 0x563107e239e0 <col:27, col:70> 'const char *' <BitCast>
  `-CallExpr 0x563107e23990 <col:27, col:70> 'char *'
    |-ImplicitCastExpr 0x563107e23978 <col:27> 'char *(*)(strbuf_t *, int *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563107e23840 <col:27> 'char *(strbuf_t *, int *)' Function 0x563107dec9b0 'strbuf_string' 'char *(strbuf_t *, int *)'
    |-ImplicitCastExpr 0x563107e239c8 <col:41, col:47> 'strbuf_t *' <LValueToRValue>
    | `-MemberExpr 0x563107e238a8 <col:41, col:47> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
    |   `-ImplicitCastExpr 0x563107e23890 <col:41> 'json_parse_t *' <LValueToRValue>
    |     `-DeclRefExpr 0x563107e23868 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
    `-UnaryOperator 0x563107e23958 <col:52, col:60> 'int *' prefix '&'
      `-MemberExpr 0x563107e23920 <col:53, col:60> 'int' lvalue ->string_len 0x563107df1bf0
        `-ImplicitCastExpr 0x563107e23908 <col:53> 'json_token_t *' <LValueToRValue>
          `-DeclRefExpr 0x563107e238e0 <col:53> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B1.33] = [B1.29]
   Preds (1): B14
   Succs (1): B0

 [B2]
   Preds (2): B3 B8
   Succs (1): B14

 [B3]
   1: DeclRefExpr 0x563107e232e8 <lua_cjson.c:934:9> 'void (strbuf_t *, const char)' Function 0x563107deb578 'strbuf_append_char_unsafe' 'void (strbuf_t *, const char)'
strbuf_append_char_unsafe
   2: ImplicitCastExpr 0x563107e233b0 <lua_cjson.c:934:9> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e232e8 <col:9> 'void (strbuf_t *, const char)' Function 0x563107deb578 'strbuf_append_char_unsafe' 'void (strbuf_t *, const char)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char))
   3: DeclRefExpr 0x563107e23310 <lua_cjson.c:934:35> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   4: ImplicitCastExpr 0x563107e23338 <lua_cjson.c:934:35> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23310 <col:35> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B3.3] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   5: MemberExpr 0x563107e23350 <lua_cjson.c:934:35, col:41> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
`-ImplicitCastExpr 0x563107e23338 <col:35> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23310 <col:35> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B3.4]->tmp
   6: ImplicitCastExpr 0x563107e23400 <lua_cjson.c:934:35, col:41> 'strbuf_t *' <LValueToRValue>
`-MemberExpr 0x563107e23350 <col:35, col:41> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
  `-ImplicitCastExpr 0x563107e23338 <col:35> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23310 <col:35> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B3.5] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   7: DeclRefExpr 0x563107e23388 <lua_cjson.c:934:46> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
   8: ImplicitCastExpr 0x563107e23418 <lua_cjson.c:934:46> 'char' <LValueToRValue>
`-DeclRefExpr 0x563107e23388 <col:46> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B3.7] (ImplicitCastExpr, LValueToRValue, char)
   9: CallExpr 0x563107e233c8 <lua_cjson.c:934:9, col:48> 'void'
|-ImplicitCastExpr 0x563107e233b0 <col:9> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e232e8 <col:9> 'void (strbuf_t *, const char)' Function 0x563107deb578 'strbuf_append_char_unsafe' 'void (strbuf_t *, const char)'
|-ImplicitCastExpr 0x563107e23400 <col:35, col:41> 'strbuf_t *' <LValueToRValue>
| `-MemberExpr 0x563107e23350 <col:35, col:41> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
|   `-ImplicitCastExpr 0x563107e23338 <col:35> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e23310 <col:35> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e23418 <col:46> 'char' <LValueToRValue>
  `-DeclRefExpr 0x563107e23388 <col:46> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B3.2]([B3.6], [B3.8])
  10: DeclRefExpr 0x563107e23430 <lua_cjson.c:935:9> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
  11: ImplicitCastExpr 0x563107e23458 <lua_cjson.c:935:9> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23430 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B3.10] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  12: MemberExpr 0x563107e23470 <lua_cjson.c:935:9, col:15> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e23458 <col:9> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e23430 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B3.11]->ptr
  13: UnaryOperator 0x563107e234a8 <lua_cjson.c:935:9, col:18> 'const char *' postfix '++'
`-MemberExpr 0x563107e23470 <col:9, col:15> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e23458 <col:9> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e23430 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B3.12]++
   Preds (2): B4 B11
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x563107e231e0 <lua_cjson.c:930:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e23208 <lua_cjson.c:930:13> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e231e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B4.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e23220 <lua_cjson.c:930:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e23208 <col:13> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e231e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B4.2]->ptr
   4: UnaryOperator 0x563107e23258 <lua_cjson.c:930:13, col:22> 'const char *' postfix '++'
`-MemberExpr 0x563107e23220 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e23208 <col:13> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e231e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B4.3]++
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x563107e23000 <lua_cjson.c:925:17> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
json_set_token_error
   2: ImplicitCastExpr 0x563107e230b8 <lua_cjson.c:925:17> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e23000 <col:17> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(json_token_t *, json_parse_t *, const char *))
   3: DeclRefExpr 0x563107e23028 <lua_cjson.c:925:38> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
token
   4: ImplicitCastExpr 0x563107e23110 <lua_cjson.c:925:38> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23028 <col:38> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B5.3] (ImplicitCastExpr, LValueToRValue, json_token_t *)
   5: DeclRefExpr 0x563107e23050 <lua_cjson.c:925:45> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   6: ImplicitCastExpr 0x563107e23128 <lua_cjson.c:925:45> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e23050 <col:45> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B5.5] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   7: StringLiteral 0x563107e23078 <lua_cjson.c:925:51> 'char [20]' lvalue "invalid escape code"
"invalid escape code"
   8: ImplicitCastExpr 0x563107e23140 <lua_cjson.c:925:51> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e23078 <col:51> 'char [20]' lvalue "invalid escape code"
[B5.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x563107e23158 <lua_cjson.c:925:51> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e23140 <col:51> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e23078 <col:51> 'char [20]' lvalue "invalid escape code"
[B5.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x563107e230d0 <lua_cjson.c:925:17, col:72> 'void'
|-ImplicitCastExpr 0x563107e230b8 <col:17> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e23000 <col:17> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
|-ImplicitCastExpr 0x563107e23110 <col:38> 'json_token_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e23028 <col:38> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
|-ImplicitCastExpr 0x563107e23128 <col:45> 'json_parse_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e23050 <col:45> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e23158 <col:51> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e23140 <col:51> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e23078 <col:51> 'char [20]' lvalue "invalid escape code"
[B5.2]([B5.4], [B5.6], [B5.9])
  11: ReturnStmt 0x563107e23170 <lua_cjson.c:926:17>
return;
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x563107e22fa0 <lua_cjson.c:924:18> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
   2: ImplicitCastExpr 0x563107e22fc8 <lua_cjson.c:924:18> 'char' <LValueToRValue>
`-DeclRefExpr 0x563107e22fa0 <col:18> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B6.1] (ImplicitCastExpr, LValueToRValue, char)
   3: UnaryOperator 0x563107e22fe0 <lua_cjson.c:924:17, col:18> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e22fc8 <col:18> 'char' <LValueToRValue>
  `-DeclRefExpr 0x563107e22fa0 <col:18> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
![B6.2]
   T: if [B6.3]
   Preds (1): B10
   Succs (2): B5 B4

 [B7]
   1: DeclRefExpr 0x563107e22d70 <lua_cjson.c:920:17> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
json_set_token_error
   2: ImplicitCastExpr 0x563107e22e70 <lua_cjson.c:920:17> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e22d70 <col:17> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(json_token_t *, json_parse_t *, const char *))
   3: DeclRefExpr 0x563107e22d98 <lua_cjson.c:920:38> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
token
   4: ImplicitCastExpr 0x563107e22ec8 <lua_cjson.c:920:38> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e22d98 <col:38> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B7.3] (ImplicitCastExpr, LValueToRValue, json_token_t *)
   5: DeclRefExpr 0x563107e22dc0 <lua_cjson.c:920:45> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   6: ImplicitCastExpr 0x563107e22ee0 <lua_cjson.c:920:45> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e22dc0 <col:45> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B7.5] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   7: StringLiteral 0x563107e22e28 <lua_cjson.c:921:38> 'char [28]' lvalue "invalid unicode escape code"
"invalid unicode escape code"
   8: ImplicitCastExpr 0x563107e22ef8 <lua_cjson.c:921:38> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e22e28 <col:38> 'char [28]' lvalue "invalid unicode escape code"
[B7.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x563107e22f10 <lua_cjson.c:921:38> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e22ef8 <col:38> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e22e28 <col:38> 'char [28]' lvalue "invalid unicode escape code"
[B7.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x563107e22e88 <lua_cjson.c:920:17, line:921:67> 'void'
|-ImplicitCastExpr 0x563107e22e70 <line:920:17> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e22d70 <col:17> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
|-ImplicitCastExpr 0x563107e22ec8 <col:38> 'json_token_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e22d98 <col:38> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
|-ImplicitCastExpr 0x563107e22ee0 <col:45> 'json_parse_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e22dc0 <col:45> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e22f10 <line:921:38> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e22ef8 <col:38> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e22e28 <col:38> 'char [28]' lvalue "invalid unicode escape code"
[B7.2]([B7.4], [B7.6], [B7.9])
  11: ReturnStmt 0x563107e22f28 <lua_cjson.c:922:17>
return;
   Preds (1): B9
   Succs (1): B0

 [B8]
   T: continue;
   Preds (1): B9
   Succs (1): B2

 [B9]
   1: DeclRefExpr 0x563107e22be0 <lua_cjson.c:917:21> 'int (json_parse_t *)' Function 0x563107e1afe8 'json_append_unicode_escape' 'int (json_parse_t *)'
json_append_unicode_escape
   2: ImplicitCastExpr 0x563107e22c88 <lua_cjson.c:917:21> 'int (*)(json_parse_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e22be0 <col:21> 'int (json_parse_t *)' Function 0x563107e1afe8 'json_append_unicode_escape' 'int (json_parse_t *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(json_parse_t *))
   3: DeclRefExpr 0x563107e22c08 <lua_cjson.c:917:48> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   4: ImplicitCastExpr 0x563107e22cd0 <lua_cjson.c:917:48> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e22c08 <col:48> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B9.3] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   5: CallExpr 0x563107e22ca0 <lua_cjson.c:917:21, col:52> 'int'
|-ImplicitCastExpr 0x563107e22c88 <col:21> 'int (*)(json_parse_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e22be0 <col:21> 'int (json_parse_t *)' Function 0x563107e1afe8 'json_append_unicode_escape' 'int (json_parse_t *)'
`-ImplicitCastExpr 0x563107e22cd0 <col:48> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e22c08 <col:48> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B9.2]([B9.4])
   6: IntegerLiteral 0x563107e22ce8 <lua_cjson.c:917:57> 'int' 0
0
   7: BinaryOperator 0x563107e22d08 <lua_cjson.c:917:21, col:57> 'int' '=='
|-CallExpr 0x563107e22ca0 <col:21, col:52> 'int'
| |-ImplicitCastExpr 0x563107e22c88 <col:21> 'int (*)(json_parse_t *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e22be0 <col:21> 'int (json_parse_t *)' Function 0x563107e1afe8 'json_append_unicode_escape' 'int (json_parse_t *)'
| `-ImplicitCastExpr 0x563107e22cd0 <col:48> 'json_parse_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e22c08 <col:48> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-IntegerLiteral 0x563107e22ce8 <col:57> 'int' 0
[B9.5] == [B9.6]
   T: if [B9.7]
   Preds (1): B10
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x563107e228a0 <lua_cjson.c:912:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e228c8 <lua_cjson.c:912:20> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e228a0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B10.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e228e0 <lua_cjson.c:912:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e228c8 <col:20> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e228a0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B10.2]->ptr
   4: ImplicitCastExpr 0x563107e22938 <lua_cjson.c:912:20, col:26> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e228e0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e228c8 <col:20> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e228a0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B10.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: IntegerLiteral 0x563107e22918 <lua_cjson.c:912:32> 'int' 1
1
   6: BinaryOperator 0x563107e22950 <lua_cjson.c:912:20, col:32> 'const char *' '+'
|-ImplicitCastExpr 0x563107e22938 <col:20, col:26> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e228e0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e228c8 <col:20> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e228a0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-IntegerLiteral 0x563107e22918 <col:32> 'int' 1
[B10.4] + [B10.5]
   7: UnaryOperator 0x563107e22998 <lua_cjson.c:912:18, col:33> 'const char' lvalue prefix '*'
`-ParenExpr 0x563107e22978 <col:19, col:33> 'const char *'
  `-BinaryOperator 0x563107e22950 <col:20, col:32> 'const char *' '+'
    |-ImplicitCastExpr 0x563107e22938 <col:20, col:26> 'const char *' <LValueToRValue>
    | `-MemberExpr 0x563107e228e0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
    |   `-ImplicitCastExpr 0x563107e228c8 <col:20> 'json_parse_t *' <LValueToRValue>
    |     `-DeclRefExpr 0x563107e228a0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
    `-IntegerLiteral 0x563107e22918 <col:32> 'int' 1
*([B10.6])
   8: ImplicitCastExpr 0x563107e229b8 <lua_cjson.c:912:18, col:33> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e22998 <col:18, col:33> 'const char' lvalue prefix '*'
  `-ParenExpr 0x563107e22978 <col:19, col:33> 'const char *'
    `-BinaryOperator 0x563107e22950 <col:20, col:32> 'const char *' '+'
      |-ImplicitCastExpr 0x563107e22938 <col:20, col:26> 'const char *' <LValueToRValue>
      | `-MemberExpr 0x563107e228e0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
      |   `-ImplicitCastExpr 0x563107e228c8 <col:20> 'json_parse_t *' <LValueToRValue>
      |     `-DeclRefExpr 0x563107e228a0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
      `-IntegerLiteral 0x563107e22918 <col:32> 'int' 1
[B10.7] (ImplicitCastExpr, LValueToRValue, char)
   9: DeclRefExpr 0x563107e22878 <lua_cjson.c:912:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
  10: BinaryOperator 0x563107e229d0 <lua_cjson.c:912:13, col:33> 'char' '='
|-DeclRefExpr 0x563107e22878 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
`-ImplicitCastExpr 0x563107e229b8 <col:18, col:33> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e22998 <col:18, col:33> 'const char' lvalue prefix '*'
    `-ParenExpr 0x563107e22978 <col:19, col:33> 'const char *'
      `-BinaryOperator 0x563107e22950 <col:20, col:32> 'const char *' '+'
        |-ImplicitCastExpr 0x563107e22938 <col:20, col:26> 'const char *' <LValueToRValue>
        | `-MemberExpr 0x563107e228e0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
        |   `-ImplicitCastExpr 0x563107e228c8 <col:20> 'json_parse_t *' <LValueToRValue>
        |     `-DeclRefExpr 0x563107e228a0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
        `-IntegerLiteral 0x563107e22918 <col:32> 'int' 1
[B10.9] = [B10.8]
  11: DeclRefExpr 0x563107e22a20 <lua_cjson.c:915:18> 'char *' lvalue Var 0x563107e1d4d8 'escape2char' 'char *'
escape2char
  12: ImplicitCastExpr 0x563107e22ac8 <lua_cjson.c:915:18> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e22a20 <col:18> 'char *' lvalue Var 0x563107e1d4d8 'escape2char' 'char *'
[B10.11] (ImplicitCastExpr, LValueToRValue, char *)
  13: DeclRefExpr 0x563107e22a48 <lua_cjson.c:915:45> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
  14: ImplicitCastExpr 0x563107e22a88 <lua_cjson.c:915:45> 'char' <LValueToRValue>
`-DeclRefExpr 0x563107e22a48 <col:45> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B10.13] (ImplicitCastExpr, LValueToRValue, char)
  15: CStyleCastExpr 0x563107e22aa0 <lua_cjson.c:915:30, col:45> 'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x563107e22a88 <col:45> 'char' <LValueToRValue>
  `-DeclRefExpr 0x563107e22a48 <col:45> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
(unsigned char)[B10.14] (CStyleCastExpr, IntegralCast, unsigned char)
  16: ArraySubscriptExpr 0x563107e22ae0 <lua_cjson.c:915:18, col:47> 'char' lvalue
|-ImplicitCastExpr 0x563107e22ac8 <col:18> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e22a20 <col:18> 'char *' lvalue Var 0x563107e1d4d8 'escape2char' 'char *'
`-CStyleCastExpr 0x563107e22aa0 <col:30, col:45> 'unsigned char' <IntegralCast>
  `-ImplicitCastExpr 0x563107e22a88 <col:45> 'char' <LValueToRValue>
    `-DeclRefExpr 0x563107e22a48 <col:45> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B10.12][[B10.15]]
  17: ImplicitCastExpr 0x563107e22b08 <lua_cjson.c:915:18, col:47> 'char' <LValueToRValue>
`-ArraySubscriptExpr 0x563107e22ae0 <col:18, col:47> 'char' lvalue
  |-ImplicitCastExpr 0x563107e22ac8 <col:18> 'char *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e22a20 <col:18> 'char *' lvalue Var 0x563107e1d4d8 'escape2char' 'char *'
  `-CStyleCastExpr 0x563107e22aa0 <col:30, col:45> 'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x563107e22a88 <col:45> 'char' <LValueToRValue>
      `-DeclRefExpr 0x563107e22a48 <col:45> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B10.16] (ImplicitCastExpr, LValueToRValue, char)
  18: DeclRefExpr 0x563107e229f8 <lua_cjson.c:915:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
  19: BinaryOperator 0x563107e22b20 <lua_cjson.c:915:13, col:47> 'char' '='
|-DeclRefExpr 0x563107e229f8 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
`-ImplicitCastExpr 0x563107e22b08 <col:18, col:47> 'char' <LValueToRValue>
  `-ArraySubscriptExpr 0x563107e22ae0 <col:18, col:47> 'char' lvalue
    |-ImplicitCastExpr 0x563107e22ac8 <col:18> 'char *' <LValueToRValue>
    | `-DeclRefExpr 0x563107e22a20 <col:18> 'char *' lvalue Var 0x563107e1d4d8 'escape2char' 'char *'
    `-CStyleCastExpr 0x563107e22aa0 <col:30, col:45> 'unsigned char' <IntegralCast>
      `-ImplicitCastExpr 0x563107e22a88 <col:45> 'char' <LValueToRValue>
        `-DeclRefExpr 0x563107e22a48 <col:45> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B10.18] = [B10.17]
  20: DeclRefExpr 0x563107e22b48 <lua_cjson.c:916:17> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
  21: ImplicitCastExpr 0x563107e22b88 <lua_cjson.c:916:17> 'char' <LValueToRValue>
`-DeclRefExpr 0x563107e22b48 <col:17> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B10.20] (ImplicitCastExpr, LValueToRValue, char)
  22: ImplicitCastExpr 0x563107e22ba0 <lua_cjson.c:916:17> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e22b88 <col:17> 'char' <LValueToRValue>
  `-DeclRefExpr 0x563107e22b48 <col:17> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B10.21] (ImplicitCastExpr, IntegralCast, int)
  23: CharacterLiteral 0x563107e22b70 <lua_cjson.c:916:23> 'int' 117
'u'
  24: BinaryOperator 0x563107e22bb8 <lua_cjson.c:916:17, col:23> 'int' '=='
|-ImplicitCastExpr 0x563107e22ba0 <col:17> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e22b88 <col:17> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x563107e22b48 <col:17> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
`-CharacterLiteral 0x563107e22b70 <col:23> 'int' 117
[B10.22] == [B10.23]
   T: if [B10.24]
   Preds (1): B11
   Succs (2): B9 B6

 [B11]
   1: DeclRefExpr 0x563107e227e0 <lua_cjson.c:910:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
   2: ImplicitCastExpr 0x563107e22820 <lua_cjson.c:910:13> 'char' <LValueToRValue>
`-DeclRefExpr 0x563107e227e0 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B11.1] (ImplicitCastExpr, LValueToRValue, char)
   3: ImplicitCastExpr 0x563107e22838 <lua_cjson.c:910:13> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e22820 <col:13> 'char' <LValueToRValue>
  `-DeclRefExpr 0x563107e227e0 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B11.2] (ImplicitCastExpr, IntegralCast, int)
   4: CharacterLiteral 0x563107e22808 <lua_cjson.c:910:19> 'int' 92
'\\'
   5: BinaryOperator 0x563107e22850 <lua_cjson.c:910:13, col:19> 'int' '=='
|-ImplicitCastExpr 0x563107e22838 <col:13> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e22820 <col:13> 'char' <LValueToRValue>
|   `-DeclRefExpr 0x563107e227e0 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
`-CharacterLiteral 0x563107e22808 <col:19> 'int' 92
[B11.3] == [B11.4]
   T: if [B11.5]
   Preds (1): B13
   Succs (2): B10 B3

 [B12]
   1: DeclRefExpr 0x563107e225a8 <lua_cjson.c:905:13> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
json_set_token_error
   2: ImplicitCastExpr 0x563107e226b8 <lua_cjson.c:905:13> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e225a8 <col:13> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(json_token_t *, json_parse_t *, const char *))
   3: DeclRefExpr 0x563107e225d0 <lua_cjson.c:905:34> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
token
   4: ImplicitCastExpr 0x563107e22710 <lua_cjson.c:905:34> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e225d0 <col:34> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
[B12.3] (ImplicitCastExpr, LValueToRValue, json_token_t *)
   5: DeclRefExpr 0x563107e225f8 <lua_cjson.c:905:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   6: ImplicitCastExpr 0x563107e22728 <lua_cjson.c:905:41> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e225f8 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B12.5] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   7: StringLiteral 0x563107e22620 <lua_cjson.c:905:47> 'char [25]' lvalue "unexpected end of string"
"unexpected end of string"
   8: ImplicitCastExpr 0x563107e22740 <lua_cjson.c:905:47> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e22620 <col:47> 'char [25]' lvalue "unexpected end of string"
[B12.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x563107e22758 <lua_cjson.c:905:47> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e22740 <col:47> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e22620 <col:47> 'char [25]' lvalue "unexpected end of string"
[B12.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x563107e226d0 <lua_cjson.c:905:13, col:73> 'void'
|-ImplicitCastExpr 0x563107e226b8 <col:13> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e225a8 <col:13> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
|-ImplicitCastExpr 0x563107e22710 <col:34> 'json_token_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e225d0 <col:34> 'json_token_t *' lvalue ParmVar 0x563107e1d2f8 'token' 'json_token_t *'
|-ImplicitCastExpr 0x563107e22728 <col:41> 'json_parse_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e225f8 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e22758 <col:47> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e22740 <col:47> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e22620 <col:47> 'char [25]' lvalue "unexpected end of string"
[B12.2]([B12.4], [B12.6], [B12.9])
  11: ReturnStmt 0x563107e22770 <lua_cjson.c:906:13>
return;
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclRefExpr 0x563107e22548 <lua_cjson.c:903:14> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
   2: ImplicitCastExpr 0x563107e22570 <lua_cjson.c:903:14> 'char' <LValueToRValue>
`-DeclRefExpr 0x563107e22548 <col:14> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
[B13.1] (ImplicitCastExpr, LValueToRValue, char)
   3: UnaryOperator 0x563107e22588 <lua_cjson.c:903:13, col:14> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e22570 <col:14> 'char' <LValueToRValue>
  `-DeclRefExpr 0x563107e22548 <col:14> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
![B13.2]
   T: if [B13.3]
   Preds (1): B14
   Succs (2): B12 B11

 [B14]
   1: DeclRefExpr 0x563107e223e0 <lua_cjson.c:902:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e22408 <lua_cjson.c:902:19> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B14.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e22420 <lua_cjson.c:902:19, col:25> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e22408 <col:19> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B14.2]->ptr
   4: ImplicitCastExpr 0x563107e22458 <lua_cjson.c:902:19, col:25> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e22420 <col:19, col:25> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e22408 <col:19> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B14.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: UnaryOperator 0x563107e22470 <lua_cjson.c:902:18, col:25> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e22458 <col:19, col:25> 'const char *' <LValueToRValue>
  `-MemberExpr 0x563107e22420 <col:19, col:25> 'const char *' lvalue ->ptr 0x563107df1578
    `-ImplicitCastExpr 0x563107e22408 <col:19> 'json_parse_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
*[B14.4]
   6: ImplicitCastExpr 0x563107e22490 <lua_cjson.c:902:18, col:25> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e22470 <col:18, col:25> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e22458 <col:19, col:25> 'const char *' <LValueToRValue>
    `-MemberExpr 0x563107e22420 <col:19, col:25> 'const char *' lvalue ->ptr 0x563107df1578
      `-ImplicitCastExpr 0x563107e22408 <col:19> 'json_parse_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B14.5] (ImplicitCastExpr, LValueToRValue, char)
   7: DeclRefExpr 0x563107e223b8 <lua_cjson.c:902:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
ch
   8: BinaryOperator 0x563107e224a8 <lua_cjson.c:902:13, col:25> 'char' '='
|-DeclRefExpr 0x563107e223b8 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
`-ImplicitCastExpr 0x563107e22490 <col:18, col:25> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e22470 <col:18, col:25> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e22458 <col:19, col:25> 'const char *' <LValueToRValue>
      `-MemberExpr 0x563107e22420 <col:19, col:25> 'const char *' lvalue ->ptr 0x563107df1578
        `-ImplicitCastExpr 0x563107e22408 <col:19> 'json_parse_t *' <LValueToRValue>
          `-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B14.7] = [B14.6]
   9: ImplicitCastExpr 0x563107e22508 <lua_cjson.c:902:12, col:28> 'int' <IntegralCast>
`-ParenExpr 0x563107e224d0 <col:12, col:28> 'char'
  `-BinaryOperator 0x563107e224a8 <col:13, col:25> 'char' '='
    |-DeclRefExpr 0x563107e223b8 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
    `-ImplicitCastExpr 0x563107e22490 <col:18, col:25> 'char' <LValueToRValue>
      `-UnaryOperator 0x563107e22470 <col:18, col:25> 'const char' lvalue prefix '*'
        `-ImplicitCastExpr 0x563107e22458 <col:19, col:25> 'const char *' <LValueToRValue>
          `-MemberExpr 0x563107e22420 <col:19, col:25> 'const char *' lvalue ->ptr 0x563107df1578
            `-ImplicitCastExpr 0x563107e22408 <col:19> 'json_parse_t *' <LValueToRValue>
              `-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
([B14.8]) (ImplicitCastExpr, IntegralCast, int)
  10: CharacterLiteral 0x563107e224f0 <lua_cjson.c:902:33> 'int' 34
'"'
  11: BinaryOperator 0x563107e22520 <lua_cjson.c:902:12, col:33> 'int' '!='
|-ImplicitCastExpr 0x563107e22508 <col:12, col:28> 'int' <IntegralCast>
| `-ParenExpr 0x563107e224d0 <col:12, col:28> 'char'
|   `-BinaryOperator 0x563107e224a8 <col:13, col:25> 'char' '='
|     |-DeclRefExpr 0x563107e223b8 <col:13> 'char' lvalue Var 0x563107e1d640 'ch' 'char'
|     `-ImplicitCastExpr 0x563107e22490 <col:18, col:25> 'char' <LValueToRValue>
|       `-UnaryOperator 0x563107e22470 <col:18, col:25> 'const char' lvalue prefix '*'
|         `-ImplicitCastExpr 0x563107e22458 <col:19, col:25> 'const char *' <LValueToRValue>
|           `-MemberExpr 0x563107e22420 <col:19, col:25> 'const char *' lvalue ->ptr 0x563107df1578
|             `-ImplicitCastExpr 0x563107e22408 <col:19> 'json_parse_t *' <LValueToRValue>
|               `-DeclRefExpr 0x563107e223e0 <col:19> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-CharacterLiteral 0x563107e224f0 <col:33> 'int' 34
[B14.9] != [B14.10]
   T: while [B14.11]
   Preds (2): B2 B15
   Succs (2): B13 B1

 [B15]
   1: StmtExpr 0x563107e22198 </usr/include/assert.h:108:50, line:113:6> 'void'
`-CompoundStmt 0x563107e22180 <line:108:51, line:113:5>
  `-IfStmt 0x563107e22148 <line:109:7, line:112:68>
    |-<<<NULL>>>
    |-<<<NULL>>>
    |-BinaryOperator 0x563107e1d9d8 <lua_cjson.c:891:12, col:26> 'int' '=='
    | |-ImplicitCastExpr 0x563107e1d9c0 <col:12, col:19> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x563107e1d9a8 <col:12, col:19> 'char' <LValueToRValue>
    | |   `-UnaryOperator 0x563107e1d970 <col:12, col:19> 'const char' lvalue prefix '*'
    | |     `-ImplicitCastExpr 0x563107e1d958 <col:13, col:19> 'const char *' <LValueToRValue>
    | |       `-MemberExpr 0x563107e1d920 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
    | |         `-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
    | |           `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
    | `-CharacterLiteral 0x563107e1d990 <col:26> 'int' 34
    |-NullStmt 0x563107e1da00 </usr/include/assert.h:110:9>
    `-CallExpr 0x563107e22070 <line:112:9, col:68> 'void'
      |-ImplicitCastExpr 0x563107e22058 <col:9> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x563107e1da10 <col:9> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x563107c8c530 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
      |-ImplicitCastExpr 0x563107e220d0 <<scratch space>:295:1> 'const char *' <BitCast>
      | `-ImplicitCastExpr 0x563107e220b8 <col:1> 'char *' <ArrayToPointerDecay>
      |   `-StringLiteral 0x563107e1da78 <col:1> 'char [18]' lvalue "*json->ptr == '\"'"
      |-ImplicitCastExpr 0x563107e22100 <line:296:1> 'const char *' <BitCast>
      | `-ImplicitCastExpr 0x563107e220e8 <col:1> 'char *' <ArrayToPointerDecay>
      |   `-StringLiteral 0x563107e21ef0 <col:1> 'char [12]' lvalue "lua_cjson.c"
      |-ImplicitCastExpr 0x563107e22118 <line:297:1> 'unsigned int' <IntegralCast>
      | `-IntegerLiteral 0x563107e21f28 <col:1> 'int' 891
      `-ImplicitCastExpr 0x563107e22130 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
        `-UnaryOperator 0x563107e22010 <col:30, col:44> 'const char [60]' lvalue prefix '__extension__'
          `-PredefinedExpr 0x563107e21ff0 <col:44> 'const char [60]' lvalue __PRETTY_FUNCTION__
            `-StringLiteral 0x563107e21f88 <col:44> 'const char [60]' lvalue "void json_next_string_token(json_parse_t *, json_token_t *)"
({ ... ;  })
   2: BinaryOperator 0x563107e221d8 </usr/include/assert.h:108:4, line:113:6> 'void' ','
|-CStyleCastExpr 0x563107e1d8b8 <line:108:4, col:33> 'void' <ToVoid>
| `-UnaryExprOrTypeTraitExpr 0x563107e1d888 <col:11, col:33> 'unsigned long' sizeof
|   `-ParenExpr 0x563107e1d868 <col:18, col:33> 'int'
|     `-ConditionalOperator 0x563107e1d838 <col:19, col:32> 'int'
|       |-ParenExpr 0x563107e1d7d8 <col:19, col:24> 'int'
|       | `-BinaryOperator 0x563107e1d7b0 <lua_cjson.c:891:12, col:26> 'int' '=='
|       |   |-ImplicitCastExpr 0x563107e1d798 <col:12, col:19> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x563107e1d780 <col:12, col:19> 'char' <LValueToRValue>
|       |   |   `-UnaryOperator 0x563107e1d748 <col:12, col:19> 'const char' lvalue prefix '*'
|       |   |     `-ImplicitCastExpr 0x563107e1d730 <col:13, col:19> 'const char *' <LValueToRValue>
|       |   |       `-MemberExpr 0x563107e1d6f8 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
|       |   |         `-ImplicitCastExpr 0x563107e1d6e0 <col:13> 'json_parse_t *' <LValueToRValue>
|       |   |           `-DeclRefExpr 0x563107e1d6b8 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
|       |   `-CharacterLiteral 0x563107e1d768 <col:26> 'int' 34
|       |-IntegerLiteral 0x563107e1d7f8 </usr/include/assert.h:108:28> 'int' 1
|       `-IntegerLiteral 0x563107e1d818 <col:32> 'int' 0
`-UnaryOperator 0x563107e221b8 <col:36, line:113:6> 'void' prefix '__extension__'
  `-StmtExpr 0x563107e22198 <line:108:50, line:113:6> 'void'
    `-CompoundStmt 0x563107e22180 <line:108:51, line:113:5>
      `-IfStmt 0x563107e22148 <line:109:7, line:112:68>
        |-<<<NULL>>>
        |-<<<NULL>>>
        |-BinaryOperator 0x563107e1d9d8 <lua_cjson.c:891:12, col:26> 'int' '=='
        | |-ImplicitCastExpr 0x563107e1d9c0 <col:12, col:19> 'int' <IntegralCast>
        | | `-ImplicitCastExpr 0x563107e1d9a8 <col:12, col:19> 'char' <LValueToRValue>
        | |   `-UnaryOperator 0x563107e1d970 <col:12, col:19> 'const char' lvalue prefix '*'
        | |     `-ImplicitCastExpr 0x563107e1d958 <col:13, col:19> 'const char *' <LValueToRValue>
        | |       `-MemberExpr 0x563107e1d920 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
        | |         `-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
        | |           `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
        | `-CharacterLiteral 0x563107e1d990 <col:26> 'int' 34
        |-NullStmt 0x563107e1da00 </usr/include/assert.h:110:9>
        `-CallExpr 0x563107e22070 <line:112:9, col:68> 'void'
          |-ImplicitCastExpr 0x563107e22058 <col:9> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x563107e1da10 <col:9> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x563107c8c530 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
          |-ImplicitCastExpr 0x563107e220d0 <<scratch space>:295:1> 'const char *' <BitCast>
          | `-ImplicitCastExpr 0x563107e220b8 <col:1> 'char *' <ArrayToPointerDecay>
          |   `-StringLiteral 0x563107e1da78 <col:1> 'char [18]' lvalue "*json->ptr == '\"'"
          |-ImplicitCastExpr 0x563107e22100 <line:296:1> 'const char *' <BitCast>
          | `-ImplicitCastExpr 0x563107e220e8 <col:1> 'char *' <ArrayToPointerDecay>
          |   `-StringLiteral 0x563107e21ef0 <col:1> 'char [12]' lvalue "lua_cjson.c"
          |-ImplicitCastExpr 0x563107e22118 <line:297:1> 'unsigned int' <IntegralCast>
          | `-IntegerLiteral 0x563107e21f28 <col:1> 'int' 891
          `-ImplicitCastExpr 0x563107e22130 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
            `-UnaryOperator 0x563107e22010 <col:30, col:44> 'const char [60]' lvalue prefix '__extension__'
              `-PredefinedExpr 0x563107e21ff0 <col:44> 'const char [60]' lvalue __PRETTY_FUNCTION__
                `-StringLiteral 0x563107e21f88 <col:44> 'const char [60]' lvalue "void json_next_string_token(json_parse_t *, json_token_t *)"
... , 
   3: DeclRefExpr 0x563107e22220 <lua_cjson.c:894:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   4: ImplicitCastExpr 0x563107e22248 <lua_cjson.c:894:5> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e22220 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B15.3] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   5: MemberExpr 0x563107e22260 <lua_cjson.c:894:5, col:11> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e22248 <col:5> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e22220 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B15.4]->ptr
   6: UnaryOperator 0x563107e22298 <lua_cjson.c:894:5, col:14> 'const char *' postfix '++'
`-MemberExpr 0x563107e22260 <col:5, col:11> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e22248 <col:5> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e22220 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B15.5]++
   7: DeclRefExpr 0x563107e222b8 <lua_cjson.c:900:5> 'void (strbuf_t *)' Function 0x563107de9b78 'strbuf_reset' 'void (strbuf_t *)'
strbuf_reset
   8: ImplicitCastExpr 0x563107e22358 <lua_cjson.c:900:5> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e222b8 <col:5> 'void (strbuf_t *)' Function 0x563107de9b78 'strbuf_reset' 'void (strbuf_t *)'
[B15.7] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *))
   9: DeclRefExpr 0x563107e222e0 <lua_cjson.c:900:18> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
  10: ImplicitCastExpr 0x563107e22308 <lua_cjson.c:900:18> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e222e0 <col:18> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B15.9] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  11: MemberExpr 0x563107e22320 <lua_cjson.c:900:18, col:24> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
`-ImplicitCastExpr 0x563107e22308 <col:18> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e222e0 <col:18> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B15.10]->tmp
  12: ImplicitCastExpr 0x563107e223a0 <lua_cjson.c:900:18, col:24> 'strbuf_t *' <LValueToRValue>
`-MemberExpr 0x563107e22320 <col:18, col:24> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
  `-ImplicitCastExpr 0x563107e22308 <col:18> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e222e0 <col:18> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B15.11] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  13: CallExpr 0x563107e22370 <lua_cjson.c:900:5, col:27> 'void'
|-ImplicitCastExpr 0x563107e22358 <col:5> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e222b8 <col:5> 'void (strbuf_t *)' Function 0x563107de9b78 'strbuf_reset' 'void (strbuf_t *)'
`-ImplicitCastExpr 0x563107e223a0 <col:18, col:24> 'strbuf_t *' <LValueToRValue>
  `-MemberExpr 0x563107e22320 <col:18, col:24> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
    `-ImplicitCastExpr 0x563107e22308 <col:18> 'json_parse_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e222e0 <col:18> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B15.8]([B15.12])
   Preds (2): B16(Unreachable) B17
   Succs (1): B14

 [B16 (NORETURN)]
   1: DeclRefExpr 0x563107e1da10 </usr/include/assert.h:112:9> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x563107c8c530 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
__assert_fail
   2: ImplicitCastExpr 0x563107e22058 </usr/include/assert.h:112:9> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e1da10 <col:9> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x563107c8c530 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
[B16.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)))
   3: StringLiteral 0x563107e1da78 <<scratch space>:295:1> 'char [18]' lvalue "*json->ptr == '\"'"
"*json->ptr == '\"'"
   4: ImplicitCastExpr 0x563107e220b8 <<scratch space>:295:1> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e1da78 <col:1> 'char [18]' lvalue "*json->ptr == '\"'"
[B16.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x563107e220d0 <<scratch space>:295:1> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e220b8 <col:1> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e1da78 <col:1> 'char [18]' lvalue "*json->ptr == '\"'"
[B16.4] (ImplicitCastExpr, BitCast, const char *)
   6: StringLiteral 0x563107e21ef0 <<scratch space>:296:1> 'char [12]' lvalue "lua_cjson.c"
"lua_cjson.c"
   7: ImplicitCastExpr 0x563107e220e8 <<scratch space>:296:1> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e21ef0 <col:1> 'char [12]' lvalue "lua_cjson.c"
[B16.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x563107e22100 <<scratch space>:296:1> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e220e8 <col:1> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e21ef0 <col:1> 'char [12]' lvalue "lua_cjson.c"
[B16.7] (ImplicitCastExpr, BitCast, const char *)
   9: IntegerLiteral 0x563107e21f28 <<scratch space>:297:1> 'int' 891
891
  10: ImplicitCastExpr 0x563107e22118 <<scratch space>:297:1> 'unsigned int' <IntegralCast>
`-IntegerLiteral 0x563107e21f28 <col:1> 'int' 891
[B16.9] (ImplicitCastExpr, IntegralCast, unsigned int)
  11: StringLiteral 0x563107e21f88 </usr/include/assert.h:129:44> 'const char [60]' lvalue "void json_next_string_token(json_parse_t *, json_token_t *)"
"void json_next_string_token(json_parse_t *, json_token_t *)"
  12: PredefinedExpr 0x563107e21ff0 </usr/include/assert.h:129:44> 'const char [60]' lvalue __PRETTY_FUNCTION__
`-StringLiteral 0x563107e21f88 <col:44> 'const char [60]' lvalue "void json_next_string_token(json_parse_t *, json_token_t *)"
__PRETTY_FUNCTION__
  13: ImplicitCastExpr 0x563107e22130 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
`-UnaryOperator 0x563107e22010 <col:30, col:44> 'const char [60]' lvalue prefix '__extension__'
  `-PredefinedExpr 0x563107e21ff0 <col:44> 'const char [60]' lvalue __PRETTY_FUNCTION__
    `-StringLiteral 0x563107e21f88 <col:44> 'const char [60]' lvalue "void json_next_string_token(json_parse_t *, json_token_t *)"
__extension__ [B16.12] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  14: CallExpr 0x563107e22070 </usr/include/assert.h:112:9, col:68> 'void'
|-ImplicitCastExpr 0x563107e22058 <col:9> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e1da10 <col:9> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' Function 0x563107c8c530 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))'
|-ImplicitCastExpr 0x563107e220d0 <<scratch space>:295:1> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e220b8 <col:1> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e1da78 <col:1> 'char [18]' lvalue "*json->ptr == '\"'"
|-ImplicitCastExpr 0x563107e22100 <line:296:1> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e220e8 <col:1> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e21ef0 <col:1> 'char [12]' lvalue "lua_cjson.c"
|-ImplicitCastExpr 0x563107e22118 <line:297:1> 'unsigned int' <IntegralCast>
| `-IntegerLiteral 0x563107e21f28 <col:1> 'int' 891
`-ImplicitCastExpr 0x563107e22130 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
  `-UnaryOperator 0x563107e22010 <col:30, col:44> 'const char [60]' lvalue prefix '__extension__'
    `-PredefinedExpr 0x563107e21ff0 <col:44> 'const char [60]' lvalue __PRETTY_FUNCTION__
      `-StringLiteral 0x563107e21f88 <col:44> 'const char [60]' lvalue "void json_next_string_token(json_parse_t *, json_token_t *)"
[B16.2]([B16.5], [B16.8], [B16.10], [B16.13])
   Preds (1): B18
   Succs (1): B0

 [B17]
   Preds (1): B18
   Succs (1): B15

 [B18]
   1: DeclRefExpr 0x563107e1d538 <lua_cjson.c:887:25> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e1d560 <lua_cjson.c:887:25> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1d538 <col:25> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e1d578 <lua_cjson.c:887:25, col:31> 'json_config_t *' lvalue ->cfg 0x563107df16a8
`-ImplicitCastExpr 0x563107e1d560 <col:25> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1d538 <col:25> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.2]->cfg
   4: ImplicitCastExpr 0x563107e1d5b0 <lua_cjson.c:887:25, col:31> 'json_config_t *' <LValueToRValue>
`-MemberExpr 0x563107e1d578 <col:25, col:31> 'json_config_t *' lvalue ->cfg 0x563107df16a8
  `-ImplicitCastExpr 0x563107e1d560 <col:25> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1d538 <col:25> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.3] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   5: MemberExpr 0x563107e1d5c8 <lua_cjson.c:887:25, col:36> 'char [256]' lvalue ->escape2char 0x563107df0f88
`-ImplicitCastExpr 0x563107e1d5b0 <col:25, col:31> 'json_config_t *' <LValueToRValue>
  `-MemberExpr 0x563107e1d578 <col:25, col:31> 'json_config_t *' lvalue ->cfg 0x563107df16a8
    `-ImplicitCastExpr 0x563107e1d560 <col:25> 'json_parse_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e1d538 <col:25> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.4]->escape2char
   6: ImplicitCastExpr 0x563107e1d600 <lua_cjson.c:887:25, col:36> 'char *' <ArrayToPointerDecay>
`-MemberExpr 0x563107e1d5c8 <col:25, col:36> 'char [256]' lvalue ->escape2char 0x563107df0f88
  `-ImplicitCastExpr 0x563107e1d5b0 <col:25, col:31> 'json_config_t *' <LValueToRValue>
    `-MemberExpr 0x563107e1d578 <col:25, col:31> 'json_config_t *' lvalue ->cfg 0x563107df16a8
      `-ImplicitCastExpr 0x563107e1d560 <col:25> 'json_parse_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e1d538 <col:25> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: DeclStmt 0x563107e1d618 <lua_cjson.c:887:5, col:47>col:11
`-VarDecl 0x563107e1d4d8 <col:5, col:36> col:11 used escape2char 'char *' cinit
  `-ImplicitCastExpr 0x563107e1d600 <col:25, col:36> 'char *' <ArrayToPointerDecay>
    `-MemberExpr 0x563107e1d5c8 <col:25, col:36> 'char [256]' lvalue ->escape2char 0x563107df0f88
      `-ImplicitCastExpr 0x563107e1d5b0 <col:25, col:31> 'json_config_t *' <LValueToRValue>
        `-MemberExpr 0x563107e1d578 <col:25, col:31> 'json_config_t *' lvalue ->cfg 0x563107df16a8
          `-ImplicitCastExpr 0x563107e1d560 <col:25> 'json_parse_t *' <LValueToRValue>
            `-DeclRefExpr 0x563107e1d538 <col:25> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
char *escape2char = json->cfg->escape2char;
   8: DeclStmt 0x563107e1d6a0 <lua_cjson.c:888:5, col:12>col:10
`-VarDecl 0x563107e1d640 <col:5, col:10> col:10 used ch 'char'
char ch;
   9: UnaryExprOrTypeTraitExpr 0x563107e1d888 </usr/include/assert.h:108:11, col:33> 'unsigned long' sizeof
`-ParenExpr 0x563107e1d868 <col:18, col:33> 'int'
  `-ConditionalOperator 0x563107e1d838 <col:19, col:32> 'int'
    |-ParenExpr 0x563107e1d7d8 <col:19, col:24> 'int'
    | `-BinaryOperator 0x563107e1d7b0 <lua_cjson.c:891:12, col:26> 'int' '=='
    |   |-ImplicitCastExpr 0x563107e1d798 <col:12, col:19> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x563107e1d780 <col:12, col:19> 'char' <LValueToRValue>
    |   |   `-UnaryOperator 0x563107e1d748 <col:12, col:19> 'const char' lvalue prefix '*'
    |   |     `-ImplicitCastExpr 0x563107e1d730 <col:13, col:19> 'const char *' <LValueToRValue>
    |   |       `-MemberExpr 0x563107e1d6f8 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
    |   |         `-ImplicitCastExpr 0x563107e1d6e0 <col:13> 'json_parse_t *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x563107e1d6b8 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
    |   `-CharacterLiteral 0x563107e1d768 <col:26> 'int' 34
    |-IntegerLiteral 0x563107e1d7f8 </usr/include/assert.h:108:28> 'int' 1
    `-IntegerLiteral 0x563107e1d818 <col:32> 'int' 0
sizeof ((*json->ptr == '"') ? 1 : 0)
  10: CStyleCastExpr 0x563107e1d8b8 </usr/include/assert.h:108:4, col:33> 'void' <ToVoid>
`-UnaryExprOrTypeTraitExpr 0x563107e1d888 <col:11, col:33> 'unsigned long' sizeof
  `-ParenExpr 0x563107e1d868 <col:18, col:33> 'int'
    `-ConditionalOperator 0x563107e1d838 <col:19, col:32> 'int'
      |-ParenExpr 0x563107e1d7d8 <col:19, col:24> 'int'
      | `-BinaryOperator 0x563107e1d7b0 <lua_cjson.c:891:12, col:26> 'int' '=='
      |   |-ImplicitCastExpr 0x563107e1d798 <col:12, col:19> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x563107e1d780 <col:12, col:19> 'char' <LValueToRValue>
      |   |   `-UnaryOperator 0x563107e1d748 <col:12, col:19> 'const char' lvalue prefix '*'
      |   |     `-ImplicitCastExpr 0x563107e1d730 <col:13, col:19> 'const char *' <LValueToRValue>
      |   |       `-MemberExpr 0x563107e1d6f8 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
      |   |         `-ImplicitCastExpr 0x563107e1d6e0 <col:13> 'json_parse_t *' <LValueToRValue>
      |   |           `-DeclRefExpr 0x563107e1d6b8 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
      |   `-CharacterLiteral 0x563107e1d768 <col:26> 'int' 34
      |-IntegerLiteral 0x563107e1d7f8 </usr/include/assert.h:108:28> 'int' 1
      `-IntegerLiteral 0x563107e1d818 <col:32> 'int' 0
(void)[B18.9] (CStyleCastExpr, ToVoid, void)
  11: DeclRefExpr 0x563107e1d8e0 <lua_cjson.c:891:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
json
  12: ImplicitCastExpr 0x563107e1d908 <lua_cjson.c:891:13> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.11] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  13: MemberExpr 0x563107e1d920 <lua_cjson.c:891:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.12]->ptr
  14: ImplicitCastExpr 0x563107e1d958 <lua_cjson.c:891:13, col:19> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e1d920 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.13] (ImplicitCastExpr, LValueToRValue, const char *)
  15: UnaryOperator 0x563107e1d970 <lua_cjson.c:891:12, col:19> 'const char' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e1d958 <col:13, col:19> 'const char *' <LValueToRValue>
  `-MemberExpr 0x563107e1d920 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
    `-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
*[B18.14]
  16: ImplicitCastExpr 0x563107e1d9a8 <lua_cjson.c:891:12, col:19> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e1d970 <col:12, col:19> 'const char' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e1d958 <col:13, col:19> 'const char *' <LValueToRValue>
    `-MemberExpr 0x563107e1d920 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
      `-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.15] (ImplicitCastExpr, LValueToRValue, char)
  17: ImplicitCastExpr 0x563107e1d9c0 <lua_cjson.c:891:12, col:19> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e1d9a8 <col:12, col:19> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e1d970 <col:12, col:19> 'const char' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e1d958 <col:13, col:19> 'const char *' <LValueToRValue>
      `-MemberExpr 0x563107e1d920 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
        `-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
          `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
[B18.16] (ImplicitCastExpr, IntegralCast, int)
  18: CharacterLiteral 0x563107e1d990 <lua_cjson.c:891:26> 'int' 34
'"'
  19: BinaryOperator 0x563107e1d9d8 <lua_cjson.c:891:12, col:26> 'int' '=='
|-ImplicitCastExpr 0x563107e1d9c0 <col:12, col:19> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e1d9a8 <col:12, col:19> 'char' <LValueToRValue>
|   `-UnaryOperator 0x563107e1d970 <col:12, col:19> 'const char' lvalue prefix '*'
|     `-ImplicitCastExpr 0x563107e1d958 <col:13, col:19> 'const char *' <LValueToRValue>
|       `-MemberExpr 0x563107e1d920 <col:13, col:19> 'const char *' lvalue ->ptr 0x563107df1578
|         `-ImplicitCastExpr 0x563107e1d908 <col:13> 'json_parse_t *' <LValueToRValue>
|           `-DeclRefExpr 0x563107e1d8e0 <col:13> 'json_parse_t *' lvalue ParmVar 0x563107e1d288 'json' 'json_parse_t *'
`-CharacterLiteral 0x563107e1d990 <col:26> 'int' 34
[B18.17] == [B18.18]
   T: if [B18.19]
   Preds (1): B19
   Succs (2): B17 B16

 [B0 (EXIT)]
   Preds (5): B1 B5 B7 B12 B16
