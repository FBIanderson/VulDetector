static void callTM(lua_State *L, const TValue *f, const TValue *p1, const TValue *p2, const TValue *p3)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: DeclRefExpr 0x5590ecedcee8 <lvm.c:103:3> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x5590ecedcf10 <lvm.c:103:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedcee8 <col:3> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B1.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x5590ecedcf28 <lvm.c:103:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedcf10 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedcee8 <col:3> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B1.2]->top
   4: IntegerLiteral 0x5590ecedcf60 <lvm.c:103:13> 'int' 4
4
   5: CompoundAssignOperator 0x5590ecedcf80 <lvm.c:103:3, col:13> 'StkId':'TValue *' '+=' ComputeLHSTy='StkId':'TValue *' ComputeResultTy='StkId':'TValue *'
|-MemberExpr 0x5590ecedcf28 <col:3, col:6> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
| `-ImplicitCastExpr 0x5590ecedcf10 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedcee8 <col:3> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecedcf60 <col:13> 'int' 4
[B1.3] += [B1.4]
   6: DeclRefExpr 0x5590ecedcfb8 <lvm.c:104:3> 'void (lua_State *, StkId, int)' Function 0x5590ecea9a70 'luaD_call' 'void (lua_State *, StkId, int)'
luaD_call
   7: ImplicitCastExpr 0x5590ecedd100 <lvm.c:104:3> 'void (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecedcfb8 <col:3> 'void (lua_State *, StkId, int)' Function 0x5590ecea9a70 'luaD_call' 'void (lua_State *, StkId, int)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, StkId, int))
   8: DeclRefExpr 0x5590ecedcfe0 <lvm.c:104:13> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x5590ecedd158 <lvm.c:104:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedcfe0 <col:13> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B1.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: DeclRefExpr 0x5590ecedd008 <lvm.c:104:16> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x5590ecedd030 <lvm.c:104:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedd008 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: MemberExpr 0x5590ecedd048 <lvm.c:104:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedd030 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedd008 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B1.11]->top
  13: ImplicitCastExpr 0x5590ecedd0a0 <lvm.c:104:16, col:19> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecedd048 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590ecedd030 <col:16> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedd008 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B1.12] (ImplicitCastExpr, LValueToRValue, StkId)
  14: IntegerLiteral 0x5590ecedd080 <lvm.c:104:25> 'int' 4
4
  15: BinaryOperator 0x5590ecedd0b8 <lvm.c:104:16, col:25> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x5590ecedd0a0 <col:16, col:19> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590ecedd048 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590ecedd030 <col:16> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecedd008 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecedd080 <col:25> 'int' 4
[B1.13] - [B1.14]
  16: IntegerLiteral 0x5590ecedd0e0 <lvm.c:104:28> 'int' 0
0
  17: CallExpr 0x5590ecedd118 <lvm.c:104:3, col:29> 'void'
|-ImplicitCastExpr 0x5590ecedd100 <col:3> 'void (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecedcfb8 <col:3> 'void (lua_State *, StkId, int)' Function 0x5590ecea9a70 'luaD_call' 'void (lua_State *, StkId, int)'
|-ImplicitCastExpr 0x5590ecedd158 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecedcfe0 <col:13> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
|-BinaryOperator 0x5590ecedd0b8 <col:16, col:25> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x5590ecedd0a0 <col:16, col:19> 'StkId':'TValue *' <LValueToRValue>
| | `-MemberExpr 0x5590ecedd048 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
| |   `-ImplicitCastExpr 0x5590ecedd030 <col:16> 'lua_State *' <LValueToRValue>
| |     `-DeclRefExpr 0x5590ecedd008 <col:16> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
| `-IntegerLiteral 0x5590ecedd080 <col:25> 'int' 4
`-IntegerLiteral 0x5590ecedd0e0 <col:28> 'int' 0
[B1.7]([B1.9], [B1.15], [B1.16])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x5590ecedce28 <./llimits.h:123:38> 'int' 0
0
   2: CStyleCastExpr 0x5590ecedce58 <./llimits.h:123:32, col:38> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecedce28 <col:38> 'int' 0
(void)[B2.1] (CStyleCastExpr, ToVoid, void)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5590ecedcd50 <./ldo.h:18:5> 'void (lua_State *, int)' Function 0x5590eceaa8a8 'luaD_growstack' 'void (lua_State *, int)'
luaD_growstack
   2: ImplicitCastExpr 0x5590ecedcdc0 <./ldo.h:18:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecedcd50 <col:5> 'void (lua_State *, int)' Function 0x5590eceaa8a8 'luaD_growstack' 'void (lua_State *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x5590ecedcd78 <lvm.c:102:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecedce10 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedcd78 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5590ecedcda0 <lvm.c:102:22> 'int' 4
4
   6: CallExpr 0x5590ecedcdd8 <./ldo.h:18:5, col:24> 'void'
|-ImplicitCastExpr 0x5590ecedcdc0 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecedcd50 <col:5> 'void (lua_State *, int)' Function 0x5590eceaa8a8 'luaD_growstack' 'void (lua_State *, int)'
|-ImplicitCastExpr 0x5590ecedce10 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecedcd78 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecedcda0 <col:22> 'int' 4
[B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x5590ecedb4e8 <lvm.c:98:23> 'const TValue *' lvalue ParmVar 0x5590ecedb100 'f' 'const TValue *'
f
   2: ImplicitCastExpr 0x5590ecedb530 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecedb510 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecedb4e8 <lvm.c:98:23> 'const TValue *' lvalue ParmVar 0x5590ecedb100 'f' 'const TValue *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: DeclStmt 0x5590ecedb548 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590ecedb488 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590ecedb530 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecedb510 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecedb4e8 <lvm.c:98:23> 'const TValue *' lvalue ParmVar 0x5590ecedb100 'f' 'const TValue *'
const TValue *o2 = (f);
   4: DeclRefExpr 0x5590ecedb5d0 <lvm.c:98:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x5590ecedb5f8 <lvm.c:98:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedb5d0 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: MemberExpr 0x5590ecedb610 <lvm.c:98:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedb5f8 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedb5d0 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.5]->top
   7: ImplicitCastExpr 0x5590ecedb668 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecedb648 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x5590ecedb610 <lvm.c:98:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590ecedb5f8 <col:15> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedb5d0 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
([B4.6]) (ImplicitCastExpr, LValueToRValue, StkId)
   8: DeclStmt 0x5590ecedb680 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590ecedb570 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecedb668 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecedb648 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x5590ecedb610 <lvm.c:98:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
        `-ImplicitCastExpr 0x5590ecedb5f8 <col:15> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5590ecedb5d0 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
TValue *o1 = (L->top);
   9: DeclRefExpr 0x5590ecedb710 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
o2
  10: ImplicitCastExpr 0x5590ecedb738 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedb710 <col:17> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.9] (ImplicitCastExpr, LValueToRValue, const TValue *)
  11: MemberExpr 0x5590ecedb750 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedb738 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedb710 <col:17> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.10]->value
  12: ImplicitCastExpr 0x5590ecedb788 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590ecedb750 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecedb738 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedb710 <col:17> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.11] (ImplicitCastExpr, LValueToRValue, Value)
  13: DeclRefExpr 0x5590ecedb698 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
o1
  14: ImplicitCastExpr 0x5590ecedb6c0 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedb698 <col:5> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
[B4.13] (ImplicitCastExpr, LValueToRValue, TValue *)
  15: MemberExpr 0x5590ecedb6d8 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedb6c0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedb698 <col:5> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
[B4.14]->value
  16: BinaryOperator 0x5590ecedb7a0 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590ecedb6d8 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590ecedb6c0 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedb698 <col:5> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedb788 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590ecedb750 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecedb738 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedb710 <col:17> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.15] = [B4.12]
  17: DeclRefExpr 0x5590ecedb840 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
o2
  18: ImplicitCastExpr 0x5590ecedb868 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedb840 <col:35> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.17] (ImplicitCastExpr, LValueToRValue, const TValue *)
  19: MemberExpr 0x5590ecedb880 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedb868 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedb840 <col:35> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.18]->tt
  20: ImplicitCastExpr 0x5590ecedb8b8 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590ecedb880 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590ecedb868 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedb840 <col:35> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.19] (ImplicitCastExpr, LValueToRValue, int)
  21: DeclRefExpr 0x5590ecedb7c8 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
o1
  22: ImplicitCastExpr 0x5590ecedb7f0 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedb7c8 <col:28> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
[B4.21] (ImplicitCastExpr, LValueToRValue, TValue *)
  23: MemberExpr 0x5590ecedb808 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedb7f0 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedb7c8 <col:28> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
[B4.22]->tt
  24: BinaryOperator 0x5590ecedb8d0 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590ecedb808 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecedb7f0 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedb7c8 <col:28> 'TValue *' lvalue Var 0x5590ecedb570 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedb8b8 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590ecedb880 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecedb868 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedb840 <col:35> 'const TValue *' lvalue Var 0x5590ecedb488 'o2' 'const TValue *'
[B4.23] = [B4.20]
  25: IntegerLiteral 0x5590ecedb8f8 <./llimits.h:62:31> 'int' 0
0
  26: CStyleCastExpr 0x5590ecedb928 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecedb8f8 <col:31> 'int' 0
(void)[B4.25] (CStyleCastExpr, ToVoid, void)
  27: DeclRefExpr 0x5590ecedba28 <lvm.c:99:25> 'const TValue *' lvalue ParmVar 0x5590ecedb170 'p1' 'const TValue *'
p1
  28: ImplicitCastExpr 0x5590ecedba70 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecedba50 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecedba28 <lvm.c:99:25> 'const TValue *' lvalue ParmVar 0x5590ecedb170 'p1' 'const TValue *'
([B4.27]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  29: DeclStmt 0x5590ecedba88 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590ecedb9c8 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590ecedba70 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecedba50 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecedba28 <lvm.c:99:25> 'const TValue *' lvalue ParmVar 0x5590ecedb170 'p1' 'const TValue *'
const TValue *o2 = (p1);
  30: DeclRefExpr 0x5590ecedbb10 <lvm.c:99:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
  31: ImplicitCastExpr 0x5590ecedbb38 <lvm.c:99:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedbb10 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.30] (ImplicitCastExpr, LValueToRValue, lua_State *)
  32: MemberExpr 0x5590ecedbb50 <lvm.c:99:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedbb38 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedbb10 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.31]->top
  33: ImplicitCastExpr 0x5590ecedbba8 <lvm.c:99:15, col:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecedbb50 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590ecedbb38 <col:15> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedbb10 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.32] (ImplicitCastExpr, LValueToRValue, StkId)
  34: IntegerLiteral 0x5590ecedbb88 <lvm.c:99:22> 'int' 1
1
  35: BinaryOperator 0x5590ecedbbc0 <lvm.c:99:15, col:22> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5590ecedbba8 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590ecedbb50 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590ecedbb38 <col:15> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecedbb10 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecedbb88 <col:22> 'int' 1
[B4.33] + [B4.34]
  36: DeclStmt 0x5590ecedbc08 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590ecedbab0 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5590ecedbbe8 <col:41, col:46> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecedbbc0 <lvm.c:99:15, col:22> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x5590ecedbba8 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5590ecedbb50 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      |   `-ImplicitCastExpr 0x5590ecedbb38 <col:15> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x5590ecedbb10 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
      `-IntegerLiteral 0x5590ecedbb88 <col:22> 'int' 1
TValue *o1 = (L->top + 1);
  37: DeclRefExpr 0x5590ecedbc98 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
o2
  38: ImplicitCastExpr 0x5590ecedbcc0 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedbc98 <col:17> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.37] (ImplicitCastExpr, LValueToRValue, const TValue *)
  39: MemberExpr 0x5590ecedbcd8 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedbcc0 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedbc98 <col:17> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.38]->value
  40: ImplicitCastExpr 0x5590ecedbd10 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590ecedbcd8 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecedbcc0 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedbc98 <col:17> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.39] (ImplicitCastExpr, LValueToRValue, Value)
  41: DeclRefExpr 0x5590ecedbc20 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
o1
  42: ImplicitCastExpr 0x5590ecedbc48 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedbc20 <col:5> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
[B4.41] (ImplicitCastExpr, LValueToRValue, TValue *)
  43: MemberExpr 0x5590ecedbc60 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedbc48 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedbc20 <col:5> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
[B4.42]->value
  44: BinaryOperator 0x5590ecedbd28 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590ecedbc60 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590ecedbc48 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedbc20 <col:5> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedbd10 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590ecedbcd8 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecedbcc0 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedbc98 <col:17> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.43] = [B4.40]
  45: DeclRefExpr 0x5590ecedbdc8 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
o2
  46: ImplicitCastExpr 0x5590ecedbdf0 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedbdc8 <col:35> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.45] (ImplicitCastExpr, LValueToRValue, const TValue *)
  47: MemberExpr 0x5590ecedbe08 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedbdf0 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedbdc8 <col:35> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.46]->tt
  48: ImplicitCastExpr 0x5590ecedbe60 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590ecedbe08 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590ecedbdf0 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedbdc8 <col:35> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.47] (ImplicitCastExpr, LValueToRValue, int)
  49: DeclRefExpr 0x5590ecedbd50 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
o1
  50: ImplicitCastExpr 0x5590ecedbd78 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedbd50 <col:28> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
[B4.49] (ImplicitCastExpr, LValueToRValue, TValue *)
  51: MemberExpr 0x5590ecedbd90 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedbd78 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedbd50 <col:28> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
[B4.50]->tt
  52: BinaryOperator 0x5590ecedbe78 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590ecedbd90 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecedbd78 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedbd50 <col:28> 'TValue *' lvalue Var 0x5590ecedbab0 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedbe60 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590ecedbe08 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecedbdf0 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedbdc8 <col:35> 'const TValue *' lvalue Var 0x5590ecedb9c8 'o2' 'const TValue *'
[B4.51] = [B4.48]
  53: IntegerLiteral 0x5590ecedbea0 <./llimits.h:62:31> 'int' 0
0
  54: CStyleCastExpr 0x5590ecedbed0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecedbea0 <col:31> 'int' 0
(void)[B4.53] (CStyleCastExpr, ToVoid, void)
  55: DeclRefExpr 0x5590ecedbfd0 <lvm.c:100:25> 'const TValue *' lvalue ParmVar 0x5590ecedb1e0 'p2' 'const TValue *'
p2
  56: ImplicitCastExpr 0x5590ecedc018 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecedbff8 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecedbfd0 <lvm.c:100:25> 'const TValue *' lvalue ParmVar 0x5590ecedb1e0 'p2' 'const TValue *'
([B4.55]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  57: DeclStmt 0x5590ecedc030 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590ecedbf70 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590ecedc018 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecedbff8 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecedbfd0 <lvm.c:100:25> 'const TValue *' lvalue ParmVar 0x5590ecedb1e0 'p2' 'const TValue *'
const TValue *o2 = (p2);
  58: DeclRefExpr 0x5590ecedc0b8 <lvm.c:100:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
  59: ImplicitCastExpr 0x5590ecedc0e0 <lvm.c:100:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc0b8 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.58] (ImplicitCastExpr, LValueToRValue, lua_State *)
  60: MemberExpr 0x5590ecedc0f8 <lvm.c:100:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedc0e0 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc0b8 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.59]->top
  61: ImplicitCastExpr 0x5590ecedc150 <lvm.c:100:15, col:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecedc0f8 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590ecedc0e0 <col:15> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedc0b8 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.60] (ImplicitCastExpr, LValueToRValue, StkId)
  62: IntegerLiteral 0x5590ecedc130 <lvm.c:100:22> 'int' 2
2
  63: BinaryOperator 0x5590ecedc168 <lvm.c:100:15, col:22> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5590ecedc150 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590ecedc0f8 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590ecedc0e0 <col:15> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecedc0b8 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecedc130 <col:22> 'int' 2
[B4.61] + [B4.62]
  64: DeclStmt 0x5590ecedc1b0 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590ecedc058 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5590ecedc190 <col:41, col:46> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecedc168 <lvm.c:100:15, col:22> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x5590ecedc150 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5590ecedc0f8 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      |   `-ImplicitCastExpr 0x5590ecedc0e0 <col:15> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x5590ecedc0b8 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
      `-IntegerLiteral 0x5590ecedc130 <col:22> 'int' 2
TValue *o1 = (L->top + 2);
  65: DeclRefExpr 0x5590ecedc240 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
o2
  66: ImplicitCastExpr 0x5590ecedc268 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc240 <col:17> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.65] (ImplicitCastExpr, LValueToRValue, const TValue *)
  67: MemberExpr 0x5590ecedc280 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedc268 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc240 <col:17> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.66]->value
  68: ImplicitCastExpr 0x5590ecedc2b8 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590ecedc280 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecedc268 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedc240 <col:17> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.67] (ImplicitCastExpr, LValueToRValue, Value)
  69: DeclRefExpr 0x5590ecedc1c8 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
o1
  70: ImplicitCastExpr 0x5590ecedc1f0 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc1c8 <col:5> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
[B4.69] (ImplicitCastExpr, LValueToRValue, TValue *)
  71: MemberExpr 0x5590ecedc208 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedc1f0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc1c8 <col:5> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
[B4.70]->value
  72: BinaryOperator 0x5590ecedc2d0 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590ecedc208 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590ecedc1f0 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedc1c8 <col:5> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedc2b8 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590ecedc280 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecedc268 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedc240 <col:17> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.71] = [B4.68]
  73: DeclRefExpr 0x5590ecedc370 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
o2
  74: ImplicitCastExpr 0x5590ecedc398 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc370 <col:35> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.73] (ImplicitCastExpr, LValueToRValue, const TValue *)
  75: MemberExpr 0x5590ecedc3b0 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedc398 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc370 <col:35> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.74]->tt
  76: ImplicitCastExpr 0x5590ecedc3e8 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590ecedc3b0 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590ecedc398 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedc370 <col:35> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.75] (ImplicitCastExpr, LValueToRValue, int)
  77: DeclRefExpr 0x5590ecedc2f8 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
o1
  78: ImplicitCastExpr 0x5590ecedc320 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc2f8 <col:28> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
[B4.77] (ImplicitCastExpr, LValueToRValue, TValue *)
  79: MemberExpr 0x5590ecedc338 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedc320 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc2f8 <col:28> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
[B4.78]->tt
  80: BinaryOperator 0x5590ecedc400 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590ecedc338 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecedc320 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedc2f8 <col:28> 'TValue *' lvalue Var 0x5590ecedc058 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedc3e8 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590ecedc3b0 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecedc398 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedc370 <col:35> 'const TValue *' lvalue Var 0x5590ecedbf70 'o2' 'const TValue *'
[B4.79] = [B4.76]
  81: IntegerLiteral 0x5590ecedc428 <./llimits.h:62:31> 'int' 0
0
  82: CStyleCastExpr 0x5590ecedc458 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecedc428 <col:31> 'int' 0
(void)[B4.81] (CStyleCastExpr, ToVoid, void)
  83: DeclRefExpr 0x5590ecedc558 <lvm.c:101:25> 'const TValue *' lvalue ParmVar 0x5590ecedb250 'p3' 'const TValue *'
p3
  84: ImplicitCastExpr 0x5590ecedc5a0 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecedc580 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecedc558 <lvm.c:101:25> 'const TValue *' lvalue ParmVar 0x5590ecedb250 'p3' 'const TValue *'
([B4.83]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  85: DeclStmt 0x5590ecedc5b8 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590ecedc4f8 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590ecedc5a0 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecedc580 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecedc558 <lvm.c:101:25> 'const TValue *' lvalue ParmVar 0x5590ecedb250 'p3' 'const TValue *'
const TValue *o2 = (p3);
  86: DeclRefExpr 0x5590ecedc640 <lvm.c:101:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
  87: ImplicitCastExpr 0x5590ecedc668 <lvm.c:101:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc640 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.86] (ImplicitCastExpr, LValueToRValue, lua_State *)
  88: MemberExpr 0x5590ecedc680 <lvm.c:101:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedc668 <col:15> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc640 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.87]->top
  89: ImplicitCastExpr 0x5590ecedc6d8 <lvm.c:101:15, col:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecedc680 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590ecedc668 <col:15> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedc640 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.88] (ImplicitCastExpr, LValueToRValue, StkId)
  90: IntegerLiteral 0x5590ecedc6b8 <lvm.c:101:22> 'int' 3
3
  91: BinaryOperator 0x5590ecedc6f0 <lvm.c:101:15, col:22> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x5590ecedc6d8 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x5590ecedc680 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|   `-ImplicitCastExpr 0x5590ecedc668 <col:15> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecedc640 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-IntegerLiteral 0x5590ecedc6b8 <col:22> 'int' 3
[B4.89] + [B4.90]
  92: DeclStmt 0x5590ecedc738 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590ecedc5e0 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5590ecedc718 <col:41, col:46> 'StkId':'TValue *'
    `-BinaryOperator 0x5590ecedc6f0 <lvm.c:101:15, col:22> 'StkId':'TValue *' '+'
      |-ImplicitCastExpr 0x5590ecedc6d8 <col:15, col:18> 'StkId':'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5590ecedc680 <col:15, col:18> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      |   `-ImplicitCastExpr 0x5590ecedc668 <col:15> 'lua_State *' <LValueToRValue>
      |     `-DeclRefExpr 0x5590ecedc640 <col:15> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
      `-IntegerLiteral 0x5590ecedc6b8 <col:22> 'int' 3
TValue *o1 = (L->top + 3);
  93: DeclRefExpr 0x5590ecedc7c8 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
o2
  94: ImplicitCastExpr 0x5590ecedc7f0 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc7c8 <col:17> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.93] (ImplicitCastExpr, LValueToRValue, const TValue *)
  95: MemberExpr 0x5590ecedc808 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedc7f0 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc7c8 <col:17> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.94]->value
  96: ImplicitCastExpr 0x5590ecedc840 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590ecedc808 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecedc7f0 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedc7c8 <col:17> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.95] (ImplicitCastExpr, LValueToRValue, Value)
  97: DeclRefExpr 0x5590ecedc750 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
o1
  98: ImplicitCastExpr 0x5590ecedc778 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc750 <col:5> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
[B4.97] (ImplicitCastExpr, LValueToRValue, TValue *)
  99: MemberExpr 0x5590ecedc790 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecedc778 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc750 <col:5> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
[B4.98]->value
 100: BinaryOperator 0x5590ecedc858 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590ecedc790 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590ecedc778 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedc750 <col:5> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedc840 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590ecedc808 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecedc7f0 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedc7c8 <col:17> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.99] = [B4.96]
 101: DeclRefExpr 0x5590ecedc8f8 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
o2
 102: ImplicitCastExpr 0x5590ecedc920 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc8f8 <col:35> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.101] (ImplicitCastExpr, LValueToRValue, const TValue *)
 103: MemberExpr 0x5590ecedc938 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedc920 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc8f8 <col:35> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.102]->tt
 104: ImplicitCastExpr 0x5590ecedc970 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590ecedc938 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590ecedc920 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedc8f8 <col:35> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.103] (ImplicitCastExpr, LValueToRValue, int)
 105: DeclRefExpr 0x5590ecedc880 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
o1
 106: ImplicitCastExpr 0x5590ecedc8a8 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedc880 <col:28> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
[B4.105] (ImplicitCastExpr, LValueToRValue, TValue *)
 107: MemberExpr 0x5590ecedc8c0 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecedc8a8 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedc880 <col:28> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
[B4.106]->tt
 108: BinaryOperator 0x5590ecedc988 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590ecedc8c0 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecedc8a8 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecedc880 <col:28> 'TValue *' lvalue Var 0x5590ecedc5e0 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecedc970 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590ecedc938 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecedc920 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedc8f8 <col:35> 'const TValue *' lvalue Var 0x5590ecedc4f8 'o2' 'const TValue *'
[B4.107] = [B4.104]
 109: IntegerLiteral 0x5590ecedc9b0 <./llimits.h:62:31> 'int' 0
0
 110: CStyleCastExpr 0x5590ecedc9e0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecedc9b0 <col:31> 'int' 0
(void)[B4.109] (CStyleCastExpr, ToVoid, void)
 111: DeclRefExpr 0x5590ecedca70 <lvm.c:102:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
 112: ImplicitCastExpr 0x5590ecedca98 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedca70 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.111] (ImplicitCastExpr, LValueToRValue, lua_State *)
 113: MemberExpr 0x5590ecedcab0 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
`-ImplicitCastExpr 0x5590ecedca98 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedca70 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.112]->stack_last
 114: ImplicitCastExpr 0x5590ecedcb00 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecedcab0 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
  `-ImplicitCastExpr 0x5590ecedca98 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedca70 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.113] (ImplicitCastExpr, LValueToRValue, StkId)
 115: CStyleCastExpr 0x5590ecedcb18 <./ldo.h:17:7, col:18> 'char *' <BitCast>
`-ImplicitCastExpr 0x5590ecedcb00 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5590ecedcab0 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
    `-ImplicitCastExpr 0x5590ecedca98 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedca70 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
(char *)[B4.114] (CStyleCastExpr, BitCast, char *)
 116: DeclRefExpr 0x5590ecedcb40 <lvm.c:102:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
L
 117: ImplicitCastExpr 0x5590ecedcb68 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecedcb40 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.116] (ImplicitCastExpr, LValueToRValue, lua_State *)
 118: MemberExpr 0x5590ecedcb80 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
`-ImplicitCastExpr 0x5590ecedcb68 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecedcb40 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.117]->top
 119: ImplicitCastExpr 0x5590ecedcbd0 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x5590ecedcb80 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
  `-ImplicitCastExpr 0x5590ecedcb68 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecedcb40 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.118] (ImplicitCastExpr, LValueToRValue, StkId)
 120: CStyleCastExpr 0x5590ecedcbe8 <./ldo.h:17:31, col:42> 'char *' <BitCast>
`-ImplicitCastExpr 0x5590ecedcbd0 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
  `-MemberExpr 0x5590ecedcb80 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
    `-ImplicitCastExpr 0x5590ecedcb68 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecedcb40 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
(char *)[B4.119] (CStyleCastExpr, BitCast, char *)
 121: BinaryOperator 0x5590ecedcc10 <./ldo.h:17:7, col:42> 'long' '-'
|-CStyleCastExpr 0x5590ecedcb18 <col:7, col:18> 'char *' <BitCast>
| `-ImplicitCastExpr 0x5590ecedcb00 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
|   `-MemberExpr 0x5590ecedcab0 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
|     `-ImplicitCastExpr 0x5590ecedca98 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x5590ecedca70 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-CStyleCastExpr 0x5590ecedcbe8 <./ldo.h:17:31, col:42> 'char *' <BitCast>
  `-ImplicitCastExpr 0x5590ecedcbd0 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
    `-MemberExpr 0x5590ecedcb80 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
      `-ImplicitCastExpr 0x5590ecedcb68 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecedcb40 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
[B4.115] - [B4.120]
 122: IntegerLiteral 0x5590ecedcc38 <lvm.c:102:22> 'int' 4
4
 123: UnaryExprOrTypeTraitExpr 0x5590ecedcc88 <./ldo.h:17:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
 124: CStyleCastExpr 0x5590ecedccc0 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
`-UnaryExprOrTypeTraitExpr 0x5590ecedcc88 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
(int)[B4.123] (CStyleCastExpr, IntegralCast, int)
 125: BinaryOperator 0x5590ecedcce8 <./ldo.h:17:49, col:71> 'int' '*'
|-ParenExpr 0x5590ecedcc58 <col:49, col:51> 'int'
| `-IntegerLiteral 0x5590ecedcc38 <lvm.c:102:22> 'int' 4
`-CStyleCastExpr 0x5590ecedccc0 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
  `-UnaryExprOrTypeTraitExpr 0x5590ecedcc88 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B4.122]) * [B4.124]
 126: ImplicitCastExpr 0x5590ecedcd10 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
`-BinaryOperator 0x5590ecedcce8 <col:49, col:71> 'int' '*'
  |-ParenExpr 0x5590ecedcc58 <col:49, col:51> 'int'
  | `-IntegerLiteral 0x5590ecedcc38 <lvm.c:102:22> 'int' 4
  `-CStyleCastExpr 0x5590ecedccc0 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
    `-UnaryExprOrTypeTraitExpr 0x5590ecedcc88 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.125] (ImplicitCastExpr, IntegralCast, long)
 127: BinaryOperator 0x5590ecedcd28 <./ldo.h:17:7, col:71> 'int' '<='
|-BinaryOperator 0x5590ecedcc10 <col:7, col:42> 'long' '-'
| |-CStyleCastExpr 0x5590ecedcb18 <col:7, col:18> 'char *' <BitCast>
| | `-ImplicitCastExpr 0x5590ecedcb00 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' <LValueToRValue>
| |   `-MemberExpr 0x5590ecedcab0 <lvm.c:102:19, ./ldo.h:17:18> 'StkId':'TValue *' lvalue ->stack_last 0x5590ecea0298
| |     `-ImplicitCastExpr 0x5590ecedca98 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
| |       `-DeclRefExpr 0x5590ecedca70 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
| `-CStyleCastExpr 0x5590ecedcbe8 <./ldo.h:17:31, col:42> 'char *' <BitCast>
|   `-ImplicitCastExpr 0x5590ecedcbd0 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' <LValueToRValue>
|     `-MemberExpr 0x5590ecedcb80 <lvm.c:102:19, ./ldo.h:17:42> 'StkId':'TValue *' lvalue ->top 0x5590ece9ffe8
|       `-ImplicitCastExpr 0x5590ecedcb68 <lvm.c:102:19> 'lua_State *' <LValueToRValue>
|         `-DeclRefExpr 0x5590ecedcb40 <col:19> 'lua_State *' lvalue ParmVar 0x5590ecedb090 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecedcd10 <./ldo.h:17:49, col:71> 'long' <IntegralCast>
  `-BinaryOperator 0x5590ecedcce8 <col:49, col:71> 'int' '*'
    |-ParenExpr 0x5590ecedcc58 <col:49, col:51> 'int'
    | `-IntegerLiteral 0x5590ecedcc38 <lvm.c:102:22> 'int' 4
    `-CStyleCastExpr 0x5590ecedccc0 <./ldo.h:17:53, col:71> 'int' <IntegralCast>
      `-UnaryExprOrTypeTraitExpr 0x5590ecedcc88 <col:58, col:71> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B4.121] <= [B4.126]
   T: if [B4.127]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1
