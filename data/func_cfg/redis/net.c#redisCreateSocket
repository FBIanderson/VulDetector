static int redisCreateSocket(redisContext *c, int type)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: IntegerLiteral 0x55f752fd3908 <./read.h:38:18> 'int' 0
0
   2: ReturnStmt 0x55f752fd3928 <net.c:128:5, ./read.h:38:18>
`-IntegerLiteral 0x55f752fd3908 <col:18> 'int' 0
return [B1.1];
   Preds (2): B3 B4
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55f752fd3810 <./read.h:37:20> 'int' 1
1
   2: UnaryOperator 0x55f752fd3830 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd3810 <col:20> 'int' 1
-[B2.1]
   3: ReturnStmt 0x55f752fd3850 <net.c:125:13, ./read.h:37:20>
`-UnaryOperator 0x55f752fd3830 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd3810 <col:20> 'int' 1
return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x55f752fd36c8 <net.c:124:13> 'int (redisContext *)' Function 0x55f752fd26c0 'redisSetReuseAddr' 'int (redisContext *)'
redisSetReuseAddr
   2: ImplicitCastExpr 0x55f752fd3748 <net.c:124:13> 'int (*)(redisContext *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f752fd36c8 <col:13> 'int (redisContext *)' Function 0x55f752fd26c0 'redisSetReuseAddr' 'int (redisContext *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(redisContext *))
   3: DeclRefExpr 0x55f752fd36f0 <net.c:124:31> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x55f752fd3790 <net.c:124:31> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd36f0 <col:31> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
[B3.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: CallExpr 0x55f752fd3760 <net.c:124:13, col:32> 'int'
|-ImplicitCastExpr 0x55f752fd3748 <col:13> 'int (*)(redisContext *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f752fd36c8 <col:13> 'int (redisContext *)' Function 0x55f752fd26c0 'redisSetReuseAddr' 'int (redisContext *)'
`-ImplicitCastExpr 0x55f752fd3790 <col:31> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd36f0 <col:31> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
[B3.2]([B3.4])
   6: IntegerLiteral 0x55f752fd37a8 <./read.h:37:20> 'int' 1
1
   7: UnaryOperator 0x55f752fd37c8 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd37a8 <col:20> 'int' 1
-[B3.6]
   8: BinaryOperator 0x55f752fd37e8 <net.c:124:13, ./read.h:37:20> 'int' '=='
|-CallExpr 0x55f752fd3760 <net.c:124:13, col:32> 'int'
| |-ImplicitCastExpr 0x55f752fd3748 <col:13> 'int (*)(redisContext *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55f752fd36c8 <col:13> 'int (redisContext *)' Function 0x55f752fd26c0 'redisSetReuseAddr' 'int (redisContext *)'
| `-ImplicitCastExpr 0x55f752fd3790 <col:31> 'redisContext *' <LValueToRValue>
|   `-DeclRefExpr 0x55f752fd36f0 <col:31> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
`-UnaryOperator 0x55f752fd37c8 <./read.h:37:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd37a8 <col:20> 'int' 1
[B3.5] == [B3.7]
   T: if [B3.8]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55f752fd35d8 <net.c:122:13> 'redisFD':'int' lvalue Var 0x55f752fd30b0 's' 'redisFD':'int'
s
   2: ImplicitCastExpr 0x55f752fd3600 <net.c:122:13> 'redisFD':'int' <LValueToRValue>
`-DeclRefExpr 0x55f752fd35d8 <col:13> 'redisFD':'int' lvalue Var 0x55f752fd30b0 's' 'redisFD':'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, redisFD)
   3: DeclRefExpr 0x55f752fd3560 <net.c:122:5> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x55f752fd3588 <net.c:122:5> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd3560 <col:5> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
[B4.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: MemberExpr 0x55f752fd35a0 <net.c:122:5, col:8> 'redisFD':'int' lvalue ->fd 0x55f752f1fe58
`-ImplicitCastExpr 0x55f752fd3588 <col:5> 'redisContext *' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd3560 <col:5> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
[B4.4]->fd
   6: BinaryOperator 0x55f752fd3618 <net.c:122:5, col:13> 'redisFD':'int' '='
|-MemberExpr 0x55f752fd35a0 <col:5, col:8> 'redisFD':'int' lvalue ->fd 0x55f752f1fe58
| `-ImplicitCastExpr 0x55f752fd3588 <col:5> 'redisContext *' <LValueToRValue>
|   `-DeclRefExpr 0x55f752fd3560 <col:5> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
`-ImplicitCastExpr 0x55f752fd3600 <col:13> 'redisFD':'int' <LValueToRValue>
  `-DeclRefExpr 0x55f752fd35d8 <col:13> 'redisFD':'int' lvalue Var 0x55f752fd30b0 's' 'redisFD':'int'
[B4.5] = [B4.2]
   7: DeclRefExpr 0x55f752fd3640 <net.c:123:9> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
type
   8: ImplicitCastExpr 0x55f752fd3688 <net.c:123:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f752fd3640 <col:9> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
[B4.7] (ImplicitCastExpr, LValueToRValue, int)
   9: IntegerLiteral 0x55f752fd3668 </usr/include/x86_64-linux-gnu/bits/socket.h:45:18> 'int' 2
2
  10: BinaryOperator 0x55f752fd36a0 <net.c:123:9, /usr/include/x86_64-linux-gnu/bits/socket.h:45:18> 'int' '=='
|-ImplicitCastExpr 0x55f752fd3688 <net.c:123:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55f752fd3640 <col:9> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
`-IntegerLiteral 0x55f752fd3668 </usr/include/x86_64-linux-gnu/bits/socket.h:45:18> 'int' 2
[B4.8] == [B4.9]
   T: if [B4.10]
   Preds (1): B6
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x55f752fd3338 <net.c:119:9> 'void (redisContext *, int, const char *)' Function 0x55f752fd14e0 '__redisSetErrorFromErrno' 'void (redisContext *, int, const char *)'
__redisSetErrorFromErrno
   2: ImplicitCastExpr 0x55f752fd3428 <net.c:119:9> 'void (*)(redisContext *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f752fd3338 <col:9> 'void (redisContext *, int, const char *)' Function 0x55f752fd14e0 '__redisSetErrorFromErrno' 'void (redisContext *, int, const char *)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(redisContext *, int, const char *))
   3: DeclRefExpr 0x55f752fd3360 <net.c:119:34> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
c
   4: ImplicitCastExpr 0x55f752fd3480 <net.c:119:34> 'redisContext *' <LValueToRValue>
`-DeclRefExpr 0x55f752fd3360 <col:34> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
[B5.3] (ImplicitCastExpr, LValueToRValue, redisContext *)
   5: IntegerLiteral 0x55f752fd3388 <./read.h:44:22> 'int' 1
1
   6: IntegerLiteral 0x55f752fd33a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x55f752fd33e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55f752fd33a8 <col:24> 'int' 0
(void *)[B5.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x55f752fd3498 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x55f752fd3408 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55f752fd33e0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55f752fd33a8 <col:24> 'int' 0
([B5.7]) (ImplicitCastExpr, NullToPointer, const char *)
   9: CallExpr 0x55f752fd3440 <net.c:119:9, col:53> 'void'
|-ImplicitCastExpr 0x55f752fd3428 <col:9> 'void (*)(redisContext *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f752fd3338 <col:9> 'void (redisContext *, int, const char *)' Function 0x55f752fd14e0 '__redisSetErrorFromErrno' 'void (redisContext *, int, const char *)'
|-ImplicitCastExpr 0x55f752fd3480 <col:34> 'redisContext *' <LValueToRValue>
| `-DeclRefExpr 0x55f752fd3360 <col:34> 'redisContext *' lvalue ParmVar 0x55f752fd2ee0 'c' 'redisContext *'
|-IntegerLiteral 0x55f752fd3388 <./read.h:44:22> 'int' 1
`-ImplicitCastExpr 0x55f752fd3498 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x55f752fd3408 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55f752fd33e0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55f752fd33a8 <col:24> 'int' 0
[B5.2]([B5.4], [B5.5], [B5.8])
  10: IntegerLiteral 0x55f752fd34b0 <./read.h:37:20> 'int' 1
1
  11: UnaryOperator 0x55f752fd34d0 <./read.h:37:19, col:20> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd34b0 <col:20> 'int' 1
-[B5.10]
  12: ReturnStmt 0x55f752fd34f0 <net.c:120:9, ./read.h:37:20>
`-UnaryOperator 0x55f752fd34d0 <col:19, col:20> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd34b0 <col:20> 'int' 1
return [B5.11];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclStmt 0x55f752fd3110 <net.c:117:5, col:14>col:13
`-VarDecl 0x55f752fd30b0 <col:5, col:13> col:13 used s 'redisFD':'int'
redisFD s;
   2: DeclRefExpr 0x55f752fd3150 <net.c:118:14> 'int (int, int, int)' Function 0x55f752f89e58 'socket' 'int (int, int, int)'
socket
   3: ImplicitCastExpr 0x55f752fd3218 <net.c:118:14> 'int (*)(int, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f752fd3150 <col:14> 'int (int, int, int)' Function 0x55f752f89e58 'socket' 'int (int, int, int)'
[B6.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int, int, int))
   4: DeclRefExpr 0x55f752fd3178 <net.c:118:21> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
type
   5: ImplicitCastExpr 0x55f752fd3270 <net.c:118:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f752fd3178 <col:21> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
[B6.4] (ImplicitCastExpr, LValueToRValue, int)
   6: DeclRefExpr 0x55f752fd31a0 </usr/include/x86_64-linux-gnu/bits/socket_type.h:28:21> 'int' EnumConstant 0x55f752f66bb0 'SOCK_STREAM' 'int'
SOCK_STREAM
   7: IntegerLiteral 0x55f752fd31c8 <net.c:118:40> 'int' 0
0
   8: CallExpr 0x55f752fd3230 <net.c:118:14, col:41> 'int'
|-ImplicitCastExpr 0x55f752fd3218 <col:14> 'int (*)(int, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f752fd3150 <col:14> 'int (int, int, int)' Function 0x55f752f89e58 'socket' 'int (int, int, int)'
|-ImplicitCastExpr 0x55f752fd3270 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55f752fd3178 <col:21> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
|-DeclRefExpr 0x55f752fd31a0 </usr/include/x86_64-linux-gnu/bits/socket_type.h:28:21> 'int' EnumConstant 0x55f752f66bb0 'SOCK_STREAM' 'int'
`-IntegerLiteral 0x55f752fd31c8 <net.c:118:40> 'int' 0
[B6.3]([B6.5], [B6.6], [B6.7])
   9: DeclRefExpr 0x55f752fd3128 <net.c:118:10> 'redisFD':'int' lvalue Var 0x55f752fd30b0 's' 'redisFD':'int'
s
  10: BinaryOperator 0x55f752fd3288 <net.c:118:10, col:41> 'redisFD':'int' '='
|-DeclRefExpr 0x55f752fd3128 <col:10> 'redisFD':'int' lvalue Var 0x55f752fd30b0 's' 'redisFD':'int'
`-CallExpr 0x55f752fd3230 <col:14, col:41> 'int'
  |-ImplicitCastExpr 0x55f752fd3218 <col:14> 'int (*)(int, int, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55f752fd3150 <col:14> 'int (int, int, int)' Function 0x55f752f89e58 'socket' 'int (int, int, int)'
  |-ImplicitCastExpr 0x55f752fd3270 <col:21> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55f752fd3178 <col:21> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
  |-DeclRefExpr 0x55f752fd31a0 </usr/include/x86_64-linux-gnu/bits/socket_type.h:28:21> 'int' EnumConstant 0x55f752f66bb0 'SOCK_STREAM' 'int'
  `-IntegerLiteral 0x55f752fd31c8 <net.c:118:40> 'int' 0
[B6.9] = [B6.8]
  11: IntegerLiteral 0x55f752fd32d0 <./hiredis.h:147:27> 'int' 1
1
  12: UnaryOperator 0x55f752fd32f0 <./hiredis.h:147:26, col:27> 'int' prefix '-'
`-IntegerLiteral 0x55f752fd32d0 <col:27> 'int' 1
-[B6.11]
  13: BinaryOperator 0x55f752fd3310 <net.c:118:9, ./hiredis.h:147:27> 'int' '=='
|-ParenExpr 0x55f752fd32b0 <net.c:118:9, col:42> 'redisFD':'int'
| `-BinaryOperator 0x55f752fd3288 <col:10, col:41> 'redisFD':'int' '='
|   |-DeclRefExpr 0x55f752fd3128 <col:10> 'redisFD':'int' lvalue Var 0x55f752fd30b0 's' 'redisFD':'int'
|   `-CallExpr 0x55f752fd3230 <col:14, col:41> 'int'
|     |-ImplicitCastExpr 0x55f752fd3218 <col:14> 'int (*)(int, int, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f752fd3150 <col:14> 'int (int, int, int)' Function 0x55f752f89e58 'socket' 'int (int, int, int)'
|     |-ImplicitCastExpr 0x55f752fd3270 <col:21> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f752fd3178 <col:21> 'int' lvalue ParmVar 0x55f752fd2f58 'type' 'int'
|     |-DeclRefExpr 0x55f752fd31a0 </usr/include/x86_64-linux-gnu/bits/socket_type.h:28:21> 'int' EnumConstant 0x55f752f66bb0 'SOCK_STREAM' 'int'
|     `-IntegerLiteral 0x55f752fd31c8 <net.c:118:40> 'int' 0
`-UnaryOperator 0x55f752fd32f0 <./hiredis.h:147:26, col:27> 'int' prefix '-'
  `-IntegerLiteral 0x55f752fd32d0 <col:27> 'int' 1
([B6.10]) == [B6.12]
   T: if [B6.13]
   Preds (1): B7
   Succs (2): B5 B4

 [B0 (EXIT)]
   Preds (3): B1 B2 B5
