static void LoadConstants(LoadState *S, Proto *f)
 [B28 (ENTRY)]
   Succs (1): B27

 [B1]
   1: DeclRefExpr 0x5628218746e8 <lundump.c:134:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: UnaryOperator 0x562821874710 <lundump.c:134:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x5628218746e8 <col:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B1.1]++
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: DeclRefExpr 0x562821874828 <lundump.c:134:30> 'Proto *(LoadState *, TString *)' Function 0x56282186f120 'LoadFunction' 'Proto *(LoadState *, TString *)'
LoadFunction
   2: ImplicitCastExpr 0x562821874948 <lundump.c:134:30> 'Proto *(*)(LoadState *, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821874828 <col:30> 'Proto *(LoadState *, TString *)' Function 0x56282186f120 'LoadFunction' 'Proto *(LoadState *, TString *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, Proto *(*)(LoadState *, TString *))
   3: DeclRefExpr 0x562821874850 <lundump.c:134:43> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821874998 <lundump.c:134:43> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821874850 <col:43> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: DeclRefExpr 0x562821874878 <lundump.c:134:45> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
   6: ImplicitCastExpr 0x5628218748a0 <lundump.c:134:45> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x562821874878 <col:45> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.5] (ImplicitCastExpr, LValueToRValue, Proto *)
   7: MemberExpr 0x5628218748b8 <lundump.c:134:45, col:48> 'TString *' lvalue ->source 0x5628218329e8
`-ImplicitCastExpr 0x5628218748a0 <col:45> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562821874878 <col:45> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.6]->source
   8: ImplicitCastExpr 0x5628218749b0 <lundump.c:134:45, col:48> 'TString *' <LValueToRValue>
`-MemberExpr 0x5628218748b8 <col:45, col:48> 'TString *' lvalue ->source 0x5628218329e8
  `-ImplicitCastExpr 0x5628218748a0 <col:45> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562821874878 <col:45> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.7] (ImplicitCastExpr, LValueToRValue, TString *)
   9: CallExpr 0x562821874960 <lundump.c:134:30, col:54> 'Proto *'
|-ImplicitCastExpr 0x562821874948 <col:30> 'Proto *(*)(LoadState *, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821874828 <col:30> 'Proto *(LoadState *, TString *)' Function 0x56282186f120 'LoadFunction' 'Proto *(LoadState *, TString *)'
|-ImplicitCastExpr 0x562821874998 <col:43> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x562821874850 <col:43> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
`-ImplicitCastExpr 0x5628218749b0 <col:45, col:48> 'TString *' <LValueToRValue>
  `-MemberExpr 0x5628218748b8 <col:45, col:48> 'TString *' lvalue ->source 0x5628218329e8
    `-ImplicitCastExpr 0x5628218748a0 <col:45> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x562821874878 <col:45> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.2]([B2.4], [B2.8])
  10: DeclRefExpr 0x562821874730 <lundump.c:134:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
  11: ImplicitCastExpr 0x562821874758 <lundump.c:134:22> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x562821874730 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.10] (ImplicitCastExpr, LValueToRValue, Proto *)
  12: MemberExpr 0x562821874770 <lundump.c:134:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
`-ImplicitCastExpr 0x562821874758 <col:22> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562821874730 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.11]->p
  13: ImplicitCastExpr 0x5628218747d0 <lundump.c:134:22, col:25> 'struct Proto **' <LValueToRValue>
`-MemberExpr 0x562821874770 <col:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
  `-ImplicitCastExpr 0x562821874758 <col:22> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562821874730 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.12] (ImplicitCastExpr, LValueToRValue, struct Proto **)
  14: DeclRefExpr 0x5628218747a8 <lundump.c:134:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
  15: ImplicitCastExpr 0x5628218747e8 <lundump.c:134:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x5628218747a8 <col:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B2.14] (ImplicitCastExpr, LValueToRValue, int)
  16: ArraySubscriptExpr 0x562821874800 <lundump.c:134:22, col:28> 'struct Proto *' lvalue
|-ImplicitCastExpr 0x5628218747d0 <col:22, col:25> 'struct Proto **' <LValueToRValue>
| `-MemberExpr 0x562821874770 <col:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
|   `-ImplicitCastExpr 0x562821874758 <col:22> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562821874730 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ImplicitCastExpr 0x5628218747e8 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5628218747a8 <col:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B2.13][[B2.15]]
  17: BinaryOperator 0x5628218749c8 <lundump.c:134:22, col:54> 'struct Proto *' '='
|-ArraySubscriptExpr 0x562821874800 <col:22, col:28> 'struct Proto *' lvalue
| |-ImplicitCastExpr 0x5628218747d0 <col:22, col:25> 'struct Proto **' <LValueToRValue>
| | `-MemberExpr 0x562821874770 <col:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
| |   `-ImplicitCastExpr 0x562821874758 <col:22> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x562821874730 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
| `-ImplicitCastExpr 0x5628218747e8 <col:27> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x5628218747a8 <col:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-CallExpr 0x562821874960 <col:30, col:54> 'Proto *'
  |-ImplicitCastExpr 0x562821874948 <col:30> 'Proto *(*)(LoadState *, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562821874828 <col:30> 'Proto *(LoadState *, TString *)' Function 0x56282186f120 'LoadFunction' 'Proto *(LoadState *, TString *)'
  |-ImplicitCastExpr 0x562821874998 <col:43> 'LoadState *' <LValueToRValue>
  | `-DeclRefExpr 0x562821874850 <col:43> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
  `-ImplicitCastExpr 0x5628218749b0 <col:45, col:48> 'TString *' <LValueToRValue>
    `-MemberExpr 0x5628218748b8 <col:45, col:48> 'TString *' lvalue ->source 0x5628218329e8
      `-ImplicitCastExpr 0x5628218748a0 <col:45> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x562821874878 <col:45> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B2.16] = [B2.9]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x562821874640 <lundump.c:134:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: ImplicitCastExpr 0x562821874690 <lundump.c:134:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821874640 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562821874668 <lundump.c:134:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   4: ImplicitCastExpr 0x5628218746a8 <lundump.c:134:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821874668 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5628218746c0 <lundump.c:134:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562821874690 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562821874640 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-ImplicitCastExpr 0x5628218746a8 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562821874668 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B3.2] < [B3.4]
   T: for (...; [B3.5]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: IntegerLiteral 0x5628218745f8 <lundump.c:134:9> 'int' 0
0
   2: DeclRefExpr 0x5628218745d0 <lundump.c:134:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   3: BinaryOperator 0x562821874618 <lundump.c:134:7, col:9> 'int' '='
|-DeclRefExpr 0x5628218745d0 <col:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-IntegerLiteral 0x5628218745f8 <col:9> 'int' 0
[B4.2] = [B4.1]
   Preds (1): B7
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x562821874398 <lundump.c:133:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: UnaryOperator 0x5628218743c0 <lundump.c:133:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x562821874398 <col:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B5.1]++
   Preds (1): B6
   Succs (1): B7

 [B6]
   1: IntegerLiteral 0x5628218744d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x562821874510 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5628218744d8 <col:24> 'int' 0
(void *)[B6.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x562821874558 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Proto *' <NullToPointer>
`-ParenExpr 0x562821874538 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x562821874510 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5628218744d8 <col:24> 'int' 0
([B6.2]) (ImplicitCastExpr, NullToPointer, struct Proto *)
   4: DeclRefExpr 0x5628218743e0 <lundump.c:133:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
   5: ImplicitCastExpr 0x562821874408 <lundump.c:133:22> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5628218743e0 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B6.4] (ImplicitCastExpr, LValueToRValue, Proto *)
   6: MemberExpr 0x562821874420 <lundump.c:133:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
`-ImplicitCastExpr 0x562821874408 <col:22> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5628218743e0 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B6.5]->p
   7: ImplicitCastExpr 0x562821874480 <lundump.c:133:22, col:25> 'struct Proto **' <LValueToRValue>
`-MemberExpr 0x562821874420 <col:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
  `-ImplicitCastExpr 0x562821874408 <col:22> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x5628218743e0 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B6.6] (ImplicitCastExpr, LValueToRValue, struct Proto **)
   8: DeclRefExpr 0x562821874458 <lundump.c:133:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   9: ImplicitCastExpr 0x562821874498 <lundump.c:133:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821874458 <col:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B6.8] (ImplicitCastExpr, LValueToRValue, int)
  10: ArraySubscriptExpr 0x5628218744b0 <lundump.c:133:22, col:28> 'struct Proto *' lvalue
|-ImplicitCastExpr 0x562821874480 <col:22, col:25> 'struct Proto **' <LValueToRValue>
| `-MemberExpr 0x562821874420 <col:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
|   `-ImplicitCastExpr 0x562821874408 <col:22> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x5628218743e0 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ImplicitCastExpr 0x562821874498 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562821874458 <col:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B6.7][[B6.9]]
  11: BinaryOperator 0x562821874570 <lundump.c:133:22, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'struct Proto *' '='
|-ArraySubscriptExpr 0x5628218744b0 <lundump.c:133:22, col:28> 'struct Proto *' lvalue
| |-ImplicitCastExpr 0x562821874480 <col:22, col:25> 'struct Proto **' <LValueToRValue>
| | `-MemberExpr 0x562821874420 <col:22, col:25> 'struct Proto **' lvalue ->p 0x562821832640
| |   `-ImplicitCastExpr 0x562821874408 <col:22> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x5628218743e0 <col:22> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
| `-ImplicitCastExpr 0x562821874498 <col:27> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x562821874458 <col:27> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-ImplicitCastExpr 0x562821874558 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Proto *' <NullToPointer>
  `-ParenExpr 0x562821874538 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x562821874510 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5628218744d8 <col:24> 'int' 0
[B6.10] = [B6.3]
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5628218742f0 <lundump.c:133:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: ImplicitCastExpr 0x562821874340 <lundump.c:133:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x5628218742f0 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562821874318 <lundump.c:133:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   4: ImplicitCastExpr 0x562821874358 <lundump.c:133:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821874318 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B7.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562821874370 <lundump.c:133:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562821874340 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5628218742f0 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-ImplicitCastExpr 0x562821874358 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562821874318 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B7.2] < [B7.4]
   T: for (...; [B7.5]; ...)
   Preds (2): B5 B8
   Succs (2): B6 B4

 [B8]
   1: ConditionalOperator 0x562821874048 <./lmem.h:20:3, line:22:16> 'void *'
|-ParenExpr 0x562821872320 <line:20:3, col:40> 'int'
| `-BinaryOperator 0x5628218722f8 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|   |-ParenExpr 0x5628218720e0 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
|   | `-CStyleCastExpr 0x5628218720b8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   |   `-ParenExpr 0x562821872098 <col:26, col:30> 'int'
|   |     `-BinaryOperator 0x562821872030 <./lmem.h:20:17, col:21> 'int' '+'
|   |       |-ImplicitCastExpr 0x562821872018 <col:17, col:19> 'int' <LValueToRValue>
|   |       | `-ParenExpr 0x562821871fd8 <col:17, col:19> 'int' lvalue
|   |       |   `-DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
|   |       `-IntegerLiteral 0x562821871ff8 <./lmem.h:20:21> 'int' 1
|   `-BinaryOperator 0x5628218722d0 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|     |-ParenExpr 0x562821872260 <./llimits.h:30:19, col:42> 'unsigned long'
|     | `-BinaryOperator 0x562821872238 <col:20, col:41> 'unsigned long' '-'
|     |   |-CStyleCastExpr 0x5628218721d8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|     |   | `-ParenExpr 0x5628218721b8 <col:28, col:39> 'size_t':'unsigned long'
|     |   |   `-UnaryOperator 0x562821872158 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     |   |     `-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|     |   |       `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
|     |   `-ImplicitCastExpr 0x562821872220 <col:41> 'unsigned long' <IntegralCast>
|     |     `-IntegerLiteral 0x562821872200 <col:41> 'int' 2
|     `-ParenExpr 0x5628218722b0 <./lmem.h:20:37, col:39> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0x562821872290 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
|-CallExpr 0x562821873ee8 <line:21:3, col:42> 'void *'
| |-ImplicitCastExpr 0x562821873ed0 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562821872340 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
| |-ImplicitCastExpr 0x562821873f30 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
| | `-MemberExpr 0x5628218723a8 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
| |   `-ImplicitCastExpr 0x562821872390 <col:22> 'LoadState *' <LValueToRValue>
| |     `-DeclRefExpr 0x562821872368 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
| |-ParenExpr 0x562821873cf0 <./lmem.h:21:20, col:22> 'void *'
| | `-ParenExpr 0x562821873cd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
| |   `-CStyleCastExpr 0x562821872418 <col:17, col:24> 'void *' <NullToPointer>
| |     `-IntegerLiteral 0x5628218723e0 <col:24> 'int' 0
| |-BinaryOperator 0x562821873db8 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| | |-ImplicitCastExpr 0x562821873da0 <col:25, col:28> 'unsigned long' <IntegralCast>
| | | `-ParenExpr 0x562821873d30 <col:25, col:28> 'int'
| | |   `-IntegerLiteral 0x562821873d10 <line:31:36> 'int' 0
| | `-ParenExpr 0x562821873d80 <line:21:30, col:32> 'unsigned long'
| |   `-UnaryExprOrTypeTraitExpr 0x562821873d60 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
| `-BinaryOperator 0x562821873ea8 <line:21:35, col:41> 'unsigned long' '*'
|   |-ImplicitCastExpr 0x562821873e90 <col:35, col:37> 'unsigned long' <IntegralCast>
|   | `-ImplicitCastExpr 0x562821873e78 <col:35, col:37> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x562821873e08 <col:35, col:37> 'int' lvalue
|   |     `-DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
|   `-ParenExpr 0x562821873e58 <./lmem.h:21:39, col:41> 'unsigned long'
|     `-UnaryExprOrTypeTraitExpr 0x562821873e38 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
`-CallExpr 0x562821874000 <line:22:3, col:16> 'void *'
  |-ImplicitCastExpr 0x562821873fe8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562821873f48 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
  `-ImplicitCastExpr 0x562821874030 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x562821873fb0 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x562821873f98 <col:22> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x562821873f70 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
([B11.22]) ? [B9.18] : [B10.7]
   2: CStyleCastExpr 0x562821874130 <./llimits.h:75:23, col:30> 'Proto **' <BitCast>
`-ParenExpr 0x562821874110 <col:26, col:30> 'void *'
  `-ParenExpr 0x562821874078 <./lmem.h:20:2, line:22:17> 'void *'
    `-ConditionalOperator 0x562821874048 <line:20:3, line:22:16> 'void *'
      |-ParenExpr 0x562821872320 <line:20:3, col:40> 'int'
      | `-BinaryOperator 0x5628218722f8 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
      |   |-ParenExpr 0x5628218720e0 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
      |   | `-CStyleCastExpr 0x5628218720b8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
      |   |   `-ParenExpr 0x562821872098 <col:26, col:30> 'int'
      |   |     `-BinaryOperator 0x562821872030 <./lmem.h:20:17, col:21> 'int' '+'
      |   |       |-ImplicitCastExpr 0x562821872018 <col:17, col:19> 'int' <LValueToRValue>
      |   |       | `-ParenExpr 0x562821871fd8 <col:17, col:19> 'int' lvalue
      |   |       |   `-DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
      |   |       `-IntegerLiteral 0x562821871ff8 <./lmem.h:20:21> 'int' 1
      |   `-BinaryOperator 0x5628218722d0 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
      |     |-ParenExpr 0x562821872260 <./llimits.h:30:19, col:42> 'unsigned long'
      |     | `-BinaryOperator 0x562821872238 <col:20, col:41> 'unsigned long' '-'
      |     |   |-CStyleCastExpr 0x5628218721d8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
      |     |   | `-ParenExpr 0x5628218721b8 <col:28, col:39> 'size_t':'unsigned long'
      |     |   |   `-UnaryOperator 0x562821872158 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
      |     |   |     `-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      |     |   |       `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
      |     |   `-ImplicitCastExpr 0x562821872220 <col:41> 'unsigned long' <IntegralCast>
      |     |     `-IntegerLiteral 0x562821872200 <col:41> 'int' 2
      |     `-ParenExpr 0x5628218722b0 <./lmem.h:20:37, col:39> 'unsigned long'
      |       `-UnaryExprOrTypeTraitExpr 0x562821872290 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
      |-CallExpr 0x562821873ee8 <line:21:3, col:42> 'void *'
      | |-ImplicitCastExpr 0x562821873ed0 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x562821872340 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
      | |-ImplicitCastExpr 0x562821873f30 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
      | | `-MemberExpr 0x5628218723a8 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
      | |   `-ImplicitCastExpr 0x562821872390 <col:22> 'LoadState *' <LValueToRValue>
      | |     `-DeclRefExpr 0x562821872368 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
      | |-ParenExpr 0x562821873cf0 <./lmem.h:21:20, col:22> 'void *'
      | | `-ParenExpr 0x562821873cd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
      | |   `-CStyleCastExpr 0x562821872418 <col:17, col:24> 'void *' <NullToPointer>
      | |     `-IntegerLiteral 0x5628218723e0 <col:24> 'int' 0
      | |-BinaryOperator 0x562821873db8 <./lmem.h:21:25, col:32> 'unsigned long' '*'
      | | |-ImplicitCastExpr 0x562821873da0 <col:25, col:28> 'unsigned long' <IntegralCast>
      | | | `-ParenExpr 0x562821873d30 <col:25, col:28> 'int'
      | | |   `-IntegerLiteral 0x562821873d10 <line:31:36> 'int' 0
      | | `-ParenExpr 0x562821873d80 <line:21:30, col:32> 'unsigned long'
      | |   `-UnaryExprOrTypeTraitExpr 0x562821873d60 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
      | `-BinaryOperator 0x562821873ea8 <line:21:35, col:41> 'unsigned long' '*'
      |   |-ImplicitCastExpr 0x562821873e90 <col:35, col:37> 'unsigned long' <IntegralCast>
      |   | `-ImplicitCastExpr 0x562821873e78 <col:35, col:37> 'int' <LValueToRValue>
      |   |   `-ParenExpr 0x562821873e08 <col:35, col:37> 'int' lvalue
      |   |     `-DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
      |   `-ParenExpr 0x562821873e58 <./lmem.h:21:39, col:41> 'unsigned long'
      |     `-UnaryExprOrTypeTraitExpr 0x562821873e38 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
      `-CallExpr 0x562821874000 <line:22:3, col:16> 'void *'
        |-ImplicitCastExpr 0x562821873fe8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x562821873f48 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
        `-ImplicitCastExpr 0x562821874030 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
          `-MemberExpr 0x562821873fb0 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
            `-ImplicitCastExpr 0x562821873f98 <col:22> 'LoadState *' <LValueToRValue>
              `-DeclRefExpr 0x562821873f70 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
(Proto **)(([B8.1])) (CStyleCastExpr, BitCast, Proto **)
   3: DeclRefExpr 0x562821871f38 <lundump.c:131:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x562821871f60 <lundump.c:131:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x562821871f38 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B8.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x562821871f78 <lundump.c:131:2, col:5> 'struct Proto **' lvalue ->p 0x562821832640
`-ImplicitCastExpr 0x562821871f60 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562821871f38 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B8.4]->p
   6: BinaryOperator 0x562821874178 <lundump.c:131:2, ./llimits.h:75:31> 'struct Proto **' '='
|-MemberExpr 0x562821871f78 <lundump.c:131:2, col:5> 'struct Proto **' lvalue ->p 0x562821832640
| `-ImplicitCastExpr 0x562821871f60 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x562821871f38 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ParenExpr 0x562821874158 <./llimits.h:75:22, col:31> 'Proto **'
  `-CStyleCastExpr 0x562821874130 <col:23, col:30> 'Proto **' <BitCast>
    `-ParenExpr 0x562821874110 <col:26, col:30> 'void *'
      `-ParenExpr 0x562821874078 <./lmem.h:20:2, line:22:17> 'void *'
        `-ConditionalOperator 0x562821874048 <line:20:3, line:22:16> 'void *'
          |-ParenExpr 0x562821872320 <line:20:3, col:40> 'int'
          | `-BinaryOperator 0x5628218722f8 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
          |   |-ParenExpr 0x5628218720e0 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
          |   | `-CStyleCastExpr 0x5628218720b8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
          |   |   `-ParenExpr 0x562821872098 <col:26, col:30> 'int'
          |   |     `-BinaryOperator 0x562821872030 <./lmem.h:20:17, col:21> 'int' '+'
          |   |       |-ImplicitCastExpr 0x562821872018 <col:17, col:19> 'int' <LValueToRValue>
          |   |       | `-ParenExpr 0x562821871fd8 <col:17, col:19> 'int' lvalue
          |   |       |   `-DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
          |   |       `-IntegerLiteral 0x562821871ff8 <./lmem.h:20:21> 'int' 1
          |   `-BinaryOperator 0x5628218722d0 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
          |     |-ParenExpr 0x562821872260 <./llimits.h:30:19, col:42> 'unsigned long'
          |     | `-BinaryOperator 0x562821872238 <col:20, col:41> 'unsigned long' '-'
          |     |   |-CStyleCastExpr 0x5628218721d8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
          |     |   | `-ParenExpr 0x5628218721b8 <col:28, col:39> 'size_t':'unsigned long'
          |     |   |   `-UnaryOperator 0x562821872158 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
          |     |   |     `-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
          |     |   |       `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
          |     |   `-ImplicitCastExpr 0x562821872220 <col:41> 'unsigned long' <IntegralCast>
          |     |     `-IntegerLiteral 0x562821872200 <col:41> 'int' 2
          |     `-ParenExpr 0x5628218722b0 <./lmem.h:20:37, col:39> 'unsigned long'
          |       `-UnaryExprOrTypeTraitExpr 0x562821872290 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
          |-CallExpr 0x562821873ee8 <line:21:3, col:42> 'void *'
          | |-ImplicitCastExpr 0x562821873ed0 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x562821872340 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
          | |-ImplicitCastExpr 0x562821873f30 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
          | | `-MemberExpr 0x5628218723a8 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
          | |   `-ImplicitCastExpr 0x562821872390 <col:22> 'LoadState *' <LValueToRValue>
          | |     `-DeclRefExpr 0x562821872368 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
          | |-ParenExpr 0x562821873cf0 <./lmem.h:21:20, col:22> 'void *'
          | | `-ParenExpr 0x562821873cd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
          | |   `-CStyleCastExpr 0x562821872418 <col:17, col:24> 'void *' <NullToPointer>
          | |     `-IntegerLiteral 0x5628218723e0 <col:24> 'int' 0
          | |-BinaryOperator 0x562821873db8 <./lmem.h:21:25, col:32> 'unsigned long' '*'
          | | |-ImplicitCastExpr 0x562821873da0 <col:25, col:28> 'unsigned long' <IntegralCast>
          | | | `-ParenExpr 0x562821873d30 <col:25, col:28> 'int'
          | | |   `-IntegerLiteral 0x562821873d10 <line:31:36> 'int' 0
          | | `-ParenExpr 0x562821873d80 <line:21:30, col:32> 'unsigned long'
          | |   `-UnaryExprOrTypeTraitExpr 0x562821873d60 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
          | `-BinaryOperator 0x562821873ea8 <line:21:35, col:41> 'unsigned long' '*'
          |   |-ImplicitCastExpr 0x562821873e90 <col:35, col:37> 'unsigned long' <IntegralCast>
          |   | `-ImplicitCastExpr 0x562821873e78 <col:35, col:37> 'int' <LValueToRValue>
          |   |   `-ParenExpr 0x562821873e08 <col:35, col:37> 'int' lvalue
          |   |     `-DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
          |   `-ParenExpr 0x562821873e58 <./lmem.h:21:39, col:41> 'unsigned long'
          |     `-UnaryExprOrTypeTraitExpr 0x562821873e38 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
          `-CallExpr 0x562821874000 <line:22:3, col:16> 'void *'
            |-ImplicitCastExpr 0x562821873fe8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x562821873f48 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
            `-ImplicitCastExpr 0x562821874030 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
              `-MemberExpr 0x562821873fb0 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
                `-ImplicitCastExpr 0x562821873f98 <col:22> 'LoadState *' <LValueToRValue>
                  `-DeclRefExpr 0x562821873f70 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B8.5] = ([B8.2])
   7: DeclRefExpr 0x562821874218 <lundump.c:132:11> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   8: ImplicitCastExpr 0x562821874240 <lundump.c:132:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821874218 <col:11> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B8.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x5628218741a0 <lundump.c:132:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
  10: ImplicitCastExpr 0x5628218741c8 <lundump.c:132:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5628218741a0 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B8.9] (ImplicitCastExpr, LValueToRValue, Proto *)
  11: MemberExpr 0x5628218741e0 <lundump.c:132:2, col:5> 'int' lvalue ->sizep 0x562821832d88
`-ImplicitCastExpr 0x5628218741c8 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5628218741a0 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B8.10]->sizep
  12: BinaryOperator 0x562821874258 <lundump.c:132:2, col:11> 'int' '='
|-MemberExpr 0x5628218741e0 <col:2, col:5> 'int' lvalue ->sizep 0x562821832d88
| `-ImplicitCastExpr 0x5628218741c8 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x5628218741a0 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ImplicitCastExpr 0x562821874240 <col:11> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562821874218 <col:11> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B8.11] = [B8.8]
  13: IntegerLiteral 0x5628218742a8 <lundump.c:133:9> 'int' 0
0
  14: DeclRefExpr 0x562821874280 <lundump.c:133:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
  15: BinaryOperator 0x5628218742c8 <lundump.c:133:7, col:9> 'int' '='
|-DeclRefExpr 0x562821874280 <col:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-IntegerLiteral 0x5628218742a8 <col:9> 'int' 0
[B8.14] = [B8.13]
   Preds (2): B9 B10
   Succs (1): B7

 [B9]
   1: DeclRefExpr 0x562821872340 <./lmem.h:21:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
luaM_realloc_
   2: ImplicitCastExpr 0x562821873ed0 <./lmem.h:21:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821872340 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, size_t, size_t))
   3: DeclRefExpr 0x562821872368 <lundump.c:131:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821872390 <lundump.c:131:22> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821872368 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B9.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: MemberExpr 0x5628218723a8 <lundump.c:131:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x562821872390 <col:22> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821872368 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B9.4]->L
   6: ImplicitCastExpr 0x562821873f30 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x5628218723a8 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x562821872390 <col:22> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821872368 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B9.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x5628218723e0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x562821872418 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5628218723e0 <col:24> 'int' 0
(void *)[B9.7] (CStyleCastExpr, NullToPointer, void *)
   9: IntegerLiteral 0x562821873d10 <./lmem.h:31:36> 'int' 0
0
  10: ImplicitCastExpr 0x562821873da0 <./lmem.h:21:25, col:28> 'unsigned long' <IntegralCast>
`-ParenExpr 0x562821873d30 <col:25, col:28> 'int'
  `-IntegerLiteral 0x562821873d10 <line:31:36> 'int' 0
([B9.9]) (ImplicitCastExpr, IntegralCast, unsigned long)
  11: UnaryExprOrTypeTraitExpr 0x562821873d60 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Proto *'
sizeof(Proto *)
  12: BinaryOperator 0x562821873db8 <./lmem.h:21:25, col:32> 'unsigned long' '*'
|-ImplicitCastExpr 0x562821873da0 <col:25, col:28> 'unsigned long' <IntegralCast>
| `-ParenExpr 0x562821873d30 <col:25, col:28> 'int'
|   `-IntegerLiteral 0x562821873d10 <line:31:36> 'int' 0
`-ParenExpr 0x562821873d80 <line:21:30, col:32> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x562821873d60 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
[B9.10] * ([B9.11])
  13: DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
  14: ImplicitCastExpr 0x562821873e78 <./lmem.h:21:35, col:37> 'int' <LValueToRValue>
`-ParenExpr 0x562821873e08 <col:35, col:37> 'int' lvalue
  `-DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
([B9.13]) (ImplicitCastExpr, LValueToRValue, int)
  15: ImplicitCastExpr 0x562821873e90 <./lmem.h:21:35, col:37> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x562821873e78 <col:35, col:37> 'int' <LValueToRValue>
  `-ParenExpr 0x562821873e08 <col:35, col:37> 'int' lvalue
    `-DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B9.14] (ImplicitCastExpr, IntegralCast, unsigned long)
  16: UnaryExprOrTypeTraitExpr 0x562821873e38 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Proto *'
sizeof(Proto *)
  17: BinaryOperator 0x562821873ea8 <./lmem.h:21:35, col:41> 'unsigned long' '*'
|-ImplicitCastExpr 0x562821873e90 <col:35, col:37> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x562821873e78 <col:35, col:37> 'int' <LValueToRValue>
|   `-ParenExpr 0x562821873e08 <col:35, col:37> 'int' lvalue
|     `-DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
`-ParenExpr 0x562821873e58 <./lmem.h:21:39, col:41> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x562821873e38 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
[B9.15] * ([B9.16])
  18: CallExpr 0x562821873ee8 <./lmem.h:21:3, col:42> 'void *'
|-ImplicitCastExpr 0x562821873ed0 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821872340 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
|-ImplicitCastExpr 0x562821873f30 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
| `-MemberExpr 0x5628218723a8 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
|   `-ImplicitCastExpr 0x562821872390 <col:22> 'LoadState *' <LValueToRValue>
|     `-DeclRefExpr 0x562821872368 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
|-ParenExpr 0x562821873cf0 <./lmem.h:21:20, col:22> 'void *'
| `-ParenExpr 0x562821873cd0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
|   `-CStyleCastExpr 0x562821872418 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5628218723e0 <col:24> 'int' 0
|-BinaryOperator 0x562821873db8 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| |-ImplicitCastExpr 0x562821873da0 <col:25, col:28> 'unsigned long' <IntegralCast>
| | `-ParenExpr 0x562821873d30 <col:25, col:28> 'int'
| |   `-IntegerLiteral 0x562821873d10 <line:31:36> 'int' 0
| `-ParenExpr 0x562821873d80 <line:21:30, col:32> 'unsigned long'
|   `-UnaryExprOrTypeTraitExpr 0x562821873d60 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
`-BinaryOperator 0x562821873ea8 <line:21:35, col:41> 'unsigned long' '*'
  |-ImplicitCastExpr 0x562821873e90 <col:35, col:37> 'unsigned long' <IntegralCast>
  | `-ImplicitCastExpr 0x562821873e78 <col:35, col:37> 'int' <LValueToRValue>
  |   `-ParenExpr 0x562821873e08 <col:35, col:37> 'int' lvalue
  |     `-DeclRefExpr 0x562821873de0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
  `-ParenExpr 0x562821873e58 <./lmem.h:21:39, col:41> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x562821873e38 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
[B9.2]([B9.6], (([B9.8])), [B9.12], [B9.17])
   Preds (1): B11
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x562821873f48 <./lmem.h:22:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
luaM_toobig
   2: ImplicitCastExpr 0x562821873fe8 <./lmem.h:22:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821873f48 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *))
   3: DeclRefExpr 0x562821873f70 <lundump.c:131:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821873f98 <lundump.c:131:22> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821873f70 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B10.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: MemberExpr 0x562821873fb0 <lundump.c:131:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x562821873f98 <col:22> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821873f70 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B10.4]->L
   6: ImplicitCastExpr 0x562821874030 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x562821873fb0 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x562821873f98 <col:22> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821873f70 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B10.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: CallExpr 0x562821874000 <./lmem.h:22:3, col:16> 'void *'
|-ImplicitCastExpr 0x562821873fe8 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821873f48 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
`-ImplicitCastExpr 0x562821874030 <lundump.c:131:22, col:25> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x562821873fb0 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x562821873f98 <col:22> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821873f70 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B10.2]([B10.6])
   Preds (1): B11
   Succs (1): B8

 [B11]
   1: DeclRefExpr 0x562821871e60 <lundump.c:130:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
LoadInt
   2: ImplicitCastExpr 0x562821871eb0 <lundump.c:130:4> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821871e60 <col:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
   3: DeclRefExpr 0x562821871e88 <lundump.c:130:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821871ef8 <lundump.c:130:12> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821871e88 <col:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B11.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: CallExpr 0x562821871ec8 <lundump.c:130:4, col:13> 'int'
|-ImplicitCastExpr 0x562821871eb0 <col:4> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821871e60 <col:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
`-ImplicitCastExpr 0x562821871ef8 <col:12> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821871e88 <col:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B11.2]([B11.4])
   6: DeclRefExpr 0x562821871e38 <lundump.c:130:2> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   7: BinaryOperator 0x562821871f10 <lundump.c:130:2, col:13> 'int' '='
|-DeclRefExpr 0x562821871e38 <col:2> 'int' lvalue Var 0x56282186f420 'n' 'int'
`-CallExpr 0x562821871ec8 <col:4, col:13> 'int'
  |-ImplicitCastExpr 0x562821871eb0 <col:4> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562821871e60 <col:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
  `-ImplicitCastExpr 0x562821871ef8 <col:12> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x562821871e88 <col:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B11.6] = [B11.5]
   8: DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   9: ImplicitCastExpr 0x562821872018 <./lmem.h:20:17, col:19> 'int' <LValueToRValue>
`-ParenExpr 0x562821871fd8 <col:17, col:19> 'int' lvalue
  `-DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
([B11.8]) (ImplicitCastExpr, LValueToRValue, int)
  10: IntegerLiteral 0x562821871ff8 <./lmem.h:20:21> 'int' 1
1
  11: BinaryOperator 0x562821872030 <./lmem.h:20:17, col:21> 'int' '+'
|-ImplicitCastExpr 0x562821872018 <col:17, col:19> 'int' <LValueToRValue>
| `-ParenExpr 0x562821871fd8 <col:17, col:19> 'int' lvalue
|   `-DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
`-IntegerLiteral 0x562821871ff8 <./lmem.h:20:21> 'int' 1
[B11.9] + [B11.10]
  12: CStyleCastExpr 0x5628218720b8 <./llimits.h:75:23, col:30> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x562821872098 <col:26, col:30> 'int'
  `-BinaryOperator 0x562821872030 <./lmem.h:20:17, col:21> 'int' '+'
    |-ImplicitCastExpr 0x562821872018 <col:17, col:19> 'int' <LValueToRValue>
    | `-ParenExpr 0x562821871fd8 <col:17, col:19> 'int' lvalue
    |   `-DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
    `-IntegerLiteral 0x562821871ff8 <./lmem.h:20:21> 'int' 1
(size_t)([B11.11]) (CStyleCastExpr, IntegralCast, size_t)
  13: IntegerLiteral 0x562821872100 <./llimits.h:30:38> 'int' 0
0
  14: CStyleCastExpr 0x562821872130 <./llimits.h:30:30, col:38> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x562821872100 <col:38> 'int' 0
(size_t)[B11.13] (CStyleCastExpr, IntegralCast, size_t)
  15: UnaryOperator 0x562821872158 <./llimits.h:30:29, col:38> 'size_t':'unsigned long' prefix '~'
`-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
~[B11.14]
  16: CStyleCastExpr 0x5628218721d8 <./llimits.h:30:20, col:39> 'size_t':'unsigned long' <NoOp>
`-ParenExpr 0x5628218721b8 <col:28, col:39> 'size_t':'unsigned long'
  `-UnaryOperator 0x562821872158 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
    `-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
(size_t)([B11.15]) (CStyleCastExpr, NoOp, size_t)
  17: IntegerLiteral 0x562821872200 <./llimits.h:30:41> 'int' 2
2
  18: ImplicitCastExpr 0x562821872220 <./llimits.h:30:41> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x562821872200 <col:41> 'int' 2
[B11.17] (ImplicitCastExpr, IntegralCast, unsigned long)
  19: BinaryOperator 0x562821872238 <./llimits.h:30:20, col:41> 'unsigned long' '-'
|-CStyleCastExpr 0x5628218721d8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
| `-ParenExpr 0x5628218721b8 <col:28, col:39> 'size_t':'unsigned long'
|   `-UnaryOperator 0x562821872158 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     `-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
`-ImplicitCastExpr 0x562821872220 <col:41> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x562821872200 <col:41> 'int' 2
[B11.16] - [B11.18]
  20: UnaryExprOrTypeTraitExpr 0x562821872290 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'Proto *'
sizeof(Proto *)
  21: BinaryOperator 0x5628218722d0 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|-ParenExpr 0x562821872260 <./llimits.h:30:19, col:42> 'unsigned long'
| `-BinaryOperator 0x562821872238 <col:20, col:41> 'unsigned long' '-'
|   |-CStyleCastExpr 0x5628218721d8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   | `-ParenExpr 0x5628218721b8 <col:28, col:39> 'size_t':'unsigned long'
|   |   `-UnaryOperator 0x562821872158 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |     `-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
|   `-ImplicitCastExpr 0x562821872220 <col:41> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x562821872200 <col:41> 'int' 2
`-ParenExpr 0x5628218722b0 <./lmem.h:20:37, col:39> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x562821872290 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
([B11.19]) / ([B11.20])
  22: BinaryOperator 0x5628218722f8 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|-ParenExpr 0x5628218720e0 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
| `-CStyleCastExpr 0x5628218720b8 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   `-ParenExpr 0x562821872098 <col:26, col:30> 'int'
|     `-BinaryOperator 0x562821872030 <./lmem.h:20:17, col:21> 'int' '+'
|       |-ImplicitCastExpr 0x562821872018 <col:17, col:19> 'int' <LValueToRValue>
|       | `-ParenExpr 0x562821871fd8 <col:17, col:19> 'int' lvalue
|       |   `-DeclRefExpr 0x562821871fb0 <lundump.c:131:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
|       `-IntegerLiteral 0x562821871ff8 <./lmem.h:20:21> 'int' 1
`-BinaryOperator 0x5628218722d0 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
  |-ParenExpr 0x562821872260 <./llimits.h:30:19, col:42> 'unsigned long'
  | `-BinaryOperator 0x562821872238 <col:20, col:41> 'unsigned long' '-'
  |   |-CStyleCastExpr 0x5628218721d8 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
  |   | `-ParenExpr 0x5628218721b8 <col:28, col:39> 'size_t':'unsigned long'
  |   |   `-UnaryOperator 0x562821872158 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
  |   |     `-CStyleCastExpr 0x562821872130 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  |   |       `-IntegerLiteral 0x562821872100 <col:38> 'int' 0
  |   `-ImplicitCastExpr 0x562821872220 <col:41> 'unsigned long' <IntegralCast>
  |     `-IntegerLiteral 0x562821872200 <col:41> 'int' 2
  `-ParenExpr 0x5628218722b0 <./lmem.h:20:37, col:39> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x562821872290 <line:31:42, col:50> 'unsigned long' sizeof 'Proto *'
([B11.12]) <= [B11.21]
   T: ([B11.22]) ? ... : ...
   Preds (1): B19
   Succs (2): B9 B10

 [B12]
   1: DeclRefExpr 0x5628218704d0 <lundump.c:107:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: UnaryOperator 0x5628218704f8 <lundump.c:107:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x5628218704d0 <col:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B12.1]++
   Preds (5): B14 B15 B16 B17 B18
   Succs (1): B19

 [B13]
   1: DeclRefExpr 0x562821870588 <lundump.c:109:14> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x5628218705b0 <lundump.c:109:14> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x562821870588 <col:14> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B13.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x5628218705c8 <lundump.c:109:14, col:17> 'TValue *' lvalue ->k 0x562821832418
`-ImplicitCastExpr 0x5628218705b0 <col:14> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x562821870588 <col:14> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B13.2]->k
   4: ImplicitCastExpr 0x562821870628 <lundump.c:109:14, col:17> 'TValue *' <LValueToRValue>
`-MemberExpr 0x5628218705c8 <col:14, col:17> 'TValue *' lvalue ->k 0x562821832418
  `-ImplicitCastExpr 0x5628218705b0 <col:14> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x562821870588 <col:14> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B13.3] (ImplicitCastExpr, LValueToRValue, TValue *)
   5: DeclRefExpr 0x562821870600 <lundump.c:109:19> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   6: ImplicitCastExpr 0x562821870640 <lundump.c:109:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821870600 <col:19> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B13.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x562821870658 <lundump.c:109:14, col:20> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x562821870628 <col:14, col:17> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x5628218705c8 <col:14, col:17> 'TValue *' lvalue ->k 0x562821832418
|   `-ImplicitCastExpr 0x5628218705b0 <col:14> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x562821870588 <col:14> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ImplicitCastExpr 0x562821870640 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562821870600 <col:19> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B13.4][[B13.6]]
   8: UnaryOperator 0x562821870680 <lundump.c:109:13, col:20> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x562821870658 <col:14, col:20> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x562821870628 <col:14, col:17> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x5628218705c8 <col:14, col:17> 'TValue *' lvalue ->k 0x562821832418
  |   `-ImplicitCastExpr 0x5628218705b0 <col:14> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x562821870588 <col:14> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
  `-ImplicitCastExpr 0x562821870640 <col:19> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562821870600 <col:19> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
&[B13.7]
   9: DeclStmt 0x5628218706a0 <lundump.c:109:3, col:21>col:11
`-VarDecl 0x562821870528 <col:3, col:20> col:11 used o 'TValue *' cinit
  `-UnaryOperator 0x562821870680 <col:13, col:20> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x562821870658 <col:14, col:20> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x562821870628 <col:14, col:17> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5628218705c8 <col:14, col:17> 'TValue *' lvalue ->k 0x562821832418
      |   `-ImplicitCastExpr 0x5628218705b0 <col:14> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x562821870588 <col:14> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
      `-ImplicitCastExpr 0x562821870640 <col:19> 'int' <LValueToRValue>
        `-DeclRefExpr 0x562821870600 <col:19> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
TValue *o = &f->k[i];
  10: DeclRefExpr 0x562821870730 <lundump.c:110:9> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
LoadChar
  11: ImplicitCastExpr 0x562821870780 <lundump.c:110:9> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821870730 <col:9> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
[B13.10] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
  12: DeclRefExpr 0x562821870758 <lundump.c:110:18> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
  13: ImplicitCastExpr 0x5628218707c8 <lundump.c:110:18> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821870758 <col:18> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B13.12] (ImplicitCastExpr, LValueToRValue, LoadState *)
  14: CallExpr 0x562821870798 <lundump.c:110:9, col:19> 'int'
|-ImplicitCastExpr 0x562821870780 <col:9> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821870730 <col:9> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
`-ImplicitCastExpr 0x5628218707c8 <col:18> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821870758 <col:18> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B13.11]([B13.13])
  15: DeclStmt 0x5628218707e0 <lundump.c:110:3, col:20>col:7
`-VarDecl 0x5628218706d0 <col:3, col:19> col:7 used t 'int' cinit
  `-CallExpr 0x562821870798 <col:9, col:19> 'int'
    |-ImplicitCastExpr 0x562821870780 <col:9> 'int (*)(LoadState *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562821870730 <col:9> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
    `-ImplicitCastExpr 0x5628218707c8 <col:18> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821870758 <col:18> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
int t = LoadChar(S);
  16: DeclRefExpr 0x5628218707f8 <lundump.c:111:11> 'int' lvalue Var 0x5628218706d0 't' 'int'
t
  17: ImplicitCastExpr 0x562821870820 <lundump.c:111:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x5628218707f8 <col:11> 'int' lvalue Var 0x5628218706d0 't' 'int'
[B13.16] (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B13.17]
   Preds (1): B19
   Succs (5): B15 B16 B17 B18 B14

 [B14]
  default:
   1: DeclRefExpr 0x562821871bd8 <lundump.c:126:2> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
error
   2: ImplicitCastExpr 0x562821871ca0 <lundump.c:126:2> 'void (*)(LoadState *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821871bd8 <col:2> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
[B14.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LoadState *, const char *))
   3: DeclRefExpr 0x562821871c00 <lundump.c:126:8> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x562821871cf0 <lundump.c:126:8> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821871c00 <col:8> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B14.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: StringLiteral 0x562821871c68 <lundump.c:126:10> 'char [13]' lvalue "bad constant"
"bad constant"
   6: ImplicitCastExpr 0x562821871d08 <lundump.c:126:10> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562821871c68 <col:10> 'char [13]' lvalue "bad constant"
[B14.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x562821871d20 <lundump.c:126:10> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562821871d08 <col:10> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562821871c68 <col:10> 'char [13]' lvalue "bad constant"
[B14.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x562821871cb8 <lundump.c:126:2, col:24> 'void'
|-ImplicitCastExpr 0x562821871ca0 <col:2> 'void (*)(LoadState *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821871bd8 <col:2> 'void (LoadState *, const char *)' Function 0x562821869290 'error' 'void (LoadState *, const char *)'
|-ImplicitCastExpr 0x562821871cf0 <col:8> 'LoadState *' <LValueToRValue>
| `-DeclRefExpr 0x562821871c00 <col:8> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
`-ImplicitCastExpr 0x562821871d20 <col:10> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562821871d08 <col:10> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x562821871c68 <col:10> 'char [13]' lvalue "bad constant"
[B14.2]([B14.4], [B14.7])
   T: break;
   Preds (1): B13
   Succs (1): B12

 [B15]
  case 4:
   1: DeclRefExpr 0x562821871738 <lundump.c:123:19> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
o
   2: ImplicitCastExpr 0x562821871780 <./lobject.h:129:17, col:21> 'TValue *' <LValueToRValue>
`-ParenExpr 0x562821871760 <col:17, col:21> 'TValue *' lvalue
  `-DeclRefExpr 0x562821871738 <lundump.c:123:19> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
([B15.1]) (ImplicitCastExpr, LValueToRValue, TValue *)
   3: DeclStmt 0x562821871798 <./lobject.h:129:5, col:22>col:13
`-VarDecl 0x5628218716d8 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x562821871780 <col:17, col:21> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x562821871760 <col:17, col:21> 'TValue *' lvalue
      `-DeclRefExpr 0x562821871738 <lundump.c:123:19> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
TValue *i_o = (o);
   4: DeclRefExpr 0x562821871860 <lundump.c:123:21> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
LoadString
   5: ImplicitCastExpr 0x562821871908 <lundump.c:123:21> 'TString *(*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821871860 <col:21> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
[B15.4] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(LoadState *))
   6: DeclRefExpr 0x562821871888 <lundump.c:123:32> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   7: ImplicitCastExpr 0x562821871950 <lundump.c:123:32> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821871888 <col:32> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B15.6] (ImplicitCastExpr, LValueToRValue, LoadState *)
   8: CallExpr 0x562821871920 <lundump.c:123:21, col:33> 'TString *'
|-ImplicitCastExpr 0x562821871908 <col:21> 'TString *(*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821871860 <col:21> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
`-ImplicitCastExpr 0x562821871950 <col:32> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821871888 <col:32> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B15.5]([B15.7])
   9: CStyleCastExpr 0x5628218719e8 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ParenExpr 0x5628218719c8 <col:26, col:30> 'TString *'
  `-ParenExpr 0x562821871968 <./lobject.h:130:36, col:38> 'TString *'
    `-CallExpr 0x562821871920 <lundump.c:123:21, col:33> 'TString *'
      |-ImplicitCastExpr 0x562821871908 <col:21> 'TString *(*)(LoadState *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x562821871860 <col:21> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
      `-ImplicitCastExpr 0x562821871950 <col:32> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x562821871888 <col:32> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
(GCObject *)(([B15.8])) (CStyleCastExpr, BitCast, GCObject *)
  10: DeclRefExpr 0x5628218717b0 <./lobject.h:130:5> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
i_o
  11: ImplicitCastExpr 0x5628218717d8 <./lobject.h:130:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5628218717b0 <col:5> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
[B15.10] (ImplicitCastExpr, LValueToRValue, TValue *)
  12: MemberExpr 0x5628218717f0 <./lobject.h:130:5, col:10> 'Value':'Value' lvalue ->value 0x562821825530
`-ImplicitCastExpr 0x5628218717d8 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5628218717b0 <col:5> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
[B15.11]->value
  13: MemberExpr 0x562821871828 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x562821825230
`-MemberExpr 0x5628218717f0 <col:5, col:10> 'Value':'Value' lvalue ->value 0x562821825530
  `-ImplicitCastExpr 0x5628218717d8 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5628218717b0 <col:5> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
[B15.12].gc
  14: BinaryOperator 0x562821871a30 <./lobject.h:130:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x562821871828 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x562821825230
| `-MemberExpr 0x5628218717f0 <col:5, col:10> 'Value':'Value' lvalue ->value 0x562821825530
|   `-ImplicitCastExpr 0x5628218717d8 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5628218717b0 <col:5> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
`-ParenExpr 0x562821871a10 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x5628218719e8 <col:23, col:30> 'GCObject *' <BitCast>
    `-ParenExpr 0x5628218719c8 <col:26, col:30> 'TString *'
      `-ParenExpr 0x562821871968 <./lobject.h:130:36, col:38> 'TString *'
        `-CallExpr 0x562821871920 <lundump.c:123:21, col:33> 'TString *'
          |-ImplicitCastExpr 0x562821871908 <col:21> 'TString *(*)(LoadState *)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x562821871860 <col:21> 'TString *(LoadState *)' Function 0x56282186b760 'LoadString' 'TString *(LoadState *)'
          `-ImplicitCastExpr 0x562821871950 <col:32> 'LoadState *' <LValueToRValue>
            `-DeclRefExpr 0x562821871888 <col:32> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B15.13] = ([B15.9])
  15: IntegerLiteral 0x562821871ad0 <./lua.h:78:22> 'int' 4
4
  16: DeclRefExpr 0x562821871a58 <./lobject.h:130:42> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
i_o
  17: ImplicitCastExpr 0x562821871a80 <./lobject.h:130:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x562821871a58 <col:42> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
[B15.16] (ImplicitCastExpr, LValueToRValue, TValue *)
  18: MemberExpr 0x562821871a98 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x562821825590
`-ImplicitCastExpr 0x562821871a80 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x562821871a58 <col:42> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
[B15.17]->tt
  19: BinaryOperator 0x562821871af0 <./lobject.h:130:42, ./lua.h:78:22> 'int' '='
|-MemberExpr 0x562821871a98 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x562821825590
| `-ImplicitCastExpr 0x562821871a80 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x562821871a58 <col:42> 'TValue *' lvalue Var 0x5628218716d8 'i_o' 'TValue *'
`-IntegerLiteral 0x562821871ad0 <./lua.h:78:22> 'int' 4
[B15.18] = [B15.15]
  20: IntegerLiteral 0x562821871b18 <./llimits.h:62:31> 'int' 0
0
  21: CStyleCastExpr 0x562821871b48 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x562821871b18 <col:31> 'int' 0
(void)[B15.20] (CStyleCastExpr, ToVoid, void)
   T: break;
   Preds (1): B13
   Succs (1): B12

 [B16]
  case 3:
   1: DeclRefExpr 0x562821870ec0 <lundump.c:120:12> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
o
   2: ImplicitCastExpr 0x562821870f08 <./lobject.h:120:17, col:21> 'TValue *' <LValueToRValue>
`-ParenExpr 0x562821870ee8 <col:17, col:21> 'TValue *' lvalue
  `-DeclRefExpr 0x562821870ec0 <lundump.c:120:12> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
([B16.1]) (ImplicitCastExpr, LValueToRValue, TValue *)
   3: DeclStmt 0x562821870f20 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x562821870e60 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x562821870f08 <col:17, col:21> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x562821870ee8 <col:17, col:21> 'TValue *' lvalue
      `-DeclRefExpr 0x562821870ec0 <lundump.c:120:12> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
TValue *i_o = (o);
   4: DeclRefExpr 0x562821870fe8 <lundump.c:120:14> 'lua_Number (LoadState *)' Function 0x56282186b250 'LoadNumber' 'lua_Number (LoadState *)'
LoadNumber
   5: ImplicitCastExpr 0x5628218714c8 <lundump.c:120:14> 'lua_Number (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821870fe8 <col:14> 'lua_Number (LoadState *)' Function 0x56282186b250 'LoadNumber' 'lua_Number (LoadState *)'
[B16.4] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(LoadState *))
   6: DeclRefExpr 0x562821871440 <lundump.c:120:25> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   7: ImplicitCastExpr 0x562821871510 <lundump.c:120:25> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821871440 <col:25> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B16.6] (ImplicitCastExpr, LValueToRValue, LoadState *)
   8: CallExpr 0x5628218714e0 <lundump.c:120:14, col:26> 'lua_Number':'double'
|-ImplicitCastExpr 0x5628218714c8 <col:14> 'lua_Number (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821870fe8 <col:14> 'lua_Number (LoadState *)' Function 0x56282186b250 'LoadNumber' 'lua_Number (LoadState *)'
`-ImplicitCastExpr 0x562821871510 <col:25> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821871440 <col:25> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B16.5]([B16.7])
   9: DeclRefExpr 0x562821870f38 <./lobject.h:120:24> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x562821870f60 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x562821870f38 <col:24> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
[B16.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x562821870f78 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x562821825530
`-ImplicitCastExpr 0x562821870f60 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x562821870f38 <col:24> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
[B16.10]->value
  12: MemberExpr 0x562821870fb0 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5628218252e8
`-MemberExpr 0x562821870f78 <col:24, col:29> 'Value':'Value' lvalue ->value 0x562821825530
  `-ImplicitCastExpr 0x562821870f60 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x562821870f38 <col:24> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
[B16.11].n
  13: BinaryOperator 0x562821871548 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x562821870fb0 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5628218252e8
| `-MemberExpr 0x562821870f78 <col:24, col:29> 'Value':'Value' lvalue ->value 0x562821825530
|   `-ImplicitCastExpr 0x562821870f60 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x562821870f38 <col:24> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
`-ParenExpr 0x562821871528 <col:37, col:39> 'lua_Number':'double'
  `-CallExpr 0x5628218714e0 <lundump.c:120:14, col:26> 'lua_Number':'double'
    |-ImplicitCastExpr 0x5628218714c8 <col:14> 'lua_Number (*)(LoadState *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562821870fe8 <col:14> 'lua_Number (LoadState *)' Function 0x56282186b250 'LoadNumber' 'lua_Number (LoadState *)'
    `-ImplicitCastExpr 0x562821871510 <col:25> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x562821871440 <col:25> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B16.12] = ([B16.8])
  14: IntegerLiteral 0x5628218715e8 <./lua.h:77:22> 'int' 3
3
  15: DeclRefExpr 0x562821871570 <./lobject.h:120:42> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x562821871598 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x562821871570 <col:42> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
[B16.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x5628218715b0 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x562821825590
`-ImplicitCastExpr 0x562821871598 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x562821871570 <col:42> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
[B16.16]->tt
  18: BinaryOperator 0x562821871608 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5628218715b0 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x562821825590
| `-ImplicitCastExpr 0x562821871598 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x562821871570 <col:42> 'TValue *' lvalue Var 0x562821870e60 'i_o' 'TValue *'
`-IntegerLiteral 0x5628218715e8 <./lua.h:77:22> 'int' 3
[B16.17] = [B16.14]
   T: break;
   Preds (1): B13
   Succs (1): B12

 [B17]
  case 1:
   1: DeclRefExpr 0x562821870a90 <lundump.c:117:15> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
o
   2: ImplicitCastExpr 0x562821870ad8 <./lobject.h:126:17, col:21> 'TValue *' <LValueToRValue>
`-ParenExpr 0x562821870ab8 <col:17, col:21> 'TValue *' lvalue
  `-DeclRefExpr 0x562821870a90 <lundump.c:117:15> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
([B17.1]) (ImplicitCastExpr, LValueToRValue, TValue *)
   3: DeclStmt 0x562821870af0 <./lobject.h:126:5, col:22>col:13
`-VarDecl 0x562821870a30 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x562821870ad8 <col:17, col:21> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x562821870ab8 <col:17, col:21> 'TValue *' lvalue
      `-DeclRefExpr 0x562821870a90 <lundump.c:117:15> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
TValue *i_o = (o);
   4: DeclRefExpr 0x562821870bb8 <lundump.c:117:17> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
LoadChar
   5: ImplicitCastExpr 0x562821870c08 <lundump.c:117:17> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562821870bb8 <col:17> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
[B17.4] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
   6: DeclRefExpr 0x562821870be0 <lundump.c:117:26> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   7: ImplicitCastExpr 0x562821870c50 <lundump.c:117:26> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x562821870be0 <col:26> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B17.6] (ImplicitCastExpr, LValueToRValue, LoadState *)
   8: CallExpr 0x562821870c20 <lundump.c:117:17, col:27> 'int'
|-ImplicitCastExpr 0x562821870c08 <col:17> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562821870bb8 <col:17> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
`-ImplicitCastExpr 0x562821870c50 <col:26> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x562821870be0 <col:26> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B17.5]([B17.7])
   9: IntegerLiteral 0x562821870c68 <lundump.c:117:30> 'int' 0
0
  10: BinaryOperator 0x562821870c88 <lundump.c:117:17, col:30> 'int' '!='
|-CallExpr 0x562821870c20 <col:17, col:27> 'int'
| |-ImplicitCastExpr 0x562821870c08 <col:17> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x562821870bb8 <col:17> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
| `-ImplicitCastExpr 0x562821870c50 <col:26> 'LoadState *' <LValueToRValue>
|   `-DeclRefExpr 0x562821870be0 <col:26> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
`-IntegerLiteral 0x562821870c68 <col:30> 'int' 0
[B17.8] != [B17.9]
  11: DeclRefExpr 0x562821870b08 <./lobject.h:126:24> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
i_o
  12: ImplicitCastExpr 0x562821870b30 <./lobject.h:126:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x562821870b08 <col:24> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
[B17.11] (ImplicitCastExpr, LValueToRValue, TValue *)
  13: MemberExpr 0x562821870b48 <./lobject.h:126:24, col:29> 'Value':'Value' lvalue ->value 0x562821825530
`-ImplicitCastExpr 0x562821870b30 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x562821870b08 <col:24> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
[B17.12]->value
  14: MemberExpr 0x562821870b80 <./lobject.h:126:24, col:35> 'int' lvalue .b 0x562821825348
`-MemberExpr 0x562821870b48 <col:24, col:29> 'Value':'Value' lvalue ->value 0x562821825530
  `-ImplicitCastExpr 0x562821870b30 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x562821870b08 <col:24> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
[B17.13].b
  15: BinaryOperator 0x562821870cd0 <./lobject.h:126:24, col:39> 'int' '='
|-MemberExpr 0x562821870b80 <col:24, col:35> 'int' lvalue .b 0x562821825348
| `-MemberExpr 0x562821870b48 <col:24, col:29> 'Value':'Value' lvalue ->value 0x562821825530
|   `-ImplicitCastExpr 0x562821870b30 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x562821870b08 <col:24> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
`-ParenExpr 0x562821870cb0 <col:37, col:39> 'int'
  `-BinaryOperator 0x562821870c88 <lundump.c:117:17, col:30> 'int' '!='
    |-CallExpr 0x562821870c20 <col:17, col:27> 'int'
    | |-ImplicitCastExpr 0x562821870c08 <col:17> 'int (*)(LoadState *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562821870bb8 <col:17> 'int (LoadState *)' Function 0x56282186a650 'LoadChar' 'int (LoadState *)'
    | `-ImplicitCastExpr 0x562821870c50 <col:26> 'LoadState *' <LValueToRValue>
    |   `-DeclRefExpr 0x562821870be0 <col:26> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
    `-IntegerLiteral 0x562821870c68 <col:30> 'int' 0
[B17.14] = ([B17.10])
  16: IntegerLiteral 0x562821870d70 <./lua.h:75:23> 'int' 1
1
  17: DeclRefExpr 0x562821870cf8 <./lobject.h:126:42> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
i_o
  18: ImplicitCastExpr 0x562821870d20 <./lobject.h:126:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x562821870cf8 <col:42> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
[B17.17] (ImplicitCastExpr, LValueToRValue, TValue *)
  19: MemberExpr 0x562821870d38 <./lobject.h:126:42, col:47> 'int' lvalue ->tt 0x562821825590
`-ImplicitCastExpr 0x562821870d20 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x562821870cf8 <col:42> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
[B17.18]->tt
  20: BinaryOperator 0x562821870d90 <./lobject.h:126:42, ./lua.h:75:23> 'int' '='
|-MemberExpr 0x562821870d38 <./lobject.h:126:42, col:47> 'int' lvalue ->tt 0x562821825590
| `-ImplicitCastExpr 0x562821870d20 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x562821870cf8 <col:42> 'TValue *' lvalue Var 0x562821870a30 'i_o' 'TValue *'
`-IntegerLiteral 0x562821870d70 <./lua.h:75:23> 'int' 1
[B17.19] = [B17.16]
   T: break;
   Preds (1): B13
   Succs (1): B12

 [B18]
  case 0:
   1: IntegerLiteral 0x562821870958 <./lua.h:74:19> 'int' 0
0
   2: DeclRefExpr 0x5628218708c0 <lundump.c:114:17> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
o
   3: ImplicitCastExpr 0x562821870908 <./lobject.h:117:27, col:31> 'TValue *' <LValueToRValue>
`-ParenExpr 0x5628218708e8 <col:27, col:31> 'TValue *' lvalue
  `-DeclRefExpr 0x5628218708c0 <lundump.c:114:17> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
([B18.2]) (ImplicitCastExpr, LValueToRValue, TValue *)
   4: MemberExpr 0x562821870920 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x562821825590
`-ImplicitCastExpr 0x562821870908 <col:27, col:31> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x5628218708e8 <col:27, col:31> 'TValue *' lvalue
    `-DeclRefExpr 0x5628218708c0 <lundump.c:114:17> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
[B18.3]->tt
   5: BinaryOperator 0x562821870978 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x562821870920 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x562821825590
| `-ImplicitCastExpr 0x562821870908 <col:27, col:31> 'TValue *' <LValueToRValue>
|   `-ParenExpr 0x5628218708e8 <col:27, col:31> 'TValue *' lvalue
|     `-DeclRefExpr 0x5628218708c0 <lundump.c:114:17> 'TValue *' lvalue Var 0x562821870528 'o' 'TValue *'
`-IntegerLiteral 0x562821870958 <./lua.h:74:19> 'int' 0
[B18.4] = [B18.1]
   T: break;
   Preds (1): B13
   Succs (1): B12

 [B19]
   1: DeclRefExpr 0x562821870428 <lundump.c:107:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: ImplicitCastExpr 0x562821870478 <lundump.c:107:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821870428 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B19.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x562821870450 <lundump.c:107:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   4: ImplicitCastExpr 0x562821870490 <lundump.c:107:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821870450 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B19.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x5628218704a8 <lundump.c:107:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562821870478 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562821870428 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-ImplicitCastExpr 0x562821870490 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562821870450 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B19.2] < [B19.4]
   T: for (...; [B19.5]; ...)
   Preds (2): B12 B20
   Succs (2): B13 B11

 [B20]
   1: IntegerLiteral 0x5628218703e0 <lundump.c:107:9> 'int' 0
0
   2: DeclRefExpr 0x5628218703b8 <lundump.c:107:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   3: BinaryOperator 0x562821870400 <lundump.c:107:7, col:9> 'int' '='
|-DeclRefExpr 0x5628218703b8 <col:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-IntegerLiteral 0x5628218703e0 <col:9> 'int' 0
[B20.2] = [B20.1]
   Preds (1): B23
   Succs (1): B19

 [B21]
   1: DeclRefExpr 0x562821870160 <lundump.c:106:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: UnaryOperator 0x562821870188 <lundump.c:106:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x562821870160 <col:17> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B21.1]++
   Preds (1): B22
   Succs (1): B23

 [B22]
   1: IntegerLiteral 0x562821870318 <./lua.h:74:19> 'int' 0
0
   2: DeclRefExpr 0x5628218701a8 <lundump.c:106:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
   3: ImplicitCastExpr 0x5628218701d0 <lundump.c:106:35> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5628218701a8 <col:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B22.2] (ImplicitCastExpr, LValueToRValue, Proto *)
   4: MemberExpr 0x5628218701e8 <lundump.c:106:35, col:38> 'TValue *' lvalue ->k 0x562821832418
`-ImplicitCastExpr 0x5628218701d0 <col:35> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5628218701a8 <col:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B22.3]->k
   5: ImplicitCastExpr 0x562821870248 <lundump.c:106:35, col:38> 'TValue *' <LValueToRValue>
`-MemberExpr 0x5628218701e8 <col:35, col:38> 'TValue *' lvalue ->k 0x562821832418
  `-ImplicitCastExpr 0x5628218701d0 <col:35> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x5628218701a8 <col:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B22.4] (ImplicitCastExpr, LValueToRValue, TValue *)
   6: DeclRefExpr 0x562821870220 <lundump.c:106:40> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   7: ImplicitCastExpr 0x562821870260 <lundump.c:106:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x562821870220 <col:40> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B22.6] (ImplicitCastExpr, LValueToRValue, int)
   8: ArraySubscriptExpr 0x562821870278 <lundump.c:106:35, col:41> 'TValue':'struct lua_TValue' lvalue
|-ImplicitCastExpr 0x562821870248 <col:35, col:38> 'TValue *' <LValueToRValue>
| `-MemberExpr 0x5628218701e8 <col:35, col:38> 'TValue *' lvalue ->k 0x562821832418
|   `-ImplicitCastExpr 0x5628218701d0 <col:35> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x5628218701a8 <col:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ImplicitCastExpr 0x562821870260 <col:40> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562821870220 <col:40> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B22.5][[B22.7]]
   9: UnaryOperator 0x5628218702a0 <lundump.c:106:34, col:41> 'TValue *' prefix '&'
`-ArraySubscriptExpr 0x562821870278 <col:35, col:41> 'TValue':'struct lua_TValue' lvalue
  |-ImplicitCastExpr 0x562821870248 <col:35, col:38> 'TValue *' <LValueToRValue>
  | `-MemberExpr 0x5628218701e8 <col:35, col:38> 'TValue *' lvalue ->k 0x562821832418
  |   `-ImplicitCastExpr 0x5628218701d0 <col:35> 'Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x5628218701a8 <col:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
  `-ImplicitCastExpr 0x562821870260 <col:40> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562821870220 <col:40> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
&[B22.8]
  10: MemberExpr 0x5628218702e0 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x562821825590
`-ParenExpr 0x5628218702c0 <col:27, col:31> 'TValue *'
  `-UnaryOperator 0x5628218702a0 <lundump.c:106:34, col:41> 'TValue *' prefix '&'
    `-ArraySubscriptExpr 0x562821870278 <col:35, col:41> 'TValue':'struct lua_TValue' lvalue
      |-ImplicitCastExpr 0x562821870248 <col:35, col:38> 'TValue *' <LValueToRValue>
      | `-MemberExpr 0x5628218701e8 <col:35, col:38> 'TValue *' lvalue ->k 0x562821832418
      |   `-ImplicitCastExpr 0x5628218701d0 <col:35> 'Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x5628218701a8 <col:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
      `-ImplicitCastExpr 0x562821870260 <col:40> 'int' <LValueToRValue>
        `-DeclRefExpr 0x562821870220 <col:40> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
([B22.9])->tt
  11: BinaryOperator 0x562821870338 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x5628218702e0 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x562821825590
| `-ParenExpr 0x5628218702c0 <col:27, col:31> 'TValue *'
|   `-UnaryOperator 0x5628218702a0 <lundump.c:106:34, col:41> 'TValue *' prefix '&'
|     `-ArraySubscriptExpr 0x562821870278 <col:35, col:41> 'TValue':'struct lua_TValue' lvalue
|       |-ImplicitCastExpr 0x562821870248 <col:35, col:38> 'TValue *' <LValueToRValue>
|       | `-MemberExpr 0x5628218701e8 <col:35, col:38> 'TValue *' lvalue ->k 0x562821832418
|       |   `-ImplicitCastExpr 0x5628218701d0 <col:35> 'Proto *' <LValueToRValue>
|       |     `-DeclRefExpr 0x5628218701a8 <col:35> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
|       `-ImplicitCastExpr 0x562821870260 <col:40> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x562821870220 <col:40> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-IntegerLiteral 0x562821870318 <./lua.h:74:19> 'int' 0
[B22.10] = [B22.1]
   Preds (1): B23
   Succs (1): B21

 [B23]
   1: DeclRefExpr 0x5628218700b8 <lundump.c:106:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
   2: ImplicitCastExpr 0x562821870108 <lundump.c:106:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x5628218700b8 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
[B23.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5628218700e0 <lundump.c:106:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   4: ImplicitCastExpr 0x562821870120 <lundump.c:106:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x5628218700e0 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B23.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x562821870138 <lundump.c:106:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x562821870108 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5628218700b8 <col:12> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-ImplicitCastExpr 0x562821870120 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5628218700e0 <col:14> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B23.2] < [B23.4]
   T: for (...; [B23.5]; ...)
   Preds (2): B21 B24
   Succs (2): B22 B20

 [B24]
   1: ConditionalOperator 0x56282186fe30 <./lmem.h:20:3, line:22:16> 'void *'
|-ParenExpr 0x56282186f998 <line:20:3, col:40> 'int'
| `-BinaryOperator 0x56282186f970 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|   |-ParenExpr 0x56282186f758 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
|   | `-CStyleCastExpr 0x56282186f730 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   |   `-ParenExpr 0x56282186f710 <col:26, col:30> 'int'
|   |     `-BinaryOperator 0x56282186f6a8 <./lmem.h:20:17, col:21> 'int' '+'
|   |       |-ImplicitCastExpr 0x56282186f690 <col:17, col:19> 'int' <LValueToRValue>
|   |       | `-ParenExpr 0x56282186f650 <col:17, col:19> 'int' lvalue
|   |       |   `-DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
|   |       `-IntegerLiteral 0x56282186f670 <./lmem.h:20:21> 'int' 1
|   `-BinaryOperator 0x56282186f948 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|     |-ParenExpr 0x56282186f8d8 <./llimits.h:30:19, col:42> 'unsigned long'
|     | `-BinaryOperator 0x56282186f8b0 <col:20, col:41> 'unsigned long' '-'
|     |   |-CStyleCastExpr 0x56282186f850 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|     |   | `-ParenExpr 0x56282186f830 <col:28, col:39> 'size_t':'unsigned long'
|     |   |   `-UnaryOperator 0x56282186f7d0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     |   |     `-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|     |   |       `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
|     |   `-ImplicitCastExpr 0x56282186f898 <col:41> 'unsigned long' <IntegralCast>
|     |     `-IntegerLiteral 0x56282186f878 <col:41> 'int' 2
|     `-ParenExpr 0x56282186f928 <./lmem.h:20:37, col:39> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0x56282186f908 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
|-CallExpr 0x56282186fcd0 <line:21:3, col:42> 'void *'
| |-ImplicitCastExpr 0x56282186fcb8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x56282186f9b8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
| |-ImplicitCastExpr 0x56282186fd18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
| | `-MemberExpr 0x56282186fa20 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
| |   `-ImplicitCastExpr 0x56282186fa08 <col:22> 'LoadState *' <LValueToRValue>
| |     `-DeclRefExpr 0x56282186f9e0 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
| |-ParenExpr 0x56282186fad8 <./lmem.h:21:20, col:22> 'void *'
| | `-ParenExpr 0x56282186fab8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
| |   `-CStyleCastExpr 0x56282186fa90 <col:17, col:24> 'void *' <NullToPointer>
| |     `-IntegerLiteral 0x56282186fa58 <col:24> 'int' 0
| |-BinaryOperator 0x56282186fba0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| | |-ImplicitCastExpr 0x56282186fb88 <col:25, col:28> 'unsigned long' <IntegralCast>
| | | `-ParenExpr 0x56282186fb18 <col:25, col:28> 'int'
| | |   `-IntegerLiteral 0x56282186faf8 <line:31:36> 'int' 0
| | `-ParenExpr 0x56282186fb68 <line:21:30, col:32> 'unsigned long'
| |   `-UnaryExprOrTypeTraitExpr 0x56282186fb48 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
| `-BinaryOperator 0x56282186fc90 <line:21:35, col:41> 'unsigned long' '*'
|   |-ImplicitCastExpr 0x56282186fc78 <col:35, col:37> 'unsigned long' <IntegralCast>
|   | `-ImplicitCastExpr 0x56282186fc60 <col:35, col:37> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x56282186fbf0 <col:35, col:37> 'int' lvalue
|   |     `-DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
|   `-ParenExpr 0x56282186fc40 <./lmem.h:21:39, col:41> 'unsigned long'
|     `-UnaryExprOrTypeTraitExpr 0x56282186fc20 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
`-CallExpr 0x56282186fde8 <line:22:3, col:16> 'void *'
  |-ImplicitCastExpr 0x56282186fdd0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282186fd30 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
  `-ImplicitCastExpr 0x56282186fe18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
    `-MemberExpr 0x56282186fd98 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
      `-ImplicitCastExpr 0x56282186fd80 <col:22> 'LoadState *' <LValueToRValue>
        `-DeclRefExpr 0x56282186fd58 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
([B27.24]) ? [B25.18] : [B26.7]
   2: CStyleCastExpr 0x56282186fee0 <./llimits.h:75:23, col:30> 'TValue *' <BitCast>
`-ParenExpr 0x56282186fec0 <col:26, col:30> 'void *'
  `-ParenExpr 0x56282186fe60 <./lmem.h:20:2, line:22:17> 'void *'
    `-ConditionalOperator 0x56282186fe30 <line:20:3, line:22:16> 'void *'
      |-ParenExpr 0x56282186f998 <line:20:3, col:40> 'int'
      | `-BinaryOperator 0x56282186f970 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
      |   |-ParenExpr 0x56282186f758 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
      |   | `-CStyleCastExpr 0x56282186f730 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
      |   |   `-ParenExpr 0x56282186f710 <col:26, col:30> 'int'
      |   |     `-BinaryOperator 0x56282186f6a8 <./lmem.h:20:17, col:21> 'int' '+'
      |   |       |-ImplicitCastExpr 0x56282186f690 <col:17, col:19> 'int' <LValueToRValue>
      |   |       | `-ParenExpr 0x56282186f650 <col:17, col:19> 'int' lvalue
      |   |       |   `-DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
      |   |       `-IntegerLiteral 0x56282186f670 <./lmem.h:20:21> 'int' 1
      |   `-BinaryOperator 0x56282186f948 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
      |     |-ParenExpr 0x56282186f8d8 <./llimits.h:30:19, col:42> 'unsigned long'
      |     | `-BinaryOperator 0x56282186f8b0 <col:20, col:41> 'unsigned long' '-'
      |     |   |-CStyleCastExpr 0x56282186f850 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
      |     |   | `-ParenExpr 0x56282186f830 <col:28, col:39> 'size_t':'unsigned long'
      |     |   |   `-UnaryOperator 0x56282186f7d0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
      |     |   |     `-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      |     |   |       `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
      |     |   `-ImplicitCastExpr 0x56282186f898 <col:41> 'unsigned long' <IntegralCast>
      |     |     `-IntegerLiteral 0x56282186f878 <col:41> 'int' 2
      |     `-ParenExpr 0x56282186f928 <./lmem.h:20:37, col:39> 'unsigned long'
      |       `-UnaryExprOrTypeTraitExpr 0x56282186f908 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
      |-CallExpr 0x56282186fcd0 <line:21:3, col:42> 'void *'
      | |-ImplicitCastExpr 0x56282186fcb8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x56282186f9b8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
      | |-ImplicitCastExpr 0x56282186fd18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
      | | `-MemberExpr 0x56282186fa20 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
      | |   `-ImplicitCastExpr 0x56282186fa08 <col:22> 'LoadState *' <LValueToRValue>
      | |     `-DeclRefExpr 0x56282186f9e0 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
      | |-ParenExpr 0x56282186fad8 <./lmem.h:21:20, col:22> 'void *'
      | | `-ParenExpr 0x56282186fab8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
      | |   `-CStyleCastExpr 0x56282186fa90 <col:17, col:24> 'void *' <NullToPointer>
      | |     `-IntegerLiteral 0x56282186fa58 <col:24> 'int' 0
      | |-BinaryOperator 0x56282186fba0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
      | | |-ImplicitCastExpr 0x56282186fb88 <col:25, col:28> 'unsigned long' <IntegralCast>
      | | | `-ParenExpr 0x56282186fb18 <col:25, col:28> 'int'
      | | |   `-IntegerLiteral 0x56282186faf8 <line:31:36> 'int' 0
      | | `-ParenExpr 0x56282186fb68 <line:21:30, col:32> 'unsigned long'
      | |   `-UnaryExprOrTypeTraitExpr 0x56282186fb48 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
      | `-BinaryOperator 0x56282186fc90 <line:21:35, col:41> 'unsigned long' '*'
      |   |-ImplicitCastExpr 0x56282186fc78 <col:35, col:37> 'unsigned long' <IntegralCast>
      |   | `-ImplicitCastExpr 0x56282186fc60 <col:35, col:37> 'int' <LValueToRValue>
      |   |   `-ParenExpr 0x56282186fbf0 <col:35, col:37> 'int' lvalue
      |   |     `-DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
      |   `-ParenExpr 0x56282186fc40 <./lmem.h:21:39, col:41> 'unsigned long'
      |     `-UnaryExprOrTypeTraitExpr 0x56282186fc20 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
      `-CallExpr 0x56282186fde8 <line:22:3, col:16> 'void *'
        |-ImplicitCastExpr 0x56282186fdd0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x56282186fd30 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
        `-ImplicitCastExpr 0x56282186fe18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
          `-MemberExpr 0x56282186fd98 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
            `-ImplicitCastExpr 0x56282186fd80 <col:22> 'LoadState *' <LValueToRValue>
              `-DeclRefExpr 0x56282186fd58 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
(TValue *)(([B24.1])) (CStyleCastExpr, BitCast, TValue *)
   3: DeclRefExpr 0x56282186f5b0 <lundump.c:104:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x56282186f5d8 <lundump.c:104:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282186f5b0 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B24.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x56282186f5f0 <lundump.c:104:2, col:5> 'TValue *' lvalue ->k 0x562821832418
`-ImplicitCastExpr 0x56282186f5d8 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282186f5b0 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B24.4]->k
   6: BinaryOperator 0x56282186ff28 <lundump.c:104:2, ./llimits.h:75:31> 'TValue *' '='
|-MemberExpr 0x56282186f5f0 <lundump.c:104:2, col:5> 'TValue *' lvalue ->k 0x562821832418
| `-ImplicitCastExpr 0x56282186f5d8 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282186f5b0 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ParenExpr 0x56282186ff08 <./llimits.h:75:22, col:31> 'TValue *'
  `-CStyleCastExpr 0x56282186fee0 <col:23, col:30> 'TValue *' <BitCast>
    `-ParenExpr 0x56282186fec0 <col:26, col:30> 'void *'
      `-ParenExpr 0x56282186fe60 <./lmem.h:20:2, line:22:17> 'void *'
        `-ConditionalOperator 0x56282186fe30 <line:20:3, line:22:16> 'void *'
          |-ParenExpr 0x56282186f998 <line:20:3, col:40> 'int'
          | `-BinaryOperator 0x56282186f970 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
          |   |-ParenExpr 0x56282186f758 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
          |   | `-CStyleCastExpr 0x56282186f730 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
          |   |   `-ParenExpr 0x56282186f710 <col:26, col:30> 'int'
          |   |     `-BinaryOperator 0x56282186f6a8 <./lmem.h:20:17, col:21> 'int' '+'
          |   |       |-ImplicitCastExpr 0x56282186f690 <col:17, col:19> 'int' <LValueToRValue>
          |   |       | `-ParenExpr 0x56282186f650 <col:17, col:19> 'int' lvalue
          |   |       |   `-DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
          |   |       `-IntegerLiteral 0x56282186f670 <./lmem.h:20:21> 'int' 1
          |   `-BinaryOperator 0x56282186f948 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
          |     |-ParenExpr 0x56282186f8d8 <./llimits.h:30:19, col:42> 'unsigned long'
          |     | `-BinaryOperator 0x56282186f8b0 <col:20, col:41> 'unsigned long' '-'
          |     |   |-CStyleCastExpr 0x56282186f850 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
          |     |   | `-ParenExpr 0x56282186f830 <col:28, col:39> 'size_t':'unsigned long'
          |     |   |   `-UnaryOperator 0x56282186f7d0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
          |     |   |     `-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
          |     |   |       `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
          |     |   `-ImplicitCastExpr 0x56282186f898 <col:41> 'unsigned long' <IntegralCast>
          |     |     `-IntegerLiteral 0x56282186f878 <col:41> 'int' 2
          |     `-ParenExpr 0x56282186f928 <./lmem.h:20:37, col:39> 'unsigned long'
          |       `-UnaryExprOrTypeTraitExpr 0x56282186f908 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
          |-CallExpr 0x56282186fcd0 <line:21:3, col:42> 'void *'
          | |-ImplicitCastExpr 0x56282186fcb8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x56282186f9b8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
          | |-ImplicitCastExpr 0x56282186fd18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
          | | `-MemberExpr 0x56282186fa20 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
          | |   `-ImplicitCastExpr 0x56282186fa08 <col:22> 'LoadState *' <LValueToRValue>
          | |     `-DeclRefExpr 0x56282186f9e0 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
          | |-ParenExpr 0x56282186fad8 <./lmem.h:21:20, col:22> 'void *'
          | | `-ParenExpr 0x56282186fab8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
          | |   `-CStyleCastExpr 0x56282186fa90 <col:17, col:24> 'void *' <NullToPointer>
          | |     `-IntegerLiteral 0x56282186fa58 <col:24> 'int' 0
          | |-BinaryOperator 0x56282186fba0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
          | | |-ImplicitCastExpr 0x56282186fb88 <col:25, col:28> 'unsigned long' <IntegralCast>
          | | | `-ParenExpr 0x56282186fb18 <col:25, col:28> 'int'
          | | |   `-IntegerLiteral 0x56282186faf8 <line:31:36> 'int' 0
          | | `-ParenExpr 0x56282186fb68 <line:21:30, col:32> 'unsigned long'
          | |   `-UnaryExprOrTypeTraitExpr 0x56282186fb48 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
          | `-BinaryOperator 0x56282186fc90 <line:21:35, col:41> 'unsigned long' '*'
          |   |-ImplicitCastExpr 0x56282186fc78 <col:35, col:37> 'unsigned long' <IntegralCast>
          |   | `-ImplicitCastExpr 0x56282186fc60 <col:35, col:37> 'int' <LValueToRValue>
          |   |   `-ParenExpr 0x56282186fbf0 <col:35, col:37> 'int' lvalue
          |   |     `-DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
          |   `-ParenExpr 0x56282186fc40 <./lmem.h:21:39, col:41> 'unsigned long'
          |     `-UnaryExprOrTypeTraitExpr 0x56282186fc20 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
          `-CallExpr 0x56282186fde8 <line:22:3, col:16> 'void *'
            |-ImplicitCastExpr 0x56282186fdd0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x56282186fd30 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
            `-ImplicitCastExpr 0x56282186fe18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
              `-MemberExpr 0x56282186fd98 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
                `-ImplicitCastExpr 0x56282186fd80 <col:22> 'LoadState *' <LValueToRValue>
                  `-DeclRefExpr 0x56282186fd58 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B24.5] = ([B24.2])
   7: DeclRefExpr 0x56282186ffc8 <lundump.c:105:11> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   8: ImplicitCastExpr 0x56282186fff0 <lundump.c:105:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x56282186ffc8 <col:11> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B24.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x56282186ff50 <lundump.c:105:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
f
  10: ImplicitCastExpr 0x56282186ff78 <lundump.c:105:2> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x56282186ff50 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B24.9] (ImplicitCastExpr, LValueToRValue, Proto *)
  11: MemberExpr 0x56282186ff90 <lundump.c:105:2, col:5> 'int' lvalue ->sizek 0x562821832c68
`-ImplicitCastExpr 0x56282186ff78 <col:2> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x56282186ff50 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
[B24.10]->sizek
  12: BinaryOperator 0x562821870020 <lundump.c:105:2, col:11> 'int' '='
|-MemberExpr 0x56282186ff90 <col:2, col:5> 'int' lvalue ->sizek 0x562821832c68
| `-ImplicitCastExpr 0x56282186ff78 <col:2> 'Proto *' <LValueToRValue>
|   `-DeclRefExpr 0x56282186ff50 <col:2> 'Proto *' lvalue ParmVar 0x56282186f250 'f' 'Proto *'
`-ImplicitCastExpr 0x56282186fff0 <col:11> 'int' <LValueToRValue>
  `-DeclRefExpr 0x56282186ffc8 <col:11> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B24.11] = [B24.8]
  13: IntegerLiteral 0x562821870070 <lundump.c:106:9> 'int' 0
0
  14: DeclRefExpr 0x562821870048 <lundump.c:106:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
i
  15: BinaryOperator 0x562821870090 <lundump.c:106:7, col:9> 'int' '='
|-DeclRefExpr 0x562821870048 <col:7> 'int' lvalue Var 0x56282186f3a8 'i' 'int'
`-IntegerLiteral 0x562821870070 <col:9> 'int' 0
[B24.14] = [B24.13]
   Preds (2): B25 B26
   Succs (1): B23

 [B25]
   1: DeclRefExpr 0x56282186f9b8 <./lmem.h:21:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
luaM_realloc_
   2: ImplicitCastExpr 0x56282186fcb8 <./lmem.h:21:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282186f9b8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
[B25.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, size_t, size_t))
   3: DeclRefExpr 0x56282186f9e0 <lundump.c:104:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x56282186fa08 <lundump.c:104:22> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186f9e0 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B25.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: MemberExpr 0x56282186fa20 <lundump.c:104:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x56282186fa08 <col:22> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282186f9e0 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B25.4]->L
   6: ImplicitCastExpr 0x56282186fd18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x56282186fa20 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x56282186fa08 <col:22> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282186f9e0 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B25.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x56282186fa58 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x56282186fa90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56282186fa58 <col:24> 'int' 0
(void *)[B25.7] (CStyleCastExpr, NullToPointer, void *)
   9: IntegerLiteral 0x56282186faf8 <./lmem.h:31:36> 'int' 0
0
  10: ImplicitCastExpr 0x56282186fb88 <./lmem.h:21:25, col:28> 'unsigned long' <IntegralCast>
`-ParenExpr 0x56282186fb18 <col:25, col:28> 'int'
  `-IntegerLiteral 0x56282186faf8 <line:31:36> 'int' 0
([B25.9]) (ImplicitCastExpr, IntegralCast, unsigned long)
  11: UnaryExprOrTypeTraitExpr 0x56282186fb48 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  12: BinaryOperator 0x56282186fba0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
|-ImplicitCastExpr 0x56282186fb88 <col:25, col:28> 'unsigned long' <IntegralCast>
| `-ParenExpr 0x56282186fb18 <col:25, col:28> 'int'
|   `-IntegerLiteral 0x56282186faf8 <line:31:36> 'int' 0
`-ParenExpr 0x56282186fb68 <line:21:30, col:32> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x56282186fb48 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B25.10] * ([B25.11])
  13: DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
  14: ImplicitCastExpr 0x56282186fc60 <./lmem.h:21:35, col:37> 'int' <LValueToRValue>
`-ParenExpr 0x56282186fbf0 <col:35, col:37> 'int' lvalue
  `-DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
([B25.13]) (ImplicitCastExpr, LValueToRValue, int)
  15: ImplicitCastExpr 0x56282186fc78 <./lmem.h:21:35, col:37> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x56282186fc60 <col:35, col:37> 'int' <LValueToRValue>
  `-ParenExpr 0x56282186fbf0 <col:35, col:37> 'int' lvalue
    `-DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
[B25.14] (ImplicitCastExpr, IntegralCast, unsigned long)
  16: UnaryExprOrTypeTraitExpr 0x56282186fc20 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  17: BinaryOperator 0x56282186fc90 <./lmem.h:21:35, col:41> 'unsigned long' '*'
|-ImplicitCastExpr 0x56282186fc78 <col:35, col:37> 'unsigned long' <IntegralCast>
| `-ImplicitCastExpr 0x56282186fc60 <col:35, col:37> 'int' <LValueToRValue>
|   `-ParenExpr 0x56282186fbf0 <col:35, col:37> 'int' lvalue
|     `-DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
`-ParenExpr 0x56282186fc40 <./lmem.h:21:39, col:41> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x56282186fc20 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B25.15] * ([B25.16])
  18: CallExpr 0x56282186fcd0 <./lmem.h:21:3, col:42> 'void *'
|-ImplicitCastExpr 0x56282186fcb8 <col:3> 'void *(*)(lua_State *, void *, size_t, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282186f9b8 <col:3> 'void *(lua_State *, void *, size_t, size_t)' Function 0x56282183fb18 'luaM_realloc_' 'void *(lua_State *, void *, size_t, size_t)'
|-ImplicitCastExpr 0x56282186fd18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
| `-MemberExpr 0x56282186fa20 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
|   `-ImplicitCastExpr 0x56282186fa08 <col:22> 'LoadState *' <LValueToRValue>
|     `-DeclRefExpr 0x56282186f9e0 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
|-ParenExpr 0x56282186fad8 <./lmem.h:21:20, col:22> 'void *'
| `-ParenExpr 0x56282186fab8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
|   `-CStyleCastExpr 0x56282186fa90 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x56282186fa58 <col:24> 'int' 0
|-BinaryOperator 0x56282186fba0 <./lmem.h:21:25, col:32> 'unsigned long' '*'
| |-ImplicitCastExpr 0x56282186fb88 <col:25, col:28> 'unsigned long' <IntegralCast>
| | `-ParenExpr 0x56282186fb18 <col:25, col:28> 'int'
| |   `-IntegerLiteral 0x56282186faf8 <line:31:36> 'int' 0
| `-ParenExpr 0x56282186fb68 <line:21:30, col:32> 'unsigned long'
|   `-UnaryExprOrTypeTraitExpr 0x56282186fb48 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
`-BinaryOperator 0x56282186fc90 <line:21:35, col:41> 'unsigned long' '*'
  |-ImplicitCastExpr 0x56282186fc78 <col:35, col:37> 'unsigned long' <IntegralCast>
  | `-ImplicitCastExpr 0x56282186fc60 <col:35, col:37> 'int' <LValueToRValue>
  |   `-ParenExpr 0x56282186fbf0 <col:35, col:37> 'int' lvalue
  |     `-DeclRefExpr 0x56282186fbc8 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
  `-ParenExpr 0x56282186fc40 <./lmem.h:21:39, col:41> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x56282186fc20 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
[B25.2]([B25.6], (([B25.8])), [B25.12], [B25.17])
   Preds (1): B27
   Succs (1): B24

 [B26]
   1: DeclRefExpr 0x56282186fd30 <./lmem.h:22:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
luaM_toobig
   2: ImplicitCastExpr 0x56282186fdd0 <./lmem.h:22:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282186fd30 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
[B26.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *))
   3: DeclRefExpr 0x56282186fd58 <lundump.c:104:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   4: ImplicitCastExpr 0x56282186fd80 <lundump.c:104:22> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186fd58 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B26.3] (ImplicitCastExpr, LValueToRValue, LoadState *)
   5: MemberExpr 0x56282186fd98 <lundump.c:104:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
`-ImplicitCastExpr 0x56282186fd80 <col:22> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282186fd58 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B26.4]->L
   6: ImplicitCastExpr 0x56282186fe18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x56282186fd98 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
  `-ImplicitCastExpr 0x56282186fd80 <col:22> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282186fd58 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B26.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: CallExpr 0x56282186fde8 <./lmem.h:22:3, col:16> 'void *'
|-ImplicitCastExpr 0x56282186fdd0 <col:3> 'void *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282186fd30 <col:3> 'void *(lua_State *)' Function 0x56282183fd68 'luaM_toobig' 'void *(lua_State *)'
`-ImplicitCastExpr 0x56282186fe18 <lundump.c:104:22, col:25> 'lua_State *' <LValueToRValue>
  `-MemberExpr 0x56282186fd98 <col:22, col:25> 'lua_State *' lvalue ->L 0x562821866780
    `-ImplicitCastExpr 0x56282186fd80 <col:22> 'LoadState *' <LValueToRValue>
      `-DeclRefExpr 0x56282186fd58 <col:22> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B26.2]([B26.6])
   Preds (1): B27
   Succs (1): B24

 [B27]
   1: DeclStmt 0x56282188a768 <lundump.c:102:6>col:6
`-VarDecl 0x56282186f3a8 <col:2, col:6> col:6 used i 'int'
int i;
   2: DeclStmt 0x56282188a750 <lundump.c:102:8>col:8
`-VarDecl 0x56282186f420 <col:2, col:8> col:8 used n 'int'
int n;
   3: DeclRefExpr 0x56282186f4d8 <lundump.c:103:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
LoadInt
   4: ImplicitCastExpr 0x56282186f528 <lundump.c:103:4> 'int (*)(LoadState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x56282186f4d8 <col:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
[B27.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(LoadState *))
   5: DeclRefExpr 0x56282186f500 <lundump.c:103:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
S
   6: ImplicitCastExpr 0x56282186f570 <lundump.c:103:12> 'LoadState *' <LValueToRValue>
`-DeclRefExpr 0x56282186f500 <col:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B27.5] (ImplicitCastExpr, LValueToRValue, LoadState *)
   7: CallExpr 0x56282186f540 <lundump.c:103:4, col:13> 'int'
|-ImplicitCastExpr 0x56282186f528 <col:4> 'int (*)(LoadState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x56282186f4d8 <col:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
`-ImplicitCastExpr 0x56282186f570 <col:12> 'LoadState *' <LValueToRValue>
  `-DeclRefExpr 0x56282186f500 <col:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B27.4]([B27.6])
   8: DeclRefExpr 0x56282186f4b0 <lundump.c:103:2> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
   9: BinaryOperator 0x56282186f588 <lundump.c:103:2, col:13> 'int' '='
|-DeclRefExpr 0x56282186f4b0 <col:2> 'int' lvalue Var 0x56282186f420 'n' 'int'
`-CallExpr 0x56282186f540 <col:4, col:13> 'int'
  |-ImplicitCastExpr 0x56282186f528 <col:4> 'int (*)(LoadState *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x56282186f4d8 <col:4> 'int (LoadState *)' Function 0x56282186ab38 'LoadInt' 'int (LoadState *)'
  `-ImplicitCastExpr 0x56282186f570 <col:12> 'LoadState *' <LValueToRValue>
    `-DeclRefExpr 0x56282186f500 <col:12> 'LoadState *' lvalue ParmVar 0x56282186f1e0 'S' 'LoadState *'
[B27.8] = [B27.7]
  10: DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
n
  11: ImplicitCastExpr 0x56282186f690 <./lmem.h:20:17, col:19> 'int' <LValueToRValue>
`-ParenExpr 0x56282186f650 <col:17, col:19> 'int' lvalue
  `-DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
([B27.10]) (ImplicitCastExpr, LValueToRValue, int)
  12: IntegerLiteral 0x56282186f670 <./lmem.h:20:21> 'int' 1
1
  13: BinaryOperator 0x56282186f6a8 <./lmem.h:20:17, col:21> 'int' '+'
|-ImplicitCastExpr 0x56282186f690 <col:17, col:19> 'int' <LValueToRValue>
| `-ParenExpr 0x56282186f650 <col:17, col:19> 'int' lvalue
|   `-DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
`-IntegerLiteral 0x56282186f670 <./lmem.h:20:21> 'int' 1
[B27.11] + [B27.12]
  14: CStyleCastExpr 0x56282186f730 <./llimits.h:75:23, col:30> 'size_t':'unsigned long' <IntegralCast>
`-ParenExpr 0x56282186f710 <col:26, col:30> 'int'
  `-BinaryOperator 0x56282186f6a8 <./lmem.h:20:17, col:21> 'int' '+'
    |-ImplicitCastExpr 0x56282186f690 <col:17, col:19> 'int' <LValueToRValue>
    | `-ParenExpr 0x56282186f650 <col:17, col:19> 'int' lvalue
    |   `-DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
    `-IntegerLiteral 0x56282186f670 <./lmem.h:20:21> 'int' 1
(size_t)([B27.13]) (CStyleCastExpr, IntegralCast, size_t)
  15: IntegerLiteral 0x56282186f778 <./llimits.h:30:38> 'int' 0
0
  16: CStyleCastExpr 0x56282186f7a8 <./llimits.h:30:30, col:38> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
(size_t)[B27.15] (CStyleCastExpr, IntegralCast, size_t)
  17: UnaryOperator 0x56282186f7d0 <./llimits.h:30:29, col:38> 'size_t':'unsigned long' prefix '~'
`-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
~[B27.16]
  18: CStyleCastExpr 0x56282186f850 <./llimits.h:30:20, col:39> 'size_t':'unsigned long' <NoOp>
`-ParenExpr 0x56282186f830 <col:28, col:39> 'size_t':'unsigned long'
  `-UnaryOperator 0x56282186f7d0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
    `-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
(size_t)([B27.17]) (CStyleCastExpr, NoOp, size_t)
  19: IntegerLiteral 0x56282186f878 <./llimits.h:30:41> 'int' 2
2
  20: ImplicitCastExpr 0x56282186f898 <./llimits.h:30:41> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x56282186f878 <col:41> 'int' 2
[B27.19] (ImplicitCastExpr, IntegralCast, unsigned long)
  21: BinaryOperator 0x56282186f8b0 <./llimits.h:30:20, col:41> 'unsigned long' '-'
|-CStyleCastExpr 0x56282186f850 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
| `-ParenExpr 0x56282186f830 <col:28, col:39> 'size_t':'unsigned long'
|   `-UnaryOperator 0x56282186f7d0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|     `-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
`-ImplicitCastExpr 0x56282186f898 <col:41> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x56282186f878 <col:41> 'int' 2
[B27.18] - [B27.20]
  22: UnaryExprOrTypeTraitExpr 0x56282186f908 <./lmem.h:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
sizeof(TValue)
  23: BinaryOperator 0x56282186f948 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
|-ParenExpr 0x56282186f8d8 <./llimits.h:30:19, col:42> 'unsigned long'
| `-BinaryOperator 0x56282186f8b0 <col:20, col:41> 'unsigned long' '-'
|   |-CStyleCastExpr 0x56282186f850 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
|   | `-ParenExpr 0x56282186f830 <col:28, col:39> 'size_t':'unsigned long'
|   |   `-UnaryOperator 0x56282186f7d0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
|   |     `-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
|   `-ImplicitCastExpr 0x56282186f898 <col:41> 'unsigned long' <IntegralCast>
|     `-IntegerLiteral 0x56282186f878 <col:41> 'int' 2
`-ParenExpr 0x56282186f928 <./lmem.h:20:37, col:39> 'unsigned long'
  `-UnaryExprOrTypeTraitExpr 0x56282186f908 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B27.21]) / ([B27.22])
  24: BinaryOperator 0x56282186f970 <./llimits.h:75:22, ./lmem.h:20:39> 'int' '<='
|-ParenExpr 0x56282186f758 <./llimits.h:75:22, col:31> 'size_t':'unsigned long'
| `-CStyleCastExpr 0x56282186f730 <col:23, col:30> 'size_t':'unsigned long' <IntegralCast>
|   `-ParenExpr 0x56282186f710 <col:26, col:30> 'int'
|     `-BinaryOperator 0x56282186f6a8 <./lmem.h:20:17, col:21> 'int' '+'
|       |-ImplicitCastExpr 0x56282186f690 <col:17, col:19> 'int' <LValueToRValue>
|       | `-ParenExpr 0x56282186f650 <col:17, col:19> 'int' lvalue
|       |   `-DeclRefExpr 0x56282186f628 <lundump.c:104:27> 'int' lvalue Var 0x56282186f420 'n' 'int'
|       `-IntegerLiteral 0x56282186f670 <./lmem.h:20:21> 'int' 1
`-BinaryOperator 0x56282186f948 <./llimits.h:30:19, ./lmem.h:20:39> 'unsigned long' '/'
  |-ParenExpr 0x56282186f8d8 <./llimits.h:30:19, col:42> 'unsigned long'
  | `-BinaryOperator 0x56282186f8b0 <col:20, col:41> 'unsigned long' '-'
  |   |-CStyleCastExpr 0x56282186f850 <col:20, col:39> 'size_t':'unsigned long' <NoOp>
  |   | `-ParenExpr 0x56282186f830 <col:28, col:39> 'size_t':'unsigned long'
  |   |   `-UnaryOperator 0x56282186f7d0 <col:29, col:38> 'size_t':'unsigned long' prefix '~'
  |   |     `-CStyleCastExpr 0x56282186f7a8 <col:30, col:38> 'size_t':'unsigned long' <IntegralCast>
  |   |       `-IntegerLiteral 0x56282186f778 <col:38> 'int' 0
  |   `-ImplicitCastExpr 0x56282186f898 <col:41> 'unsigned long' <IntegralCast>
  |     `-IntegerLiteral 0x56282186f878 <col:41> 'int' 2
  `-ParenExpr 0x56282186f928 <./lmem.h:20:37, col:39> 'unsigned long'
    `-UnaryExprOrTypeTraitExpr 0x56282186f908 <line:31:42, col:50> 'unsigned long' sizeof 'TValue':'struct lua_TValue'
([B27.14]) <= [B27.23]
   T: ([B27.24]) ? ... : ...
   Preds (1): B28
   Succs (2): B25 B26

 [B0 (EXIT)]
   Preds (1): B3
