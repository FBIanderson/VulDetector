static int io_fclose(lua_State *L)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5643dfe5e6b0 <liolib.c:54:30> 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)' Function 0x5643dfe4e4e0 'luaL_checkudata' 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)'
luaL_checkudata
   2: ImplicitCastExpr 0x5643dfe5e750 <liolib.c:54:30> 'void *(*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe5e6b0 <col:30> 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)' Function 0x5643dfe4e4e0 'luaL_checkudata' 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x5643dfe5e6d8 <liolib.c:120:22> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5643dfe5e7a8 <liolib.c:120:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe5e6d8 <col:22> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x5643dfe5e700 <liolib.c:54:49> 'int' 1
1
   6: StringLiteral 0x5643dfe5e720 <./lualib.h:15:25> 'char [6]' lvalue "FILE*"
"FILE*"
   7: ImplicitCastExpr 0x5643dfe5e7c0 <./lualib.h:15:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5643dfe5e720 <col:25> 'char [6]' lvalue "FILE*"
[B1.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x5643dfe5e7d8 <./lualib.h:15:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5643dfe5e7c0 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5643dfe5e720 <col:25> 'char [6]' lvalue "FILE*"
[B1.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x5643dfe5e768 <liolib.c:54:30, col:66> 'void *'
|-ImplicitCastExpr 0x5643dfe5e750 <col:30> 'void *(*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe5e6b0 <col:30> 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)' Function 0x5643dfe4e4e0 'luaL_checkudata' 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)'
|-ImplicitCastExpr 0x5643dfe5e7a8 <line:120:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe5e6d8 <col:22> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
|-IntegerLiteral 0x5643dfe5e700 <line:54:49> 'int' 1
`-ImplicitCastExpr 0x5643dfe5e7d8 <./lualib.h:15:25> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5643dfe5e7c0 <col:25> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5643dfe5e720 <col:25> 'char [6]' lvalue "FILE*"
[B1.2]([B1.4], [B1.5], [B1.8])
  10: CStyleCastExpr 0x5643dfe5e808 <liolib.c:54:21, col:66> 'FILE **' <BitCast>
`-CallExpr 0x5643dfe5e768 <col:30, col:66> 'void *'
  |-ImplicitCastExpr 0x5643dfe5e750 <col:30> 'void *(*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5643dfe5e6b0 <col:30> 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)' Function 0x5643dfe4e4e0 'luaL_checkudata' 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x5643dfe5e7a8 <line:120:22> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5643dfe5e6d8 <col:22> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
  |-IntegerLiteral 0x5643dfe5e700 <line:54:49> 'int' 1
  `-ImplicitCastExpr 0x5643dfe5e7d8 <./lualib.h:15:25> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x5643dfe5e7c0 <col:25> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x5643dfe5e720 <col:25> 'char [6]' lvalue "FILE*"
(FILE **)[B1.9] (CStyleCastExpr, BitCast, FILE **)
  11: DeclStmt 0x5643dfe5e850 <liolib.c:120:3, col:24>col:10
`-VarDecl 0x5643dfe5e650 <col:3, line:54:67> line:120:10 used p 'FILE **' cinit
  `-ParenExpr 0x5643dfe5e830 <line:54:20, col:67> 'FILE **'
    `-CStyleCastExpr 0x5643dfe5e808 <col:21, col:66> 'FILE **' <BitCast>
      `-CallExpr 0x5643dfe5e768 <col:30, col:66> 'void *'
        |-ImplicitCastExpr 0x5643dfe5e750 <col:30> 'void *(*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5643dfe5e6b0 <col:30> 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)' Function 0x5643dfe4e4e0 'luaL_checkudata' 'void *(lua_State *, int, const char *)':'void *(lua_State *, int, const char *)'
        |-ImplicitCastExpr 0x5643dfe5e7a8 <line:120:22> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x5643dfe5e6d8 <col:22> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
        |-IntegerLiteral 0x5643dfe5e700 <line:54:49> 'int' 1
        `-ImplicitCastExpr 0x5643dfe5e7d8 <./lualib.h:15:25> 'const char *' <BitCast>
          `-ImplicitCastExpr 0x5643dfe5e7c0 <col:25> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x5643dfe5e720 <col:25> 'char [6]' lvalue "FILE*"
FILE **p = ((FILE **)luaL_checkudata(L, 1, "FILE*"));
  12: DeclRefExpr 0x5643dfe5e8e0 <liolib.c:121:13> 'int (FILE *)' Function 0x5643dfd820c8 'fclose' 'int (FILE *)'
fclose
  13: ImplicitCastExpr 0x5643dfe5e968 <liolib.c:121:13> 'int (*)(FILE *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe5e8e0 <col:13> 'int (FILE *)' Function 0x5643dfd820c8 'fclose' 'int (FILE *)'
[B1.12] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FILE *))
  14: DeclRefExpr 0x5643dfe5e908 <liolib.c:121:21> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
p
  15: ImplicitCastExpr 0x5643dfe5e930 <liolib.c:121:21> 'FILE **' <LValueToRValue>
`-DeclRefExpr 0x5643dfe5e908 <col:21> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
[B1.14] (ImplicitCastExpr, LValueToRValue, FILE **)
  16: UnaryOperator 0x5643dfe5e948 <liolib.c:121:20, col:21> 'FILE *' lvalue prefix '*'
`-ImplicitCastExpr 0x5643dfe5e930 <col:21> 'FILE **' <LValueToRValue>
  `-DeclRefExpr 0x5643dfe5e908 <col:21> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
*[B1.15]
  17: ImplicitCastExpr 0x5643dfe5e9b0 <liolib.c:121:20, col:21> 'FILE *' <LValueToRValue>
`-UnaryOperator 0x5643dfe5e948 <col:20, col:21> 'FILE *' lvalue prefix '*'
  `-ImplicitCastExpr 0x5643dfe5e930 <col:21> 'FILE **' <LValueToRValue>
    `-DeclRefExpr 0x5643dfe5e908 <col:21> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
[B1.16] (ImplicitCastExpr, LValueToRValue, FILE *)
  18: CallExpr 0x5643dfe5e980 <liolib.c:121:13, col:22> 'int'
|-ImplicitCastExpr 0x5643dfe5e968 <col:13> 'int (*)(FILE *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe5e8e0 <col:13> 'int (FILE *)' Function 0x5643dfd820c8 'fclose' 'int (FILE *)'
`-ImplicitCastExpr 0x5643dfe5e9b0 <col:20, col:21> 'FILE *' <LValueToRValue>
  `-UnaryOperator 0x5643dfe5e948 <col:20, col:21> 'FILE *' lvalue prefix '*'
    `-ImplicitCastExpr 0x5643dfe5e930 <col:21> 'FILE **' <LValueToRValue>
      `-DeclRefExpr 0x5643dfe5e908 <col:21> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
[B1.13]([B1.17])
  19: IntegerLiteral 0x5643dfe5e9c8 <liolib.c:121:27> 'int' 0
0
  20: BinaryOperator 0x5643dfe5e9e8 <liolib.c:121:13, col:27> 'int' '=='
|-CallExpr 0x5643dfe5e980 <col:13, col:22> 'int'
| |-ImplicitCastExpr 0x5643dfe5e968 <col:13> 'int (*)(FILE *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5643dfe5e8e0 <col:13> 'int (FILE *)' Function 0x5643dfd820c8 'fclose' 'int (FILE *)'
| `-ImplicitCastExpr 0x5643dfe5e9b0 <col:20, col:21> 'FILE *' <LValueToRValue>
|   `-UnaryOperator 0x5643dfe5e948 <col:20, col:21> 'FILE *' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5643dfe5e930 <col:21> 'FILE **' <LValueToRValue>
|       `-DeclRefExpr 0x5643dfe5e908 <col:21> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
`-IntegerLiteral 0x5643dfe5e9c8 <col:27> 'int' 0
[B1.18] == [B1.19]
  21: DeclStmt 0x5643dfe5ea30 <liolib.c:121:3, col:29>col:7
`-VarDecl 0x5643dfe5e880 <col:3, col:28> col:7 used ok 'int' cinit
  `-ParenExpr 0x5643dfe5ea10 <col:12, col:28> 'int'
    `-BinaryOperator 0x5643dfe5e9e8 <col:13, col:27> 'int' '=='
      |-CallExpr 0x5643dfe5e980 <col:13, col:22> 'int'
      | |-ImplicitCastExpr 0x5643dfe5e968 <col:13> 'int (*)(FILE *)' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x5643dfe5e8e0 <col:13> 'int (FILE *)' Function 0x5643dfd820c8 'fclose' 'int (FILE *)'
      | `-ImplicitCastExpr 0x5643dfe5e9b0 <col:20, col:21> 'FILE *' <LValueToRValue>
      |   `-UnaryOperator 0x5643dfe5e948 <col:20, col:21> 'FILE *' lvalue prefix '*'
      |     `-ImplicitCastExpr 0x5643dfe5e930 <col:21> 'FILE **' <LValueToRValue>
      |       `-DeclRefExpr 0x5643dfe5e908 <col:21> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
      `-IntegerLiteral 0x5643dfe5e9c8 <col:27> 'int' 0
int ok = (fclose(*p) == 0);
  22: IntegerLiteral 0x5643dfe5eaa8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  23: CStyleCastExpr 0x5643dfe5eae0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5643dfe5eaa8 <col:24> 'int' 0
(void *)[B1.22] (CStyleCastExpr, NullToPointer, void *)
  24: ImplicitCastExpr 0x5643dfe5eb28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'FILE *' <NullToPointer>
`-ParenExpr 0x5643dfe5eb08 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5643dfe5eae0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5643dfe5eaa8 <col:24> 'int' 0
([B1.23]) (ImplicitCastExpr, NullToPointer, FILE *)
  25: DeclRefExpr 0x5643dfe5ea48 <liolib.c:122:4> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
p
  26: ImplicitCastExpr 0x5643dfe5ea70 <liolib.c:122:4> 'FILE **' <LValueToRValue>
`-DeclRefExpr 0x5643dfe5ea48 <col:4> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
[B1.25] (ImplicitCastExpr, LValueToRValue, FILE **)
  27: UnaryOperator 0x5643dfe5ea88 <liolib.c:122:3, col:4> 'FILE *' lvalue prefix '*'
`-ImplicitCastExpr 0x5643dfe5ea70 <col:4> 'FILE **' <LValueToRValue>
  `-DeclRefExpr 0x5643dfe5ea48 <col:4> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
*[B1.26]
  28: BinaryOperator 0x5643dfe5eb40 <liolib.c:122:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'FILE *' '='
|-UnaryOperator 0x5643dfe5ea88 <liolib.c:122:3, col:4> 'FILE *' lvalue prefix '*'
| `-ImplicitCastExpr 0x5643dfe5ea70 <col:4> 'FILE **' <LValueToRValue>
|   `-DeclRefExpr 0x5643dfe5ea48 <col:4> 'FILE **' lvalue Var 0x5643dfe5e650 'p' 'FILE **'
`-ImplicitCastExpr 0x5643dfe5eb28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'FILE *' <NullToPointer>
  `-ParenExpr 0x5643dfe5eb08 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5643dfe5eae0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5643dfe5eaa8 <col:24> 'int' 0
[B1.27] = [B1.24]
  29: DeclRefExpr 0x5643dfe5eb68 <liolib.c:123:10> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
pushresult
  30: ImplicitCastExpr 0x5643dfe5ec60 <liolib.c:123:10> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5643dfe5eb68 <col:10> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
[B1.29] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
  31: DeclRefExpr 0x5643dfe5eb90 <liolib.c:123:21> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
L
  32: ImplicitCastExpr 0x5643dfe5ecb8 <liolib.c:123:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5643dfe5eb90 <col:21> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
[B1.31] (ImplicitCastExpr, LValueToRValue, lua_State *)
  33: DeclRefExpr 0x5643dfe5ebb8 <liolib.c:123:24> 'int' lvalue Var 0x5643dfe5e880 'ok' 'int'
ok
  34: ImplicitCastExpr 0x5643dfe5ecd0 <liolib.c:123:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x5643dfe5ebb8 <col:24> 'int' lvalue Var 0x5643dfe5e880 'ok' 'int'
[B1.33] (ImplicitCastExpr, LValueToRValue, int)
  35: IntegerLiteral 0x5643dfe5ebe0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  36: CStyleCastExpr 0x5643dfe5ec18 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5643dfe5ebe0 <col:24> 'int' 0
(void *)[B1.35] (CStyleCastExpr, NullToPointer, void *)
  37: ImplicitCastExpr 0x5643dfe5ece8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
`-ParenExpr 0x5643dfe5ec40 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5643dfe5ec18 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5643dfe5ebe0 <col:24> 'int' 0
([B1.36]) (ImplicitCastExpr, NullToPointer, const char *)
  38: CallExpr 0x5643dfe5ec78 <liolib.c:123:10, col:32> 'int'
|-ImplicitCastExpr 0x5643dfe5ec60 <col:10> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5643dfe5eb68 <col:10> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x5643dfe5ecb8 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe5eb90 <col:21> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
|-ImplicitCastExpr 0x5643dfe5ecd0 <col:24> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5643dfe5ebb8 <col:24> 'int' lvalue Var 0x5643dfe5e880 'ok' 'int'
`-ImplicitCastExpr 0x5643dfe5ece8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
  `-ParenExpr 0x5643dfe5ec40 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5643dfe5ec18 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5643dfe5ebe0 <col:24> 'int' 0
[B1.30]([B1.32], [B1.34], [B1.37])
  39: ReturnStmt 0x5643dfe5ed00 <liolib.c:123:3, col:32>
`-CallExpr 0x5643dfe5ec78 <col:10, col:32> 'int'
  |-ImplicitCastExpr 0x5643dfe5ec60 <col:10> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5643dfe5eb68 <col:10> 'int (lua_State *, int, const char *)' Function 0x5643dfe58608 'pushresult' 'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x5643dfe5ecb8 <col:21> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5643dfe5eb90 <col:21> 'lua_State *' lvalue ParmVar 0x5643dfe5e500 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5643dfe5ecd0 <col:24> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5643dfe5ebb8 <col:24> 'int' lvalue Var 0x5643dfe5e880 'ok' 'int'
  `-ImplicitCastExpr 0x5643dfe5ece8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *' <NullToPointer>
    `-ParenExpr 0x5643dfe5ec40 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x5643dfe5ec18 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x5643dfe5ebe0 <col:24> 'int' 0
return [B1.38];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
