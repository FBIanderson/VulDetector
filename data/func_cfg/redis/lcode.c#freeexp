static void freeexp(FuncState *fs, expdesc *e)
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: DeclRefExpr 0x5637768be8b8 <lcode.c:225:5> 'void (FuncState *, int)' Function 0x5637768be0c8 'freereg' 'void (FuncState *, int)'
freereg
   2: ImplicitCastExpr 0x5637768be9f0 <lcode.c:225:5> 'void (*)(FuncState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768be8b8 <col:5> 'void (FuncState *, int)' Function 0x5637768be0c8 'freereg' 'void (FuncState *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, int))
   3: DeclRefExpr 0x5637768be8e0 <lcode.c:225:13> 'FuncState *' lvalue ParmVar 0x5637768be5f8 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768bea40 <lcode.c:225:13> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768be8e0 <col:13> 'FuncState *' lvalue ParmVar 0x5637768be5f8 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768be908 <lcode.c:225:17> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
e
   6: ImplicitCastExpr 0x5637768be930 <lcode.c:225:17> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768be908 <col:17> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B1.5] (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: MemberExpr 0x5637768be948 <lcode.c:225:17, col:20> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768be930 <col:17> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768be908 <col:17> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B1.6]->u
   8: MemberExpr 0x5637768be980 <lcode.c:225:17, col:22> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768be948 <col:17, col:20> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768be930 <col:17> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768be908 <col:17> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B1.7].s
   9: MemberExpr 0x5637768be9b8 <lcode.c:225:17, col:24> 'int' lvalue .info 0x56377687d5f8
`-MemberExpr 0x5637768be980 <col:17, col:22> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768be948 <col:17, col:20> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768be930 <col:17> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768be908 <col:17> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B1.8].info
  10: ImplicitCastExpr 0x5637768bea58 <lcode.c:225:17, col:24> 'int' <LValueToRValue>
`-MemberExpr 0x5637768be9b8 <col:17, col:24> 'int' lvalue .info 0x56377687d5f8
  `-MemberExpr 0x5637768be980 <col:17, col:22> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
    `-MemberExpr 0x5637768be948 <col:17, col:20> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
      `-ImplicitCastExpr 0x5637768be930 <col:17> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x5637768be908 <col:17> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B1.9] (ImplicitCastExpr, LValueToRValue, int)
  11: CallExpr 0x5637768bea08 <lcode.c:225:5, col:28> 'void'
|-ImplicitCastExpr 0x5637768be9f0 <col:5> 'void (*)(FuncState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768be8b8 <col:5> 'void (FuncState *, int)' Function 0x5637768be0c8 'freereg' 'void (FuncState *, int)'
|-ImplicitCastExpr 0x5637768bea40 <col:13> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768be8e0 <col:13> 'FuncState *' lvalue ParmVar 0x5637768be5f8 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768bea58 <col:17, col:24> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768be9b8 <col:17, col:24> 'int' lvalue .info 0x56377687d5f8
    `-MemberExpr 0x5637768be980 <col:17, col:22> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
      `-MemberExpr 0x5637768be948 <col:17, col:20> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
        `-ImplicitCastExpr 0x5637768be930 <col:17> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x5637768be908 <col:17> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B1.2]([B1.4], [B1.10])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5637768be7a8 <lcode.c:224:7> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
e
   2: ImplicitCastExpr 0x5637768be7d0 <lcode.c:224:7> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768be7a8 <col:7> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B2.1] (ImplicitCastExpr, LValueToRValue, expdesc *)
   3: MemberExpr 0x5637768be7e8 <lcode.c:224:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
`-ImplicitCastExpr 0x5637768be7d0 <col:7> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768be7a8 <col:7> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B2.2]->k
   4: ImplicitCastExpr 0x5637768be848 <lcode.c:224:7, col:10> 'expkind':'expkind' <LValueToRValue>
`-MemberExpr 0x5637768be7e8 <col:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
  `-ImplicitCastExpr 0x5637768be7d0 <col:7> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768be7a8 <col:7> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B2.3] (ImplicitCastExpr, LValueToRValue, expkind)
   5: ImplicitCastExpr 0x5637768be860 <lcode.c:224:7, col:10> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5637768be848 <col:7, col:10> 'expkind':'expkind' <LValueToRValue>
  `-MemberExpr 0x5637768be7e8 <col:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
    `-ImplicitCastExpr 0x5637768be7d0 <col:7> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768be7a8 <col:7> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
[B2.4] (ImplicitCastExpr, IntegralCast, unsigned int)
   6: DeclRefExpr 0x5637768be820 <lcode.c:224:15> 'int' EnumConstant 0x56377687d1c8 'VNONRELOC' 'int'
VNONRELOC
   7: ImplicitCastExpr 0x5637768be878 <lcode.c:224:15> 'unsigned int' <IntegralCast>
`-DeclRefExpr 0x5637768be820 <col:15> 'int' EnumConstant 0x56377687d1c8 'VNONRELOC' 'int'
[B2.6] (ImplicitCastExpr, IntegralCast, unsigned int)
   8: BinaryOperator 0x5637768be890 <lcode.c:224:7, col:15> 'int' '=='
|-ImplicitCastExpr 0x5637768be860 <col:7, col:10> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x5637768be848 <col:7, col:10> 'expkind':'expkind' <LValueToRValue>
|   `-MemberExpr 0x5637768be7e8 <col:7, col:10> 'expkind':'expkind' lvalue ->k 0x56377687d440
|     `-ImplicitCastExpr 0x5637768be7d0 <col:7> 'expdesc *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768be7a8 <col:7> 'expdesc *' lvalue ParmVar 0x5637768be668 'e' 'expdesc *'
`-ImplicitCastExpr 0x5637768be878 <col:15> 'unsigned int' <IntegralCast>
  `-DeclRefExpr 0x5637768be820 <col:15> 'int' EnumConstant 0x56377687d1c8 'VNONRELOC' 'int'
[B2.5] == [B2.7]
   T: if [B2.8]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2
