static int json_cfg_encode_sparse_array(lua_State *l)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x563107e027f8 <lua_cjson.c:270:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
json_arg_init
   2: ImplicitCastExpr 0x563107e028c8 <lua_cjson.c:270:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e027f8 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, json_config_t *(*)(lua_State *, int))
   3: DeclRefExpr 0x563107e02820 <lua_cjson.c:270:40> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e02918 <lua_cjson.c:270:40> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e02820 <col:40> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e02848 <lua_cjson.c:270:43> 'int' 3
3
   6: CallExpr 0x563107e028e0 <lua_cjson.c:270:26, col:44> 'json_config_t *'
|-ImplicitCastExpr 0x563107e028c8 <col:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e027f8 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
|-ImplicitCastExpr 0x563107e02918 <col:40> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e02820 <col:40> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
`-IntegerLiteral 0x563107e02848 <col:43> 'int' 3
[B1.2]([B1.4], [B1.5])
   7: DeclStmt 0x563107e02930 <lua_cjson.c:270:5, col:45>col:20
`-VarDecl 0x563107e02798 <col:5, col:44> col:20 used cfg 'json_config_t *' cinit
  `-CallExpr 0x563107e028e0 <col:26, col:44> 'json_config_t *'
    |-ImplicitCastExpr 0x563107e028c8 <col:26> 'json_config_t *(*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563107e027f8 <col:26> 'json_config_t *(lua_State *, int)' Function 0x563107dff170 'json_arg_init' 'json_config_t *(lua_State *, int)'
    |-ImplicitCastExpr 0x563107e02918 <col:40> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x563107e02820 <col:40> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
    `-IntegerLiteral 0x563107e02848 <col:43> 'int' 3
json_config_t *cfg = json_arg_init(l, 3);
   8: DeclRefExpr 0x563107e02948 <lua_cjson.c:272:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
json_enum_option
   9: ImplicitCastExpr 0x563107e02b48 <lua_cjson.c:272:5> 'int (*)(lua_State *, int, int *, const char **, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e02948 <col:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
[B1.8] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int *, const char **, int))
  10: DeclRefExpr 0x563107e02970 <lua_cjson.c:272:22> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
l
  11: ImplicitCastExpr 0x563107e02bb0 <lua_cjson.c:272:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e02970 <col:22> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x563107e02998 <lua_cjson.c:272:25> 'int' 1
1
  13: DeclRefExpr 0x563107e029b8 <lua_cjson.c:272:29> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
cfg
  14: ImplicitCastExpr 0x563107e029e0 <lua_cjson.c:272:29> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e029b8 <col:29> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
[B1.13] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  15: MemberExpr 0x563107e029f8 <lua_cjson.c:272:29, col:34> 'int' lvalue ->encode_sparse_convert 0x563107df1040
`-ImplicitCastExpr 0x563107e029e0 <col:29> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e029b8 <col:29> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
[B1.14]->encode_sparse_convert
  16: UnaryOperator 0x563107e02a30 <lua_cjson.c:272:28, col:34> 'int *' prefix '&'
`-MemberExpr 0x563107e029f8 <col:29, col:34> 'int' lvalue ->encode_sparse_convert 0x563107df1040
  `-ImplicitCastExpr 0x563107e029e0 <col:29> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e029b8 <col:29> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
&[B1.15]
  17: IntegerLiteral 0x563107e02a50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  18: CStyleCastExpr 0x563107e02a88 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x563107e02a50 <col:24> 'int' 0
(void *)[B1.17] (CStyleCastExpr, NullToPointer, void *)
  19: ImplicitCastExpr 0x563107e02bc8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char **' <NullToPointer>
`-ParenExpr 0x563107e02ab0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x563107e02a88 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x563107e02a50 <col:24> 'int' 0
([B1.18]) (ImplicitCastExpr, NullToPointer, const char **)
  20: IntegerLiteral 0x563107e02ad0 <lua_cjson.c:272:63> 'int' 1
1
  21: CallExpr 0x563107e02b60 <lua_cjson.c:272:5, col:64> 'int'
|-ImplicitCastExpr 0x563107e02b48 <col:5> 'int (*)(lua_State *, int, int *, const char **, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e02948 <col:5> 'int (lua_State *, int, int *, const char **, int)' Function 0x563107e01158 'json_enum_option' 'int (lua_State *, int, int *, const char **, int)'
|-ImplicitCastExpr 0x563107e02bb0 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e02970 <col:22> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
|-IntegerLiteral 0x563107e02998 <col:25> 'int' 1
|-UnaryOperator 0x563107e02a30 <col:28, col:34> 'int *' prefix '&'
| `-MemberExpr 0x563107e029f8 <col:29, col:34> 'int' lvalue ->encode_sparse_convert 0x563107df1040
|   `-ImplicitCastExpr 0x563107e029e0 <col:29> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e029b8 <col:29> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e02bc8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char **' <NullToPointer>
| `-ParenExpr 0x563107e02ab0 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x563107e02a88 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x563107e02a50 <col:24> 'int' 0
`-IntegerLiteral 0x563107e02ad0 <lua_cjson.c:272:63> 'int' 1
[B1.9]([B1.11], [B1.12], [B1.16], [B1.19], [B1.20])
  22: DeclRefExpr 0x563107e02be0 <lua_cjson.c:273:5> 'int (lua_State *, int, int *, int, int)' Function 0x563107dffda8 'json_integer_option' 'int (lua_State *, int, int *, int, int)'
json_integer_option
  23: ImplicitCastExpr 0x563107e02d88 <lua_cjson.c:273:5> 'int (*)(lua_State *, int, int *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e02be0 <col:5> 'int (lua_State *, int, int *, int, int)' Function 0x563107dffda8 'json_integer_option' 'int (lua_State *, int, int *, int, int)'
[B1.22] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int *, int, int))
  24: DeclRefExpr 0x563107e02c08 <lua_cjson.c:273:25> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
l
  25: ImplicitCastExpr 0x563107e02df0 <lua_cjson.c:273:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e02c08 <col:25> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
[B1.24] (ImplicitCastExpr, LValueToRValue, lua_State *)
  26: IntegerLiteral 0x563107e02c30 <lua_cjson.c:273:28> 'int' 2
2
  27: DeclRefExpr 0x563107e02c50 <lua_cjson.c:273:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
cfg
  28: ImplicitCastExpr 0x563107e02c78 <lua_cjson.c:273:32> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e02c50 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
[B1.27] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  29: MemberExpr 0x563107e02c90 <lua_cjson.c:273:32, col:37> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
`-ImplicitCastExpr 0x563107e02c78 <col:32> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e02c50 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
[B1.28]->encode_sparse_ratio
  30: UnaryOperator 0x563107e02cc8 <lua_cjson.c:273:31, col:37> 'int *' prefix '&'
`-MemberExpr 0x563107e02c90 <col:32, col:37> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
  `-ImplicitCastExpr 0x563107e02c78 <col:32> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e02c50 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
&[B1.29]
  31: IntegerLiteral 0x563107e02ce8 <lua_cjson.c:273:58> 'int' 0
0
  32: IntegerLiteral 0x563107e02d08 <<built-in>:37:21> 'int' 2147483647
2147483647
  33: CallExpr 0x563107e02da0 <lua_cjson.c:273:5, col:68> 'int'
|-ImplicitCastExpr 0x563107e02d88 <col:5> 'int (*)(lua_State *, int, int *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e02be0 <col:5> 'int (lua_State *, int, int *, int, int)' Function 0x563107dffda8 'json_integer_option' 'int (lua_State *, int, int *, int, int)'
|-ImplicitCastExpr 0x563107e02df0 <col:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e02c08 <col:25> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
|-IntegerLiteral 0x563107e02c30 <col:28> 'int' 2
|-UnaryOperator 0x563107e02cc8 <col:31, col:37> 'int *' prefix '&'
| `-MemberExpr 0x563107e02c90 <col:32, col:37> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
|   `-ImplicitCastExpr 0x563107e02c78 <col:32> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e02c50 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
|-IntegerLiteral 0x563107e02ce8 <col:58> 'int' 0
`-IntegerLiteral 0x563107e02d08 <<built-in>:37:21> 'int' 2147483647
[B1.23]([B1.25], [B1.26], [B1.30], [B1.31], [B1.32])
  34: DeclRefExpr 0x563107e02e08 <lua_cjson.c:274:5> 'int (lua_State *, int, int *, int, int)' Function 0x563107dffda8 'json_integer_option' 'int (lua_State *, int, int *, int, int)'
json_integer_option
  35: ImplicitCastExpr 0x563107e02f50 <lua_cjson.c:274:5> 'int (*)(lua_State *, int, int *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e02e08 <col:5> 'int (lua_State *, int, int *, int, int)' Function 0x563107dffda8 'json_integer_option' 'int (lua_State *, int, int *, int, int)'
[B1.34] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, int *, int, int))
  36: DeclRefExpr 0x563107e02e30 <lua_cjson.c:274:25> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
l
  37: ImplicitCastExpr 0x563107e02fb8 <lua_cjson.c:274:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e02e30 <col:25> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
[B1.36] (ImplicitCastExpr, LValueToRValue, lua_State *)
  38: IntegerLiteral 0x563107e02e58 <lua_cjson.c:274:28> 'int' 3
3
  39: DeclRefExpr 0x563107e02e78 <lua_cjson.c:274:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
cfg
  40: ImplicitCastExpr 0x563107e02ea0 <lua_cjson.c:274:32> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e02e78 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
[B1.39] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  41: MemberExpr 0x563107e02eb8 <lua_cjson.c:274:32, col:37> 'int' lvalue ->encode_sparse_safe 0x563107df1100
`-ImplicitCastExpr 0x563107e02ea0 <col:32> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e02e78 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
[B1.40]->encode_sparse_safe
  42: UnaryOperator 0x563107e02ef0 <lua_cjson.c:274:31, col:37> 'int *' prefix '&'
`-MemberExpr 0x563107e02eb8 <col:32, col:37> 'int' lvalue ->encode_sparse_safe 0x563107df1100
  `-ImplicitCastExpr 0x563107e02ea0 <col:32> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e02e78 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
&[B1.41]
  43: IntegerLiteral 0x563107e02f10 <lua_cjson.c:274:57> 'int' 0
0
  44: IntegerLiteral 0x563107e02f30 <<built-in>:37:21> 'int' 2147483647
2147483647
  45: CallExpr 0x563107e02f68 <lua_cjson.c:274:5, col:67> 'int'
|-ImplicitCastExpr 0x563107e02f50 <col:5> 'int (*)(lua_State *, int, int *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e02e08 <col:5> 'int (lua_State *, int, int *, int, int)' Function 0x563107dffda8 'json_integer_option' 'int (lua_State *, int, int *, int, int)'
|-ImplicitCastExpr 0x563107e02fb8 <col:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e02e30 <col:25> 'lua_State *' lvalue ParmVar 0x563107e02650 'l' 'lua_State *'
|-IntegerLiteral 0x563107e02e58 <col:28> 'int' 3
|-UnaryOperator 0x563107e02ef0 <col:31, col:37> 'int *' prefix '&'
| `-MemberExpr 0x563107e02eb8 <col:32, col:37> 'int' lvalue ->encode_sparse_safe 0x563107df1100
|   `-ImplicitCastExpr 0x563107e02ea0 <col:32> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e02e78 <col:32> 'json_config_t *' lvalue Var 0x563107e02798 'cfg' 'json_config_t *'
|-IntegerLiteral 0x563107e02f10 <col:57> 'int' 0
`-IntegerLiteral 0x563107e02f30 <<built-in>:37:21> 'int' 2147483647
[B1.35]([B1.37], [B1.38], [B1.42], [B1.43], [B1.44])
  46: IntegerLiteral 0x563107e02fd0 <lua_cjson.c:276:12> 'int' 3
3
  47: ReturnStmt 0x563107e04010 <lua_cjson.c:276:5, col:12>
`-IntegerLiteral 0x563107e02fd0 <col:12> 'int' 3
return [B1.46];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
