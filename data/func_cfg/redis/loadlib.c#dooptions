static void dooptions(lua_State *L, int n)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: DeclRefExpr 0x558048c315a0 <loadlib.c:521:23> 'int' lvalue Var 0x558048c31410 'i' 'int'
i
   2: UnaryOperator 0x558048c315c8 <loadlib.c:521:23, col:24> 'int' postfix '++'
`-DeclRefExpr 0x558048c315a0 <col:23> 'int' lvalue Var 0x558048c31410 'i' 'int'
[B1.1]++
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: DeclRefExpr 0x558048c315e8 <loadlib.c:522:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd0e50 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
   2: ImplicitCastExpr 0x558048c31660 <loadlib.c:522:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c315e8 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd0e50 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x558048c31610 <loadlib.c:522:19> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x558048c316b0 <loadlib.c:522:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c31610 <col:19> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x558048c31638 <loadlib.c:522:22> 'int' lvalue Var 0x558048c31410 'i' 'int'
i
   6: ImplicitCastExpr 0x558048c316c8 <loadlib.c:522:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x558048c31638 <col:22> 'int' lvalue Var 0x558048c31410 'i' 'int'
[B2.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x558048c31678 <loadlib.c:522:5, col:23> 'void'
|-ImplicitCastExpr 0x558048c31660 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c315e8 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd0e50 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x558048c316b0 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c31610 <col:19> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
`-ImplicitCastExpr 0x558048c316c8 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558048c31638 <col:22> 'int' lvalue Var 0x558048c31410 'i' 'int'
[B2.2]([B2.4], [B2.6])
   8: DeclRefExpr 0x558048c316e0 <loadlib.c:523:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd0e50 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_pushvalue
   9: ImplicitCastExpr 0x558048c31770 <loadlib.c:523:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c316e0 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd0e50 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
[B2.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  10: DeclRefExpr 0x558048c31708 <loadlib.c:523:19> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x558048c317c0 <loadlib.c:523:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c31708 <col:19> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
[B2.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: IntegerLiteral 0x558048c31730 <loadlib.c:523:23> 'int' 2
2
  13: UnaryOperator 0x558048c31750 <loadlib.c:523:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x558048c31730 <col:23> 'int' 2
-[B2.12]
  14: CallExpr 0x558048c31788 <loadlib.c:523:5, col:24> 'void'
|-ImplicitCastExpr 0x558048c31770 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c316e0 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x558048bd0e50 'lua_pushvalue' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x558048c317c0 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c31708 <col:19> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
`-UnaryOperator 0x558048c31750 <col:22, col:23> 'int' prefix '-'
  `-IntegerLiteral 0x558048c31730 <col:23> 'int' 2
[B2.9]([B2.11], [B2.13])
  15: DeclRefExpr 0x558048c317d8 <loadlib.c:524:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x558048bdb0d0 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
lua_call
  16: ImplicitCastExpr 0x558048c31868 <loadlib.c:524:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558048c317d8 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x558048bdb0d0 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
[B2.15] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int, int))
  17: DeclRefExpr 0x558048c31800 <loadlib.c:524:14> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
L
  18: ImplicitCastExpr 0x558048c318c0 <loadlib.c:524:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x558048c31800 <col:14> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
[B2.17] (ImplicitCastExpr, LValueToRValue, lua_State *)
  19: IntegerLiteral 0x558048c31828 <loadlib.c:524:17> 'int' 1
1
  20: IntegerLiteral 0x558048c31848 <loadlib.c:524:20> 'int' 0
0
  21: CallExpr 0x558048c31880 <loadlib.c:524:5, col:21> 'void'
|-ImplicitCastExpr 0x558048c31868 <col:5> 'void (*)(lua_State *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558048c317d8 <col:5> 'void (lua_State *, int, int)':'void (lua_State *, int, int)' Function 0x558048bdb0d0 'lua_call' 'void (lua_State *, int, int)':'void (lua_State *, int, int)'
|-ImplicitCastExpr 0x558048c318c0 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x558048c31800 <col:14> 'lua_State *' lvalue ParmVar 0x558048c31240 'L' 'lua_State *'
|-IntegerLiteral 0x558048c31828 <col:17> 'int' 1
`-IntegerLiteral 0x558048c31848 <col:20> 'int' 0
[B2.16]([B2.18], [B2.19], [B2.20])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x558048c314f8 <loadlib.c:521:15> 'int' lvalue Var 0x558048c31410 'i' 'int'
i
   2: ImplicitCastExpr 0x558048c31548 <loadlib.c:521:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x558048c314f8 <col:15> 'int' lvalue Var 0x558048c31410 'i' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x558048c31520 <loadlib.c:521:20> 'int' lvalue ParmVar 0x558048c312b8 'n' 'int'
n
   4: ImplicitCastExpr 0x558048c31560 <loadlib.c:521:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x558048c31520 <col:20> 'int' lvalue ParmVar 0x558048c312b8 'n' 'int'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x558048c31578 <loadlib.c:521:15, col:20> 'int' '<='
|-ImplicitCastExpr 0x558048c31548 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x558048c314f8 <col:15> 'int' lvalue Var 0x558048c31410 'i' 'int'
`-ImplicitCastExpr 0x558048c31560 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558048c31520 <col:20> 'int' lvalue ParmVar 0x558048c312b8 'n' 'int'
[B3.2] <= [B3.4]
   T: for (...; [B3.5]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: DeclStmt 0x558048c31470 <loadlib.c:520:3, col:8>col:7
`-VarDecl 0x558048c31410 <col:3, col:7> col:7 used i 'int'
int i;
   2: IntegerLiteral 0x558048c314b0 <loadlib.c:521:12> 'int' 2
2
   3: DeclRefExpr 0x558048c31488 <loadlib.c:521:8> 'int' lvalue Var 0x558048c31410 'i' 'int'
i
   4: BinaryOperator 0x558048c314d0 <loadlib.c:521:8, col:12> 'int' '='
|-DeclRefExpr 0x558048c31488 <col:8> 'int' lvalue Var 0x558048c31410 'i' 'int'
`-IntegerLiteral 0x558048c314b0 <col:12> 'int' 2
[B4.3] = [B4.2]
   Preds (1): B5
   Succs (1): B3

 [B0 (EXIT)]
   Preds (1): B3
