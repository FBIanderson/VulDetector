static void Arith(lua_State *L, StkId ra, const TValue *rb, const TValue *rc, TMS op)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x5590ecef9600 <lvm.c:336:5> 'void (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4760 'luaG_aritherror' 'void (lua_State *, const TValue *, const TValue *)'
luaG_aritherror
   2: ImplicitCastExpr 0x5590ecef96f8 <lvm.c:336:5> 'void (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef9600 <col:5> 'void (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4760 'luaG_aritherror' 'void (lua_State *, const TValue *, const TValue *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const TValue *, const TValue *))
   3: DeclRefExpr 0x5590ecef9628 <lvm.c:336:21> 'lua_State *' lvalue ParmVar 0x5590ecef5d48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef9750 <lvm.c:336:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef9628 <col:21> 'lua_State *' lvalue ParmVar 0x5590ecef5d48 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef9650 <lvm.c:336:24> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
rb
   6: ImplicitCastExpr 0x5590ecef9768 <lvm.c:336:24> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef9650 <col:24> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590ecef9678 <lvm.c:336:28> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
rc
   8: ImplicitCastExpr 0x5590ecef9780 <lvm.c:336:28> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef9678 <col:28> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
[B1.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: CallExpr 0x5590ecef9710 <lvm.c:336:5, col:30> 'void'
|-ImplicitCastExpr 0x5590ecef96f8 <col:5> 'void (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef9600 <col:5> 'void (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4760 'luaG_aritherror' 'void (lua_State *, const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590ecef9750 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef9628 <col:21> 'lua_State *' lvalue ParmVar 0x5590ecef5d48 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef9768 <col:24> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef9650 <col:24> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
`-ImplicitCastExpr 0x5590ecef9780 <col:28> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef9678 <col:28> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
[B1.2]([B1.4], [B1.6], [B1.8])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5590ecef9410 <lvm.c:335:13> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
call_binTM
   2: ImplicitCastExpr 0x5590ecef9500 <lvm.c:335:13> 'int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef9410 <col:13> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS))
   3: DeclRefExpr 0x5590ecef9438 <lvm.c:335:24> 'lua_State *' lvalue ParmVar 0x5590ecef5d48 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecef9568 <lvm.c:335:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef9438 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecef5d48 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecef9460 <lvm.c:335:27> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
rb
   6: ImplicitCastExpr 0x5590ecef9580 <lvm.c:335:27> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef9460 <col:27> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
[B2.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590ecef9488 <lvm.c:335:31> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
rc
   8: ImplicitCastExpr 0x5590ecef9598 <lvm.c:335:31> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef9488 <col:31> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
[B2.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: DeclRefExpr 0x5590ecef94b0 <lvm.c:335:35> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
  10: ImplicitCastExpr 0x5590ecef95b0 <lvm.c:335:35> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef94b0 <col:35> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
[B2.9] (ImplicitCastExpr, LValueToRValue, StkId)
  11: DeclRefExpr 0x5590ecef94d8 <lvm.c:335:39> 'TMS':'TMS' lvalue ParmVar 0x5590ecef5f08 'op' 'TMS':'TMS'
op
  12: ImplicitCastExpr 0x5590ecef95c8 <lvm.c:335:39> 'TMS':'TMS' <LValueToRValue>
`-DeclRefExpr 0x5590ecef94d8 <col:39> 'TMS':'TMS' lvalue ParmVar 0x5590ecef5f08 'op' 'TMS':'TMS'
[B2.11] (ImplicitCastExpr, LValueToRValue, TMS)
  13: CallExpr 0x5590ecef9518 <lvm.c:335:13, col:41> 'int'
|-ImplicitCastExpr 0x5590ecef9500 <col:13> 'int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef9410 <col:13> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
|-ImplicitCastExpr 0x5590ecef9568 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef9438 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecef5d48 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecef9580 <col:27> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef9460 <col:27> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
|-ImplicitCastExpr 0x5590ecef9598 <col:31> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef9488 <col:31> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
|-ImplicitCastExpr 0x5590ecef95b0 <col:35> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef94b0 <col:35> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
`-ImplicitCastExpr 0x5590ecef95c8 <col:39> 'TMS':'TMS' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef94d8 <col:39> 'TMS':'TMS' lvalue ParmVar 0x5590ecef5f08 'op' 'TMS':'TMS'
[B2.2]([B2.4], [B2.6], [B2.8], [B2.10], [B2.12])
  14: UnaryOperator 0x5590ecef95e0 <lvm.c:335:12, col:41> 'int' prefix '!'
`-CallExpr 0x5590ecef9518 <col:13, col:41> 'int'
  |-ImplicitCastExpr 0x5590ecef9500 <col:13> 'int (*)(lua_State *, const TValue *, const TValue *, StkId, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecef9410 <col:13> 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)' Function 0x5590ecee4748 'call_binTM' 'int (lua_State *, const TValue *, const TValue *, StkId, TMS)'
  |-ImplicitCastExpr 0x5590ecef9568 <col:24> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef9438 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecef5d48 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590ecef9580 <col:27> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef9460 <col:27> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef9598 <col:31> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef9488 <col:31> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef95b0 <col:35> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef94b0 <col:35> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
  `-ImplicitCastExpr 0x5590ecef95c8 <col:39> 'TMS':'TMS' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef94d8 <col:39> 'TMS':'TMS' lvalue ParmVar 0x5590ecef5f08 'op' 'TMS':'TMS'
![B2.13]
   T: if [B2.14]
   Preds (2): B12 B13
   Succs (2): B1 B0

 [B3]
   1: DeclRefExpr 0x5590ecef6a60 <lvm.c:323:28> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
b
   2: ImplicitCastExpr 0x5590ecef6aa8 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef6a88 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef6a60 <lvm.c:323:28> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590ecef6ac0 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef6aa8 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef6a88 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef6a60 <lvm.c:323:28> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
[B3.2]->value
   4: MemberExpr 0x5590ecef6af8 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef6ac0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef6aa8 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef6a88 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef6a60 <lvm.c:323:28> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
[B3.3].n
   5: ImplicitCastExpr 0x5590ecef6b50 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef6b30 <col:25, col:27> 'const lua_Number':'const double' lvalue
  `-MemberExpr 0x5590ecef6af8 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
    `-MemberExpr 0x5590ecef6ac0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef6aa8 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef6a88 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef6a60 <lvm.c:323:28> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
([B3.4]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclStmt 0x5590ecf6dc60 <lvm.c:323:16, ./llimits.h:63:27>lvm.c:323:16
`-VarDecl 0x5590ecef6a00 <col:5, ./llimits.h:63:27> lvm.c:323:16 used nb 'lua_Number':'double' cinit
  `-ImplicitCastExpr 0x5590ecef6b50 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x5590ecef6b30 <col:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5590ecef6af8 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
        `-MemberExpr 0x5590ecef6ac0 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590ecef6aa8 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590ecef6a88 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590ecef6a60 <lvm.c:323:28> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
lua_Number nb = ((b)->value.n);
   7: DeclRefExpr 0x5590ecef6bd8 <lvm.c:323:44> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
c
   8: ImplicitCastExpr 0x5590ecef6c20 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef6c00 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecef6bd8 <lvm.c:323:44> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
([B3.7]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: MemberExpr 0x5590ecef6c38 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef6c20 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecef6c00 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecef6bd8 <lvm.c:323:44> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
[B3.8]->value
  10: MemberExpr 0x5590ecef6c70 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef6c38 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef6c20 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef6c00 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecef6bd8 <lvm.c:323:44> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
[B3.9].n
  11: ImplicitCastExpr 0x5590ecef6cc8 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef6ca8 <col:25, col:27> 'const lua_Number':'const double' lvalue
  `-MemberExpr 0x5590ecef6c70 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
    `-MemberExpr 0x5590ecef6c38 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecef6c20 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecef6c00 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecef6bd8 <lvm.c:323:44> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
([B3.10]) (ImplicitCastExpr, LValueToRValue, lua_Number)
  12: DeclStmt 0x5590ecf6dac8 <lvm.c:323:32, ./llimits.h:63:27>lvm.c:323:32
`-VarDecl 0x5590ecef6b78 <col:5, ./llimits.h:63:27> lvm.c:323:32 used nc 'lua_Number':'double' cinit
  `-ImplicitCastExpr 0x5590ecef6cc8 <./llimits.h:63:25, col:27> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x5590ecef6ca8 <col:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5590ecef6c70 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
        `-MemberExpr 0x5590ecef6c38 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590ecef6c20 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590ecef6c00 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590ecef6bd8 <lvm.c:323:44> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
lua_Number nc = ((c)->value.n);
  13: DeclRefExpr 0x5590ecef6d10 <lvm.c:324:13> 'TMS':'TMS' lvalue ParmVar 0x5590ecef5f08 'op' 'TMS':'TMS'
op
  14: ImplicitCastExpr 0x5590ecef6d38 <lvm.c:324:13> 'TMS':'TMS' <LValueToRValue>
`-DeclRefExpr 0x5590ecef6d10 <col:13> 'TMS':'TMS' lvalue ParmVar 0x5590ecef5f08 'op' 'TMS':'TMS'
[B3.13] (ImplicitCastExpr, LValueToRValue, TMS)
  15: ImplicitCastExpr 0x5590ecef6d50 <lvm.c:324:13> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecef6d38 <col:13> 'TMS':'TMS' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef6d10 <col:13> 'TMS':'TMS' lvalue ParmVar 0x5590ecef5f08 'op' 'TMS':'TMS'
[B3.14] (ImplicitCastExpr, IntegralCast, unsigned int)
   T: switch [B3.15]
   Preds (1): B12
   Succs (8): B5 B6 B7 B8 B9 B10 B11 B4

 [B4]
  default:
   1: IntegerLiteral 0x5590ecef91e0 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x5590ecef9210 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecef91e0 <col:31> 'int' 0
(void)[B4.1] (CStyleCastExpr, ToVoid, void)
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B5]
  case TM_UNM:
   1: DeclRefExpr 0x5590ecef8ed0 <lvm.c:331:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
   2: ImplicitCastExpr 0x5590ecef8f18 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef8ef8 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecef8ed0 <lvm.c:331:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5590ecef8f30 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5590ecef8e70 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecef8f18 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef8ef8 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecef8ed0 <lvm.c:331:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
TValue *i_o = (ra);
   4: DeclRefExpr 0x5590ecef8ff8 <lvm.c:331:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   5: ImplicitCastExpr 0x5590ecef9040 <./luaconf.h:539:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef9020 <col:27, col:29> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef8ff8 <lvm.c:331:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
([B5.4]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: UnaryOperator 0x5590ecef9058 <./luaconf.h:539:26, col:29> 'lua_Number':'double' prefix '-'
`-ImplicitCastExpr 0x5590ecef9040 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590ecef9020 <col:27, col:29> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5590ecef8ff8 <lvm.c:331:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
-[B5.5]
   7: DeclRefExpr 0x5590ecef8f48 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
i_o
   8: ImplicitCastExpr 0x5590ecef8f70 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef8f48 <col:24> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
[B5.7] (ImplicitCastExpr, LValueToRValue, TValue *)
   9: MemberExpr 0x5590ecef8f88 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef8f70 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef8f48 <col:24> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
[B5.8]->value
  10: MemberExpr 0x5590ecef8fc0 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef8f88 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef8f70 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef8f48 <col:24> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
[B5.9].n
  11: BinaryOperator 0x5590ecef90b8 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5590ecef8fc0 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
| `-MemberExpr 0x5590ecef8f88 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef8f70 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef8f48 <col:24> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef9098 <col:37, col:39> 'lua_Number':'double'
  `-ParenExpr 0x5590ecef9078 <./luaconf.h:539:25, col:30> 'lua_Number':'double'
    `-UnaryOperator 0x5590ecef9058 <col:26, col:29> 'lua_Number':'double' prefix '-'
      `-ImplicitCastExpr 0x5590ecef9040 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
        `-ParenExpr 0x5590ecef9020 <col:27, col:29> 'lua_Number':'double' lvalue
          `-DeclRefExpr 0x5590ecef8ff8 <lvm.c:331:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
[B5.10] = (([B5.6]))
  12: IntegerLiteral 0x5590ecef9158 <./lua.h:77:22> 'int' 3
3
  13: DeclRefExpr 0x5590ecef90e0 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
i_o
  14: ImplicitCastExpr 0x5590ecef9108 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef90e0 <col:42> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
[B5.13] (ImplicitCastExpr, LValueToRValue, TValue *)
  15: MemberExpr 0x5590ecef9120 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef9108 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef90e0 <col:42> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
[B5.14]->tt
  16: BinaryOperator 0x5590ecef9178 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5590ecef9120 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef9108 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef90e0 <col:42> 'TValue *' lvalue Var 0x5590ecef8e70 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef9158 <./lua.h:77:22> 'int' 3
[B5.15] = [B5.12]
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B6]
  case TM_POW:
   1: DeclRefExpr 0x5590ecef8a48 <lvm.c:330:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
   2: ImplicitCastExpr 0x5590ecef8a90 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef8a70 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecef8a48 <lvm.c:330:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5590ecef8aa8 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5590ecef89e8 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecef8a90 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef8a70 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecef8a48 <lvm.c:330:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
TValue *i_o = (ra);
   4: DeclRefExpr 0x5590ecef8b70 <./luaconf.h:538:27> 'double (double, double)' Function 0x5590ecdb93f0 'pow' 'double (double, double)'
pow
   5: ImplicitCastExpr 0x5590ecef8c18 <./luaconf.h:538:27> 'double (*)(double, double)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef8b70 <col:27> 'double (double, double)' Function 0x5590ecdb93f0 'pow' 'double (double, double)'
[B6.4] (ImplicitCastExpr, FunctionToPointerDecay, double (*)(double, double))
   6: DeclRefExpr 0x5590ecef8b98 <lvm.c:330:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   7: ImplicitCastExpr 0x5590ecef8c68 <lvm.c:330:46> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x5590ecef8b98 <col:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
[B6.6] (ImplicitCastExpr, LValueToRValue, lua_Number)
   8: DeclRefExpr 0x5590ecef8bc0 <lvm.c:330:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
nc
   9: ImplicitCastExpr 0x5590ecef8c80 <lvm.c:330:50> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x5590ecef8bc0 <col:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B6.8] (ImplicitCastExpr, LValueToRValue, lua_Number)
  10: CallExpr 0x5590ecef8c30 <./luaconf.h:538:27, col:34> 'double'
|-ImplicitCastExpr 0x5590ecef8c18 <col:27> 'double (*)(double, double)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef8b70 <col:27> 'double (double, double)' Function 0x5590ecdb93f0 'pow' 'double (double, double)'
|-ImplicitCastExpr 0x5590ecef8c68 <lvm.c:330:46> 'lua_Number':'double' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef8b98 <col:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
`-ImplicitCastExpr 0x5590ecef8c80 <col:50> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef8bc0 <col:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B6.5]([B6.7], [B6.9])
  11: DeclRefExpr 0x5590ecef8ac0 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
i_o
  12: ImplicitCastExpr 0x5590ecef8ae8 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef8ac0 <col:24> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
[B6.11] (ImplicitCastExpr, LValueToRValue, TValue *)
  13: MemberExpr 0x5590ecef8b00 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef8ae8 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef8ac0 <col:24> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
[B6.12]->value
  14: MemberExpr 0x5590ecef8b38 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef8b00 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef8ae8 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef8ac0 <col:24> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
[B6.13].n
  15: BinaryOperator 0x5590ecef8cd8 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5590ecef8b38 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
| `-MemberExpr 0x5590ecef8b00 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef8ae8 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef8ac0 <col:24> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef8cb8 <col:37, col:39> 'double'
  `-ParenExpr 0x5590ecef8c98 <./luaconf.h:538:26, col:35> 'double'
    `-CallExpr 0x5590ecef8c30 <col:27, col:34> 'double'
      |-ImplicitCastExpr 0x5590ecef8c18 <col:27> 'double (*)(double, double)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5590ecef8b70 <col:27> 'double (double, double)' Function 0x5590ecdb93f0 'pow' 'double (double, double)'
      |-ImplicitCastExpr 0x5590ecef8c68 <lvm.c:330:46> 'lua_Number':'double' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecef8b98 <col:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
      `-ImplicitCastExpr 0x5590ecef8c80 <col:50> 'lua_Number':'double' <LValueToRValue>
        `-DeclRefExpr 0x5590ecef8bc0 <col:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B6.14] = (([B6.10]))
  16: IntegerLiteral 0x5590ecef8d78 <./lua.h:77:22> 'int' 3
3
  17: DeclRefExpr 0x5590ecef8d00 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
i_o
  18: ImplicitCastExpr 0x5590ecef8d28 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef8d00 <col:42> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
[B6.17] (ImplicitCastExpr, LValueToRValue, TValue *)
  19: MemberExpr 0x5590ecef8d40 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef8d28 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef8d00 <col:42> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
[B6.18]->tt
  20: BinaryOperator 0x5590ecef8d98 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5590ecef8d40 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef8d28 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef8d00 <col:42> 'TValue *' lvalue Var 0x5590ecef89e8 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef8d78 <./lua.h:77:22> 'int' 3
[B6.19] = [B6.16]
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B7]
  case TM_MOD:
   1: DeclRefExpr 0x5590ecef7f88 <lvm.c:329:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
   2: ImplicitCastExpr 0x5590ecef7fd0 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef7fb0 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecef7f88 <lvm.c:329:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5590ecef7fe8 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5590ecef7f28 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecef7fd0 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef7fb0 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecef7f88 <lvm.c:329:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
TValue *i_o = (ra);
   4: DeclRefExpr 0x5590ecef80b0 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   5: ImplicitCastExpr 0x5590ecef87d0 <./luaconf.h:537:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef80d8 <col:27, col:29> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef80b0 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
([B7.4]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590ecef80f8 <./luaconf.h:537:33> 'double (double)' Function 0x5590ecdbb868 'floor' 'double (double)'
floor
   7: ImplicitCastExpr 0x5590ecef8238 <./luaconf.h:537:33> 'double (*)(double)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef80f8 <col:33> 'double (double)' Function 0x5590ecdbb868 'floor' 'double (double)'
[B7.6] (ImplicitCastExpr, FunctionToPointerDecay, double (*)(double))
   8: DeclRefExpr 0x5590ecef8120 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   9: ImplicitCastExpr 0x5590ecef81b0 <./luaconf.h:537:39, col:41> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef8148 <col:39, col:41> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef8120 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
([B7.8]) (ImplicitCastExpr, LValueToRValue, lua_Number)
  10: DeclRefExpr 0x5590ecef8168 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
nc
  11: ImplicitCastExpr 0x5590ecef81c8 <./luaconf.h:537:43, col:45> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef8190 <col:43, col:45> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef8168 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
([B7.10]) (ImplicitCastExpr, LValueToRValue, lua_Number)
  12: BinaryOperator 0x5590ecef81e0 <./luaconf.h:537:39, col:45> 'double' '/'
|-ImplicitCastExpr 0x5590ecef81b0 <col:39, col:41> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590ecef8148 <col:39, col:41> 'lua_Number':'double' lvalue
|   `-DeclRefExpr 0x5590ecef8120 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
`-ImplicitCastExpr 0x5590ecef81c8 <./luaconf.h:537:43, col:45> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590ecef8190 <col:43, col:45> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5590ecef8168 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B7.9] / [B7.11]
  13: CallExpr 0x5590ecef8250 <./luaconf.h:537:33, col:46> 'double'
|-ImplicitCastExpr 0x5590ecef8238 <col:33> 'double (*)(double)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef80f8 <col:33> 'double (double)' Function 0x5590ecdbb868 'floor' 'double (double)'
`-BinaryOperator 0x5590ecef81e0 <col:39, col:45> 'double' '/'
  |-ImplicitCastExpr 0x5590ecef81b0 <col:39, col:41> 'lua_Number':'double' <LValueToRValue>
  | `-ParenExpr 0x5590ecef8148 <col:39, col:41> 'lua_Number':'double' lvalue
  |   `-DeclRefExpr 0x5590ecef8120 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
  `-ImplicitCastExpr 0x5590ecef81c8 <./luaconf.h:537:43, col:45> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x5590ecef8190 <col:43, col:45> 'lua_Number':'double' lvalue
      `-DeclRefExpr 0x5590ecef8168 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B7.7]([B7.12])
  14: DeclRefExpr 0x5590ecef8280 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
nc
  15: ImplicitCastExpr 0x5590ecef8790 <./luaconf.h:537:48, col:50> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef8770 <col:48, col:50> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef8280 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
([B7.14]) (ImplicitCastExpr, LValueToRValue, lua_Number)
  16: BinaryOperator 0x5590ecef87a8 <./luaconf.h:537:33, col:50> 'double' '*'
|-CallExpr 0x5590ecef8250 <col:33, col:46> 'double'
| |-ImplicitCastExpr 0x5590ecef8238 <col:33> 'double (*)(double)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5590ecef80f8 <col:33> 'double (double)' Function 0x5590ecdbb868 'floor' 'double (double)'
| `-BinaryOperator 0x5590ecef81e0 <col:39, col:45> 'double' '/'
|   |-ImplicitCastExpr 0x5590ecef81b0 <col:39, col:41> 'lua_Number':'double' <LValueToRValue>
|   | `-ParenExpr 0x5590ecef8148 <col:39, col:41> 'lua_Number':'double' lvalue
|   |   `-DeclRefExpr 0x5590ecef8120 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
|   `-ImplicitCastExpr 0x5590ecef81c8 <./luaconf.h:537:43, col:45> 'lua_Number':'double' <LValueToRValue>
|     `-ParenExpr 0x5590ecef8190 <col:43, col:45> 'lua_Number':'double' lvalue
|       `-DeclRefExpr 0x5590ecef8168 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
`-ImplicitCastExpr 0x5590ecef8790 <./luaconf.h:537:48, col:50> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590ecef8770 <col:48, col:50> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5590ecef8280 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B7.13] * [B7.15]
  17: BinaryOperator 0x5590ecef87e8 <./luaconf.h:537:27, col:50> 'double' '-'
|-ImplicitCastExpr 0x5590ecef87d0 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590ecef80d8 <col:27, col:29> 'lua_Number':'double' lvalue
|   `-DeclRefExpr 0x5590ecef80b0 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
`-BinaryOperator 0x5590ecef87a8 <./luaconf.h:537:33, col:50> 'double' '*'
  |-CallExpr 0x5590ecef8250 <col:33, col:46> 'double'
  | |-ImplicitCastExpr 0x5590ecef8238 <col:33> 'double (*)(double)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x5590ecef80f8 <col:33> 'double (double)' Function 0x5590ecdbb868 'floor' 'double (double)'
  | `-BinaryOperator 0x5590ecef81e0 <col:39, col:45> 'double' '/'
  |   |-ImplicitCastExpr 0x5590ecef81b0 <col:39, col:41> 'lua_Number':'double' <LValueToRValue>
  |   | `-ParenExpr 0x5590ecef8148 <col:39, col:41> 'lua_Number':'double' lvalue
  |   |   `-DeclRefExpr 0x5590ecef8120 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
  |   `-ImplicitCastExpr 0x5590ecef81c8 <./luaconf.h:537:43, col:45> 'lua_Number':'double' <LValueToRValue>
  |     `-ParenExpr 0x5590ecef8190 <col:43, col:45> 'lua_Number':'double' lvalue
  |       `-DeclRefExpr 0x5590ecef8168 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
  `-ImplicitCastExpr 0x5590ecef8790 <./luaconf.h:537:48, col:50> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x5590ecef8770 <col:48, col:50> 'lua_Number':'double' lvalue
      `-DeclRefExpr 0x5590ecef8280 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B7.5] - [B7.16]
  18: DeclRefExpr 0x5590ecef8000 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
i_o
  19: ImplicitCastExpr 0x5590ecef8028 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef8000 <col:24> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
[B7.18] (ImplicitCastExpr, LValueToRValue, TValue *)
  20: MemberExpr 0x5590ecef8040 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef8028 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef8000 <col:24> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
[B7.19]->value
  21: MemberExpr 0x5590ecef8078 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef8040 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef8028 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef8000 <col:24> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
[B7.20].n
  22: BinaryOperator 0x5590ecef8850 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5590ecef8078 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
| `-MemberExpr 0x5590ecef8040 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef8028 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef8000 <col:24> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef8830 <col:37, col:39> 'double'
  `-ParenExpr 0x5590ecef8810 <./luaconf.h:537:26, col:51> 'double'
    `-BinaryOperator 0x5590ecef87e8 <col:27, col:50> 'double' '-'
      |-ImplicitCastExpr 0x5590ecef87d0 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
      | `-ParenExpr 0x5590ecef80d8 <col:27, col:29> 'lua_Number':'double' lvalue
      |   `-DeclRefExpr 0x5590ecef80b0 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
      `-BinaryOperator 0x5590ecef87a8 <./luaconf.h:537:33, col:50> 'double' '*'
        |-CallExpr 0x5590ecef8250 <col:33, col:46> 'double'
        | |-ImplicitCastExpr 0x5590ecef8238 <col:33> 'double (*)(double)' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x5590ecef80f8 <col:33> 'double (double)' Function 0x5590ecdbb868 'floor' 'double (double)'
        | `-BinaryOperator 0x5590ecef81e0 <col:39, col:45> 'double' '/'
        |   |-ImplicitCastExpr 0x5590ecef81b0 <col:39, col:41> 'lua_Number':'double' <LValueToRValue>
        |   | `-ParenExpr 0x5590ecef8148 <col:39, col:41> 'lua_Number':'double' lvalue
        |   |   `-DeclRefExpr 0x5590ecef8120 <lvm.c:329:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
        |   `-ImplicitCastExpr 0x5590ecef81c8 <./luaconf.h:537:43, col:45> 'lua_Number':'double' <LValueToRValue>
        |     `-ParenExpr 0x5590ecef8190 <col:43, col:45> 'lua_Number':'double' lvalue
        |       `-DeclRefExpr 0x5590ecef8168 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
        `-ImplicitCastExpr 0x5590ecef8790 <./luaconf.h:537:48, col:50> 'lua_Number':'double' <LValueToRValue>
          `-ParenExpr 0x5590ecef8770 <col:48, col:50> 'lua_Number':'double' lvalue
            `-DeclRefExpr 0x5590ecef8280 <lvm.c:329:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B7.21] = (([B7.17]))
  23: IntegerLiteral 0x5590ecef88f0 <./lua.h:77:22> 'int' 3
3
  24: DeclRefExpr 0x5590ecef8878 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
i_o
  25: ImplicitCastExpr 0x5590ecef88a0 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef8878 <col:42> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
[B7.24] (ImplicitCastExpr, LValueToRValue, TValue *)
  26: MemberExpr 0x5590ecef88b8 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef88a0 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef8878 <col:42> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
[B7.25]->tt
  27: BinaryOperator 0x5590ecef8910 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5590ecef88b8 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef88a0 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef8878 <col:42> 'TValue *' lvalue Var 0x5590ecef7f28 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef88f0 <./lua.h:77:22> 'int' 3
[B7.26] = [B7.23]
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B8]
  case TM_DIV:
   1: DeclRefExpr 0x5590ecef7b40 <lvm.c:328:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
   2: ImplicitCastExpr 0x5590ecef7b88 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef7b68 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecef7b40 <lvm.c:328:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
([B8.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5590ecef7ba0 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5590ecef7ae0 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecef7b88 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef7b68 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecef7b40 <lvm.c:328:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
TValue *i_o = (ra);
   4: DeclRefExpr 0x5590ecef7c68 <lvm.c:328:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   5: ImplicitCastExpr 0x5590ecef7cf8 <./luaconf.h:536:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef7c90 <col:27, col:29> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef7c68 <lvm.c:328:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
([B8.4]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590ecef7cb0 <lvm.c:328:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
nc
   7: ImplicitCastExpr 0x5590ecef7d10 <./luaconf.h:536:31, col:33> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef7cd8 <col:31, col:33> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef7cb0 <lvm.c:328:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
([B8.6]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   8: BinaryOperator 0x5590ecef7d28 <./luaconf.h:536:27, col:33> 'double' '/'
|-ImplicitCastExpr 0x5590ecef7cf8 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590ecef7c90 <col:27, col:29> 'lua_Number':'double' lvalue
|   `-DeclRefExpr 0x5590ecef7c68 <lvm.c:328:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
`-ImplicitCastExpr 0x5590ecef7d10 <./luaconf.h:536:31, col:33> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590ecef7cd8 <col:31, col:33> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5590ecef7cb0 <lvm.c:328:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B8.5] / [B8.7]
   9: DeclRefExpr 0x5590ecef7bb8 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x5590ecef7be0 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef7bb8 <col:24> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
[B8.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x5590ecef7bf8 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef7be0 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef7bb8 <col:24> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
[B8.10]->value
  12: MemberExpr 0x5590ecef7c30 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef7bf8 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef7be0 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef7bb8 <col:24> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
[B8.11].n
  13: BinaryOperator 0x5590ecef7d90 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5590ecef7c30 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
| `-MemberExpr 0x5590ecef7bf8 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef7be0 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef7bb8 <col:24> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef7d70 <col:37, col:39> 'double'
  `-ParenExpr 0x5590ecef7d50 <./luaconf.h:536:26, col:34> 'double'
    `-BinaryOperator 0x5590ecef7d28 <col:27, col:33> 'double' '/'
      |-ImplicitCastExpr 0x5590ecef7cf8 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
      | `-ParenExpr 0x5590ecef7c90 <col:27, col:29> 'lua_Number':'double' lvalue
      |   `-DeclRefExpr 0x5590ecef7c68 <lvm.c:328:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
      `-ImplicitCastExpr 0x5590ecef7d10 <./luaconf.h:536:31, col:33> 'lua_Number':'double' <LValueToRValue>
        `-ParenExpr 0x5590ecef7cd8 <col:31, col:33> 'lua_Number':'double' lvalue
          `-DeclRefExpr 0x5590ecef7cb0 <lvm.c:328:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B8.12] = (([B8.8]))
  14: IntegerLiteral 0x5590ecef7e30 <./lua.h:77:22> 'int' 3
3
  15: DeclRefExpr 0x5590ecef7db8 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x5590ecef7de0 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef7db8 <col:42> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
[B8.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x5590ecef7df8 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef7de0 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef7db8 <col:42> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
[B8.16]->tt
  18: BinaryOperator 0x5590ecef7e50 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5590ecef7df8 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef7de0 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef7db8 <col:42> 'TValue *' lvalue Var 0x5590ecef7ae0 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef7e30 <./lua.h:77:22> 'int' 3
[B8.17] = [B8.14]
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B9]
  case TM_MUL:
   1: DeclRefExpr 0x5590ecef76f8 <lvm.c:327:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
   2: ImplicitCastExpr 0x5590ecef7740 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef7720 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecef76f8 <lvm.c:327:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
([B9.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5590ecef7758 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5590ecef7698 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecef7740 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef7720 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecef76f8 <lvm.c:327:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
TValue *i_o = (ra);
   4: DeclRefExpr 0x5590ecef7820 <lvm.c:327:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   5: ImplicitCastExpr 0x5590ecef78b0 <./luaconf.h:535:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef7848 <col:27, col:29> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef7820 <lvm.c:327:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
([B9.4]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590ecef7868 <lvm.c:327:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
nc
   7: ImplicitCastExpr 0x5590ecef78c8 <./luaconf.h:535:31, col:33> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef7890 <col:31, col:33> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef7868 <lvm.c:327:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
([B9.6]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   8: BinaryOperator 0x5590ecef78e0 <./luaconf.h:535:27, col:33> 'double' '*'
|-ImplicitCastExpr 0x5590ecef78b0 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590ecef7848 <col:27, col:29> 'lua_Number':'double' lvalue
|   `-DeclRefExpr 0x5590ecef7820 <lvm.c:327:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
`-ImplicitCastExpr 0x5590ecef78c8 <./luaconf.h:535:31, col:33> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590ecef7890 <col:31, col:33> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5590ecef7868 <lvm.c:327:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B9.5] * [B9.7]
   9: DeclRefExpr 0x5590ecef7770 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x5590ecef7798 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef7770 <col:24> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
[B9.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x5590ecef77b0 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef7798 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef7770 <col:24> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
[B9.10]->value
  12: MemberExpr 0x5590ecef77e8 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef77b0 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef7798 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef7770 <col:24> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
[B9.11].n
  13: BinaryOperator 0x5590ecef7948 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5590ecef77e8 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
| `-MemberExpr 0x5590ecef77b0 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef7798 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef7770 <col:24> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef7928 <col:37, col:39> 'double'
  `-ParenExpr 0x5590ecef7908 <./luaconf.h:535:26, col:34> 'double'
    `-BinaryOperator 0x5590ecef78e0 <col:27, col:33> 'double' '*'
      |-ImplicitCastExpr 0x5590ecef78b0 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
      | `-ParenExpr 0x5590ecef7848 <col:27, col:29> 'lua_Number':'double' lvalue
      |   `-DeclRefExpr 0x5590ecef7820 <lvm.c:327:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
      `-ImplicitCastExpr 0x5590ecef78c8 <./luaconf.h:535:31, col:33> 'lua_Number':'double' <LValueToRValue>
        `-ParenExpr 0x5590ecef7890 <col:31, col:33> 'lua_Number':'double' lvalue
          `-DeclRefExpr 0x5590ecef7868 <lvm.c:327:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B9.12] = (([B9.8]))
  14: IntegerLiteral 0x5590ecef79e8 <./lua.h:77:22> 'int' 3
3
  15: DeclRefExpr 0x5590ecef7970 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x5590ecef7998 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef7970 <col:42> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
[B9.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x5590ecef79b0 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef7998 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef7970 <col:42> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
[B9.16]->tt
  18: BinaryOperator 0x5590ecef7a08 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5590ecef79b0 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef7998 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef7970 <col:42> 'TValue *' lvalue Var 0x5590ecef7698 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef79e8 <./lua.h:77:22> 'int' 3
[B9.17] = [B9.14]
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B10]
  case TM_SUB:
   1: DeclRefExpr 0x5590ecef72b0 <lvm.c:326:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
   2: ImplicitCastExpr 0x5590ecef72f8 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef72d8 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecef72b0 <lvm.c:326:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
([B10.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5590ecef7310 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5590ecef7250 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecef72f8 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef72d8 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecef72b0 <lvm.c:326:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
TValue *i_o = (ra);
   4: DeclRefExpr 0x5590ecef73d8 <lvm.c:326:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   5: ImplicitCastExpr 0x5590ecef7468 <./luaconf.h:534:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef7400 <col:27, col:29> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef73d8 <lvm.c:326:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
([B10.4]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590ecef7420 <lvm.c:326:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
nc
   7: ImplicitCastExpr 0x5590ecef7480 <./luaconf.h:534:31, col:33> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef7448 <col:31, col:33> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef7420 <lvm.c:326:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
([B10.6]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   8: BinaryOperator 0x5590ecef7498 <./luaconf.h:534:27, col:33> 'double' '-'
|-ImplicitCastExpr 0x5590ecef7468 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590ecef7400 <col:27, col:29> 'lua_Number':'double' lvalue
|   `-DeclRefExpr 0x5590ecef73d8 <lvm.c:326:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
`-ImplicitCastExpr 0x5590ecef7480 <./luaconf.h:534:31, col:33> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590ecef7448 <col:31, col:33> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5590ecef7420 <lvm.c:326:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B10.5] - [B10.7]
   9: DeclRefExpr 0x5590ecef7328 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x5590ecef7350 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef7328 <col:24> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
[B10.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x5590ecef7368 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef7350 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef7328 <col:24> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
[B10.10]->value
  12: MemberExpr 0x5590ecef73a0 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef7368 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef7350 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef7328 <col:24> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
[B10.11].n
  13: BinaryOperator 0x5590ecef7500 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5590ecef73a0 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
| `-MemberExpr 0x5590ecef7368 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef7350 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef7328 <col:24> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef74e0 <col:37, col:39> 'double'
  `-ParenExpr 0x5590ecef74c0 <./luaconf.h:534:26, col:34> 'double'
    `-BinaryOperator 0x5590ecef7498 <col:27, col:33> 'double' '-'
      |-ImplicitCastExpr 0x5590ecef7468 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
      | `-ParenExpr 0x5590ecef7400 <col:27, col:29> 'lua_Number':'double' lvalue
      |   `-DeclRefExpr 0x5590ecef73d8 <lvm.c:326:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
      `-ImplicitCastExpr 0x5590ecef7480 <./luaconf.h:534:31, col:33> 'lua_Number':'double' <LValueToRValue>
        `-ParenExpr 0x5590ecef7448 <col:31, col:33> 'lua_Number':'double' lvalue
          `-DeclRefExpr 0x5590ecef7420 <lvm.c:326:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B10.12] = (([B10.8]))
  14: IntegerLiteral 0x5590ecef75a0 <./lua.h:77:22> 'int' 3
3
  15: DeclRefExpr 0x5590ecef7528 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x5590ecef7550 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef7528 <col:42> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
[B10.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x5590ecef7568 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef7550 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef7528 <col:42> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
[B10.16]->tt
  18: BinaryOperator 0x5590ecef75c0 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5590ecef7568 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef7550 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef7528 <col:42> 'TValue *' lvalue Var 0x5590ecef7250 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef75a0 <./lua.h:77:22> 'int' 3
[B10.17] = [B10.14]
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B11]
  case TM_ADD:
   1: DeclRefExpr 0x5590ecef6e68 <lvm.c:325:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
ra
   2: ImplicitCastExpr 0x5590ecef6eb0 <./lobject.h:120:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecef6e90 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecef6e68 <lvm.c:325:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
([B11.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x5590ecef6ec8 <./lobject.h:120:5, col:22>col:13
`-VarDecl 0x5590ecef6e08 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecef6eb0 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecef6e90 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecef6e68 <lvm.c:325:30> 'StkId':'TValue *' lvalue ParmVar 0x5590ecef5db8 'ra' 'StkId':'TValue *'
TValue *i_o = (ra);
   4: DeclRefExpr 0x5590ecef6f90 <lvm.c:325:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
nb
   5: ImplicitCastExpr 0x5590ecef7020 <./luaconf.h:533:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef6fb8 <col:27, col:29> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef6f90 <lvm.c:325:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
([B11.4]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590ecef6fd8 <lvm.c:325:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
nc
   7: ImplicitCastExpr 0x5590ecef7038 <./luaconf.h:533:31, col:33> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590ecef7000 <col:31, col:33> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x5590ecef6fd8 <lvm.c:325:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
([B11.6]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   8: BinaryOperator 0x5590ecef7050 <./luaconf.h:533:27, col:33> 'double' '+'
|-ImplicitCastExpr 0x5590ecef7020 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590ecef6fb8 <col:27, col:29> 'lua_Number':'double' lvalue
|   `-DeclRefExpr 0x5590ecef6f90 <lvm.c:325:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
`-ImplicitCastExpr 0x5590ecef7038 <./luaconf.h:533:31, col:33> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590ecef7000 <col:31, col:33> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x5590ecef6fd8 <lvm.c:325:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B11.5] + [B11.7]
   9: DeclRefExpr 0x5590ecef6ee0 <./lobject.h:120:24> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
i_o
  10: ImplicitCastExpr 0x5590ecef6f08 <./lobject.h:120:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef6ee0 <col:24> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
[B11.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: MemberExpr 0x5590ecef6f20 <./lobject.h:120:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecef6f08 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef6ee0 <col:24> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
[B11.10]->value
  12: MemberExpr 0x5590ecef6f58 <./lobject.h:120:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590ecef6f20 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecef6f08 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecef6ee0 <col:24> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
[B11.11].n
  13: BinaryOperator 0x5590ecef70b8 <./lobject.h:120:24, col:39> 'lua_Number':'double' '='
|-MemberExpr 0x5590ecef6f58 <col:24, col:35> 'lua_Number':'double' lvalue .n 0x5590ece76b58
| `-MemberExpr 0x5590ecef6f20 <col:24, col:29> 'Value':'Value' lvalue ->value 0x5590ece76da0
|   `-ImplicitCastExpr 0x5590ecef6f08 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecef6ee0 <col:24> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
`-ParenExpr 0x5590ecef7098 <col:37, col:39> 'double'
  `-ParenExpr 0x5590ecef7078 <./luaconf.h:533:26, col:34> 'double'
    `-BinaryOperator 0x5590ecef7050 <col:27, col:33> 'double' '+'
      |-ImplicitCastExpr 0x5590ecef7020 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
      | `-ParenExpr 0x5590ecef6fb8 <col:27, col:29> 'lua_Number':'double' lvalue
      |   `-DeclRefExpr 0x5590ecef6f90 <lvm.c:325:46> 'lua_Number':'double' lvalue Var 0x5590ecef6a00 'nb' 'lua_Number':'double'
      `-ImplicitCastExpr 0x5590ecef7038 <./luaconf.h:533:31, col:33> 'lua_Number':'double' <LValueToRValue>
        `-ParenExpr 0x5590ecef7000 <col:31, col:33> 'lua_Number':'double' lvalue
          `-DeclRefExpr 0x5590ecef6fd8 <lvm.c:325:50> 'lua_Number':'double' lvalue Var 0x5590ecef6b78 'nc' 'lua_Number':'double'
[B11.12] = (([B11.8]))
  14: IntegerLiteral 0x5590ecef7158 <./lua.h:77:22> 'int' 3
3
  15: DeclRefExpr 0x5590ecef70e0 <./lobject.h:120:42> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
i_o
  16: ImplicitCastExpr 0x5590ecef7108 <./lobject.h:120:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef70e0 <col:42> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
[B11.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: MemberExpr 0x5590ecef7120 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecef7108 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecef70e0 <col:42> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
[B11.16]->tt
  18: BinaryOperator 0x5590ecef7178 <./lobject.h:120:42, ./lua.h:77:22> 'int' '='
|-MemberExpr 0x5590ecef7120 <./lobject.h:120:42, col:47> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecef7108 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecef70e0 <col:42> 'TValue *' lvalue Var 0x5590ecef6e08 'i_o' 'TValue *'
`-IntegerLiteral 0x5590ecef7158 <./lua.h:77:22> 'int' 3
[B11.17] = [B11.14]
   T: break;
   Preds (1): B3
   Succs (1): B0

 [B12]
   1: DeclRefExpr 0x5590ecef67c0 <lvm.c:322:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
luaV_tonumber
   2: ImplicitCastExpr 0x5590ecef6858 <lvm.c:322:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef67c0 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(const TValue *, TValue *))
   3: DeclRefExpr 0x5590ecef67e8 <lvm.c:322:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
rc
   4: ImplicitCastExpr 0x5590ecef68a8 <lvm.c:322:26> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef67e8 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
[B12.3] (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: DeclRefExpr 0x5590ecef6810 <lvm.c:322:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef6368 'tempc' 'TValue':'struct lua_TValue'
tempc
   6: UnaryOperator 0x5590ecef6838 <lvm.c:322:30, col:31> 'TValue *' prefix '&'
`-DeclRefExpr 0x5590ecef6810 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef6368 'tempc' 'TValue':'struct lua_TValue'
&[B12.5]
   7: CallExpr 0x5590ecef6870 <lvm.c:322:12, col:36> 'const TValue *'
|-ImplicitCastExpr 0x5590ecef6858 <col:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef67c0 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
|-ImplicitCastExpr 0x5590ecef68a8 <col:26> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef67e8 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
`-UnaryOperator 0x5590ecef6838 <col:30, col:31> 'TValue *' prefix '&'
  `-DeclRefExpr 0x5590ecef6810 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef6368 'tempc' 'TValue':'struct lua_TValue'
[B12.2]([B12.4], [B12.6])
   8: DeclRefExpr 0x5590ecef6798 <lvm.c:322:8> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
c
   9: BinaryOperator 0x5590ecef68c0 <lvm.c:322:8, col:36> 'const TValue *' '='
|-DeclRefExpr 0x5590ecef6798 <col:8> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
`-CallExpr 0x5590ecef6870 <col:12, col:36> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef6858 <col:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecef67c0 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
  |-ImplicitCastExpr 0x5590ecef68a8 <col:26> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef67e8 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
  `-UnaryOperator 0x5590ecef6838 <col:30, col:31> 'TValue *' prefix '&'
    `-DeclRefExpr 0x5590ecef6810 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef6368 'tempc' 'TValue':'struct lua_TValue'
[B12.8] = [B12.7]
  10: IntegerLiteral 0x5590ecef6908 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  11: CStyleCastExpr 0x5590ecef6940 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecef6908 <col:24> 'int' 0
(void *)[B12.10] (CStyleCastExpr, NullToPointer, void *)
  12: ImplicitCastExpr 0x5590ecef6988 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
`-ParenExpr 0x5590ecef6968 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecef6940 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecef6908 <col:24> 'int' 0
([B12.11]) (ImplicitCastExpr, BitCast, const TValue *)
  13: BinaryOperator 0x5590ecef69a0 <lvm.c:322:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ParenExpr 0x5590ecef68e8 <lvm.c:322:7, col:37> 'const TValue *'
| `-BinaryOperator 0x5590ecef68c0 <col:8, col:36> 'const TValue *' '='
|   |-DeclRefExpr 0x5590ecef6798 <col:8> 'const TValue *' lvalue Var 0x5590ecef6478 'c' 'const TValue *'
|   `-CallExpr 0x5590ecef6870 <col:12, col:36> 'const TValue *'
|     |-ImplicitCastExpr 0x5590ecef6858 <col:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5590ecef67c0 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
|     |-ImplicitCastExpr 0x5590ecef68a8 <col:26> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590ecef67e8 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e98 'rc' 'const TValue *'
|     `-UnaryOperator 0x5590ecef6838 <col:30, col:31> 'TValue *' prefix '&'
|       `-DeclRefExpr 0x5590ecef6810 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef6368 'tempc' 'TValue':'struct lua_TValue'
`-ImplicitCastExpr 0x5590ecef6988 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
  `-ParenExpr 0x5590ecef6968 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecef6940 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecef6908 <col:24> 'int' 0
([B12.9]) != [B12.12]
   T: if [B13.17] && [B12.13]
   Preds (1): B13
   Succs (2): B3 B2

 [B13]
   1: DeclStmt 0x5590ecf6e1d0 <lvm.c:319:10>col:10
`-VarDecl 0x5590ecef62f8 <col:3, col:10> col:10 used tempb 'TValue':'struct lua_TValue'
TValue tempb;
   2: DeclStmt 0x5590ecf6e1b8 <lvm.c:319:17>col:17
`-VarDecl 0x5590ecef6368 <col:3, col:17> col:17 used tempc 'TValue':'struct lua_TValue'
TValue tempc;
   3: DeclStmt 0x5590ecf6e1a0 <lvm.c:320:17>col:17
`-VarDecl 0x5590ecef6408 <col:3, col:17> col:17 used b 'const TValue *'
const TValue *b;
   4: DeclStmt 0x5590ecf6e188 <lvm.c:320:21>col:21
`-VarDecl 0x5590ecef6478 <col:3, col:21> col:21 used c 'const TValue *'
const TValue *c;
   5: DeclRefExpr 0x5590ecef6530 <lvm.c:321:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
luaV_tonumber
   6: ImplicitCastExpr 0x5590ecef6628 <lvm.c:321:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecef6530 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
[B13.5] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(const TValue *, TValue *))
   7: DeclRefExpr 0x5590ecef6558 <lvm.c:321:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
rb
   8: ImplicitCastExpr 0x5590ecef6678 <lvm.c:321:26> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecef6558 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
[B13.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: DeclRefExpr 0x5590ecef6580 <lvm.c:321:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef62f8 'tempb' 'TValue':'struct lua_TValue'
tempb
  10: UnaryOperator 0x5590ecef65a8 <lvm.c:321:30, col:31> 'TValue *' prefix '&'
`-DeclRefExpr 0x5590ecef6580 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef62f8 'tempb' 'TValue':'struct lua_TValue'
&[B13.9]
  11: CallExpr 0x5590ecef6640 <lvm.c:321:12, col:36> 'const TValue *'
|-ImplicitCastExpr 0x5590ecef6628 <col:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecef6530 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
|-ImplicitCastExpr 0x5590ecef6678 <col:26> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecef6558 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
`-UnaryOperator 0x5590ecef65a8 <col:30, col:31> 'TValue *' prefix '&'
  `-DeclRefExpr 0x5590ecef6580 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef62f8 'tempb' 'TValue':'struct lua_TValue'
[B13.6]([B13.8], [B13.10])
  12: DeclRefExpr 0x5590ecef6508 <lvm.c:321:8> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
b
  13: BinaryOperator 0x5590ecef6690 <lvm.c:321:8, col:36> 'const TValue *' '='
|-DeclRefExpr 0x5590ecef6508 <col:8> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
`-CallExpr 0x5590ecef6640 <col:12, col:36> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecef6628 <col:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecef6530 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
  |-ImplicitCastExpr 0x5590ecef6678 <col:26> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecef6558 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
  `-UnaryOperator 0x5590ecef65a8 <col:30, col:31> 'TValue *' prefix '&'
    `-DeclRefExpr 0x5590ecef6580 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef62f8 'tempb' 'TValue':'struct lua_TValue'
[B13.12] = [B13.11]
  14: IntegerLiteral 0x5590ecef66d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  15: CStyleCastExpr 0x5590ecef6710 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecef66d8 <col:24> 'int' 0
(void *)[B13.14] (CStyleCastExpr, NullToPointer, void *)
  16: ImplicitCastExpr 0x5590ecef6758 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
`-ParenExpr 0x5590ecef6738 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecef6710 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecef66d8 <col:24> 'int' 0
([B13.15]) (ImplicitCastExpr, BitCast, const TValue *)
  17: BinaryOperator 0x5590ecef6770 <lvm.c:321:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '!='
|-ParenExpr 0x5590ecef66b8 <lvm.c:321:7, col:37> 'const TValue *'
| `-BinaryOperator 0x5590ecef6690 <col:8, col:36> 'const TValue *' '='
|   |-DeclRefExpr 0x5590ecef6508 <col:8> 'const TValue *' lvalue Var 0x5590ecef6408 'b' 'const TValue *'
|   `-CallExpr 0x5590ecef6640 <col:12, col:36> 'const TValue *'
|     |-ImplicitCastExpr 0x5590ecef6628 <col:12> 'const TValue *(*)(const TValue *, TValue *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5590ecef6530 <col:12> 'const TValue *(const TValue *, TValue *)' Function 0x5590ececfd58 'luaV_tonumber' 'const TValue *(const TValue *, TValue *)'
|     |-ImplicitCastExpr 0x5590ecef6678 <col:26> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590ecef6558 <col:26> 'const TValue *' lvalue ParmVar 0x5590ecef5e28 'rb' 'const TValue *'
|     `-UnaryOperator 0x5590ecef65a8 <col:30, col:31> 'TValue *' prefix '&'
|       `-DeclRefExpr 0x5590ecef6580 <col:31> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecef62f8 'tempb' 'TValue':'struct lua_TValue'
`-ImplicitCastExpr 0x5590ecef6758 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
  `-ParenExpr 0x5590ecef6738 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecef6710 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecef66d8 <col:24> 'int' 0
([B13.13]) != [B13.16]
   T: [B13.17] && ...
   Preds (1): B14
   Succs (2): B12 B2

 [B0 (EXIT)]
   Preds (10): B1 B2 B4 B5 B6 B7 B8 B9
      B10 B11
