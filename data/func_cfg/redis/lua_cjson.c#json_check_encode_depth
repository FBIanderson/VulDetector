static void json_check_encode_depth(lua_State *l, json_config_t *cfg, int current_depth, strbuf_t *json)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x563107e0fc90 <lua_cjson.c:555:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x563107d95e58 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x563107e0fd58 <lua_cjson.c:555:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0fc90 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x563107d95e58 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x563107e0fcb8 <lua_cjson.c:555:16> 'lua_State *' lvalue ParmVar 0x563107e0f550 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e0fdb0 <lua_cjson.c:555:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0fcb8 <col:16> 'lua_State *' lvalue ParmVar 0x563107e0f550 'l' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x563107e0fce0 <lua_cjson.c:555:19> 'char [41]' lvalue "Cannot serialise, excessive nesting (%d)"
"Cannot serialise, excessive nesting (%d)"
   6: ImplicitCastExpr 0x563107e0fdc8 <lua_cjson.c:555:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e0fce0 <col:19> 'char [41]' lvalue "Cannot serialise, excessive nesting (%d)"
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x563107e0fde0 <lua_cjson.c:555:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e0fdc8 <col:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e0fce0 <col:19> 'char [41]' lvalue "Cannot serialise, excessive nesting (%d)"
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x563107e0fd30 <lua_cjson.c:556:16> 'int' lvalue ParmVar 0x563107e0f638 'current_depth' 'int'
current_depth
   9: ImplicitCastExpr 0x563107e0fdf8 <lua_cjson.c:556:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e0fd30 <col:16> 'int' lvalue ParmVar 0x563107e0f638 'current_depth' 'int'
[B1.8] (ImplicitCastExpr, LValueToRValue, int)
  10: CallExpr 0x563107e0fd70 <lua_cjson.c:555:5, line:556:29> 'int'
|-ImplicitCastExpr 0x563107e0fd58 <line:555:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0fc90 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x563107d95e58 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x563107e0fdb0 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0fcb8 <col:16> 'lua_State *' lvalue ParmVar 0x563107e0f550 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e0fde0 <col:19> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e0fdc8 <col:19> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e0fce0 <col:19> 'char [41]' lvalue "Cannot serialise, excessive nesting (%d)"
`-ImplicitCastExpr 0x563107e0fdf8 <line:556:16> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e0fd30 <col:16> 'int' lvalue ParmVar 0x563107e0f638 'current_depth' 'int'
[B1.2]([B1.4], [B1.7], [B1.9])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x563107e0fba8 <lua_cjson.c:553:9> 'void (strbuf_t *)' Function 0x563107de7db0 'strbuf_free' 'void (strbuf_t *)'
strbuf_free
   2: ImplicitCastExpr 0x563107e0fbf8 <lua_cjson.c:553:9> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0fba8 <col:9> 'void (strbuf_t *)' Function 0x563107de7db0 'strbuf_free' 'void (strbuf_t *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *))
   3: DeclRefExpr 0x563107e0fbd0 <lua_cjson.c:553:21> 'strbuf_t *' lvalue ParmVar 0x563107e0f6a8 'json' 'strbuf_t *'
json
   4: ImplicitCastExpr 0x563107e0fc40 <lua_cjson.c:553:21> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0fbd0 <col:21> 'strbuf_t *' lvalue ParmVar 0x563107e0f6a8 'json' 'strbuf_t *'
[B2.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: CallExpr 0x563107e0fc10 <lua_cjson.c:553:9, col:25> 'void'
|-ImplicitCastExpr 0x563107e0fbf8 <col:9> 'void (*)(strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0fba8 <col:9> 'void (strbuf_t *)' Function 0x563107de7db0 'strbuf_free' 'void (strbuf_t *)'
`-ImplicitCastExpr 0x563107e0fc40 <col:21> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0fbd0 <col:21> 'strbuf_t *' lvalue ParmVar 0x563107e0f6a8 'json' 'strbuf_t *'
[B2.2]([B2.4])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x563107e0faf8 <lua_cjson.c:552:10> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
cfg
   2: ImplicitCastExpr 0x563107e0fb20 <lua_cjson.c:552:10> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0faf8 <col:10> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
[B3.1] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   3: MemberExpr 0x563107e0fb38 <lua_cjson.c:552:10, col:15> 'int' lvalue ->encode_keep_buffer 0x563107df1280
`-ImplicitCastExpr 0x563107e0fb20 <col:10> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0faf8 <col:10> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
[B3.2]->encode_keep_buffer
   4: ImplicitCastExpr 0x563107e0fb70 <lua_cjson.c:552:10, col:15> 'int' <LValueToRValue>
`-MemberExpr 0x563107e0fb38 <col:10, col:15> 'int' lvalue ->encode_keep_buffer 0x563107df1280
  `-ImplicitCastExpr 0x563107e0fb20 <col:10> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e0faf8 <col:10> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: UnaryOperator 0x563107e0fb88 <lua_cjson.c:552:9, col:15> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e0fb70 <col:10, col:15> 'int' <LValueToRValue>
  `-MemberExpr 0x563107e0fb38 <col:10, col:15> 'int' lvalue ->encode_keep_buffer 0x563107df1280
    `-ImplicitCastExpr 0x563107e0fb20 <col:10> 'json_config_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e0faf8 <col:10> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
![B3.4]
   T: if [B3.5]
   Preds (2): B5 B6
   Succs (2): B2 B1

 [B4]
   1: ReturnStmt 0x563107e0faa8 <lua_cjson.c:550:9>
return;
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x563107e0f9a8 <lua_cjson.c:549:51> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d512e8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_checkstack
   2: ImplicitCastExpr 0x563107e0fa18 <lua_cjson.c:549:51> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0f9a8 <col:51> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d512e8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e0f9d0 <lua_cjson.c:549:66> 'lua_State *' lvalue ParmVar 0x563107e0f550 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e0fa68 <lua_cjson.c:549:66> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0f9d0 <col:66> 'lua_State *' lvalue ParmVar 0x563107e0f550 'l' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e0f9f8 <lua_cjson.c:549:69> 'int' 3
3
   6: CallExpr 0x563107e0fa30 <lua_cjson.c:549:51, col:70> 'int'
|-ImplicitCastExpr 0x563107e0fa18 <col:51> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0f9a8 <col:51> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d512e8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e0fa68 <col:66> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0f9d0 <col:66> 'lua_State *' lvalue ParmVar 0x563107e0f550 'l' 'lua_State *'
`-IntegerLiteral 0x563107e0f9f8 <col:69> 'int' 3
[B5.2]([B5.4], [B5.5])
   T: if [B6.7] && [B5.6]
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x563107e0f8b0 <lua_cjson.c:549:9> 'int' lvalue ParmVar 0x563107e0f638 'current_depth' 'int'
current_depth
   2: ImplicitCastExpr 0x563107e0f950 <lua_cjson.c:549:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e0f8b0 <col:9> 'int' lvalue ParmVar 0x563107e0f638 'current_depth' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x563107e0f8d8 <lua_cjson.c:549:26> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
cfg
   4: ImplicitCastExpr 0x563107e0f900 <lua_cjson.c:549:26> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0f8d8 <col:26> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
[B6.3] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   5: MemberExpr 0x563107e0f918 <lua_cjson.c:549:26, col:31> 'int' lvalue ->encode_max_depth 0x563107df1160
`-ImplicitCastExpr 0x563107e0f900 <col:26> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0f8d8 <col:26> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
[B6.4]->encode_max_depth
   6: ImplicitCastExpr 0x563107e0f968 <lua_cjson.c:549:26, col:31> 'int' <LValueToRValue>
`-MemberExpr 0x563107e0f918 <col:26, col:31> 'int' lvalue ->encode_max_depth 0x563107df1160
  `-ImplicitCastExpr 0x563107e0f900 <col:26> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e0f8d8 <col:26> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
[B6.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x563107e0f980 <lua_cjson.c:549:9, col:31> 'int' '<='
|-ImplicitCastExpr 0x563107e0f950 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e0f8b0 <col:9> 'int' lvalue ParmVar 0x563107e0f638 'current_depth' 'int'
`-ImplicitCastExpr 0x563107e0f968 <col:26, col:31> 'int' <LValueToRValue>
  `-MemberExpr 0x563107e0f918 <col:26, col:31> 'int' lvalue ->encode_max_depth 0x563107df1160
    `-ImplicitCastExpr 0x563107e0f900 <col:26> 'json_config_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e0f8d8 <col:26> 'json_config_t *' lvalue ParmVar 0x563107e0f5c0 'cfg' 'json_config_t *'
[B6.2] <= [B6.6]
   T: [B6.7] && ...
   Preds (1): B7
   Succs (2): B5 B3

 [B0 (EXIT)]
   Preds (2): B1 B4
