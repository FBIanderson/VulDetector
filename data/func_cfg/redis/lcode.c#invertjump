static void invertjump(FuncState *fs, expdesc *e)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768d8210 <lcode.c:517:21> 'Instruction *(FuncState *, int)' Function 0x5637768b3d10 'getjumpcontrol' 'Instruction *(FuncState *, int)'
getjumpcontrol
   2: ImplicitCastExpr 0x5637768d8348 <lcode.c:517:21> 'Instruction *(*)(FuncState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768d8210 <col:21> 'Instruction *(FuncState *, int)' Function 0x5637768b3d10 'getjumpcontrol' 'Instruction *(FuncState *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, Instruction *(*)(FuncState *, int))
   3: DeclRefExpr 0x5637768d8238 <lcode.c:517:36> 'FuncState *' lvalue ParmVar 0x5637768d7ff0 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768d8398 <lcode.c:517:36> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768d8238 <col:36> 'FuncState *' lvalue ParmVar 0x5637768d7ff0 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: DeclRefExpr 0x5637768d8260 <lcode.c:517:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
e
   6: ImplicitCastExpr 0x5637768d8288 <lcode.c:517:40> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x5637768d8260 <col:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
[B1.5] (ImplicitCastExpr, LValueToRValue, expdesc *)
   7: MemberExpr 0x5637768d82a0 <lcode.c:517:40, col:43> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
`-ImplicitCastExpr 0x5637768d8288 <col:40> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d8260 <col:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
[B1.6]->u
   8: MemberExpr 0x5637768d82d8 <lcode.c:517:40, col:45> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
`-MemberExpr 0x5637768d82a0 <col:40, col:43> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
  `-ImplicitCastExpr 0x5637768d8288 <col:40> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x5637768d8260 <col:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
[B1.7].s
   9: MemberExpr 0x5637768d8310 <lcode.c:517:40, col:47> 'int' lvalue .info 0x56377687d5f8
`-MemberExpr 0x5637768d82d8 <col:40, col:45> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
  `-MemberExpr 0x5637768d82a0 <col:40, col:43> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
    `-ImplicitCastExpr 0x5637768d8288 <col:40> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d8260 <col:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
[B1.8].info
  10: ImplicitCastExpr 0x5637768d83b0 <lcode.c:517:40, col:47> 'int' <LValueToRValue>
`-MemberExpr 0x5637768d8310 <col:40, col:47> 'int' lvalue .info 0x56377687d5f8
  `-MemberExpr 0x5637768d82d8 <col:40, col:45> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
    `-MemberExpr 0x5637768d82a0 <col:40, col:43> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
      `-ImplicitCastExpr 0x5637768d8288 <col:40> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x5637768d8260 <col:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
[B1.9] (ImplicitCastExpr, LValueToRValue, int)
  11: CallExpr 0x5637768d8360 <lcode.c:517:21, col:51> 'Instruction *'
|-ImplicitCastExpr 0x5637768d8348 <col:21> 'Instruction *(*)(FuncState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768d8210 <col:21> 'Instruction *(FuncState *, int)' Function 0x5637768b3d10 'getjumpcontrol' 'Instruction *(FuncState *, int)'
|-ImplicitCastExpr 0x5637768d8398 <col:36> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768d8238 <col:36> 'FuncState *' lvalue ParmVar 0x5637768d7ff0 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768d83b0 <col:40, col:47> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768d8310 <col:40, col:47> 'int' lvalue .info 0x56377687d5f8
    `-MemberExpr 0x5637768d82d8 <col:40, col:45> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
      `-MemberExpr 0x5637768d82a0 <col:40, col:43> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
        `-ImplicitCastExpr 0x5637768d8288 <col:40> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x5637768d8260 <col:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
[B1.2]([B1.4], [B1.10])
  12: DeclStmt 0x5637768d83c8 <lcode.c:517:3, col:52>col:16
`-VarDecl 0x5637768d81b0 <col:3, col:51> col:16 used pc 'Instruction *' cinit
  `-CallExpr 0x5637768d8360 <col:21, col:51> 'Instruction *'
    |-ImplicitCastExpr 0x5637768d8348 <col:21> 'Instruction *(*)(FuncState *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5637768d8210 <col:21> 'Instruction *(FuncState *, int)' Function 0x5637768b3d10 'getjumpcontrol' 'Instruction *(FuncState *, int)'
    |-ImplicitCastExpr 0x5637768d8398 <col:36> 'FuncState *' <LValueToRValue>
    | `-DeclRefExpr 0x5637768d8238 <col:36> 'FuncState *' lvalue ParmVar 0x5637768d7ff0 'fs' 'FuncState *'
    `-ImplicitCastExpr 0x5637768d83b0 <col:40, col:47> 'int' <LValueToRValue>
      `-MemberExpr 0x5637768d8310 <col:40, col:47> 'int' lvalue .info 0x56377687d5f8
        `-MemberExpr 0x5637768d82d8 <col:40, col:45> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x56377687d6f0
          `-MemberExpr 0x5637768d82a0 <col:40, col:43> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x56377687d830
            `-ImplicitCastExpr 0x5637768d8288 <col:40> 'expdesc *' <LValueToRValue>
              `-DeclRefExpr 0x5637768d8260 <col:40> 'expdesc *' lvalue ParmVar 0x5637768d8060 'e' 'expdesc *'
Instruction *pc = getjumpcontrol(fs, e->u.s.info);
  13: IntegerLiteral 0x5637768d83e0 <./llimits.h:62:31> 'int' 0
0
  14: CStyleCastExpr 0x5637768d8410 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5637768d83e0 <col:31> 'int' 0
(void)[B1.13] (CStyleCastExpr, ToVoid, void)
  15: DeclRefExpr 0x5637768d84d8 <lcode.c:520:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
pc
  16: ImplicitCastExpr 0x5637768d8500 <lcode.c:520:13> 'Instruction *' <LValueToRValue>
`-DeclRefExpr 0x5637768d84d8 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
[B1.15] (ImplicitCastExpr, LValueToRValue, Instruction *)
  17: UnaryOperator 0x5637768d8518 <lcode.c:520:12, col:13> 'Instruction':'unsigned int' lvalue prefix '*'
`-ImplicitCastExpr 0x5637768d8500 <col:13> 'Instruction *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d84d8 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
*[B1.16]
  18: ImplicitCastExpr 0x5637768d87a8 <./lopcodes.h:85:32, col:34> 'Instruction':'unsigned int' <LValueToRValue>
`-ParenExpr 0x5637768d8538 <col:32, col:34> 'Instruction':'unsigned int' lvalue
  `-UnaryOperator 0x5637768d8518 <lcode.c:520:12, col:13> 'Instruction':'unsigned int' lvalue prefix '*'
    `-ImplicitCastExpr 0x5637768d8500 <col:13> 'Instruction *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d84d8 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
([B1.17]) (ImplicitCastExpr, LValueToRValue, Instruction)
  19: IntegerLiteral 0x5637768d8558 <./lopcodes.h:71:39> 'int' 0
0
  20: CStyleCastExpr 0x5637768d8588 <./lopcodes.h:71:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
(Instruction)[B1.19] (CStyleCastExpr, IntegralCast, Instruction)
  21: UnaryOperator 0x5637768d85b0 <./lopcodes.h:71:25, col:39> 'Instruction':'unsigned int' prefix '~'
`-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
~[B1.20]
  22: IntegerLiteral 0x5637768d85f0 <./lopcodes.h:40:17> 'int' 8
8
  23: BinaryOperator 0x5637768d8610 <./lopcodes.h:71:24, line:40:17> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x5637768d85d0 <line:71:24, col:40> 'Instruction':'unsigned int'
| `-UnaryOperator 0x5637768d85b0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|   `-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
`-IntegerLiteral 0x5637768d85f0 <line:40:17> 'int' 8
([B1.21]) << [B1.22]
  24: UnaryOperator 0x5637768d8658 <./lopcodes.h:71:22, col:44> 'Instruction':'unsigned int' prefix '~'
`-ParenExpr 0x5637768d8638 <col:23, col:44> 'Instruction':'unsigned int'
  `-BinaryOperator 0x5637768d8610 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x5637768d85d0 <line:71:24, col:40> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x5637768d85b0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |   `-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
    `-IntegerLiteral 0x5637768d85f0 <line:40:17> 'int' 8
~([B1.23])
  25: IntegerLiteral 0x5637768d8698 <./lopcodes.h:44:17> 'int' 0
0
  26: IntegerLiteral 0x5637768d86b8 <./lopcodes.h:42:18> 'int' 6
6
  27: BinaryOperator 0x5637768d86d8 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x5637768d8698 <line:44:17> 'int' 0
`-IntegerLiteral 0x5637768d86b8 <line:42:18> 'int' 6
[B1.25] + [B1.26]
  28: BinaryOperator 0x5637768d8720 <./lopcodes.h:71:21, line:45:33> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x5637768d8678 <line:71:21, col:45> 'Instruction':'unsigned int'
| `-UnaryOperator 0x5637768d8658 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|   `-ParenExpr 0x5637768d8638 <col:23, col:44> 'Instruction':'unsigned int'
|     `-BinaryOperator 0x5637768d8610 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
|       |-ParenExpr 0x5637768d85d0 <line:71:24, col:40> 'Instruction':'unsigned int'
|       | `-UnaryOperator 0x5637768d85b0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|       |   `-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
|       `-IntegerLiteral 0x5637768d85f0 <line:40:17> 'int' 8
`-ParenExpr 0x5637768d8700 <line:45:16, col:33> 'int'
  `-BinaryOperator 0x5637768d86d8 <line:44:17, line:42:18> 'int' '+'
    |-IntegerLiteral 0x5637768d8698 <line:44:17> 'int' 0
    `-IntegerLiteral 0x5637768d86b8 <line:42:18> 'int' 6
([B1.24]) << ([B1.27])
  29: UnaryOperator 0x5637768d8768 <./lopcodes.h:74:21, line:71:49> 'Instruction':'unsigned int' prefix '~'
`-ParenExpr 0x5637768d8748 <col:20, col:49> 'Instruction':'unsigned int'
  `-BinaryOperator 0x5637768d8720 <col:21, line:45:33> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x5637768d8678 <line:71:21, col:45> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x5637768d8658 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |   `-ParenExpr 0x5637768d8638 <col:23, col:44> 'Instruction':'unsigned int'
    |     `-BinaryOperator 0x5637768d8610 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |       |-ParenExpr 0x5637768d85d0 <line:71:24, col:40> 'Instruction':'unsigned int'
    |       | `-UnaryOperator 0x5637768d85b0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |       |   `-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |       |     `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
    |       `-IntegerLiteral 0x5637768d85f0 <line:40:17> 'int' 8
    `-ParenExpr 0x5637768d8700 <line:45:16, col:33> 'int'
      `-BinaryOperator 0x5637768d86d8 <line:44:17, line:42:18> 'int' '+'
        |-IntegerLiteral 0x5637768d8698 <line:44:17> 'int' 0
        `-IntegerLiteral 0x5637768d86b8 <line:42:18> 'int' 6
~([B1.28])
  30: BinaryOperator 0x5637768d87c0 <./lopcodes.h:85:32, line:74:32> 'unsigned int' '&'
|-ImplicitCastExpr 0x5637768d87a8 <line:85:32, col:34> 'Instruction':'unsigned int' <LValueToRValue>
| `-ParenExpr 0x5637768d8538 <col:32, col:34> 'Instruction':'unsigned int' lvalue
|   `-UnaryOperator 0x5637768d8518 <lcode.c:520:12, col:13> 'Instruction':'unsigned int' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5637768d8500 <col:13> 'Instruction *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768d84d8 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
`-ParenExpr 0x5637768d8788 <./lopcodes.h:74:20, col:32> 'Instruction':'unsigned int'
  `-UnaryOperator 0x5637768d8768 <col:21, line:71:49> 'Instruction':'unsigned int' prefix '~'
    `-ParenExpr 0x5637768d8748 <col:20, col:49> 'Instruction':'unsigned int'
      `-BinaryOperator 0x5637768d8720 <col:21, line:45:33> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x5637768d8678 <line:71:21, col:45> 'Instruction':'unsigned int'
        | `-UnaryOperator 0x5637768d8658 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
        |   `-ParenExpr 0x5637768d8638 <col:23, col:44> 'Instruction':'unsigned int'
        |     `-BinaryOperator 0x5637768d8610 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
        |       |-ParenExpr 0x5637768d85d0 <line:71:24, col:40> 'Instruction':'unsigned int'
        |       | `-UnaryOperator 0x5637768d85b0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
        |       |   `-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
        |       |     `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
        |       `-IntegerLiteral 0x5637768d85f0 <line:40:17> 'int' 8
        `-ParenExpr 0x5637768d8700 <line:45:16, col:33> 'int'
          `-BinaryOperator 0x5637768d86d8 <line:44:17, line:42:18> 'int' '+'
            |-IntegerLiteral 0x5637768d8698 <line:44:17> 'int' 0
            `-IntegerLiteral 0x5637768d86b8 <line:42:18> 'int' 6
[B1.18] & ([B1.29])
  31: DeclRefExpr 0x5637768d8808 <lcode.c:520:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
pc
  32: ImplicitCastExpr 0x5637768d8830 <lcode.c:520:29> 'Instruction *' <LValueToRValue>
`-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
[B1.31] (ImplicitCastExpr, LValueToRValue, Instruction *)
  33: UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
`-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
*[B1.32]
  34: ImplicitCastExpr 0x5637768d8910 <./lopcodes.h:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
`-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
  `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
    `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
      `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
([B1.33]) (ImplicitCastExpr, LValueToRValue, Instruction)
  35: IntegerLiteral 0x5637768d8888 <./lopcodes.h:44:17> 'int' 0
0
  36: IntegerLiteral 0x5637768d88a8 <./lopcodes.h:42:18> 'int' 6
6
  37: BinaryOperator 0x5637768d88c8 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
`-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
[B1.35] + [B1.36]
  38: BinaryOperator 0x5637768d8928 <./lopcodes.h:84:33, line:45:33> 'Instruction':'unsigned int' '>>'
|-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
| `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
|   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
|     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
`-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
  `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
    |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
    `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
[B1.34] >> ([B1.37])
  39: IntegerLiteral 0x5637768d8970 <./lopcodes.h:71:39> 'int' 0
0
  40: CStyleCastExpr 0x5637768d89a0 <./lopcodes.h:71:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
(Instruction)[B1.39] (CStyleCastExpr, IntegralCast, Instruction)
  41: UnaryOperator 0x5637768d89c8 <./lopcodes.h:71:25, col:39> 'Instruction':'unsigned int' prefix '~'
`-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
~[B1.40]
  42: IntegerLiteral 0x5637768d8a08 <./lopcodes.h:40:17> 'int' 8
8
  43: BinaryOperator 0x5637768d8a28 <./lopcodes.h:71:24, line:40:17> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
| `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
`-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
([B1.41]) << [B1.42]
  44: UnaryOperator 0x5637768d8a70 <./lopcodes.h:71:22, col:44> 'Instruction':'unsigned int' prefix '~'
`-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
  `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
    `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
~([B1.43])
  45: IntegerLiteral 0x5637768d8ab0 <./lopcodes.h:84:60> 'int' 0
0
  46: BinaryOperator 0x5637768d8ad0 <./lopcodes.h:71:21, line:84:60> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
| `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
|     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
|       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
|       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
|       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
`-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
([B1.44]) << [B1.45]
  47: BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
|-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
| `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
|   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
|   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
|   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
|   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
|   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
|   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
|     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
|       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
|       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
`-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
  `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
    |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
    |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
    |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
    `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
([B1.38]) & ([B1.46])
  48: CStyleCastExpr 0x5637768d8ba8 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x5637768d8b88 <col:26, col:30> 'unsigned int'
  `-BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
    |-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
    | `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
    |   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
    |   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
    |   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
    |   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
    |   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
    |     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
    |       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
    |       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
    `-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
      `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
        | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
        |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
        |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
        |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
        |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
        |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
        |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
        |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
        `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
(int)([B1.47]) (CStyleCastExpr, IntegralCast, int)
  49: UnaryOperator 0x5637768d8c30 <lcode.c:520:17, col:32> 'int' prefix '!'
`-ParenExpr 0x5637768d8c10 <col:18, col:32> 'int'
  `-ParenExpr 0x5637768d8bf0 <./lopcodes.h:84:21, col:63> 'int'
    `-ParenExpr 0x5637768d8bd0 <./llimits.h:75:22, col:31> 'int'
      `-CStyleCastExpr 0x5637768d8ba8 <col:23, col:30> 'int' <IntegralCast>
        `-ParenExpr 0x5637768d8b88 <col:26, col:30> 'unsigned int'
          `-BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
            |-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
            | `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
            |   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
            |   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
            |   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
            |   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
            |   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
            |   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
            |     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
            |       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
            |       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
            `-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
              `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
                |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
                | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
                |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
                |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
                |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
                |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
                |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
                |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
                |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
                `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
!((([B1.48])))
  50: CStyleCastExpr 0x5637768d8cb0 <./llimits.h:75:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
`-ParenExpr 0x5637768d8c90 <col:26, col:30> 'int'
  `-UnaryOperator 0x5637768d8c30 <lcode.c:520:17, col:32> 'int' prefix '!'
    `-ParenExpr 0x5637768d8c10 <col:18, col:32> 'int'
      `-ParenExpr 0x5637768d8bf0 <./lopcodes.h:84:21, col:63> 'int'
        `-ParenExpr 0x5637768d8bd0 <./llimits.h:75:22, col:31> 'int'
          `-CStyleCastExpr 0x5637768d8ba8 <col:23, col:30> 'int' <IntegralCast>
            `-ParenExpr 0x5637768d8b88 <col:26, col:30> 'unsigned int'
              `-BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
                |-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
                | `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
                |   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
                |   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
                |   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
                |   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
                |   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
                |   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
                |     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
                |       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
                |       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
                `-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
                  `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
                    |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
                    | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
                    |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
                    |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
                    |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
                    |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
                    |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
                    |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
                    |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
                    `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
(Instruction)([B1.49]) (CStyleCastExpr, IntegralCast, Instruction)
  51: IntegerLiteral 0x5637768d8cf8 <./lopcodes.h:44:17> 'int' 0
0
  52: IntegerLiteral 0x5637768d8d18 <./lopcodes.h:42:18> 'int' 6
6
  53: BinaryOperator 0x5637768d8d38 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x5637768d8cf8 <line:44:17> 'int' 0
`-IntegerLiteral 0x5637768d8d18 <line:42:18> 'int' 6
[B1.51] + [B1.52]
  54: BinaryOperator 0x5637768d8d80 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x5637768d8cd8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
| `-CStyleCastExpr 0x5637768d8cb0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   `-ParenExpr 0x5637768d8c90 <col:26, col:30> 'int'
|     `-UnaryOperator 0x5637768d8c30 <lcode.c:520:17, col:32> 'int' prefix '!'
|       `-ParenExpr 0x5637768d8c10 <col:18, col:32> 'int'
|         `-ParenExpr 0x5637768d8bf0 <./lopcodes.h:84:21, col:63> 'int'
|           `-ParenExpr 0x5637768d8bd0 <./llimits.h:75:22, col:31> 'int'
|             `-CStyleCastExpr 0x5637768d8ba8 <col:23, col:30> 'int' <IntegralCast>
|               `-ParenExpr 0x5637768d8b88 <col:26, col:30> 'unsigned int'
|                 `-BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
|                   |-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
|                   | `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
|                   |   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
|                   |   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
|                   |   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
|                   |   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
|                   |   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
|                   |   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
|                   |     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
|                   |       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
|                   |       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
|                   `-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
|                     `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
|                       |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
|                       | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|                       |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
|                       |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
|                       |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
|                       |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|                       |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|                       |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
|                       |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
|                       `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
`-ParenExpr 0x5637768d8d60 <line:45:16, col:33> 'int'
  `-BinaryOperator 0x5637768d8d38 <line:44:17, line:42:18> 'int' '+'
    |-IntegerLiteral 0x5637768d8cf8 <line:44:17> 'int' 0
    `-IntegerLiteral 0x5637768d8d18 <line:42:18> 'int' 6
([B1.50]) << ([B1.53])
  55: IntegerLiteral 0x5637768d8dc8 <./lopcodes.h:71:39> 'int' 0
0
  56: CStyleCastExpr 0x5637768d8df8 <./lopcodes.h:71:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
(Instruction)[B1.55] (CStyleCastExpr, IntegralCast, Instruction)
  57: UnaryOperator 0x5637768d8e20 <./lopcodes.h:71:25, col:39> 'Instruction':'unsigned int' prefix '~'
`-CStyleCastExpr 0x5637768d8df8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
~[B1.56]
  58: IntegerLiteral 0x5637768d8e60 <./lopcodes.h:40:17> 'int' 8
8
  59: BinaryOperator 0x5637768d8e80 <./lopcodes.h:71:24, line:40:17> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x5637768d8e40 <line:71:24, col:40> 'Instruction':'unsigned int'
| `-UnaryOperator 0x5637768d8e20 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|   `-CStyleCastExpr 0x5637768d8df8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
`-IntegerLiteral 0x5637768d8e60 <line:40:17> 'int' 8
([B1.57]) << [B1.58]
  60: UnaryOperator 0x5637768d8ec8 <./lopcodes.h:71:22, col:44> 'Instruction':'unsigned int' prefix '~'
`-ParenExpr 0x5637768d8ea8 <col:23, col:44> 'Instruction':'unsigned int'
  `-BinaryOperator 0x5637768d8e80 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x5637768d8e40 <line:71:24, col:40> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x5637768d8e20 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |   `-CStyleCastExpr 0x5637768d8df8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
    `-IntegerLiteral 0x5637768d8e60 <line:40:17> 'int' 8
~([B1.59])
  61: IntegerLiteral 0x5637768d8f08 <./lopcodes.h:44:17> 'int' 0
0
  62: IntegerLiteral 0x5637768d8f28 <./lopcodes.h:42:18> 'int' 6
6
  63: BinaryOperator 0x5637768d8f48 <./lopcodes.h:44:17, line:42:18> 'int' '+'
|-IntegerLiteral 0x5637768d8f08 <line:44:17> 'int' 0
`-IntegerLiteral 0x5637768d8f28 <line:42:18> 'int' 6
[B1.61] + [B1.62]
  64: BinaryOperator 0x5637768d8f90 <./lopcodes.h:71:21, line:45:33> 'Instruction':'unsigned int' '<<'
|-ParenExpr 0x5637768d8ee8 <line:71:21, col:45> 'Instruction':'unsigned int'
| `-UnaryOperator 0x5637768d8ec8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|   `-ParenExpr 0x5637768d8ea8 <col:23, col:44> 'Instruction':'unsigned int'
|     `-BinaryOperator 0x5637768d8e80 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
|       |-ParenExpr 0x5637768d8e40 <line:71:24, col:40> 'Instruction':'unsigned int'
|       | `-UnaryOperator 0x5637768d8e20 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|       |   `-CStyleCastExpr 0x5637768d8df8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
|       `-IntegerLiteral 0x5637768d8e60 <line:40:17> 'int' 8
`-ParenExpr 0x5637768d8f70 <line:45:16, col:33> 'int'
  `-BinaryOperator 0x5637768d8f48 <line:44:17, line:42:18> 'int' '+'
    |-IntegerLiteral 0x5637768d8f08 <line:44:17> 'int' 0
    `-IntegerLiteral 0x5637768d8f28 <line:42:18> 'int' 6
([B1.60]) << ([B1.63])
  65: BinaryOperator 0x5637768d8fd8 <./lopcodes.h:86:4, line:71:49> 'unsigned int' '&'
|-ParenExpr 0x5637768d8da8 <line:86:4, col:32> 'Instruction':'unsigned int'
| `-BinaryOperator 0x5637768d8d80 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
|   |-ParenExpr 0x5637768d8cd8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
|   | `-CStyleCastExpr 0x5637768d8cb0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x5637768d8c90 <col:26, col:30> 'int'
|   |     `-UnaryOperator 0x5637768d8c30 <lcode.c:520:17, col:32> 'int' prefix '!'
|   |       `-ParenExpr 0x5637768d8c10 <col:18, col:32> 'int'
|   |         `-ParenExpr 0x5637768d8bf0 <./lopcodes.h:84:21, col:63> 'int'
|   |           `-ParenExpr 0x5637768d8bd0 <./llimits.h:75:22, col:31> 'int'
|   |             `-CStyleCastExpr 0x5637768d8ba8 <col:23, col:30> 'int' <IntegralCast>
|   |               `-ParenExpr 0x5637768d8b88 <col:26, col:30> 'unsigned int'
|   |                 `-BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
|   |                   |-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
|   |                   | `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
|   |                   |   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
|   |                   |   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
|   |                   |   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
|   |                   |   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
|   |                   |   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
|   |                   |   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
|   |                   |     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
|   |                   |       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
|   |                   |       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
|   |                   `-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
|   |                     `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
|   |                       |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
|   |                       | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|   |                       |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
|   |                       |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
|   |                       |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
|   |                       |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|   |                       |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|   |                       |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
|   |                       |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
|   |                       `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
|   `-ParenExpr 0x5637768d8d60 <line:45:16, col:33> 'int'
|     `-BinaryOperator 0x5637768d8d38 <line:44:17, line:42:18> 'int' '+'
|       |-IntegerLiteral 0x5637768d8cf8 <line:44:17> 'int' 0
|       `-IntegerLiteral 0x5637768d8d18 <line:42:18> 'int' 6
`-ParenExpr 0x5637768d8fb8 <line:71:20, col:49> 'Instruction':'unsigned int'
  `-BinaryOperator 0x5637768d8f90 <col:21, line:45:33> 'Instruction':'unsigned int' '<<'
    |-ParenExpr 0x5637768d8ee8 <line:71:21, col:45> 'Instruction':'unsigned int'
    | `-UnaryOperator 0x5637768d8ec8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |   `-ParenExpr 0x5637768d8ea8 <col:23, col:44> 'Instruction':'unsigned int'
    |     `-BinaryOperator 0x5637768d8e80 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |       |-ParenExpr 0x5637768d8e40 <line:71:24, col:40> 'Instruction':'unsigned int'
    |       | `-UnaryOperator 0x5637768d8e20 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |       |   `-CStyleCastExpr 0x5637768d8df8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |       |     `-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
    |       `-IntegerLiteral 0x5637768d8e60 <line:40:17> 'int' 8
    `-ParenExpr 0x5637768d8f70 <line:45:16, col:33> 'int'
      `-BinaryOperator 0x5637768d8f48 <line:44:17, line:42:18> 'int' '+'
        |-IntegerLiteral 0x5637768d8f08 <line:44:17> 'int' 0
        `-IntegerLiteral 0x5637768d8f28 <line:42:18> 'int' 6
([B1.54]) & ([B1.64])
  66: BinaryOperator 0x5637768d9020 <./lopcodes.h:85:31, line:86:53> 'unsigned int' '|'
|-ParenExpr 0x5637768d87e8 <line:85:31, col:55> 'unsigned int'
| `-BinaryOperator 0x5637768d87c0 <col:32, line:74:32> 'unsigned int' '&'
|   |-ImplicitCastExpr 0x5637768d87a8 <line:85:32, col:34> 'Instruction':'unsigned int' <LValueToRValue>
|   | `-ParenExpr 0x5637768d8538 <col:32, col:34> 'Instruction':'unsigned int' lvalue
|   |   `-UnaryOperator 0x5637768d8518 <lcode.c:520:12, col:13> 'Instruction':'unsigned int' lvalue prefix '*'
|   |     `-ImplicitCastExpr 0x5637768d8500 <col:13> 'Instruction *' <LValueToRValue>
|   |       `-DeclRefExpr 0x5637768d84d8 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
|   `-ParenExpr 0x5637768d8788 <./lopcodes.h:74:20, col:32> 'Instruction':'unsigned int'
|     `-UnaryOperator 0x5637768d8768 <col:21, line:71:49> 'Instruction':'unsigned int' prefix '~'
|       `-ParenExpr 0x5637768d8748 <col:20, col:49> 'Instruction':'unsigned int'
|         `-BinaryOperator 0x5637768d8720 <col:21, line:45:33> 'Instruction':'unsigned int' '<<'
|           |-ParenExpr 0x5637768d8678 <line:71:21, col:45> 'Instruction':'unsigned int'
|           | `-UnaryOperator 0x5637768d8658 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
|           |   `-ParenExpr 0x5637768d8638 <col:23, col:44> 'Instruction':'unsigned int'
|           |     `-BinaryOperator 0x5637768d8610 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
|           |       |-ParenExpr 0x5637768d85d0 <line:71:24, col:40> 'Instruction':'unsigned int'
|           |       | `-UnaryOperator 0x5637768d85b0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
|           |       |   `-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
|           |       |     `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
|           |       `-IntegerLiteral 0x5637768d85f0 <line:40:17> 'int' 8
|           `-ParenExpr 0x5637768d8700 <line:45:16, col:33> 'int'
|             `-BinaryOperator 0x5637768d86d8 <line:44:17, line:42:18> 'int' '+'
|               |-IntegerLiteral 0x5637768d8698 <line:44:17> 'int' 0
|               `-IntegerLiteral 0x5637768d86b8 <line:42:18> 'int' 6
`-ParenExpr 0x5637768d9000 <line:86:3, col:53> 'unsigned int'
  `-BinaryOperator 0x5637768d8fd8 <col:4, line:71:49> 'unsigned int' '&'
    |-ParenExpr 0x5637768d8da8 <line:86:4, col:32> 'Instruction':'unsigned int'
    | `-BinaryOperator 0x5637768d8d80 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
    |   |-ParenExpr 0x5637768d8cd8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
    |   | `-CStyleCastExpr 0x5637768d8cb0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
    |   |   `-ParenExpr 0x5637768d8c90 <col:26, col:30> 'int'
    |   |     `-UnaryOperator 0x5637768d8c30 <lcode.c:520:17, col:32> 'int' prefix '!'
    |   |       `-ParenExpr 0x5637768d8c10 <col:18, col:32> 'int'
    |   |         `-ParenExpr 0x5637768d8bf0 <./lopcodes.h:84:21, col:63> 'int'
    |   |           `-ParenExpr 0x5637768d8bd0 <./llimits.h:75:22, col:31> 'int'
    |   |             `-CStyleCastExpr 0x5637768d8ba8 <col:23, col:30> 'int' <IntegralCast>
    |   |               `-ParenExpr 0x5637768d8b88 <col:26, col:30> 'unsigned int'
    |   |                 `-BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
    |   |                   |-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
    |   |                   | `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
    |   |                   |   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
    |   |                   |   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
    |   |                   |   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
    |   |                   |   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
    |   |                   |   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
    |   |                   |   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
    |   |                   |     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
    |   |                   |       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
    |   |                   |       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
    |   |                   `-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
    |   |                     `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
    |   |                       |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
    |   |                       | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |   |                       |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
    |   |                       |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |   |                       |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
    |   |                       |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |   |                       |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |   |                       |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
    |   |                       |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
    |   |                       `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
    |   `-ParenExpr 0x5637768d8d60 <line:45:16, col:33> 'int'
    |     `-BinaryOperator 0x5637768d8d38 <line:44:17, line:42:18> 'int' '+'
    |       |-IntegerLiteral 0x5637768d8cf8 <line:44:17> 'int' 0
    |       `-IntegerLiteral 0x5637768d8d18 <line:42:18> 'int' 6
    `-ParenExpr 0x5637768d8fb8 <line:71:20, col:49> 'Instruction':'unsigned int'
      `-BinaryOperator 0x5637768d8f90 <col:21, line:45:33> 'Instruction':'unsigned int' '<<'
        |-ParenExpr 0x5637768d8ee8 <line:71:21, col:45> 'Instruction':'unsigned int'
        | `-UnaryOperator 0x5637768d8ec8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
        |   `-ParenExpr 0x5637768d8ea8 <col:23, col:44> 'Instruction':'unsigned int'
        |     `-BinaryOperator 0x5637768d8e80 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
        |       |-ParenExpr 0x5637768d8e40 <line:71:24, col:40> 'Instruction':'unsigned int'
        |       | `-UnaryOperator 0x5637768d8e20 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
        |       |   `-CStyleCastExpr 0x5637768d8df8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
        |       |     `-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
        |       `-IntegerLiteral 0x5637768d8e60 <line:40:17> 'int' 8
        `-ParenExpr 0x5637768d8f70 <line:45:16, col:33> 'int'
          `-BinaryOperator 0x5637768d8f48 <line:44:17, line:42:18> 'int' '+'
            |-IntegerLiteral 0x5637768d8f08 <line:44:17> 'int' 0
            `-IntegerLiteral 0x5637768d8f28 <line:42:18> 'int' 6
([B1.30]) | ([B1.65])
  67: DeclRefExpr 0x5637768d8458 <lcode.c:520:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
pc
  68: ImplicitCastExpr 0x5637768d8480 <lcode.c:520:13> 'Instruction *' <LValueToRValue>
`-DeclRefExpr 0x5637768d8458 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
[B1.67] (ImplicitCastExpr, LValueToRValue, Instruction *)
  69: UnaryOperator 0x5637768d8498 <lcode.c:520:12, col:13> 'Instruction':'unsigned int' lvalue prefix '*'
`-ImplicitCastExpr 0x5637768d8480 <col:13> 'Instruction *' <LValueToRValue>
  `-DeclRefExpr 0x5637768d8458 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
*[B1.68]
  70: BinaryOperator 0x5637768d9068 <./lopcodes.h:85:24, line:86:54> 'Instruction':'unsigned int' '='
|-ParenExpr 0x5637768d84b8 <line:85:24, col:26> 'Instruction':'unsigned int' lvalue
| `-UnaryOperator 0x5637768d8498 <lcode.c:520:12, col:13> 'Instruction':'unsigned int' lvalue prefix '*'
|   `-ImplicitCastExpr 0x5637768d8480 <col:13> 'Instruction *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768d8458 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
`-ParenExpr 0x5637768d9048 <./lopcodes.h:85:30, line:86:54> 'unsigned int'
  `-BinaryOperator 0x5637768d9020 <line:85:31, line:86:53> 'unsigned int' '|'
    |-ParenExpr 0x5637768d87e8 <line:85:31, col:55> 'unsigned int'
    | `-BinaryOperator 0x5637768d87c0 <col:32, line:74:32> 'unsigned int' '&'
    |   |-ImplicitCastExpr 0x5637768d87a8 <line:85:32, col:34> 'Instruction':'unsigned int' <LValueToRValue>
    |   | `-ParenExpr 0x5637768d8538 <col:32, col:34> 'Instruction':'unsigned int' lvalue
    |   |   `-UnaryOperator 0x5637768d8518 <lcode.c:520:12, col:13> 'Instruction':'unsigned int' lvalue prefix '*'
    |   |     `-ImplicitCastExpr 0x5637768d8500 <col:13> 'Instruction *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5637768d84d8 <col:13> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
    |   `-ParenExpr 0x5637768d8788 <./lopcodes.h:74:20, col:32> 'Instruction':'unsigned int'
    |     `-UnaryOperator 0x5637768d8768 <col:21, line:71:49> 'Instruction':'unsigned int' prefix '~'
    |       `-ParenExpr 0x5637768d8748 <col:20, col:49> 'Instruction':'unsigned int'
    |         `-BinaryOperator 0x5637768d8720 <col:21, line:45:33> 'Instruction':'unsigned int' '<<'
    |           |-ParenExpr 0x5637768d8678 <line:71:21, col:45> 'Instruction':'unsigned int'
    |           | `-UnaryOperator 0x5637768d8658 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
    |           |   `-ParenExpr 0x5637768d8638 <col:23, col:44> 'Instruction':'unsigned int'
    |           |     `-BinaryOperator 0x5637768d8610 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
    |           |       |-ParenExpr 0x5637768d85d0 <line:71:24, col:40> 'Instruction':'unsigned int'
    |           |       | `-UnaryOperator 0x5637768d85b0 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
    |           |       |   `-CStyleCastExpr 0x5637768d8588 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
    |           |       |     `-IntegerLiteral 0x5637768d8558 <col:39> 'int' 0
    |           |       `-IntegerLiteral 0x5637768d85f0 <line:40:17> 'int' 8
    |           `-ParenExpr 0x5637768d8700 <line:45:16, col:33> 'int'
    |             `-BinaryOperator 0x5637768d86d8 <line:44:17, line:42:18> 'int' '+'
    |               |-IntegerLiteral 0x5637768d8698 <line:44:17> 'int' 0
    |               `-IntegerLiteral 0x5637768d86b8 <line:42:18> 'int' 6
    `-ParenExpr 0x5637768d9000 <line:86:3, col:53> 'unsigned int'
      `-BinaryOperator 0x5637768d8fd8 <col:4, line:71:49> 'unsigned int' '&'
        |-ParenExpr 0x5637768d8da8 <line:86:4, col:32> 'Instruction':'unsigned int'
        | `-BinaryOperator 0x5637768d8d80 <./llimits.h:75:22, ./lopcodes.h:45:33> 'Instruction':'unsigned int' '<<'
        |   |-ParenExpr 0x5637768d8cd8 <./llimits.h:75:22, col:31> 'Instruction':'unsigned int'
        |   | `-CStyleCastExpr 0x5637768d8cb0 <col:23, col:30> 'Instruction':'unsigned int' <IntegralCast>
        |   |   `-ParenExpr 0x5637768d8c90 <col:26, col:30> 'int'
        |   |     `-UnaryOperator 0x5637768d8c30 <lcode.c:520:17, col:32> 'int' prefix '!'
        |   |       `-ParenExpr 0x5637768d8c10 <col:18, col:32> 'int'
        |   |         `-ParenExpr 0x5637768d8bf0 <./lopcodes.h:84:21, col:63> 'int'
        |   |           `-ParenExpr 0x5637768d8bd0 <./llimits.h:75:22, col:31> 'int'
        |   |             `-CStyleCastExpr 0x5637768d8ba8 <col:23, col:30> 'int' <IntegralCast>
        |   |               `-ParenExpr 0x5637768d8b88 <col:26, col:30> 'unsigned int'
        |   |                 `-BinaryOperator 0x5637768d8b18 <./lopcodes.h:84:32, line:71:49> 'unsigned int' '&'
        |   |                   |-ParenExpr 0x5637768d8950 <line:84:32, col:43> 'Instruction':'unsigned int'
        |   |                   | `-BinaryOperator 0x5637768d8928 <col:33, line:45:33> 'Instruction':'unsigned int' '>>'
        |   |                   |   |-ImplicitCastExpr 0x5637768d8910 <line:84:33, col:35> 'Instruction':'unsigned int' <LValueToRValue>
        |   |                   |   | `-ParenExpr 0x5637768d8868 <col:33, col:35> 'Instruction':'unsigned int' lvalue
        |   |                   |   |   `-UnaryOperator 0x5637768d8848 <lcode.c:520:28, col:29> 'Instruction':'unsigned int' lvalue prefix '*'
        |   |                   |   |     `-ImplicitCastExpr 0x5637768d8830 <col:29> 'Instruction *' <LValueToRValue>
        |   |                   |   |       `-DeclRefExpr 0x5637768d8808 <col:29> 'Instruction *' lvalue Var 0x5637768d81b0 'pc' 'Instruction *'
        |   |                   |   `-ParenExpr 0x5637768d88f0 <./lopcodes.h:45:16, col:33> 'int'
        |   |                   |     `-BinaryOperator 0x5637768d88c8 <line:44:17, line:42:18> 'int' '+'
        |   |                   |       |-IntegerLiteral 0x5637768d8888 <line:44:17> 'int' 0
        |   |                   |       `-IntegerLiteral 0x5637768d88a8 <line:42:18> 'int' 6
        |   |                   `-ParenExpr 0x5637768d8af8 <line:71:20, col:49> 'Instruction':'unsigned int'
        |   |                     `-BinaryOperator 0x5637768d8ad0 <col:21, line:84:60> 'Instruction':'unsigned int' '<<'
        |   |                       |-ParenExpr 0x5637768d8a90 <line:71:21, col:45> 'Instruction':'unsigned int'
        |   |                       | `-UnaryOperator 0x5637768d8a70 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
        |   |                       |   `-ParenExpr 0x5637768d8a50 <col:23, col:44> 'Instruction':'unsigned int'
        |   |                       |     `-BinaryOperator 0x5637768d8a28 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
        |   |                       |       |-ParenExpr 0x5637768d89e8 <line:71:24, col:40> 'Instruction':'unsigned int'
        |   |                       |       | `-UnaryOperator 0x5637768d89c8 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
        |   |                       |       |   `-CStyleCastExpr 0x5637768d89a0 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
        |   |                       |       |     `-IntegerLiteral 0x5637768d8970 <col:39> 'int' 0
        |   |                       |       `-IntegerLiteral 0x5637768d8a08 <line:40:17> 'int' 8
        |   |                       `-IntegerLiteral 0x5637768d8ab0 <line:84:60> 'int' 0
        |   `-ParenExpr 0x5637768d8d60 <line:45:16, col:33> 'int'
        |     `-BinaryOperator 0x5637768d8d38 <line:44:17, line:42:18> 'int' '+'
        |       |-IntegerLiteral 0x5637768d8cf8 <line:44:17> 'int' 0
        |       `-IntegerLiteral 0x5637768d8d18 <line:42:18> 'int' 6
        `-ParenExpr 0x5637768d8fb8 <line:71:20, col:49> 'Instruction':'unsigned int'
          `-BinaryOperator 0x5637768d8f90 <col:21, line:45:33> 'Instruction':'unsigned int' '<<'
            |-ParenExpr 0x5637768d8ee8 <line:71:21, col:45> 'Instruction':'unsigned int'
            | `-UnaryOperator 0x5637768d8ec8 <col:22, col:44> 'Instruction':'unsigned int' prefix '~'
            |   `-ParenExpr 0x5637768d8ea8 <col:23, col:44> 'Instruction':'unsigned int'
            |     `-BinaryOperator 0x5637768d8e80 <col:24, line:40:17> 'Instruction':'unsigned int' '<<'
            |       |-ParenExpr 0x5637768d8e40 <line:71:24, col:40> 'Instruction':'unsigned int'
            |       | `-UnaryOperator 0x5637768d8e20 <col:25, col:39> 'Instruction':'unsigned int' prefix '~'
            |       |   `-CStyleCastExpr 0x5637768d8df8 <col:26, col:39> 'Instruction':'unsigned int' <IntegralCast>
            |       |     `-IntegerLiteral 0x5637768d8dc8 <col:39> 'int' 0
            |       `-IntegerLiteral 0x5637768d8e60 <line:40:17> 'int' 8
            `-ParenExpr 0x5637768d8f70 <line:45:16, col:33> 'int'
              `-BinaryOperator 0x5637768d8f48 <line:44:17, line:42:18> 'int' '+'
                |-IntegerLiteral 0x5637768d8f08 <line:44:17> 'int' 0
                `-IntegerLiteral 0x5637768d8f28 <line:42:18> 'int' 6
([B1.69]) = ([B1.66])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
