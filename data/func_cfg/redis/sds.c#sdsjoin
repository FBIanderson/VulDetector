sds sdsjoin(char **argv, int argc, char *sep)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x55e83d12ab30 <sds.c:1093:12> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
join
   2: ImplicitCastExpr 0x55e83d12ab58 <sds.c:1093:12> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12ab30 <col:12> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
[B1.1] (ImplicitCastExpr, LValueToRValue, sds)
   3: ReturnStmt 0x55e83d12ab70 <sds.c:1093:5, col:12>
`-ImplicitCastExpr 0x55e83d12ab58 <col:12> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12ab30 <col:12> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
return [B1.2];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d12a600 <sds.c:1089:27> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
j
   2: UnaryOperator 0x55e83d12a628 <sds.c:1089:27, col:28> 'int' postfix '++'
`-DeclRefExpr 0x55e83d12a600 <col:27> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B2.1]++
   Preds (2): B3 B4
   Succs (1): B5

 [B3]
   1: DeclRefExpr 0x55e83d12a940 <sds.c:1091:33> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
sdscat
   2: ImplicitCastExpr 0x55e83d12a9e0 <sds.c:1091:33> 'sds (*)(sds, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d12a940 <col:33> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const char *))
   3: DeclRefExpr 0x55e83d12a990 <sds.c:1091:40> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
join
   4: ImplicitCastExpr 0x55e83d12aa30 <sds.c:1091:40> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a990 <col:40> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
[B3.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d12a9b8 <sds.c:1091:45> 'char *' lvalue ParmVar 0x55e83d12a218 'sep' 'char *'
sep
   6: ImplicitCastExpr 0x55e83d12aa48 <sds.c:1091:45> 'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a9b8 <col:45> 'char *' lvalue ParmVar 0x55e83d12a218 'sep' 'char *'
[B3.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: ImplicitCastExpr 0x55e83d12aa60 <sds.c:1091:45> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55e83d12aa48 <col:45> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12a9b8 <col:45> 'char *' lvalue ParmVar 0x55e83d12a218 'sep' 'char *'
[B3.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x55e83d12a9f8 <sds.c:1091:33, col:48> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d12a9e0 <col:33> 'sds (*)(sds, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d12a940 <col:33> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
|-ImplicitCastExpr 0x55e83d12aa30 <col:40> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12a990 <col:40> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d12aa60 <col:45> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55e83d12aa48 <col:45> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x55e83d12a9b8 <col:45> 'char *' lvalue ParmVar 0x55e83d12a218 'sep' 'char *'
[B3.2]([B3.4], [B3.7])
   9: DeclRefExpr 0x55e83d12a918 <sds.c:1091:26> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
join
  10: BinaryOperator 0x55e83d12aa78 <sds.c:1091:26, col:48> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d12a918 <col:26> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
`-CallExpr 0x55e83d12a9f8 <col:33, col:48> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d12a9e0 <col:33> 'sds (*)(sds, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d12a940 <col:33> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
  |-ImplicitCastExpr 0x55e83d12aa30 <col:40> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12a990 <col:40> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d12aa60 <col:45> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x55e83d12aa48 <col:45> 'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d12a9b8 <col:45> 'char *' lvalue ParmVar 0x55e83d12a218 'sep' 'char *'
[B3.9] = [B3.8]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55e83d12a670 <sds.c:1090:16> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
sdscat
   2: ImplicitCastExpr 0x55e83d12a768 <sds.c:1090:16> 'sds (*)(sds, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d12a670 <col:16> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(sds, const char *))
   3: DeclRefExpr 0x55e83d12a698 <sds.c:1090:23> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
join
   4: ImplicitCastExpr 0x55e83d12a7b8 <sds.c:1090:23> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a698 <col:23> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
[B4.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d12a6c0 <sds.c:1090:29> 'char **' lvalue ParmVar 0x55e83d12a128 'argv' 'char **'
argv
   6: ImplicitCastExpr 0x55e83d12a710 <sds.c:1090:29> 'char **' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a6c0 <col:29> 'char **' lvalue ParmVar 0x55e83d12a128 'argv' 'char **'
[B4.5] (ImplicitCastExpr, LValueToRValue, char **)
   7: DeclRefExpr 0x55e83d12a6e8 <sds.c:1090:34> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
j
   8: ImplicitCastExpr 0x55e83d12a728 <sds.c:1090:34> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a6e8 <col:34> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B4.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ArraySubscriptExpr 0x55e83d12a740 <sds.c:1090:29, col:35> 'char *' lvalue
|-ImplicitCastExpr 0x55e83d12a710 <col:29> 'char **' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12a6c0 <col:29> 'char **' lvalue ParmVar 0x55e83d12a128 'argv' 'char **'
`-ImplicitCastExpr 0x55e83d12a728 <col:34> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12a6e8 <col:34> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B4.6][[B4.8]]
  10: ImplicitCastExpr 0x55e83d12a7d0 <sds.c:1090:29, col:35> 'char *' <LValueToRValue>
`-ArraySubscriptExpr 0x55e83d12a740 <col:29, col:35> 'char *' lvalue
  |-ImplicitCastExpr 0x55e83d12a710 <col:29> 'char **' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12a6c0 <col:29> 'char **' lvalue ParmVar 0x55e83d12a128 'argv' 'char **'
  `-ImplicitCastExpr 0x55e83d12a728 <col:34> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d12a6e8 <col:34> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B4.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: ImplicitCastExpr 0x55e83d12a7e8 <sds.c:1090:29, col:35> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55e83d12a7d0 <col:29, col:35> 'char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x55e83d12a740 <col:29, col:35> 'char *' lvalue
    |-ImplicitCastExpr 0x55e83d12a710 <col:29> 'char **' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d12a6c0 <col:29> 'char **' lvalue ParmVar 0x55e83d12a128 'argv' 'char **'
    `-ImplicitCastExpr 0x55e83d12a728 <col:34> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d12a6e8 <col:34> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B4.10] (ImplicitCastExpr, BitCast, const char *)
  12: CallExpr 0x55e83d12a780 <sds.c:1090:16, col:36> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d12a768 <col:16> 'sds (*)(sds, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d12a670 <col:16> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
|-ImplicitCastExpr 0x55e83d12a7b8 <col:23> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12a698 <col:23> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d12a7e8 <col:29, col:35> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55e83d12a7d0 <col:29, col:35> 'char *' <LValueToRValue>
    `-ArraySubscriptExpr 0x55e83d12a740 <col:29, col:35> 'char *' lvalue
      |-ImplicitCastExpr 0x55e83d12a710 <col:29> 'char **' <LValueToRValue>
      | `-DeclRefExpr 0x55e83d12a6c0 <col:29> 'char **' lvalue ParmVar 0x55e83d12a128 'argv' 'char **'
      `-ImplicitCastExpr 0x55e83d12a728 <col:34> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d12a6e8 <col:34> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B4.2]([B4.4], [B4.11])
  13: DeclRefExpr 0x55e83d12a648 <sds.c:1090:9> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
join
  14: BinaryOperator 0x55e83d12a800 <sds.c:1090:9, col:36> 'sds':'char *' '='
|-DeclRefExpr 0x55e83d12a648 <col:9> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
`-CallExpr 0x55e83d12a780 <col:16, col:36> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d12a768 <col:16> 'sds (*)(sds, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d12a670 <col:16> 'sds (sds, const char *)' Function 0x55e83d10ae98 'sdscat' 'sds (sds, const char *)'
  |-ImplicitCastExpr 0x55e83d12a7b8 <col:23> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12a698 <col:23> 'sds':'char *' lvalue Var 0x55e83d12a378 'join' 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d12a7e8 <col:29, col:35> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x55e83d12a7d0 <col:29, col:35> 'char *' <LValueToRValue>
      `-ArraySubscriptExpr 0x55e83d12a740 <col:29, col:35> 'char *' lvalue
        |-ImplicitCastExpr 0x55e83d12a710 <col:29> 'char **' <LValueToRValue>
        | `-DeclRefExpr 0x55e83d12a6c0 <col:29> 'char **' lvalue ParmVar 0x55e83d12a128 'argv' 'char **'
        `-ImplicitCastExpr 0x55e83d12a728 <col:34> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55e83d12a6e8 <col:34> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B4.13] = [B4.12]
  15: DeclRefExpr 0x55e83d12a828 <sds.c:1091:13> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
j
  16: ImplicitCastExpr 0x55e83d12a8d8 <sds.c:1091:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a828 <col:13> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B4.15] (ImplicitCastExpr, LValueToRValue, int)
  17: DeclRefExpr 0x55e83d12a850 <sds.c:1091:18> 'int' lvalue ParmVar 0x55e83d12a1a0 'argc' 'int'
argc
  18: ImplicitCastExpr 0x55e83d12a898 <sds.c:1091:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a850 <col:18> 'int' lvalue ParmVar 0x55e83d12a1a0 'argc' 'int'
[B4.17] (ImplicitCastExpr, LValueToRValue, int)
  19: IntegerLiteral 0x55e83d12a878 <sds.c:1091:23> 'int' 1
1
  20: BinaryOperator 0x55e83d12a8b0 <sds.c:1091:18, col:23> 'int' '-'
|-ImplicitCastExpr 0x55e83d12a898 <col:18> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12a850 <col:18> 'int' lvalue ParmVar 0x55e83d12a1a0 'argc' 'int'
`-IntegerLiteral 0x55e83d12a878 <col:23> 'int' 1
[B4.18] - [B4.19]
  21: BinaryOperator 0x55e83d12a8f0 <sds.c:1091:13, col:23> 'int' '!='
|-ImplicitCastExpr 0x55e83d12a8d8 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12a828 <col:13> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
`-BinaryOperator 0x55e83d12a8b0 <col:18, col:23> 'int' '-'
  |-ImplicitCastExpr 0x55e83d12a898 <col:18> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d12a850 <col:18> 'int' lvalue ParmVar 0x55e83d12a1a0 'argc' 'int'
  `-IntegerLiteral 0x55e83d12a878 <col:23> 'int' 1
[B4.16] != [B4.20]
   T: if [B4.21]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55e83d12a558 <sds.c:1089:17> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
j
   2: ImplicitCastExpr 0x55e83d12a5a8 <sds.c:1089:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a558 <col:17> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d12a580 <sds.c:1089:21> 'int' lvalue ParmVar 0x55e83d12a1a0 'argc' 'int'
argc
   4: ImplicitCastExpr 0x55e83d12a5c0 <sds.c:1089:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d12a580 <col:21> 'int' lvalue ParmVar 0x55e83d12a1a0 'argc' 'int'
[B5.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55e83d12a5d8 <sds.c:1089:17, col:21> 'int' '<'
|-ImplicitCastExpr 0x55e83d12a5a8 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d12a558 <col:17> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
`-ImplicitCastExpr 0x55e83d12a5c0 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d12a580 <col:21> 'int' lvalue ParmVar 0x55e83d12a1a0 'argc' 'int'
[B5.2] < [B5.4]
   T: for (...; [B5.5]; ...)
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x55e83d12a3d8 <sds.c:1086:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
sdsempty
   2: ImplicitCastExpr 0x55e83d12a400 <sds.c:1086:16> 'sds (*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d12a3d8 <col:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(void))
   3: CallExpr 0x55e83d12a418 <sds.c:1086:16, col:25> 'sds':'char *'
`-ImplicitCastExpr 0x55e83d12a400 <col:16> 'sds (*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x55e83d12a3d8 <col:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
[B6.2]()
   4: DeclStmt 0x55e83d12a440 <sds.c:1086:5, col:26>col:9
`-VarDecl 0x55e83d12a378 <col:5, col:25> col:9 used join 'sds':'char *' cinit
  `-CallExpr 0x55e83d12a418 <col:16, col:25> 'sds':'char *'
    `-ImplicitCastExpr 0x55e83d12a400 <col:16> 'sds (*)(void)' <FunctionToPointerDecay>
      `-DeclRefExpr 0x55e83d12a3d8 <col:16> 'sds (void)' Function 0x55e83d0fae58 'sdsempty' 'sds (void)'
sds join = sdsempty();
   5: DeclStmt 0x55e83d12a4d0 <sds.c:1087:5, col:10>col:9
`-VarDecl 0x55e83d12a470 <col:5, col:9> col:9 used j 'int'
int j;
   6: IntegerLiteral 0x55e83d12a510 <sds.c:1089:14> 'int' 0
0
   7: DeclRefExpr 0x55e83d12a4e8 <sds.c:1089:10> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
j
   8: BinaryOperator 0x55e83d12a530 <sds.c:1089:10, col:14> 'int' '='
|-DeclRefExpr 0x55e83d12a4e8 <col:10> 'int' lvalue Var 0x55e83d12a470 'j' 'int'
`-IntegerLiteral 0x55e83d12a510 <col:14> 'int' 0
[B6.7] = [B6.6]
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (1): B1
