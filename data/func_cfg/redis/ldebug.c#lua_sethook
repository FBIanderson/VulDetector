extern int lua_sethook(lua_State *L, lua_Hook func, int mask, int count)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: DeclRefExpr 0x555e9723a880 <ldebug.c:61:13> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
func
   2: ImplicitCastExpr 0x555e9723a8a8 <ldebug.c:61:13> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <LValueToRValue>
`-DeclRefExpr 0x555e9723a880 <col:13> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
[B1.1] (ImplicitCastExpr, LValueToRValue, lua_Hook)
   3: DeclRefExpr 0x555e9723a808 <ldebug.c:61:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9723a830 <ldebug.c:61:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723a808 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x555e9723a848 <ldebug.c:61:3, col:6> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ->hook 0x555e97213a68
`-ImplicitCastExpr 0x555e9723a830 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723a808 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.4]->hook
   6: BinaryOperator 0x555e9723a8c0 <ldebug.c:61:3, col:13> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' '='
|-MemberExpr 0x555e9723a848 <col:3, col:6> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ->hook 0x555e97213a68
| `-ImplicitCastExpr 0x555e9723a830 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x555e9723a808 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e9723a8a8 <col:13> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <LValueToRValue>
  `-DeclRefExpr 0x555e9723a880 <col:13> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
[B1.5] = [B1.2]
   7: DeclRefExpr 0x555e9723a960 <ldebug.c:62:22> 'int' lvalue ParmVar 0x555e9723a340 'count' 'int'
count
   8: ImplicitCastExpr 0x555e9723a988 <ldebug.c:62:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9723a960 <col:22> 'int' lvalue ParmVar 0x555e9723a340 'count' 'int'
[B1.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x555e9723a8e8 <ldebug.c:62:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x555e9723a910 <ldebug.c:62:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723a8e8 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: MemberExpr 0x555e9723a928 <ldebug.c:62:3, col:6> 'int' lvalue ->basehookcount 0x555e972139b0
`-ImplicitCastExpr 0x555e9723a910 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723a8e8 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.10]->basehookcount
  12: BinaryOperator 0x555e9723a9a0 <ldebug.c:62:3, col:22> 'int' '='
|-MemberExpr 0x555e9723a928 <col:3, col:6> 'int' lvalue ->basehookcount 0x555e972139b0
| `-ImplicitCastExpr 0x555e9723a910 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x555e9723a8e8 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e9723a988 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x555e9723a960 <col:22> 'int' lvalue ParmVar 0x555e9723a340 'count' 'int'
[B1.11] = [B1.8]
  13: DeclRefExpr 0x555e9723aa40 <ldebug.c:63:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x555e9723aa68 <ldebug.c:63:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723aa40 <col:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: MemberExpr 0x555e9723cd40 <ldebug.c:63:18, ./ldebug.h:18:46> 'int' lvalue ->basehookcount 0x555e972139b0
`-ImplicitCastExpr 0x555e9723aa68 <ldebug.c:63:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723aa40 <col:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.14]->basehookcount
  16: ImplicitCastExpr 0x555e9723cd78 <ldebug.c:63:18, ./ldebug.h:18:46> 'int' <LValueToRValue>
`-MemberExpr 0x555e9723cd40 <ldebug.c:63:18, ./ldebug.h:18:46> 'int' lvalue ->basehookcount 0x555e972139b0
  `-ImplicitCastExpr 0x555e9723aa68 <ldebug.c:63:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9723aa40 <col:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.15] (ImplicitCastExpr, LValueToRValue, int)
  17: DeclRefExpr 0x555e9723a9c8 <ldebug.c:63:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
L
  18: ImplicitCastExpr 0x555e9723a9f0 <ldebug.c:63:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723a9c8 <col:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.17] (ImplicitCastExpr, LValueToRValue, lua_State *)
  19: MemberExpr 0x555e9723aa08 <ldebug.c:63:18, ./ldebug.h:18:31> 'int' lvalue ->hookcount 0x555e97213a10
`-ImplicitCastExpr 0x555e9723a9f0 <ldebug.c:63:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723a9c8 <col:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.18]->hookcount
  20: BinaryOperator 0x555e9723cd90 <ldebug.c:63:18, ./ldebug.h:18:46> 'int' '='
|-MemberExpr 0x555e9723aa08 <ldebug.c:63:18, ./ldebug.h:18:31> 'int' lvalue ->hookcount 0x555e97213a10
| `-ImplicitCastExpr 0x555e9723a9f0 <ldebug.c:63:18> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x555e9723a9c8 <col:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e9723cd78 <col:18, ./ldebug.h:18:46> 'int' <LValueToRValue>
  `-MemberExpr 0x555e9723cd40 <ldebug.c:63:18, ./ldebug.h:18:46> 'int' lvalue ->basehookcount 0x555e972139b0
    `-ImplicitCastExpr 0x555e9723aa68 <ldebug.c:63:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9723aa40 <col:18> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.19] = [B1.16]
  21: DeclRefExpr 0x555e9723ce50 <ldebug.c:64:27> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
mask
  22: ImplicitCastExpr 0x555e9723cef8 <./llimits.h:75:26, col:30> 'int' <LValueToRValue>
`-ParenExpr 0x555e9723ced8 <col:26, col:30> 'int' lvalue
  `-ParenExpr 0x555e9723ce78 <line:78:36, col:38> 'int' lvalue
    `-DeclRefExpr 0x555e9723ce50 <ldebug.c:64:27> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
(([B1.21])) (ImplicitCastExpr, LValueToRValue, int)
  23: CStyleCastExpr 0x555e9723cf10 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x555e9723cef8 <col:26, col:30> 'int' <LValueToRValue>
  `-ParenExpr 0x555e9723ced8 <col:26, col:30> 'int' lvalue
    `-ParenExpr 0x555e9723ce78 <line:78:36, col:38> 'int' lvalue
      `-DeclRefExpr 0x555e9723ce50 <ldebug.c:64:27> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
(lu_byte)[B1.22] (CStyleCastExpr, IntegralCast, lu_byte)
  24: DeclRefExpr 0x555e9723cdd8 <ldebug.c:64:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
L
  25: ImplicitCastExpr 0x555e9723ce00 <ldebug.c:64:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723cdd8 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.24] (ImplicitCastExpr, LValueToRValue, lua_State *)
  26: MemberExpr 0x555e9723ce18 <ldebug.c:64:3, col:6> 'lu_byte':'unsigned char' lvalue ->hookmask 0x555e972138f8
`-ImplicitCastExpr 0x555e9723ce00 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723cdd8 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
[B1.25]->hookmask
  27: BinaryOperator 0x555e9723cf58 <ldebug.c:64:3, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x555e9723ce18 <ldebug.c:64:3, col:6> 'lu_byte':'unsigned char' lvalue ->hookmask 0x555e972138f8
| `-ImplicitCastExpr 0x555e9723ce00 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x555e9723cdd8 <col:3> 'lua_State *' lvalue ParmVar 0x555e9723a1e0 'L' 'lua_State *'
`-ParenExpr 0x555e9723cf38 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x555e9723cf10 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x555e9723cef8 <col:26, col:30> 'int' <LValueToRValue>
      `-ParenExpr 0x555e9723ced8 <col:26, col:30> 'int' lvalue
        `-ParenExpr 0x555e9723ce78 <line:78:36, col:38> 'int' lvalue
          `-DeclRefExpr 0x555e9723ce50 <ldebug.c:64:27> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
[B1.26] = ([B1.23])
  28: IntegerLiteral 0x555e9723cf80 <ldebug.c:65:10> 'int' 1
1
  29: ReturnStmt 0x555e9723cfa0 <ldebug.c:65:3, col:10>
`-IntegerLiteral 0x555e9723cf80 <col:10> 'int' 1
return [B1.28];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x555e9723a680 <ldebug.c:58:12> 'int' 0
0
   2: DeclRefExpr 0x555e9723a658 <ldebug.c:58:5> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
mask
   3: BinaryOperator 0x555e9723a6a0 <ldebug.c:58:5, col:12> 'int' '='
|-DeclRefExpr 0x555e9723a658 <col:5> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
`-IntegerLiteral 0x555e9723a680 <col:12> 'int' 0
[B2.2] = [B2.1]
   4: IntegerLiteral 0x555e9723a6f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   5: CStyleCastExpr 0x555e9723a728 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e9723a6f0 <col:24> 'int' 0
(void *)[B2.4] (CStyleCastExpr, NullToPointer, void *)
   6: ImplicitCastExpr 0x555e9723a770 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <NullToPointer>
`-ParenExpr 0x555e9723a750 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e9723a728 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e9723a6f0 <col:24> 'int' 0
([B2.5]) (ImplicitCastExpr, NullToPointer, lua_Hook)
   7: DeclRefExpr 0x555e9723a6c8 <ldebug.c:59:5> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
func
   8: BinaryOperator 0x555e9723a788 <ldebug.c:59:5, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' '='
|-DeclRefExpr 0x555e9723a6c8 <ldebug.c:59:5> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
`-ImplicitCastExpr 0x555e9723a770 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <NullToPointer>
  `-ParenExpr 0x555e9723a750 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x555e9723a728 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x555e9723a6f0 <col:24> 'int' 0
[B2.7] = [B2.6]
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x555e9723a5a8 <ldebug.c:57:23> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
mask
   2: ImplicitCastExpr 0x555e9723a5f0 <ldebug.c:57:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9723a5a8 <col:23> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x555e9723a5d0 <ldebug.c:57:31> 'int' 0
0
   4: BinaryOperator 0x555e9723a608 <ldebug.c:57:23, col:31> 'int' '=='
|-ImplicitCastExpr 0x555e9723a5f0 <col:23> 'int' <LValueToRValue>
| `-DeclRefExpr 0x555e9723a5a8 <col:23> 'int' lvalue ParmVar 0x555e9723a2c8 'mask' 'int'
`-IntegerLiteral 0x555e9723a5d0 <col:31> 'int' 0
[B3.2] == [B3.3]
   T: if [B4.6] || [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x555e9723a4a8 <ldebug.c:57:7> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
func
   2: ImplicitCastExpr 0x555e9723a550 <ldebug.c:57:7> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <LValueToRValue>
`-DeclRefExpr 0x555e9723a4a8 <col:7> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_Hook)
   3: IntegerLiteral 0x555e9723a4d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   4: CStyleCastExpr 0x555e9723a508 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x555e9723a4d0 <col:24> 'int' 0
(void *)[B4.3] (CStyleCastExpr, NullToPointer, void *)
   5: ImplicitCastExpr 0x555e9723a568 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <BitCast>
`-ParenExpr 0x555e9723a530 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x555e9723a508 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x555e9723a4d0 <col:24> 'int' 0
([B4.4]) (ImplicitCastExpr, BitCast, lua_Hook)
   6: BinaryOperator 0x555e9723a580 <ldebug.c:57:7, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x555e9723a550 <ldebug.c:57:7> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <LValueToRValue>
| `-DeclRefExpr 0x555e9723a4a8 <col:7> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ParmVar 0x555e9723a250 'func' 'lua_Hook':'void (*)(lua_State *, lua_Debug *)'
`-ImplicitCastExpr 0x555e9723a568 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <BitCast>
  `-ParenExpr 0x555e9723a530 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x555e9723a508 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x555e9723a4d0 <col:24> 'int' 0
[B4.2] == [B4.5]
   T: [B4.6] || ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1
