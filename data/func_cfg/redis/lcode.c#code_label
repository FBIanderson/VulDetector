static int code_label(FuncState *fs, int A, int b, int jump)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768cd268 <lcode.c:338:3> 'int (FuncState *)' Function 0x5637768b2b18 'luaK_getlabel' 'int (FuncState *)'
luaK_getlabel
   2: ImplicitCastExpr 0x5637768cd2b8 <lcode.c:338:3> 'int (*)(FuncState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768cd268 <col:3> 'int (FuncState *)' Function 0x5637768b2b18 'luaK_getlabel' 'int (FuncState *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FuncState *))
   3: DeclRefExpr 0x5637768cd290 <lcode.c:338:17> 'FuncState *' lvalue ParmVar 0x5637768ccef0 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768cd300 <lcode.c:338:17> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768cd290 <col:17> 'FuncState *' lvalue ParmVar 0x5637768ccef0 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: CallExpr 0x5637768cd2d0 <lcode.c:338:3, col:19> 'int'
|-ImplicitCastExpr 0x5637768cd2b8 <col:3> 'int (*)(FuncState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768cd268 <col:3> 'int (FuncState *)' Function 0x5637768b2b18 'luaK_getlabel' 'int (FuncState *)'
`-ImplicitCastExpr 0x5637768cd300 <col:17> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768cd290 <col:17> 'FuncState *' lvalue ParmVar 0x5637768ccef0 'fs' 'FuncState *'
[B1.2]([B1.4])
   6: DeclRefExpr 0x5637768cd318 <lcode.c:339:10> 'int (FuncState *, OpCode, int, int, int)' Function 0x56377687fb68 'luaK_codeABC' 'int (FuncState *, OpCode, int, int, int)'
luaK_codeABC
   7: ImplicitCastExpr 0x5637768cd408 <lcode.c:339:10> 'int (*)(FuncState *, OpCode, int, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768cd318 <col:10> 'int (FuncState *, OpCode, int, int, int)' Function 0x56377687fb68 'luaK_codeABC' 'int (FuncState *, OpCode, int, int, int)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FuncState *, OpCode, int, int, int))
   8: DeclRefExpr 0x5637768cd340 <lcode.c:339:23> 'FuncState *' lvalue ParmVar 0x5637768ccef0 'fs' 'FuncState *'
fs
   9: ImplicitCastExpr 0x5637768cd470 <lcode.c:339:23> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768cd340 <col:23> 'FuncState *' lvalue ParmVar 0x5637768ccef0 'fs' 'FuncState *'
[B1.8] (ImplicitCastExpr, LValueToRValue, FuncState *)
  10: DeclRefExpr 0x5637768cd368 <lcode.c:339:27> 'int' EnumConstant 0x56377686b570 'OP_LOADBOOL' 'int'
OP_LOADBOOL
  11: ImplicitCastExpr 0x5637768cd488 <lcode.c:339:27> 'OpCode':'OpCode' <IntegralCast>
`-DeclRefExpr 0x5637768cd368 <col:27> 'int' EnumConstant 0x56377686b570 'OP_LOADBOOL' 'int'
[B1.10] (ImplicitCastExpr, IntegralCast, OpCode)
  12: DeclRefExpr 0x5637768cd390 <lcode.c:339:40> 'int' lvalue ParmVar 0x5637768ccf68 'A' 'int'
A
  13: ImplicitCastExpr 0x5637768cd4a0 <lcode.c:339:40> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768cd390 <col:40> 'int' lvalue ParmVar 0x5637768ccf68 'A' 'int'
[B1.12] (ImplicitCastExpr, LValueToRValue, int)
  14: DeclRefExpr 0x5637768cd3b8 <lcode.c:339:43> 'int' lvalue ParmVar 0x5637768ccfe0 'b' 'int'
b
  15: ImplicitCastExpr 0x5637768cd4b8 <lcode.c:339:43> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768cd3b8 <col:43> 'int' lvalue ParmVar 0x5637768ccfe0 'b' 'int'
[B1.14] (ImplicitCastExpr, LValueToRValue, int)
  16: DeclRefExpr 0x5637768cd3e0 <lcode.c:339:46> 'int' lvalue ParmVar 0x5637768cd058 'jump' 'int'
jump
  17: ImplicitCastExpr 0x5637768cd4d0 <lcode.c:339:46> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768cd3e0 <col:46> 'int' lvalue ParmVar 0x5637768cd058 'jump' 'int'
[B1.16] (ImplicitCastExpr, LValueToRValue, int)
  18: CallExpr 0x5637768cd420 <lcode.c:339:10, col:50> 'int'
|-ImplicitCastExpr 0x5637768cd408 <col:10> 'int (*)(FuncState *, OpCode, int, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768cd318 <col:10> 'int (FuncState *, OpCode, int, int, int)' Function 0x56377687fb68 'luaK_codeABC' 'int (FuncState *, OpCode, int, int, int)'
|-ImplicitCastExpr 0x5637768cd470 <col:23> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768cd340 <col:23> 'FuncState *' lvalue ParmVar 0x5637768ccef0 'fs' 'FuncState *'
|-ImplicitCastExpr 0x5637768cd488 <col:27> 'OpCode':'OpCode' <IntegralCast>
| `-DeclRefExpr 0x5637768cd368 <col:27> 'int' EnumConstant 0x56377686b570 'OP_LOADBOOL' 'int'
|-ImplicitCastExpr 0x5637768cd4a0 <col:40> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5637768cd390 <col:40> 'int' lvalue ParmVar 0x5637768ccf68 'A' 'int'
|-ImplicitCastExpr 0x5637768cd4b8 <col:43> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5637768cd3b8 <col:43> 'int' lvalue ParmVar 0x5637768ccfe0 'b' 'int'
`-ImplicitCastExpr 0x5637768cd4d0 <col:46> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5637768cd3e0 <col:46> 'int' lvalue ParmVar 0x5637768cd058 'jump' 'int'
[B1.7]([B1.9], [B1.11], [B1.13], [B1.15], [B1.17])
  19: ReturnStmt 0x5637768cd4e8 <lcode.c:339:3, col:50>
`-CallExpr 0x5637768cd420 <col:10, col:50> 'int'
  |-ImplicitCastExpr 0x5637768cd408 <col:10> 'int (*)(FuncState *, OpCode, int, int, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5637768cd318 <col:10> 'int (FuncState *, OpCode, int, int, int)' Function 0x56377687fb68 'luaK_codeABC' 'int (FuncState *, OpCode, int, int, int)'
  |-ImplicitCastExpr 0x5637768cd470 <col:23> 'FuncState *' <LValueToRValue>
  | `-DeclRefExpr 0x5637768cd340 <col:23> 'FuncState *' lvalue ParmVar 0x5637768ccef0 'fs' 'FuncState *'
  |-ImplicitCastExpr 0x5637768cd488 <col:27> 'OpCode':'OpCode' <IntegralCast>
  | `-DeclRefExpr 0x5637768cd368 <col:27> 'int' EnumConstant 0x56377686b570 'OP_LOADBOOL' 'int'
  |-ImplicitCastExpr 0x5637768cd4a0 <col:40> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5637768cd390 <col:40> 'int' lvalue ParmVar 0x5637768ccf68 'A' 'int'
  |-ImplicitCastExpr 0x5637768cd4b8 <col:43> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5637768cd3b8 <col:43> 'int' lvalue ParmVar 0x5637768ccfe0 'b' 'int'
  `-ImplicitCastExpr 0x5637768cd4d0 <col:46> 'int' <LValueToRValue>
    `-DeclRefExpr 0x5637768cd3e0 <col:46> 'int' lvalue ParmVar 0x5637768cd058 'jump' 'int'
return [B1.18];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
