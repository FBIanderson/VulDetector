static void preinit_state(lua_State *L, global_State *g)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x56411995d7d8 <lstate.c:85:10> 'global_State *' lvalue ParmVar 0x56411995d578 'g' 'global_State *'
g
   2: ImplicitCastExpr 0x56411995d800 <lstate.c:85:10> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995d7d8 <col:10> 'global_State *' lvalue ParmVar 0x56411995d578 'g' 'global_State *'
[B1.1] (ImplicitCastExpr, LValueToRValue, global_State *)
   3: DeclRefExpr 0x56411995d740 <lstate.c:85:5> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x56411995d768 <lstate.c:85:5> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995d740 <col:5> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x56411995d780 <lstate.c:85:5, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x56411992dba8
`-ImplicitCastExpr 0x56411995d768 <lstate.c:85:5> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995d740 <col:5> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.4]->l_G
   6: BinaryOperator 0x56411995d818 <./lstate.h:130:14, lstate.c:85:10> 'global_State *' '='
|-ParenExpr 0x56411995d7b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
| `-MemberExpr 0x56411995d780 <lstate.c:85:5, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x56411992dba8
|   `-ImplicitCastExpr 0x56411995d768 <lstate.c:85:5> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x56411995d740 <col:5> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995d800 <col:10> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995d7d8 <col:10> 'global_State *' lvalue ParmVar 0x56411995d578 'g' 'global_State *'
([B1.5]) = [B1.2]
   7: IntegerLiteral 0x56411995d8b8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   8: CStyleCastExpr 0x56411995d8f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56411995d8b8 <col:24> 'int' 0
(void *)[B1.7] (CStyleCastExpr, NullToPointer, void *)
   9: ImplicitCastExpr 0x56411995d938 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'StkId':'TValue *' <NullToPointer>
`-ParenExpr 0x56411995d918 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56411995d8f0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56411995d8b8 <col:24> 'int' 0
([B1.8]) (ImplicitCastExpr, NullToPointer, StkId)
  10: DeclRefExpr 0x56411995d840 <lstate.c:86:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  11: ImplicitCastExpr 0x56411995d868 <lstate.c:86:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995d840 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: MemberExpr 0x56411995d880 <lstate.c:86:3, col:6> 'StkId':'TValue *' lvalue ->stack 0x56411992dd80
`-ImplicitCastExpr 0x56411995d868 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995d840 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.11]->stack
  13: BinaryOperator 0x56411995d950 <lstate.c:86:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'StkId':'TValue *' '='
|-MemberExpr 0x56411995d880 <lstate.c:86:3, col:6> 'StkId':'TValue *' lvalue ->stack 0x56411992dd80
| `-ImplicitCastExpr 0x56411995d868 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995d840 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995d938 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'StkId':'TValue *' <NullToPointer>
  `-ParenExpr 0x56411995d918 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56411995d8f0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56411995d8b8 <col:24> 'int' 0
[B1.12] = [B1.9]
  14: IntegerLiteral 0x56411995d9f0 <lstate.c:87:18> 'int' 0
0
  15: DeclRefExpr 0x56411995d978 <lstate.c:87:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x56411995d9a0 <lstate.c:87:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995d978 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: MemberExpr 0x56411995d9b8 <lstate.c:87:3, col:6> 'int' lvalue ->stacksize 0x56411992de90
`-ImplicitCastExpr 0x56411995d9a0 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995d978 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.16]->stacksize
  18: BinaryOperator 0x56411995da10 <lstate.c:87:3, col:18> 'int' '='
|-MemberExpr 0x56411995d9b8 <col:3, col:6> 'int' lvalue ->stacksize 0x56411992de90
| `-ImplicitCastExpr 0x56411995d9a0 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995d978 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-IntegerLiteral 0x56411995d9f0 <col:18> 'int' 0
[B1.17] = [B1.14]
  19: IntegerLiteral 0x56411995dab0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  20: CStyleCastExpr 0x56411995dae8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56411995dab0 <col:24> 'int' 0
(void *)[B1.19] (CStyleCastExpr, NullToPointer, void *)
  21: ImplicitCastExpr 0x56411995db30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct lua_longjmp *' <NullToPointer>
`-ParenExpr 0x56411995db10 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56411995dae8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56411995dab0 <col:24> 'int' 0
([B1.20]) (ImplicitCastExpr, NullToPointer, struct lua_longjmp *)
  22: DeclRefExpr 0x56411995da38 <lstate.c:88:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  23: ImplicitCastExpr 0x56411995da60 <lstate.c:88:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995da38 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.22] (ImplicitCastExpr, LValueToRValue, lua_State *)
  24: MemberExpr 0x56411995da78 <lstate.c:88:3, col:6> 'struct lua_longjmp *' lvalue ->errorJmp 0x56411992f400
`-ImplicitCastExpr 0x56411995da60 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995da38 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.23]->errorJmp
  25: BinaryOperator 0x56411995db48 <lstate.c:88:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'struct lua_longjmp *' '='
|-MemberExpr 0x56411995da78 <lstate.c:88:3, col:6> 'struct lua_longjmp *' lvalue ->errorJmp 0x56411992f400
| `-ImplicitCastExpr 0x56411995da60 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995da38 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995db30 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct lua_longjmp *' <NullToPointer>
  `-ParenExpr 0x56411995db10 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56411995dae8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56411995dab0 <col:24> 'int' 0
[B1.24] = [B1.21]
  26: IntegerLiteral 0x56411995dbe8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  27: CStyleCastExpr 0x56411995e590 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56411995dbe8 <col:24> 'int' 0
(void *)[B1.26] (CStyleCastExpr, NullToPointer, void *)
  28: ImplicitCastExpr 0x56411995e5d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <NullToPointer>
`-ParenExpr 0x56411995e5b8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56411995e590 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56411995dbe8 <col:24> 'int' 0
([B1.27]) (ImplicitCastExpr, NullToPointer, lua_Hook)
  29: DeclRefExpr 0x56411995db70 <lstate.c:89:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x56411995db98 <lstate.c:89:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995db70 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: MemberExpr 0x56411995dbb0 <lstate.c:89:3, col:6> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ->hook 0x56411992f1a0
`-ImplicitCastExpr 0x56411995db98 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995db70 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.30]->hook
  32: BinaryOperator 0x56411995e5f0 <lstate.c:89:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' '='
|-MemberExpr 0x56411995dbb0 <lstate.c:89:3, col:6> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' lvalue ->hook 0x56411992f1a0
| `-ImplicitCastExpr 0x56411995db98 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995db70 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995e5d8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'lua_Hook':'void (*)(lua_State *, lua_Debug *)' <NullToPointer>
  `-ParenExpr 0x56411995e5b8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56411995e590 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56411995dbe8 <col:24> 'int' 0
[B1.31] = [B1.28]
  33: IntegerLiteral 0x56411995e690 <lstate.c:90:17> 'int' 0
0
  34: ImplicitCastExpr 0x56411995e6b0 <lstate.c:90:17> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x56411995e690 <col:17> 'int' 0
[B1.33] (ImplicitCastExpr, IntegralCast, lu_byte)
  35: DeclRefExpr 0x56411995e618 <lstate.c:90:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  36: ImplicitCastExpr 0x56411995e640 <lstate.c:90:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995e618 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.35] (ImplicitCastExpr, LValueToRValue, lua_State *)
  37: MemberExpr 0x56411995e658 <lstate.c:90:3, col:6> 'lu_byte':'unsigned char' lvalue ->hookmask 0x56411992e008
`-ImplicitCastExpr 0x56411995e640 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995e618 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.36]->hookmask
  38: BinaryOperator 0x56411995e6c8 <lstate.c:90:3, col:17> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x56411995e658 <col:3, col:6> 'lu_byte':'unsigned char' lvalue ->hookmask 0x56411992e008
| `-ImplicitCastExpr 0x56411995e640 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995e618 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995e6b0 <col:17> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x56411995e690 <col:17> 'int' 0
[B1.37] = [B1.34]
  39: IntegerLiteral 0x56411995e768 <lstate.c:91:22> 'int' 0
0
  40: DeclRefExpr 0x56411995e6f0 <lstate.c:91:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  41: ImplicitCastExpr 0x56411995e718 <lstate.c:91:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995e6f0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.40] (ImplicitCastExpr, LValueToRValue, lua_State *)
  42: MemberExpr 0x56411995e730 <lstate.c:91:3, col:6> 'int' lvalue ->basehookcount 0x56411992e0c0
`-ImplicitCastExpr 0x56411995e718 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995e6f0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.41]->basehookcount
  43: BinaryOperator 0x56411995e788 <lstate.c:91:3, col:22> 'int' '='
|-MemberExpr 0x56411995e730 <col:3, col:6> 'int' lvalue ->basehookcount 0x56411992e0c0
| `-ImplicitCastExpr 0x56411995e718 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995e6f0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-IntegerLiteral 0x56411995e768 <col:22> 'int' 0
[B1.42] = [B1.39]
  44: IntegerLiteral 0x56411995e828 <lstate.c:92:18> 'int' 1
1
  45: ImplicitCastExpr 0x56411995e848 <lstate.c:92:18> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x56411995e828 <col:18> 'int' 1
[B1.44] (ImplicitCastExpr, IntegralCast, lu_byte)
  46: DeclRefExpr 0x56411995e7b0 <lstate.c:92:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  47: ImplicitCastExpr 0x56411995e7d8 <lstate.c:92:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995e7b0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.46] (ImplicitCastExpr, LValueToRValue, lua_State *)
  48: MemberExpr 0x56411995e7f0 <lstate.c:92:3, col:6> 'lu_byte':'unsigned char' lvalue ->allowhook 0x56411992e060
`-ImplicitCastExpr 0x56411995e7d8 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995e7b0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.47]->allowhook
  49: BinaryOperator 0x56411995e860 <lstate.c:92:3, col:18> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x56411995e7f0 <col:3, col:6> 'lu_byte':'unsigned char' lvalue ->allowhook 0x56411992e060
| `-ImplicitCastExpr 0x56411995e7d8 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995e7b0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995e848 <col:18> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x56411995e828 <col:18> 'int' 1
[B1.48] = [B1.45]
  50: DeclRefExpr 0x56411995e900 <lstate.c:93:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  51: ImplicitCastExpr 0x56411995e928 <lstate.c:93:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995e900 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.50] (ImplicitCastExpr, LValueToRValue, lua_State *)
  52: MemberExpr 0x56411995e940 <lstate.c:93:18, ./ldebug.h:18:46> 'int' lvalue ->basehookcount 0x56411992e0c0
`-ImplicitCastExpr 0x56411995e928 <lstate.c:93:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995e900 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.51]->basehookcount
  53: ImplicitCastExpr 0x56411995e978 <lstate.c:93:18, ./ldebug.h:18:46> 'int' <LValueToRValue>
`-MemberExpr 0x56411995e940 <lstate.c:93:18, ./ldebug.h:18:46> 'int' lvalue ->basehookcount 0x56411992e0c0
  `-ImplicitCastExpr 0x56411995e928 <lstate.c:93:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x56411995e900 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.52] (ImplicitCastExpr, LValueToRValue, int)
  54: DeclRefExpr 0x56411995e888 <lstate.c:93:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  55: ImplicitCastExpr 0x56411995e8b0 <lstate.c:93:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995e888 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.54] (ImplicitCastExpr, LValueToRValue, lua_State *)
  56: MemberExpr 0x56411995e8c8 <lstate.c:93:18, ./ldebug.h:18:31> 'int' lvalue ->hookcount 0x56411992e120
`-ImplicitCastExpr 0x56411995e8b0 <lstate.c:93:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995e888 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.55]->hookcount
  57: BinaryOperator 0x56411995e990 <lstate.c:93:18, ./ldebug.h:18:46> 'int' '='
|-MemberExpr 0x56411995e8c8 <lstate.c:93:18, ./ldebug.h:18:31> 'int' lvalue ->hookcount 0x56411992e120
| `-ImplicitCastExpr 0x56411995e8b0 <lstate.c:93:18> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995e888 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995e978 <col:18, ./ldebug.h:18:46> 'int' <LValueToRValue>
  `-MemberExpr 0x56411995e940 <lstate.c:93:18, ./ldebug.h:18:46> 'int' lvalue ->basehookcount 0x56411992e0c0
    `-ImplicitCastExpr 0x56411995e928 <lstate.c:93:18> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x56411995e900 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.56] = [B1.53]
  58: IntegerLiteral 0x56411995ea50 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  59: CStyleCastExpr 0x56411995ea88 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56411995ea50 <col:24> 'int' 0
(void *)[B1.58] (CStyleCastExpr, NullToPointer, void *)
  60: ImplicitCastExpr 0x56411995ead0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'GCObject *' <NullToPointer>
`-ParenExpr 0x56411995eab0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56411995ea88 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56411995ea50 <col:24> 'int' 0
([B1.59]) (ImplicitCastExpr, NullToPointer, GCObject *)
  61: DeclRefExpr 0x56411995e9d8 <lstate.c:94:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  62: ImplicitCastExpr 0x56411995ea00 <lstate.c:94:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995e9d8 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.61] (ImplicitCastExpr, LValueToRValue, lua_State *)
  63: MemberExpr 0x56411995ea18 <lstate.c:94:3, col:6> 'GCObject *' lvalue ->openupval 0x56411992f2a8
`-ImplicitCastExpr 0x56411995ea00 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995e9d8 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.62]->openupval
  64: BinaryOperator 0x56411995eae8 <lstate.c:94:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'GCObject *' '='
|-MemberExpr 0x56411995ea18 <lstate.c:94:3, col:6> 'GCObject *' lvalue ->openupval 0x56411992f2a8
| `-ImplicitCastExpr 0x56411995ea00 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995e9d8 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995ead0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'GCObject *' <NullToPointer>
  `-ParenExpr 0x56411995eab0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56411995ea88 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56411995ea50 <col:24> 'int' 0
[B1.63] = [B1.60]
  65: IntegerLiteral 0x56411995eb88 <lstate.c:95:16> 'int' 0
0
  66: DeclRefExpr 0x56411995eb10 <lstate.c:95:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  67: ImplicitCastExpr 0x56411995eb38 <lstate.c:95:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995eb10 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.66] (ImplicitCastExpr, LValueToRValue, lua_State *)
  68: MemberExpr 0x56411995eb50 <lstate.c:95:3, col:6> 'int' lvalue ->size_ci 0x56411992def0
`-ImplicitCastExpr 0x56411995eb38 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995eb10 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.67]->size_ci
  69: BinaryOperator 0x56411995eba8 <lstate.c:95:3, col:16> 'int' '='
|-MemberExpr 0x56411995eb50 <col:3, col:6> 'int' lvalue ->size_ci 0x56411992def0
| `-ImplicitCastExpr 0x56411995eb38 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995eb10 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-IntegerLiteral 0x56411995eb88 <col:16> 'int' 0
[B1.68] = [B1.65]
  70: IntegerLiteral 0x56411995ecc0 <lstate.c:96:32> 'int' 0
0
  71: ImplicitCastExpr 0x56411995ece0 <lstate.c:96:32> 'unsigned short' <IntegralCast>
`-IntegerLiteral 0x56411995ecc0 <col:32> 'int' 0
[B1.70] (ImplicitCastExpr, IntegralCast, unsigned short)
  72: DeclRefExpr 0x56411995ec48 <lstate.c:96:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  73: ImplicitCastExpr 0x56411995ec70 <lstate.c:96:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995ec48 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.72] (ImplicitCastExpr, LValueToRValue, lua_State *)
  74: MemberExpr 0x56411995ec88 <lstate.c:96:16, col:19> 'unsigned short' lvalue ->baseCcalls 0x56411992dfb0
`-ImplicitCastExpr 0x56411995ec70 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995ec48 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.73]->baseCcalls
  75: BinaryOperator 0x56411995ecf8 <lstate.c:96:16, col:32> 'unsigned short' '='
|-MemberExpr 0x56411995ec88 <col:16, col:19> 'unsigned short' lvalue ->baseCcalls 0x56411992dfb0
| `-ImplicitCastExpr 0x56411995ec70 <col:16> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995ec48 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995ece0 <col:32> 'unsigned short' <IntegralCast>
  `-IntegerLiteral 0x56411995ecc0 <col:32> 'int' 0
[B1.74] = [B1.71]
  76: DeclRefExpr 0x56411995ebd0 <lstate.c:96:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  77: ImplicitCastExpr 0x56411995ebf8 <lstate.c:96:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995ebd0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.76] (ImplicitCastExpr, LValueToRValue, lua_State *)
  78: MemberExpr 0x56411995ec10 <lstate.c:96:3, col:6> 'unsigned short' lvalue ->nCcalls 0x56411992df50
`-ImplicitCastExpr 0x56411995ebf8 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995ebd0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.77]->nCcalls
  79: BinaryOperator 0x56411995ed20 <lstate.c:96:3, col:32> 'unsigned short' '='
|-MemberExpr 0x56411995ec10 <col:3, col:6> 'unsigned short' lvalue ->nCcalls 0x56411992df50
| `-ImplicitCastExpr 0x56411995ebf8 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995ebd0 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-BinaryOperator 0x56411995ecf8 <col:16, col:32> 'unsigned short' '='
  |-MemberExpr 0x56411995ec88 <col:16, col:19> 'unsigned short' lvalue ->baseCcalls 0x56411992dfb0
  | `-ImplicitCastExpr 0x56411995ec70 <col:16> 'lua_State *' <LValueToRValue>
  |   `-DeclRefExpr 0x56411995ec48 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
  `-ImplicitCastExpr 0x56411995ece0 <col:32> 'unsigned short' <IntegralCast>
    `-IntegerLiteral 0x56411995ecc0 <col:32> 'int' 0
[B1.78] = [B1.75]
  80: IntegerLiteral 0x56411995edc0 <lstate.c:97:15> 'int' 0
0
  81: ImplicitCastExpr 0x56411995ede0 <lstate.c:97:15> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x56411995edc0 <col:15> 'int' 0
[B1.80] (ImplicitCastExpr, IntegralCast, lu_byte)
  82: DeclRefExpr 0x56411995ed48 <lstate.c:97:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  83: ImplicitCastExpr 0x56411995ed70 <lstate.c:97:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995ed48 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.82] (ImplicitCastExpr, LValueToRValue, lua_State *)
  84: MemberExpr 0x56411995ed88 <lstate.c:97:3, col:6> 'lu_byte':'unsigned char' lvalue ->status 0x56411992da20
`-ImplicitCastExpr 0x56411995ed70 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995ed48 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.83]->status
  85: BinaryOperator 0x56411995edf8 <lstate.c:97:3, col:15> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x56411995ed88 <col:3, col:6> 'lu_byte':'unsigned char' lvalue ->status 0x56411992da20
| `-ImplicitCastExpr 0x56411995ed70 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995ed48 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995ede0 <col:15> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x56411995edc0 <col:15> 'int' 0
[B1.84] = [B1.81]
  86: IntegerLiteral 0x56411995ef10 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  87: CStyleCastExpr 0x56411995ef48 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56411995ef10 <col:24> 'int' 0
(void *)[B1.86] (CStyleCastExpr, NullToPointer, void *)
  88: ImplicitCastExpr 0x56411995ef90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'CallInfo *' <NullToPointer>
`-ParenExpr 0x56411995ef70 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56411995ef48 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56411995ef10 <col:24> 'int' 0
([B1.87]) (ImplicitCastExpr, NullToPointer, CallInfo *)
  89: DeclRefExpr 0x56411995ee98 <lstate.c:98:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  90: ImplicitCastExpr 0x56411995eec0 <lstate.c:98:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995ee98 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.89] (ImplicitCastExpr, LValueToRValue, lua_State *)
  91: MemberExpr 0x56411995eed8 <lstate.c:98:16, col:19> 'CallInfo *' lvalue ->ci 0x56411992dc78
`-ImplicitCastExpr 0x56411995eec0 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995ee98 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.90]->ci
  92: BinaryOperator 0x56411995efa8 <lstate.c:98:16, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'CallInfo *' '='
|-MemberExpr 0x56411995eed8 <lstate.c:98:16, col:19> 'CallInfo *' lvalue ->ci 0x56411992dc78
| `-ImplicitCastExpr 0x56411995eec0 <col:16> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995ee98 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995ef90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'CallInfo *' <NullToPointer>
  `-ParenExpr 0x56411995ef70 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56411995ef48 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56411995ef10 <col:24> 'int' 0
[B1.91] = [B1.88]
  93: DeclRefExpr 0x56411995ee20 <lstate.c:98:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
  94: ImplicitCastExpr 0x56411995ee48 <lstate.c:98:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995ee20 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.93] (ImplicitCastExpr, LValueToRValue, lua_State *)
  95: MemberExpr 0x56411995ee60 <lstate.c:98:3, col:6> 'CallInfo *' lvalue ->base_ci 0x56411992de30
`-ImplicitCastExpr 0x56411995ee48 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995ee20 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.94]->base_ci
  96: BinaryOperator 0x56411995efd0 <lstate.c:98:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'CallInfo *' '='
|-MemberExpr 0x56411995ee60 <lstate.c:98:3, col:6> 'CallInfo *' lvalue ->base_ci 0x56411992de30
| `-ImplicitCastExpr 0x56411995ee48 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995ee20 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-BinaryOperator 0x56411995efa8 <col:16, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'CallInfo *' '='
  |-MemberExpr 0x56411995eed8 <lstate.c:98:16, col:19> 'CallInfo *' lvalue ->ci 0x56411992dc78
  | `-ImplicitCastExpr 0x56411995eec0 <col:16> 'lua_State *' <LValueToRValue>
  |   `-DeclRefExpr 0x56411995ee98 <col:16> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
  `-ImplicitCastExpr 0x56411995ef90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'CallInfo *' <NullToPointer>
    `-ParenExpr 0x56411995ef70 <col:16, col:25> 'void *'
      `-CStyleCastExpr 0x56411995ef48 <col:17, col:24> 'void *' <NullToPointer>
        `-IntegerLiteral 0x56411995ef10 <col:24> 'int' 0
[B1.95] = [B1.92]
  97: IntegerLiteral 0x56411995f070 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  98: CStyleCastExpr 0x56411995f0a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x56411995f070 <col:24> 'int' 0
(void *)[B1.97] (CStyleCastExpr, NullToPointer, void *)
  99: ImplicitCastExpr 0x56411995f0f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const Instruction *' <NullToPointer>
`-ParenExpr 0x56411995f0d0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x56411995f0a8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x56411995f070 <col:24> 'int' 0
([B1.98]) (ImplicitCastExpr, NullToPointer, const Instruction *)
 100: DeclRefExpr 0x56411995eff8 <lstate.c:99:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
 101: ImplicitCastExpr 0x56411995f020 <lstate.c:99:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995eff8 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.100] (ImplicitCastExpr, LValueToRValue, lua_State *)
 102: MemberExpr 0x56411995f038 <lstate.c:99:3, col:6> 'const Instruction *' lvalue ->savedpc 0x56411992dcd0
`-ImplicitCastExpr 0x56411995f020 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995eff8 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.101]->savedpc
 103: BinaryOperator 0x56411995f108 <lstate.c:99:3, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'const Instruction *' '='
|-MemberExpr 0x56411995f038 <lstate.c:99:3, col:6> 'const Instruction *' lvalue ->savedpc 0x56411992dcd0
| `-ImplicitCastExpr 0x56411995f020 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995eff8 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995f0f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const Instruction *' <NullToPointer>
  `-ParenExpr 0x56411995f0d0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x56411995f0a8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x56411995f070 <col:24> 'int' 0
[B1.102] = [B1.99]
 104: IntegerLiteral 0x56411995f1a8 <lstate.c:100:16> 'int' 0
0
 105: ImplicitCastExpr 0x56411995f1c8 <lstate.c:100:16> 'ptrdiff_t':'long' <IntegralCast>
`-IntegerLiteral 0x56411995f1a8 <col:16> 'int' 0
[B1.104] (ImplicitCastExpr, IntegralCast, ptrdiff_t)
 106: DeclRefExpr 0x56411995f130 <lstate.c:100:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
 107: ImplicitCastExpr 0x56411995f158 <lstate.c:100:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995f130 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.106] (ImplicitCastExpr, LValueToRValue, lua_State *)
 108: MemberExpr 0x56411995f170 <lstate.c:100:3, col:6> 'ptrdiff_t':'long' lvalue ->errfunc 0x56411992f458
`-ImplicitCastExpr 0x56411995f158 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995f130 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.107]->errfunc
 109: BinaryOperator 0x56411995f1e0 <lstate.c:100:3, col:16> 'ptrdiff_t':'long' '='
|-MemberExpr 0x56411995f170 <col:3, col:6> 'ptrdiff_t':'long' lvalue ->errfunc 0x56411992f458
| `-ImplicitCastExpr 0x56411995f158 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x56411995f130 <col:3> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-ImplicitCastExpr 0x56411995f1c8 <col:16> 'ptrdiff_t':'long' <IntegralCast>
  `-IntegerLiteral 0x56411995f1a8 <col:16> 'int' 0
[B1.108] = [B1.105]
 110: IntegerLiteral 0x56411995f318 <./lua.h:74:19> 'int' 0
0
 111: DeclRefExpr 0x56411995f208 <lstate.c:101:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
L
 112: ImplicitCastExpr 0x56411995f230 <lstate.c:101:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x56411995f208 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.111] (ImplicitCastExpr, LValueToRValue, lua_State *)
 113: MemberExpr 0x56411995f248 <lstate.c:101:18, ./lstate.h:22:20> 'TValue':'struct lua_TValue' lvalue ->l_gt 0x56411992f1f8
`-ImplicitCastExpr 0x56411995f230 <lstate.c:101:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x56411995f208 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
[B1.112]->l_gt
 114: UnaryOperator 0x56411995f280 <./lstate.h:22:16, col:20> 'TValue *' prefix '&'
`-MemberExpr 0x56411995f248 <lstate.c:101:18, ./lstate.h:22:20> 'TValue':'struct lua_TValue' lvalue ->l_gt 0x56411992f1f8
  `-ImplicitCastExpr 0x56411995f230 <lstate.c:101:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x56411995f208 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
&[B1.113]
 115: MemberExpr 0x56411995f2e0 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x56411990ad20
`-ParenExpr 0x56411995f2c0 <col:27, col:31> 'TValue *'
  `-ParenExpr 0x56411995f2a0 <./lstate.h:22:15, col:24> 'TValue *'
    `-UnaryOperator 0x56411995f280 <col:16, col:20> 'TValue *' prefix '&'
      `-MemberExpr 0x56411995f248 <lstate.c:101:18, ./lstate.h:22:20> 'TValue':'struct lua_TValue' lvalue ->l_gt 0x56411992f1f8
        `-ImplicitCastExpr 0x56411995f230 <lstate.c:101:18> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x56411995f208 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
(([B1.114]))->tt
 116: BinaryOperator 0x56411995f338 <./lobject.h:117:27, ./lua.h:74:19> 'int' '='
|-MemberExpr 0x56411995f2e0 <./lobject.h:117:27, col:34> 'int' lvalue ->tt 0x56411990ad20
| `-ParenExpr 0x56411995f2c0 <col:27, col:31> 'TValue *'
|   `-ParenExpr 0x56411995f2a0 <./lstate.h:22:15, col:24> 'TValue *'
|     `-UnaryOperator 0x56411995f280 <col:16, col:20> 'TValue *' prefix '&'
|       `-MemberExpr 0x56411995f248 <lstate.c:101:18, ./lstate.h:22:20> 'TValue':'struct lua_TValue' lvalue ->l_gt 0x56411992f1f8
|         `-ImplicitCastExpr 0x56411995f230 <lstate.c:101:18> 'lua_State *' <LValueToRValue>
|           `-DeclRefExpr 0x56411995f208 <col:18> 'lua_State *' lvalue ParmVar 0x56411995d508 'L' 'lua_State *'
`-IntegerLiteral 0x56411995f318 <./lua.h:74:19> 'int' 0
[B1.115] = [B1.110]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
