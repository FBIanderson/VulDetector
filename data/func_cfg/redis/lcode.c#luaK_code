static int luaK_code(FuncState *fs, Instruction i, int line)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: DeclRefExpr 0x5637768ec510 <lcode.c:799:25> 'int' lvalue ParmVar 0x5637768eaf20 'line' 'int'
line
   2: ImplicitCastExpr 0x5637768ec538 <lcode.c:799:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768ec510 <col:25> 'int' lvalue ParmVar 0x5637768eaf20 'line' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5637768ec3c8 <lcode.c:799:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x5637768ec3f0 <lcode.c:799:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768ec3c8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B1.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x5637768ec408 <lcode.c:799:3, col:6> 'int *' lvalue ->lineinfo 0x563776857ff0
`-ImplicitCastExpr 0x5637768ec3f0 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ec3c8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B1.4]->lineinfo
   6: ImplicitCastExpr 0x5637768ec4b8 <lcode.c:799:3, col:6> 'int *' <LValueToRValue>
`-MemberExpr 0x5637768ec408 <col:3, col:6> 'int *' lvalue ->lineinfo 0x563776857ff0
  `-ImplicitCastExpr 0x5637768ec3f0 <col:3> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ec3c8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B1.5] (ImplicitCastExpr, LValueToRValue, int *)
   7: DeclRefExpr 0x5637768ec440 <lcode.c:799:15> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
   8: ImplicitCastExpr 0x5637768ec468 <lcode.c:799:15> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768ec440 <col:15> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B1.7] (ImplicitCastExpr, LValueToRValue, FuncState *)
   9: MemberExpr 0x5637768ec480 <lcode.c:799:15, col:19> 'int' lvalue ->pc 0x56377687e130
`-ImplicitCastExpr 0x5637768ec468 <col:15> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ec440 <col:15> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B1.8]->pc
  10: ImplicitCastExpr 0x5637768ec4d0 <lcode.c:799:15, col:19> 'int' <LValueToRValue>
`-MemberExpr 0x5637768ec480 <col:15, col:19> 'int' lvalue ->pc 0x56377687e130
  `-ImplicitCastExpr 0x5637768ec468 <col:15> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ec440 <col:15> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B1.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x5637768ec4e8 <lcode.c:799:3, col:21> 'int' lvalue
|-ImplicitCastExpr 0x5637768ec4b8 <col:3, col:6> 'int *' <LValueToRValue>
| `-MemberExpr 0x5637768ec408 <col:3, col:6> 'int *' lvalue ->lineinfo 0x563776857ff0
|   `-ImplicitCastExpr 0x5637768ec3f0 <col:3> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768ec3c8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
`-ImplicitCastExpr 0x5637768ec4d0 <col:15, col:19> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768ec480 <col:15, col:19> 'int' lvalue ->pc 0x56377687e130
    `-ImplicitCastExpr 0x5637768ec468 <col:15> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x5637768ec440 <col:15> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B1.6][[B1.10]]
  12: BinaryOperator 0x5637768ec550 <lcode.c:799:3, col:25> 'int' '='
|-ArraySubscriptExpr 0x5637768ec4e8 <col:3, col:21> 'int' lvalue
| |-ImplicitCastExpr 0x5637768ec4b8 <col:3, col:6> 'int *' <LValueToRValue>
| | `-MemberExpr 0x5637768ec408 <col:3, col:6> 'int *' lvalue ->lineinfo 0x563776857ff0
| |   `-ImplicitCastExpr 0x5637768ec3f0 <col:3> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x5637768ec3c8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
| `-ImplicitCastExpr 0x5637768ec4d0 <col:15, col:19> 'int' <LValueToRValue>
|   `-MemberExpr 0x5637768ec480 <col:15, col:19> 'int' lvalue ->pc 0x56377687e130
|     `-ImplicitCastExpr 0x5637768ec468 <col:15> 'FuncState *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768ec440 <col:15> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768ec538 <col:25> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5637768ec510 <col:25> 'int' lvalue ParmVar 0x5637768eaf20 'line' 'int'
[B1.11] = [B1.2]
  13: DeclRefExpr 0x5637768ec578 <lcode.c:800:10> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
  14: ImplicitCastExpr 0x5637768ec5a0 <lcode.c:800:10> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768ec578 <col:10> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B1.13] (ImplicitCastExpr, LValueToRValue, FuncState *)
  15: MemberExpr 0x5637768ec5b8 <lcode.c:800:10, col:14> 'int' lvalue ->pc 0x56377687e130
`-ImplicitCastExpr 0x5637768ec5a0 <col:10> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ec578 <col:10> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B1.14]->pc
  16: UnaryOperator 0x5637768ec5f0 <lcode.c:800:10, col:16> 'int' postfix '++'
`-MemberExpr 0x5637768ec5b8 <col:10, col:14> 'int' lvalue ->pc 0x56377687e130
  `-ImplicitCastExpr 0x5637768ec5a0 <col:10> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ec578 <col:10> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B1.15]++
  17: ReturnStmt 0x5637768ec610 <lcode.c:800:3, col:16>
`-UnaryOperator 0x5637768ec5f0 <col:10, col:16> 'int' postfix '++'
  `-MemberExpr 0x5637768ec5b8 <col:10, col:14> 'int' lvalue ->pc 0x56377687e130
    `-ImplicitCastExpr 0x5637768ec5a0 <col:10> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x5637768ec578 <col:10> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
return [B1.16];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5637768ebee0 <./lmem.h:35:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
luaM_growaux_
   2: ImplicitCastExpr 0x5637768ec1b0 <./lmem.h:35:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768ebee0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, int *, size_t, int, const char *))
   3: DeclRefExpr 0x5637768ebf08 <lcode.c:797:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768ebf30 <lcode.c:797:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebf08 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: MemberExpr 0x5637768ebf48 <lcode.c:797:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
`-ImplicitCastExpr 0x5637768ebf30 <col:19> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebf08 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B2.4]->L
   6: ImplicitCastExpr 0x5637768ec220 <lcode.c:797:19, col:23> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x5637768ebf48 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
  `-ImplicitCastExpr 0x5637768ebf30 <col:19> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ebf08 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B2.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: DeclRefExpr 0x5637768ebf80 <lcode.c:797:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
   8: ImplicitCastExpr 0x5637768ebfa8 <lcode.c:797:26> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebf80 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.7] (ImplicitCastExpr, LValueToRValue, Proto *)
   9: MemberExpr 0x5637768ebfc0 <lcode.c:797:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
`-ImplicitCastExpr 0x5637768ebfa8 <col:26> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebf80 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.8]->lineinfo
  10: ImplicitCastExpr 0x5637768ec238 <lcode.c:797:26, col:29> 'int *' <LValueToRValue>
`-MemberExpr 0x5637768ebfc0 <col:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
  `-ImplicitCastExpr 0x5637768ebfa8 <col:26> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ebf80 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.9] (ImplicitCastExpr, LValueToRValue, int *)
  11: ImplicitCastExpr 0x5637768ec250 <lcode.c:797:26, col:29> 'void *' <BitCast>
`-ImplicitCastExpr 0x5637768ec238 <col:26, col:29> 'int *' <LValueToRValue>
  `-MemberExpr 0x5637768ebfc0 <col:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
    `-ImplicitCastExpr 0x5637768ebfa8 <col:26> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x5637768ebf80 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.10] (ImplicitCastExpr, BitCast, void *)
  12: DeclRefExpr 0x5637768ebff8 <lcode.c:797:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
  13: ImplicitCastExpr 0x5637768ec020 <lcode.c:797:47> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebff8 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.12] (ImplicitCastExpr, LValueToRValue, Proto *)
  14: MemberExpr 0x5637768ec038 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
`-ImplicitCastExpr 0x5637768ec020 <col:47> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebff8 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.13]->sizelineinfo
  15: UnaryOperator 0x5637768ec090 <./lmem.h:35:46, col:52> 'int *' prefix '&'
`-ParenExpr 0x5637768ec070 <col:47, col:52> 'int' lvalue
  `-MemberExpr 0x5637768ec038 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
    `-ImplicitCastExpr 0x5637768ec020 <col:47> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x5637768ebff8 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
&([B2.14])
  16: UnaryExprOrTypeTraitExpr 0x5637768ec0c8 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'int'
sizeof(int)
  17: IntegerLiteral 0x5637768ec0e8 <<built-in>:37:21> 'int' 2147483647
2147483647
  18: IntegerLiteral 0x5637768ec108 <./llimits.h:35:26> 'int' 2
2
  19: BinaryOperator 0x5637768ec128 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|-IntegerLiteral 0x5637768ec0e8 <<built-in>:37:21> 'int' 2147483647
`-IntegerLiteral 0x5637768ec108 <./llimits.h:35:26> 'int' 2
[B2.17] - [B2.18]
  20: StringLiteral 0x5637768ec170 <lcode.c:798:28> 'char [19]' lvalue "code size overflow"
"code size overflow"
  21: ImplicitCastExpr 0x5637768ec268 <lcode.c:798:28> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5637768ec170 <col:28> 'char [19]' lvalue "code size overflow"
[B2.20] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  22: ImplicitCastExpr 0x5637768ec280 <lcode.c:798:28> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5637768ec268 <col:28> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5637768ec170 <col:28> 'char [19]' lvalue "code size overflow"
[B2.21] (ImplicitCastExpr, BitCast, const char *)
  23: CallExpr 0x5637768ec1c8 <./lmem.h:35:28, col:71> 'void *'
|-ImplicitCastExpr 0x5637768ec1b0 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768ebee0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
|-ImplicitCastExpr 0x5637768ec220 <lcode.c:797:19, col:23> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x5637768ebf48 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
|   `-ImplicitCastExpr 0x5637768ebf30 <col:19> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768ebf08 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
|-ImplicitCastExpr 0x5637768ec250 <col:26, col:29> 'void *' <BitCast>
| `-ImplicitCastExpr 0x5637768ec238 <col:26, col:29> 'int *' <LValueToRValue>
|   `-MemberExpr 0x5637768ebfc0 <col:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
|     `-ImplicitCastExpr 0x5637768ebfa8 <col:26> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768ebf80 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
|-UnaryOperator 0x5637768ec090 <./lmem.h:35:46, col:52> 'int *' prefix '&'
| `-ParenExpr 0x5637768ec070 <col:47, col:52> 'int' lvalue
|   `-MemberExpr 0x5637768ec038 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
|     `-ImplicitCastExpr 0x5637768ec020 <col:47> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768ebff8 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
|-UnaryExprOrTypeTraitExpr 0x5637768ec0c8 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'int'
|-ParenExpr 0x5637768ec150 <./llimits.h:35:17, col:27> 'int'
| `-BinaryOperator 0x5637768ec128 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|   |-IntegerLiteral 0x5637768ec0e8 <<built-in>:37:21> 'int' 2147483647
|   `-IntegerLiteral 0x5637768ec108 <./llimits.h:35:26> 'int' 2
`-ImplicitCastExpr 0x5637768ec280 <lcode.c:798:28> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5637768ec268 <col:28> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5637768ec170 <col:28> 'char [19]' lvalue "code size overflow"
[B2.2]([B2.6], [B2.11], [B2.15], [B2.16], ([B2.19]), [B2.22])
  24: CStyleCastExpr 0x5637768ec300 <./llimits.h:75:23, col:30> 'int *' <BitCast>
`-ParenExpr 0x5637768ec2e0 <col:26, col:30> 'void *'
  `-CallExpr 0x5637768ec1c8 <./lmem.h:35:28, col:71> 'void *'
    |-ImplicitCastExpr 0x5637768ec1b0 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5637768ebee0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
    |-ImplicitCastExpr 0x5637768ec220 <lcode.c:797:19, col:23> 'struct lua_State *' <LValueToRValue>
    | `-MemberExpr 0x5637768ebf48 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
    |   `-ImplicitCastExpr 0x5637768ebf30 <col:19> 'FuncState *' <LValueToRValue>
    |     `-DeclRefExpr 0x5637768ebf08 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
    |-ImplicitCastExpr 0x5637768ec250 <col:26, col:29> 'void *' <BitCast>
    | `-ImplicitCastExpr 0x5637768ec238 <col:26, col:29> 'int *' <LValueToRValue>
    |   `-MemberExpr 0x5637768ebfc0 <col:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
    |     `-ImplicitCastExpr 0x5637768ebfa8 <col:26> 'Proto *' <LValueToRValue>
    |       `-DeclRefExpr 0x5637768ebf80 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
    |-UnaryOperator 0x5637768ec090 <./lmem.h:35:46, col:52> 'int *' prefix '&'
    | `-ParenExpr 0x5637768ec070 <col:47, col:52> 'int' lvalue
    |   `-MemberExpr 0x5637768ec038 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
    |     `-ImplicitCastExpr 0x5637768ec020 <col:47> 'Proto *' <LValueToRValue>
    |       `-DeclRefExpr 0x5637768ebff8 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
    |-UnaryExprOrTypeTraitExpr 0x5637768ec0c8 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'int'
    |-ParenExpr 0x5637768ec150 <./llimits.h:35:17, col:27> 'int'
    | `-BinaryOperator 0x5637768ec128 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
    |   |-IntegerLiteral 0x5637768ec0e8 <<built-in>:37:21> 'int' 2147483647
    |   `-IntegerLiteral 0x5637768ec108 <./llimits.h:35:26> 'int' 2
    `-ImplicitCastExpr 0x5637768ec280 <lcode.c:798:28> 'const char *' <BitCast>
      `-ImplicitCastExpr 0x5637768ec268 <col:28> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x5637768ec170 <col:28> 'char [19]' lvalue "code size overflow"
(int *)([B2.23]) (CStyleCastExpr, BitCast, int *)
  25: DeclRefExpr 0x5637768ebe48 <lcode.c:797:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
  26: ImplicitCastExpr 0x5637768ebe70 <lcode.c:797:26> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebe48 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.25] (ImplicitCastExpr, LValueToRValue, Proto *)
  27: MemberExpr 0x5637768ebe88 <lcode.c:797:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
`-ImplicitCastExpr 0x5637768ebe70 <col:26> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebe48 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B2.26]->lineinfo
  28: BinaryOperator 0x5637768ec348 <./lmem.h:35:14, ./llimits.h:75:31> 'int *' '='
|-ParenExpr 0x5637768ebec0 <./lmem.h:35:14, col:16> 'int *' lvalue
| `-MemberExpr 0x5637768ebe88 <lcode.c:797:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
|   `-ImplicitCastExpr 0x5637768ebe70 <col:26> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768ebe48 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
`-ParenExpr 0x5637768ec328 <./llimits.h:75:22, col:31> 'int *'
  `-CStyleCastExpr 0x5637768ec300 <col:23, col:30> 'int *' <BitCast>
    `-ParenExpr 0x5637768ec2e0 <col:26, col:30> 'void *'
      `-CallExpr 0x5637768ec1c8 <./lmem.h:35:28, col:71> 'void *'
        |-ImplicitCastExpr 0x5637768ec1b0 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5637768ebee0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
        |-ImplicitCastExpr 0x5637768ec220 <lcode.c:797:19, col:23> 'struct lua_State *' <LValueToRValue>
        | `-MemberExpr 0x5637768ebf48 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
        |   `-ImplicitCastExpr 0x5637768ebf30 <col:19> 'FuncState *' <LValueToRValue>
        |     `-DeclRefExpr 0x5637768ebf08 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
        |-ImplicitCastExpr 0x5637768ec250 <col:26, col:29> 'void *' <BitCast>
        | `-ImplicitCastExpr 0x5637768ec238 <col:26, col:29> 'int *' <LValueToRValue>
        |   `-MemberExpr 0x5637768ebfc0 <col:26, col:29> 'int *' lvalue ->lineinfo 0x563776857ff0
        |     `-ImplicitCastExpr 0x5637768ebfa8 <col:26> 'Proto *' <LValueToRValue>
        |       `-DeclRefExpr 0x5637768ebf80 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
        |-UnaryOperator 0x5637768ec090 <./lmem.h:35:46, col:52> 'int *' prefix '&'
        | `-ParenExpr 0x5637768ec070 <col:47, col:52> 'int' lvalue
        |   `-MemberExpr 0x5637768ec038 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
        |     `-ImplicitCastExpr 0x5637768ec020 <col:47> 'Proto *' <LValueToRValue>
        |       `-DeclRefExpr 0x5637768ebff8 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
        |-UnaryExprOrTypeTraitExpr 0x5637768ec0c8 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'int'
        |-ParenExpr 0x5637768ec150 <./llimits.h:35:17, col:27> 'int'
        | `-BinaryOperator 0x5637768ec128 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
        |   |-IntegerLiteral 0x5637768ec0e8 <<built-in>:37:21> 'int' 2147483647
        |   `-IntegerLiteral 0x5637768ec108 <./llimits.h:35:26> 'int' 2
        `-ImplicitCastExpr 0x5637768ec280 <lcode.c:798:28> 'const char *' <BitCast>
          `-ImplicitCastExpr 0x5637768ec268 <col:28> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x5637768ec170 <col:28> 'char [19]' lvalue "code size overflow"
([B2.27]) = ([B2.24])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x5637768ebc10 <lcode.c:795:21> 'Instruction':'unsigned int' lvalue ParmVar 0x5637768eaea8 'i' 'Instruction':'unsigned int'
i
   2: ImplicitCastExpr 0x5637768ebc38 <lcode.c:795:21> 'Instruction':'unsigned int' <LValueToRValue>
`-DeclRefExpr 0x5637768ebc10 <col:21> 'Instruction':'unsigned int' lvalue ParmVar 0x5637768eaea8 'i' 'Instruction':'unsigned int'
[B3.1] (ImplicitCastExpr, LValueToRValue, Instruction)
   3: DeclRefExpr 0x5637768ebac8 <lcode.c:795:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x5637768ebaf0 <lcode.c:795:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebac8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B3.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x5637768ebb08 <lcode.c:795:3, col:6> 'Instruction *' lvalue ->code 0x563776857e38
`-ImplicitCastExpr 0x5637768ebaf0 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebac8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B3.4]->code
   6: ImplicitCastExpr 0x5637768ebbb8 <lcode.c:795:3, col:6> 'Instruction *' <LValueToRValue>
`-MemberExpr 0x5637768ebb08 <col:3, col:6> 'Instruction *' lvalue ->code 0x563776857e38
  `-ImplicitCastExpr 0x5637768ebaf0 <col:3> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ebac8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B3.5] (ImplicitCastExpr, LValueToRValue, Instruction *)
   7: DeclRefExpr 0x5637768ebb40 <lcode.c:795:11> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
   8: ImplicitCastExpr 0x5637768ebb68 <lcode.c:795:11> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebb40 <col:11> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B3.7] (ImplicitCastExpr, LValueToRValue, FuncState *)
   9: MemberExpr 0x5637768ebb80 <lcode.c:795:11, col:15> 'int' lvalue ->pc 0x56377687e130
`-ImplicitCastExpr 0x5637768ebb68 <col:11> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebb40 <col:11> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B3.8]->pc
  10: ImplicitCastExpr 0x5637768ebbd0 <lcode.c:795:11, col:15> 'int' <LValueToRValue>
`-MemberExpr 0x5637768ebb80 <col:11, col:15> 'int' lvalue ->pc 0x56377687e130
  `-ImplicitCastExpr 0x5637768ebb68 <col:11> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768ebb40 <col:11> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B3.9] (ImplicitCastExpr, LValueToRValue, int)
  11: ArraySubscriptExpr 0x5637768ebbe8 <lcode.c:795:3, col:17> 'Instruction':'unsigned int' lvalue
|-ImplicitCastExpr 0x5637768ebbb8 <col:3, col:6> 'Instruction *' <LValueToRValue>
| `-MemberExpr 0x5637768ebb08 <col:3, col:6> 'Instruction *' lvalue ->code 0x563776857e38
|   `-ImplicitCastExpr 0x5637768ebaf0 <col:3> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768ebac8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
`-ImplicitCastExpr 0x5637768ebbd0 <col:11, col:15> 'int' <LValueToRValue>
  `-MemberExpr 0x5637768ebb80 <col:11, col:15> 'int' lvalue ->pc 0x56377687e130
    `-ImplicitCastExpr 0x5637768ebb68 <col:11> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x5637768ebb40 <col:11> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B3.6][[B3.10]]
  12: BinaryOperator 0x5637768ebc50 <lcode.c:795:3, col:21> 'Instruction':'unsigned int' '='
|-ArraySubscriptExpr 0x5637768ebbe8 <col:3, col:17> 'Instruction':'unsigned int' lvalue
| |-ImplicitCastExpr 0x5637768ebbb8 <col:3, col:6> 'Instruction *' <LValueToRValue>
| | `-MemberExpr 0x5637768ebb08 <col:3, col:6> 'Instruction *' lvalue ->code 0x563776857e38
| |   `-ImplicitCastExpr 0x5637768ebaf0 <col:3> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x5637768ebac8 <col:3> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
| `-ImplicitCastExpr 0x5637768ebbd0 <col:11, col:15> 'int' <LValueToRValue>
|   `-MemberExpr 0x5637768ebb80 <col:11, col:15> 'int' lvalue ->pc 0x56377687e130
|     `-ImplicitCastExpr 0x5637768ebb68 <col:11> 'FuncState *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768ebb40 <col:11> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768ebc38 <col:21> 'Instruction':'unsigned int' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebc10 <col:21> 'Instruction':'unsigned int' lvalue ParmVar 0x5637768eaea8 'i' 'Instruction':'unsigned int'
[B3.11] = [B3.2]
  13: DeclRefExpr 0x5637768ebc78 <lcode.c:797:39> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
  14: ImplicitCastExpr 0x5637768ebca0 <lcode.c:797:39> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebc78 <col:39> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B3.13] (ImplicitCastExpr, LValueToRValue, FuncState *)
  15: MemberExpr 0x5637768ebcb8 <lcode.c:797:39, col:43> 'int' lvalue ->pc 0x56377687e130
`-ImplicitCastExpr 0x5637768ebca0 <col:39> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebc78 <col:39> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B3.14]->pc
  16: ImplicitCastExpr 0x5637768ebd30 <./lmem.h:34:15, col:22> 'int' <LValueToRValue>
`-ParenExpr 0x5637768ebcf0 <col:15, col:22> 'int' lvalue
  `-MemberExpr 0x5637768ebcb8 <lcode.c:797:39, col:43> 'int' lvalue ->pc 0x56377687e130
    `-ImplicitCastExpr 0x5637768ebca0 <col:39> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x5637768ebc78 <col:39> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
([B3.15]) (ImplicitCastExpr, LValueToRValue, int)
  17: IntegerLiteral 0x5637768ebd10 <./lmem.h:34:24> 'int' 1
1
  18: BinaryOperator 0x5637768ebd48 <./lmem.h:34:15, col:24> 'int' '+'
|-ImplicitCastExpr 0x5637768ebd30 <col:15, col:22> 'int' <LValueToRValue>
| `-ParenExpr 0x5637768ebcf0 <col:15, col:22> 'int' lvalue
|   `-MemberExpr 0x5637768ebcb8 <lcode.c:797:39, col:43> 'int' lvalue ->pc 0x56377687e130
|     `-ImplicitCastExpr 0x5637768ebca0 <col:39> 'FuncState *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768ebc78 <col:39> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
`-IntegerLiteral 0x5637768ebd10 <./lmem.h:34:24> 'int' 1
[B3.16] + [B3.17]
  19: DeclRefExpr 0x5637768ebd70 <lcode.c:797:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
  20: ImplicitCastExpr 0x5637768ebd98 <lcode.c:797:47> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768ebd70 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B3.19] (ImplicitCastExpr, LValueToRValue, Proto *)
  21: MemberExpr 0x5637768ebdb0 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
`-ImplicitCastExpr 0x5637768ebd98 <col:47> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768ebd70 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B3.20]->sizelineinfo
  22: ImplicitCastExpr 0x5637768ebe08 <./lmem.h:34:28, col:33> 'int' <LValueToRValue>
`-ParenExpr 0x5637768ebde8 <col:28, col:33> 'int' lvalue
  `-MemberExpr 0x5637768ebdb0 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
    `-ImplicitCastExpr 0x5637768ebd98 <col:47> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x5637768ebd70 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
([B3.21]) (ImplicitCastExpr, LValueToRValue, int)
  23: BinaryOperator 0x5637768ebe20 <./lmem.h:34:15, col:33> 'int' '>'
|-BinaryOperator 0x5637768ebd48 <col:15, col:24> 'int' '+'
| |-ImplicitCastExpr 0x5637768ebd30 <col:15, col:22> 'int' <LValueToRValue>
| | `-ParenExpr 0x5637768ebcf0 <col:15, col:22> 'int' lvalue
| |   `-MemberExpr 0x5637768ebcb8 <lcode.c:797:39, col:43> 'int' lvalue ->pc 0x56377687e130
| |     `-ImplicitCastExpr 0x5637768ebca0 <col:39> 'FuncState *' <LValueToRValue>
| |       `-DeclRefExpr 0x5637768ebc78 <col:39> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
| `-IntegerLiteral 0x5637768ebd10 <./lmem.h:34:24> 'int' 1
`-ImplicitCastExpr 0x5637768ebe08 <col:28, col:33> 'int' <LValueToRValue>
  `-ParenExpr 0x5637768ebde8 <col:28, col:33> 'int' lvalue
    `-MemberExpr 0x5637768ebdb0 <lcode.c:797:47, col:50> 'int' lvalue ->sizelineinfo 0x5637768584b8
      `-ImplicitCastExpr 0x5637768ebd98 <col:47> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x5637768ebd70 <col:47> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B3.18] > [B3.22]
   T: if [B3.23]
   Preds (2): B4 B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5637768eb5b0 <./lmem.h:35:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
luaM_growaux_
   2: ImplicitCastExpr 0x5637768eb8b8 <./lmem.h:35:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768eb5b0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, int *, size_t, int, const char *))
   3: DeclRefExpr 0x5637768eb5d8 <lcode.c:793:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768eb600 <lcode.c:793:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb5d8 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B4.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: MemberExpr 0x5637768eb618 <lcode.c:793:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
`-ImplicitCastExpr 0x5637768eb600 <col:19> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb5d8 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B4.4]->L
   6: ImplicitCastExpr 0x5637768eb928 <lcode.c:793:19, col:23> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x5637768eb618 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
  `-ImplicitCastExpr 0x5637768eb600 <col:19> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768eb5d8 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B4.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: DeclRefExpr 0x5637768eb650 <lcode.c:793:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
   8: ImplicitCastExpr 0x5637768eb678 <lcode.c:793:26> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb650 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.7] (ImplicitCastExpr, LValueToRValue, Proto *)
   9: MemberExpr 0x5637768eb690 <lcode.c:793:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
`-ImplicitCastExpr 0x5637768eb678 <col:26> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb650 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.8]->code
  10: ImplicitCastExpr 0x5637768eb940 <lcode.c:793:26, col:29> 'Instruction *' <LValueToRValue>
`-MemberExpr 0x5637768eb690 <col:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
  `-ImplicitCastExpr 0x5637768eb678 <col:26> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x5637768eb650 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.9] (ImplicitCastExpr, LValueToRValue, Instruction *)
  11: ImplicitCastExpr 0x5637768eb958 <lcode.c:793:26, col:29> 'void *' <BitCast>
`-ImplicitCastExpr 0x5637768eb940 <col:26, col:29> 'Instruction *' <LValueToRValue>
  `-MemberExpr 0x5637768eb690 <col:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
    `-ImplicitCastExpr 0x5637768eb678 <col:26> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x5637768eb650 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.10] (ImplicitCastExpr, BitCast, void *)
  12: DeclRefExpr 0x5637768eb6c8 <lcode.c:793:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
  13: ImplicitCastExpr 0x5637768eb6f0 <lcode.c:793:43> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb6c8 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.12] (ImplicitCastExpr, LValueToRValue, Proto *)
  14: MemberExpr 0x5637768eb708 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
`-ImplicitCastExpr 0x5637768eb6f0 <col:43> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb6c8 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.13]->sizecode
  15: UnaryOperator 0x5637768eb760 <./lmem.h:35:46, col:52> 'int *' prefix '&'
`-ParenExpr 0x5637768eb740 <col:47, col:52> 'int' lvalue
  `-MemberExpr 0x5637768eb708 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
    `-ImplicitCastExpr 0x5637768eb6f0 <col:43> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x5637768eb6c8 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
&([B4.14])
  16: UnaryExprOrTypeTraitExpr 0x5637768eb790 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'Instruction':'unsigned int'
sizeof(Instruction)
  17: IntegerLiteral 0x5637768eb7b0 <<built-in>:37:21> 'int' 2147483647
2147483647
  18: IntegerLiteral 0x5637768eb7d0 <./llimits.h:35:26> 'int' 2
2
  19: BinaryOperator 0x5637768eb7f0 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|-IntegerLiteral 0x5637768eb7b0 <<built-in>:37:21> 'int' 2147483647
`-IntegerLiteral 0x5637768eb7d0 <./llimits.h:35:26> 'int' 2
[B4.17] - [B4.18]
  20: StringLiteral 0x5637768eb878 <lcode.c:794:28> 'char [19]' lvalue "code size overflow"
"code size overflow"
  21: ImplicitCastExpr 0x5637768eb970 <lcode.c:794:28> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5637768eb878 <col:28> 'char [19]' lvalue "code size overflow"
[B4.20] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  22: ImplicitCastExpr 0x5637768eb988 <lcode.c:794:28> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5637768eb970 <col:28> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5637768eb878 <col:28> 'char [19]' lvalue "code size overflow"
[B4.21] (ImplicitCastExpr, BitCast, const char *)
  23: CallExpr 0x5637768eb8d0 <./lmem.h:35:28, col:71> 'void *'
|-ImplicitCastExpr 0x5637768eb8b8 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768eb5b0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
|-ImplicitCastExpr 0x5637768eb928 <lcode.c:793:19, col:23> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x5637768eb618 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
|   `-ImplicitCastExpr 0x5637768eb600 <col:19> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768eb5d8 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
|-ImplicitCastExpr 0x5637768eb958 <col:26, col:29> 'void *' <BitCast>
| `-ImplicitCastExpr 0x5637768eb940 <col:26, col:29> 'Instruction *' <LValueToRValue>
|   `-MemberExpr 0x5637768eb690 <col:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
|     `-ImplicitCastExpr 0x5637768eb678 <col:26> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768eb650 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
|-UnaryOperator 0x5637768eb760 <./lmem.h:35:46, col:52> 'int *' prefix '&'
| `-ParenExpr 0x5637768eb740 <col:47, col:52> 'int' lvalue
|   `-MemberExpr 0x5637768eb708 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
|     `-ImplicitCastExpr 0x5637768eb6f0 <col:43> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768eb6c8 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
|-UnaryExprOrTypeTraitExpr 0x5637768eb790 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'Instruction':'unsigned int'
|-ParenExpr 0x5637768eb818 <./llimits.h:35:17, col:27> 'int'
| `-BinaryOperator 0x5637768eb7f0 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|   |-IntegerLiteral 0x5637768eb7b0 <<built-in>:37:21> 'int' 2147483647
|   `-IntegerLiteral 0x5637768eb7d0 <./llimits.h:35:26> 'int' 2
`-ImplicitCastExpr 0x5637768eb988 <lcode.c:794:28> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5637768eb970 <col:28> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5637768eb878 <col:28> 'char [19]' lvalue "code size overflow"
[B4.2]([B4.6], [B4.11], [B4.15], [B4.16], ([B4.19]), [B4.22])
  24: CStyleCastExpr 0x5637768eba00 <./llimits.h:75:23, col:30> 'Instruction *' <BitCast>
`-ParenExpr 0x5637768eb9e0 <col:26, col:30> 'void *'
  `-CallExpr 0x5637768eb8d0 <./lmem.h:35:28, col:71> 'void *'
    |-ImplicitCastExpr 0x5637768eb8b8 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5637768eb5b0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
    |-ImplicitCastExpr 0x5637768eb928 <lcode.c:793:19, col:23> 'struct lua_State *' <LValueToRValue>
    | `-MemberExpr 0x5637768eb618 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
    |   `-ImplicitCastExpr 0x5637768eb600 <col:19> 'FuncState *' <LValueToRValue>
    |     `-DeclRefExpr 0x5637768eb5d8 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
    |-ImplicitCastExpr 0x5637768eb958 <col:26, col:29> 'void *' <BitCast>
    | `-ImplicitCastExpr 0x5637768eb940 <col:26, col:29> 'Instruction *' <LValueToRValue>
    |   `-MemberExpr 0x5637768eb690 <col:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
    |     `-ImplicitCastExpr 0x5637768eb678 <col:26> 'Proto *' <LValueToRValue>
    |       `-DeclRefExpr 0x5637768eb650 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
    |-UnaryOperator 0x5637768eb760 <./lmem.h:35:46, col:52> 'int *' prefix '&'
    | `-ParenExpr 0x5637768eb740 <col:47, col:52> 'int' lvalue
    |   `-MemberExpr 0x5637768eb708 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
    |     `-ImplicitCastExpr 0x5637768eb6f0 <col:43> 'Proto *' <LValueToRValue>
    |       `-DeclRefExpr 0x5637768eb6c8 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
    |-UnaryExprOrTypeTraitExpr 0x5637768eb790 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'Instruction':'unsigned int'
    |-ParenExpr 0x5637768eb818 <./llimits.h:35:17, col:27> 'int'
    | `-BinaryOperator 0x5637768eb7f0 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
    |   |-IntegerLiteral 0x5637768eb7b0 <<built-in>:37:21> 'int' 2147483647
    |   `-IntegerLiteral 0x5637768eb7d0 <./llimits.h:35:26> 'int' 2
    `-ImplicitCastExpr 0x5637768eb988 <lcode.c:794:28> 'const char *' <BitCast>
      `-ImplicitCastExpr 0x5637768eb970 <col:28> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x5637768eb878 <col:28> 'char [19]' lvalue "code size overflow"
(Instruction *)([B4.23]) (CStyleCastExpr, BitCast, Instruction *)
  25: DeclRefExpr 0x5637768eb518 <lcode.c:793:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
  26: ImplicitCastExpr 0x5637768eb540 <lcode.c:793:26> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb518 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.25] (ImplicitCastExpr, LValueToRValue, Proto *)
  27: MemberExpr 0x5637768eb558 <lcode.c:793:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
`-ImplicitCastExpr 0x5637768eb540 <col:26> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb518 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B4.26]->code
  28: BinaryOperator 0x5637768eba48 <./lmem.h:35:14, ./llimits.h:75:31> 'Instruction *' '='
|-ParenExpr 0x5637768eb590 <./lmem.h:35:14, col:16> 'Instruction *' lvalue
| `-MemberExpr 0x5637768eb558 <lcode.c:793:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
|   `-ImplicitCastExpr 0x5637768eb540 <col:26> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768eb518 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
`-ParenExpr 0x5637768eba28 <./llimits.h:75:22, col:31> 'Instruction *'
  `-CStyleCastExpr 0x5637768eba00 <col:23, col:30> 'Instruction *' <BitCast>
    `-ParenExpr 0x5637768eb9e0 <col:26, col:30> 'void *'
      `-CallExpr 0x5637768eb8d0 <./lmem.h:35:28, col:71> 'void *'
        |-ImplicitCastExpr 0x5637768eb8b8 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5637768eb5b0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x563776863f48 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
        |-ImplicitCastExpr 0x5637768eb928 <lcode.c:793:19, col:23> 'struct lua_State *' <LValueToRValue>
        | `-MemberExpr 0x5637768eb618 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x56377687dfd0
        |   `-ImplicitCastExpr 0x5637768eb600 <col:19> 'FuncState *' <LValueToRValue>
        |     `-DeclRefExpr 0x5637768eb5d8 <col:19> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
        |-ImplicitCastExpr 0x5637768eb958 <col:26, col:29> 'void *' <BitCast>
        | `-ImplicitCastExpr 0x5637768eb940 <col:26, col:29> 'Instruction *' <LValueToRValue>
        |   `-MemberExpr 0x5637768eb690 <col:26, col:29> 'Instruction *' lvalue ->code 0x563776857e38
        |     `-ImplicitCastExpr 0x5637768eb678 <col:26> 'Proto *' <LValueToRValue>
        |       `-DeclRefExpr 0x5637768eb650 <col:26> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
        |-UnaryOperator 0x5637768eb760 <./lmem.h:35:46, col:52> 'int *' prefix '&'
        | `-ParenExpr 0x5637768eb740 <col:47, col:52> 'int' lvalue
        |   `-MemberExpr 0x5637768eb708 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
        |     `-ImplicitCastExpr 0x5637768eb6f0 <col:43> 'Proto *' <LValueToRValue>
        |       `-DeclRefExpr 0x5637768eb6c8 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
        |-UnaryExprOrTypeTraitExpr 0x5637768eb790 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'Instruction':'unsigned int'
        |-ParenExpr 0x5637768eb818 <./llimits.h:35:17, col:27> 'int'
        | `-BinaryOperator 0x5637768eb7f0 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
        |   |-IntegerLiteral 0x5637768eb7b0 <<built-in>:37:21> 'int' 2147483647
        |   `-IntegerLiteral 0x5637768eb7d0 <./llimits.h:35:26> 'int' 2
        `-ImplicitCastExpr 0x5637768eb988 <lcode.c:794:28> 'const char *' <BitCast>
          `-ImplicitCastExpr 0x5637768eb970 <col:28> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x5637768eb878 <col:28> 'char [19]' lvalue "code size overflow"
([B4.27]) = ([B4.24])
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x5637768eb180 <lcode.c:790:14> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
   2: ImplicitCastExpr 0x5637768eb1a8 <lcode.c:790:14> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb180 <col:14> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B5.1] (ImplicitCastExpr, LValueToRValue, FuncState *)
   3: MemberExpr 0x5637768eb1c0 <lcode.c:790:14, col:18> 'Proto *' lvalue ->f 0x56377687ddb8
`-ImplicitCastExpr 0x5637768eb1a8 <col:14> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb180 <col:14> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B5.2]->f
   4: ImplicitCastExpr 0x5637768eb1f8 <lcode.c:790:14, col:18> 'Proto *' <LValueToRValue>
`-MemberExpr 0x5637768eb1c0 <col:14, col:18> 'Proto *' lvalue ->f 0x56377687ddb8
  `-ImplicitCastExpr 0x5637768eb1a8 <col:14> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768eb180 <col:14> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B5.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: DeclStmt 0x5637768eb210 <lcode.c:790:3, col:19>col:10
`-VarDecl 0x5637768eb120 <col:3, col:18> col:10 used f 'Proto *' cinit
  `-ImplicitCastExpr 0x5637768eb1f8 <col:14, col:18> 'Proto *' <LValueToRValue>
    `-MemberExpr 0x5637768eb1c0 <col:14, col:18> 'Proto *' lvalue ->f 0x56377687ddb8
      `-ImplicitCastExpr 0x5637768eb1a8 <col:14> 'FuncState *' <LValueToRValue>
        `-DeclRefExpr 0x5637768eb180 <col:14> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
Proto *f = fs->f;
   6: DeclRefExpr 0x5637768eb228 <lcode.c:791:3> 'void (FuncState *)' Function 0x5637768bb3d0 'dischargejpc' 'void (FuncState *)'
dischargejpc
   7: ImplicitCastExpr 0x5637768eb2e8 <lcode.c:791:3> 'void (*)(FuncState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768eb228 <col:3> 'void (FuncState *)' Function 0x5637768bb3d0 'dischargejpc' 'void (FuncState *)'
[B5.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *))
   8: DeclRefExpr 0x5637768eb250 <lcode.c:791:16> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
   9: ImplicitCastExpr 0x5637768eb330 <lcode.c:791:16> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb250 <col:16> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B5.8] (ImplicitCastExpr, LValueToRValue, FuncState *)
  10: CallExpr 0x5637768eb300 <lcode.c:791:3, col:18> 'void'
|-ImplicitCastExpr 0x5637768eb2e8 <col:3> 'void (*)(FuncState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768eb228 <col:3> 'void (FuncState *)' Function 0x5637768bb3d0 'dischargejpc' 'void (FuncState *)'
`-ImplicitCastExpr 0x5637768eb330 <col:16> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb250 <col:16> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B5.7]([B5.9])
  11: DeclRefExpr 0x5637768eb348 <lcode.c:793:35> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
fs
  12: ImplicitCastExpr 0x5637768eb370 <lcode.c:793:35> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb348 <col:35> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B5.11] (ImplicitCastExpr, LValueToRValue, FuncState *)
  13: MemberExpr 0x5637768eb388 <lcode.c:793:35, col:39> 'int' lvalue ->pc 0x56377687e130
`-ImplicitCastExpr 0x5637768eb370 <col:35> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb348 <col:35> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
[B5.12]->pc
  14: ImplicitCastExpr 0x5637768eb400 <./lmem.h:34:15, col:22> 'int' <LValueToRValue>
`-ParenExpr 0x5637768eb3c0 <col:15, col:22> 'int' lvalue
  `-MemberExpr 0x5637768eb388 <lcode.c:793:35, col:39> 'int' lvalue ->pc 0x56377687e130
    `-ImplicitCastExpr 0x5637768eb370 <col:35> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x5637768eb348 <col:35> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
([B5.13]) (ImplicitCastExpr, LValueToRValue, int)
  15: IntegerLiteral 0x5637768eb3e0 <./lmem.h:34:24> 'int' 1
1
  16: BinaryOperator 0x5637768eb418 <./lmem.h:34:15, col:24> 'int' '+'
|-ImplicitCastExpr 0x5637768eb400 <col:15, col:22> 'int' <LValueToRValue>
| `-ParenExpr 0x5637768eb3c0 <col:15, col:22> 'int' lvalue
|   `-MemberExpr 0x5637768eb388 <lcode.c:793:35, col:39> 'int' lvalue ->pc 0x56377687e130
|     `-ImplicitCastExpr 0x5637768eb370 <col:35> 'FuncState *' <LValueToRValue>
|       `-DeclRefExpr 0x5637768eb348 <col:35> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
`-IntegerLiteral 0x5637768eb3e0 <./lmem.h:34:24> 'int' 1
[B5.14] + [B5.15]
  17: DeclRefExpr 0x5637768eb440 <lcode.c:793:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
f
  18: ImplicitCastExpr 0x5637768eb468 <lcode.c:793:43> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x5637768eb440 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B5.17] (ImplicitCastExpr, LValueToRValue, Proto *)
  19: MemberExpr 0x5637768eb480 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
`-ImplicitCastExpr 0x5637768eb468 <col:43> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eb440 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B5.18]->sizecode
  20: ImplicitCastExpr 0x5637768eb4d8 <./lmem.h:34:28, col:33> 'int' <LValueToRValue>
`-ParenExpr 0x5637768eb4b8 <col:28, col:33> 'int' lvalue
  `-MemberExpr 0x5637768eb480 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
    `-ImplicitCastExpr 0x5637768eb468 <col:43> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x5637768eb440 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
([B5.19]) (ImplicitCastExpr, LValueToRValue, int)
  21: BinaryOperator 0x5637768eb4f0 <./lmem.h:34:15, col:33> 'int' '>'
|-BinaryOperator 0x5637768eb418 <col:15, col:24> 'int' '+'
| |-ImplicitCastExpr 0x5637768eb400 <col:15, col:22> 'int' <LValueToRValue>
| | `-ParenExpr 0x5637768eb3c0 <col:15, col:22> 'int' lvalue
| |   `-MemberExpr 0x5637768eb388 <lcode.c:793:35, col:39> 'int' lvalue ->pc 0x56377687e130
| |     `-ImplicitCastExpr 0x5637768eb370 <col:35> 'FuncState *' <LValueToRValue>
| |       `-DeclRefExpr 0x5637768eb348 <col:35> 'FuncState *' lvalue ParmVar 0x5637768eae38 'fs' 'FuncState *'
| `-IntegerLiteral 0x5637768eb3e0 <./lmem.h:34:24> 'int' 1
`-ImplicitCastExpr 0x5637768eb4d8 <col:28, col:33> 'int' <LValueToRValue>
  `-ParenExpr 0x5637768eb4b8 <col:28, col:33> 'int' lvalue
    `-MemberExpr 0x5637768eb480 <lcode.c:793:43, col:46> 'int' lvalue ->sizecode 0x563776858458
      `-ImplicitCastExpr 0x5637768eb468 <col:43> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x5637768eb440 <col:43> 'Proto *' lvalue Var 0x5637768eb120 'f' 'Proto *'
[B5.16] > [B5.20]
   T: if [B5.21]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (1): B1
