static void addinfo(lua_State *L, const char *msg)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclStmt 0x555e97270fa0 <ldebug.c:610:5, col:26>col:10
`-VarDecl 0x555e97270f40 <col:5, col:25> col:10 used buff 'char [60]'
char buff[60];
   2: DeclRefExpr 0x555e97271030 <ldebug.c:611:16> 'int (lua_State *, CallInfo *)' Function 0x555e97239708 'currentline' 'int (lua_State *, CallInfo *)'
currentline
   3: ImplicitCastExpr 0x555e972710a8 <ldebug.c:611:16> 'int (*)(lua_State *, CallInfo *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97271030 <col:16> 'int (lua_State *, CallInfo *)' Function 0x555e97239708 'currentline' 'int (lua_State *, CallInfo *)'
[B1.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, CallInfo *))
   4: DeclRefExpr 0x555e97271058 <ldebug.c:611:28> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
L
   5: ImplicitCastExpr 0x555e972710f8 <ldebug.c:611:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97271058 <col:28> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
[B1.4] (ImplicitCastExpr, LValueToRValue, lua_State *)
   6: DeclRefExpr 0x555e97271080 <ldebug.c:611:31> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
ci
   7: ImplicitCastExpr 0x555e97271110 <ldebug.c:611:31> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e97271080 <col:31> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B1.6] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   8: CallExpr 0x555e972710c0 <ldebug.c:611:16, col:33> 'int'
|-ImplicitCastExpr 0x555e972710a8 <col:16> 'int (*)(lua_State *, CallInfo *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97271030 <col:16> 'int (lua_State *, CallInfo *)' Function 0x555e97239708 'currentline' 'int (lua_State *, CallInfo *)'
|-ImplicitCastExpr 0x555e972710f8 <col:28> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e97271058 <col:28> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e97271110 <col:31> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e97271080 <col:31> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B1.3]([B1.5], [B1.7])
   9: DeclStmt 0x555e97271128 <ldebug.c:611:5, col:34>col:9
`-VarDecl 0x555e97270fd0 <col:5, col:33> col:9 used line 'int' cinit
  `-CallExpr 0x555e972710c0 <col:16, col:33> 'int'
    |-ImplicitCastExpr 0x555e972710a8 <col:16> 'int (*)(lua_State *, CallInfo *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x555e97271030 <col:16> 'int (lua_State *, CallInfo *)' Function 0x555e97239708 'currentline' 'int (lua_State *, CallInfo *)'
    |-ImplicitCastExpr 0x555e972710f8 <col:28> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x555e97271058 <col:28> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
    `-ImplicitCastExpr 0x555e97271110 <col:31> 'CallInfo *' <LValueToRValue>
      `-DeclRefExpr 0x555e97271080 <col:31> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
int line = currentline(L, ci);
  10: DeclRefExpr 0x555e97271140 <ldebug.c:612:5> 'void (char *, const char *, size_t)' Function 0x555e971e0b90 'luaO_chunkid' 'void (char *, const char *, size_t)'
luaO_chunkid
  11: ImplicitCastExpr 0x555e972713c8 <ldebug.c:612:5> 'void (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97271140 <col:5> 'void (char *, const char *, size_t)' Function 0x555e971e0b90 'luaO_chunkid' 'void (char *, const char *, size_t)'
[B1.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char *, const char *, size_t))
  12: DeclRefExpr 0x555e97271168 <ldebug.c:612:18> 'char [60]' lvalue Var 0x555e97270f40 'buff' 'char [60]'
buff
  13: ImplicitCastExpr 0x555e97271420 <ldebug.c:612:18> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x555e97271168 <col:18> 'char [60]' lvalue Var 0x555e97270f40 'buff' 'char [60]'
[B1.12] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  14: DeclRefExpr 0x555e97271190 <ldebug.c:612:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
getluaproto
  15: ImplicitCastExpr 0x555e972711e0 <ldebug.c:612:31> 'Proto *(*)(CallInfo *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97271190 <col:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
[B1.14] (ImplicitCastExpr, FunctionToPointerDecay, Proto *(*)(CallInfo *))
  16: DeclRefExpr 0x555e972711b8 <ldebug.c:612:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
ci
  17: ImplicitCastExpr 0x555e97271228 <ldebug.c:612:43> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e972711b8 <col:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B1.16] (ImplicitCastExpr, LValueToRValue, CallInfo *)
  18: CallExpr 0x555e972711f8 <ldebug.c:612:31, col:45> 'Proto *'
|-ImplicitCastExpr 0x555e972711e0 <col:31> 'Proto *(*)(CallInfo *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97271190 <col:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
`-ImplicitCastExpr 0x555e97271228 <col:43> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e972711b8 <col:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B1.15]([B1.17])
  19: MemberExpr 0x555e97271240 <ldebug.c:612:31, col:48> 'TString *' lvalue ->source 0x555e971d9a08
`-CallExpr 0x555e972711f8 <col:31, col:45> 'Proto *'
  |-ImplicitCastExpr 0x555e972711e0 <col:31> 'Proto *(*)(CallInfo *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x555e97271190 <col:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
  `-ImplicitCastExpr 0x555e97271228 <col:43> 'CallInfo *' <LValueToRValue>
    `-DeclRefExpr 0x555e972711b8 <col:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B1.18]->source
  20: ImplicitCastExpr 0x555e972712b8 <./lobject.h:210:39, col:42> 'TString *' <LValueToRValue>
`-ParenExpr 0x555e97271278 <col:39, col:42> 'TString *' lvalue
  `-MemberExpr 0x555e97271240 <ldebug.c:612:31, col:48> 'TString *' lvalue ->source 0x555e971d9a08
    `-CallExpr 0x555e972711f8 <col:31, col:45> 'Proto *'
      |-ImplicitCastExpr 0x555e972711e0 <col:31> 'Proto *(*)(CallInfo *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x555e97271190 <col:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
      `-ImplicitCastExpr 0x555e97271228 <col:43> 'CallInfo *' <LValueToRValue>
        `-DeclRefExpr 0x555e972711b8 <col:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
([B1.19]) (ImplicitCastExpr, LValueToRValue, TString *)
  21: IntegerLiteral 0x555e97271298 <./lobject.h:210:46> 'int' 1
1
  22: BinaryOperator 0x555e972712d0 <./lobject.h:210:39, col:46> 'TString *' '+'
|-ImplicitCastExpr 0x555e972712b8 <col:39, col:42> 'TString *' <LValueToRValue>
| `-ParenExpr 0x555e97271278 <col:39, col:42> 'TString *' lvalue
|   `-MemberExpr 0x555e97271240 <ldebug.c:612:31, col:48> 'TString *' lvalue ->source 0x555e971d9a08
|     `-CallExpr 0x555e972711f8 <col:31, col:45> 'Proto *'
|       |-ImplicitCastExpr 0x555e972711e0 <col:31> 'Proto *(*)(CallInfo *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555e97271190 <col:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
|       `-ImplicitCastExpr 0x555e97271228 <col:43> 'CallInfo *' <LValueToRValue>
|         `-DeclRefExpr 0x555e972711b8 <col:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
`-IntegerLiteral 0x555e97271298 <./lobject.h:210:46> 'int' 1
[B1.20] + [B1.21]
  23: CStyleCastExpr 0x555e97271360 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x555e97271340 <col:26, col:30> 'TString *'
  `-BinaryOperator 0x555e972712d0 <./lobject.h:210:39, col:46> 'TString *' '+'
    |-ImplicitCastExpr 0x555e972712b8 <col:39, col:42> 'TString *' <LValueToRValue>
    | `-ParenExpr 0x555e97271278 <col:39, col:42> 'TString *' lvalue
    |   `-MemberExpr 0x555e97271240 <ldebug.c:612:31, col:48> 'TString *' lvalue ->source 0x555e971d9a08
    |     `-CallExpr 0x555e972711f8 <col:31, col:45> 'Proto *'
    |       |-ImplicitCastExpr 0x555e972711e0 <col:31> 'Proto *(*)(CallInfo *)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x555e97271190 <col:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
    |       `-ImplicitCastExpr 0x555e97271228 <col:43> 'CallInfo *' <LValueToRValue>
    |         `-DeclRefExpr 0x555e972711b8 <col:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
    `-IntegerLiteral 0x555e97271298 <./lobject.h:210:46> 'int' 1
(const char *)([B1.22]) (CStyleCastExpr, BitCast, const char *)
  24: IntegerLiteral 0x555e972713a8 <./luaconf.h:210:20> 'int' 60
60
  25: ImplicitCastExpr 0x555e97271438 <./luaconf.h:210:20> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x555e972713a8 <col:20> 'int' 60
[B1.24] (ImplicitCastExpr, IntegralCast, size_t)
  26: CallExpr 0x555e972713e0 <ldebug.c:612:5, col:67> 'void'
|-ImplicitCastExpr 0x555e972713c8 <col:5> 'void (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97271140 <col:5> 'void (char *, const char *, size_t)' Function 0x555e971e0b90 'luaO_chunkid' 'void (char *, const char *, size_t)'
|-ImplicitCastExpr 0x555e97271420 <col:18> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x555e97271168 <col:18> 'char [60]' lvalue Var 0x555e97270f40 'buff' 'char [60]'
|-ParenExpr 0x555e97271388 <./llimits.h:75:22, col:31> 'const char *'
| `-CStyleCastExpr 0x555e97271360 <col:23, col:30> 'const char *' <BitCast>
|   `-ParenExpr 0x555e97271340 <col:26, col:30> 'TString *'
|     `-BinaryOperator 0x555e972712d0 <./lobject.h:210:39, col:46> 'TString *' '+'
|       |-ImplicitCastExpr 0x555e972712b8 <col:39, col:42> 'TString *' <LValueToRValue>
|       | `-ParenExpr 0x555e97271278 <col:39, col:42> 'TString *' lvalue
|       |   `-MemberExpr 0x555e97271240 <ldebug.c:612:31, col:48> 'TString *' lvalue ->source 0x555e971d9a08
|       |     `-CallExpr 0x555e972711f8 <col:31, col:45> 'Proto *'
|       |       |-ImplicitCastExpr 0x555e972711e0 <col:31> 'Proto *(*)(CallInfo *)' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x555e97271190 <col:31> 'Proto *(CallInfo *)' Function 0x555e9723eb40 'getluaproto' 'Proto *(CallInfo *)'
|       |       `-ImplicitCastExpr 0x555e97271228 <col:43> 'CallInfo *' <LValueToRValue>
|       |         `-DeclRefExpr 0x555e972711b8 <col:43> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
|       `-IntegerLiteral 0x555e97271298 <./lobject.h:210:46> 'int' 1
`-ImplicitCastExpr 0x555e97271438 <./luaconf.h:210:20> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x555e972713a8 <col:20> 'int' 60
[B1.11]([B1.13], ([B1.23]), [B1.25])
  27: DeclRefExpr 0x555e97271450 <ldebug.c:613:5> 'const char *(lua_State *, const char *, ...)' Function 0x555e971e0838 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
luaO_pushfstring
  28: ImplicitCastExpr 0x555e972715e8 <ldebug.c:613:5> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97271450 <col:5> 'const char *(lua_State *, const char *, ...)' Function 0x555e971e0838 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
[B1.27] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, ...))
  29: DeclRefExpr 0x555e97271478 <ldebug.c:613:22> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
L
  30: ImplicitCastExpr 0x555e97271650 <ldebug.c:613:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97271478 <col:22> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
[B1.29] (ImplicitCastExpr, LValueToRValue, lua_State *)
  31: StringLiteral 0x555e972714d8 <ldebug.c:613:25> 'char [10]' lvalue "%s:%d: %s"
"%s:%d: %s"
  32: ImplicitCastExpr 0x555e97271668 <ldebug.c:613:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x555e972714d8 <col:25> 'char [10]' lvalue "%s:%d: %s"
[B1.31] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  33: ImplicitCastExpr 0x555e97271680 <ldebug.c:613:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x555e97271668 <col:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x555e972714d8 <col:25> 'char [10]' lvalue "%s:%d: %s"
[B1.32] (ImplicitCastExpr, BitCast, const char *)
  34: DeclRefExpr 0x555e97271510 <ldebug.c:613:38> 'char [60]' lvalue Var 0x555e97270f40 'buff' 'char [60]'
buff
  35: ImplicitCastExpr 0x555e97271698 <ldebug.c:613:38> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x555e97271510 <col:38> 'char [60]' lvalue Var 0x555e97270f40 'buff' 'char [60]'
[B1.34] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  36: DeclRefExpr 0x555e97271538 <ldebug.c:613:44> 'int' lvalue Var 0x555e97270fd0 'line' 'int'
line
  37: ImplicitCastExpr 0x555e972716b0 <ldebug.c:613:44> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e97271538 <col:44> 'int' lvalue Var 0x555e97270fd0 'line' 'int'
[B1.36] (ImplicitCastExpr, LValueToRValue, int)
  38: DeclRefExpr 0x555e97271560 <ldebug.c:613:50> 'const char *' lvalue ParmVar 0x555e97270800 'msg' 'const char *'
msg
  39: ImplicitCastExpr 0x555e972716c8 <ldebug.c:613:50> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x555e97271560 <col:50> 'const char *' lvalue ParmVar 0x555e97270800 'msg' 'const char *'
[B1.38] (ImplicitCastExpr, LValueToRValue, const char *)
  40: CallExpr 0x555e97271600 <ldebug.c:613:5, col:53> 'const char *'
|-ImplicitCastExpr 0x555e972715e8 <col:5> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97271450 <col:5> 'const char *(lua_State *, const char *, ...)' Function 0x555e971e0838 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x555e97271650 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e97271478 <col:22> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
|-ImplicitCastExpr 0x555e97271680 <col:25> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x555e97271668 <col:25> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x555e972714d8 <col:25> 'char [10]' lvalue "%s:%d: %s"
|-ImplicitCastExpr 0x555e97271698 <col:38> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x555e97271510 <col:38> 'char [60]' lvalue Var 0x555e97270f40 'buff' 'char [60]'
|-ImplicitCastExpr 0x555e972716b0 <col:44> 'int' <LValueToRValue>
| `-DeclRefExpr 0x555e97271538 <col:44> 'int' lvalue Var 0x555e97270fd0 'line' 'int'
`-ImplicitCastExpr 0x555e972716c8 <col:50> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x555e97271560 <col:50> 'const char *' lvalue ParmVar 0x555e97270800 'msg' 'const char *'
[B1.28]([B1.30], [B1.33], [B1.35], [B1.37], [B1.39])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e97270c48 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
([B2.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B2.2]->func
   4: ImplicitCastExpr 0x555e97270cb8 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
([B2.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e97270cd0 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B2.4]->value
   6: MemberExpr 0x555e97270d08 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B2.5].gc
   7: ImplicitCastExpr 0x555e97270d40 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e97270d08 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B2.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x555e97270d58 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e97270d40 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e97270d08 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B2.7]->cl
   9: UnaryOperator 0x555e97270d90 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e97270d58 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e97270d40 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e97270d08 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
&[B2.8]
  10: MemberExpr 0x555e97270df0 <./lstate.h:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
`-ParenExpr 0x555e97270dd0 <line:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e97270db0 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e97270d90 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e97270d58 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e97270d40 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e97270d08 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
(([B2.9]))->c
  11: MemberExpr 0x555e97270e28 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
`-MemberExpr 0x555e97270df0 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
  `-ParenExpr 0x555e97270dd0 <line:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e97270db0 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e97270d90 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e97270d58 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e97270d40 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e97270d08 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B2.10].isC
  12: ImplicitCastExpr 0x555e97270e60 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x555e97270e28 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
  `-MemberExpr 0x555e97270df0 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
    `-ParenExpr 0x555e97270dd0 <line:60:21, col:41> 'union Closure *'
      `-ParenExpr 0x555e97270db0 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x555e97270d90 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x555e97270d58 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
            `-ImplicitCastExpr 0x555e97270d40 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x555e97270d08 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                `-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                  `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                        `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                          `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
                            `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B2.11] (ImplicitCastExpr, LValueToRValue, lu_byte)
  13: UnaryOperator 0x555e97270e78 <./lstate.h:61:22, col:38> 'int' prefix '!'
`-ImplicitCastExpr 0x555e97270e60 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x555e97270e28 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
    `-MemberExpr 0x555e97270df0 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
      `-ParenExpr 0x555e97270dd0 <line:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x555e97270db0 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x555e97270d90 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x555e97270d58 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
              `-ImplicitCastExpr 0x555e97270d40 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x555e97270d08 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                  `-MemberExpr 0x555e97270cd0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                    `-ImplicitCastExpr 0x555e97270cb8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x555e97270c98 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x555e97270c60 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                          `-ImplicitCastExpr 0x555e97270c48 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x555e97270c28 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x555e97270c00 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
![B2.12]
   T: if (([B3.13]) && ([B2.13]))
   Preds (1): B3
   Succs (2): B1 B0

 [B3]
   1: DeclRefExpr 0x555e972709b0 <ldebug.c:608:18> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x555e972709d8 <ldebug.c:608:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e972709b0 <col:18> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
[B3.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x555e972709f0 <ldebug.c:608:18, col:21> 'CallInfo *' lvalue ->ci 0x555e97213568
`-ImplicitCastExpr 0x555e972709d8 <col:18> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e972709b0 <col:18> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
[B3.2]->ci
   4: ImplicitCastExpr 0x555e97270a28 <ldebug.c:608:18, col:21> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e972709f0 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x555e97213568
  `-ImplicitCastExpr 0x555e972709d8 <col:18> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e972709b0 <col:18> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   5: DeclStmt 0x555e97270a40 <ldebug.c:608:3, col:23>col:13
`-VarDecl 0x555e97270950 <col:3, col:21> col:13 used ci 'CallInfo *' cinit
  `-ImplicitCastExpr 0x555e97270a28 <col:18, col:21> 'CallInfo *' <LValueToRValue>
    `-MemberExpr 0x555e972709f0 <col:18, col:21> 'CallInfo *' lvalue ->ci 0x555e97213568
      `-ImplicitCastExpr 0x555e972709d8 <col:18> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x555e972709b0 <col:18> 'lua_State *' lvalue ParmVar 0x555e97270788 'L' 'lua_State *'
CallInfo *ci = L->ci;
   6: DeclRefExpr 0x555e97270a58 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
ci
   7: ImplicitCastExpr 0x555e97270aa0 <./lstate.h:62:33, col:36> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e97270a80 <col:33, col:36> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e97270a58 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
([B3.6]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   8: MemberExpr 0x555e97270ab8 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e97270aa0 <col:33, col:36> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e97270a80 <col:33, col:36> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e97270a58 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B3.7]->func
   9: ImplicitCastExpr 0x555e97270b10 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97270af0 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97270ab8 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e97270aa0 <col:33, col:36> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e97270a80 <col:33, col:36> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e97270a58 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
([B3.8]) (ImplicitCastExpr, LValueToRValue, StkId)
  10: MemberExpr 0x555e97270b28 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
`-ImplicitCastExpr 0x555e97270b10 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97270af0 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97270ab8 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e97270aa0 <col:33, col:36> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e97270a80 <col:33, col:36> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e97270a58 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
[B3.9]->tt
  11: ImplicitCastExpr 0x555e97270ba0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x555e97270b60 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x555e97270b28 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
    `-ImplicitCastExpr 0x555e97270b10 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97270af0 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e97270ab8 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e97270aa0 <col:33, col:36> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e97270a80 <col:33, col:36> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e97270a58 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
([B3.10]) (ImplicitCastExpr, LValueToRValue, int)
  12: IntegerLiteral 0x555e97270b80 <./lua.h:80:24> 'int' 6
6
  13: BinaryOperator 0x555e97270bb8 <./lobject.h:90:18, ./lua.h:80:24> 'int' '=='
|-ImplicitCastExpr 0x555e97270ba0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x555e97270b60 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x555e97270b28 <col:19, col:24> 'int' lvalue ->tt 0x555e971cc5b0
|     `-ImplicitCastExpr 0x555e97270b10 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x555e97270af0 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-MemberExpr 0x555e97270ab8 <./lstate.h:62:33, col:39> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|           `-ImplicitCastExpr 0x555e97270aa0 <col:33, col:36> 'CallInfo *' <LValueToRValue>
|             `-ParenExpr 0x555e97270a80 <col:33, col:36> 'CallInfo *' lvalue
|               `-DeclRefExpr 0x555e97270a58 <ldebug.c:609:13> 'CallInfo *' lvalue Var 0x555e97270950 'ci' 'CallInfo *'
`-IntegerLiteral 0x555e97270b80 <./lua.h:80:24> 'int' 6
[B3.11] == [B3.12]
   T: ([B3.13]) && ...
   Preds (1): B4
   Succs (2): B2 B0

 [B0 (EXIT)]
   Preds (3): B1 B2 B3
