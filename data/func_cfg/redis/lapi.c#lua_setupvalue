extern const char *lua_setupvalue(lua_State *L, int funcindex, int n)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: IntegerLiteral 0x556e5d358440 <./llimits.h:111:33> 'int' 0
0
   2: CStyleCastExpr 0x556e5d358470 <./llimits.h:111:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x556e5d358440 <col:33> 'int' 0
(void)[B1.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x556e5d3584b8 <lapi.c:1085:10> 'const char *' lvalue Var 0x556e5d356898 'name' 'const char *'
name
   4: ImplicitCastExpr 0x556e5d3584e0 <lapi.c:1085:10> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3584b8 <col:10> 'const char *' lvalue Var 0x556e5d356898 'name' 'const char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: ReturnStmt 0x556e5d3584f8 <lapi.c:1085:3, col:10>
`-ImplicitCastExpr 0x556e5d3584e0 <col:10> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3584b8 <col:10> 'const char *' lvalue Var 0x556e5d356898 'name' 'const char *'
return [B1.4];
   Preds (5): B2 B3 B4 B5 B6
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x556e5d357f10 <./lgc.h:87:2> 'void (lua_State *, GCObject *, GCObject *)' Function 0x556e5d2f8820 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
luaC_barrierf
   2: ImplicitCastExpr 0x556e5d3582e8 <./lgc.h:87:2> 'void (*)(lua_State *, GCObject *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d357f10 <col:2> 'void (lua_State *, GCObject *, GCObject *)' Function 0x556e5d2f8820 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, GCObject *, GCObject *))
   3: DeclRefExpr 0x556e5d357f38 <lapi.c:1082:18> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x556e5d358340 <lapi.c:1082:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d357f38 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
fi
   6: ImplicitCastExpr 0x556e5d357fa8 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
([B2.5]) (ImplicitCastExpr, LValueToRValue, StkId)
   7: MemberExpr 0x556e5d357fc0 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d357fa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B2.6]->value
   8: MemberExpr 0x556e5d357ff8 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
`-MemberExpr 0x556e5d357fc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d357fa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B2.7].gc
   9: ImplicitCastExpr 0x556e5d358030 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x556e5d357ff8 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
  `-MemberExpr 0x556e5d357fc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
    `-ImplicitCastExpr 0x556e5d357fa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B2.8] (ImplicitCastExpr, LValueToRValue, GCObject *)
  10: MemberExpr 0x556e5d358048 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
`-ImplicitCastExpr 0x556e5d358030 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x556e5d357ff8 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
    `-MemberExpr 0x556e5d357fc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
      `-ImplicitCastExpr 0x556e5d357fa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B2.9]->cl
  11: UnaryOperator 0x556e5d358080 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x556e5d358048 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
  `-ImplicitCastExpr 0x556e5d358030 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x556e5d357ff8 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
      `-MemberExpr 0x556e5d357fc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
        `-ImplicitCastExpr 0x556e5d357fa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
&[B2.10]
  12: CStyleCastExpr 0x556e5d358140 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ParenExpr 0x556e5d358120 <col:26, col:30> 'union Closure *'
  `-ParenExpr 0x556e5d3580c0 <./lstate.h:162:38, col:40> 'union Closure *'
    `-ParenExpr 0x556e5d3580a0 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x556e5d358080 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x556e5d358048 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
          `-ImplicitCastExpr 0x556e5d358030 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x556e5d357ff8 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
              `-MemberExpr 0x556e5d357fc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                `-ImplicitCastExpr 0x556e5d357fa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
(GCObject *)((([B2.11]))) (CStyleCastExpr, BitCast, GCObject *)
  13: DeclRefExpr 0x556e5d3581a8 <lapi.c:1082:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x556e5d3581d0 <lapi.c:1082:34> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3581a8 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B2.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: MemberExpr 0x556e5d3581e8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d3581d0 <col:34> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3581a8 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B2.14]->top
  16: ImplicitCastExpr 0x556e5d358240 <./lobject.h:91:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d358220 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x556e5d3581e8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
    `-ImplicitCastExpr 0x556e5d3581d0 <col:34> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d3581a8 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
([B2.15]) (ImplicitCastExpr, LValueToRValue, StkId)
  17: MemberExpr 0x556e5d358258 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d358240 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x556e5d358220 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x556e5d3581e8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
      `-ImplicitCastExpr 0x556e5d3581d0 <col:34> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x556e5d3581a8 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B2.16]->value
  18: MemberExpr 0x556e5d358290 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
`-MemberExpr 0x556e5d358258 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d358240 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d358220 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x556e5d3581e8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
        `-ImplicitCastExpr 0x556e5d3581d0 <col:34> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x556e5d3581a8 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B2.17].gc
  19: ImplicitCastExpr 0x556e5d358358 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x556e5d3582c8 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x556e5d358290 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
    `-MemberExpr 0x556e5d358258 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
      `-ImplicitCastExpr 0x556e5d358240 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x556e5d358220 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x556e5d3581e8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
            `-ImplicitCastExpr 0x556e5d3581d0 <col:34> 'lua_State *' <LValueToRValue>
              `-DeclRefExpr 0x556e5d3581a8 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
([B2.18]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  20: CallExpr 0x556e5d358300 <./lgc.h:87:2, col:39> 'void'
|-ImplicitCastExpr 0x556e5d3582e8 <col:2> 'void (*)(lua_State *, GCObject *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d357f10 <col:2> 'void (lua_State *, GCObject *, GCObject *)' Function 0x556e5d2f8820 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
|-ImplicitCastExpr 0x556e5d358340 <lapi.c:1082:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x556e5d357f38 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
|-ParenExpr 0x556e5d358188 <./lstate.h:162:20, col:42> 'GCObject *'
| `-ParenExpr 0x556e5d358168 <./llimits.h:75:22, col:31> 'GCObject *'
|   `-CStyleCastExpr 0x556e5d358140 <col:23, col:30> 'GCObject *' <BitCast>
|     `-ParenExpr 0x556e5d358120 <col:26, col:30> 'union Closure *'
|       `-ParenExpr 0x556e5d3580c0 <./lstate.h:162:38, col:40> 'union Closure *'
|         `-ParenExpr 0x556e5d3580a0 <./llimits.h:63:25, col:27> 'union Closure *'
|           `-UnaryOperator 0x556e5d358080 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|             `-MemberExpr 0x556e5d358048 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
|               `-ImplicitCastExpr 0x556e5d358030 <col:48, col:59> 'GCObject *' <LValueToRValue>
|                 `-MemberExpr 0x556e5d357ff8 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
|                   `-MemberExpr 0x556e5d357fc0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
|                     `-ImplicitCastExpr 0x556e5d357fa8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                       `-ParenExpr 0x556e5d357f88 <col:48, col:50> 'StkId':'TValue *' lvalue
|                         `-DeclRefExpr 0x556e5d357f60 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
`-ImplicitCastExpr 0x556e5d358358 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x556e5d3582c8 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x556e5d358290 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
      `-MemberExpr 0x556e5d358258 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
        `-ImplicitCastExpr 0x556e5d358240 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x556e5d358220 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x556e5d3581e8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
              `-ImplicitCastExpr 0x556e5d3581d0 <col:34> 'lua_State *' <LValueToRValue>
                `-DeclRefExpr 0x556e5d3581a8 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B2.2]([B2.4], (([B2.12])), [B2.19])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
fi
   2: ImplicitCastExpr 0x556e5d357af8 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: MemberExpr 0x556e5d357b10 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B3.2]->value
   4: MemberExpr 0x556e5d357b48 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
`-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B3.3].gc
   5: ImplicitCastExpr 0x556e5d357b80 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
  `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
    `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B3.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x556e5d357b98 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
`-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
    `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
      `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B3.5]->cl
   7: UnaryOperator 0x556e5d357bd0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x556e5d357b98 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
  `-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
      `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
        `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
&[B3.6]
   8: CStyleCastExpr 0x556e5d357c90 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ParenExpr 0x556e5d357c70 <col:26, col:30> 'union Closure *'
  `-ParenExpr 0x556e5d357c10 <./lstate.h:162:38, col:40> 'union Closure *'
    `-ParenExpr 0x556e5d357bf0 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x556e5d357bd0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x556e5d357b98 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
          `-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
              `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
(GCObject *)((([B3.7]))) (CStyleCastExpr, BitCast, GCObject *)
   9: MemberExpr 0x556e5d357d18 <./lgc.h:66:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
`-ParenExpr 0x556e5d357cf8 <col:33, col:35> 'GCObject *'
  `-ParenExpr 0x556e5d357cd8 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x556e5d357cb8 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x556e5d357c90 <col:23, col:30> 'GCObject *' <BitCast>
        `-ParenExpr 0x556e5d357c70 <col:26, col:30> 'union Closure *'
          `-ParenExpr 0x556e5d357c10 <./lstate.h:162:38, col:40> 'union Closure *'
            `-ParenExpr 0x556e5d357bf0 <./llimits.h:63:25, col:27> 'union Closure *'
              `-UnaryOperator 0x556e5d357bd0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                `-MemberExpr 0x556e5d357b98 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
                  `-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
                      `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                        `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                          `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
                            `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
((([B3.8])))->gch
  10: MemberExpr 0x556e5d357d50 <./lgc.h:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
`-MemberExpr 0x556e5d357d18 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
  `-ParenExpr 0x556e5d357cf8 <col:33, col:35> 'GCObject *'
    `-ParenExpr 0x556e5d357cd8 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x556e5d357cb8 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x556e5d357c90 <col:23, col:30> 'GCObject *' <BitCast>
          `-ParenExpr 0x556e5d357c70 <col:26, col:30> 'union Closure *'
            `-ParenExpr 0x556e5d357c10 <./lstate.h:162:38, col:40> 'union Closure *'
              `-ParenExpr 0x556e5d357bf0 <./llimits.h:63:25, col:27> 'union Closure *'
                `-UnaryOperator 0x556e5d357bd0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                  `-MemberExpr 0x556e5d357b98 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
                    `-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
                      `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
                        `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                          `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                            `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
                              `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B3.9].marked
  11: ImplicitCastExpr 0x556e5d357e70 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x556e5d357d88 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x556e5d357d50 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
    `-MemberExpr 0x556e5d357d18 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
      `-ParenExpr 0x556e5d357cf8 <col:33, col:35> 'GCObject *'
        `-ParenExpr 0x556e5d357cd8 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x556e5d357cb8 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x556e5d357c90 <col:23, col:30> 'GCObject *' <BitCast>
              `-ParenExpr 0x556e5d357c70 <col:26, col:30> 'union Closure *'
                `-ParenExpr 0x556e5d357c10 <./lstate.h:162:38, col:40> 'union Closure *'
                  `-ParenExpr 0x556e5d357bf0 <./llimits.h:63:25, col:27> 'union Closure *'
                    `-UnaryOperator 0x556e5d357bd0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                      `-MemberExpr 0x556e5d357b98 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
                        `-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
                          `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
                            `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                              `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                                `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
                                  `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
([B3.10]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  12: ImplicitCastExpr 0x556e5d357e88 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x556e5d357e70 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x556e5d357d88 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x556e5d357d50 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
      `-MemberExpr 0x556e5d357d18 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
        `-ParenExpr 0x556e5d357cf8 <col:33, col:35> 'GCObject *'
          `-ParenExpr 0x556e5d357cd8 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x556e5d357cb8 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x556e5d357c90 <col:23, col:30> 'GCObject *' <BitCast>
                `-ParenExpr 0x556e5d357c70 <col:26, col:30> 'union Closure *'
                  `-ParenExpr 0x556e5d357c10 <./lstate.h:162:38, col:40> 'union Closure *'
                    `-ParenExpr 0x556e5d357bf0 <./llimits.h:63:25, col:27> 'union Closure *'
                      `-UnaryOperator 0x556e5d357bd0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                        `-MemberExpr 0x556e5d357b98 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
                          `-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
                            `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
                              `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                                `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                                  `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
                                    `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B3.11] (ImplicitCastExpr, IntegralCast, int)
  13: IntegerLiteral 0x556e5d357da8 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x556e5d357dc8 <./lgc.h:56:18> 'int' 2
2
  15: BinaryOperator 0x556e5d357e08 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x556e5d357da8 <col:21> 'int' 1
`-ParenExpr 0x556e5d357de8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x556e5d357dc8 <line:56:18> 'int' 2
[B3.13] << ([B3.14])
  16: BinaryOperator 0x556e5d357ea0 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x556e5d357e88 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x556e5d357e70 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x556e5d357d88 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x556e5d357d50 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
|       `-MemberExpr 0x556e5d357d18 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
|         `-ParenExpr 0x556e5d357cf8 <col:33, col:35> 'GCObject *'
|           `-ParenExpr 0x556e5d357cd8 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x556e5d357cb8 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x556e5d357c90 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ParenExpr 0x556e5d357c70 <col:26, col:30> 'union Closure *'
|                   `-ParenExpr 0x556e5d357c10 <./lstate.h:162:38, col:40> 'union Closure *'
|                     `-ParenExpr 0x556e5d357bf0 <./llimits.h:63:25, col:27> 'union Closure *'
|                       `-UnaryOperator 0x556e5d357bd0 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|                         `-MemberExpr 0x556e5d357b98 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x556e5d2dd568
|                           `-ImplicitCastExpr 0x556e5d357b80 <col:48, col:59> 'GCObject *' <LValueToRValue>
|                             `-MemberExpr 0x556e5d357b48 <col:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
|                               `-MemberExpr 0x556e5d357b10 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
|                                 `-ImplicitCastExpr 0x556e5d357af8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                                   `-ParenExpr 0x556e5d357ad8 <col:48, col:50> 'StkId':'TValue *' lvalue
|                                     `-DeclRefExpr 0x556e5d357ab0 <lapi.c:1082:29> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
`-ParenExpr 0x556e5d357e50 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x556e5d357e30 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x556e5d357e08 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x556e5d357da8 <col:21> 'int' 1
      `-ParenExpr 0x556e5d357de8 <col:24, col:26> 'int'
        `-IntegerLiteral 0x556e5d357dc8 <line:56:18> 'int' 2
[B3.12] & (([B3.15]))
   T: if (([B5.39]) && ([B4.19])) && ([B3.16])
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x556e5d357610 <lapi.c:1082:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x556e5d357638 <lapi.c:1082:34> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B4.2]->top
   4: ImplicitCastExpr 0x556e5d3576a8 <./lobject.h:91:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
    `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x556e5d3576c0 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
      `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B4.4]->value
   6: MemberExpr 0x556e5d3576f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
`-MemberExpr 0x556e5d3576c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
        `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B4.5].gc
   7: ImplicitCastExpr 0x556e5d357770 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x556e5d357750 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x556e5d357730 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x556e5d3576f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
      `-MemberExpr 0x556e5d3576c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
        `-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
              `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
                `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
(([B4.6])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x556e5d357788 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
`-ImplicitCastExpr 0x556e5d357770 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x556e5d357750 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x556e5d357730 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x556e5d3576f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
        `-MemberExpr 0x556e5d3576c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
          `-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
            `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
              `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
                `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
                  `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B4.7]->gch
   9: MemberExpr 0x556e5d3577c0 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
`-MemberExpr 0x556e5d357788 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
  `-ImplicitCastExpr 0x556e5d357770 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x556e5d357750 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x556e5d357730 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x556e5d3576f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
          `-MemberExpr 0x556e5d3576c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
            `-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
              `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
                `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
                  `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
                    `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B4.8].marked
  10: ImplicitCastExpr 0x556e5d3579f0 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x556e5d3577f8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x556e5d3577c0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
    `-MemberExpr 0x556e5d357788 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
      `-ImplicitCastExpr 0x556e5d357770 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x556e5d357750 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x556e5d357730 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x556e5d3576f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
              `-MemberExpr 0x556e5d3576c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                `-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
                      `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
                        `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
([B4.9]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  11: ImplicitCastExpr 0x556e5d357a08 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x556e5d3579f0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x556e5d3577f8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x556e5d3577c0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
      `-MemberExpr 0x556e5d357788 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
        `-ImplicitCastExpr 0x556e5d357770 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x556e5d357750 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x556e5d357730 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x556e5d3576f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
                `-MemberExpr 0x556e5d3576c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
                  `-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
                        `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
                          `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B4.10] (ImplicitCastExpr, IntegralCast, int)
  12: IntegerLiteral 0x556e5d357818 <./lgc.h:30:21> 'int' 1
1
  13: IntegerLiteral 0x556e5d357838 <./lgc.h:54:19> 'int' 0
0
  14: BinaryOperator 0x556e5d357878 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x556e5d357818 <col:21> 'int' 1
`-ParenExpr 0x556e5d357858 <col:24, col:26> 'int'
  `-IntegerLiteral 0x556e5d357838 <line:54:19> 'int' 0
[B4.12] << ([B4.13])
  15: IntegerLiteral 0x556e5d3578c0 <./lgc.h:30:21> 'int' 1
1
  16: IntegerLiteral 0x556e5d3578e0 <./lgc.h:55:19> 'int' 1
1
  17: BinaryOperator 0x556e5d357920 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x556e5d3578c0 <col:21> 'int' 1
`-ParenExpr 0x556e5d357900 <col:24, col:26> 'int'
  `-IntegerLiteral 0x556e5d3578e0 <line:55:19> 'int' 1
[B4.15] << ([B4.16])
  18: BinaryOperator 0x556e5d357968 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x556e5d3578a0 <col:20, col:27> 'int'
| `-BinaryOperator 0x556e5d357878 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x556e5d357818 <col:21> 'int' 1
|   `-ParenExpr 0x556e5d357858 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x556e5d357838 <line:54:19> 'int' 0
`-ParenExpr 0x556e5d357948 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x556e5d357920 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x556e5d3578c0 <col:21> 'int' 1
    `-ParenExpr 0x556e5d357900 <col:24, col:26> 'int'
      `-IntegerLiteral 0x556e5d3578e0 <line:55:19> 'int' 1
([B4.14]) | ([B4.17])
  19: BinaryOperator 0x556e5d357a20 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x556e5d357a08 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x556e5d3579f0 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x556e5d3577f8 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x556e5d3577c0 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x556e5d2b7280
|       `-MemberExpr 0x556e5d357788 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x556e5d2dd430
|         `-ImplicitCastExpr 0x556e5d357770 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x556e5d357750 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x556e5d357730 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x556e5d3576f8 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x556e5d2b7450
|                 `-MemberExpr 0x556e5d3576c0 <col:48, col:53> 'Value':'Value' lvalue ->value 0x556e5d2b7750
|                   `-ImplicitCastExpr 0x556e5d3576a8 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                     `-ParenExpr 0x556e5d357688 <col:48, col:50> 'StkId':'TValue *' lvalue
|                       `-MemberExpr 0x556e5d357650 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
|                         `-ImplicitCastExpr 0x556e5d357638 <col:34> 'lua_State *' <LValueToRValue>
|                           `-DeclRefExpr 0x556e5d357610 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
`-ParenExpr 0x556e5d3579d0 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x556e5d3579b0 <line:37:40, col:57> 'int'
    `-ParenExpr 0x556e5d357990 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x556e5d357968 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x556e5d3578a0 <col:20, col:27> 'int'
        | `-BinaryOperator 0x556e5d357878 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x556e5d357818 <col:21> 'int' 1
        |   `-ParenExpr 0x556e5d357858 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x556e5d357838 <line:54:19> 'int' 0
        `-ParenExpr 0x556e5d357948 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x556e5d357920 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x556e5d3578c0 <col:21> 'int' 1
            `-ParenExpr 0x556e5d357900 <col:24, col:26> 'int'
              `-IntegerLiteral 0x556e5d3578e0 <line:55:19> 'int' 1
[B4.11] & ((([B4.18])))
   T: (([B5.39]) && ([B4.19])) && ...
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: DeclRefExpr 0x556e5d356e58 <lapi.c:1080:5> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x556e5d356e80 <lapi.c:1080:5> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356e58 <col:5> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x556e5d356e98 <lapi.c:1080:5, col:8> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d356e80 <col:5> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356e58 <col:5> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.2]->top
   4: UnaryOperator 0x556e5d356ed0 <lapi.c:1080:5, col:11> 'StkId':'TValue *' postfix '--'
`-MemberExpr 0x556e5d356e98 <col:5, col:8> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
  `-ImplicitCastExpr 0x556e5d356e80 <col:5> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d356e58 <col:5> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.3]--
   5: DeclRefExpr 0x556e5d356f60 <lapi.c:1081:20> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x556e5d356f88 <lapi.c:1081:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356f60 <col:20> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x556e5d356fa0 <lapi.c:1081:20, col:23> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d356f88 <col:20> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356f60 <col:20> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.6]->top
   8: ImplicitCastExpr 0x556e5d356ff8 <./lobject.h:162:22, col:27> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d356fd8 <col:22, col:27> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x556e5d356fa0 <lapi.c:1081:20, col:23> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
    `-ImplicitCastExpr 0x556e5d356f88 <col:20> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d356f60 <col:20> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
([B5.7]) (ImplicitCastExpr, LValueToRValue, StkId)
   9: ImplicitCastExpr 0x556e5d357010 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x556e5d356ff8 <col:22, col:27> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x556e5d356fd8 <col:22, col:27> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x556e5d356fa0 <lapi.c:1081:20, col:23> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
      `-ImplicitCastExpr 0x556e5d356f88 <col:20> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x556e5d356f60 <col:20> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.8] (ImplicitCastExpr, BitCast, const TValue *)
  10: DeclStmt 0x556e5d357028 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x556e5d356f00 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x556e5d357010 <col:22, col:27> 'const TValue *' <BitCast>
    `-ImplicitCastExpr 0x556e5d356ff8 <col:22, col:27> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x556e5d356fd8 <col:22, col:27> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x556e5d356fa0 <lapi.c:1081:20, col:23> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
          `-ImplicitCastExpr 0x556e5d356f88 <col:20> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x556e5d356f60 <col:20> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
const TValue *o2 = (L->top);
  11: DeclRefExpr 0x556e5d3570b0 <lapi.c:1081:15> 'TValue *' lvalue Var 0x556e5d356920 'val' 'TValue *'
val
  12: ImplicitCastExpr 0x556e5d3570f8 <./lobject.h:162:41, col:46> 'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d3570d8 <col:41, col:46> 'TValue *' lvalue
  `-DeclRefExpr 0x556e5d3570b0 <lapi.c:1081:15> 'TValue *' lvalue Var 0x556e5d356920 'val' 'TValue *'
([B5.11]) (ImplicitCastExpr, LValueToRValue, TValue *)
  13: DeclStmt 0x556e5d357110 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x556e5d357050 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x556e5d3570f8 <col:41, col:46> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d3570d8 <col:41, col:46> 'TValue *' lvalue
      `-DeclRefExpr 0x556e5d3570b0 <lapi.c:1081:15> 'TValue *' lvalue Var 0x556e5d356920 'val' 'TValue *'
TValue *o1 = (val);
  14: DeclRefExpr 0x556e5d3571a0 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
o2
  15: ImplicitCastExpr 0x556e5d3571c8 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3571a0 <col:17> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.14] (ImplicitCastExpr, LValueToRValue, const TValue *)
  16: MemberExpr 0x556e5d3571e0 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d3571c8 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3571a0 <col:17> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.15]->value
  17: ImplicitCastExpr 0x556e5d357218 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x556e5d3571e0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d3571c8 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d3571a0 <col:17> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.16] (ImplicitCastExpr, LValueToRValue, Value)
  18: DeclRefExpr 0x556e5d357128 <./lobject.h:163:5> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
o1
  19: ImplicitCastExpr 0x556e5d357150 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d357128 <col:5> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
[B5.18] (ImplicitCastExpr, LValueToRValue, TValue *)
  20: MemberExpr 0x556e5d357168 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d357150 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d357128 <col:5> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
[B5.19]->value
  21: BinaryOperator 0x556e5d357230 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x556e5d357168 <col:5, col:9> 'Value':'Value' lvalue ->value 0x556e5d2b7750
| `-ImplicitCastExpr 0x556e5d357150 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x556e5d357128 <col:5> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
`-ImplicitCastExpr 0x556e5d357218 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x556e5d3571e0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x556e5d2b7750
    `-ImplicitCastExpr 0x556e5d3571c8 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d3571a0 <col:17> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.20] = [B5.17]
  22: DeclRefExpr 0x556e5d3572d0 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
o2
  23: ImplicitCastExpr 0x556e5d3572f8 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3572d0 <col:35> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.22] (ImplicitCastExpr, LValueToRValue, const TValue *)
  24: MemberExpr 0x556e5d357310 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x556e5d2b77b0
`-ImplicitCastExpr 0x556e5d3572f8 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3572d0 <col:35> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.23]->tt
  25: ImplicitCastExpr 0x556e5d357348 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x556e5d357310 <col:35, col:39> 'const int' lvalue ->tt 0x556e5d2b77b0
  `-ImplicitCastExpr 0x556e5d3572f8 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d3572d0 <col:35> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.24] (ImplicitCastExpr, LValueToRValue, int)
  26: DeclRefExpr 0x556e5d357258 <./lobject.h:163:28> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
o1
  27: ImplicitCastExpr 0x556e5d357280 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d357258 <col:28> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
[B5.26] (ImplicitCastExpr, LValueToRValue, TValue *)
  28: MemberExpr 0x556e5d357298 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x556e5d2b77b0
`-ImplicitCastExpr 0x556e5d357280 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d357258 <col:28> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
[B5.27]->tt
  29: BinaryOperator 0x556e5d357360 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x556e5d357298 <col:28, col:32> 'int' lvalue ->tt 0x556e5d2b77b0
| `-ImplicitCastExpr 0x556e5d357280 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x556e5d357258 <col:28> 'TValue *' lvalue Var 0x556e5d357050 'o1' 'TValue *'
`-ImplicitCastExpr 0x556e5d357348 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x556e5d357310 <col:35, col:39> 'const int' lvalue ->tt 0x556e5d2b77b0
    `-ImplicitCastExpr 0x556e5d3572f8 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d3572d0 <col:35> 'const TValue *' lvalue Var 0x556e5d356f00 'o2' 'const TValue *'
[B5.28] = [B5.25]
  30: IntegerLiteral 0x556e5d357388 <./llimits.h:62:31> 'int' 0
0
  31: CStyleCastExpr 0x556e5d3573b8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x556e5d357388 <col:31> 'int' 0
(void)[B5.30] (CStyleCastExpr, ToVoid, void)
  32: DeclRefExpr 0x556e5d357488 <lapi.c:1082:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
  33: ImplicitCastExpr 0x556e5d3574b0 <lapi.c:1082:34> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d357488 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.32] (ImplicitCastExpr, LValueToRValue, lua_State *)
  34: MemberExpr 0x556e5d3574c8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d3574b0 <col:34> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d357488 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.33]->top
  35: ImplicitCastExpr 0x556e5d357520 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d357500 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x556e5d3574c8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
    `-ImplicitCastExpr 0x556e5d3574b0 <col:34> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d357488 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
([B5.34]) (ImplicitCastExpr, LValueToRValue, StkId)
  36: MemberExpr 0x556e5d357538 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x556e5d2b77b0
`-ImplicitCastExpr 0x556e5d357520 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x556e5d357500 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x556e5d3574c8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
      `-ImplicitCastExpr 0x556e5d3574b0 <col:34> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x556e5d357488 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B5.35]->tt
  37: ImplicitCastExpr 0x556e5d3575b0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x556e5d357570 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x556e5d357538 <col:19, col:24> 'int' lvalue ->tt 0x556e5d2b77b0
    `-ImplicitCastExpr 0x556e5d357520 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x556e5d357500 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x556e5d3574c8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
          `-ImplicitCastExpr 0x556e5d3574b0 <col:34> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x556e5d357488 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
([B5.36]) (ImplicitCastExpr, LValueToRValue, int)
  38: IntegerLiteral 0x556e5d357590 <./lua.h:78:22> 'int' 4
4
  39: BinaryOperator 0x556e5d3575c8 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x556e5d3575b0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x556e5d357570 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x556e5d357538 <col:19, col:24> 'int' lvalue ->tt 0x556e5d2b77b0
|     `-ImplicitCastExpr 0x556e5d357520 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x556e5d357500 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-MemberExpr 0x556e5d3574c8 <lapi.c:1082:34, col:37> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
|           `-ImplicitCastExpr 0x556e5d3574b0 <col:34> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x556e5d357488 <col:34> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
`-IntegerLiteral 0x556e5d357590 <./lua.h:78:22> 'int' 4
[B5.37] >= [B5.38]
   T: ([B5.39]) && ...
   Preds (1): B6
   Succs (2): B4 B1

 [B6]
   1: DeclStmt 0x556e5d3568f8 <lapi.c:1072:3, col:19>col:15
`-VarDecl 0x556e5d356898 <col:3, col:15> col:15 used name 'const char *'
const char *name;
   2: DeclStmt 0x556e5d356980 <lapi.c:1073:3, col:14>col:11
`-VarDecl 0x556e5d356920 <col:3, col:11> col:11 used val 'TValue *'
TValue *val;
   3: DeclStmt 0x556e5d356a08 <lapi.c:1074:3, col:11>col:9
`-VarDecl 0x556e5d3569a8 <col:3, col:9> col:9 used fi 'StkId':'TValue *'
StkId fi;
   4: IntegerLiteral 0x556e5d356a20 <./llimits.h:110:33> 'int' 0
0
   5: CStyleCastExpr 0x556e5d356a50 <./llimits.h:110:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x556e5d356a20 <col:33> 'int' 0
(void)[B6.4] (CStyleCastExpr, ToVoid, void)
   6: DeclRefExpr 0x556e5d356ac0 <lapi.c:1076:8> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
index2adr
   7: ImplicitCastExpr 0x556e5d356b38 <lapi.c:1076:8> 'TValue *(*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d356ac0 <col:8> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
[B6.6] (ImplicitCastExpr, FunctionToPointerDecay, TValue *(*)(lua_State *, int))
   8: DeclRefExpr 0x556e5d356ae8 <lapi.c:1076:18> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x556e5d356b88 <lapi.c:1076:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356ae8 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B6.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: DeclRefExpr 0x556e5d356b10 <lapi.c:1076:21> 'int' lvalue ParmVar 0x556e5d3566b0 'funcindex' 'int'
funcindex
  11: ImplicitCastExpr 0x556e5d356ba0 <lapi.c:1076:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x556e5d356b10 <col:21> 'int' lvalue ParmVar 0x556e5d3566b0 'funcindex' 'int'
[B6.10] (ImplicitCastExpr, LValueToRValue, int)
  12: CallExpr 0x556e5d356b50 <lapi.c:1076:8, col:30> 'TValue *'
|-ImplicitCastExpr 0x556e5d356b38 <col:8> 'TValue *(*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d356ac0 <col:8> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
|-ImplicitCastExpr 0x556e5d356b88 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x556e5d356ae8 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
`-ImplicitCastExpr 0x556e5d356ba0 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356b10 <col:21> 'int' lvalue ParmVar 0x556e5d3566b0 'funcindex' 'int'
[B6.7]([B6.9], [B6.11])
  13: DeclRefExpr 0x556e5d356a98 <lapi.c:1076:3> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
fi
  14: BinaryOperator 0x556e5d356bb8 <lapi.c:1076:3, col:30> 'StkId':'TValue *' '='
|-DeclRefExpr 0x556e5d356a98 <col:3> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
`-CallExpr 0x556e5d356b50 <col:8, col:30> 'TValue *'
  |-ImplicitCastExpr 0x556e5d356b38 <col:8> 'TValue *(*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x556e5d356ac0 <col:8> 'TValue *(lua_State *, int)' Function 0x556e5d302a70 'index2adr' 'TValue *(lua_State *, int)'
  |-ImplicitCastExpr 0x556e5d356b88 <col:18> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x556e5d356ae8 <col:18> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
  `-ImplicitCastExpr 0x556e5d356ba0 <col:21> 'int' <LValueToRValue>
    `-DeclRefExpr 0x556e5d356b10 <col:21> 'int' lvalue ParmVar 0x556e5d3566b0 'funcindex' 'int'
[B6.13] = [B6.12]
  15: DeclRefExpr 0x556e5d356be0 <lapi.c:1077:19> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
L
  16: ImplicitCastExpr 0x556e5d356c18 <lapi.c:1077:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356be0 <col:19> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
[B6.15] (ImplicitCastExpr, LValueToRValue, lua_State *)
  17: CStyleCastExpr 0x556e5d356c30 <./luaconf.h:381:30, lapi.c:1077:19> 'void' <ToVoid>
`-ImplicitCastExpr 0x556e5d356c18 <col:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d356be0 <col:19> 'lua_State *' lvalue ParmVar 0x556e5d356638 'L' 'lua_State *'
(void)[B6.16] (CStyleCastExpr, ToVoid, void)
  18: DeclRefExpr 0x556e5d356ca8 <lapi.c:1078:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
aux_upvalue
  19: ImplicitCastExpr 0x556e5d356d68 <lapi.c:1078:10> 'const char *(*)(StkId, int, TValue **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d356ca8 <col:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
[B6.18] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(StkId, int, TValue **))
  20: DeclRefExpr 0x556e5d356cd0 <lapi.c:1078:22> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
fi
  21: ImplicitCastExpr 0x556e5d356dc0 <lapi.c:1078:22> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356cd0 <col:22> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
[B6.20] (ImplicitCastExpr, LValueToRValue, StkId)
  22: DeclRefExpr 0x556e5d356cf8 <lapi.c:1078:26> 'int' lvalue ParmVar 0x556e5d356728 'n' 'int'
n
  23: ImplicitCastExpr 0x556e5d356dd8 <lapi.c:1078:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x556e5d356cf8 <col:26> 'int' lvalue ParmVar 0x556e5d356728 'n' 'int'
[B6.22] (ImplicitCastExpr, LValueToRValue, int)
  24: DeclRefExpr 0x556e5d356d20 <lapi.c:1078:30> 'TValue *' lvalue Var 0x556e5d356920 'val' 'TValue *'
val
  25: UnaryOperator 0x556e5d356d48 <lapi.c:1078:29, col:30> 'TValue **' prefix '&'
`-DeclRefExpr 0x556e5d356d20 <col:30> 'TValue *' lvalue Var 0x556e5d356920 'val' 'TValue *'
&[B6.24]
  26: CallExpr 0x556e5d356d80 <lapi.c:1078:10, col:33> 'const char *'
|-ImplicitCastExpr 0x556e5d356d68 <col:10> 'const char *(*)(StkId, int, TValue **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d356ca8 <col:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
|-ImplicitCastExpr 0x556e5d356dc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x556e5d356cd0 <col:22> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
|-ImplicitCastExpr 0x556e5d356dd8 <col:26> 'int' <LValueToRValue>
| `-DeclRefExpr 0x556e5d356cf8 <col:26> 'int' lvalue ParmVar 0x556e5d356728 'n' 'int'
`-UnaryOperator 0x556e5d356d48 <col:29, col:30> 'TValue **' prefix '&'
  `-DeclRefExpr 0x556e5d356d20 <col:30> 'TValue *' lvalue Var 0x556e5d356920 'val' 'TValue *'
[B6.19]([B6.21], [B6.23], [B6.25])
  27: DeclRefExpr 0x556e5d356c80 <lapi.c:1078:3> 'const char *' lvalue Var 0x556e5d356898 'name' 'const char *'
name
  28: BinaryOperator 0x556e5d356df0 <lapi.c:1078:3, col:33> 'const char *' '='
|-DeclRefExpr 0x556e5d356c80 <col:3> 'const char *' lvalue Var 0x556e5d356898 'name' 'const char *'
`-CallExpr 0x556e5d356d80 <col:10, col:33> 'const char *'
  |-ImplicitCastExpr 0x556e5d356d68 <col:10> 'const char *(*)(StkId, int, TValue **)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x556e5d356ca8 <col:10> 'const char *(StkId, int, TValue **)' Function 0x556e5d353838 'aux_upvalue' 'const char *(StkId, int, TValue **)'
  |-ImplicitCastExpr 0x556e5d356dc0 <col:22> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x556e5d356cd0 <col:22> 'StkId':'TValue *' lvalue Var 0x556e5d3569a8 'fi' 'StkId':'TValue *'
  |-ImplicitCastExpr 0x556e5d356dd8 <col:26> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x556e5d356cf8 <col:26> 'int' lvalue ParmVar 0x556e5d356728 'n' 'int'
  `-UnaryOperator 0x556e5d356d48 <col:29, col:30> 'TValue **' prefix '&'
    `-DeclRefExpr 0x556e5d356d20 <col:30> 'TValue *' lvalue Var 0x556e5d356920 'val' 'TValue *'
[B6.27] = [B6.26]
  29: DeclRefExpr 0x556e5d356e18 <lapi.c:1079:7> 'const char *' lvalue Var 0x556e5d356898 'name' 'const char *'
name
  30: ImplicitCastExpr 0x556e5d356e40 <lapi.c:1079:7> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x556e5d356e18 <col:7> 'const char *' lvalue Var 0x556e5d356898 'name' 'const char *'
[B6.29] (ImplicitCastExpr, LValueToRValue, const char *)
   T: if [B6.30]
   Preds (1): B7
   Succs (2): B5 B1

 [B0 (EXIT)]
   Preds (1): B1
