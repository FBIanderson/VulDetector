const char *luaX_token2str(LexState *ls, int token)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x561ce7446b68 <llex.c:85:12> 'const char *const [32]' lvalue Var 0x561ce743dfc0 'luaX_tokens' 'const char *const [32]'
luaX_tokens
   2: ImplicitCastExpr 0x561ce7446c18 <llex.c:85:12> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x561ce7446b68 <col:12> 'const char *const [32]' lvalue Var 0x561ce743dfc0 'luaX_tokens' 'const char *const [32]'
[B1.1] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
   3: DeclRefExpr 0x561ce7446b90 <llex.c:85:24> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
token
   4: ImplicitCastExpr 0x561ce7446bd8 <llex.c:85:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7446b90 <col:24> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B1.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x561ce7446bb8 <./llex.h:14:24> 'int' 257
257
   6: BinaryOperator 0x561ce7446bf0 <llex.c:85:24, ./llex.h:14:24> 'int' '-'
|-ImplicitCastExpr 0x561ce7446bd8 <llex.c:85:24> 'int' <LValueToRValue>
| `-DeclRefExpr 0x561ce7446b90 <col:24> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
`-IntegerLiteral 0x561ce7446bb8 <./llex.h:14:24> 'int' 257
[B1.4] - [B1.5]
   7: ArraySubscriptExpr 0x561ce7446c30 <llex.c:85:12, col:44> 'const char *const' lvalue
|-ImplicitCastExpr 0x561ce7446c18 <col:12> 'const char *const *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x561ce7446b68 <col:12> 'const char *const [32]' lvalue Var 0x561ce743dfc0 'luaX_tokens' 'const char *const [32]'
`-BinaryOperator 0x561ce7446bf0 <col:24, ./llex.h:14:24> 'int' '-'
  |-ImplicitCastExpr 0x561ce7446bd8 <llex.c:85:24> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x561ce7446b90 <col:24> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
  `-IntegerLiteral 0x561ce7446bb8 <./llex.h:14:24> 'int' 257
[B1.2][[B1.6]]
   8: ImplicitCastExpr 0x561ce7446c58 <llex.c:85:12, col:44> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x561ce7446c30 <col:12, col:44> 'const char *const' lvalue
  |-ImplicitCastExpr 0x561ce7446c18 <col:12> 'const char *const *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x561ce7446b68 <col:12> 'const char *const [32]' lvalue Var 0x561ce743dfc0 'luaX_tokens' 'const char *const [32]'
  `-BinaryOperator 0x561ce7446bf0 <col:24, ./llex.h:14:24> 'int' '-'
    |-ImplicitCastExpr 0x561ce7446bd8 <llex.c:85:24> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x561ce7446b90 <col:24> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
    `-IntegerLiteral 0x561ce7446bb8 <./llex.h:14:24> 'int' 257
[B1.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: ReturnStmt 0x561ce7446c70 <llex.c:85:5, col:44>
`-ImplicitCastExpr 0x561ce7446c58 <col:12, col:44> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x561ce7446c30 <col:12, col:44> 'const char *const' lvalue
    |-ImplicitCastExpr 0x561ce7446c18 <col:12> 'const char *const *' <ArrayToPointerDecay>
    | `-DeclRefExpr 0x561ce7446b68 <col:12> 'const char *const [32]' lvalue Var 0x561ce743dfc0 'luaX_tokens' 'const char *const [32]'
    `-BinaryOperator 0x561ce7446bf0 <col:24, ./llex.h:14:24> 'int' '-'
      |-ImplicitCastExpr 0x561ce7446bd8 <llex.c:85:24> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x561ce7446b90 <col:24> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
      `-IntegerLiteral 0x561ce7446bb8 <./llex.h:14:24> 'int' 257
return [B1.8];
   Preds (1): B6
   Succs (1): B0

 [B2]
   1: ConditionalOperator 0x561ce7446af0 <llex.c:81:12, line:82:66> 'const char *'
|-ParenExpr 0x561ce7446710 <line:81:12, col:27> 'int'
| `-ParenExpr 0x561ce74466f0 </usr/include/ctype.h:89:3, col:62> 'int'
|   `-BinaryOperator 0x561ce74466c8 <col:4, line:191:36> 'int' '&'
|     |-ImplicitCastExpr 0x561ce7446698 <line:89:4, col:33> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561ce7446680 <col:4, col:33> 'unsigned short' <LValueToRValue>
|     |   `-ArraySubscriptExpr 0x561ce74465f0 <col:4, col:33> 'const unsigned short' lvalue
|     |     |-ImplicitCastExpr 0x561ce74465d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     |     | `-ParenExpr 0x561ce74464c8 <col:4, col:22> 'const unsigned short *' lvalue
|     |     |   `-UnaryOperator 0x561ce74464a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     |     `-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
|     |     |       `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |     |         `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
|     |     `-CStyleCastExpr 0x561ce74465b0 <col:24, col:32> 'int' <NoOp>
|     |       `-ImplicitCastExpr 0x561ce7446598 <col:30, col:32> 'int' <LValueToRValue>
|     |         `-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
|     |           `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
|     |             `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
|     `-ImplicitCastExpr 0x561ce74466b0 </usr/include/ctype.h:89:37, line:191:36> 'int' <IntegralCast>
|       `-CStyleCastExpr 0x561ce7446658 <line:89:37, line:191:36> 'unsigned short' <IntegralCast>
|         `-DeclRefExpr 0x561ce7446618 <col:36> 'int' EnumConstant 0x561ce7306890 '_IScntrl' 'int'
|-CallExpr 0x561ce74468a0 <llex.c:81:31, col:72> 'const char *'
| |-ImplicitCastExpr 0x561ce7446888 <col:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x561ce7446730 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
| |-ImplicitCastExpr 0x561ce74468e0 <col:48, col:52> 'struct lua_State *' <LValueToRValue>
| | `-MemberExpr 0x561ce7446798 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
| |   `-ImplicitCastExpr 0x561ce7446780 <col:48> 'LexState *' <LValueToRValue>
| |     `-DeclRefExpr 0x561ce7446758 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
| |-ImplicitCastExpr 0x561ce7446910 <col:55> 'const char *' <BitCast>
| | `-ImplicitCastExpr 0x561ce74468f8 <col:55> 'char *' <ArrayToPointerDecay>
| |   `-StringLiteral 0x561ce74467d0 <col:55> 'char [9]' lvalue "char(%d)"
| `-ImplicitCastExpr 0x561ce7446928 <col:67> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x561ce7446800 <col:67> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
`-CallExpr 0x561ce7446a50 <line:82:31, col:66> 'const char *'
  |-ImplicitCastExpr 0x561ce7446a38 <col:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x561ce7446940 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
  |-ImplicitCastExpr 0x561ce7446a90 <col:48, col:52> 'struct lua_State *' <LValueToRValue>
  | `-MemberExpr 0x561ce74469a8 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  |   `-ImplicitCastExpr 0x561ce7446990 <col:48> 'LexState *' <LValueToRValue>
  |     `-DeclRefExpr 0x561ce7446968 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
  |-ImplicitCastExpr 0x561ce7446ac0 <col:55> 'const char *' <BitCast>
  | `-ImplicitCastExpr 0x561ce7446aa8 <col:55> 'char *' <ArrayToPointerDecay>
  |   `-StringLiteral 0x561ce74469e0 <col:55> 'char [3]' lvalue "%c"
  `-ImplicitCastExpr 0x561ce7446ad8 <col:61> 'int' <LValueToRValue>
    `-DeclRefExpr 0x561ce7446a10 <col:61> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
(([B5.17])) ? [B3.12] : [B4.12]
   2: ReturnStmt 0x561ce7446b30 <llex.c:81:5, line:82:66>
`-ConditionalOperator 0x561ce7446af0 <line:81:12, line:82:66> 'const char *'
  |-ParenExpr 0x561ce7446710 <line:81:12, col:27> 'int'
  | `-ParenExpr 0x561ce74466f0 </usr/include/ctype.h:89:3, col:62> 'int'
  |   `-BinaryOperator 0x561ce74466c8 <col:4, line:191:36> 'int' '&'
  |     |-ImplicitCastExpr 0x561ce7446698 <line:89:4, col:33> 'int' <IntegralCast>
  |     | `-ImplicitCastExpr 0x561ce7446680 <col:4, col:33> 'unsigned short' <LValueToRValue>
  |     |   `-ArraySubscriptExpr 0x561ce74465f0 <col:4, col:33> 'const unsigned short' lvalue
  |     |     |-ImplicitCastExpr 0x561ce74465d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  |     |     | `-ParenExpr 0x561ce74464c8 <col:4, col:22> 'const unsigned short *' lvalue
  |     |     |   `-UnaryOperator 0x561ce74464a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     |     |     `-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
  |     |     |       `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |     |     |         `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
  |     |     `-CStyleCastExpr 0x561ce74465b0 <col:24, col:32> 'int' <NoOp>
  |     |       `-ImplicitCastExpr 0x561ce7446598 <col:30, col:32> 'int' <LValueToRValue>
  |     |         `-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
  |     |           `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
  |     |             `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
  |     `-ImplicitCastExpr 0x561ce74466b0 </usr/include/ctype.h:89:37, line:191:36> 'int' <IntegralCast>
  |       `-CStyleCastExpr 0x561ce7446658 <line:89:37, line:191:36> 'unsigned short' <IntegralCast>
  |         `-DeclRefExpr 0x561ce7446618 <col:36> 'int' EnumConstant 0x561ce7306890 '_IScntrl' 'int'
  |-CallExpr 0x561ce74468a0 <llex.c:81:31, col:72> 'const char *'
  | |-ImplicitCastExpr 0x561ce7446888 <col:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x561ce7446730 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
  | |-ImplicitCastExpr 0x561ce74468e0 <col:48, col:52> 'struct lua_State *' <LValueToRValue>
  | | `-MemberExpr 0x561ce7446798 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  | |   `-ImplicitCastExpr 0x561ce7446780 <col:48> 'LexState *' <LValueToRValue>
  | |     `-DeclRefExpr 0x561ce7446758 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
  | |-ImplicitCastExpr 0x561ce7446910 <col:55> 'const char *' <BitCast>
  | | `-ImplicitCastExpr 0x561ce74468f8 <col:55> 'char *' <ArrayToPointerDecay>
  | |   `-StringLiteral 0x561ce74467d0 <col:55> 'char [9]' lvalue "char(%d)"
  | `-ImplicitCastExpr 0x561ce7446928 <col:67> 'int' <LValueToRValue>
  |   `-DeclRefExpr 0x561ce7446800 <col:67> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
  `-CallExpr 0x561ce7446a50 <line:82:31, col:66> 'const char *'
    |-ImplicitCastExpr 0x561ce7446a38 <col:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x561ce7446940 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
    |-ImplicitCastExpr 0x561ce7446a90 <col:48, col:52> 'struct lua_State *' <LValueToRValue>
    | `-MemberExpr 0x561ce74469a8 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
    |   `-ImplicitCastExpr 0x561ce7446990 <col:48> 'LexState *' <LValueToRValue>
    |     `-DeclRefExpr 0x561ce7446968 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
    |-ImplicitCastExpr 0x561ce7446ac0 <col:55> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x561ce7446aa8 <col:55> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x561ce74469e0 <col:55> 'char [3]' lvalue "%c"
    `-ImplicitCastExpr 0x561ce7446ad8 <col:61> 'int' <LValueToRValue>
      `-DeclRefExpr 0x561ce7446a10 <col:61> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
return [B2.1];
   Preds (2): B3 B4
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x561ce7446730 <llex.c:81:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
luaO_pushfstring
   2: ImplicitCastExpr 0x561ce7446888 <llex.c:81:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7446730 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x561ce7446758 <llex.c:81:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x561ce7446780 <llex.c:81:48> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7446758 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
[B3.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: MemberExpr 0x561ce7446798 <llex.c:81:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
`-ImplicitCastExpr 0x561ce7446780 <col:48> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7446758 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
[B3.4]->L
   6: ImplicitCastExpr 0x561ce74468e0 <llex.c:81:48, col:52> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x561ce7446798 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  `-ImplicitCastExpr 0x561ce7446780 <col:48> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x561ce7446758 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
[B3.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: StringLiteral 0x561ce74467d0 <llex.c:81:55> 'char [9]' lvalue "char(%d)"
"char(%d)"
   8: ImplicitCastExpr 0x561ce74468f8 <llex.c:81:55> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x561ce74467d0 <col:55> 'char [9]' lvalue "char(%d)"
[B3.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x561ce7446910 <llex.c:81:55> 'const char *' <BitCast>
`-ImplicitCastExpr 0x561ce74468f8 <col:55> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x561ce74467d0 <col:55> 'char [9]' lvalue "char(%d)"
[B3.8] (ImplicitCastExpr, BitCast, const char *)
  10: DeclRefExpr 0x561ce7446800 <llex.c:81:67> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
token
  11: ImplicitCastExpr 0x561ce7446928 <llex.c:81:67> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7446800 <col:67> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B3.10] (ImplicitCastExpr, LValueToRValue, int)
  12: CallExpr 0x561ce74468a0 <llex.c:81:31, col:72> 'const char *'
|-ImplicitCastExpr 0x561ce7446888 <col:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7446730 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x561ce74468e0 <col:48, col:52> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x561ce7446798 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
|   `-ImplicitCastExpr 0x561ce7446780 <col:48> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x561ce7446758 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
|-ImplicitCastExpr 0x561ce7446910 <col:55> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x561ce74468f8 <col:55> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x561ce74467d0 <col:55> 'char [9]' lvalue "char(%d)"
`-ImplicitCastExpr 0x561ce7446928 <col:67> 'int' <LValueToRValue>
  `-DeclRefExpr 0x561ce7446800 <col:67> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B3.2]([B3.6], [B3.9], [B3.11])
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x561ce7446940 <llex.c:82:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
luaO_pushfstring
   2: ImplicitCastExpr 0x561ce7446a38 <llex.c:82:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7446940 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x561ce7446968 <llex.c:82:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x561ce7446990 <llex.c:82:48> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7446968 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
[B4.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: MemberExpr 0x561ce74469a8 <llex.c:82:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
`-ImplicitCastExpr 0x561ce7446990 <col:48> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7446968 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
[B4.4]->L
   6: ImplicitCastExpr 0x561ce7446a90 <llex.c:82:48, col:52> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x561ce74469a8 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
  `-ImplicitCastExpr 0x561ce7446990 <col:48> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x561ce7446968 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
[B4.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: StringLiteral 0x561ce74469e0 <llex.c:82:55> 'char [3]' lvalue "%c"
"%c"
   8: ImplicitCastExpr 0x561ce7446aa8 <llex.c:82:55> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x561ce74469e0 <col:55> 'char [3]' lvalue "%c"
[B4.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x561ce7446ac0 <llex.c:82:55> 'const char *' <BitCast>
`-ImplicitCastExpr 0x561ce7446aa8 <col:55> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x561ce74469e0 <col:55> 'char [3]' lvalue "%c"
[B4.8] (ImplicitCastExpr, BitCast, const char *)
  10: DeclRefExpr 0x561ce7446a10 <llex.c:82:61> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
token
  11: ImplicitCastExpr 0x561ce7446ad8 <llex.c:82:61> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7446a10 <col:61> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B4.10] (ImplicitCastExpr, LValueToRValue, int)
  12: CallExpr 0x561ce7446a50 <llex.c:82:31, col:66> 'const char *'
|-ImplicitCastExpr 0x561ce7446a38 <col:31> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7446940 <col:31> 'const char *(lua_State *, const char *, ...)' Function 0x561ce7406a08 'luaO_pushfstring' 'const char *(lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x561ce7446a90 <col:48, col:52> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x561ce74469a8 <col:48, col:52> 'struct lua_State *' lvalue ->L 0x561ce7426bb0
|   `-ImplicitCastExpr 0x561ce7446990 <col:48> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x561ce7446968 <col:48> 'LexState *' lvalue ParmVar 0x561ce7446110 'ls' 'LexState *'
|-ImplicitCastExpr 0x561ce7446ac0 <col:55> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x561ce7446aa8 <col:55> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x561ce74469e0 <col:55> 'char [3]' lvalue "%c"
`-ImplicitCastExpr 0x561ce7446ad8 <col:61> 'int' <LValueToRValue>
  `-DeclRefExpr 0x561ce7446a10 <col:61> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B4.2]([B4.6], [B4.9], [B4.11])
   Preds (1): B5
   Succs (1): B2

 [B5]
   1: IntegerLiteral 0x561ce74463a0 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x561ce74463d0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x561ce74463a0 <col:31> 'int' 0
(void)[B5.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x561ce7446418 </usr/include/ctype.h:89:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
__ctype_b_loc
   4: ImplicitCastExpr 0x561ce7446468 </usr/include/ctype.h:89:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
[B5.3] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned short **(*)(void))
   5: CallExpr 0x561ce7446480 </usr/include/ctype.h:89:6, col:21> 'const unsigned short **'
`-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
[B5.4]()
   6: UnaryOperator 0x561ce74464a8 </usr/include/ctype.h:89:5, col:21> 'const unsigned short *' lvalue prefix '*'
`-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
  `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
*[B5.5]
   7: ImplicitCastExpr 0x561ce74465d8 </usr/include/ctype.h:89:4, col:22> 'const unsigned short *' <LValueToRValue>
`-ParenExpr 0x561ce74464c8 <col:4, col:22> 'const unsigned short *' lvalue
  `-UnaryOperator 0x561ce74464a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    `-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
      `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
([B5.6]) (ImplicitCastExpr, LValueToRValue, const unsigned short *)
   8: DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
token
   9: ImplicitCastExpr 0x561ce7446598 </usr/include/ctype.h:89:30, col:32> 'int' <LValueToRValue>
`-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
  `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
    `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
(([B5.8])) (ImplicitCastExpr, LValueToRValue, int)
  10: CStyleCastExpr 0x561ce74465b0 </usr/include/ctype.h:89:24, col:32> 'int' <NoOp>
`-ImplicitCastExpr 0x561ce7446598 <col:30, col:32> 'int' <LValueToRValue>
  `-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
    `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
      `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
(int)[B5.9] (CStyleCastExpr, NoOp, int)
  11: ArraySubscriptExpr 0x561ce74465f0 </usr/include/ctype.h:89:4, col:33> 'const unsigned short' lvalue
|-ImplicitCastExpr 0x561ce74465d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
| `-ParenExpr 0x561ce74464c8 <col:4, col:22> 'const unsigned short *' lvalue
|   `-UnaryOperator 0x561ce74464a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     `-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
|       `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
`-CStyleCastExpr 0x561ce74465b0 <col:24, col:32> 'int' <NoOp>
  `-ImplicitCastExpr 0x561ce7446598 <col:30, col:32> 'int' <LValueToRValue>
    `-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
      `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
        `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B5.7][[B5.10]]
  12: ImplicitCastExpr 0x561ce7446680 </usr/include/ctype.h:89:4, col:33> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x561ce74465f0 <col:4, col:33> 'const unsigned short' lvalue
  |-ImplicitCastExpr 0x561ce74465d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
  | `-ParenExpr 0x561ce74464c8 <col:4, col:22> 'const unsigned short *' lvalue
  |   `-UnaryOperator 0x561ce74464a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
  |     `-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
  |       `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
  |         `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
  `-CStyleCastExpr 0x561ce74465b0 <col:24, col:32> 'int' <NoOp>
    `-ImplicitCastExpr 0x561ce7446598 <col:30, col:32> 'int' <LValueToRValue>
      `-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
        `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
          `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B5.11] (ImplicitCastExpr, LValueToRValue, unsigned short)
  13: ImplicitCastExpr 0x561ce7446698 </usr/include/ctype.h:89:4, col:33> 'int' <IntegralCast>
`-ImplicitCastExpr 0x561ce7446680 <col:4, col:33> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x561ce74465f0 <col:4, col:33> 'const unsigned short' lvalue
    |-ImplicitCastExpr 0x561ce74465d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
    | `-ParenExpr 0x561ce74464c8 <col:4, col:22> 'const unsigned short *' lvalue
    |   `-UnaryOperator 0x561ce74464a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
    |     `-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
    |       `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
    `-CStyleCastExpr 0x561ce74465b0 <col:24, col:32> 'int' <NoOp>
      `-ImplicitCastExpr 0x561ce7446598 <col:30, col:32> 'int' <LValueToRValue>
        `-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
          `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
            `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B5.12] (ImplicitCastExpr, IntegralCast, int)
  14: DeclRefExpr 0x561ce7446618 </usr/include/ctype.h:191:36> 'int' EnumConstant 0x561ce7306890 '_IScntrl' 'int'
_IScntrl
  15: CStyleCastExpr 0x561ce7446658 </usr/include/ctype.h:89:37, line:191:36> 'unsigned short' <IntegralCast>
`-DeclRefExpr 0x561ce7446618 <col:36> 'int' EnumConstant 0x561ce7306890 '_IScntrl' 'int'
(unsigned short)[B5.14] (CStyleCastExpr, IntegralCast, unsigned short)
  16: ImplicitCastExpr 0x561ce74466b0 </usr/include/ctype.h:89:37, line:191:36> 'int' <IntegralCast>
`-CStyleCastExpr 0x561ce7446658 <line:89:37, line:191:36> 'unsigned short' <IntegralCast>
  `-DeclRefExpr 0x561ce7446618 <col:36> 'int' EnumConstant 0x561ce7306890 '_IScntrl' 'int'
[B5.15] (ImplicitCastExpr, IntegralCast, int)
  17: BinaryOperator 0x561ce74466c8 </usr/include/ctype.h:89:4, line:191:36> 'int' '&'
|-ImplicitCastExpr 0x561ce7446698 <line:89:4, col:33> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x561ce7446680 <col:4, col:33> 'unsigned short' <LValueToRValue>
|   `-ArraySubscriptExpr 0x561ce74465f0 <col:4, col:33> 'const unsigned short' lvalue
|     |-ImplicitCastExpr 0x561ce74465d8 <col:4, col:22> 'const unsigned short *' <LValueToRValue>
|     | `-ParenExpr 0x561ce74464c8 <col:4, col:22> 'const unsigned short *' lvalue
|     |   `-UnaryOperator 0x561ce74464a8 <col:5, col:21> 'const unsigned short *' lvalue prefix '*'
|     |     `-CallExpr 0x561ce7446480 <col:6, col:21> 'const unsigned short **'
|     |       `-ImplicitCastExpr 0x561ce7446468 <col:6> 'const unsigned short **(*)(void)' <FunctionToPointerDecay>
|     |         `-DeclRefExpr 0x561ce7446418 <col:6> 'const unsigned short **(void)' Function 0x561ce73070f0 '__ctype_b_loc' 'const unsigned short **(void)'
|     `-CStyleCastExpr 0x561ce74465b0 <col:24, col:32> 'int' <NoOp>
|       `-ImplicitCastExpr 0x561ce7446598 <col:30, col:32> 'int' <LValueToRValue>
|         `-ParenExpr 0x561ce7446578 <col:30, col:32> 'int' lvalue
|           `-ParenExpr 0x561ce7446510 <line:191:31, col:33> 'int' lvalue
|             `-DeclRefExpr 0x561ce74464e8 <llex.c:81:21> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
`-ImplicitCastExpr 0x561ce74466b0 </usr/include/ctype.h:89:37, line:191:36> 'int' <IntegralCast>
  `-CStyleCastExpr 0x561ce7446658 <line:89:37, line:191:36> 'unsigned short' <IntegralCast>
    `-DeclRefExpr 0x561ce7446618 <col:36> 'int' EnumConstant 0x561ce7306890 '_IScntrl' 'int'
[B5.13] & [B5.16]
   T: (([B5.17])) ? ... : ...
   Preds (1): B6
   Succs (2): B3 B4

 [B6]
   1: DeclRefExpr 0x561ce7446318 <llex.c:79:7> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
token
   2: ImplicitCastExpr 0x561ce7446360 <llex.c:79:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7446318 <col:7> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x561ce7446340 <./llex.h:14:24> 'int' 257
257
   4: BinaryOperator 0x561ce7446378 <llex.c:79:7, ./llex.h:14:24> 'int' '<'
|-ImplicitCastExpr 0x561ce7446360 <llex.c:79:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x561ce7446318 <col:7> 'int' lvalue ParmVar 0x561ce7446188 'token' 'int'
`-IntegerLiteral 0x561ce7446340 <./llex.h:14:24> 'int' 257
[B6.2] < [B6.3]
   T: if [B6.4]
   Preds (1): B7
   Succs (2): B5 B1

 [B0 (EXIT)]
   Preds (2): B1 B2
