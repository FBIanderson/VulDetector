static int lua_array_length(lua_State *l, json_config_t *cfg, strbuf_t *json)
 [B19 (ENTRY)]
   Succs (1): B18

 [B1]
   1: DeclRefExpr 0x563107e0f490 <lua_cjson.c:533:12> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
max
   2: ImplicitCastExpr 0x563107e0f4b8 <lua_cjson.c:533:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e0f490 <col:12> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x563107e0f4d0 <lua_cjson.c:533:5, col:12>
`-ImplicitCastExpr 0x563107e0f4b8 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e0f490 <col:12> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
return [B1.2];
   Preds (3): B5 B6 B7
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x563107e0f3e0 <lua_cjson.c:530:17> 'int' 1
1
   2: UnaryOperator 0x563107e0f400 <lua_cjson.c:530:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x563107e0f3e0 <col:17> 'int' 1
-[B2.1]
   3: ReturnStmt 0x563107e0f420 <lua_cjson.c:530:9, col:17>
`-UnaryOperator 0x563107e0f400 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x563107e0f3e0 <col:17> 'int' 1
return [B2.2];
   Preds (2): B3 B4
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x563107e0f148 <lua_cjson.c:528:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
json_encode_exception
   2: ImplicitCastExpr 0x563107e0f2c8 <lua_cjson.c:528:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0f148 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *))
   3: DeclRefExpr 0x563107e0f170 <lua_cjson.c:528:35> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e0f330 <lua_cjson.c:528:35> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0f170 <col:35> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e0f198 <lua_cjson.c:528:38> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
cfg
   6: ImplicitCastExpr 0x563107e0f348 <lua_cjson.c:528:38> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0f198 <col:38> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B3.5] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   7: DeclRefExpr 0x563107e0f1c0 <lua_cjson.c:528:43> 'strbuf_t *' lvalue ParmVar 0x563107e0db40 'json' 'strbuf_t *'
json
   8: ImplicitCastExpr 0x563107e0f360 <lua_cjson.c:528:43> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0f1c0 <col:43> 'strbuf_t *' lvalue ParmVar 0x563107e0db40 'json' 'strbuf_t *'
[B3.7] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   9: IntegerLiteral 0x563107e0f1e8 <lua_cjson.c:528:50> 'int' 1
1
  10: UnaryOperator 0x563107e0f208 <lua_cjson.c:528:49, col:50> 'int' prefix '-'
`-IntegerLiteral 0x563107e0f1e8 <col:50> 'int' 1
-[B3.9]
  11: StringLiteral 0x563107e0f228 <lua_cjson.c:528:53> 'char [25]' lvalue "excessively sparse array"
"excessively sparse array"
  12: ImplicitCastExpr 0x563107e0f378 <lua_cjson.c:528:53> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e0f228 <col:53> 'char [25]' lvalue "excessively sparse array"
[B3.11] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  13: ImplicitCastExpr 0x563107e0f390 <lua_cjson.c:528:53> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e0f378 <col:53> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e0f228 <col:53> 'char [25]' lvalue "excessively sparse array"
[B3.12] (ImplicitCastExpr, BitCast, const char *)
  14: CallExpr 0x563107e0f2e0 <lua_cjson.c:528:13, col:79> 'void'
|-ImplicitCastExpr 0x563107e0f2c8 <col:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0f148 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
|-ImplicitCastExpr 0x563107e0f330 <col:35> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0f170 <col:35> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e0f348 <col:38> 'json_config_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0f198 <col:38> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e0f360 <col:43> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0f1c0 <col:43> 'strbuf_t *' lvalue ParmVar 0x563107e0db40 'json' 'strbuf_t *'
|-UnaryOperator 0x563107e0f208 <col:49, col:50> 'int' prefix '-'
| `-IntegerLiteral 0x563107e0f1e8 <col:50> 'int' 1
`-ImplicitCastExpr 0x563107e0f390 <col:53> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e0f378 <col:53> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e0f228 <col:53> 'char [25]' lvalue "excessively sparse array"
[B3.2]([B3.4], [B3.6], [B3.8], [B3.10], [B3.13])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x563107e0f098 <lua_cjson.c:527:14> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
cfg
   2: ImplicitCastExpr 0x563107e0f0c0 <lua_cjson.c:527:14> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0f098 <col:14> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B4.1] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   3: MemberExpr 0x563107e0f0d8 <lua_cjson.c:527:14, col:19> 'int' lvalue ->encode_sparse_convert 0x563107df1040
`-ImplicitCastExpr 0x563107e0f0c0 <col:14> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0f098 <col:14> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B4.2]->encode_sparse_convert
   4: ImplicitCastExpr 0x563107e0f110 <lua_cjson.c:527:14, col:19> 'int' <LValueToRValue>
`-MemberExpr 0x563107e0f0d8 <col:14, col:19> 'int' lvalue ->encode_sparse_convert 0x563107df1040
  `-ImplicitCastExpr 0x563107e0f0c0 <col:14> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e0f098 <col:14> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: UnaryOperator 0x563107e0f128 <lua_cjson.c:527:13, col:19> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e0f110 <col:14, col:19> 'int' <LValueToRValue>
  `-MemberExpr 0x563107e0f0d8 <col:14, col:19> 'int' lvalue ->encode_sparse_convert 0x563107df1040
    `-ImplicitCastExpr 0x563107e0f0c0 <col:14> 'json_config_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e0f098 <col:14> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
![B4.4]
   T: if [B4.5]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x563107e0ef50 <lua_cjson.c:526:9> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
max
   2: ImplicitCastExpr 0x563107e0eff0 <lua_cjson.c:526:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e0ef50 <col:9> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x563107e0ef78 <lua_cjson.c:526:15> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
cfg
   4: ImplicitCastExpr 0x563107e0efa0 <lua_cjson.c:526:15> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0ef78 <col:15> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B5.3] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   5: MemberExpr 0x563107e0efb8 <lua_cjson.c:526:15, col:20> 'int' lvalue ->encode_sparse_safe 0x563107df1100
`-ImplicitCastExpr 0x563107e0efa0 <col:15> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0ef78 <col:15> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B5.4]->encode_sparse_safe
   6: ImplicitCastExpr 0x563107e0f008 <lua_cjson.c:526:15, col:20> 'int' <LValueToRValue>
`-MemberExpr 0x563107e0efb8 <col:15, col:20> 'int' lvalue ->encode_sparse_safe 0x563107df1100
  `-ImplicitCastExpr 0x563107e0efa0 <col:15> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e0ef78 <col:15> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B5.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x563107e0f020 <lua_cjson.c:526:9, col:20> 'int' '>'
|-ImplicitCastExpr 0x563107e0eff0 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e0ef50 <col:9> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
`-ImplicitCastExpr 0x563107e0f008 <col:15, col:20> 'int' <LValueToRValue>
  `-MemberExpr 0x563107e0efb8 <col:15, col:20> 'int' lvalue ->encode_sparse_safe 0x563107df1100
    `-ImplicitCastExpr 0x563107e0efa0 <col:15> 'json_config_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e0ef78 <col:15> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B5.2] > [B5.6]
   T: if [B7.6] && [B6.10] && [B5.7]
   Preds (1): B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x563107e0edc8 <lua_cjson.c:525:9> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
max
   2: ImplicitCastExpr 0x563107e0eee8 <lua_cjson.c:525:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e0edc8 <col:9> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x563107e0edf0 <lua_cjson.c:525:15> 'int' lvalue Var 0x563107e0de68 'items' 'int'
items
   4: ImplicitCastExpr 0x563107e0ee90 <lua_cjson.c:525:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e0edf0 <col:15> 'int' lvalue Var 0x563107e0de68 'items' 'int'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x563107e0ee18 <lua_cjson.c:525:23> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
cfg
   6: ImplicitCastExpr 0x563107e0ee40 <lua_cjson.c:525:23> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0ee18 <col:23> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B6.5] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   7: MemberExpr 0x563107e0ee58 <lua_cjson.c:525:23, col:28> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
`-ImplicitCastExpr 0x563107e0ee40 <col:23> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0ee18 <col:23> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B6.6]->encode_sparse_ratio
   8: ImplicitCastExpr 0x563107e0eea8 <lua_cjson.c:525:23, col:28> 'int' <LValueToRValue>
`-MemberExpr 0x563107e0ee58 <col:23, col:28> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
  `-ImplicitCastExpr 0x563107e0ee40 <col:23> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e0ee18 <col:23> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B6.7] (ImplicitCastExpr, LValueToRValue, int)
   9: BinaryOperator 0x563107e0eec0 <lua_cjson.c:525:15, col:28> 'int' '*'
|-ImplicitCastExpr 0x563107e0ee90 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e0edf0 <col:15> 'int' lvalue Var 0x563107e0de68 'items' 'int'
`-ImplicitCastExpr 0x563107e0eea8 <col:23, col:28> 'int' <LValueToRValue>
  `-MemberExpr 0x563107e0ee58 <col:23, col:28> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
    `-ImplicitCastExpr 0x563107e0ee40 <col:23> 'json_config_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e0ee18 <col:23> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B6.4] * [B6.8]
  10: BinaryOperator 0x563107e0ef00 <lua_cjson.c:525:9, col:28> 'int' '>'
|-ImplicitCastExpr 0x563107e0eee8 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e0edc8 <col:9> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
`-BinaryOperator 0x563107e0eec0 <col:15, col:28> 'int' '*'
  |-ImplicitCastExpr 0x563107e0ee90 <col:15> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x563107e0edf0 <col:15> 'int' lvalue Var 0x563107e0de68 'items' 'int'
  `-ImplicitCastExpr 0x563107e0eea8 <col:23, col:28> 'int' <LValueToRValue>
    `-MemberExpr 0x563107e0ee58 <col:23, col:28> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
      `-ImplicitCastExpr 0x563107e0ee40 <col:23> 'json_config_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e0ee18 <col:23> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B6.2] > [B6.9]
   T: [B7.6] && [B6.10] && ...
   Preds (1): B7
   Succs (2): B5 B1

 [B7]
   1: DeclRefExpr 0x563107e0ecf0 <lua_cjson.c:524:9> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
cfg
   2: ImplicitCastExpr 0x563107e0ed18 <lua_cjson.c:524:9> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e0ecf0 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B7.1] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   3: MemberExpr 0x563107e0ed30 <lua_cjson.c:524:9, col:14> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
`-ImplicitCastExpr 0x563107e0ed18 <col:9> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0ecf0 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B7.2]->encode_sparse_ratio
   4: ImplicitCastExpr 0x563107e0ed88 <lua_cjson.c:524:9, col:14> 'int' <LValueToRValue>
`-MemberExpr 0x563107e0ed30 <col:9, col:14> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
  `-ImplicitCastExpr 0x563107e0ed18 <col:9> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e0ecf0 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
[B7.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x563107e0ed68 <lua_cjson.c:524:36> 'int' 0
0
   6: BinaryOperator 0x563107e0eda0 <lua_cjson.c:524:9, col:36> 'int' '>'
|-ImplicitCastExpr 0x563107e0ed88 <col:9, col:14> 'int' <LValueToRValue>
| `-MemberExpr 0x563107e0ed30 <col:9, col:14> 'int' lvalue ->encode_sparse_ratio 0x563107df10a0
|   `-ImplicitCastExpr 0x563107e0ed18 <col:9> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e0ecf0 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e0dad0 'cfg' 'json_config_t *'
`-IntegerLiteral 0x563107e0ed68 <col:36> 'int' 0
[B7.4] > [B7.5]
   T: [B7.6] && ...
   Preds (1): B17
   Succs (2): B6 B1

 [B8]
   Preds (1): B10
   Succs (1): B17

 [B9]
   1: DeclRefExpr 0x563107e0eaf0 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x563107e0ebe8 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0eaf0 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e0eb18 <lua_cjson.c:519:17> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e0ec38 <lua_cjson.c:519:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0eb18 <col:17> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e0eb40 <lua_cjson.c:519:20> 'int' 2
2
   6: UnaryOperator 0x563107e0eb80 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x563107e0eb60 <col:38, col:40> 'int'
  `-IntegerLiteral 0x563107e0eb40 <lua_cjson.c:519:20> 'int' 2
-([B9.5])
   7: IntegerLiteral 0x563107e0eba0 <./lua.h:254:42> 'int' 1
1
   8: BinaryOperator 0x563107e0ebc0 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x563107e0eb80 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x563107e0eb60 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x563107e0eb40 <lua_cjson.c:519:20> 'int' 2
`-IntegerLiteral 0x563107e0eba0 <./lua.h:254:42> 'int' 1
[B9.6] - [B9.7]
   9: CallExpr 0x563107e0ec00 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x563107e0ebe8 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0eaf0 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x563107e0ec38 <lua_cjson.c:519:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0eb18 <col:17> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
`-BinaryOperator 0x563107e0ebc0 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x563107e0eb80 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x563107e0eb60 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x563107e0eb40 <lua_cjson.c:519:20> 'int' 2
  `-IntegerLiteral 0x563107e0eba0 <./lua.h:254:42> 'int' 1
[B9.2]([B9.4], [B9.8])
  10: IntegerLiteral 0x563107e0ec50 <lua_cjson.c:520:17> 'int' 1
1
  11: UnaryOperator 0x563107e0ec70 <lua_cjson.c:520:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x563107e0ec50 <col:17> 'int' 1
-[B9.10]
  12: ReturnStmt 0x563107e0ec90 <lua_cjson.c:520:9, col:17>
`-UnaryOperator 0x563107e0ec70 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x563107e0ec50 <col:17> 'int' 1
return [B9.11];
   Preds (4): B13 B14 B15 B16
   Succs (1): B0

 [B10]
   1: DeclRefExpr 0x563107e0e888 <lua_cjson.c:512:17> 'int' lvalue Var 0x563107e0de68 'items' 'int'
items
   2: UnaryOperator 0x563107e0e8b0 <lua_cjson.c:512:17, col:22> 'int' postfix '++'
`-DeclRefExpr 0x563107e0e888 <col:17> 'int' lvalue Var 0x563107e0de68 'items' 'int'
[B10.1]++
   3: DeclRefExpr 0x563107e0e8d0 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   4: ImplicitCastExpr 0x563107e0e9c8 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0e8d0 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B10.3] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   5: DeclRefExpr 0x563107e0e8f8 <lua_cjson.c:513:25> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
l
   6: ImplicitCastExpr 0x563107e0ea18 <lua_cjson.c:513:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0e8f8 <col:25> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B10.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x563107e0e920 <lua_cjson.c:513:28> 'int' 1
1
   8: UnaryOperator 0x563107e0e960 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x563107e0e940 <col:38, col:40> 'int'
  `-IntegerLiteral 0x563107e0e920 <lua_cjson.c:513:28> 'int' 1
-([B10.7])
   9: IntegerLiteral 0x563107e0e980 <./lua.h:254:42> 'int' 1
1
  10: BinaryOperator 0x563107e0e9a0 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x563107e0e960 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x563107e0e940 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x563107e0e920 <lua_cjson.c:513:28> 'int' 1
`-IntegerLiteral 0x563107e0e980 <./lua.h:254:42> 'int' 1
[B10.8] - [B10.9]
  11: CallExpr 0x563107e0e9e0 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x563107e0e9c8 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0e8d0 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x563107e0ea18 <lua_cjson.c:513:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0e8f8 <col:25> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
`-BinaryOperator 0x563107e0e9a0 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x563107e0e960 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x563107e0e940 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x563107e0e920 <lua_cjson.c:513:28> 'int' 1
  `-IntegerLiteral 0x563107e0e980 <./lua.h:254:42> 'int' 1
[B10.4]([B10.6], [B10.10])
   T: continue;
   Preds (2): B11 B12
   Succs (1): B8

 [B11]
   1: DeclRefExpr 0x563107e0e7d0 <lua_cjson.c:511:27> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
k
   2: ImplicitCastExpr 0x563107e0e7f8 <lua_cjson.c:511:27> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e0e7d0 <col:27> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B11.1] (ImplicitCastExpr, LValueToRValue, double)
   3: ImplicitCastExpr 0x563107e0e810 <lua_cjson.c:511:27> 'int' <FloatingToIntegral>
`-ImplicitCastExpr 0x563107e0e7f8 <col:27> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e0e7d0 <col:27> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B11.2] (ImplicitCastExpr, FloatingToIntegral, int)
   4: DeclRefExpr 0x563107e0e7a8 <lua_cjson.c:511:21> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
max
   5: BinaryOperator 0x563107e0e828 <lua_cjson.c:511:21, col:27> 'int' '='
|-DeclRefExpr 0x563107e0e7a8 <col:21> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
`-ImplicitCastExpr 0x563107e0e810 <col:27> 'int' <FloatingToIntegral>
  `-ImplicitCastExpr 0x563107e0e7f8 <col:27> 'double' <LValueToRValue>
    `-DeclRefExpr 0x563107e0e7d0 <col:27> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B11.4] = [B11.3]
   Preds (1): B12
   Succs (1): B10

 [B12]
   1: DeclRefExpr 0x563107e0e6e8 <lua_cjson.c:510:21> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
k
   2: ImplicitCastExpr 0x563107e0e738 <lua_cjson.c:510:21> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e0e6e8 <col:21> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B12.1] (ImplicitCastExpr, LValueToRValue, double)
   3: DeclRefExpr 0x563107e0e710 <lua_cjson.c:510:25> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
max
   4: ImplicitCastExpr 0x563107e0e750 <lua_cjson.c:510:25> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e0e710 <col:25> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
[B12.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ImplicitCastExpr 0x563107e0e768 <lua_cjson.c:510:25> 'double' <IntegralToFloating>
`-ImplicitCastExpr 0x563107e0e750 <col:25> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e0e710 <col:25> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
[B12.4] (ImplicitCastExpr, IntegralToFloating, double)
   6: BinaryOperator 0x563107e0e780 <lua_cjson.c:510:21, col:25> 'int' '>'
|-ImplicitCastExpr 0x563107e0e738 <col:21> 'double' <LValueToRValue>
| `-DeclRefExpr 0x563107e0e6e8 <col:21> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
`-ImplicitCastExpr 0x563107e0e768 <col:25> 'double' <IntegralToFloating>
  `-ImplicitCastExpr 0x563107e0e750 <col:25> 'int' <LValueToRValue>
    `-DeclRefExpr 0x563107e0e710 <col:25> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
[B12.2] > [B12.5]
   T: if [B12.6]
   Preds (1): B13
   Succs (2): B11 B10

 [B13]
   1: DeclRefExpr 0x563107e0e620 <lua_cjson.c:509:34> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
k
   2: ImplicitCastExpr 0x563107e0e668 <lua_cjson.c:509:34> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e0e620 <col:34> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B13.1] (ImplicitCastExpr, LValueToRValue, double)
   3: IntegerLiteral 0x563107e0e648 <lua_cjson.c:509:39> 'int' 1
1
   4: ImplicitCastExpr 0x563107e0e680 <lua_cjson.c:509:39> 'double' <IntegralToFloating>
`-IntegerLiteral 0x563107e0e648 <col:39> 'int' 1
[B13.3] (ImplicitCastExpr, IntegralToFloating, double)
   5: BinaryOperator 0x563107e0e698 <lua_cjson.c:509:34, col:39> 'int' '>='
|-ImplicitCastExpr 0x563107e0e668 <col:34> 'double' <LValueToRValue>
| `-DeclRefExpr 0x563107e0e620 <col:34> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
`-ImplicitCastExpr 0x563107e0e680 <col:39> 'double' <IntegralToFloating>
  `-IntegerLiteral 0x563107e0e648 <col:39> 'int' 1
[B13.2] >= [B13.4]
   T: if [B14.8] && [B13.5]
   Preds (1): B14
   Succs (2): B12 B9

 [B14]
   1: DeclRefExpr 0x563107e0e4e0 <lua_cjson.c:509:17> 'double (double)' Function 0x563107cd34a0 'floor' 'double (double)'
floor
   2: ImplicitCastExpr 0x563107e0e558 <lua_cjson.c:509:17> 'double (*)(double)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0e4e0 <col:17> 'double (double)' Function 0x563107cd34a0 'floor' 'double (double)'
[B14.1] (ImplicitCastExpr, FunctionToPointerDecay, double (*)(double))
   3: DeclRefExpr 0x563107e0e508 <lua_cjson.c:509:23> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
k
   4: ImplicitCastExpr 0x563107e0e5a0 <lua_cjson.c:509:23> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e0e508 <col:23> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B14.3] (ImplicitCastExpr, LValueToRValue, double)
   5: CallExpr 0x563107e0e570 <lua_cjson.c:509:17, col:24> 'double'
|-ImplicitCastExpr 0x563107e0e558 <col:17> 'double (*)(double)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0e4e0 <col:17> 'double (double)' Function 0x563107cd34a0 'floor' 'double (double)'
`-ImplicitCastExpr 0x563107e0e5a0 <col:23> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e0e508 <col:23> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B14.2]([B14.4])
   6: DeclRefExpr 0x563107e0e5b8 <lua_cjson.c:509:29> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
k
   7: ImplicitCastExpr 0x563107e0e5e0 <lua_cjson.c:509:29> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e0e5b8 <col:29> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B14.6] (ImplicitCastExpr, LValueToRValue, double)
   8: BinaryOperator 0x563107e0e5f8 <lua_cjson.c:509:17, col:29> 'int' '=='
|-CallExpr 0x563107e0e570 <col:17, col:24> 'double'
| |-ImplicitCastExpr 0x563107e0e558 <col:17> 'double (*)(double)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e0e4e0 <col:17> 'double (double)' Function 0x563107cd34a0 'floor' 'double (double)'
| `-ImplicitCastExpr 0x563107e0e5a0 <col:23> 'double' <LValueToRValue>
|   `-DeclRefExpr 0x563107e0e508 <col:23> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
`-ImplicitCastExpr 0x563107e0e5e0 <col:29> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e0e5b8 <col:29> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
[B14.5] == [B14.7]
   T: [B14.8] && ...
   Preds (1): B15
   Succs (2): B13 B9

 [B15]
   1: DeclRefExpr 0x563107e0e318 <lua_cjson.c:507:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
lua_tonumber
   2: ImplicitCastExpr 0x563107e0e408 <lua_cjson.c:507:18> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0e318 <col:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B15.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e0e340 <lua_cjson.c:507:31> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e0e458 <lua_cjson.c:507:31> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0e340 <col:31> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B15.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e0e368 <lua_cjson.c:507:35> 'int' 2
2
   6: UnaryOperator 0x563107e0e388 <lua_cjson.c:507:34, col:35> 'int' prefix '-'
`-IntegerLiteral 0x563107e0e368 <col:35> 'int' 2
-[B15.5]
   7: CallExpr 0x563107e0e420 <lua_cjson.c:507:18, col:36> 'lua_Number':'double'
|-ImplicitCastExpr 0x563107e0e408 <col:18> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0e318 <col:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x563107e0e458 <col:31> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0e340 <col:31> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
`-UnaryOperator 0x563107e0e388 <col:34, col:35> 'int' prefix '-'
  `-IntegerLiteral 0x563107e0e368 <col:35> 'int' 2
[B15.2]([B15.4], [B15.6])
   8: DeclRefExpr 0x563107e0e2f0 <lua_cjson.c:507:14> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
k
   9: BinaryOperator 0x563107e0e470 <lua_cjson.c:507:14, col:36> 'double' '='
|-DeclRefExpr 0x563107e0e2f0 <col:14> 'double' lvalue Var 0x563107e0dd48 'k' 'double'
`-CallExpr 0x563107e0e420 <col:18, col:36> 'lua_Number':'double'
  |-ImplicitCastExpr 0x563107e0e408 <col:18> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e0e318 <col:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
  |-ImplicitCastExpr 0x563107e0e458 <col:31> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e0e340 <col:31> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
  `-UnaryOperator 0x563107e0e388 <col:34, col:35> 'int' prefix '-'
    `-IntegerLiteral 0x563107e0e368 <col:35> 'int' 2
[B15.8] = [B15.7]
   T: if [B16.9] && ([B15.9])
   Preds (1): B16
   Succs (2): B14 B9

 [B16]
   1: DeclRefExpr 0x563107e0e1b0 <lua_cjson.c:506:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   2: ImplicitCastExpr 0x563107e0e240 <lua_cjson.c:506:13> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0e1b0 <col:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B16.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e0e1d8 <lua_cjson.c:506:22> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e0e290 <lua_cjson.c:506:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0e1d8 <col:22> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B16.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e0e200 <lua_cjson.c:506:26> 'int' 2
2
   6: UnaryOperator 0x563107e0e220 <lua_cjson.c:506:25, col:26> 'int' prefix '-'
`-IntegerLiteral 0x563107e0e200 <col:26> 'int' 2
-[B16.5]
   7: CallExpr 0x563107e0e258 <lua_cjson.c:506:13, col:27> 'int'
|-ImplicitCastExpr 0x563107e0e240 <col:13> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0e1b0 <col:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e0e290 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0e1d8 <col:22> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
`-UnaryOperator 0x563107e0e220 <col:25, col:26> 'int' prefix '-'
  `-IntegerLiteral 0x563107e0e200 <col:26> 'int' 2
[B16.2]([B16.4], [B16.6])
   8: IntegerLiteral 0x563107e0e2a8 <./lua.h:77:22> 'int' 3
3
   9: BinaryOperator 0x563107e0e2c8 <lua_cjson.c:506:13, ./lua.h:77:22> 'int' '=='
|-CallExpr 0x563107e0e258 <lua_cjson.c:506:13, col:27> 'int'
| |-ImplicitCastExpr 0x563107e0e240 <col:13> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e0e1b0 <col:13> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x563107e0e290 <col:22> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e0e1d8 <col:22> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
| `-UnaryOperator 0x563107e0e220 <col:25, col:26> 'int' prefix '-'
|   `-IntegerLiteral 0x563107e0e200 <col:26> 'int' 2
`-IntegerLiteral 0x563107e0e2a8 <./lua.h:77:22> 'int' 3
[B16.7] == [B16.8]
   T: [B16.9] && ...
   Preds (1): B17
   Succs (2): B15 B9

 [B17]
   1: DeclRefExpr 0x563107e0e070 <lua_cjson.c:504:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_next
   2: ImplicitCastExpr 0x563107e0e100 <lua_cjson.c:504:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0e070 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
[B17.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e0e098 <lua_cjson.c:504:21> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e0e150 <lua_cjson.c:504:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0e098 <col:21> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B17.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e0e0c0 <lua_cjson.c:504:25> 'int' 2
2
   6: UnaryOperator 0x563107e0e0e0 <lua_cjson.c:504:24, col:25> 'int' prefix '-'
`-IntegerLiteral 0x563107e0e0c0 <col:25> 'int' 2
-[B17.5]
   7: CallExpr 0x563107e0e118 <lua_cjson.c:504:12, col:26> 'int'
|-ImplicitCastExpr 0x563107e0e100 <col:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0e070 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e0e150 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e0e098 <col:21> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
`-UnaryOperator 0x563107e0e0e0 <col:24, col:25> 'int' prefix '-'
  `-IntegerLiteral 0x563107e0e0c0 <col:25> 'int' 2
[B17.2]([B17.4], [B17.6])
   8: IntegerLiteral 0x563107e0e168 <lua_cjson.c:504:31> 'int' 0
0
   9: BinaryOperator 0x563107e0e188 <lua_cjson.c:504:12, col:31> 'int' '!='
|-CallExpr 0x563107e0e118 <col:12, col:26> 'int'
| |-ImplicitCastExpr 0x563107e0e100 <col:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e0e070 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x563107e0e150 <col:21> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e0e098 <col:21> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
| `-UnaryOperator 0x563107e0e0e0 <col:24, col:25> 'int' prefix '-'
|   `-IntegerLiteral 0x563107e0e0c0 <col:25> 'int' 2
`-IntegerLiteral 0x563107e0e168 <col:31> 'int' 0
[B17.7] != [B17.8]
   T: while [B17.9]
   Preds (2): B8 B18
   Succs (2): B16 B7

 [B18]
   1: DeclStmt 0x563107e0dda8 <lua_cjson.c:495:5, col:13>col:12
`-VarDecl 0x563107e0dd48 <col:5, col:12> col:12 used k 'double'
double k;
   2: DeclStmt 0x563107e0de38 <lua_cjson.c:496:5, col:12>col:9
`-VarDecl 0x563107e0ddd8 <col:5, col:9> col:9 used max 'int'
int max;
   3: DeclStmt 0x563107e0dec8 <lua_cjson.c:497:5, col:14>col:9
`-VarDecl 0x563107e0de68 <col:5, col:9> col:9 used items 'int'
int items;
   4: IntegerLiteral 0x563107e0df08 <lua_cjson.c:499:11> 'int' 0
0
   5: DeclRefExpr 0x563107e0dee0 <lua_cjson.c:499:5> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
max
   6: BinaryOperator 0x563107e0df28 <lua_cjson.c:499:5, col:11> 'int' '='
|-DeclRefExpr 0x563107e0dee0 <col:5> 'int' lvalue Var 0x563107e0ddd8 'max' 'int'
`-IntegerLiteral 0x563107e0df08 <col:11> 'int' 0
[B18.5] = [B18.4]
   7: IntegerLiteral 0x563107e0df78 <lua_cjson.c:500:13> 'int' 0
0
   8: DeclRefExpr 0x563107e0df50 <lua_cjson.c:500:5> 'int' lvalue Var 0x563107e0de68 'items' 'int'
items
   9: BinaryOperator 0x563107e0df98 <lua_cjson.c:500:5, col:13> 'int' '='
|-DeclRefExpr 0x563107e0df50 <col:5> 'int' lvalue Var 0x563107e0de68 'items' 'int'
`-IntegerLiteral 0x563107e0df78 <col:13> 'int' 0
[B18.8] = [B18.7]
  10: DeclRefExpr 0x563107e0dfc0 <lua_cjson.c:502:5> 'void (lua_State *)':'void (lua_State *)' Function 0x563107d566a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
  11: ImplicitCastExpr 0x563107e0e010 <lua_cjson.c:502:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e0dfc0 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x563107d566a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B18.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
  12: DeclRefExpr 0x563107e0dfe8 <lua_cjson.c:502:17> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
l
  13: ImplicitCastExpr 0x563107e0e058 <lua_cjson.c:502:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e0dfe8 <col:17> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B18.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: CallExpr 0x563107e0e028 <lua_cjson.c:502:5, col:18> 'void'
|-ImplicitCastExpr 0x563107e0e010 <col:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e0dfc0 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x563107d566a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x563107e0e058 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x563107e0dfe8 <col:17> 'lua_State *' lvalue ParmVar 0x563107e0da60 'l' 'lua_State *'
[B18.11]([B18.13])
   Preds (1): B19
   Succs (1): B17

 [B0 (EXIT)]
   Preds (3): B1 B2 B9
