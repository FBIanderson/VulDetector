static void controloptions(lua_State *L, int opt, const char **fmt, Header *h)
 [B14 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5592011f90f0 <lua_struct.c:150:11> 'int' lvalue ParmVar 0x5592011f8e08 'opt' 'int'
opt
   2: ImplicitCastExpr 0x5592011f9118 <lua_struct.c:150:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x5592011f90f0 <col:11> 'int' lvalue ParmVar 0x5592011f8e08 'opt' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B1.2]
   Preds (1): B14
   Succs (5): B10 B11 B12 B13 B2

 [B2]
  default:
   1: DeclRefExpr 0x5592011f9f68 <lua_struct.c:162:25> 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)' Function 0x5592011a8358 'lua_pushfstring' 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)'
lua_pushfstring
   2: ImplicitCastExpr 0x5592011fa0c8 <lua_struct.c:162:25> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5592011f9f68 <col:25> 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)' Function 0x5592011a8358 'lua_pushfstring' 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5592011f9f90 <lua_struct.c:162:41> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5592011fa120 <lua_struct.c:162:41> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5592011f9f90 <col:41> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5592011f9ff8 <lua_struct.c:162:44> 'char [27]' lvalue "invalid format option '%c'"
"invalid format option '%c'"
   6: ImplicitCastExpr 0x5592011fa138 <lua_struct.c:162:44> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5592011f9ff8 <col:44> 'char [27]' lvalue "invalid format option '%c'"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5592011fa150 <lua_struct.c:162:44> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5592011fa138 <col:44> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5592011f9ff8 <col:44> 'char [27]' lvalue "invalid format option '%c'"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x5592011fa040 <lua_struct.c:162:74> 'int' lvalue ParmVar 0x5592011f8e08 'opt' 'int'
opt
   9: ImplicitCastExpr 0x5592011fa168 <lua_struct.c:162:74> 'int' <LValueToRValue>
`-DeclRefExpr 0x5592011fa040 <col:74> 'int' lvalue ParmVar 0x5592011f8e08 'opt' 'int'
[B2.8] (ImplicitCastExpr, LValueToRValue, int)
  10: CallExpr 0x5592011fa0e0 <lua_struct.c:162:25, col:77> 'const char *'
|-ImplicitCastExpr 0x5592011fa0c8 <col:25> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5592011f9f68 <col:25> 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)' Function 0x5592011a8358 'lua_pushfstring' 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5592011fa120 <col:41> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5592011f9f90 <col:41> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
|-ImplicitCastExpr 0x5592011fa150 <col:44> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5592011fa138 <col:44> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5592011f9ff8 <col:44> 'char [27]' lvalue "invalid format option '%c'"
`-ImplicitCastExpr 0x5592011fa168 <col:74> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5592011fa040 <col:74> 'int' lvalue ParmVar 0x5592011f8e08 'opt' 'int'
[B2.2]([B2.4], [B2.7], [B2.9])
  11: DeclStmt 0x5592011fa180 <lua_struct.c:162:7, col:78>col:19
`-VarDecl 0x5592011f9f08 <col:7, col:77> col:19 used msg 'const char *' cinit
  `-CallExpr 0x5592011fa0e0 <col:25, col:77> 'const char *'
    |-ImplicitCastExpr 0x5592011fa0c8 <col:25> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5592011f9f68 <col:25> 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)' Function 0x5592011a8358 'lua_pushfstring' 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)'
    |-ImplicitCastExpr 0x5592011fa120 <col:41> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5592011f9f90 <col:41> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
    |-ImplicitCastExpr 0x5592011fa150 <col:44> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x5592011fa138 <col:44> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x5592011f9ff8 <col:44> 'char [27]' lvalue "invalid format option '%c'"
    `-ImplicitCastExpr 0x5592011fa168 <col:74> 'int' <LValueToRValue>
      `-DeclRefExpr 0x5592011fa040 <col:74> 'int' lvalue ParmVar 0x5592011f8e08 'opt' 'int'
const char *msg = lua_pushfstring(L, "invalid format option '%c'", opt);
  12: DeclRefExpr 0x5592011fa198 <lua_struct.c:163:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
  13: ImplicitCastExpr 0x5592011fa288 <lua_struct.c:163:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5592011fa198 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B2.12] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
  14: DeclRefExpr 0x5592011fa1c0 <lua_struct.c:163:21> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
L
  15: ImplicitCastExpr 0x5592011fa2e0 <lua_struct.c:163:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5592011fa1c0 <col:21> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
[B2.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: IntegerLiteral 0x5592011fa1e8 <lua_struct.c:163:24> 'int' 1
1
  17: DeclRefExpr 0x5592011fa208 <lua_struct.c:163:27> 'const char *' lvalue Var 0x5592011f9f08 'msg' 'const char *'
msg
  18: ImplicitCastExpr 0x5592011fa2f8 <lua_struct.c:163:27> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x5592011fa208 <col:27> 'const char *' lvalue Var 0x5592011f9f08 'msg' 'const char *'
[B2.17] (ImplicitCastExpr, LValueToRValue, const char *)
  19: CallExpr 0x5592011fa2a0 <lua_struct.c:163:7, col:30> 'int'
|-ImplicitCastExpr 0x5592011fa288 <col:7> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5592011fa198 <col:7> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x5592011e6460 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x5592011fa2e0 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5592011fa1c0 <col:21> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
|-IntegerLiteral 0x5592011fa1e8 <col:24> 'int' 1
`-ImplicitCastExpr 0x5592011fa2f8 <col:27> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x5592011fa208 <col:27> 'const char *' lvalue Var 0x5592011f9f08 'msg' 'const char *'
[B2.13]([B2.15], [B2.16], [B2.18])
   Preds (1): B1
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5592011f9e40 <lua_struct.c:158:18> 'int' lvalue Var 0x5592011f9480 'a' 'int'
a
   2: ImplicitCastExpr 0x5592011f9e68 <lua_struct.c:158:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x5592011f9e40 <col:18> 'int' lvalue Var 0x5592011f9480 'a' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5592011f9dc8 <lua_struct.c:158:7> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
h
   4: ImplicitCastExpr 0x5592011f9df0 <lua_struct.c:158:7> 'Header *' <LValueToRValue>
`-DeclRefExpr 0x5592011f9dc8 <col:7> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
[B3.3] (ImplicitCastExpr, LValueToRValue, Header *)
   5: MemberExpr 0x5592011f9e08 <lua_struct.c:158:7, col:10> 'int' lvalue ->align 0x5592011f51c8
`-ImplicitCastExpr 0x5592011f9df0 <col:7> 'Header *' <LValueToRValue>
  `-DeclRefExpr 0x5592011f9dc8 <col:7> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
[B3.4]->align
   6: BinaryOperator 0x5592011f9e80 <lua_struct.c:158:7, col:18> 'int' '='
|-MemberExpr 0x5592011f9e08 <col:7, col:10> 'int' lvalue ->align 0x5592011f51c8
| `-ImplicitCastExpr 0x5592011f9df0 <col:7> 'Header *' <LValueToRValue>
|   `-DeclRefExpr 0x5592011f9dc8 <col:7> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
`-ImplicitCastExpr 0x5592011f9e68 <col:18> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5592011f9e40 <col:18> 'int' lvalue Var 0x5592011f9480 'a' 'int'
[B3.5] = [B3.2]
   7: ReturnStmt 0x5592011f9ea8 <lua_struct.c:159:7>
return;
   Preds (2): B4 B5
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x5592011f9be0 <lua_struct.c:157:9> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x5592011e9da0 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x5592011f9cd8 <lua_struct.c:157:9> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5592011f9be0 <col:9> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x5592011e9da0 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5592011f9c08 <lua_struct.c:157:20> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5592011f9d30 <lua_struct.c:157:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5592011f9c08 <col:20> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5592011f9c68 <lua_struct.c:157:23> 'char [33]' lvalue "alignment %d is not a power of 2"
"alignment %d is not a power of 2"
   6: ImplicitCastExpr 0x5592011f9d48 <lua_struct.c:157:23> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5592011f9c68 <col:23> 'char [33]' lvalue "alignment %d is not a power of 2"
[B4.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5592011f9d60 <lua_struct.c:157:23> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5592011f9d48 <col:23> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5592011f9c68 <col:23> 'char [33]' lvalue "alignment %d is not a power of 2"
[B4.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x5592011f9cb0 <lua_struct.c:157:59> 'int' lvalue Var 0x5592011f9480 'a' 'int'
a
   9: ImplicitCastExpr 0x5592011f9d78 <lua_struct.c:157:59> 'int' <LValueToRValue>
`-DeclRefExpr 0x5592011f9cb0 <col:59> 'int' lvalue Var 0x5592011f9480 'a' 'int'
[B4.8] (ImplicitCastExpr, LValueToRValue, int)
  10: CallExpr 0x5592011f9cf0 <lua_struct.c:157:9, col:60> 'int'
|-ImplicitCastExpr 0x5592011f9cd8 <col:9> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5592011f9be0 <col:9> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x5592011e9da0 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5592011f9d30 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5592011f9c08 <col:20> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
|-ImplicitCastExpr 0x5592011f9d60 <col:23> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x5592011f9d48 <col:23> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x5592011f9c68 <col:23> 'char [33]' lvalue "alignment %d is not a power of 2"
`-ImplicitCastExpr 0x5592011f9d78 <col:59> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5592011f9cb0 <col:59> 'int' lvalue Var 0x5592011f9480 'a' 'int'
[B4.2]([B4.4], [B4.7], [B4.9])
   Preds (1): B5
   Succs (1): B3

 [B5]
   1: BinaryOperator 0x5592011f9b78 <lua_struct.c:62:19, col:51> 'int' '&&'
|-BinaryOperator 0x5592011f9980 <col:19, col:25> 'int' '>'
| |-ImplicitCastExpr 0x5592011f9968 <col:19, col:21> 'int' <LValueToRValue>
| | `-ParenExpr 0x5592011f9928 <col:19, col:21> 'int' lvalue
| |   `-DeclRefExpr 0x5592011f9900 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
| `-IntegerLiteral 0x5592011f9948 <line:62:25> 'int' 0
`-BinaryOperator 0x5592011f9b50 <col:30, col:51> 'int' '=='
  |-ParenExpr 0x5592011f9af8 <col:30, col:46> 'int'
  | `-BinaryOperator 0x5592011f9ad0 <col:31, col:45> 'int' '&'
  |   |-ImplicitCastExpr 0x5592011f9ab8 <col:31, col:33> 'int' <LValueToRValue>
  |   | `-ParenExpr 0x5592011f99d0 <col:31, col:33> 'int' lvalue
  |   |   `-DeclRefExpr 0x5592011f99a8 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
  |   `-ParenExpr 0x5592011f9a98 <line:62:37, col:45> 'int'
  |     `-BinaryOperator 0x5592011f9a70 <col:38, col:44> 'int' '-'
  |       |-ImplicitCastExpr 0x5592011f9a58 <col:38, col:40> 'int' <LValueToRValue>
  |       | `-ParenExpr 0x5592011f9a18 <col:38, col:40> 'int' lvalue
  |       |   `-DeclRefExpr 0x5592011f99f0 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
  |       `-IntegerLiteral 0x5592011f9a38 <line:62:44> 'int' 1
  `-IntegerLiteral 0x5592011f9b30 <col:51> 'int' 0
[B7.8] && [B6.9]
   2: UnaryOperator 0x5592011f9bc0 <lua_struct.c:156:11, line:62:52> 'int' prefix '!'
`-ParenExpr 0x5592011f9ba0 <col:18, col:52> 'int'
  `-BinaryOperator 0x5592011f9b78 <col:19, col:51> 'int' '&&'
    |-BinaryOperator 0x5592011f9980 <col:19, col:25> 'int' '>'
    | |-ImplicitCastExpr 0x5592011f9968 <col:19, col:21> 'int' <LValueToRValue>
    | | `-ParenExpr 0x5592011f9928 <col:19, col:21> 'int' lvalue
    | |   `-DeclRefExpr 0x5592011f9900 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
    | `-IntegerLiteral 0x5592011f9948 <line:62:25> 'int' 0
    `-BinaryOperator 0x5592011f9b50 <col:30, col:51> 'int' '=='
      |-ParenExpr 0x5592011f9af8 <col:30, col:46> 'int'
      | `-BinaryOperator 0x5592011f9ad0 <col:31, col:45> 'int' '&'
      |   |-ImplicitCastExpr 0x5592011f9ab8 <col:31, col:33> 'int' <LValueToRValue>
      |   | `-ParenExpr 0x5592011f99d0 <col:31, col:33> 'int' lvalue
      |   |   `-DeclRefExpr 0x5592011f99a8 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
      |   `-ParenExpr 0x5592011f9a98 <line:62:37, col:45> 'int'
      |     `-BinaryOperator 0x5592011f9a70 <col:38, col:44> 'int' '-'
      |       |-ImplicitCastExpr 0x5592011f9a58 <col:38, col:40> 'int' <LValueToRValue>
      |       | `-ParenExpr 0x5592011f9a18 <col:38, col:40> 'int' lvalue
      |       |   `-DeclRefExpr 0x5592011f99f0 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
      |       `-IntegerLiteral 0x5592011f9a38 <line:62:44> 'int' 1
      `-IntegerLiteral 0x5592011f9b30 <col:51> 'int' 0
!([B5.1])
   T: if [B5.2]
   Preds (2): B6 B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x5592011f99a8 <lua_struct.c:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
a
   2: ImplicitCastExpr 0x5592011f9ab8 <lua_struct.c:62:31, col:33> 'int' <LValueToRValue>
`-ParenExpr 0x5592011f99d0 <col:31, col:33> 'int' lvalue
  `-DeclRefExpr 0x5592011f99a8 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
([B6.1]) (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5592011f99f0 <lua_struct.c:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
a
   4: ImplicitCastExpr 0x5592011f9a58 <lua_struct.c:62:38, col:40> 'int' <LValueToRValue>
`-ParenExpr 0x5592011f9a18 <col:38, col:40> 'int' lvalue
  `-DeclRefExpr 0x5592011f99f0 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
([B6.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5592011f9a38 <lua_struct.c:62:44> 'int' 1
1
   6: BinaryOperator 0x5592011f9a70 <lua_struct.c:62:38, col:44> 'int' '-'
|-ImplicitCastExpr 0x5592011f9a58 <col:38, col:40> 'int' <LValueToRValue>
| `-ParenExpr 0x5592011f9a18 <col:38, col:40> 'int' lvalue
|   `-DeclRefExpr 0x5592011f99f0 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
`-IntegerLiteral 0x5592011f9a38 <line:62:44> 'int' 1
[B6.4] - [B6.5]
   7: BinaryOperator 0x5592011f9ad0 <lua_struct.c:62:31, col:45> 'int' '&'
|-ImplicitCastExpr 0x5592011f9ab8 <col:31, col:33> 'int' <LValueToRValue>
| `-ParenExpr 0x5592011f99d0 <col:31, col:33> 'int' lvalue
|   `-DeclRefExpr 0x5592011f99a8 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
`-ParenExpr 0x5592011f9a98 <line:62:37, col:45> 'int'
  `-BinaryOperator 0x5592011f9a70 <col:38, col:44> 'int' '-'
    |-ImplicitCastExpr 0x5592011f9a58 <col:38, col:40> 'int' <LValueToRValue>
    | `-ParenExpr 0x5592011f9a18 <col:38, col:40> 'int' lvalue
    |   `-DeclRefExpr 0x5592011f99f0 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
    `-IntegerLiteral 0x5592011f9a38 <line:62:44> 'int' 1
[B6.2] & ([B6.6])
   8: IntegerLiteral 0x5592011f9b30 <lua_struct.c:62:51> 'int' 0
0
   9: BinaryOperator 0x5592011f9b50 <lua_struct.c:62:30, col:51> 'int' '=='
|-ParenExpr 0x5592011f9af8 <col:30, col:46> 'int'
| `-BinaryOperator 0x5592011f9ad0 <col:31, col:45> 'int' '&'
|   |-ImplicitCastExpr 0x5592011f9ab8 <col:31, col:33> 'int' <LValueToRValue>
|   | `-ParenExpr 0x5592011f99d0 <col:31, col:33> 'int' lvalue
|   |   `-DeclRefExpr 0x5592011f99a8 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
|   `-ParenExpr 0x5592011f9a98 <line:62:37, col:45> 'int'
|     `-BinaryOperator 0x5592011f9a70 <col:38, col:44> 'int' '-'
|       |-ImplicitCastExpr 0x5592011f9a58 <col:38, col:40> 'int' <LValueToRValue>
|       | `-ParenExpr 0x5592011f9a18 <col:38, col:40> 'int' lvalue
|       |   `-DeclRefExpr 0x5592011f99f0 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
|       `-IntegerLiteral 0x5592011f9a38 <line:62:44> 'int' 1
`-IntegerLiteral 0x5592011f9b30 <col:51> 'int' 0
([B6.7]) == [B6.8]
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: ConditionalOperator 0x5592011f97a8 <lua_struct.c:71:18, line:72:65> 'unsigned long'
|-BinaryOperator 0x5592011f9688 <line:71:18, line:72:41> 'int' '>'
| |-ParenExpr 0x5592011f9630 <line:71:18, col:53> 'unsigned long'
| | `-BinaryOperator 0x5592011f9608 <col:19, col:52> 'unsigned long' '-'
| |   |-UnaryExprOrTypeTraitExpr 0x5592011f95b0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
| |   `-UnaryExprOrTypeTraitExpr 0x5592011f95e8 <col:39, col:52> 'unsigned long' sizeof 'double'
| `-UnaryExprOrTypeTraitExpr 0x5592011f9668 <line:72:31, col:41> 'unsigned long' sizeof 'int'
|-ParenExpr 0x5592011f9750 <line:71:18, col:53> 'unsigned long'
| `-BinaryOperator 0x5592011f9728 <col:19, col:52> 'unsigned long' '-'
|   |-UnaryExprOrTypeTraitExpr 0x5592011f96d0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
|   `-UnaryExprOrTypeTraitExpr 0x5592011f9708 <col:39, col:52> 'unsigned long' sizeof 'double'
`-UnaryExprOrTypeTraitExpr 0x5592011f9788 <line:72:55, col:65> 'unsigned long' sizeof 'int'
[B10.11] ? ([B8.3]) : [B9.1]
   2: ImplicitCastExpr 0x5592011f9880 <lua_struct.c:72:20, col:66> 'int' <IntegralCast>
`-ParenExpr 0x5592011f97d8 <col:20, col:66> 'unsigned long'
  `-ConditionalOperator 0x5592011f97a8 <line:71:18, line:72:65> 'unsigned long'
    |-BinaryOperator 0x5592011f9688 <line:71:18, line:72:41> 'int' '>'
    | |-ParenExpr 0x5592011f9630 <line:71:18, col:53> 'unsigned long'
    | | `-BinaryOperator 0x5592011f9608 <col:19, col:52> 'unsigned long' '-'
    | |   |-UnaryExprOrTypeTraitExpr 0x5592011f95b0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
    | |   `-UnaryExprOrTypeTraitExpr 0x5592011f95e8 <col:39, col:52> 'unsigned long' sizeof 'double'
    | `-UnaryExprOrTypeTraitExpr 0x5592011f9668 <line:72:31, col:41> 'unsigned long' sizeof 'int'
    |-ParenExpr 0x5592011f9750 <line:71:18, col:53> 'unsigned long'
    | `-BinaryOperator 0x5592011f9728 <col:19, col:52> 'unsigned long' '-'
    |   |-UnaryExprOrTypeTraitExpr 0x5592011f96d0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
    |   `-UnaryExprOrTypeTraitExpr 0x5592011f9708 <col:39, col:52> 'unsigned long' sizeof 'double'
    `-UnaryExprOrTypeTraitExpr 0x5592011f9788 <line:72:55, col:65> 'unsigned long' sizeof 'int'
([B7.1]) (ImplicitCastExpr, IntegralCast, int)
   3: CallExpr 0x5592011f9810 <lua_struct.c:155:15, col:38> 'int'
|-ImplicitCastExpr 0x5592011f97f8 <col:15> 'int (*)(lua_State *, const char **, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5592011f94e0 <col:15> 'int (lua_State *, const char **, int)' Function 0x5592011f5538 'getnum' 'int (lua_State *, const char **, int)'
|-ImplicitCastExpr 0x5592011f9850 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5592011f9508 <col:22> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
|-ImplicitCastExpr 0x5592011f9868 <col:25> 'const char **' <LValueToRValue>
| `-DeclRefExpr 0x5592011f9530 <col:25> 'const char **' lvalue ParmVar 0x5592011f8e80 'fmt' 'const char **'
`-ImplicitCastExpr 0x5592011f9880 <line:72:20, col:66> 'int' <IntegralCast>
  `-ParenExpr 0x5592011f97d8 <col:20, col:66> 'unsigned long'
    `-ConditionalOperator 0x5592011f97a8 <line:71:18, line:72:65> 'unsigned long'
      |-BinaryOperator 0x5592011f9688 <line:71:18, line:72:41> 'int' '>'
      | |-ParenExpr 0x5592011f9630 <line:71:18, col:53> 'unsigned long'
      | | `-BinaryOperator 0x5592011f9608 <col:19, col:52> 'unsigned long' '-'
      | |   |-UnaryExprOrTypeTraitExpr 0x5592011f95b0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
      | |   `-UnaryExprOrTypeTraitExpr 0x5592011f95e8 <col:39, col:52> 'unsigned long' sizeof 'double'
      | `-UnaryExprOrTypeTraitExpr 0x5592011f9668 <line:72:31, col:41> 'unsigned long' sizeof 'int'
      |-ParenExpr 0x5592011f9750 <line:71:18, col:53> 'unsigned long'
      | `-BinaryOperator 0x5592011f9728 <col:19, col:52> 'unsigned long' '-'
      |   |-UnaryExprOrTypeTraitExpr 0x5592011f96d0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
      |   `-UnaryExprOrTypeTraitExpr 0x5592011f9708 <col:39, col:52> 'unsigned long' sizeof 'double'
      `-UnaryExprOrTypeTraitExpr 0x5592011f9788 <line:72:55, col:65> 'unsigned long' sizeof 'int'
[B10.2]([B10.4], [B10.6], [B7.2])
   4: DeclStmt 0x5592011f98e8 <lua_struct.c:155:7, col:39>col:11
`-VarDecl 0x5592011f9480 <col:7, col:38> col:11 used a 'int' cinit
  `-CallExpr 0x5592011f9810 <col:15, col:38> 'int'
    |-ImplicitCastExpr 0x5592011f97f8 <col:15> 'int (*)(lua_State *, const char **, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5592011f94e0 <col:15> 'int (lua_State *, const char **, int)' Function 0x5592011f5538 'getnum' 'int (lua_State *, const char **, int)'
    |-ImplicitCastExpr 0x5592011f9850 <col:22> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5592011f9508 <col:22> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
    |-ImplicitCastExpr 0x5592011f9868 <col:25> 'const char **' <LValueToRValue>
    | `-DeclRefExpr 0x5592011f9530 <col:25> 'const char **' lvalue ParmVar 0x5592011f8e80 'fmt' 'const char **'
    `-ImplicitCastExpr 0x5592011f9880 <line:72:20, col:66> 'int' <IntegralCast>
      `-ParenExpr 0x5592011f97d8 <col:20, col:66> 'unsigned long'
        `-ConditionalOperator 0x5592011f97a8 <line:71:18, line:72:65> 'unsigned long'
          |-BinaryOperator 0x5592011f9688 <line:71:18, line:72:41> 'int' '>'
          | |-ParenExpr 0x5592011f9630 <line:71:18, col:53> 'unsigned long'
          | | `-BinaryOperator 0x5592011f9608 <col:19, col:52> 'unsigned long' '-'
          | |   |-UnaryExprOrTypeTraitExpr 0x5592011f95b0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
          | |   `-UnaryExprOrTypeTraitExpr 0x5592011f95e8 <col:39, col:52> 'unsigned long' sizeof 'double'
          | `-UnaryExprOrTypeTraitExpr 0x5592011f9668 <line:72:31, col:41> 'unsigned long' sizeof 'int'
          |-ParenExpr 0x5592011f9750 <line:71:18, col:53> 'unsigned long'
          | `-BinaryOperator 0x5592011f9728 <col:19, col:52> 'unsigned long' '-'
          |   |-UnaryExprOrTypeTraitExpr 0x5592011f96d0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
          |   `-UnaryExprOrTypeTraitExpr 0x5592011f9708 <col:39, col:52> 'unsigned long' sizeof 'double'
          `-UnaryExprOrTypeTraitExpr 0x5592011f9788 <line:72:55, col:65> 'unsigned long' sizeof 'int'
int a = getnum(L, fmt, ((sizeof(struct cD) - sizeof(double)) > sizeof(int) ? (sizeof(struct cD) - sizeof(double)) : sizeof(int)));
   5: DeclRefExpr 0x5592011f9900 <lua_struct.c:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
a
   6: ImplicitCastExpr 0x5592011f9968 <lua_struct.c:62:19, col:21> 'int' <LValueToRValue>
`-ParenExpr 0x5592011f9928 <col:19, col:21> 'int' lvalue
  `-DeclRefExpr 0x5592011f9900 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
([B7.5]) (ImplicitCastExpr, LValueToRValue, int)
   7: IntegerLiteral 0x5592011f9948 <lua_struct.c:62:25> 'int' 0
0
   8: BinaryOperator 0x5592011f9980 <lua_struct.c:62:19, col:25> 'int' '>'
|-ImplicitCastExpr 0x5592011f9968 <col:19, col:21> 'int' <LValueToRValue>
| `-ParenExpr 0x5592011f9928 <col:19, col:21> 'int' lvalue
|   `-DeclRefExpr 0x5592011f9900 <line:156:17> 'int' lvalue Var 0x5592011f9480 'a' 'int'
`-IntegerLiteral 0x5592011f9948 <line:62:25> 'int' 0
[B7.6] > [B7.7]
   T: [B7.8] && ...
   Preds (2): B8 B9
   Succs (2): B6 B5

 [B8]
   1: UnaryExprOrTypeTraitExpr 0x5592011f96d0 <lua_struct.c:71:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
sizeof(struct cD)
   2: UnaryExprOrTypeTraitExpr 0x5592011f9708 <lua_struct.c:71:39, col:52> 'unsigned long' sizeof 'double'
sizeof(double)
   3: BinaryOperator 0x5592011f9728 <lua_struct.c:71:19, col:52> 'unsigned long' '-'
|-UnaryExprOrTypeTraitExpr 0x5592011f96d0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
`-UnaryExprOrTypeTraitExpr 0x5592011f9708 <col:39, col:52> 'unsigned long' sizeof 'double'
[B8.1] - [B8.2]
   Preds (1): B10
   Succs (1): B7

 [B9]
   1: UnaryExprOrTypeTraitExpr 0x5592011f9788 <lua_struct.c:72:55, col:65> 'unsigned long' sizeof 'int'
sizeof(int)
   Preds (1): B10(Unreachable)
   Succs (1): B7

 [B10]
  case '!':
   1: DeclRefExpr 0x5592011f94e0 <lua_struct.c:155:15> 'int (lua_State *, const char **, int)' Function 0x5592011f5538 'getnum' 'int (lua_State *, const char **, int)'
getnum
   2: ImplicitCastExpr 0x5592011f97f8 <lua_struct.c:155:15> 'int (*)(lua_State *, const char **, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5592011f94e0 <col:15> 'int (lua_State *, const char **, int)' Function 0x5592011f5538 'getnum' 'int (lua_State *, const char **, int)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char **, int))
   3: DeclRefExpr 0x5592011f9508 <lua_struct.c:155:22> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5592011f9850 <lua_struct.c:155:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5592011f9508 <col:22> 'lua_State *' lvalue ParmVar 0x5592011f8d90 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5592011f9530 <lua_struct.c:155:25> 'const char **' lvalue ParmVar 0x5592011f8e80 'fmt' 'const char **'
fmt
   6: ImplicitCastExpr 0x5592011f9868 <lua_struct.c:155:25> 'const char **' <LValueToRValue>
`-DeclRefExpr 0x5592011f9530 <col:25> 'const char **' lvalue ParmVar 0x5592011f8e80 'fmt' 'const char **'
[B10.5] (ImplicitCastExpr, LValueToRValue, const char **)
   7: UnaryExprOrTypeTraitExpr 0x5592011f95b0 <lua_struct.c:71:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
sizeof(struct cD)
   8: UnaryExprOrTypeTraitExpr 0x5592011f95e8 <lua_struct.c:71:39, col:52> 'unsigned long' sizeof 'double'
sizeof(double)
   9: BinaryOperator 0x5592011f9608 <lua_struct.c:71:19, col:52> 'unsigned long' '-'
|-UnaryExprOrTypeTraitExpr 0x5592011f95b0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
`-UnaryExprOrTypeTraitExpr 0x5592011f95e8 <col:39, col:52> 'unsigned long' sizeof 'double'
[B10.7] - [B10.8]
  10: UnaryExprOrTypeTraitExpr 0x5592011f9668 <lua_struct.c:72:31, col:41> 'unsigned long' sizeof 'int'
sizeof(int)
  11: BinaryOperator 0x5592011f9688 <lua_struct.c:71:18, line:72:41> 'int' '>'
|-ParenExpr 0x5592011f9630 <line:71:18, col:53> 'unsigned long'
| `-BinaryOperator 0x5592011f9608 <col:19, col:52> 'unsigned long' '-'
|   |-UnaryExprOrTypeTraitExpr 0x5592011f95b0 <col:19, col:35> 'unsigned long' sizeof 'struct cD':'struct cD'
|   `-UnaryExprOrTypeTraitExpr 0x5592011f95e8 <col:39, col:52> 'unsigned long' sizeof 'double'
`-UnaryExprOrTypeTraitExpr 0x5592011f9668 <line:72:31, col:41> 'unsigned long' sizeof 'int'
([B10.9]) > [B10.10]
   T: [B10.11] ? ... : ...
   Preds (1): B1
   Succs (2): B8 B9(Unreachable)

 [B11]
  case '<':
   1: IntegerLiteral 0x5592011f93b8 <lua_struct.c:77:16> 'int' 1
1
   2: DeclRefExpr 0x5592011f9340 <lua_struct.c:153:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
h
   3: ImplicitCastExpr 0x5592011f9368 <lua_struct.c:153:15> 'Header *' <LValueToRValue>
`-DeclRefExpr 0x5592011f9340 <col:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
[B11.2] (ImplicitCastExpr, LValueToRValue, Header *)
   4: MemberExpr 0x5592011f9380 <lua_struct.c:153:15, col:18> 'int' lvalue ->endian 0x5592011f5168
`-ImplicitCastExpr 0x5592011f9368 <col:15> 'Header *' <LValueToRValue>
  `-DeclRefExpr 0x5592011f9340 <col:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
[B11.3]->endian
   5: BinaryOperator 0x5592011f93d8 <lua_struct.c:153:15, line:77:16> 'int' '='
|-MemberExpr 0x5592011f9380 <line:153:15, col:18> 'int' lvalue ->endian 0x5592011f5168
| `-ImplicitCastExpr 0x5592011f9368 <col:15> 'Header *' <LValueToRValue>
|   `-DeclRefExpr 0x5592011f9340 <col:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
`-IntegerLiteral 0x5592011f93b8 <line:77:16> 'int' 1
[B11.4] = [B11.1]
   6: ReturnStmt 0x5592011f9400 <lua_struct.c:153:35>
return;
   Preds (1): B1
   Succs (1): B0

 [B12]
  case '>':
   1: IntegerLiteral 0x5592011f9290 <lua_struct.c:76:13> 'int' 0
0
   2: DeclRefExpr 0x5592011f9218 <lua_struct.c:152:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
h
   3: ImplicitCastExpr 0x5592011f9240 <lua_struct.c:152:15> 'Header *' <LValueToRValue>
`-DeclRefExpr 0x5592011f9218 <col:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
[B12.2] (ImplicitCastExpr, LValueToRValue, Header *)
   4: MemberExpr 0x5592011f9258 <lua_struct.c:152:15, col:18> 'int' lvalue ->endian 0x5592011f5168
`-ImplicitCastExpr 0x5592011f9240 <col:15> 'Header *' <LValueToRValue>
  `-DeclRefExpr 0x5592011f9218 <col:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
[B12.3]->endian
   5: BinaryOperator 0x5592011f92b0 <lua_struct.c:152:15, line:76:13> 'int' '='
|-MemberExpr 0x5592011f9258 <line:152:15, col:18> 'int' lvalue ->endian 0x5592011f5168
| `-ImplicitCastExpr 0x5592011f9240 <col:15> 'Header *' <LValueToRValue>
|   `-DeclRefExpr 0x5592011f9218 <col:15> 'Header *' lvalue ParmVar 0x5592011f8ef0 'h' 'Header *'
`-IntegerLiteral 0x5592011f9290 <line:76:13> 'int' 0
[B12.4] = [B12.1]
   6: ReturnStmt 0x5592011f92d8 <lua_struct.c:152:32>
return;
   Preds (1): B1
   Succs (1): B0

 [B13]
  case ' ':
   1: ReturnStmt 0x5592011f91b0 <lua_struct.c:151:16>
return;
   Preds (1): B1
   Succs (1): B0

 [B0 (EXIT)]
   Preds (5): B2 B3 B11 B12 B13
