sds sdsfromlonglong(long long value)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclStmt 0x55e83d10e8e8 <sds.c:497:5, col:29>col:10
`-VarDecl 0x55e83d10e888 <col:5, col:28> col:10 used buf 'char [21]'
char buf[21];
   2: DeclRefExpr 0x55e83d10e978 <sds.c:498:15> 'int (char *, long long)' Function 0x55e83d10c788 'sdsll2str' 'int (char *, long long)'
sdsll2str
   3: ImplicitCastExpr 0x55e83d10ea18 <sds.c:498:15> 'int (*)(char *, long long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d10e978 <col:15> 'int (char *, long long)' Function 0x55e83d10c788 'sdsll2str' 'int (char *, long long)'
[B1.2] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, long long))
   4: DeclRefExpr 0x55e83d10e9a0 <sds.c:498:25> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
buf
   5: ImplicitCastExpr 0x55e83d10ea68 <sds.c:498:25> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x55e83d10e9a0 <col:25> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
[B1.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: DeclRefExpr 0x55e83d10e9c8 <sds.c:498:29> 'long long' lvalue ParmVar 0x55e83d10e6e0 'value' 'long long'
value
   7: ImplicitCastExpr 0x55e83d10ea80 <sds.c:498:29> 'long long' <LValueToRValue>
`-DeclRefExpr 0x55e83d10e9c8 <col:29> 'long long' lvalue ParmVar 0x55e83d10e6e0 'value' 'long long'
[B1.6] (ImplicitCastExpr, LValueToRValue, long long)
   8: CallExpr 0x55e83d10ea30 <sds.c:498:15, col:34> 'int'
|-ImplicitCastExpr 0x55e83d10ea18 <col:15> 'int (*)(char *, long long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d10e978 <col:15> 'int (char *, long long)' Function 0x55e83d10c788 'sdsll2str' 'int (char *, long long)'
|-ImplicitCastExpr 0x55e83d10ea68 <col:25> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x55e83d10e9a0 <col:25> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
`-ImplicitCastExpr 0x55e83d10ea80 <col:29> 'long long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10e9c8 <col:29> 'long long' lvalue ParmVar 0x55e83d10e6e0 'value' 'long long'
[B1.3]([B1.5], [B1.7])
   9: DeclStmt 0x55e83d10ea98 <sds.c:498:5, col:35>col:9
`-VarDecl 0x55e83d10e918 <col:5, col:34> col:9 used len 'int' cinit
  `-CallExpr 0x55e83d10ea30 <col:15, col:34> 'int'
    |-ImplicitCastExpr 0x55e83d10ea18 <col:15> 'int (*)(char *, long long)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d10e978 <col:15> 'int (char *, long long)' Function 0x55e83d10c788 'sdsll2str' 'int (char *, long long)'
    |-ImplicitCastExpr 0x55e83d10ea68 <col:25> 'char *' <ArrayToPointerDecay>
    | `-DeclRefExpr 0x55e83d10e9a0 <col:25> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
    `-ImplicitCastExpr 0x55e83d10ea80 <col:29> 'long long' <LValueToRValue>
      `-DeclRefExpr 0x55e83d10e9c8 <col:29> 'long long' lvalue ParmVar 0x55e83d10e6e0 'value' 'long long'
int len = sdsll2str(buf, value);
  10: DeclRefExpr 0x55e83d10eab0 <sds.c:500:12> 'sds (const void *, size_t)' Function 0x55e83d0f2ed8 'sdsnewlen' 'sds (const void *, size_t)'
sdsnewlen
  11: ImplicitCastExpr 0x55e83d10eb28 <sds.c:500:12> 'sds (*)(const void *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d10eab0 <col:12> 'sds (const void *, size_t)' Function 0x55e83d0f2ed8 'sdsnewlen' 'sds (const void *, size_t)'
[B1.10] (ImplicitCastExpr, FunctionToPointerDecay, sds (*)(const void *, size_t))
  12: DeclRefExpr 0x55e83d10ead8 <sds.c:500:22> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
buf
  13: ImplicitCastExpr 0x55e83d10eb78 <sds.c:500:22> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x55e83d10ead8 <col:22> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
[B1.12] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  14: ImplicitCastExpr 0x55e83d10eb90 <sds.c:500:22> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55e83d10eb78 <col:22> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x55e83d10ead8 <col:22> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
[B1.13] (ImplicitCastExpr, BitCast, const void *)
  15: DeclRefExpr 0x55e83d10eb00 <sds.c:500:26> 'int' lvalue Var 0x55e83d10e918 'len' 'int'
len
  16: ImplicitCastExpr 0x55e83d10eba8 <sds.c:500:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d10eb00 <col:26> 'int' lvalue Var 0x55e83d10e918 'len' 'int'
[B1.15] (ImplicitCastExpr, LValueToRValue, int)
  17: ImplicitCastExpr 0x55e83d10ebc0 <sds.c:500:26> 'size_t':'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d10eba8 <col:26> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d10eb00 <col:26> 'int' lvalue Var 0x55e83d10e918 'len' 'int'
[B1.16] (ImplicitCastExpr, IntegralCast, size_t)
  18: CallExpr 0x55e83d10eb40 <sds.c:500:12, col:29> 'sds':'char *'
|-ImplicitCastExpr 0x55e83d10eb28 <col:12> 'sds (*)(const void *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d10eab0 <col:12> 'sds (const void *, size_t)' Function 0x55e83d0f2ed8 'sdsnewlen' 'sds (const void *, size_t)'
|-ImplicitCastExpr 0x55e83d10eb90 <col:22> 'const void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d10eb78 <col:22> 'char *' <ArrayToPointerDecay>
|   `-DeclRefExpr 0x55e83d10ead8 <col:22> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
`-ImplicitCastExpr 0x55e83d10ebc0 <col:26> 'size_t':'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d10eba8 <col:26> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d10eb00 <col:26> 'int' lvalue Var 0x55e83d10e918 'len' 'int'
[B1.11]([B1.14], [B1.17])
  19: ReturnStmt 0x55e83d10ebd8 <sds.c:500:5, col:29>
`-CallExpr 0x55e83d10eb40 <col:12, col:29> 'sds':'char *'
  |-ImplicitCastExpr 0x55e83d10eb28 <col:12> 'sds (*)(const void *, size_t)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55e83d10eab0 <col:12> 'sds (const void *, size_t)' Function 0x55e83d0f2ed8 'sdsnewlen' 'sds (const void *, size_t)'
  |-ImplicitCastExpr 0x55e83d10eb90 <col:22> 'const void *' <BitCast>
  | `-ImplicitCastExpr 0x55e83d10eb78 <col:22> 'char *' <ArrayToPointerDecay>
  |   `-DeclRefExpr 0x55e83d10ead8 <col:22> 'char [21]' lvalue Var 0x55e83d10e888 'buf' 'char [21]'
  `-ImplicitCastExpr 0x55e83d10ebc0 <col:26> 'size_t':'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d10eba8 <col:26> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d10eb00 <col:26> 'int' lvalue Var 0x55e83d10e918 'len' 'int'
return [B1.18];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
