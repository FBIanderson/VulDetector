static inline char sdsReqType(size_t string_size)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: IntegerLiteral 0x55e83d0f2d38 <./sds.h:82:21> 'int' 4
4
   2: ImplicitCastExpr 0x55e83d0f2d58 <./sds.h:82:21> 'char' <IntegralCast>
`-IntegerLiteral 0x55e83d0f2d38 <col:21> 'int' 4
[B1.1] (ImplicitCastExpr, IntegralCast, char)
   3: ReturnStmt 0x55e83d0f2d70 <sds.c:66:5, ./sds.h:82:21>
`-ImplicitCastExpr 0x55e83d0f2d58 <col:21> 'char' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f2d38 <col:21> 'int' 4
return [B1.2];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x55e83d0f2410 <./sds.h:81:21> 'int' 3
3
   2: ImplicitCastExpr 0x55e83d0f2430 <./sds.h:81:21> 'char' <IntegralCast>
`-IntegerLiteral 0x55e83d0f2410 <col:21> 'int' 3
[B2.1] (ImplicitCastExpr, IntegralCast, char)
   3: ReturnStmt 0x55e83d0f2448 <sds.c:65:9, ./sds.h:81:21>
`-ImplicitCastExpr 0x55e83d0f2430 <col:21> 'char' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f2410 <col:21> 'int' 3
return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x55e83d0f2370 <sds.c:64:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
string_size
   2: ImplicitCastExpr 0x55e83d0f23b8 <sds.c:64:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0f2370 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
[B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: IntegerLiteral 0x55e83d0f2398 <sds.c:64:23> 'unsigned int' 4294967295
4294967295U
   4: ImplicitCastExpr 0x55e83d0f23d0 <sds.c:64:23> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0f2398 <col:23> 'unsigned int' 4294967295
[B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: BinaryOperator 0x55e83d0f23e8 <sds.c:64:9, col:23> 'int' '<'
|-ImplicitCastExpr 0x55e83d0f23b8 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0f2370 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0f23d0 <col:23> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f2398 <col:23> 'unsigned int' 4294967295
[B3.2] < [B3.4]
   T: if [B3.5]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: IntegerLiteral 0x55e83d0f22e8 <./sds.h:80:21> 'int' 2
2
   2: ImplicitCastExpr 0x55e83d0f2308 <./sds.h:80:21> 'char' <IntegralCast>
`-IntegerLiteral 0x55e83d0f22e8 <col:21> 'int' 2
[B4.1] (ImplicitCastExpr, IntegralCast, char)
   3: ReturnStmt 0x55e83d0f2320 <sds.c:63:9, ./sds.h:80:21>
`-ImplicitCastExpr 0x55e83d0f2308 <col:21> 'char' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f22e8 <col:21> 'int' 2
return [B4.2];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x55e83d0f2248 <sds.c:62:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
string_size
   2: ImplicitCastExpr 0x55e83d0f2290 <sds.c:62:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0f2248 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
[B5.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: IntegerLiteral 0x55e83d0f2270 <sds.c:62:23> 'int' 65535
65535
   4: ImplicitCastExpr 0x55e83d0f22a8 <sds.c:62:23> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0f2270 <col:23> 'int' 65535
[B5.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: BinaryOperator 0x55e83d0f22c0 <sds.c:62:9, col:23> 'int' '<'
|-ImplicitCastExpr 0x55e83d0f2290 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0f2248 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0f22a8 <col:23> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f2270 <col:23> 'int' 65535
[B5.2] < [B5.4]
   T: if [B5.5]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: IntegerLiteral 0x55e83d0f21c0 <./sds.h:79:21> 'int' 1
1
   2: ImplicitCastExpr 0x55e83d0f21e0 <./sds.h:79:21> 'char' <IntegralCast>
`-IntegerLiteral 0x55e83d0f21c0 <col:21> 'int' 1
[B6.1] (ImplicitCastExpr, IntegralCast, char)
   3: ReturnStmt 0x55e83d0f21f8 <sds.c:61:9, ./sds.h:79:21>
`-ImplicitCastExpr 0x55e83d0f21e0 <col:21> 'char' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f21c0 <col:21> 'int' 1
return [B6.2];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x55e83d0f2120 <sds.c:60:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
string_size
   2: ImplicitCastExpr 0x55e83d0f2168 <sds.c:60:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0f2120 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
[B7.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: IntegerLiteral 0x55e83d0f2148 <sds.c:60:23> 'int' 255
255
   4: ImplicitCastExpr 0x55e83d0f2180 <sds.c:60:23> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0f2148 <col:23> 'int' 255
[B7.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: BinaryOperator 0x55e83d0f2198 <sds.c:60:9, col:23> 'int' '<'
|-ImplicitCastExpr 0x55e83d0f2168 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0f2120 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0f2180 <col:23> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f2148 <col:23> 'int' 255
[B7.2] < [B7.4]
   T: if [B7.5]
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: IntegerLiteral 0x55e83d0f2098 <./sds.h:78:21> 'int' 0
0
   2: ImplicitCastExpr 0x55e83d0f20b8 <./sds.h:78:21> 'char' <IntegralCast>
`-IntegerLiteral 0x55e83d0f2098 <col:21> 'int' 0
[B8.1] (ImplicitCastExpr, IntegralCast, char)
   3: ReturnStmt 0x55e83d0f20d0 <sds.c:59:9, ./sds.h:78:21>
`-ImplicitCastExpr 0x55e83d0f20b8 <col:21> 'char' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f2098 <col:21> 'int' 0
return [B8.2];
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x55e83d0f1ff8 <sds.c:58:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
string_size
   2: ImplicitCastExpr 0x55e83d0f2040 <sds.c:58:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d0f1ff8 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
[B9.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: IntegerLiteral 0x55e83d0f2020 <sds.c:58:23> 'int' 32
32
   4: ImplicitCastExpr 0x55e83d0f2058 <sds.c:58:23> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d0f2020 <col:23> 'int' 32
[B9.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: BinaryOperator 0x55e83d0f2070 <sds.c:58:9, col:23> 'int' '<'
|-ImplicitCastExpr 0x55e83d0f2040 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d0f1ff8 <col:9> 'size_t':'unsigned long' lvalue ParmVar 0x55e83d0f1e50 'string_size' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d0f2058 <col:23> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d0f2020 <col:23> 'int' 32
[B9.2] < [B9.4]
   T: if [B9.5]
   Preds (1): B10
   Succs (2): B8 B7

 [B0 (EXIT)]
   Preds (5): B1 B2 B4 B6 B8
