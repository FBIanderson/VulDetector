int luaV_lessthan(lua_State *L, const TValue *l, const TValue *r)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: DeclRefExpr 0x5590eceec740 <lvm.c:235:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
luaG_ordererror
   2: ImplicitCastExpr 0x5590eceec7e0 <lvm.c:235:10> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceec740 <col:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *))
   3: DeclRefExpr 0x5590eceec768 <lvm.c:235:26> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceec838 <lvm.c:235:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceec768 <col:26> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceec790 <lvm.c:235:29> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   6: ImplicitCastExpr 0x5590eceec850 <lvm.c:235:29> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceec790 <col:29> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B1.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590eceec7b8 <lvm.c:235:32> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
r
   8: ImplicitCastExpr 0x5590eceec868 <lvm.c:235:32> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceec7b8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B1.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: CallExpr 0x5590eceec7f8 <lvm.c:235:10, col:33> 'int'
|-ImplicitCastExpr 0x5590eceec7e0 <col:10> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceec740 <col:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590eceec838 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceec768 <col:26> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590eceec850 <col:29> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceec790 <col:29> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceec868 <col:32> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceec7b8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B1.2]([B1.4], [B1.6], [B1.8])
  10: ReturnStmt 0x5590eceec880 <lvm.c:235:3, col:33>
`-CallExpr 0x5590eceec7f8 <col:10, col:33> 'int'
  |-ImplicitCastExpr 0x5590eceec7e0 <col:10> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceec740 <col:10> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
  |-ImplicitCastExpr 0x5590eceec838 <col:26> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceec768 <col:26> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590eceec850 <col:29> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceec790 <col:29> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceec868 <col:32> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceec7b8 <col:32> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5590eceec608 <lvm.c:234:12> 'int' lvalue Var 0x5590eceeb608 'res' 'int'
res
   2: ImplicitCastExpr 0x5590eceec630 <lvm.c:234:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590eceec608 <col:12> 'int' lvalue Var 0x5590eceeb608 'res' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x5590eceec648 <lvm.c:234:5, col:12>
`-ImplicitCastExpr 0x5590eceec630 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5590eceec608 <col:12> 'int' lvalue Var 0x5590eceeb608 'res' 'int'
return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x5590eceec370 <lvm.c:233:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
call_orderTM
   2: ImplicitCastExpr 0x5590eceec498 <lvm.c:233:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceec370 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *, TMS))
   3: DeclRefExpr 0x5590eceec398 <lvm.c:233:32> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceec4f8 <lvm.c:233:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceec398 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceec3c0 <lvm.c:233:35> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   6: ImplicitCastExpr 0x5590eceec510 <lvm.c:233:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceec3c0 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B3.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590eceec3e8 <lvm.c:233:38> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
r
   8: ImplicitCastExpr 0x5590eceec528 <lvm.c:233:38> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceec3e8 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B3.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: DeclRefExpr 0x5590eceec410 <lvm.c:233:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
TM_LT
  10: ImplicitCastExpr 0x5590eceec540 <lvm.c:233:41> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590eceec410 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
[B3.9] (ImplicitCastExpr, IntegralCast, TMS)
  11: CallExpr 0x5590eceec4b0 <lvm.c:233:19, col:46> 'int'
|-ImplicitCastExpr 0x5590eceec498 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceec370 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
|-ImplicitCastExpr 0x5590eceec4f8 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceec398 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590eceec510 <col:35> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceec3c0 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
|-ImplicitCastExpr 0x5590eceec528 <col:38> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceec3e8 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
`-ImplicitCastExpr 0x5590eceec540 <col:41> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x5590eceec410 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
[B3.2]([B3.4], [B3.6], [B3.8], [B3.10])
  12: DeclRefExpr 0x5590eceec348 <lvm.c:233:13> 'int' lvalue Var 0x5590eceeb608 'res' 'int'
res
  13: BinaryOperator 0x5590eceec558 <lvm.c:233:13, col:46> 'int' '='
|-DeclRefExpr 0x5590eceec348 <col:13> 'int' lvalue Var 0x5590eceeb608 'res' 'int'
`-CallExpr 0x5590eceec4b0 <col:19, col:46> 'int'
  |-ImplicitCastExpr 0x5590eceec498 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceec370 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
  |-ImplicitCastExpr 0x5590eceec4f8 <col:32> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceec398 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590eceec510 <col:35> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceec3c0 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
  |-ImplicitCastExpr 0x5590eceec528 <col:38> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceec3e8 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceec540 <col:41> 'TMS':'TMS' <IntegralCast>
    `-DeclRefExpr 0x5590eceec410 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
[B3.12] = [B3.11]
  14: IntegerLiteral 0x5590eceec5a0 <lvm.c:233:53> 'int' 1
1
  15: UnaryOperator 0x5590eceec5c0 <lvm.c:233:52, col:53> 'int' prefix '-'
`-IntegerLiteral 0x5590eceec5a0 <col:53> 'int' 1
-[B3.14]
  16: BinaryOperator 0x5590eceec5e0 <lvm.c:233:12, col:53> 'int' '!='
|-ParenExpr 0x5590eceec580 <col:12, col:47> 'int'
| `-BinaryOperator 0x5590eceec558 <col:13, col:46> 'int' '='
|   |-DeclRefExpr 0x5590eceec348 <col:13> 'int' lvalue Var 0x5590eceeb608 'res' 'int'
|   `-CallExpr 0x5590eceec4b0 <col:19, col:46> 'int'
|     |-ImplicitCastExpr 0x5590eceec498 <col:19> 'int (*)(lua_State *, const TValue *, const TValue *, TMS)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5590eceec370 <col:19> 'int (lua_State *, const TValue *, const TValue *, TMS)' Function 0x5590ecee6ee8 'call_orderTM' 'int (lua_State *, const TValue *, const TValue *, TMS)'
|     |-ImplicitCastExpr 0x5590eceec4f8 <col:32> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceec398 <col:32> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
|     |-ImplicitCastExpr 0x5590eceec510 <col:35> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceec3c0 <col:35> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
|     |-ImplicitCastExpr 0x5590eceec528 <col:38> 'const TValue *' <LValueToRValue>
|     | `-DeclRefExpr 0x5590eceec3e8 <col:38> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
|     `-ImplicitCastExpr 0x5590eceec540 <col:41> 'TMS':'TMS' <IntegralCast>
|       `-DeclRefExpr 0x5590eceec410 <col:41> 'int' EnumConstant 0x5590ece946e8 'TM_LT' 'int'
`-UnaryOperator 0x5590eceec5c0 <col:52, col:53> 'int' prefix '-'
  `-IntegerLiteral 0x5590eceec5a0 <col:53> 'int' 1
([B3.13]) != [B3.15]
   T: if [B3.16]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x5590eceebf20 <lvm.c:232:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
l_strcmp
   2: ImplicitCastExpr 0x5590eceec268 <lvm.c:232:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceebf20 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const TString *, const TString *))
   3: DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   4: ImplicitCastExpr 0x5590eceebf90 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   5: MemberExpr 0x5590eceebfa8 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B4.4]->value
   6: MemberExpr 0x5590eceebfe0 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B4.5].gc
   7: ImplicitCastExpr 0x5590eceec018 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceebfe0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B4.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x5590eceec030 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590eceec018 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceebfe0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B4.7]->ts
   9: UnaryOperator 0x5590eceec068 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590eceec030 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590eceec018 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceebfe0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
&[B4.8]
  10: ImplicitCastExpr 0x5590eceec2b8 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
`-ParenExpr 0x5590eceec088 <col:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590eceec068 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590eceec030 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590eceec018 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceebfe0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B4.9]) (ImplicitCastExpr, BitCast, const TString *)
  11: DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
r
  12: ImplicitCastExpr 0x5590eceec0f0 <./lobject.h:94:49, col:51> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
([B4.11]) (ImplicitCastExpr, LValueToRValue, const TValue *)
  13: MemberExpr 0x5590eceec108 <./lobject.h:94:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B4.12]->value
  14: MemberExpr 0x5590eceec140 <./lobject.h:94:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B4.13].gc
  15: ImplicitCastExpr 0x5590eceec178 <./lobject.h:94:49, col:60> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590eceec140 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B4.14] (ImplicitCastExpr, LValueToRValue, GCObject *)
  16: MemberExpr 0x5590eceec190 <./lobject.h:94:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
`-ImplicitCastExpr 0x5590eceec178 <col:49, col:60> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590eceec140 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B4.15]->ts
  17: UnaryOperator 0x5590eceec1c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
`-MemberExpr 0x5590eceec190 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  `-ImplicitCastExpr 0x5590eceec178 <col:49, col:60> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590eceec140 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
&[B4.16]
  18: ImplicitCastExpr 0x5590eceec2d0 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
`-ParenExpr 0x5590eceec1e8 <col:25, col:27> 'union TString *'
  `-UnaryOperator 0x5590eceec1c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
    `-MemberExpr 0x5590eceec190 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
      `-ImplicitCastExpr 0x5590eceec178 <col:49, col:60> 'GCObject *' <LValueToRValue>
        `-MemberExpr 0x5590eceec140 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
              `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
                `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
([B4.17]) (ImplicitCastExpr, BitCast, const TString *)
  19: CallExpr 0x5590eceec280 <lvm.c:232:12, col:49> 'int'
|-ImplicitCastExpr 0x5590eceec268 <col:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceebf20 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
|-ImplicitCastExpr 0x5590eceec2b8 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
| `-ParenExpr 0x5590eceec088 <col:25, col:27> 'union TString *'
|   `-UnaryOperator 0x5590eceec068 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|     `-MemberExpr 0x5590eceec030 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
|       `-ImplicitCastExpr 0x5590eceec018 <col:49, col:60> 'GCObject *' <LValueToRValue>
|         `-MemberExpr 0x5590eceebfe0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|           `-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|             `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
|               `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
|                 `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceec2d0 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
  `-ParenExpr 0x5590eceec1e8 <col:25, col:27> 'union TString *'
    `-UnaryOperator 0x5590eceec1c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
      `-MemberExpr 0x5590eceec190 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
        `-ImplicitCastExpr 0x5590eceec178 <col:49, col:60> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590eceec140 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B4.2]([B4.10], [B4.18])
  20: IntegerLiteral 0x5590eceec2e8 <lvm.c:232:53> 'int' 0
0
  21: BinaryOperator 0x5590eceec308 <lvm.c:232:12, col:53> 'int' '<'
|-CallExpr 0x5590eceec280 <col:12, col:49> 'int'
| |-ImplicitCastExpr 0x5590eceec268 <col:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x5590eceebf20 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
| |-ImplicitCastExpr 0x5590eceec2b8 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
| | `-ParenExpr 0x5590eceec088 <col:25, col:27> 'union TString *'
| |   `-UnaryOperator 0x5590eceec068 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
| |     `-MemberExpr 0x5590eceec030 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
| |       `-ImplicitCastExpr 0x5590eceec018 <col:49, col:60> 'GCObject *' <LValueToRValue>
| |         `-MemberExpr 0x5590eceebfe0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
| |           `-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
| |             `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
| |               `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
| |                 `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
| `-ImplicitCastExpr 0x5590eceec2d0 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
|   `-ParenExpr 0x5590eceec1e8 <col:25, col:27> 'union TString *'
|     `-UnaryOperator 0x5590eceec1c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
|       `-MemberExpr 0x5590eceec190 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
|         `-ImplicitCastExpr 0x5590eceec178 <col:49, col:60> 'GCObject *' <LValueToRValue>
|           `-MemberExpr 0x5590eceec140 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
|             `-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|               `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
|                 `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
|                   `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
`-IntegerLiteral 0x5590eceec2e8 <col:53> 'int' 0
[B4.19] < [B4.20]
  22: ReturnStmt 0x5590eceec330 <lvm.c:232:5, col:53>
`-BinaryOperator 0x5590eceec308 <col:12, col:53> 'int' '<'
  |-CallExpr 0x5590eceec280 <col:12, col:49> 'int'
  | |-ImplicitCastExpr 0x5590eceec268 <col:12> 'int (*)(const TString *, const TString *)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x5590eceebf20 <col:12> 'int (const TString *, const TString *)' Function 0x5590eceea108 'l_strcmp' 'int (const TString *, const TString *)'
  | |-ImplicitCastExpr 0x5590eceec2b8 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
  | | `-ParenExpr 0x5590eceec088 <col:25, col:27> 'union TString *'
  | |   `-UnaryOperator 0x5590eceec068 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
  | |     `-MemberExpr 0x5590eceec030 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  | |       `-ImplicitCastExpr 0x5590eceec018 <col:49, col:60> 'GCObject *' <LValueToRValue>
  | |         `-MemberExpr 0x5590eceebfe0 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  | |           `-MemberExpr 0x5590eceebfa8 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  | |             `-ImplicitCastExpr 0x5590eceebf90 <col:49, col:51> 'const TValue *' <LValueToRValue>
  | |               `-ParenExpr 0x5590eceebf70 <col:49, col:51> 'const TValue *' lvalue
  | |                 `-DeclRefExpr 0x5590eceebf48 <lvm.c:232:32> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
  | `-ImplicitCastExpr 0x5590eceec2d0 <./llimits.h:63:25, col:27> 'const TString *' <BitCast>
  |   `-ParenExpr 0x5590eceec1e8 <col:25, col:27> 'union TString *'
  |     `-UnaryOperator 0x5590eceec1c8 <./lobject.h:94:48, col:64> 'union TString *' prefix '&'
  |       `-MemberExpr 0x5590eceec190 <col:49, col:64> 'union TString':'union TString' lvalue ->ts 0x5590ecea3768
  |         `-ImplicitCastExpr 0x5590eceec178 <col:49, col:60> 'GCObject *' <LValueToRValue>
  |           `-MemberExpr 0x5590eceec140 <col:49, col:60> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  |             `-MemberExpr 0x5590eceec108 <col:49, col:54> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  |               `-ImplicitCastExpr 0x5590eceec0f0 <col:49, col:51> 'const TValue *' <LValueToRValue>
  |                 `-ParenExpr 0x5590eceec0d0 <col:49, col:51> 'const TValue *' lvalue
  |                   `-DeclRefExpr 0x5590eceec0a8 <lvm.c:232:47> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
  `-IntegerLiteral 0x5590eceec2e8 <col:53> 'int' 0
return [B4.21];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x5590eceebde8 <lvm.c:231:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   2: ImplicitCastExpr 0x5590eceebe30 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceebe10 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceebde8 <lvm.c:231:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceebe48 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceebe30 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceebe10 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceebde8 <lvm.c:231:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B5.2]->tt
   4: ImplicitCastExpr 0x5590eceebec0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceebe80 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceebe48 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceebe30 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceebe10 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceebde8 <lvm.c:231:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B5.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5590eceebea0 <./lua.h:78:22> 'int' 4
4
   6: BinaryOperator 0x5590eceebed8 <./lobject.h:90:18, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x5590eceebec0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590eceebe80 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590eceebe48 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590eceebe30 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590eceebe10 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590eceebde8 <lvm.c:231:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
`-IntegerLiteral 0x5590eceebea0 <./lua.h:78:22> 'int' 4
[B5.4] == [B5.5]
   T: if ([B5.6])
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x5590eceebb38 <lvm.c:230:30> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   2: ImplicitCastExpr 0x5590eceebb80 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceebb60 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceebb38 <lvm.c:230:30> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceebb98 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceebb80 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceebb60 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceebb38 <lvm.c:230:30> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B6.2]->value
   4: MemberExpr 0x5590eceebbd0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590eceebb98 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceebb80 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceebb60 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceebb38 <lvm.c:230:30> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B6.3].n
   5: ImplicitCastExpr 0x5590eceebd58 <./luaconf.h:541:27, col:29> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590eceebc28 <col:27, col:29> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5590eceebc08 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x5590eceebbd0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
      `-MemberExpr 0x5590eceebb98 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceebb80 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceebb60 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceebb38 <lvm.c:230:30> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
(([B6.4])) (ImplicitCastExpr, LValueToRValue, lua_Number)
   6: DeclRefExpr 0x5590eceebc48 <lvm.c:230:41> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
r
   7: ImplicitCastExpr 0x5590eceebc90 <./lobject.h:93:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceebc70 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceebc48 <lvm.c:230:41> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
([B6.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590eceebca8 <./lobject.h:93:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590eceebc90 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceebc70 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceebc48 <lvm.c:230:41> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B6.7]->value
   9: MemberExpr 0x5590eceebce0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
`-MemberExpr 0x5590eceebca8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590eceebc90 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590eceebc70 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590eceebc48 <lvm.c:230:41> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B6.8].n
  10: ImplicitCastExpr 0x5590eceebd70 <./luaconf.h:541:31, col:33> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x5590eceebd38 <col:31, col:33> 'const lua_Number':'const double' lvalue
  `-ParenExpr 0x5590eceebd18 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    `-MemberExpr 0x5590eceebce0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
      `-MemberExpr 0x5590eceebca8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590eceebc90 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590eceebc70 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590eceebc48 <lvm.c:230:41> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
(([B6.9])) (ImplicitCastExpr, LValueToRValue, lua_Number)
  11: BinaryOperator 0x5590eceebd88 <./luaconf.h:541:27, col:33> 'int' '<'
|-ImplicitCastExpr 0x5590eceebd58 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
| `-ParenExpr 0x5590eceebc28 <col:27, col:29> 'const lua_Number':'const double' lvalue
|   `-ParenExpr 0x5590eceebc08 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
|     `-MemberExpr 0x5590eceebbd0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
|       `-MemberExpr 0x5590eceebb98 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
|         `-ImplicitCastExpr 0x5590eceebb80 <col:44, col:46> 'const TValue *' <LValueToRValue>
|           `-ParenExpr 0x5590eceebb60 <col:44, col:46> 'const TValue *' lvalue
|             `-DeclRefExpr 0x5590eceebb38 <lvm.c:230:30> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceebd70 <./luaconf.h:541:31, col:33> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x5590eceebd38 <col:31, col:33> 'const lua_Number':'const double' lvalue
    `-ParenExpr 0x5590eceebd18 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
      `-MemberExpr 0x5590eceebce0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
        `-MemberExpr 0x5590eceebca8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590eceebc90 <col:44, col:46> 'const TValue *' <LValueToRValue>
            `-ParenExpr 0x5590eceebc70 <col:44, col:46> 'const TValue *' lvalue
              `-DeclRefExpr 0x5590eceebc48 <lvm.c:230:41> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B6.5] < [B6.10]
  12: ReturnStmt 0x5590eceebdd0 <lvm.c:230:5, ./luaconf.h:541:34>
`-ParenExpr 0x5590eceebdb0 <col:26, col:34> 'int'
  `-BinaryOperator 0x5590eceebd88 <col:27, col:33> 'int' '<'
    |-ImplicitCastExpr 0x5590eceebd58 <col:27, col:29> 'lua_Number':'double' <LValueToRValue>
    | `-ParenExpr 0x5590eceebc28 <col:27, col:29> 'const lua_Number':'const double' lvalue
    |   `-ParenExpr 0x5590eceebc08 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
    |     `-MemberExpr 0x5590eceebbd0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
    |       `-MemberExpr 0x5590eceebb98 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    |         `-ImplicitCastExpr 0x5590eceebb80 <col:44, col:46> 'const TValue *' <LValueToRValue>
    |           `-ParenExpr 0x5590eceebb60 <col:44, col:46> 'const TValue *' lvalue
    |             `-DeclRefExpr 0x5590eceebb38 <lvm.c:230:30> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
    `-ImplicitCastExpr 0x5590eceebd70 <./luaconf.h:541:31, col:33> 'lua_Number':'double' <LValueToRValue>
      `-ParenExpr 0x5590eceebd38 <col:31, col:33> 'const lua_Number':'const double' lvalue
        `-ParenExpr 0x5590eceebd18 <./llimits.h:63:25, col:27> 'const lua_Number':'const double' lvalue
          `-MemberExpr 0x5590eceebce0 <./lobject.h:93:44, col:55> 'const lua_Number':'const double' lvalue .n 0x5590ece76b58
            `-MemberExpr 0x5590eceebca8 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590eceebc90 <col:44, col:46> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590eceebc70 <col:44, col:46> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590eceebc48 <lvm.c:230:41> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
return ([B6.11]);
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x5590eceeba00 <lvm.c:229:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   2: ImplicitCastExpr 0x5590eceeba48 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceeba28 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceeba00 <lvm.c:229:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590eceeba60 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceeba48 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceeba28 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceeba00 <lvm.c:229:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B7.2]->tt
   4: ImplicitCastExpr 0x5590eceebad8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceeba98 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceeba60 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceeba48 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceeba28 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceeba00 <lvm.c:229:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B7.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5590eceebab8 <./lua.h:77:22> 'int' 3
3
   6: BinaryOperator 0x5590eceebaf0 <./lobject.h:90:18, ./lua.h:77:22> 'int' '=='
|-ImplicitCastExpr 0x5590eceebad8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590eceeba98 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590eceeba60 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590eceeba48 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590eceeba28 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590eceeba00 <lvm.c:229:23> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
`-IntegerLiteral 0x5590eceebab8 <./lua.h:77:22> 'int' 3
[B7.4] == [B7.5]
   T: if ([B7.6])
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x5590eceeb848 <lvm.c:228:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
luaG_ordererror
   2: ImplicitCastExpr 0x5590eceeb948 <lvm.c:228:12> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590eceeb848 <col:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const TValue *, const TValue *))
   3: DeclRefExpr 0x5590eceeb870 <lvm.c:228:28> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590eceeb9a0 <lvm.c:228:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590eceeb870 <col:28> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590eceeb898 <lvm.c:228:31> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   6: ImplicitCastExpr 0x5590eceeb9b8 <lvm.c:228:31> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceeb898 <col:31> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B8.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590eceeb8c0 <lvm.c:228:34> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
r
   8: ImplicitCastExpr 0x5590eceeb9d0 <lvm.c:228:34> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590eceeb8c0 <col:34> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B8.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: CallExpr 0x5590eceeb960 <lvm.c:228:12, col:35> 'int'
|-ImplicitCastExpr 0x5590eceeb948 <col:12> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590eceeb848 <col:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590eceeb9a0 <col:28> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceeb870 <col:28> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590eceeb9b8 <col:31> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590eceeb898 <col:31> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceeb9d0 <col:34> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590eceeb8c0 <col:34> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B8.2]([B8.4], [B8.6], [B8.8])
  10: ReturnStmt 0x5590eceeb9e8 <lvm.c:228:5, col:35>
`-CallExpr 0x5590eceeb960 <col:12, col:35> 'int'
  |-ImplicitCastExpr 0x5590eceeb948 <col:12> 'int (*)(lua_State *, const TValue *, const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590eceeb848 <col:12> 'int (lua_State *, const TValue *, const TValue *)' Function 0x5590ecea4ab8 'luaG_ordererror' 'int (lua_State *, const TValue *, const TValue *)'
  |-ImplicitCastExpr 0x5590eceeb9a0 <col:28> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceeb870 <col:28> 'lua_State *' lvalue ParmVar 0x5590eceeb370 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590eceeb9b8 <col:31> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590eceeb898 <col:31> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
  `-ImplicitCastExpr 0x5590eceeb9d0 <col:34> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590eceeb8c0 <col:34> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
return [B8.9];
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclStmt 0x5590eceeb668 <lvm.c:226:3, col:10>col:7
`-VarDecl 0x5590eceeb608 <col:3, col:7> col:7 used res 'int'
int res;
   2: DeclRefExpr 0x5590eceeb680 <lvm.c:227:13> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
l
   3: ImplicitCastExpr 0x5590eceeb6c8 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceeb6a8 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceeb680 <lvm.c:227:13> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B9.2]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   4: MemberExpr 0x5590eceeb6e0 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceeb6c8 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceeb6a8 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceeb680 <lvm.c:227:13> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
[B9.3]->tt
   5: ImplicitCastExpr 0x5590eceeb7f0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceeb718 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceeb6e0 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceeb6c8 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceeb6a8 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceeb680 <lvm.c:227:13> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
([B9.4]) (ImplicitCastExpr, LValueToRValue, int)
   6: DeclRefExpr 0x5590eceeb738 <lvm.c:227:25> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
r
   7: ImplicitCastExpr 0x5590eceeb780 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590eceeb760 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590eceeb738 <lvm.c:227:25> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
([B9.6]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   8: MemberExpr 0x5590eceeb798 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590eceeb780 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590eceeb760 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590eceeb738 <lvm.c:227:25> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B9.7]->tt
   9: ImplicitCastExpr 0x5590eceeb808 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590eceeb7d0 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590eceeb798 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590eceeb780 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590eceeb760 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590eceeb738 <lvm.c:227:25> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
([B9.8]) (ImplicitCastExpr, LValueToRValue, int)
  10: BinaryOperator 0x5590eceeb820 <./lobject.h:90:18, col:26> 'int' '!='
|-ImplicitCastExpr 0x5590eceeb7f0 <col:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590eceeb718 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590eceeb6e0 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590eceeb6c8 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590eceeb6a8 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590eceeb680 <lvm.c:227:13> 'const TValue *' lvalue ParmVar 0x5590eceeb3e0 'l' 'const TValue *'
`-ImplicitCastExpr 0x5590eceeb808 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
  `-ParenExpr 0x5590eceeb7d0 <col:18, col:26> 'const int' lvalue
    `-MemberExpr 0x5590eceeb798 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
      `-ImplicitCastExpr 0x5590eceeb780 <col:19, col:21> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590eceeb760 <col:19, col:21> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590eceeb738 <lvm.c:227:25> 'const TValue *' lvalue ParmVar 0x5590eceeb450 'r' 'const TValue *'
[B9.5] != [B9.9]
   T: if [B9.10]
   Preds (1): B10
   Succs (2): B8 B7

 [B0 (EXIT)]
   Preds (5): B1 B2 B4 B6 B8
