void luaH_resizearray(lua_State *L, Table *t, int nasize)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ConditionalOperator 0x5654000e7af8 <ltable.c:328:15, ./lobject.h:360:43> 'int'
|-ParenExpr 0x5654000e7948 <ltable.c:328:15, col:36> 'int'
| `-BinaryOperator 0x5654000e7920 <col:16, line:73:32> 'int' '=='
|   |-ImplicitCastExpr 0x5654000e78f0 <line:328:16, col:19> 'Node *' <LValueToRValue>
|   | `-MemberExpr 0x5654000e7850 <col:16, col:19> 'Node *' lvalue ->node 0x56540009ad58
|   |   `-ImplicitCastExpr 0x5654000e7838 <col:16> 'Table *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5654000e7810 <col:16> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
|   `-ImplicitCastExpr 0x5654000e7908 <line:73:20, col:32> 'Node *' <BitCast>
|     `-ParenExpr 0x5654000e78d0 <col:20, col:32> 'const Node *'
|       `-UnaryOperator 0x5654000e78b0 <col:21, col:22> 'const Node *' prefix '&'
|         `-DeclRefExpr 0x5654000e7888 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
|-IntegerLiteral 0x5654000e7968 <line:328:40> 'int' 0
`-ParenExpr 0x5654000e7ad8 <./lobject.h:360:21, col:43> 'int'
  `-ParenExpr 0x5654000e7ab8 <line:359:18, col:25> 'int'
    `-BinaryOperator 0x5654000e7a90 <col:19, col:24> 'int' '<<'
      |-IntegerLiteral 0x5654000e7988 <col:19> 'int' 1
      `-ImplicitCastExpr 0x5654000e7a78 <col:22, col:24> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x5654000e7a60 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
          `-ParenExpr 0x5654000e7a40 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
            `-MemberExpr 0x5654000e7a08 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
              `-ImplicitCastExpr 0x5654000e79f0 <col:28, col:30> 'Table *' <LValueToRValue>
                `-ParenExpr 0x5654000e79d0 <col:28, col:30> 'Table *' lvalue
                  `-DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
([B4.8]) ? [B2.1] : (([B3.7]))
   2: DeclStmt 0x5654000e7b28 <ltable.c:328:3, col:55>col:7
`-VarDecl 0x5654000e77b0 <col:3, ./lobject.h:360:43> ltable.c:328:7 used nsize 'int' cinit
  `-ConditionalOperator 0x5654000e7af8 <col:15, ./lobject.h:360:43> 'int'
    |-ParenExpr 0x5654000e7948 <ltable.c:328:15, col:36> 'int'
    | `-BinaryOperator 0x5654000e7920 <col:16, line:73:32> 'int' '=='
    |   |-ImplicitCastExpr 0x5654000e78f0 <line:328:16, col:19> 'Node *' <LValueToRValue>
    |   | `-MemberExpr 0x5654000e7850 <col:16, col:19> 'Node *' lvalue ->node 0x56540009ad58
    |   |   `-ImplicitCastExpr 0x5654000e7838 <col:16> 'Table *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5654000e7810 <col:16> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
    |   `-ImplicitCastExpr 0x5654000e7908 <line:73:20, col:32> 'Node *' <BitCast>
    |     `-ParenExpr 0x5654000e78d0 <col:20, col:32> 'const Node *'
    |       `-UnaryOperator 0x5654000e78b0 <col:21, col:22> 'const Node *' prefix '&'
    |         `-DeclRefExpr 0x5654000e7888 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
    |-IntegerLiteral 0x5654000e7968 <line:328:40> 'int' 0
    `-ParenExpr 0x5654000e7ad8 <./lobject.h:360:21, col:43> 'int'
      `-ParenExpr 0x5654000e7ab8 <line:359:18, col:25> 'int'
        `-BinaryOperator 0x5654000e7a90 <col:19, col:24> 'int' '<<'
          |-IntegerLiteral 0x5654000e7988 <col:19> 'int' 1
          `-ImplicitCastExpr 0x5654000e7a78 <col:22, col:24> 'int' <IntegralCast>
            `-ImplicitCastExpr 0x5654000e7a60 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
              `-ParenExpr 0x5654000e7a40 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
                `-MemberExpr 0x5654000e7a08 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
                  `-ImplicitCastExpr 0x5654000e79f0 <col:28, col:30> 'Table *' <LValueToRValue>
                    `-ParenExpr 0x5654000e79d0 <col:28, col:30> 'Table *' lvalue
                      `-DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
int nsize = (t->node == (&dummynode_)) ? 0 : ((1 << ((t)->lsizenode)));
   3: DeclRefExpr 0x5654000e7b40 <ltable.c:329:3> 'void (lua_State *, Table *, int, int)' Function 0x5654000e1f90 'resize' 'void (lua_State *, Table *, int, int)'
resize
   4: ImplicitCastExpr 0x5654000e7c68 <ltable.c:329:3> 'void (*)(lua_State *, Table *, int, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000e7b40 <col:3> 'void (lua_State *, Table *, int, int)' Function 0x5654000e1f90 'resize' 'void (lua_State *, Table *, int, int)'
[B1.3] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, Table *, int, int))
   5: DeclRefExpr 0x5654000e7b68 <ltable.c:329:10> 'lua_State *' lvalue ParmVar 0x5654000e7518 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x5654000e7cc8 <ltable.c:329:10> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000e7b68 <col:10> 'lua_State *' lvalue ParmVar 0x5654000e7518 'L' 'lua_State *'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x5654000e7b90 <ltable.c:329:13> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
t
   8: ImplicitCastExpr 0x5654000e7ce0 <ltable.c:329:13> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000e7b90 <col:13> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
[B1.7] (ImplicitCastExpr, LValueToRValue, Table *)
   9: DeclRefExpr 0x5654000e7bb8 <ltable.c:329:16> 'int' lvalue ParmVar 0x5654000e7600 'nasize' 'int'
nasize
  10: ImplicitCastExpr 0x5654000e7cf8 <ltable.c:329:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000e7bb8 <col:16> 'int' lvalue ParmVar 0x5654000e7600 'nasize' 'int'
[B1.9] (ImplicitCastExpr, LValueToRValue, int)
  11: DeclRefExpr 0x5654000e7be0 <ltable.c:329:24> 'int' lvalue Var 0x5654000e77b0 'nsize' 'int'
nsize
  12: ImplicitCastExpr 0x5654000e7d10 <ltable.c:329:24> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000e7be0 <col:24> 'int' lvalue Var 0x5654000e77b0 'nsize' 'int'
[B1.11] (ImplicitCastExpr, LValueToRValue, int)
  13: CallExpr 0x5654000e7c80 <ltable.c:329:3, col:29> 'void'
|-ImplicitCastExpr 0x5654000e7c68 <col:3> 'void (*)(lua_State *, Table *, int, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000e7b40 <col:3> 'void (lua_State *, Table *, int, int)' Function 0x5654000e1f90 'resize' 'void (lua_State *, Table *, int, int)'
|-ImplicitCastExpr 0x5654000e7cc8 <col:10> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000e7b68 <col:10> 'lua_State *' lvalue ParmVar 0x5654000e7518 'L' 'lua_State *'
|-ImplicitCastExpr 0x5654000e7ce0 <col:13> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5654000e7b90 <col:13> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
|-ImplicitCastExpr 0x5654000e7cf8 <col:16> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000e7bb8 <col:16> 'int' lvalue ParmVar 0x5654000e7600 'nasize' 'int'
`-ImplicitCastExpr 0x5654000e7d10 <col:24> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000e7be0 <col:24> 'int' lvalue Var 0x5654000e77b0 'nsize' 'int'
[B1.4]([B1.6], [B1.8], [B1.10], [B1.12])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x5654000e7968 <ltable.c:328:40> 'int' 0
0
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x5654000e7988 <./lobject.h:359:19> 'int' 1
1
   2: DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
t
   3: ImplicitCastExpr 0x5654000e79f0 <./lobject.h:360:28, col:30> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000e79d0 <col:28, col:30> 'Table *' lvalue
  `-DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
([B3.2]) (ImplicitCastExpr, LValueToRValue, Table *)
   4: MemberExpr 0x5654000e7a08 <./lobject.h:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
`-ImplicitCastExpr 0x5654000e79f0 <col:28, col:30> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000e79d0 <col:28, col:30> 'Table *' lvalue
    `-DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
[B3.3]->lsizenode
   5: ImplicitCastExpr 0x5654000e7a60 <./lobject.h:359:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x5654000e7a40 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x5654000e7a08 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
    `-ImplicitCastExpr 0x5654000e79f0 <col:28, col:30> 'Table *' <LValueToRValue>
      `-ParenExpr 0x5654000e79d0 <col:28, col:30> 'Table *' lvalue
        `-DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
([B3.4]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   6: ImplicitCastExpr 0x5654000e7a78 <./lobject.h:359:22, col:24> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5654000e7a60 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x5654000e7a40 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x5654000e7a08 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
      `-ImplicitCastExpr 0x5654000e79f0 <col:28, col:30> 'Table *' <LValueToRValue>
        `-ParenExpr 0x5654000e79d0 <col:28, col:30> 'Table *' lvalue
          `-DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
[B3.5] (ImplicitCastExpr, IntegralCast, int)
   7: BinaryOperator 0x5654000e7a90 <./lobject.h:359:19, col:24> 'int' '<<'
|-IntegerLiteral 0x5654000e7988 <col:19> 'int' 1
`-ImplicitCastExpr 0x5654000e7a78 <col:22, col:24> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x5654000e7a60 <col:22, col:24> 'lu_byte':'unsigned char' <LValueToRValue>
    `-ParenExpr 0x5654000e7a40 <col:22, col:24> 'lu_byte':'unsigned char' lvalue
      `-MemberExpr 0x5654000e7a08 <line:360:28, col:33> 'lu_byte':'unsigned char' lvalue ->lsizenode 0x56540009abf0
        `-ImplicitCastExpr 0x5654000e79f0 <col:28, col:30> 'Table *' <LValueToRValue>
          `-ParenExpr 0x5654000e79d0 <col:28, col:30> 'Table *' lvalue
            `-DeclRefExpr 0x5654000e79a8 <ltable.c:328:53> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
[B3.1] << [B3.6]
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x5654000e7810 <ltable.c:328:16> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
t
   2: ImplicitCastExpr 0x5654000e7838 <ltable.c:328:16> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000e7810 <col:16> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
[B4.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5654000e7850 <ltable.c:328:16, col:19> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000e7838 <col:16> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000e7810 <col:16> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
[B4.2]->node
   4: ImplicitCastExpr 0x5654000e78f0 <ltable.c:328:16, col:19> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000e7850 <col:16, col:19> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000e7838 <col:16> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000e7810 <col:16> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
[B4.3] (ImplicitCastExpr, LValueToRValue, Node *)
   5: DeclRefExpr 0x5654000e7888 <ltable.c:73:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
dummynode_
   6: UnaryOperator 0x5654000e78b0 <ltable.c:73:21, col:22> 'const Node *' prefix '&'
`-DeclRefExpr 0x5654000e7888 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
&[B4.5]
   7: ImplicitCastExpr 0x5654000e7908 <ltable.c:73:20, col:32> 'Node *' <BitCast>
`-ParenExpr 0x5654000e78d0 <col:20, col:32> 'const Node *'
  `-UnaryOperator 0x5654000e78b0 <col:21, col:22> 'const Node *' prefix '&'
    `-DeclRefExpr 0x5654000e7888 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
([B4.6]) (ImplicitCastExpr, BitCast, Node *)
   8: BinaryOperator 0x5654000e7920 <ltable.c:328:16, line:73:32> 'int' '=='
|-ImplicitCastExpr 0x5654000e78f0 <line:328:16, col:19> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000e7850 <col:16, col:19> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000e7838 <col:16> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5654000e7810 <col:16> 'Table *' lvalue ParmVar 0x5654000e7588 't' 'Table *'
`-ImplicitCastExpr 0x5654000e7908 <line:73:20, col:32> 'Node *' <BitCast>
  `-ParenExpr 0x5654000e78d0 <col:20, col:32> 'const Node *'
    `-UnaryOperator 0x5654000e78b0 <col:21, col:22> 'const Node *' prefix '&'
      `-DeclRefExpr 0x5654000e7888 <col:22> 'const Node':'const struct Node' lvalue Var 0x5654000c7d68 'dummynode_' 'const Node':'const struct Node'
[B4.4] == [B4.7]
   T: ([B4.8]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1
