static void adjustlocalvars(LexState *ls, int nvars)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: DeclRefExpr 0x558fa8ef6bc0 <lparser.c:170:17> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
nvars
   2: UnaryOperator 0x558fa8ef6be8 <lparser.c:170:17, col:22> 'int' postfix '--'
`-DeclRefExpr 0x558fa8ef6bc0 <col:17> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B1.1]--
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: DeclRefExpr 0x558fa8ef6f88 <lparser.c:171:50> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
fs
   2: ImplicitCastExpr 0x558fa8ef6fb0 <lparser.c:171:50> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef6f88 <col:50> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.1] (ImplicitCastExpr, LValueToRValue, FuncState *)
   3: MemberExpr 0x558fa8ef6fc8 <lparser.c:171:50, col:54> 'int' lvalue ->pc 0x558fa8eb41d0
`-ImplicitCastExpr 0x558fa8ef6fb0 <col:50> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef6f88 <col:50> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.2]->pc
   4: ImplicitCastExpr 0x558fa8ef7000 <lparser.c:171:50, col:54> 'int' <LValueToRValue>
`-MemberExpr 0x558fa8ef6fc8 <col:50, col:54> 'int' lvalue ->pc 0x558fa8eb41d0
  `-ImplicitCastExpr 0x558fa8ef6fb0 <col:50> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef6f88 <col:50> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x558fa8ef6c08 <lparser.c:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
fs
   6: ImplicitCastExpr 0x558fa8ef6c50 <lparser.c:32:27, col:30> 'FuncState *' <LValueToRValue>
`-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
  `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
([B2.5]) (ImplicitCastExpr, LValueToRValue, FuncState *)
   7: MemberExpr 0x558fa8ef6c68 <lparser.c:32:27, col:33> 'Proto *' lvalue ->f 0x558fa8eb3e58
`-ImplicitCastExpr 0x558fa8ef6c50 <col:27, col:30> 'FuncState *' <LValueToRValue>
  `-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
    `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.6]->f
   8: ImplicitCastExpr 0x558fa8ef6ca0 <lparser.c:32:27, col:33> 'Proto *' <LValueToRValue>
`-MemberExpr 0x558fa8ef6c68 <col:27, col:33> 'Proto *' lvalue ->f 0x558fa8eb3e58
  `-ImplicitCastExpr 0x558fa8ef6c50 <col:27, col:30> 'FuncState *' <LValueToRValue>
    `-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
      `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.7] (ImplicitCastExpr, LValueToRValue, Proto *)
   9: MemberExpr 0x558fa8ef6cb8 <lparser.c:32:27, col:36> 'struct LocVar *' lvalue ->locvars 0x558fa8e8f090
`-ImplicitCastExpr 0x558fa8ef6ca0 <col:27, col:33> 'Proto *' <LValueToRValue>
  `-MemberExpr 0x558fa8ef6c68 <col:27, col:33> 'Proto *' lvalue ->f 0x558fa8eb3e58
    `-ImplicitCastExpr 0x558fa8ef6c50 <col:27, col:30> 'FuncState *' <LValueToRValue>
      `-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
        `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.8]->locvars
  10: ImplicitCastExpr 0x558fa8ef6ed8 <lparser.c:32:27, col:36> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x558fa8ef6cb8 <col:27, col:36> 'struct LocVar *' lvalue ->locvars 0x558fa8e8f090
  `-ImplicitCastExpr 0x558fa8ef6ca0 <col:27, col:33> 'Proto *' <LValueToRValue>
    `-MemberExpr 0x558fa8ef6c68 <col:27, col:33> 'Proto *' lvalue ->f 0x558fa8eb3e58
      `-ImplicitCastExpr 0x558fa8ef6c50 <col:27, col:30> 'FuncState *' <LValueToRValue>
        `-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
          `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.9] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
  11: DeclRefExpr 0x558fa8ef6cf0 <lparser.c:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
fs
  12: ImplicitCastExpr 0x558fa8ef6d38 <lparser.c:32:44, col:47> 'FuncState *' <LValueToRValue>
`-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
  `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
([B2.11]) (ImplicitCastExpr, LValueToRValue, FuncState *)
  13: MemberExpr 0x558fa8ef6d50 <lparser.c:32:44, col:50> 'unsigned short [200]' lvalue ->actvar 0x558fa8eb46a0
`-ImplicitCastExpr 0x558fa8ef6d38 <col:44, col:47> 'FuncState *' <LValueToRValue>
  `-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
    `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.12]->actvar
  14: ImplicitCastExpr 0x558fa8ef6e98 <lparser.c:32:44, col:50> 'unsigned short *' <ArrayToPointerDecay>
`-MemberExpr 0x558fa8ef6d50 <col:44, col:50> 'unsigned short [200]' lvalue ->actvar 0x558fa8eb46a0
  `-ImplicitCastExpr 0x558fa8ef6d38 <col:44, col:47> 'FuncState *' <LValueToRValue>
    `-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
      `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.13] (ImplicitCastExpr, ArrayToPointerDecay, unsigned short *)
  15: DeclRefExpr 0x558fa8ef6d88 <lparser.c:171:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
fs
  16: ImplicitCastExpr 0x558fa8ef6db0 <lparser.c:171:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.15] (ImplicitCastExpr, LValueToRValue, FuncState *)
  17: MemberExpr 0x558fa8ef6dc8 <lparser.c:171:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
`-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.16]->nactvar
  18: ImplicitCastExpr 0x558fa8ef6e28 <lparser.c:171:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
  `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.17] (ImplicitCastExpr, LValueToRValue, lu_byte)
  19: ImplicitCastExpr 0x558fa8ef6e40 <lparser.c:171:19, col:23> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef6e28 <col:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
    `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.18] (ImplicitCastExpr, IntegralCast, int)
  20: DeclRefExpr 0x558fa8ef6e00 <lparser.c:171:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
nvars
  21: ImplicitCastExpr 0x558fa8ef6e58 <lparser.c:171:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef6e00 <col:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B2.20] (ImplicitCastExpr, LValueToRValue, int)
  22: BinaryOperator 0x558fa8ef6e70 <lparser.c:171:19, col:33> 'int' '-'
|-ImplicitCastExpr 0x558fa8ef6e40 <col:19, col:23> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef6e28 <col:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
|     `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
|       `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
`-ImplicitCastExpr 0x558fa8ef6e58 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef6e00 <col:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B2.19] - [B2.21]
  23: ArraySubscriptExpr 0x558fa8ef6eb0 <lparser.c:32:44, col:58> 'unsigned short' lvalue
|-ImplicitCastExpr 0x558fa8ef6e98 <col:44, col:50> 'unsigned short *' <ArrayToPointerDecay>
| `-MemberExpr 0x558fa8ef6d50 <col:44, col:50> 'unsigned short [200]' lvalue ->actvar 0x558fa8eb46a0
|   `-ImplicitCastExpr 0x558fa8ef6d38 <col:44, col:47> 'FuncState *' <LValueToRValue>
|     `-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
|       `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
`-BinaryOperator 0x558fa8ef6e70 <col:19, col:33> 'int' '-'
  |-ImplicitCastExpr 0x558fa8ef6e40 <col:19, col:23> 'int' <IntegralCast>
  | `-ImplicitCastExpr 0x558fa8ef6e28 <col:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
  |   `-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
  |     `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
  |       `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
  `-ImplicitCastExpr 0x558fa8ef6e58 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef6e00 <col:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B2.14][[B2.22]]
  24: ImplicitCastExpr 0x558fa8ef6ef0 <lparser.c:32:44, col:58> 'unsigned short' <LValueToRValue>
`-ArraySubscriptExpr 0x558fa8ef6eb0 <col:44, col:58> 'unsigned short' lvalue
  |-ImplicitCastExpr 0x558fa8ef6e98 <col:44, col:50> 'unsigned short *' <ArrayToPointerDecay>
  | `-MemberExpr 0x558fa8ef6d50 <col:44, col:50> 'unsigned short [200]' lvalue ->actvar 0x558fa8eb46a0
  |   `-ImplicitCastExpr 0x558fa8ef6d38 <col:44, col:47> 'FuncState *' <LValueToRValue>
  |     `-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
  |       `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
  `-BinaryOperator 0x558fa8ef6e70 <col:19, col:33> 'int' '-'
    |-ImplicitCastExpr 0x558fa8ef6e40 <col:19, col:23> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x558fa8ef6e28 <col:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
    |     `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
    |       `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
    `-ImplicitCastExpr 0x558fa8ef6e58 <col:33> 'int' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef6e00 <col:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B2.23] (ImplicitCastExpr, LValueToRValue, unsigned short)
  25: ArraySubscriptExpr 0x558fa8ef6f08 <lparser.c:32:27, col:59> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x558fa8ef6ed8 <col:27, col:36> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x558fa8ef6cb8 <col:27, col:36> 'struct LocVar *' lvalue ->locvars 0x558fa8e8f090
|   `-ImplicitCastExpr 0x558fa8ef6ca0 <col:27, col:33> 'Proto *' <LValueToRValue>
|     `-MemberExpr 0x558fa8ef6c68 <col:27, col:33> 'Proto *' lvalue ->f 0x558fa8eb3e58
|       `-ImplicitCastExpr 0x558fa8ef6c50 <col:27, col:30> 'FuncState *' <LValueToRValue>
|         `-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
|           `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
`-ImplicitCastExpr 0x558fa8ef6ef0 <line:32:44, col:58> 'unsigned short' <LValueToRValue>
  `-ArraySubscriptExpr 0x558fa8ef6eb0 <col:44, col:58> 'unsigned short' lvalue
    |-ImplicitCastExpr 0x558fa8ef6e98 <col:44, col:50> 'unsigned short *' <ArrayToPointerDecay>
    | `-MemberExpr 0x558fa8ef6d50 <col:44, col:50> 'unsigned short [200]' lvalue ->actvar 0x558fa8eb46a0
    |   `-ImplicitCastExpr 0x558fa8ef6d38 <col:44, col:47> 'FuncState *' <LValueToRValue>
    |     `-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
    |       `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
    `-BinaryOperator 0x558fa8ef6e70 <col:19, col:33> 'int' '-'
      |-ImplicitCastExpr 0x558fa8ef6e40 <col:19, col:23> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x558fa8ef6e28 <col:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
      |   `-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
      |     `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
      |       `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
      `-ImplicitCastExpr 0x558fa8ef6e58 <col:33> 'int' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef6e00 <col:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B2.10][[B2.24]]
  26: MemberExpr 0x558fa8ef6f50 <lparser.c:32:26, line:171:40> 'int' lvalue .startpc 0x558fa8e8fa70
`-ParenExpr 0x558fa8ef6f30 <line:32:26, col:60> 'struct LocVar':'struct LocVar' lvalue
  `-ArraySubscriptExpr 0x558fa8ef6f08 <col:27, col:59> 'struct LocVar':'struct LocVar' lvalue
    |-ImplicitCastExpr 0x558fa8ef6ed8 <col:27, col:36> 'struct LocVar *' <LValueToRValue>
    | `-MemberExpr 0x558fa8ef6cb8 <col:27, col:36> 'struct LocVar *' lvalue ->locvars 0x558fa8e8f090
    |   `-ImplicitCastExpr 0x558fa8ef6ca0 <col:27, col:33> 'Proto *' <LValueToRValue>
    |     `-MemberExpr 0x558fa8ef6c68 <col:27, col:33> 'Proto *' lvalue ->f 0x558fa8eb3e58
    |       `-ImplicitCastExpr 0x558fa8ef6c50 <col:27, col:30> 'FuncState *' <LValueToRValue>
    |         `-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
    |           `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
    `-ImplicitCastExpr 0x558fa8ef6ef0 <line:32:44, col:58> 'unsigned short' <LValueToRValue>
      `-ArraySubscriptExpr 0x558fa8ef6eb0 <col:44, col:58> 'unsigned short' lvalue
        |-ImplicitCastExpr 0x558fa8ef6e98 <col:44, col:50> 'unsigned short *' <ArrayToPointerDecay>
        | `-MemberExpr 0x558fa8ef6d50 <col:44, col:50> 'unsigned short [200]' lvalue ->actvar 0x558fa8eb46a0
        |   `-ImplicitCastExpr 0x558fa8ef6d38 <col:44, col:47> 'FuncState *' <LValueToRValue>
        |     `-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
        |       `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
        `-BinaryOperator 0x558fa8ef6e70 <col:19, col:33> 'int' '-'
          |-ImplicitCastExpr 0x558fa8ef6e40 <col:19, col:23> 'int' <IntegralCast>
          | `-ImplicitCastExpr 0x558fa8ef6e28 <col:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
          |   `-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
          |     `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
          |       `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
          `-ImplicitCastExpr 0x558fa8ef6e58 <col:33> 'int' <LValueToRValue>
            `-DeclRefExpr 0x558fa8ef6e00 <col:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
([B2.25]).startpc
  27: BinaryOperator 0x558fa8ef7018 <lparser.c:32:26, line:171:54> 'int' '='
|-MemberExpr 0x558fa8ef6f50 <line:32:26, line:171:40> 'int' lvalue .startpc 0x558fa8e8fa70
| `-ParenExpr 0x558fa8ef6f30 <line:32:26, col:60> 'struct LocVar':'struct LocVar' lvalue
|   `-ArraySubscriptExpr 0x558fa8ef6f08 <col:27, col:59> 'struct LocVar':'struct LocVar' lvalue
|     |-ImplicitCastExpr 0x558fa8ef6ed8 <col:27, col:36> 'struct LocVar *' <LValueToRValue>
|     | `-MemberExpr 0x558fa8ef6cb8 <col:27, col:36> 'struct LocVar *' lvalue ->locvars 0x558fa8e8f090
|     |   `-ImplicitCastExpr 0x558fa8ef6ca0 <col:27, col:33> 'Proto *' <LValueToRValue>
|     |     `-MemberExpr 0x558fa8ef6c68 <col:27, col:33> 'Proto *' lvalue ->f 0x558fa8eb3e58
|     |       `-ImplicitCastExpr 0x558fa8ef6c50 <col:27, col:30> 'FuncState *' <LValueToRValue>
|     |         `-ParenExpr 0x558fa8ef6c30 <col:27, col:30> 'FuncState *' lvalue
|     |           `-DeclRefExpr 0x558fa8ef6c08 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
|     `-ImplicitCastExpr 0x558fa8ef6ef0 <line:32:44, col:58> 'unsigned short' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558fa8ef6eb0 <col:44, col:58> 'unsigned short' lvalue
|         |-ImplicitCastExpr 0x558fa8ef6e98 <col:44, col:50> 'unsigned short *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558fa8ef6d50 <col:44, col:50> 'unsigned short [200]' lvalue ->actvar 0x558fa8eb46a0
|         |   `-ImplicitCastExpr 0x558fa8ef6d38 <col:44, col:47> 'FuncState *' <LValueToRValue>
|         |     `-ParenExpr 0x558fa8ef6d18 <col:44, col:47> 'FuncState *' lvalue
|         |       `-DeclRefExpr 0x558fa8ef6cf0 <line:171:15> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
|         `-BinaryOperator 0x558fa8ef6e70 <col:19, col:33> 'int' '-'
|           |-ImplicitCastExpr 0x558fa8ef6e40 <col:19, col:23> 'int' <IntegralCast>
|           | `-ImplicitCastExpr 0x558fa8ef6e28 <col:19, col:23> 'lu_byte':'unsigned char' <LValueToRValue>
|           |   `-MemberExpr 0x558fa8ef6dc8 <col:19, col:23> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
|           |     `-ImplicitCastExpr 0x558fa8ef6db0 <col:19> 'FuncState *' <LValueToRValue>
|           |       `-DeclRefExpr 0x558fa8ef6d88 <col:19> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
|           `-ImplicitCastExpr 0x558fa8ef6e58 <col:33> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x558fa8ef6e00 <col:33> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
`-ImplicitCastExpr 0x558fa8ef7000 <col:50, col:54> 'int' <LValueToRValue>
  `-MemberExpr 0x558fa8ef6fc8 <col:50, col:54> 'int' lvalue ->pc 0x558fa8eb41d0
    `-ImplicitCastExpr 0x558fa8ef6fb0 <col:50> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef6f88 <col:50> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B2.26] = [B2.4]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x558fa8ef6b80 <lparser.c:170:10> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
nvars
   2: ImplicitCastExpr 0x558fa8ef6ba8 <lparser.c:170:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef6b80 <col:10> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   T: for (; [B3.2]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: DeclRefExpr 0x558fa8ef6860 <lparser.c:168:19> 'LexState *' lvalue ParmVar 0x558fa8ef6638 'ls' 'LexState *'
ls
   2: ImplicitCastExpr 0x558fa8ef6888 <lparser.c:168:19> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef6860 <col:19> 'LexState *' lvalue ParmVar 0x558fa8ef6638 'ls' 'LexState *'
[B4.1] (ImplicitCastExpr, LValueToRValue, LexState *)
   3: MemberExpr 0x558fa8ef68a0 <lparser.c:168:19, col:23> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
`-ImplicitCastExpr 0x558fa8ef6888 <col:19> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef6860 <col:19> 'LexState *' lvalue ParmVar 0x558fa8ef6638 'ls' 'LexState *'
[B4.2]->fs
   4: ImplicitCastExpr 0x558fa8ef68d8 <lparser.c:168:19, col:23> 'struct FuncState *' <LValueToRValue>
`-MemberExpr 0x558fa8ef68a0 <col:19, col:23> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
  `-ImplicitCastExpr 0x558fa8ef6888 <col:19> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef6860 <col:19> 'LexState *' lvalue ParmVar 0x558fa8ef6638 'ls' 'LexState *'
[B4.3] (ImplicitCastExpr, LValueToRValue, struct FuncState *)
   5: DeclStmt 0x558fa8ef68f0 <lparser.c:168:3, col:25>col:14
`-VarDecl 0x558fa8ef6800 <col:3, col:23> col:14 used fs 'FuncState *' cinit
  `-ImplicitCastExpr 0x558fa8ef68d8 <col:19, col:23> 'struct FuncState *' <LValueToRValue>
    `-MemberExpr 0x558fa8ef68a0 <col:19, col:23> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
      `-ImplicitCastExpr 0x558fa8ef6888 <col:19> 'LexState *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef6860 <col:19> 'LexState *' lvalue ParmVar 0x558fa8ef6638 'ls' 'LexState *'
FuncState *fs = ls->fs;
   6: DeclRefExpr 0x558fa8ef6980 <lparser.c:169:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
fs
   7: ImplicitCastExpr 0x558fa8ef69a8 <lparser.c:169:27> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef6980 <col:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B4.6] (ImplicitCastExpr, LValueToRValue, FuncState *)
   8: MemberExpr 0x558fa8ef69c0 <lparser.c:169:27, col:31> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
`-ImplicitCastExpr 0x558fa8ef69a8 <col:27> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef6980 <col:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B4.7]->nactvar
   9: ImplicitCastExpr 0x558fa8ef6a20 <lparser.c:169:27, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8ef69c0 <col:27, col:31> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
  `-ImplicitCastExpr 0x558fa8ef69a8 <col:27> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef6980 <col:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B4.8] (ImplicitCastExpr, LValueToRValue, lu_byte)
  10: ImplicitCastExpr 0x558fa8ef6a38 <lparser.c:169:27, col:31> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef6a20 <col:27, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8ef69c0 <col:27, col:31> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
    `-ImplicitCastExpr 0x558fa8ef69a8 <col:27> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef6980 <col:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B4.9] (ImplicitCastExpr, IntegralCast, int)
  11: DeclRefExpr 0x558fa8ef69f8 <lparser.c:169:41> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
nvars
  12: ImplicitCastExpr 0x558fa8ef6a50 <lparser.c:169:41> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef69f8 <col:41> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B4.11] (ImplicitCastExpr, LValueToRValue, int)
  13: BinaryOperator 0x558fa8ef6a68 <lparser.c:169:27, col:41> 'int' '+'
|-ImplicitCastExpr 0x558fa8ef6a38 <col:27, col:31> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef6a20 <col:27, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x558fa8ef69c0 <col:27, col:31> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
|     `-ImplicitCastExpr 0x558fa8ef69a8 <col:27> 'FuncState *' <LValueToRValue>
|       `-DeclRefExpr 0x558fa8ef6980 <col:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
`-ImplicitCastExpr 0x558fa8ef6a50 <col:41> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef69f8 <col:41> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B4.10] + [B4.12]
  14: CStyleCastExpr 0x558fa8ef6b10 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x558fa8ef6af0 <col:26, col:30> 'int'
  `-ParenExpr 0x558fa8ef6a90 <line:78:36, col:38> 'int'
    `-BinaryOperator 0x558fa8ef6a68 <lparser.c:169:27, col:41> 'int' '+'
      |-ImplicitCastExpr 0x558fa8ef6a38 <col:27, col:31> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x558fa8ef6a20 <col:27, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
      |   `-MemberExpr 0x558fa8ef69c0 <col:27, col:31> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
      |     `-ImplicitCastExpr 0x558fa8ef69a8 <col:27> 'FuncState *' <LValueToRValue>
      |       `-DeclRefExpr 0x558fa8ef6980 <col:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
      `-ImplicitCastExpr 0x558fa8ef6a50 <col:41> 'int' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef69f8 <col:41> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
(lu_byte)(([B4.13])) (CStyleCastExpr, IntegralCast, lu_byte)
  15: DeclRefExpr 0x558fa8ef6908 <lparser.c:169:3> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
fs
  16: ImplicitCastExpr 0x558fa8ef6930 <lparser.c:169:3> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef6908 <col:3> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B4.15] (ImplicitCastExpr, LValueToRValue, FuncState *)
  17: MemberExpr 0x558fa8ef6948 <lparser.c:169:3, col:7> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
`-ImplicitCastExpr 0x558fa8ef6930 <col:3> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef6908 <col:3> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
[B4.16]->nactvar
  18: BinaryOperator 0x558fa8ef6b58 <lparser.c:169:3, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x558fa8ef6948 <lparser.c:169:3, col:7> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
| `-ImplicitCastExpr 0x558fa8ef6930 <col:3> 'FuncState *' <LValueToRValue>
|   `-DeclRefExpr 0x558fa8ef6908 <col:3> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
`-ParenExpr 0x558fa8ef6b38 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x558fa8ef6b10 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x558fa8ef6af0 <col:26, col:30> 'int'
      `-ParenExpr 0x558fa8ef6a90 <line:78:36, col:38> 'int'
        `-BinaryOperator 0x558fa8ef6a68 <lparser.c:169:27, col:41> 'int' '+'
          |-ImplicitCastExpr 0x558fa8ef6a38 <col:27, col:31> 'int' <IntegralCast>
          | `-ImplicitCastExpr 0x558fa8ef6a20 <col:27, col:31> 'lu_byte':'unsigned char' <LValueToRValue>
          |   `-MemberExpr 0x558fa8ef69c0 <col:27, col:31> 'lu_byte':'unsigned char' lvalue ->nactvar 0x558fa8eb4468
          |     `-ImplicitCastExpr 0x558fa8ef69a8 <col:27> 'FuncState *' <LValueToRValue>
          |       `-DeclRefExpr 0x558fa8ef6980 <col:27> 'FuncState *' lvalue Var 0x558fa8ef6800 'fs' 'FuncState *'
          `-ImplicitCastExpr 0x558fa8ef6a50 <col:41> 'int' <LValueToRValue>
            `-DeclRefExpr 0x558fa8ef69f8 <col:41> 'int' lvalue ParmVar 0x558fa8ef66b0 'nvars' 'int'
[B4.17] = ([B4.14])
   Preds (1): B5
   Succs (1): B3

 [B0 (EXIT)]
   Preds (1): B3
