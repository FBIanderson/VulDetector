void luaD_seterrorobj(lua_State *L, int errcode, StkId oldtop)
 [B7 (ENTRY)]
   Succs (1): B2

 [B1]
   1: DeclRefExpr 0x55f42eebec50 <ldo.c:67:12> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
oldtop
   2: ImplicitCastExpr 0x55f42eebec98 <ldo.c:67:12> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebec50 <col:12> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
[B1.1] (ImplicitCastExpr, LValueToRValue, StkId)
   3: IntegerLiteral 0x55f42eebec78 <ldo.c:67:21> 'int' 1
1
   4: BinaryOperator 0x55f42eebecb0 <ldo.c:67:12, col:21> 'StkId':'TValue *' '+'
|-ImplicitCastExpr 0x55f42eebec98 <col:12> 'StkId':'TValue *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eebec50 <col:12> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
`-IntegerLiteral 0x55f42eebec78 <col:21> 'int' 1
[B1.2] + [B1.3]
   5: DeclRefExpr 0x55f42eebebd8 <ldo.c:67:3> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x55f42eebec00 <ldo.c:67:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebebd8 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x55f42eebec18 <ldo.c:67:3, col:6> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
`-ImplicitCastExpr 0x55f42eebec00 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebebd8 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
[B1.6]->top
   8: BinaryOperator 0x55f42eebecd8 <ldo.c:67:3, col:21> 'StkId':'TValue *' '='
|-MemberExpr 0x55f42eebec18 <col:3, col:6> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
| `-ImplicitCastExpr 0x55f42eebec00 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eebebd8 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
`-BinaryOperator 0x55f42eebecb0 <col:12, col:21> 'StkId':'TValue *' '+'
  |-ImplicitCastExpr 0x55f42eebec98 <col:12> 'StkId':'TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x55f42eebec50 <col:12> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
  `-IntegerLiteral 0x55f42eebec78 <col:21> 'int' 1
[B1.7] = [B1.4]
   Preds (4): B4 B5 B6 B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55f42eebb9c8 <ldo.c:52:11> 'int' lvalue ParmVar 0x55f42eebb7c0 'errcode' 'int'
errcode
   2: ImplicitCastExpr 0x55f42eebb9f0 <ldo.c:52:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f42eebb9c8 <col:11> 'int' lvalue ParmVar 0x55f42eebb7c0 'errcode' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B2.2]
   Preds (1): B7
   Succs (5): B3 B4 B5 B6 B1

 [B3]
  case 3:
   Preds (1): B2
   Succs (1): B4

 [B4]
  case 2:
   1: DeclRefExpr 0x55f42eebe650 <ldo.c:63:28> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eebe678 <ldo.c:63:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebe650 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eebe690 <ldo.c:63:28, col:31> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
`-ImplicitCastExpr 0x55f42eebe678 <col:28> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebe650 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
[B4.2]->top
   4: ImplicitCastExpr 0x55f42eebe6e8 <ldo.c:63:28, col:31> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eebe690 <col:28, col:31> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
  `-ImplicitCastExpr 0x55f42eebe678 <col:28> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebe650 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: IntegerLiteral 0x55f42eebe6c8 <ldo.c:63:37> 'int' 1
1
   6: BinaryOperator 0x55f42eebe700 <ldo.c:63:28, col:37> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x55f42eebe6e8 <col:28, col:31> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x55f42eebe690 <col:28, col:31> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
|   `-ImplicitCastExpr 0x55f42eebe678 <col:28> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x55f42eebe650 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
`-IntegerLiteral 0x55f42eebe6c8 <col:37> 'int' 1
[B4.4] - [B4.5]
   7: ImplicitCastExpr 0x55f42eebe748 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ParenExpr 0x55f42eebe728 <col:22, col:27> 'StkId':'TValue *'
  `-BinaryOperator 0x55f42eebe700 <ldo.c:63:28, col:37> 'StkId':'TValue *' '-'
    |-ImplicitCastExpr 0x55f42eebe6e8 <col:28, col:31> 'StkId':'TValue *' <LValueToRValue>
    | `-MemberExpr 0x55f42eebe690 <col:28, col:31> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
    |   `-ImplicitCastExpr 0x55f42eebe678 <col:28> 'lua_State *' <LValueToRValue>
    |     `-DeclRefExpr 0x55f42eebe650 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
    `-IntegerLiteral 0x55f42eebe6c8 <col:37> 'int' 1
([B4.6]) (ImplicitCastExpr, BitCast, const TValue *)
   8: DeclStmt 0x55f42eebe760 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x55f42eebe5f0 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x55f42eebe748 <col:22, col:27> 'const TValue *' <BitCast>
    `-ParenExpr 0x55f42eebe728 <col:22, col:27> 'StkId':'TValue *'
      `-BinaryOperator 0x55f42eebe700 <ldo.c:63:28, col:37> 'StkId':'TValue *' '-'
        |-ImplicitCastExpr 0x55f42eebe6e8 <col:28, col:31> 'StkId':'TValue *' <LValueToRValue>
        | `-MemberExpr 0x55f42eebe690 <col:28, col:31> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
        |   `-ImplicitCastExpr 0x55f42eebe678 <col:28> 'lua_State *' <LValueToRValue>
        |     `-DeclRefExpr 0x55f42eebe650 <col:28> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
        `-IntegerLiteral 0x55f42eebe6c8 <col:37> 'int' 1
const TValue *o2 = (L->top - 1);
   9: DeclRefExpr 0x55f42eebe7e8 <ldo.c:63:20> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
oldtop
  10: ImplicitCastExpr 0x55f42eebe830 <./lobject.h:162:41, col:46> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eebe810 <col:41, col:46> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x55f42eebe7e8 <ldo.c:63:20> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
([B4.9]) (ImplicitCastExpr, LValueToRValue, StkId)
  11: DeclStmt 0x55f42eebe848 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x55f42eebe788 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x55f42eebe830 <col:41, col:46> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x55f42eebe810 <col:41, col:46> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x55f42eebe7e8 <ldo.c:63:20> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
TValue *o1 = (oldtop);
  12: DeclRefExpr 0x55f42eebe8d8 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
o2
  13: ImplicitCastExpr 0x55f42eebe900 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebe8d8 <col:17> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.12] (ImplicitCastExpr, LValueToRValue, const TValue *)
  14: MemberExpr 0x55f42eebe918 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eebe900 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebe8d8 <col:17> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.13]->value
  15: ImplicitCastExpr 0x55f42eebe950 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x55f42eebe918 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
  `-ImplicitCastExpr 0x55f42eebe900 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebe8d8 <col:17> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.14] (ImplicitCastExpr, LValueToRValue, Value)
  16: DeclRefExpr 0x55f42eebe860 <./lobject.h:163:5> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
o1
  17: ImplicitCastExpr 0x55f42eebe888 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebe860 <col:5> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
[B4.16] (ImplicitCastExpr, LValueToRValue, TValue *)
  18: MemberExpr 0x55f42eebe8a0 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eebe888 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebe860 <col:5> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
[B4.17]->value
  19: BinaryOperator 0x55f42eebe968 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x55f42eebe8a0 <col:5, col:9> 'Value':'Value' lvalue ->value 0x55f42ee5e920
| `-ImplicitCastExpr 0x55f42eebe888 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eebe860 <col:5> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
`-ImplicitCastExpr 0x55f42eebe950 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x55f42eebe918 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x55f42ee5e920
    `-ImplicitCastExpr 0x55f42eebe900 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eebe8d8 <col:17> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.18] = [B4.15]
  20: DeclRefExpr 0x55f42eebea08 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
o2
  21: ImplicitCastExpr 0x55f42eebea30 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebea08 <col:35> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.20] (ImplicitCastExpr, LValueToRValue, const TValue *)
  22: MemberExpr 0x55f42eebea48 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eebea30 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebea08 <col:35> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.21]->tt
  23: ImplicitCastExpr 0x55f42eebea80 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x55f42eebea48 <col:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
  `-ImplicitCastExpr 0x55f42eebea30 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebea08 <col:35> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.22] (ImplicitCastExpr, LValueToRValue, int)
  24: DeclRefExpr 0x55f42eebe990 <./lobject.h:163:28> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
o1
  25: ImplicitCastExpr 0x55f42eebe9b8 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebe990 <col:28> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
[B4.24] (ImplicitCastExpr, LValueToRValue, TValue *)
  26: MemberExpr 0x55f42eebe9d0 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eebe9b8 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebe990 <col:28> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
[B4.25]->tt
  27: BinaryOperator 0x55f42eebea98 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x55f42eebe9d0 <col:28, col:32> 'int' lvalue ->tt 0x55f42ee5e980
| `-ImplicitCastExpr 0x55f42eebe9b8 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eebe990 <col:28> 'TValue *' lvalue Var 0x55f42eebe788 'o1' 'TValue *'
`-ImplicitCastExpr 0x55f42eebea80 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x55f42eebea48 <col:35, col:39> 'const int' lvalue ->tt 0x55f42ee5e980
    `-ImplicitCastExpr 0x55f42eebea30 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eebea08 <col:35> 'const TValue *' lvalue Var 0x55f42eebe5f0 'o2' 'const TValue *'
[B4.26] = [B4.23]
  28: IntegerLiteral 0x55f42eebeac0 <./llimits.h:62:31> 'int' 0
0
  29: CStyleCastExpr 0x55f42eebeaf0 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eebeac0 <col:31> 'int' 0
(void)[B4.28] (CStyleCastExpr, ToVoid, void)
   T: break;
   Preds (2): B2 B3
   Succs (1): B1

 [B5]
  case 5:
   1: DeclRefExpr 0x55f42eebc2d8 <ldo.c:58:22> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
oldtop
   2: ImplicitCastExpr 0x55f42eebc320 <./lobject.h:129:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eebc300 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x55f42eebc2d8 <ldo.c:58:22> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x55f42eebc338 <./lobject.h:129:5, col:22>col:13
`-VarDecl 0x55f42eebc278 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x55f42eebc320 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x55f42eebc300 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x55f42eebc2d8 <ldo.c:58:22> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
TValue *i_o = (oldtop);
   4: DeclRefExpr 0x55f42eebc400 <./lstring.h:21:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
luaS_newlstr
   5: ImplicitCastExpr 0x55f42eebc628 <./lstring.h:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eebc400 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
[B5.4] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t))
   6: DeclRefExpr 0x55f42eebc428 <ldo.c:58:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55f42eebc680 <ldo.c:58:46> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebc428 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
[B5.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: StringLiteral 0x55f42eebc488 <./lstring.h:21:48, ldo.c:58:49> 'char [24]' lvalue "error in error handling"
"error in error handling"
   9: ImplicitCastExpr 0x55f42eebc698 <./lstring.h:21:48, ldo.c:58:49> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55f42eebc488 <./lstring.h:21:48, ldo.c:58:49> 'char [24]' lvalue "error in error handling"
[B5.8] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  10: ImplicitCastExpr 0x55f42eebc6b0 <./lstring.h:21:48, ldo.c:58:49> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55f42eebc698 <./lstring.h:21:48, ldo.c:58:49> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55f42eebc488 <./lstring.h:21:48, ldo.c:58:49> 'char [24]' lvalue "error in error handling"
[B5.9] (ImplicitCastExpr, BitCast, const char *)
  11: UnaryExprOrTypeTraitExpr 0x55f42eebc530 <./lstring.h:22:35, col:43> 'unsigned long' sizeof
`-ParenExpr 0x55f42eebc510 <col:41, col:43> 'char [24]' lvalue
  `-StringLiteral 0x55f42eebc4d0 <ldo.c:58:49> 'char [24]' lvalue "error in error handling"
sizeof ("error in error handling")
  12: UnaryExprOrTypeTraitExpr 0x55f42eebc560 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
sizeof(char)
  13: BinaryOperator 0x55f42eebc580 <./lstring.h:22:35, col:56> 'unsigned long' '/'
|-UnaryExprOrTypeTraitExpr 0x55f42eebc530 <col:35, col:43> 'unsigned long' sizeof
| `-ParenExpr 0x55f42eebc510 <col:41, col:43> 'char [24]' lvalue
|   `-StringLiteral 0x55f42eebc4d0 <ldo.c:58:49> 'char [24]' lvalue "error in error handling"
`-UnaryExprOrTypeTraitExpr 0x55f42eebc560 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
[B5.11] / [B5.12]
  14: IntegerLiteral 0x55f42eebc5c8 <./lstring.h:22:59> 'int' 1
1
  15: ImplicitCastExpr 0x55f42eebc5e8 <./lstring.h:22:59> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55f42eebc5c8 <col:59> 'int' 1
[B5.14] (ImplicitCastExpr, IntegralCast, unsigned long)
  16: BinaryOperator 0x55f42eebc600 <./lstring.h:22:34, col:59> 'unsigned long' '-'
|-ParenExpr 0x55f42eebc5a8 <col:34, col:57> 'unsigned long'
| `-BinaryOperator 0x55f42eebc580 <col:35, col:56> 'unsigned long' '/'
|   |-UnaryExprOrTypeTraitExpr 0x55f42eebc530 <col:35, col:43> 'unsigned long' sizeof
|   | `-ParenExpr 0x55f42eebc510 <col:41, col:43> 'char [24]' lvalue
|   |   `-StringLiteral 0x55f42eebc4d0 <ldo.c:58:49> 'char [24]' lvalue "error in error handling"
|   `-UnaryExprOrTypeTraitExpr 0x55f42eebc560 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
`-ImplicitCastExpr 0x55f42eebc5e8 <col:59> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55f42eebc5c8 <col:59> 'int' 1
([B5.13]) - [B5.15]
  17: CallExpr 0x55f42eebc640 <./lstring.h:21:32, line:22:60> 'TString *'
|-ImplicitCastExpr 0x55f42eebc628 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eebc400 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x55f42eebc680 <ldo.c:58:46> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eebc428 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
|-ImplicitCastExpr 0x55f42eebc6b0 <./lstring.h:21:48, ldo.c:58:49> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55f42eebc698 <./lstring.h:21:48, ldo.c:58:49> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55f42eebc488 <./lstring.h:21:48, ldo.c:58:49> 'char [24]' lvalue "error in error handling"
`-BinaryOperator 0x55f42eebc600 <./lstring.h:22:34, col:59> 'unsigned long' '-'
  |-ParenExpr 0x55f42eebc5a8 <col:34, col:57> 'unsigned long'
  | `-BinaryOperator 0x55f42eebc580 <col:35, col:56> 'unsigned long' '/'
  |   |-UnaryExprOrTypeTraitExpr 0x55f42eebc530 <col:35, col:43> 'unsigned long' sizeof
  |   | `-ParenExpr 0x55f42eebc510 <col:41, col:43> 'char [24]' lvalue
  |   |   `-StringLiteral 0x55f42eebc4d0 <ldo.c:58:49> 'char [24]' lvalue "error in error handling"
  |   `-UnaryExprOrTypeTraitExpr 0x55f42eebc560 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
  `-ImplicitCastExpr 0x55f42eebc5e8 <col:59> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55f42eebc5c8 <col:59> 'int' 1
[B5.5]([B5.7], [B5.10], [B5.16])
  18: CStyleCastExpr 0x55f42eebc768 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ParenExpr 0x55f42eebc748 <col:26, col:30> 'TString *'
  `-ParenExpr 0x55f42eebc6e8 <./lobject.h:130:36, col:38> 'TString *'
    `-ParenExpr 0x55f42eebc6c8 <./lstring.h:21:31, line:22:61> 'TString *'
      `-CallExpr 0x55f42eebc640 <line:21:32, line:22:60> 'TString *'
        |-ImplicitCastExpr 0x55f42eebc628 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55f42eebc400 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
        |-ImplicitCastExpr 0x55f42eebc680 <ldo.c:58:46> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x55f42eebc428 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
        |-ImplicitCastExpr 0x55f42eebc6b0 <./lstring.h:21:48, ldo.c:58:49> 'const char *' <BitCast>
        | `-ImplicitCastExpr 0x55f42eebc698 <./lstring.h:21:48, ldo.c:58:49> 'char *' <ArrayToPointerDecay>
        |   `-StringLiteral 0x55f42eebc488 <./lstring.h:21:48, ldo.c:58:49> 'char [24]' lvalue "error in error handling"
        `-BinaryOperator 0x55f42eebc600 <./lstring.h:22:34, col:59> 'unsigned long' '-'
          |-ParenExpr 0x55f42eebc5a8 <col:34, col:57> 'unsigned long'
          | `-BinaryOperator 0x55f42eebc580 <col:35, col:56> 'unsigned long' '/'
          |   |-UnaryExprOrTypeTraitExpr 0x55f42eebc530 <col:35, col:43> 'unsigned long' sizeof
          |   | `-ParenExpr 0x55f42eebc510 <col:41, col:43> 'char [24]' lvalue
          |   |   `-StringLiteral 0x55f42eebc4d0 <ldo.c:58:49> 'char [24]' lvalue "error in error handling"
          |   `-UnaryExprOrTypeTraitExpr 0x55f42eebc560 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
          `-ImplicitCastExpr 0x55f42eebc5e8 <col:59> 'unsigned long' <IntegralCast>
            `-IntegerLiteral 0x55f42eebc5c8 <col:59> 'int' 1
(GCObject *)((([B5.17]))) (CStyleCastExpr, BitCast, GCObject *)
  19: DeclRefExpr 0x55f42eebc350 <./lobject.h:130:5> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
i_o
  20: ImplicitCastExpr 0x55f42eebc378 <./lobject.h:130:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebc350 <col:5> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
[B5.19] (ImplicitCastExpr, LValueToRValue, TValue *)
  21: MemberExpr 0x55f42eebc390 <./lobject.h:130:5, col:10> 'Value':'Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eebc378 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebc350 <col:5> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
[B5.20]->value
  22: MemberExpr 0x55f42eebc3c8 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x55f42ee5e620
`-MemberExpr 0x55f42eebc390 <col:5, col:10> 'Value':'Value' lvalue ->value 0x55f42ee5e920
  `-ImplicitCastExpr 0x55f42eebc378 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebc350 <col:5> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
[B5.21].gc
  23: BinaryOperator 0x55f42eebc7b0 <./lobject.h:130:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x55f42eebc3c8 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x55f42ee5e620
| `-MemberExpr 0x55f42eebc390 <col:5, col:10> 'Value':'Value' lvalue ->value 0x55f42ee5e920
|   `-ImplicitCastExpr 0x55f42eebc378 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x55f42eebc350 <col:5> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
`-ParenExpr 0x55f42eebc790 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x55f42eebc768 <col:23, col:30> 'GCObject *' <BitCast>
    `-ParenExpr 0x55f42eebc748 <col:26, col:30> 'TString *'
      `-ParenExpr 0x55f42eebc6e8 <./lobject.h:130:36, col:38> 'TString *'
        `-ParenExpr 0x55f42eebc6c8 <./lstring.h:21:31, line:22:61> 'TString *'
          `-CallExpr 0x55f42eebc640 <line:21:32, line:22:60> 'TString *'
            |-ImplicitCastExpr 0x55f42eebc628 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x55f42eebc400 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
            |-ImplicitCastExpr 0x55f42eebc680 <ldo.c:58:46> 'lua_State *' <LValueToRValue>
            | `-DeclRefExpr 0x55f42eebc428 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
            |-ImplicitCastExpr 0x55f42eebc6b0 <./lstring.h:21:48, ldo.c:58:49> 'const char *' <BitCast>
            | `-ImplicitCastExpr 0x55f42eebc698 <./lstring.h:21:48, ldo.c:58:49> 'char *' <ArrayToPointerDecay>
            |   `-StringLiteral 0x55f42eebc488 <./lstring.h:21:48, ldo.c:58:49> 'char [24]' lvalue "error in error handling"
            `-BinaryOperator 0x55f42eebc600 <./lstring.h:22:34, col:59> 'unsigned long' '-'
              |-ParenExpr 0x55f42eebc5a8 <col:34, col:57> 'unsigned long'
              | `-BinaryOperator 0x55f42eebc580 <col:35, col:56> 'unsigned long' '/'
              |   |-UnaryExprOrTypeTraitExpr 0x55f42eebc530 <col:35, col:43> 'unsigned long' sizeof
              |   | `-ParenExpr 0x55f42eebc510 <col:41, col:43> 'char [24]' lvalue
              |   |   `-StringLiteral 0x55f42eebc4d0 <ldo.c:58:49> 'char [24]' lvalue "error in error handling"
              |   `-UnaryExprOrTypeTraitExpr 0x55f42eebc560 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
              `-ImplicitCastExpr 0x55f42eebc5e8 <col:59> 'unsigned long' <IntegralCast>
                `-IntegerLiteral 0x55f42eebc5c8 <col:59> 'int' 1
[B5.22] = ([B5.18])
  24: IntegerLiteral 0x55f42eebc850 <./lua.h:78:22> 'int' 4
4
  25: DeclRefExpr 0x55f42eebc7d8 <./lobject.h:130:42> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
i_o
  26: ImplicitCastExpr 0x55f42eebc800 <./lobject.h:130:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebc7d8 <col:42> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
[B5.25] (ImplicitCastExpr, LValueToRValue, TValue *)
  27: MemberExpr 0x55f42eebc818 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eebc800 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebc7d8 <col:42> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
[B5.26]->tt
  28: BinaryOperator 0x55f42eebc870 <./lobject.h:130:42, ./lua.h:78:22> 'int' '='
|-MemberExpr 0x55f42eebc818 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x55f42ee5e980
| `-ImplicitCastExpr 0x55f42eebc800 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eebc7d8 <col:42> 'TValue *' lvalue Var 0x55f42eebc278 'i_o' 'TValue *'
`-IntegerLiteral 0x55f42eebc850 <./lua.h:78:22> 'int' 4
[B5.27] = [B5.24]
  29: IntegerLiteral 0x55f42eebc898 <./llimits.h:62:31> 'int' 0
0
  30: CStyleCastExpr 0x55f42eebc8c8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eebc898 <col:31> 'int' 0
(void)[B5.29] (CStyleCastExpr, ToVoid, void)
   T: break;
   Preds (1): B2
   Succs (1): B1

 [B6]
  case 4:
   1: DeclRefExpr 0x55f42eebbb00 <ldo.c:54:22> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
oldtop
   2: ImplicitCastExpr 0x55f42eebbb48 <./lobject.h:129:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x55f42eebbb28 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x55f42eebbb00 <ldo.c:54:22> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: DeclStmt 0x55f42eebbb60 <./lobject.h:129:5, col:22>col:13
`-VarDecl 0x55f42eebbaa0 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x55f42eebbb48 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x55f42eebbb28 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x55f42eebbb00 <ldo.c:54:22> 'StkId':'TValue *' lvalue ParmVar 0x55f42eebb830 'oldtop' 'StkId':'TValue *'
TValue *i_o = (oldtop);
   4: DeclRefExpr 0x55f42eebbc28 <./lstring.h:21:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
luaS_newlstr
   5: ImplicitCastExpr 0x55f42eebbeb8 <./lstring.h:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eebbc28 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
[B6.4] (ImplicitCastExpr, FunctionToPointerDecay, TString *(*)(lua_State *, const char *, size_t))
   6: DeclRefExpr 0x55f42eebbc50 <ldo.c:54:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55f42eebbf10 <ldo.c:54:46> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebbc50 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
[B6.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: StringLiteral 0x55f42eebbcb8 <./lstring.h:21:48, ./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
"not enough memory"
   9: ImplicitCastExpr 0x55f42eebbf28 <./lstring.h:21:48, ./lmem.h:16:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55f42eebbcb8 <./lstring.h:21:48, ./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
[B6.8] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  10: ImplicitCastExpr 0x55f42eebbf40 <./lstring.h:21:48, ./lmem.h:16:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55f42eebbf28 <./lstring.h:21:48, ./lmem.h:16:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55f42eebbcb8 <./lstring.h:21:48, ./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
[B6.9] (ImplicitCastExpr, BitCast, const char *)
  11: UnaryExprOrTypeTraitExpr 0x55f42eebbd60 <./lstring.h:22:35, col:43> 'unsigned long' sizeof
`-ParenExpr 0x55f42eebbd40 <col:41, col:43> 'char [18]' lvalue
  `-StringLiteral 0x55f42eebbd00 <./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
sizeof ("not enough memory")
  12: UnaryExprOrTypeTraitExpr 0x55f42eebbd90 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
sizeof(char)
  13: BinaryOperator 0x55f42eebbdb0 <./lstring.h:22:35, col:56> 'unsigned long' '/'
|-UnaryExprOrTypeTraitExpr 0x55f42eebbd60 <col:35, col:43> 'unsigned long' sizeof
| `-ParenExpr 0x55f42eebbd40 <col:41, col:43> 'char [18]' lvalue
|   `-StringLiteral 0x55f42eebbd00 <./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
`-UnaryExprOrTypeTraitExpr 0x55f42eebbd90 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
[B6.11] / [B6.12]
  14: IntegerLiteral 0x55f42eebbdf8 <./lstring.h:22:59> 'int' 1
1
  15: ImplicitCastExpr 0x55f42eebbe18 <./lstring.h:22:59> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55f42eebbdf8 <col:59> 'int' 1
[B6.14] (ImplicitCastExpr, IntegralCast, unsigned long)
  16: BinaryOperator 0x55f42eebbe30 <./lstring.h:22:34, col:59> 'unsigned long' '-'
|-ParenExpr 0x55f42eebbdd8 <col:34, col:57> 'unsigned long'
| `-BinaryOperator 0x55f42eebbdb0 <col:35, col:56> 'unsigned long' '/'
|   |-UnaryExprOrTypeTraitExpr 0x55f42eebbd60 <col:35, col:43> 'unsigned long' sizeof
|   | `-ParenExpr 0x55f42eebbd40 <col:41, col:43> 'char [18]' lvalue
|   |   `-StringLiteral 0x55f42eebbd00 <./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
|   `-UnaryExprOrTypeTraitExpr 0x55f42eebbd90 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
`-ImplicitCastExpr 0x55f42eebbe18 <col:59> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55f42eebbdf8 <col:59> 'int' 1
([B6.13]) - [B6.15]
  17: CallExpr 0x55f42eebbed0 <./lstring.h:21:32, line:22:60> 'TString *'
|-ImplicitCastExpr 0x55f42eebbeb8 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eebbc28 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
|-ImplicitCastExpr 0x55f42eebbf10 <ldo.c:54:46> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eebbc50 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
|-ImplicitCastExpr 0x55f42eebbf40 <./lstring.h:21:48, ./lmem.h:16:19> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55f42eebbf28 <./lstring.h:21:48, ./lmem.h:16:19> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55f42eebbcb8 <./lstring.h:21:48, ./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
`-BinaryOperator 0x55f42eebbe30 <./lstring.h:22:34, col:59> 'unsigned long' '-'
  |-ParenExpr 0x55f42eebbdd8 <col:34, col:57> 'unsigned long'
  | `-BinaryOperator 0x55f42eebbdb0 <col:35, col:56> 'unsigned long' '/'
  |   |-UnaryExprOrTypeTraitExpr 0x55f42eebbd60 <col:35, col:43> 'unsigned long' sizeof
  |   | `-ParenExpr 0x55f42eebbd40 <col:41, col:43> 'char [18]' lvalue
  |   |   `-StringLiteral 0x55f42eebbd00 <./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
  |   `-UnaryExprOrTypeTraitExpr 0x55f42eebbd90 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
  `-ImplicitCastExpr 0x55f42eebbe18 <col:59> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55f42eebbdf8 <col:59> 'int' 1
[B6.5]([B6.7], [B6.10], [B6.16])
  18: CStyleCastExpr 0x55f42eebbff8 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ParenExpr 0x55f42eebbfd8 <col:26, col:30> 'TString *'
  `-ParenExpr 0x55f42eebbf78 <./lobject.h:130:36, col:38> 'TString *'
    `-ParenExpr 0x55f42eebbf58 <./lstring.h:21:31, line:22:61> 'TString *'
      `-CallExpr 0x55f42eebbed0 <line:21:32, line:22:60> 'TString *'
        |-ImplicitCastExpr 0x55f42eebbeb8 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55f42eebbc28 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
        |-ImplicitCastExpr 0x55f42eebbf10 <ldo.c:54:46> 'lua_State *' <LValueToRValue>
        | `-DeclRefExpr 0x55f42eebbc50 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
        |-ImplicitCastExpr 0x55f42eebbf40 <./lstring.h:21:48, ./lmem.h:16:19> 'const char *' <BitCast>
        | `-ImplicitCastExpr 0x55f42eebbf28 <./lstring.h:21:48, ./lmem.h:16:19> 'char *' <ArrayToPointerDecay>
        |   `-StringLiteral 0x55f42eebbcb8 <./lstring.h:21:48, ./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
        `-BinaryOperator 0x55f42eebbe30 <./lstring.h:22:34, col:59> 'unsigned long' '-'
          |-ParenExpr 0x55f42eebbdd8 <col:34, col:57> 'unsigned long'
          | `-BinaryOperator 0x55f42eebbdb0 <col:35, col:56> 'unsigned long' '/'
          |   |-UnaryExprOrTypeTraitExpr 0x55f42eebbd60 <col:35, col:43> 'unsigned long' sizeof
          |   | `-ParenExpr 0x55f42eebbd40 <col:41, col:43> 'char [18]' lvalue
          |   |   `-StringLiteral 0x55f42eebbd00 <./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
          |   `-UnaryExprOrTypeTraitExpr 0x55f42eebbd90 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
          `-ImplicitCastExpr 0x55f42eebbe18 <col:59> 'unsigned long' <IntegralCast>
            `-IntegerLiteral 0x55f42eebbdf8 <col:59> 'int' 1
(GCObject *)((([B6.17]))) (CStyleCastExpr, BitCast, GCObject *)
  19: DeclRefExpr 0x55f42eebbb78 <./lobject.h:130:5> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
i_o
  20: ImplicitCastExpr 0x55f42eebbba0 <./lobject.h:130:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebbb78 <col:5> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
[B6.19] (ImplicitCastExpr, LValueToRValue, TValue *)
  21: MemberExpr 0x55f42eebbbb8 <./lobject.h:130:5, col:10> 'Value':'Value' lvalue ->value 0x55f42ee5e920
`-ImplicitCastExpr 0x55f42eebbba0 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebbb78 <col:5> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
[B6.20]->value
  22: MemberExpr 0x55f42eebbbf0 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x55f42ee5e620
`-MemberExpr 0x55f42eebbbb8 <col:5, col:10> 'Value':'Value' lvalue ->value 0x55f42ee5e920
  `-ImplicitCastExpr 0x55f42eebbba0 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eebbb78 <col:5> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
[B6.21].gc
  23: BinaryOperator 0x55f42eebc040 <./lobject.h:130:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x55f42eebbbf0 <./lobject.h:130:5, col:16> 'GCObject *' lvalue .gc 0x55f42ee5e620
| `-MemberExpr 0x55f42eebbbb8 <col:5, col:10> 'Value':'Value' lvalue ->value 0x55f42ee5e920
|   `-ImplicitCastExpr 0x55f42eebbba0 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x55f42eebbb78 <col:5> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
`-ParenExpr 0x55f42eebc020 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x55f42eebbff8 <col:23, col:30> 'GCObject *' <BitCast>
    `-ParenExpr 0x55f42eebbfd8 <col:26, col:30> 'TString *'
      `-ParenExpr 0x55f42eebbf78 <./lobject.h:130:36, col:38> 'TString *'
        `-ParenExpr 0x55f42eebbf58 <./lstring.h:21:31, line:22:61> 'TString *'
          `-CallExpr 0x55f42eebbed0 <line:21:32, line:22:60> 'TString *'
            |-ImplicitCastExpr 0x55f42eebbeb8 <line:21:32> 'TString *(*)(lua_State *, const char *, size_t)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x55f42eebbc28 <col:32> 'TString *(lua_State *, const char *, size_t)' Function 0x55f42eeb2530 'luaS_newlstr' 'TString *(lua_State *, const char *, size_t)'
            |-ImplicitCastExpr 0x55f42eebbf10 <ldo.c:54:46> 'lua_State *' <LValueToRValue>
            | `-DeclRefExpr 0x55f42eebbc50 <col:46> 'lua_State *' lvalue ParmVar 0x55f42eebb748 'L' 'lua_State *'
            |-ImplicitCastExpr 0x55f42eebbf40 <./lstring.h:21:48, ./lmem.h:16:19> 'const char *' <BitCast>
            | `-ImplicitCastExpr 0x55f42eebbf28 <./lstring.h:21:48, ./lmem.h:16:19> 'char *' <ArrayToPointerDecay>
            |   `-StringLiteral 0x55f42eebbcb8 <./lstring.h:21:48, ./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
            `-BinaryOperator 0x55f42eebbe30 <./lstring.h:22:34, col:59> 'unsigned long' '-'
              |-ParenExpr 0x55f42eebbdd8 <col:34, col:57> 'unsigned long'
              | `-BinaryOperator 0x55f42eebbdb0 <col:35, col:56> 'unsigned long' '/'
              |   |-UnaryExprOrTypeTraitExpr 0x55f42eebbd60 <col:35, col:43> 'unsigned long' sizeof
              |   | `-ParenExpr 0x55f42eebbd40 <col:41, col:43> 'char [18]' lvalue
              |   |   `-StringLiteral 0x55f42eebbd00 <./lmem.h:16:19> 'char [18]' lvalue "not enough memory"
              |   `-UnaryExprOrTypeTraitExpr 0x55f42eebbd90 <./lstring.h:22:45, col:56> 'unsigned long' sizeof 'char'
              `-ImplicitCastExpr 0x55f42eebbe18 <col:59> 'unsigned long' <IntegralCast>
                `-IntegerLiteral 0x55f42eebbdf8 <col:59> 'int' 1
[B6.22] = ([B6.18])
  24: IntegerLiteral 0x55f42eebc0e0 <./lua.h:78:22> 'int' 4
4
  25: DeclRefExpr 0x55f42eebc068 <./lobject.h:130:42> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
i_o
  26: ImplicitCastExpr 0x55f42eebc090 <./lobject.h:130:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x55f42eebc068 <col:42> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
[B6.25] (ImplicitCastExpr, LValueToRValue, TValue *)
  27: MemberExpr 0x55f42eebc0a8 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x55f42ee5e980
`-ImplicitCastExpr 0x55f42eebc090 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eebc068 <col:42> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
[B6.26]->tt
  28: BinaryOperator 0x55f42eebc100 <./lobject.h:130:42, ./lua.h:78:22> 'int' '='
|-MemberExpr 0x55f42eebc0a8 <./lobject.h:130:42, col:47> 'int' lvalue ->tt 0x55f42ee5e980
| `-ImplicitCastExpr 0x55f42eebc090 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eebc068 <col:42> 'TValue *' lvalue Var 0x55f42eebbaa0 'i_o' 'TValue *'
`-IntegerLiteral 0x55f42eebc0e0 <./lua.h:78:22> 'int' 4
[B6.27] = [B6.24]
  29: IntegerLiteral 0x55f42eebc128 <./llimits.h:62:31> 'int' 0
0
  30: CStyleCastExpr 0x55f42eebc158 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eebc128 <col:31> 'int' 0
(void)[B6.29] (CStyleCastExpr, ToVoid, void)
   T: break;
   Preds (1): B2
   Succs (1): B1

 [B0 (EXIT)]
   Preds (1): B1
