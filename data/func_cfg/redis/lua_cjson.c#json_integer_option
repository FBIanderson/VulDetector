static int json_integer_option(lua_State *l, int optindex, int *setting, int min, int max)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x563107e00b58 <lua_cjson.c:233:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x563107d56b80 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
lua_pushinteger
   2: ImplicitCastExpr 0x563107e00c68 <lua_cjson.c:233:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e00b58 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x563107d56b80 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_Integer))
   3: DeclRefExpr 0x563107e00b80 <lua_cjson.c:233:21> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e00cb8 <lua_cjson.c:233:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e00b80 <col:21> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e00ba8 <lua_cjson.c:233:25> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
setting
   6: ImplicitCastExpr 0x563107e00bd0 <lua_cjson.c:233:25> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e00ba8 <col:25> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
[B1.5] (ImplicitCastExpr, LValueToRValue, int *)
   7: UnaryOperator 0x563107e00be8 <lua_cjson.c:233:24, col:25> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e00bd0 <col:25> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e00ba8 <col:25> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
*[B1.6]
   8: ImplicitCastExpr 0x563107e00cd0 <lua_cjson.c:233:24, col:25> 'int' <LValueToRValue>
`-UnaryOperator 0x563107e00be8 <col:24, col:25> 'int' lvalue prefix '*'
  `-ImplicitCastExpr 0x563107e00bd0 <col:25> 'int *' <LValueToRValue>
    `-DeclRefExpr 0x563107e00ba8 <col:25> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
[B1.7] (ImplicitCastExpr, LValueToRValue, int)
   9: ImplicitCastExpr 0x563107e00ce8 <lua_cjson.c:233:24, col:25> 'lua_Integer':'long' <IntegralCast>
`-ImplicitCastExpr 0x563107e00cd0 <col:24, col:25> 'int' <LValueToRValue>
  `-UnaryOperator 0x563107e00be8 <col:24, col:25> 'int' lvalue prefix '*'
    `-ImplicitCastExpr 0x563107e00bd0 <col:25> 'int *' <LValueToRValue>
      `-DeclRefExpr 0x563107e00ba8 <col:25> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
[B1.8] (ImplicitCastExpr, IntegralCast, lua_Integer)
  10: CallExpr 0x563107e00c80 <lua_cjson.c:233:5, col:32> 'void'
|-ImplicitCastExpr 0x563107e00c68 <col:5> 'void (*)(lua_State *, lua_Integer)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e00b58 <col:5> 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)' Function 0x563107d56b80 'lua_pushinteger' 'void (lua_State *, lua_Integer)':'void (lua_State *, lua_Integer)'
|-ImplicitCastExpr 0x563107e00cb8 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e00b80 <col:21> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e00ce8 <col:24, col:25> 'lua_Integer':'long' <IntegralCast>
  `-ImplicitCastExpr 0x563107e00cd0 <col:24, col:25> 'int' <LValueToRValue>
    `-UnaryOperator 0x563107e00be8 <col:24, col:25> 'int' lvalue prefix '*'
      `-ImplicitCastExpr 0x563107e00bd0 <col:25> 'int *' <LValueToRValue>
        `-DeclRefExpr 0x563107e00ba8 <col:25> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
[B1.2]([B1.4], [B1.9])
  11: IntegerLiteral 0x563107e00d00 <lua_cjson.c:235:12> 'int' 1
1
  12: ReturnStmt 0x563107e00d20 <lua_cjson.c:235:5, col:12>
`-IntegerLiteral 0x563107e00d00 <col:12> 'int' 1
return [B1.11];
   Preds (2): B2 B6
   Succs (1): B0

 [B2]
   1: BinaryOperator 0x563107e00958 <./lauxlib.h:101:11, col:58> 'int' '||'
|-ParenExpr 0x563107e007c0 <col:11, col:16> 'int'
| `-BinaryOperator 0x563107e00798 <lua_cjson.c:229:26, col:51> 'int' '&&'
|   |-BinaryOperator 0x563107e006c8 <col:26, col:33> 'int' '<='
|   | |-ImplicitCastExpr 0x563107e00698 <col:26> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x563107e00648 <col:26> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
|   | `-ImplicitCastExpr 0x563107e006b0 <col:33> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563107e00670 <col:33> 'int' lvalue Var 0x563107dfff78 'value' 'int'
|   `-BinaryOperator 0x563107e00770 <col:42, col:51> 'int' '<='
|     |-ImplicitCastExpr 0x563107e00740 <col:42> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563107e006f0 <col:42> 'int' lvalue Var 0x563107dfff78 'value' 'int'
|     `-ImplicitCastExpr 0x563107e00758 <col:51> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x563107e00718 <col:51> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
`-CallExpr 0x563107e008d0 <./lauxlib.h:101:21, col:58> 'int'
  |-ImplicitCastExpr 0x563107e008b8 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e007e0 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x563107e00910 <lua_cjson.c:229:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e00808 <col:23> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
  |-ParenExpr 0x563107e00850 <./lauxlib.h:101:38, col:45> 'int'
  | `-IntegerLiteral 0x563107e00830 <lua_cjson.c:229:56> 'int' 1
  `-ImplicitCastExpr 0x563107e00940 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x563107e00928 <col:48, col:57> 'char *' <ArrayToPointerDecay>
      `-ParenExpr 0x563107e00898 <col:48, col:57> 'char [64]' lvalue
        `-DeclRefExpr 0x563107e00870 <lua_cjson.c:229:59> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
([B5.28] && [B4.5]) || [B3.9]
   2: CStyleCastExpr 0x563107e009e0 <./lauxlib.h:101:4, col:59> 'void' <ToVoid>
`-ParenExpr 0x563107e009c0 <col:10, col:59> 'int'
  `-BinaryOperator 0x563107e00958 <col:11, col:58> 'int' '||'
    |-ParenExpr 0x563107e007c0 <col:11, col:16> 'int'
    | `-BinaryOperator 0x563107e00798 <lua_cjson.c:229:26, col:51> 'int' '&&'
    |   |-BinaryOperator 0x563107e006c8 <col:26, col:33> 'int' '<='
    |   | |-ImplicitCastExpr 0x563107e00698 <col:26> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x563107e00648 <col:26> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
    |   | `-ImplicitCastExpr 0x563107e006b0 <col:33> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x563107e00670 <col:33> 'int' lvalue Var 0x563107dfff78 'value' 'int'
    |   `-BinaryOperator 0x563107e00770 <col:42, col:51> 'int' '<='
    |     |-ImplicitCastExpr 0x563107e00740 <col:42> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563107e006f0 <col:42> 'int' lvalue Var 0x563107dfff78 'value' 'int'
    |     `-ImplicitCastExpr 0x563107e00758 <col:51> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x563107e00718 <col:51> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
    `-CallExpr 0x563107e008d0 <./lauxlib.h:101:21, col:58> 'int'
      |-ImplicitCastExpr 0x563107e008b8 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x563107e007e0 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
      |-ImplicitCastExpr 0x563107e00910 <lua_cjson.c:229:23> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x563107e00808 <col:23> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
      |-ParenExpr 0x563107e00850 <./lauxlib.h:101:38, col:45> 'int'
      | `-IntegerLiteral 0x563107e00830 <lua_cjson.c:229:56> 'int' 1
      `-ImplicitCastExpr 0x563107e00940 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
        `-ImplicitCastExpr 0x563107e00928 <col:48, col:57> 'char *' <ArrayToPointerDecay>
          `-ParenExpr 0x563107e00898 <col:48, col:57> 'char [64]' lvalue
            `-DeclRefExpr 0x563107e00870 <lua_cjson.c:229:59> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
(void)([B2.1]) (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x563107e00a88 <lua_cjson.c:230:20> 'int' lvalue Var 0x563107dfff78 'value' 'int'
value
   4: ImplicitCastExpr 0x563107e00ab0 <lua_cjson.c:230:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e00a88 <col:20> 'int' lvalue Var 0x563107dfff78 'value' 'int'
[B2.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclRefExpr 0x563107e00a28 <lua_cjson.c:230:10> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
setting
   6: ImplicitCastExpr 0x563107e00a50 <lua_cjson.c:230:10> 'int *' <LValueToRValue>
`-DeclRefExpr 0x563107e00a28 <col:10> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
[B2.5] (ImplicitCastExpr, LValueToRValue, int *)
   7: UnaryOperator 0x563107e00a68 <lua_cjson.c:230:9, col:10> 'int' lvalue prefix '*'
`-ImplicitCastExpr 0x563107e00a50 <col:10> 'int *' <LValueToRValue>
  `-DeclRefExpr 0x563107e00a28 <col:10> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
*[B2.6]
   8: BinaryOperator 0x563107e00ac8 <lua_cjson.c:230:9, col:20> 'int' '='
|-UnaryOperator 0x563107e00a68 <col:9, col:10> 'int' lvalue prefix '*'
| `-ImplicitCastExpr 0x563107e00a50 <col:10> 'int *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e00a28 <col:10> 'int *' lvalue ParmVar 0x563107dffb48 'setting' 'int *'
`-ImplicitCastExpr 0x563107e00ab0 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e00a88 <col:20> 'int' lvalue Var 0x563107dfff78 'value' 'int'
[B2.7] = [B2.4]
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x563107e007e0 <./lauxlib.h:101:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
luaL_argerror
   2: ImplicitCastExpr 0x563107e008b8 <./lauxlib.h:101:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e007e0 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
   3: DeclRefExpr 0x563107e00808 <lua_cjson.c:229:23> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e00910 <lua_cjson.c:229:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e00808 <col:23> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e00830 <lua_cjson.c:229:56> 'int' 1
1
   6: DeclRefExpr 0x563107e00870 <lua_cjson.c:229:59> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
errmsg
   7: ImplicitCastExpr 0x563107e00928 <./lauxlib.h:101:48, col:57> 'char *' <ArrayToPointerDecay>
`-ParenExpr 0x563107e00898 <col:48, col:57> 'char [64]' lvalue
  `-DeclRefExpr 0x563107e00870 <lua_cjson.c:229:59> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
([B3.6]) (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x563107e00940 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e00928 <col:48, col:57> 'char *' <ArrayToPointerDecay>
  `-ParenExpr 0x563107e00898 <col:48, col:57> 'char [64]' lvalue
    `-DeclRefExpr 0x563107e00870 <lua_cjson.c:229:59> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
[B3.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x563107e008d0 <./lauxlib.h:101:21, col:58> 'int'
|-ImplicitCastExpr 0x563107e008b8 <col:21> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e007e0 <col:21> 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)' Function 0x563107d90d40 'luaL_argerror' 'int (lua_State *, int, const char *)':'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x563107e00910 <lua_cjson.c:229:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e00808 <col:23> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
|-ParenExpr 0x563107e00850 <./lauxlib.h:101:38, col:45> 'int'
| `-IntegerLiteral 0x563107e00830 <lua_cjson.c:229:56> 'int' 1
`-ImplicitCastExpr 0x563107e00940 <./lauxlib.h:101:48, col:57> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e00928 <col:48, col:57> 'char *' <ArrayToPointerDecay>
    `-ParenExpr 0x563107e00898 <col:48, col:57> 'char [64]' lvalue
      `-DeclRefExpr 0x563107e00870 <lua_cjson.c:229:59> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
[B3.2]([B3.4], ([B3.5]), [B3.8])
   Preds (2): B4 B5
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x563107e006f0 <lua_cjson.c:229:42> 'int' lvalue Var 0x563107dfff78 'value' 'int'
value
   2: ImplicitCastExpr 0x563107e00740 <lua_cjson.c:229:42> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e006f0 <col:42> 'int' lvalue Var 0x563107dfff78 'value' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x563107e00718 <lua_cjson.c:229:51> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
max
   4: ImplicitCastExpr 0x563107e00758 <lua_cjson.c:229:51> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e00718 <col:51> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
[B4.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x563107e00770 <lua_cjson.c:229:42, col:51> 'int' '<='
|-ImplicitCastExpr 0x563107e00740 <col:42> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e006f0 <col:42> 'int' lvalue Var 0x563107dfff78 'value' 'int'
`-ImplicitCastExpr 0x563107e00758 <col:51> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e00718 <col:51> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
[B4.2] <= [B4.4]
   T: ([B5.28] && [B4.5]) || ...
   Preds (1): B5
   Succs (2): B2 B3

 [B5]
   1: DeclRefExpr 0x563107e00218 <lua_cjson.c:227:17> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x563107d91a60 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
luaL_checkinteger
   2: ImplicitCastExpr 0x563107e002e8 <lua_cjson.c:227:17> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e00218 <col:17> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x563107d91a60 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Integer (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e00240 <lua_cjson.c:227:35> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e00338 <lua_cjson.c:227:35> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e00240 <col:35> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e00268 <lua_cjson.c:227:38> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
optindex
   6: ImplicitCastExpr 0x563107e00350 <lua_cjson.c:227:38> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e00268 <col:38> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
[B5.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x563107e00300 <lua_cjson.c:227:17, col:46> 'lua_Integer':'long'
|-ImplicitCastExpr 0x563107e002e8 <col:17> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e00218 <col:17> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x563107d91a60 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
|-ImplicitCastExpr 0x563107e00338 <col:35> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e00240 <col:35> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e00350 <col:38> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e00268 <col:38> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
[B5.2]([B5.4], [B5.6])
   8: ImplicitCastExpr 0x563107e00368 <lua_cjson.c:227:17, col:46> 'int' <IntegralCast>
`-CallExpr 0x563107e00300 <col:17, col:46> 'lua_Integer':'long'
  |-ImplicitCastExpr 0x563107e002e8 <col:17> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e00218 <col:17> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x563107d91a60 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
  |-ImplicitCastExpr 0x563107e00338 <col:35> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e00240 <col:35> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
  `-ImplicitCastExpr 0x563107e00350 <col:38> 'int' <LValueToRValue>
    `-DeclRefExpr 0x563107e00268 <col:38> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
[B5.7] (ImplicitCastExpr, IntegralCast, int)
   9: DeclRefExpr 0x563107e001f0 <lua_cjson.c:227:9> 'int' lvalue Var 0x563107dfff78 'value' 'int'
value
  10: BinaryOperator 0x563107e00380 <lua_cjson.c:227:9, col:46> 'int' '='
|-DeclRefExpr 0x563107e001f0 <col:9> 'int' lvalue Var 0x563107dfff78 'value' 'int'
`-ImplicitCastExpr 0x563107e00368 <col:17, col:46> 'int' <IntegralCast>
  `-CallExpr 0x563107e00300 <col:17, col:46> 'lua_Integer':'long'
    |-ImplicitCastExpr 0x563107e002e8 <col:17> 'lua_Integer (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563107e00218 <col:17> 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)' Function 0x563107d91a60 'luaL_checkinteger' 'lua_Integer (lua_State *, int)':'lua_Integer (lua_State *, int)'
    |-ImplicitCastExpr 0x563107e00338 <col:35> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x563107e00240 <col:35> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
    `-ImplicitCastExpr 0x563107e00350 <col:38> 'int' <LValueToRValue>
      `-DeclRefExpr 0x563107e00268 <col:38> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
[B5.9] = [B5.8]
  11: DeclRefExpr 0x563107e003a8 <lua_cjson.c:228:9> 'int (char *, unsigned long, const char *, ...)' Function 0x563107d76c78 'snprintf' 'int (char *, unsigned long, const char *, ...)'
snprintf
  12: ImplicitCastExpr 0x563107e00568 <lua_cjson.c:228:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e003a8 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x563107d76c78 'snprintf' 'int (char *, unsigned long, const char *, ...)'
[B5.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, unsigned long, const char *, ...))
  13: DeclRefExpr 0x563107e003d0 <lua_cjson.c:228:18> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
errmsg
  14: ImplicitCastExpr 0x563107e005d0 <lua_cjson.c:228:18> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x563107e003d0 <col:18> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
[B5.13] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  15: UnaryExprOrTypeTraitExpr 0x563107e00440 <lua_cjson.c:228:26, col:39> 'unsigned long' sizeof
`-ParenExpr 0x563107e00420 <col:32, col:39> 'char [64]' lvalue
  `-DeclRefExpr 0x563107e003f8 <col:33> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
sizeof (errmsg)
  16: StringLiteral 0x563107e00498 <lua_cjson.c:228:42> 'char [35]' lvalue "expected integer between %d and %d"
"expected integer between %d and %d"
  17: ImplicitCastExpr 0x563107e005e8 <lua_cjson.c:228:42> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e00498 <col:42> 'char [35]' lvalue "expected integer between %d and %d"
[B5.16] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  18: ImplicitCastExpr 0x563107e00600 <lua_cjson.c:228:42> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e005e8 <col:42> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e00498 <col:42> 'char [35]' lvalue "expected integer between %d and %d"
[B5.17] (ImplicitCastExpr, BitCast, const char *)
  19: DeclRefExpr 0x563107e004e8 <lua_cjson.c:228:80> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
min
  20: ImplicitCastExpr 0x563107e00618 <lua_cjson.c:228:80> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e004e8 <col:80> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
[B5.19] (ImplicitCastExpr, LValueToRValue, int)
  21: DeclRefExpr 0x563107e00510 <lua_cjson.c:228:85> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
max
  22: ImplicitCastExpr 0x563107e00630 <lua_cjson.c:228:85> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e00510 <col:85> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
[B5.21] (ImplicitCastExpr, LValueToRValue, int)
  23: CallExpr 0x563107e00580 <lua_cjson.c:228:9, col:88> 'int'
|-ImplicitCastExpr 0x563107e00568 <col:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e003a8 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x563107d76c78 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|-ImplicitCastExpr 0x563107e005d0 <col:18> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x563107e003d0 <col:18> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
|-UnaryExprOrTypeTraitExpr 0x563107e00440 <col:26, col:39> 'unsigned long' sizeof
| `-ParenExpr 0x563107e00420 <col:32, col:39> 'char [64]' lvalue
|   `-DeclRefExpr 0x563107e003f8 <col:33> 'char [64]' lvalue Var 0x563107dffee8 'errmsg' 'char [64]'
|-ImplicitCastExpr 0x563107e00600 <col:42> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e005e8 <col:42> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e00498 <col:42> 'char [35]' lvalue "expected integer between %d and %d"
|-ImplicitCastExpr 0x563107e00618 <col:80> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e004e8 <col:80> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
`-ImplicitCastExpr 0x563107e00630 <col:85> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e00510 <col:85> 'int' lvalue ParmVar 0x563107dffc38 'max' 'int'
[B5.12]([B5.14], [B5.15], [B5.18], [B5.20], [B5.22])
  24: DeclRefExpr 0x563107e00648 <lua_cjson.c:229:26> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
min
  25: ImplicitCastExpr 0x563107e00698 <lua_cjson.c:229:26> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e00648 <col:26> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
[B5.24] (ImplicitCastExpr, LValueToRValue, int)
  26: DeclRefExpr 0x563107e00670 <lua_cjson.c:229:33> 'int' lvalue Var 0x563107dfff78 'value' 'int'
value
  27: ImplicitCastExpr 0x563107e006b0 <lua_cjson.c:229:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e00670 <col:33> 'int' lvalue Var 0x563107dfff78 'value' 'int'
[B5.26] (ImplicitCastExpr, LValueToRValue, int)
  28: BinaryOperator 0x563107e006c8 <lua_cjson.c:229:26, col:33> 'int' '<='
|-ImplicitCastExpr 0x563107e00698 <col:26> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e00648 <col:26> 'int' lvalue ParmVar 0x563107dffbc0 'min' 'int'
`-ImplicitCastExpr 0x563107e006b0 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e00670 <col:33> 'int' lvalue Var 0x563107dfff78 'value' 'int'
[B5.25] <= [B5.27]
   T: [B5.28] && ...
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclStmt 0x563107dfff48 <lua_cjson.c:223:5, col:20>col:10
`-VarDecl 0x563107dffee8 <col:5, col:19> col:10 used errmsg 'char [64]'
char errmsg[64];
   2: DeclStmt 0x563107dfffd8 <lua_cjson.c:224:5, col:14>col:9
`-VarDecl 0x563107dfff78 <col:5, col:9> col:9 used value 'int'
int value;
   3: DeclRefExpr 0x563107dffff0 <./lua.h:267:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   4: ImplicitCastExpr 0x563107e000e8 <./lua.h:267:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107dffff0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B6.3] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   5: DeclRefExpr 0x563107e00018 <lua_cjson.c:226:20> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
l
   6: ImplicitCastExpr 0x563107e00138 <lua_cjson.c:226:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e00018 <col:20> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
[B6.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x563107e00040 <lua_cjson.c:226:23> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
optindex
   8: ImplicitCastExpr 0x563107e00150 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
`-ParenExpr 0x563107e00068 <col:38, col:40> 'int' lvalue
  `-DeclRefExpr 0x563107e00040 <lua_cjson.c:226:23> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
([B6.7]) (ImplicitCastExpr, LValueToRValue, int)
   9: CallExpr 0x563107e00100 <./lua.h:267:26, col:41> 'int'
|-ImplicitCastExpr 0x563107e000e8 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107dffff0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e00138 <lua_cjson.c:226:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e00018 <col:20> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e00150 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
  `-ParenExpr 0x563107e00068 <col:38, col:40> 'int' lvalue
    `-DeclRefExpr 0x563107e00040 <lua_cjson.c:226:23> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
[B6.4]([B6.6], [B6.8])
  10: IntegerLiteral 0x563107e00168 <./lua.h:74:19> 'int' 0
0
  11: BinaryOperator 0x563107e00188 <./lua.h:267:26, line:74:19> 'int' '=='
|-CallExpr 0x563107e00100 <line:267:26, col:41> 'int'
| |-ImplicitCastExpr 0x563107e000e8 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107dffff0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x563107e00138 <lua_cjson.c:226:20> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e00018 <col:20> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
| `-ImplicitCastExpr 0x563107e00150 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
|   `-ParenExpr 0x563107e00068 <col:38, col:40> 'int' lvalue
|     `-DeclRefExpr 0x563107e00040 <lua_cjson.c:226:23> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
`-IntegerLiteral 0x563107e00168 <./lua.h:74:19> 'int' 0
[B6.9] == [B6.10]
  12: UnaryOperator 0x563107e001d0 <lua_cjson.c:226:9, ./lua.h:267:54> 'int' prefix '!'
`-ParenExpr 0x563107e001b0 <col:25, col:54> 'int'
  `-BinaryOperator 0x563107e00188 <col:26, line:74:19> 'int' '=='
    |-CallExpr 0x563107e00100 <line:267:26, col:41> 'int'
    | |-ImplicitCastExpr 0x563107e000e8 <col:26> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563107dffff0 <col:26> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
    | |-ImplicitCastExpr 0x563107e00138 <lua_cjson.c:226:20> 'lua_State *' <LValueToRValue>
    | | `-DeclRefExpr 0x563107e00018 <col:20> 'lua_State *' lvalue ParmVar 0x563107dffa58 'l' 'lua_State *'
    | `-ImplicitCastExpr 0x563107e00150 <./lua.h:267:38, col:40> 'int' <LValueToRValue>
    |   `-ParenExpr 0x563107e00068 <col:38, col:40> 'int' lvalue
    |     `-DeclRefExpr 0x563107e00040 <lua_cjson.c:226:23> 'int' lvalue ParmVar 0x563107dffad0 'optindex' 'int'
    `-IntegerLiteral 0x563107e00168 <./lua.h:74:19> 'int' 0
!([B6.11])
   T: if [B6.12]
   Preds (1): B7
   Succs (2): B5 B1

 [B0 (EXIT)]
   Preds (1): B1
