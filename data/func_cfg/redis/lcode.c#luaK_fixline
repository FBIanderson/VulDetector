void luaK_fixline(FuncState *fs, int line)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768eada8 <lcode.c:785:33> 'int' lvalue ParmVar 0x5637768eaa40 'line' 'int'
line
   2: ImplicitCastExpr 0x5637768eadd0 <lcode.c:785:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768eada8 <col:33> 'int' lvalue ParmVar 0x5637768eaa40 'line' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5637768eabc8 <lcode.c:785:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768eabf0 <lcode.c:785:3> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768eabc8 <col:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: MemberExpr 0x5637768eac08 <lcode.c:785:3, col:7> 'Proto *' lvalue ->f 0x56377687ddb8
`-ImplicitCastExpr 0x5637768eabf0 <col:3> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eabc8 <col:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.4]->f
   6: ImplicitCastExpr 0x5637768eac40 <lcode.c:785:3, col:7> 'Proto *' <LValueToRValue>
`-MemberExpr 0x5637768eac08 <col:3, col:7> 'Proto *' lvalue ->f 0x56377687ddb8
  `-ImplicitCastExpr 0x5637768eabf0 <col:3> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768eabc8 <col:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.5] (ImplicitCastExpr, LValueToRValue, Proto *)
   7: MemberExpr 0x5637768eac58 <lcode.c:785:3, col:10> 'int *' lvalue ->lineinfo 0x563776857ff0
`-ImplicitCastExpr 0x5637768eac40 <col:3, col:7> 'Proto *' <LValueToRValue>
  `-MemberExpr 0x5637768eac08 <col:3, col:7> 'Proto *' lvalue ->f 0x56377687ddb8
    `-ImplicitCastExpr 0x5637768eabf0 <col:3> 'FuncState *' <LValueToRValue>
      `-DeclRefExpr 0x5637768eabc8 <col:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.6]->lineinfo
   8: ImplicitCastExpr 0x5637768ead68 <lcode.c:785:3, col:10> 'int *' <LValueToRValue>
`-MemberExpr 0x5637768eac58 <col:3, col:10> 'int *' lvalue ->lineinfo 0x563776857ff0
  `-ImplicitCastExpr 0x5637768eac40 <col:3, col:7> 'Proto *' <LValueToRValue>
    `-MemberExpr 0x5637768eac08 <col:3, col:7> 'Proto *' lvalue ->f 0x56377687ddb8
      `-ImplicitCastExpr 0x5637768eabf0 <col:3> 'FuncState *' <LValueToRValue>
        `-DeclRefExpr 0x5637768eabc8 <col:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.7] (ImplicitCastExpr, LValueToRValue, int *)
   9: DeclRefExpr 0x5637768eac90 <lcode.c:785:19> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
fs
  10: ImplicitCastExpr 0x5637768eacb8 <lcode.c:785:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768eac90 <col:19> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.9] (ImplicitCastExpr, LValueToRValue, FuncState *)
  11: MemberExpr 0x5637768eacd0 <lcode.c:785:19, col:23> 'int' lvalue ->pc 0x56377687e130
`-ImplicitCastExpr 0x5637768eacb8 <col:19> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768eac90 <col:19> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.10]->pc
  12: ImplicitCastExpr 0x5637768ead28 <lcode.c:785:19, col:23> 'int' <LValueToRValue>
`-MemberExpr 0x5637768eacd0 <col:19, col:23> 'int' lvalue ->pc 0x56377687e130
  `-ImplicitCastExpr 0x5637768eacb8 <col:19> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768eac90 <col:19> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
[B1.11] (ImplicitCastExpr, LValueToRValue, int)
  13: IntegerLiteral 0x5637768ead08 <lcode.c:785:28> 'int' 1
1
  14: BinaryOperator 0x5637768ead40 <lcode.c:785:19, col:28> 'int' '-'
|-ImplicitCastExpr 0x5637768ead28 <col:19, col:23> 'int' <LValueToRValue>
| `-MemberExpr 0x5637768eacd0 <col:19, col:23> 'int' lvalue ->pc 0x56377687e130
|   `-ImplicitCastExpr 0x5637768eacb8 <col:19> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768eac90 <col:19> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
`-IntegerLiteral 0x5637768ead08 <col:28> 'int' 1
[B1.12] - [B1.13]
  15: ArraySubscriptExpr 0x5637768ead80 <lcode.c:785:3, col:29> 'int' lvalue
|-ImplicitCastExpr 0x5637768ead68 <col:3, col:10> 'int *' <LValueToRValue>
| `-MemberExpr 0x5637768eac58 <col:3, col:10> 'int *' lvalue ->lineinfo 0x563776857ff0
|   `-ImplicitCastExpr 0x5637768eac40 <col:3, col:7> 'Proto *' <LValueToRValue>
|     `-MemberExpr 0x5637768eac08 <col:3, col:7> 'Proto *' lvalue ->f 0x56377687ddb8
|       `-ImplicitCastExpr 0x5637768eabf0 <col:3> 'FuncState *' <LValueToRValue>
|         `-DeclRefExpr 0x5637768eabc8 <col:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
`-BinaryOperator 0x5637768ead40 <col:19, col:28> 'int' '-'
  |-ImplicitCastExpr 0x5637768ead28 <col:19, col:23> 'int' <LValueToRValue>
  | `-MemberExpr 0x5637768eacd0 <col:19, col:23> 'int' lvalue ->pc 0x56377687e130
  |   `-ImplicitCastExpr 0x5637768eacb8 <col:19> 'FuncState *' <LValueToRValue>
  |     `-DeclRefExpr 0x5637768eac90 <col:19> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
  `-IntegerLiteral 0x5637768ead08 <col:28> 'int' 1
[B1.8][[B1.14]]
  16: BinaryOperator 0x5637768eade8 <lcode.c:785:3, col:33> 'int' '='
|-ArraySubscriptExpr 0x5637768ead80 <col:3, col:29> 'int' lvalue
| |-ImplicitCastExpr 0x5637768ead68 <col:3, col:10> 'int *' <LValueToRValue>
| | `-MemberExpr 0x5637768eac58 <col:3, col:10> 'int *' lvalue ->lineinfo 0x563776857ff0
| |   `-ImplicitCastExpr 0x5637768eac40 <col:3, col:7> 'Proto *' <LValueToRValue>
| |     `-MemberExpr 0x5637768eac08 <col:3, col:7> 'Proto *' lvalue ->f 0x56377687ddb8
| |       `-ImplicitCastExpr 0x5637768eabf0 <col:3> 'FuncState *' <LValueToRValue>
| |         `-DeclRefExpr 0x5637768eabc8 <col:3> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
| `-BinaryOperator 0x5637768ead40 <col:19, col:28> 'int' '-'
|   |-ImplicitCastExpr 0x5637768ead28 <col:19, col:23> 'int' <LValueToRValue>
|   | `-MemberExpr 0x5637768eacd0 <col:19, col:23> 'int' lvalue ->pc 0x56377687e130
|   |   `-ImplicitCastExpr 0x5637768eacb8 <col:19> 'FuncState *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5637768eac90 <col:19> 'FuncState *' lvalue ParmVar 0x5637768ea9c8 'fs' 'FuncState *'
|   `-IntegerLiteral 0x5637768ead08 <col:28> 'int' 1
`-ImplicitCastExpr 0x5637768eadd0 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5637768eada8 <col:33> 'int' lvalue ParmVar 0x5637768eaa40 'line' 'int'
[B1.15] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
