int table_is_an_array(lua_State *L)
 [B15 (ENTRY)]
   Succs (1): B14

 [B1]
   1: DeclRefExpr 0x55c2f9a09478 <lua_cmsgpack.c:461:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x55c2f9a094f0 <lua_cmsgpack.c:461:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a09478 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55c2f9a094a0 <lua_cmsgpack.c:461:16> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55c2f9a09540 <lua_cmsgpack.c:461:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a094a0 <col:16> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55c2f9a094c8 <lua_cmsgpack.c:461:19> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
stacktop
   6: ImplicitCastExpr 0x55c2f9a09558 <lua_cmsgpack.c:461:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a094c8 <col:19> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x55c2f9a09508 <lua_cmsgpack.c:461:5, col:27> 'void'
|-ImplicitCastExpr 0x55c2f9a094f0 <col:5> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a09478 <col:5> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55c2f9a09540 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a094a0 <col:16> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
`-ImplicitCastExpr 0x55c2f9a09558 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a094c8 <col:19> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
[B1.2]([B1.4], [B1.6])
   8: DeclRefExpr 0x55c2f9a09570 <lua_cmsgpack.c:462:12> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
max
   9: ImplicitCastExpr 0x55c2f9a095c0 <lua_cmsgpack.c:462:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a09570 <col:12> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B1.8] (ImplicitCastExpr, LValueToRValue, int)
  10: DeclRefExpr 0x55c2f9a09598 <lua_cmsgpack.c:462:19> 'int' lvalue Var 0x55c2f9a083c0 'count' 'int'
count
  11: ImplicitCastExpr 0x55c2f9a095d8 <lua_cmsgpack.c:462:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a09598 <col:19> 'int' lvalue Var 0x55c2f9a083c0 'count' 'int'
[B1.10] (ImplicitCastExpr, LValueToRValue, int)
  12: BinaryOperator 0x55c2f9a095f0 <lua_cmsgpack.c:462:12, col:19> 'int' '=='
|-ImplicitCastExpr 0x55c2f9a095c0 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a09570 <col:12> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
`-ImplicitCastExpr 0x55c2f9a095d8 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a09598 <col:19> 'int' lvalue Var 0x55c2f9a083c0 'count' 'int'
[B1.9] == [B1.11]
  13: ReturnStmt 0x55c2f9a09618 <lua_cmsgpack.c:462:5, col:19>
`-BinaryOperator 0x55c2f9a095f0 <col:12, col:19> 'int' '=='
  |-ImplicitCastExpr 0x55c2f9a095c0 <col:12> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x55c2f9a09570 <col:12> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
  `-ImplicitCastExpr 0x55c2f9a095d8 <col:19> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55c2f9a09598 <col:19> 'int' lvalue Var 0x55c2f9a083c0 'count' 'int'
return [B1.12];
   Preds (1): B13
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B13

 [B3]
   1: ConditionalOperator 0x55c2f9a09350 <lua_cmsgpack.c:453:16, col:30> 'double'
|-BinaryOperator 0x55c2f9a09290 <col:16, col:20> 'int' '>'
| |-ImplicitCastExpr 0x55c2f9a09248 <col:16> 'lua_Number':'double' <LValueToRValue>
| | `-DeclRefExpr 0x55c2f9a091f8 <col:16> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
| `-ImplicitCastExpr 0x55c2f9a09278 <col:20> 'double' <IntegralToFloating>
|   `-ImplicitCastExpr 0x55c2f9a09260 <col:20> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55c2f9a09220 <col:20> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
|-ImplicitCastExpr 0x55c2f9a09308 <col:26> 'lua_Number':'double' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a092b8 <col:26> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
`-ImplicitCastExpr 0x55c2f9a09338 <col:30> 'double' <IntegralToFloating>
  `-ImplicitCastExpr 0x55c2f9a09320 <col:30> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55c2f9a092e0 <col:30> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B6.6] ? [B4.2] : [B5.3]
   2: ImplicitCastExpr 0x55c2f9a093a0 <lua_cmsgpack.c:453:15, col:33> 'int' <FloatingToIntegral>
`-ParenExpr 0x55c2f9a09380 <col:15, col:33> 'double'
  `-ConditionalOperator 0x55c2f9a09350 <col:16, col:30> 'double'
    |-BinaryOperator 0x55c2f9a09290 <col:16, col:20> 'int' '>'
    | |-ImplicitCastExpr 0x55c2f9a09248 <col:16> 'lua_Number':'double' <LValueToRValue>
    | | `-DeclRefExpr 0x55c2f9a091f8 <col:16> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
    | `-ImplicitCastExpr 0x55c2f9a09278 <col:20> 'double' <IntegralToFloating>
    |   `-ImplicitCastExpr 0x55c2f9a09260 <col:20> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55c2f9a09220 <col:20> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
    |-ImplicitCastExpr 0x55c2f9a09308 <col:26> 'lua_Number':'double' <LValueToRValue>
    | `-DeclRefExpr 0x55c2f9a092b8 <col:26> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
    `-ImplicitCastExpr 0x55c2f9a09338 <col:30> 'double' <IntegralToFloating>
      `-ImplicitCastExpr 0x55c2f9a09320 <col:30> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55c2f9a092e0 <col:30> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
([B3.1]) (ImplicitCastExpr, FloatingToIntegral, int)
   3: DeclRefExpr 0x55c2f9a091d0 <lua_cmsgpack.c:453:9> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
max
   4: BinaryOperator 0x55c2f9a093b8 <lua_cmsgpack.c:453:9, col:33> 'int' '='
|-DeclRefExpr 0x55c2f9a091d0 <col:9> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
`-ImplicitCastExpr 0x55c2f9a093a0 <col:15, col:33> 'int' <FloatingToIntegral>
  `-ParenExpr 0x55c2f9a09380 <col:15, col:33> 'double'
    `-ConditionalOperator 0x55c2f9a09350 <col:16, col:30> 'double'
      |-BinaryOperator 0x55c2f9a09290 <col:16, col:20> 'int' '>'
      | |-ImplicitCastExpr 0x55c2f9a09248 <col:16> 'lua_Number':'double' <LValueToRValue>
      | | `-DeclRefExpr 0x55c2f9a091f8 <col:16> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
      | `-ImplicitCastExpr 0x55c2f9a09278 <col:20> 'double' <IntegralToFloating>
      |   `-ImplicitCastExpr 0x55c2f9a09260 <col:20> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x55c2f9a09220 <col:20> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
      |-ImplicitCastExpr 0x55c2f9a09308 <col:26> 'lua_Number':'double' <LValueToRValue>
      | `-DeclRefExpr 0x55c2f9a092b8 <col:26> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
      `-ImplicitCastExpr 0x55c2f9a09338 <col:30> 'double' <IntegralToFloating>
        `-ImplicitCastExpr 0x55c2f9a09320 <col:30> 'int' <LValueToRValue>
          `-DeclRefExpr 0x55c2f9a092e0 <col:30> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B3.3] = [B3.2]
   5: DeclRefExpr 0x55c2f9a093e0 <lua_cmsgpack.c:454:9> 'int' lvalue Var 0x55c2f9a083c0 'count' 'int'
count
   6: UnaryOperator 0x55c2f9a09408 <lua_cmsgpack.c:454:9, col:14> 'int' postfix '++'
`-DeclRefExpr 0x55c2f9a093e0 <col:9> 'int' lvalue Var 0x55c2f9a083c0 'count' 'int'
[B3.5]++
   Preds (2): B4 B5
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55c2f9a092b8 <lua_cmsgpack.c:453:26> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
n
   2: ImplicitCastExpr 0x55c2f9a09308 <lua_cmsgpack.c:453:26> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a092b8 <col:26> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
[B4.1] (ImplicitCastExpr, LValueToRValue, lua_Number)
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x55c2f9a092e0 <lua_cmsgpack.c:453:30> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
max
   2: ImplicitCastExpr 0x55c2f9a09320 <lua_cmsgpack.c:453:30> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a092e0 <col:30> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ImplicitCastExpr 0x55c2f9a09338 <lua_cmsgpack.c:453:30> 'double' <IntegralToFloating>
`-ImplicitCastExpr 0x55c2f9a09320 <col:30> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a092e0 <col:30> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B5.2] (ImplicitCastExpr, IntegralToFloating, double)
   Preds (1): B6
   Succs (1): B3

 [B6]
   1: DeclRefExpr 0x55c2f9a091f8 <lua_cmsgpack.c:453:16> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
n
   2: ImplicitCastExpr 0x55c2f9a09248 <lua_cmsgpack.c:453:16> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a091f8 <col:16> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
[B6.1] (ImplicitCastExpr, LValueToRValue, lua_Number)
   3: DeclRefExpr 0x55c2f9a09220 <lua_cmsgpack.c:453:20> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
max
   4: ImplicitCastExpr 0x55c2f9a09260 <lua_cmsgpack.c:453:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a09220 <col:20> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ImplicitCastExpr 0x55c2f9a09278 <lua_cmsgpack.c:453:20> 'double' <IntegralToFloating>
`-ImplicitCastExpr 0x55c2f9a09260 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a09220 <col:20> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B6.4] (ImplicitCastExpr, IntegralToFloating, double)
   6: BinaryOperator 0x55c2f9a09290 <lua_cmsgpack.c:453:16, col:20> 'int' '>'
|-ImplicitCastExpr 0x55c2f9a09248 <col:16> 'lua_Number':'double' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a091f8 <col:16> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
`-ImplicitCastExpr 0x55c2f9a09278 <col:20> 'double' <IntegralToFloating>
  `-ImplicitCastExpr 0x55c2f9a09260 <col:20> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55c2f9a09220 <col:20> 'int' lvalue Var 0x55c2f9a08458 'max' 'int'
[B6.2] > [B6.5]
   T: [B6.6] ? ... : ...
   Preds (1): B8
   Succs (2): B4 B5

 [B7]
   1: DeclRefExpr 0x55c2f9a09048 <lua_cmsgpack.c:450:13> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x55c2f9a090c0 <lua_cmsgpack.c:450:13> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a09048 <col:13> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55c2f9a09070 <lua_cmsgpack.c:450:24> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55c2f9a09110 <lua_cmsgpack.c:450:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a09070 <col:24> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x55c2f9a09098 <lua_cmsgpack.c:450:27> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
stacktop
   6: ImplicitCastExpr 0x55c2f9a09128 <lua_cmsgpack.c:450:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a09098 <col:27> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x55c2f9a090d8 <lua_cmsgpack.c:450:13, col:35> 'void'
|-ImplicitCastExpr 0x55c2f9a090c0 <col:13> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a09048 <col:13> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55c2f9a09110 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a09070 <col:24> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
`-ImplicitCastExpr 0x55c2f9a09128 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a09098 <col:27> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
[B7.2]([B7.4], [B7.6])
   8: IntegerLiteral 0x55c2f9a09140 <lua_cmsgpack.c:451:20> 'int' 0
0
   9: ReturnStmt 0x55c2f9a09160 <lua_cmsgpack.c:451:13, col:20>
`-IntegerLiteral 0x55c2f9a09140 <col:20> 'int' 0
return [B7.8];
   Preds (3): B8 B11 B12
   Succs (1): B0

 [B8]
   1: BinaryOperator 0x55c2f9a08fb8 <lua_cmsgpack.c:22:39, col:64> 'int' '&&'
|-UnaryOperator 0x55c2f9a08e28 <col:39, /usr/include/math.h:948:43> 'int' prefix '!'
| `-CallExpr 0x55c2f9a08de0 <col:20, col:43> 'int'
|   |-ImplicitCastExpr 0x55c2f9a08dc8 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
|   | `-DeclRefExpr 0x55c2f9a08d78 <col:20> '<builtin fn type>' Function 0x55c2f9a05898 '__builtin_isinf_sign' 'int ()'
|   `-ImplicitCastExpr 0x55c2f9a08e10 <lua_cmsgpack.c:445:32> 'lua_Number':'double' <LValueToRValue>
|     `-DeclRefExpr 0x55c2f9a08da0 <col:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
`-BinaryOperator 0x55c2f9a08f90 <line:22:52, col:64> 'int' '=='
  |-ImplicitCastExpr 0x55c2f9a08f78 <col:52, col:57> 'double' <IntegralToFloating>
  | `-CStyleCastExpr 0x55c2f9a08ef0 <col:52, col:57> 'int' <FloatingToIntegral>
  |   `-ImplicitCastExpr 0x55c2f9a08ed8 <col:55, col:57> 'lua_Number':'double' <LValueToRValue>
  |     `-ParenExpr 0x55c2f9a08eb8 <col:55, col:57> 'lua_Number':'double' lvalue
  |       `-DeclRefExpr 0x55c2f9a08e48 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
  `-ImplicitCastExpr 0x55c2f9a08f60 <line:22:62, col:64> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x55c2f9a08f40 <col:62, col:64> 'lua_Number':'double' lvalue
      `-DeclRefExpr 0x55c2f9a08f18 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
[B10.6] && [B9.7]
   2: UnaryOperator 0x55c2f9a09000 <lua_cmsgpack.c:445:13, line:22:65> 'int' prefix '!'
`-ParenExpr 0x55c2f9a08fe0 <col:38, col:65> 'int'
  `-BinaryOperator 0x55c2f9a08fb8 <col:39, col:64> 'int' '&&'
    |-UnaryOperator 0x55c2f9a08e28 <col:39, /usr/include/math.h:948:43> 'int' prefix '!'
    | `-CallExpr 0x55c2f9a08de0 <col:20, col:43> 'int'
    |   |-ImplicitCastExpr 0x55c2f9a08dc8 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
    |   | `-DeclRefExpr 0x55c2f9a08d78 <col:20> '<builtin fn type>' Function 0x55c2f9a05898 '__builtin_isinf_sign' 'int ()'
    |   `-ImplicitCastExpr 0x55c2f9a08e10 <lua_cmsgpack.c:445:32> 'lua_Number':'double' <LValueToRValue>
    |     `-DeclRefExpr 0x55c2f9a08da0 <col:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
    `-BinaryOperator 0x55c2f9a08f90 <line:22:52, col:64> 'int' '=='
      |-ImplicitCastExpr 0x55c2f9a08f78 <col:52, col:57> 'double' <IntegralToFloating>
      | `-CStyleCastExpr 0x55c2f9a08ef0 <col:52, col:57> 'int' <FloatingToIntegral>
      |   `-ImplicitCastExpr 0x55c2f9a08ed8 <col:55, col:57> 'lua_Number':'double' <LValueToRValue>
      |     `-ParenExpr 0x55c2f9a08eb8 <col:55, col:57> 'lua_Number':'double' lvalue
      |       `-DeclRefExpr 0x55c2f9a08e48 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
      `-ImplicitCastExpr 0x55c2f9a08f60 <line:22:62, col:64> 'lua_Number':'double' <LValueToRValue>
        `-ParenExpr 0x55c2f9a08f40 <col:62, col:64> 'lua_Number':'double' lvalue
          `-DeclRefExpr 0x55c2f9a08f18 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
!([B8.1])
   T: if ([B12.18]) || [B11.12] || [B8.2]
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x55c2f9a08e48 <lua_cmsgpack.c:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
n
   2: ImplicitCastExpr 0x55c2f9a08ed8 <lua_cmsgpack.c:22:55, col:57> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x55c2f9a08eb8 <col:55, col:57> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x55c2f9a08e48 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
([B9.1]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   3: CStyleCastExpr 0x55c2f9a08ef0 <lua_cmsgpack.c:22:52, col:57> 'int' <FloatingToIntegral>
`-ImplicitCastExpr 0x55c2f9a08ed8 <col:55, col:57> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x55c2f9a08eb8 <col:55, col:57> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x55c2f9a08e48 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
(int)[B9.2] (CStyleCastExpr, FloatingToIntegral, int)
   4: ImplicitCastExpr 0x55c2f9a08f78 <lua_cmsgpack.c:22:52, col:57> 'double' <IntegralToFloating>
`-CStyleCastExpr 0x55c2f9a08ef0 <col:52, col:57> 'int' <FloatingToIntegral>
  `-ImplicitCastExpr 0x55c2f9a08ed8 <col:55, col:57> 'lua_Number':'double' <LValueToRValue>
    `-ParenExpr 0x55c2f9a08eb8 <col:55, col:57> 'lua_Number':'double' lvalue
      `-DeclRefExpr 0x55c2f9a08e48 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
[B9.3] (ImplicitCastExpr, IntegralToFloating, double)
   5: DeclRefExpr 0x55c2f9a08f18 <lua_cmsgpack.c:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
n
   6: ImplicitCastExpr 0x55c2f9a08f60 <lua_cmsgpack.c:22:62, col:64> 'lua_Number':'double' <LValueToRValue>
`-ParenExpr 0x55c2f9a08f40 <col:62, col:64> 'lua_Number':'double' lvalue
  `-DeclRefExpr 0x55c2f9a08f18 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
([B9.5]) (ImplicitCastExpr, LValueToRValue, lua_Number)
   7: BinaryOperator 0x55c2f9a08f90 <lua_cmsgpack.c:22:52, col:64> 'int' '=='
|-ImplicitCastExpr 0x55c2f9a08f78 <col:52, col:57> 'double' <IntegralToFloating>
| `-CStyleCastExpr 0x55c2f9a08ef0 <col:52, col:57> 'int' <FloatingToIntegral>
|   `-ImplicitCastExpr 0x55c2f9a08ed8 <col:55, col:57> 'lua_Number':'double' <LValueToRValue>
|     `-ParenExpr 0x55c2f9a08eb8 <col:55, col:57> 'lua_Number':'double' lvalue
|       `-DeclRefExpr 0x55c2f9a08e48 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
`-ImplicitCastExpr 0x55c2f9a08f60 <line:22:62, col:64> 'lua_Number':'double' <LValueToRValue>
  `-ParenExpr 0x55c2f9a08f40 <col:62, col:64> 'lua_Number':'double' lvalue
    `-DeclRefExpr 0x55c2f9a08f18 <line:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
[B9.4] == [B9.6]
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x55c2f9a08d78 </usr/include/math.h:948:20> '<builtin fn type>' Function 0x55c2f9a05898 '__builtin_isinf_sign' 'int ()'
__builtin_isinf_sign
   2: ImplicitCastExpr 0x55c2f9a08dc8 </usr/include/math.h:948:20> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x55c2f9a08d78 <col:20> '<builtin fn type>' Function 0x55c2f9a05898 '__builtin_isinf_sign' 'int ()'
[B10.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x55c2f9a08da0 <lua_cmsgpack.c:445:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
n
   4: ImplicitCastExpr 0x55c2f9a08e10 <lua_cmsgpack.c:445:32> 'lua_Number':'double' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a08da0 <col:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_Number)
   5: CallExpr 0x55c2f9a08de0 </usr/include/math.h:948:20, col:43> 'int'
|-ImplicitCastExpr 0x55c2f9a08dc8 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x55c2f9a08d78 <col:20> '<builtin fn type>' Function 0x55c2f9a05898 '__builtin_isinf_sign' 'int ()'
`-ImplicitCastExpr 0x55c2f9a08e10 <lua_cmsgpack.c:445:32> 'lua_Number':'double' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a08da0 <col:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
[B10.2]([B10.4])
   6: UnaryOperator 0x55c2f9a08e28 <lua_cmsgpack.c:22:39, /usr/include/math.h:948:43> 'int' prefix '!'
`-CallExpr 0x55c2f9a08de0 <col:20, col:43> 'int'
  |-ImplicitCastExpr 0x55c2f9a08dc8 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
  | `-DeclRefExpr 0x55c2f9a08d78 <col:20> '<builtin fn type>' Function 0x55c2f9a05898 '__builtin_isinf_sign' 'int ()'
  `-ImplicitCastExpr 0x55c2f9a08e10 <lua_cmsgpack.c:445:32> 'lua_Number':'double' <LValueToRValue>
    `-DeclRefExpr 0x55c2f9a08da0 <col:32> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
![B10.5]
   T: [B10.6] && ...
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x55c2f9a08bb0 <lua_cmsgpack.c:444:53> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55c2f99ad320 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
lua_tonumber
   2: ImplicitCastExpr 0x55c2f9a08c40 <lua_cmsgpack.c:444:53> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a08bb0 <col:53> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55c2f99ad320 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   3: DeclRefExpr 0x55c2f9a08bd8 <lua_cmsgpack.c:444:66> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55c2f9a08c90 <lua_cmsgpack.c:444:66> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a08bd8 <col:66> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55c2f9a08c00 <lua_cmsgpack.c:444:70> 'int' 1
1
   6: UnaryOperator 0x55c2f9a08c20 <lua_cmsgpack.c:444:69, col:70> 'int' prefix '-'
`-IntegerLiteral 0x55c2f9a08c00 <col:70> 'int' 1
-[B11.5]
   7: CallExpr 0x55c2f9a08c58 <lua_cmsgpack.c:444:53, col:71> 'lua_Number':'double'
|-ImplicitCastExpr 0x55c2f9a08c40 <col:53> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a08bb0 <col:53> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55c2f99ad320 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x55c2f9a08c90 <col:66> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a08bd8 <col:66> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
`-UnaryOperator 0x55c2f9a08c20 <col:69, col:70> 'int' prefix '-'
  `-IntegerLiteral 0x55c2f9a08c00 <col:70> 'int' 1
[B11.2]([B11.4], [B11.6])
   8: DeclRefExpr 0x55c2f9a08b88 <lua_cmsgpack.c:444:49> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
n
   9: BinaryOperator 0x55c2f9a08ca8 <lua_cmsgpack.c:444:49, col:71> 'lua_Number':'double' '='
|-DeclRefExpr 0x55c2f9a08b88 <col:49> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
`-CallExpr 0x55c2f9a08c58 <col:53, col:71> 'lua_Number':'double'
  |-ImplicitCastExpr 0x55c2f9a08c40 <col:53> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55c2f9a08bb0 <col:53> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55c2f99ad320 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
  |-ImplicitCastExpr 0x55c2f9a08c90 <col:66> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55c2f9a08bd8 <col:66> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
  `-UnaryOperator 0x55c2f9a08c20 <col:69, col:70> 'int' prefix '-'
    `-IntegerLiteral 0x55c2f9a08c00 <col:70> 'int' 1
[B11.8] = [B11.7]
  10: IntegerLiteral 0x55c2f9a08cf0 <lua_cmsgpack.c:444:77> 'int' 0
0
  11: ImplicitCastExpr 0x55c2f9a08d10 <lua_cmsgpack.c:444:77> 'double' <IntegralToFloating>
`-IntegerLiteral 0x55c2f9a08cf0 <col:77> 'int' 0
[B11.10] (ImplicitCastExpr, IntegralToFloating, double)
  12: BinaryOperator 0x55c2f9a08d28 <lua_cmsgpack.c:444:48, col:77> 'int' '<='
|-ParenExpr 0x55c2f9a08cd0 <col:48, col:72> 'lua_Number':'double'
| `-BinaryOperator 0x55c2f9a08ca8 <col:49, col:71> 'lua_Number':'double' '='
|   |-DeclRefExpr 0x55c2f9a08b88 <col:49> 'lua_Number':'double' lvalue Var 0x55c2f9a08518 'n' 'lua_Number':'double'
|   `-CallExpr 0x55c2f9a08c58 <col:53, col:71> 'lua_Number':'double'
|     |-ImplicitCastExpr 0x55c2f9a08c40 <col:53> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55c2f9a08bb0 <col:53> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x55c2f99ad320 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|     |-ImplicitCastExpr 0x55c2f9a08c90 <col:66> 'lua_State *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c2f9a08bd8 <col:66> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
|     `-UnaryOperator 0x55c2f9a08c20 <col:69, col:70> 'int' prefix '-'
|       `-IntegerLiteral 0x55c2f9a08c00 <col:70> 'int' 1
`-ImplicitCastExpr 0x55c2f9a08d10 <col:77> 'double' <IntegralToFloating>
  `-IntegerLiteral 0x55c2f9a08cf0 <col:77> 'int' 0
([B11.9]) <= [B11.11]
   T: ([B12.18]) || [B11.12] || ...
   Preds (1): B12
   Succs (2): B7 B10

 [B12]
   1: DeclRefExpr 0x55c2f9a088c8 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
   2: ImplicitCastExpr 0x55c2f9a089c0 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a088c8 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
   3: DeclRefExpr 0x55c2f9a088f0 <lua_cmsgpack.c:441:17> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55c2f9a08a10 <lua_cmsgpack.c:441:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a088f0 <col:17> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55c2f9a08918 <lua_cmsgpack.c:441:19> 'int' 1
1
   6: UnaryOperator 0x55c2f9a08958 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x55c2f9a08938 <col:38, col:40> 'int'
  `-IntegerLiteral 0x55c2f9a08918 <lua_cmsgpack.c:441:19> 'int' 1
-([B12.5])
   7: IntegerLiteral 0x55c2f9a08978 <./lua.h:254:42> 'int' 1
1
   8: BinaryOperator 0x55c2f9a08998 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x55c2f9a08958 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x55c2f9a08938 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x55c2f9a08918 <lua_cmsgpack.c:441:19> 'int' 1
`-IntegerLiteral 0x55c2f9a08978 <./lua.h:254:42> 'int' 1
[B12.6] - [B12.7]
   9: CallExpr 0x55c2f9a089d8 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x55c2f9a089c0 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a088c8 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x55c2f99a6f80 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x55c2f9a08a10 <lua_cmsgpack.c:441:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a088f0 <col:17> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
`-BinaryOperator 0x55c2f9a08998 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x55c2f9a08958 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x55c2f9a08938 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x55c2f9a08918 <lua_cmsgpack.c:441:19> 'int' 1
  `-IntegerLiteral 0x55c2f9a08978 <./lua.h:254:42> 'int' 1
[B12.2]([B12.4], [B12.8])
  10: IntegerLiteral 0x55c2f9a08a28 <./lua.h:77:22> 'int' 3
3
  11: DeclRefExpr 0x55c2f9a08a48 <lua_cmsgpack.c:444:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55c2f99ac5e0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
  12: ImplicitCastExpr 0x55c2f9a08ad8 <lua_cmsgpack.c:444:29> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a08a48 <col:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55c2f99ac5e0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B12.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  13: DeclRefExpr 0x55c2f9a08a70 <lua_cmsgpack.c:444:38> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x55c2f9a08b28 <lua_cmsgpack.c:444:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a08a70 <col:38> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B12.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: IntegerLiteral 0x55c2f9a08a98 <lua_cmsgpack.c:444:41> 'int' 1
1
  16: UnaryOperator 0x55c2f9a08ab8 <lua_cmsgpack.c:444:40, col:41> 'int' prefix '-'
`-IntegerLiteral 0x55c2f9a08a98 <col:41> 'int' 1
-[B12.15]
  17: CallExpr 0x55c2f9a08af0 <lua_cmsgpack.c:444:29, col:42> 'int'
|-ImplicitCastExpr 0x55c2f9a08ad8 <col:29> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a08a48 <col:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55c2f99ac5e0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55c2f9a08b28 <col:38> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a08a70 <col:38> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
`-UnaryOperator 0x55c2f9a08ab8 <col:40, col:41> 'int' prefix '-'
  `-IntegerLiteral 0x55c2f9a08a98 <col:41> 'int' 1
[B12.12]([B12.14], [B12.16])
  18: BinaryOperator 0x55c2f9a08b40 <./lua.h:77:22, lua_cmsgpack.c:444:42> 'int' '!='
|-IntegerLiteral 0x55c2f9a08a28 <./lua.h:77:22> 'int' 3
`-CallExpr 0x55c2f9a08af0 <lua_cmsgpack.c:444:29, col:42> 'int'
  |-ImplicitCastExpr 0x55c2f9a08ad8 <col:29> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55c2f9a08a48 <col:29> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55c2f99ac5e0 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x55c2f9a08b28 <col:38> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55c2f9a08a70 <col:38> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
  `-UnaryOperator 0x55c2f9a08ab8 <col:40, col:41> 'int' prefix '-'
    `-IntegerLiteral 0x55c2f9a08a98 <col:41> 'int' 1
[B12.10] != [B12.17]
   T: ([B12.18]) || ...
   Preds (1): B13
   Succs (2): B7 B11

 [B13]
   1: DeclRefExpr 0x55c2f9a087d0 <lua_cmsgpack.c:439:11> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55c2f99b4c78 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_next
   2: ImplicitCastExpr 0x55c2f9a08860 <lua_cmsgpack.c:439:11> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a087d0 <col:11> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55c2f99b4c78 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x55c2f9a087f8 <lua_cmsgpack.c:439:20> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55c2f9a088b0 <lua_cmsgpack.c:439:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a087f8 <col:20> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B13.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55c2f9a08820 <lua_cmsgpack.c:439:23> 'int' 2
2
   6: UnaryOperator 0x55c2f9a08840 <lua_cmsgpack.c:439:22, col:23> 'int' prefix '-'
`-IntegerLiteral 0x55c2f9a08820 <col:23> 'int' 2
-[B13.5]
   7: CallExpr 0x55c2f9a08878 <lua_cmsgpack.c:439:11, col:24> 'int'
|-ImplicitCastExpr 0x55c2f9a08860 <col:11> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a087d0 <col:11> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x55c2f99b4c78 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x55c2f9a088b0 <col:20> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55c2f9a087f8 <col:20> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
`-UnaryOperator 0x55c2f9a08840 <col:22, col:23> 'int' prefix '-'
  `-IntegerLiteral 0x55c2f9a08820 <col:23> 'int' 2
[B13.2]([B13.4], [B13.6])
   T: while [B13.7]
   Preds (2): B2 B14
   Succs (2): B12 B1

 [B14]
   1: IntegerLiteral 0x55c2f9a08420 <lua_cmsgpack.c:426:17> 'int' 0
0
   2: DeclStmt 0x55c2f9a33918 <lua_cmsgpack.c:426:9, col:17>col:9
`-VarDecl 0x55c2f9a083c0 <col:5, col:17> col:9 used count 'int' cinit
  `-IntegerLiteral 0x55c2f9a08420 <col:17> 'int' 0
int count = 0;
   3: IntegerLiteral 0x55c2f9a084b8 <lua_cmsgpack.c:426:26> 'int' 0
0
   4: DeclStmt 0x55c2f9a33900 <lua_cmsgpack.c:426:20, col:26>col:20
`-VarDecl 0x55c2f9a08458 <col:5, col:26> col:20 used max 'int' cinit
  `-IntegerLiteral 0x55c2f9a084b8 <col:26> 'int' 0
int max = 0;
   5: DeclStmt 0x55c2f9a08578 <lua_cmsgpack.c:428:5, col:17>col:16
`-VarDecl 0x55c2f9a08518 <col:5, col:16> col:16 used n 'lua_Number':'double'
lua_Number n;
   6: DeclStmt 0x55c2f9a08608 <lua_cmsgpack.c:434:5, col:17>col:9
`-VarDecl 0x55c2f9a085a8 <col:5, col:9> col:9 used stacktop 'int'
int stacktop;
   7: DeclRefExpr 0x55c2f9a08648 <lua_cmsgpack.c:436:16> 'int (lua_State *)':'int (lua_State *)' Function 0x55c2f99a6d08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
   8: ImplicitCastExpr 0x55c2f9a08698 <lua_cmsgpack.c:436:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a08648 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x55c2f99a6d08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B14.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   9: DeclRefExpr 0x55c2f9a08670 <lua_cmsgpack.c:436:27> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x55c2f9a086e0 <lua_cmsgpack.c:436:27> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a08670 <col:27> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B14.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: CallExpr 0x55c2f9a086b0 <lua_cmsgpack.c:436:16, col:28> 'int'
|-ImplicitCastExpr 0x55c2f9a08698 <col:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a08648 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x55c2f99a6d08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x55c2f9a086e0 <col:27> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a08670 <col:27> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B14.8]([B14.10])
  12: DeclRefExpr 0x55c2f9a08620 <lua_cmsgpack.c:436:5> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
stacktop
  13: BinaryOperator 0x55c2f9a086f8 <lua_cmsgpack.c:436:5, col:28> 'int' '='
|-DeclRefExpr 0x55c2f9a08620 <col:5> 'int' lvalue Var 0x55c2f9a085a8 'stacktop' 'int'
`-CallExpr 0x55c2f9a086b0 <col:16, col:28> 'int'
  |-ImplicitCastExpr 0x55c2f9a08698 <col:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55c2f9a08648 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x55c2f99a6d08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
  `-ImplicitCastExpr 0x55c2f9a086e0 <col:27> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55c2f9a08670 <col:27> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B14.12] = [B14.11]
  14: DeclRefExpr 0x55c2f9a08720 <lua_cmsgpack.c:438:5> 'void (lua_State *)':'void (lua_State *)' Function 0x55c2f99ae8a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
  15: ImplicitCastExpr 0x55c2f9a08770 <lua_cmsgpack.c:438:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55c2f9a08720 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x55c2f99ae8a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B14.14] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
  16: DeclRefExpr 0x55c2f9a08748 <lua_cmsgpack.c:438:17> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x55c2f9a087b8 <lua_cmsgpack.c:438:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55c2f9a08748 <col:17> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B14.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: CallExpr 0x55c2f9a08788 <lua_cmsgpack.c:438:5, col:18> 'void'
|-ImplicitCastExpr 0x55c2f9a08770 <col:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55c2f9a08720 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x55c2f99ae8a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x55c2f9a087b8 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55c2f9a08748 <col:17> 'lua_State *' lvalue ParmVar 0x55c2f9a08220 'L' 'lua_State *'
[B14.15]([B14.17])
   Preds (1): B15
   Succs (1): B13

 [B0 (EXIT)]
   Preds (2): B1 B7
