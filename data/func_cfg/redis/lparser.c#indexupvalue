static int indexupvalue(FuncState *fs, TString *name, expdesc *v)
 [B18 (ENTRY)]
   Succs (1): B17

 [B1]
   1: IntegerLiteral 0x558fa8efa1a8 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x558fa8efa1d8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x558fa8efa1a8 <col:31> 'int' 0
(void)[B1.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x558fa8efa3a0 <lparser.c:201:39> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
v
   4: ImplicitCastExpr 0x558fa8efa3c8 <lparser.c:201:39> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x558fa8efa3a0 <col:39> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.3] (ImplicitCastExpr, LValueToRValue, expdesc *)
   5: MemberExpr 0x558fa8efa3e0 <lparser.c:201:39, col:42> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
`-ImplicitCastExpr 0x558fa8efa3c8 <col:39> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8efa3a0 <col:39> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.4]->k
   6: ImplicitCastExpr 0x558fa8efae80 <./llimits.h:75:26, col:30> 'expkind':'expkind' <LValueToRValue>
`-ParenExpr 0x558fa8efae60 <col:26, col:30> 'expkind':'expkind' lvalue
  `-ParenExpr 0x558fa8efa418 <line:78:36, col:38> 'expkind':'expkind' lvalue
    `-MemberExpr 0x558fa8efa3e0 <lparser.c:201:39, col:42> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
      `-ImplicitCastExpr 0x558fa8efa3c8 <col:39> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8efa3a0 <col:39> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
(([B1.5])) (ImplicitCastExpr, LValueToRValue, expkind)
   7: CStyleCastExpr 0x558fa8efae98 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x558fa8efae80 <col:26, col:30> 'expkind':'expkind' <LValueToRValue>
  `-ParenExpr 0x558fa8efae60 <col:26, col:30> 'expkind':'expkind' lvalue
    `-ParenExpr 0x558fa8efa418 <line:78:36, col:38> 'expkind':'expkind' lvalue
      `-MemberExpr 0x558fa8efa3e0 <lparser.c:201:39, col:42> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
        `-ImplicitCastExpr 0x558fa8efa3c8 <col:39> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x558fa8efa3a0 <col:39> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
(lu_byte)[B1.6] (CStyleCastExpr, IntegralCast, lu_byte)
   8: DeclRefExpr 0x558fa8efa220 <lparser.c:201:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
   9: ImplicitCastExpr 0x558fa8efa248 <lparser.c:201:3> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8efa220 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B1.8] (ImplicitCastExpr, LValueToRValue, FuncState *)
  10: MemberExpr 0x558fa8efa260 <lparser.c:201:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
`-ImplicitCastExpr 0x558fa8efa248 <col:3> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8efa220 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B1.9]->upvalues
  11: ImplicitCastExpr 0x558fa8efa310 <lparser.c:201:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
`-MemberExpr 0x558fa8efa260 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  `-ImplicitCastExpr 0x558fa8efa248 <col:3> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8efa220 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B1.10] (ImplicitCastExpr, ArrayToPointerDecay, upvaldesc *)
  12: DeclRefExpr 0x558fa8efa298 <lparser.c:201:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
  13: ImplicitCastExpr 0x558fa8efa2c0 <lparser.c:201:16> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8efa298 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.12] (ImplicitCastExpr, LValueToRValue, Proto *)
  14: MemberExpr 0x558fa8efa2d8 <lparser.c:201:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
`-ImplicitCastExpr 0x558fa8efa2c0 <col:16> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8efa298 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.13]->nups
  15: ImplicitCastExpr 0x558fa8efa328 <lparser.c:201:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8efa2d8 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
  `-ImplicitCastExpr 0x558fa8efa2c0 <col:16> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8efa298 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.14] (ImplicitCastExpr, LValueToRValue, lu_byte)
  16: ArraySubscriptExpr 0x558fa8efa340 <lparser.c:201:3, col:23> 'upvaldesc':'struct upvaldesc' lvalue
|-ImplicitCastExpr 0x558fa8efa310 <col:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
| `-MemberExpr 0x558fa8efa260 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|   `-ImplicitCastExpr 0x558fa8efa248 <col:3> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8efa220 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
`-ImplicitCastExpr 0x558fa8efa328 <col:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8efa2d8 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
    `-ImplicitCastExpr 0x558fa8efa2c0 <col:16> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8efa298 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.11][[B1.15]]
  17: MemberExpr 0x558fa8efa368 <lparser.c:201:3, col:25> 'lu_byte':'unsigned char' lvalue .k 0x558fa8eb3b60
`-ArraySubscriptExpr 0x558fa8efa340 <col:3, col:23> 'upvaldesc':'struct upvaldesc' lvalue
  |-ImplicitCastExpr 0x558fa8efa310 <col:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
  | `-MemberExpr 0x558fa8efa260 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  |   `-ImplicitCastExpr 0x558fa8efa248 <col:3> 'FuncState *' <LValueToRValue>
  |     `-DeclRefExpr 0x558fa8efa220 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
  `-ImplicitCastExpr 0x558fa8efa328 <col:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
    `-MemberExpr 0x558fa8efa2d8 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
      `-ImplicitCastExpr 0x558fa8efa2c0 <col:16> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8efa298 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.16].k
  18: BinaryOperator 0x558fa8efaee0 <lparser.c:201:3, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x558fa8efa368 <lparser.c:201:3, col:25> 'lu_byte':'unsigned char' lvalue .k 0x558fa8eb3b60
| `-ArraySubscriptExpr 0x558fa8efa340 <col:3, col:23> 'upvaldesc':'struct upvaldesc' lvalue
|   |-ImplicitCastExpr 0x558fa8efa310 <col:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
|   | `-MemberExpr 0x558fa8efa260 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|   |   `-ImplicitCastExpr 0x558fa8efa248 <col:3> 'FuncState *' <LValueToRValue>
|   |     `-DeclRefExpr 0x558fa8efa220 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
|   `-ImplicitCastExpr 0x558fa8efa328 <col:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
|     `-MemberExpr 0x558fa8efa2d8 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
|       `-ImplicitCastExpr 0x558fa8efa2c0 <col:16> 'Proto *' <LValueToRValue>
|         `-DeclRefExpr 0x558fa8efa298 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-ParenExpr 0x558fa8efaec0 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x558fa8efae98 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x558fa8efae80 <col:26, col:30> 'expkind':'expkind' <LValueToRValue>
      `-ParenExpr 0x558fa8efae60 <col:26, col:30> 'expkind':'expkind' lvalue
        `-ParenExpr 0x558fa8efa418 <line:78:36, col:38> 'expkind':'expkind' lvalue
          `-MemberExpr 0x558fa8efa3e0 <lparser.c:201:39, col:42> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
            `-ImplicitCastExpr 0x558fa8efa3c8 <col:39> 'expdesc *' <LValueToRValue>
              `-DeclRefExpr 0x558fa8efa3a0 <col:39> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.17] = ([B1.7])
  19: DeclRefExpr 0x558fa8efb088 <lparser.c:202:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
v
  20: ImplicitCastExpr 0x558fa8efb0b0 <lparser.c:202:42> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x558fa8efb088 <col:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.19] (ImplicitCastExpr, LValueToRValue, expdesc *)
  21: MemberExpr 0x558fa8efb0c8 <lparser.c:202:42, col:45> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
`-ImplicitCastExpr 0x558fa8efb0b0 <col:42> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8efb088 <col:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.20]->u
  22: MemberExpr 0x558fa8efb100 <lparser.c:202:42, col:47> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
`-MemberExpr 0x558fa8efb0c8 <col:42, col:45> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
  `-ImplicitCastExpr 0x558fa8efb0b0 <col:42> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8efb088 <col:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.21].s
  23: MemberExpr 0x558fa8efb138 <lparser.c:202:42, col:49> 'int' lvalue .info 0x558fa8eb1028
`-MemberExpr 0x558fa8efb100 <col:42, col:47> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
  `-MemberExpr 0x558fa8efb0c8 <col:42, col:45> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
    `-ImplicitCastExpr 0x558fa8efb0b0 <col:42> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8efb088 <col:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.22].info
  24: ImplicitCastExpr 0x558fa8efb1f0 <./llimits.h:75:26, col:30> 'int' <LValueToRValue>
`-ParenExpr 0x558fa8efb1d0 <col:26, col:30> 'int' lvalue
  `-ParenExpr 0x558fa8efb170 <line:78:36, col:38> 'int' lvalue
    `-MemberExpr 0x558fa8efb138 <lparser.c:202:42, col:49> 'int' lvalue .info 0x558fa8eb1028
      `-MemberExpr 0x558fa8efb100 <col:42, col:47> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
        `-MemberExpr 0x558fa8efb0c8 <col:42, col:45> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
          `-ImplicitCastExpr 0x558fa8efb0b0 <col:42> 'expdesc *' <LValueToRValue>
            `-DeclRefExpr 0x558fa8efb088 <col:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
(([B1.23])) (ImplicitCastExpr, LValueToRValue, int)
  25: CStyleCastExpr 0x558fa8efb208 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ImplicitCastExpr 0x558fa8efb1f0 <col:26, col:30> 'int' <LValueToRValue>
  `-ParenExpr 0x558fa8efb1d0 <col:26, col:30> 'int' lvalue
    `-ParenExpr 0x558fa8efb170 <line:78:36, col:38> 'int' lvalue
      `-MemberExpr 0x558fa8efb138 <lparser.c:202:42, col:49> 'int' lvalue .info 0x558fa8eb1028
        `-MemberExpr 0x558fa8efb100 <col:42, col:47> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
          `-MemberExpr 0x558fa8efb0c8 <col:42, col:45> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
            `-ImplicitCastExpr 0x558fa8efb0b0 <col:42> 'expdesc *' <LValueToRValue>
              `-DeclRefExpr 0x558fa8efb088 <col:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
(lu_byte)[B1.24] (CStyleCastExpr, IntegralCast, lu_byte)
  26: DeclRefExpr 0x558fa8efaf08 <lparser.c:202:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
  27: ImplicitCastExpr 0x558fa8efaf30 <lparser.c:202:3> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8efaf08 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B1.26] (ImplicitCastExpr, LValueToRValue, FuncState *)
  28: MemberExpr 0x558fa8efaf48 <lparser.c:202:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
`-ImplicitCastExpr 0x558fa8efaf30 <col:3> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8efaf08 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B1.27]->upvalues
  29: ImplicitCastExpr 0x558fa8efaff8 <lparser.c:202:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
`-MemberExpr 0x558fa8efaf48 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  `-ImplicitCastExpr 0x558fa8efaf30 <col:3> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8efaf08 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B1.28] (ImplicitCastExpr, ArrayToPointerDecay, upvaldesc *)
  30: DeclRefExpr 0x558fa8efaf80 <lparser.c:202:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
  31: ImplicitCastExpr 0x558fa8efafa8 <lparser.c:202:16> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8efaf80 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.30] (ImplicitCastExpr, LValueToRValue, Proto *)
  32: MemberExpr 0x558fa8efafc0 <lparser.c:202:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
`-ImplicitCastExpr 0x558fa8efafa8 <col:16> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8efaf80 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.31]->nups
  33: ImplicitCastExpr 0x558fa8efb010 <lparser.c:202:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8efafc0 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
  `-ImplicitCastExpr 0x558fa8efafa8 <col:16> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8efaf80 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.32] (ImplicitCastExpr, LValueToRValue, lu_byte)
  34: ArraySubscriptExpr 0x558fa8efb028 <lparser.c:202:3, col:23> 'upvaldesc':'struct upvaldesc' lvalue
|-ImplicitCastExpr 0x558fa8efaff8 <col:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
| `-MemberExpr 0x558fa8efaf48 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|   `-ImplicitCastExpr 0x558fa8efaf30 <col:3> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8efaf08 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
`-ImplicitCastExpr 0x558fa8efb010 <col:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8efafc0 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
    `-ImplicitCastExpr 0x558fa8efafa8 <col:16> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8efaf80 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.29][[B1.33]]
  35: MemberExpr 0x558fa8efb050 <lparser.c:202:3, col:25> 'lu_byte':'unsigned char' lvalue .info 0x558fa8eb3bb8
`-ArraySubscriptExpr 0x558fa8efb028 <col:3, col:23> 'upvaldesc':'struct upvaldesc' lvalue
  |-ImplicitCastExpr 0x558fa8efaff8 <col:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
  | `-MemberExpr 0x558fa8efaf48 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  |   `-ImplicitCastExpr 0x558fa8efaf30 <col:3> 'FuncState *' <LValueToRValue>
  |     `-DeclRefExpr 0x558fa8efaf08 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
  `-ImplicitCastExpr 0x558fa8efb010 <col:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
    `-MemberExpr 0x558fa8efafc0 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
      `-ImplicitCastExpr 0x558fa8efafa8 <col:16> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8efaf80 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.34].info
  36: BinaryOperator 0x558fa8efb250 <lparser.c:202:3, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x558fa8efb050 <lparser.c:202:3, col:25> 'lu_byte':'unsigned char' lvalue .info 0x558fa8eb3bb8
| `-ArraySubscriptExpr 0x558fa8efb028 <col:3, col:23> 'upvaldesc':'struct upvaldesc' lvalue
|   |-ImplicitCastExpr 0x558fa8efaff8 <col:3, col:7> 'upvaldesc *' <ArrayToPointerDecay>
|   | `-MemberExpr 0x558fa8efaf48 <col:3, col:7> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|   |   `-ImplicitCastExpr 0x558fa8efaf30 <col:3> 'FuncState *' <LValueToRValue>
|   |     `-DeclRefExpr 0x558fa8efaf08 <col:3> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
|   `-ImplicitCastExpr 0x558fa8efb010 <col:16, col:19> 'lu_byte':'unsigned char' <LValueToRValue>
|     `-MemberExpr 0x558fa8efafc0 <col:16, col:19> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
|       `-ImplicitCastExpr 0x558fa8efafa8 <col:16> 'Proto *' <LValueToRValue>
|         `-DeclRefExpr 0x558fa8efaf80 <col:16> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-ParenExpr 0x558fa8efb230 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x558fa8efb208 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ImplicitCastExpr 0x558fa8efb1f0 <col:26, col:30> 'int' <LValueToRValue>
      `-ParenExpr 0x558fa8efb1d0 <col:26, col:30> 'int' lvalue
        `-ParenExpr 0x558fa8efb170 <line:78:36, col:38> 'int' lvalue
          `-MemberExpr 0x558fa8efb138 <lparser.c:202:42, col:49> 'int' lvalue .info 0x558fa8eb1028
            `-MemberExpr 0x558fa8efb100 <col:42, col:47> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
              `-MemberExpr 0x558fa8efb0c8 <col:42, col:45> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
                `-ImplicitCastExpr 0x558fa8efb0b0 <col:42> 'expdesc *' <LValueToRValue>
                  `-DeclRefExpr 0x558fa8efb088 <col:42> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B1.35] = ([B1.25])
  37: DeclRefExpr 0x558fa8efb278 <lparser.c:203:10> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
  38: ImplicitCastExpr 0x558fa8efb2a0 <lparser.c:203:10> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8efb278 <col:10> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.37] (ImplicitCastExpr, LValueToRValue, Proto *)
  39: MemberExpr 0x558fa8efb2b8 <lparser.c:203:10, col:13> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
`-ImplicitCastExpr 0x558fa8efb2a0 <col:10> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8efb278 <col:10> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.38]->nups
  40: UnaryOperator 0x558fa8efb2f0 <lparser.c:203:10, col:17> 'lu_byte':'unsigned char' postfix '++'
`-MemberExpr 0x558fa8efb2b8 <col:10, col:13> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
  `-ImplicitCastExpr 0x558fa8efb2a0 <col:10> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8efb278 <col:10> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.39]++
  41: ImplicitCastExpr 0x558fa8efb310 <lparser.c:203:10, col:17> 'int' <IntegralCast>
`-UnaryOperator 0x558fa8efb2f0 <col:10, col:17> 'lu_byte':'unsigned char' postfix '++'
  `-MemberExpr 0x558fa8efb2b8 <col:10, col:13> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
    `-ImplicitCastExpr 0x558fa8efb2a0 <col:10> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8efb278 <col:10> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B1.40] (ImplicitCastExpr, IntegralCast, int)
  42: ReturnStmt 0x558fa8efb328 <lparser.c:203:3, col:17>
`-ImplicitCastExpr 0x558fa8efb310 <col:10, col:17> 'int' <IntegralCast>
  `-UnaryOperator 0x558fa8efb2f0 <col:10, col:17> 'lu_byte':'unsigned char' postfix '++'
    `-MemberExpr 0x558fa8efb2b8 <col:10, col:13> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
      `-ImplicitCastExpr 0x558fa8efb2a0 <col:10> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8efb278 <col:10> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
return [B1.41];
   Preds (3): B2 B3 B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x558fa8ef9de8 <./lgc.h:94:3> 'void (lua_State *, GCObject *, GCObject *)' Function 0x558fa8e24960 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
luaC_barrierf
   2: ImplicitCastExpr 0x558fa8efa0d8 <./lgc.h:94:3> 'void (*)(lua_State *, GCObject *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8ef9de8 <col:3> 'void (lua_State *, GCObject *, GCObject *)' Function 0x558fa8e24960 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, GCObject *, GCObject *))
   3: DeclRefExpr 0x558fa8ef9e10 <lparser.c:199:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x558fa8ef9e38 <lparser.c:199:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef9e10 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: MemberExpr 0x558fa8ef9e50 <lparser.c:199:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
`-ImplicitCastExpr 0x558fa8ef9e38 <col:19> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef9e10 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B2.4]->L
   6: ImplicitCastExpr 0x558fa8efa130 <lparser.c:199:19, col:23> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x558fa8ef9e50 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
  `-ImplicitCastExpr 0x558fa8ef9e38 <col:19> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef9e10 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B2.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: DeclRefExpr 0x558fa8ef9e88 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   8: ImplicitCastExpr 0x558fa8ef9f30 <./llimits.h:75:26, col:30> 'Proto *' <LValueToRValue>
`-ParenExpr 0x558fa8ef9f10 <col:26, col:30> 'Proto *' lvalue
  `-ParenExpr 0x558fa8ef9eb0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
    `-DeclRefExpr 0x558fa8ef9e88 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
(([B2.7])) (ImplicitCastExpr, LValueToRValue, Proto *)
   9: CStyleCastExpr 0x558fa8ef9f48 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x558fa8ef9f30 <col:26, col:30> 'Proto *' <LValueToRValue>
  `-ParenExpr 0x558fa8ef9f10 <col:26, col:30> 'Proto *' lvalue
    `-ParenExpr 0x558fa8ef9eb0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
      `-DeclRefExpr 0x558fa8ef9e88 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
(GCObject *)[B2.8] (CStyleCastExpr, BitCast, GCObject *)
  10: DeclRefExpr 0x558fa8ef9fb0 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
name
  11: ImplicitCastExpr 0x558fa8efa058 <./llimits.h:75:26, col:30> 'TString *' <LValueToRValue>
`-ParenExpr 0x558fa8efa038 <col:26, col:30> 'TString *' lvalue
  `-ParenExpr 0x558fa8ef9fd8 <./lstate.h:162:38, col:40> 'TString *' lvalue
    `-DeclRefExpr 0x558fa8ef9fb0 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
(([B2.10])) (ImplicitCastExpr, LValueToRValue, TString *)
  12: CStyleCastExpr 0x558fa8efa070 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x558fa8efa058 <col:26, col:30> 'TString *' <LValueToRValue>
  `-ParenExpr 0x558fa8efa038 <col:26, col:30> 'TString *' lvalue
    `-ParenExpr 0x558fa8ef9fd8 <./lstate.h:162:38, col:40> 'TString *' lvalue
      `-DeclRefExpr 0x558fa8ef9fb0 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
(GCObject *)[B2.11] (CStyleCastExpr, BitCast, GCObject *)
  13: CallExpr 0x558fa8efa0f0 <./lgc.h:94:3, col:40> 'void'
|-ImplicitCastExpr 0x558fa8efa0d8 <col:3> 'void (*)(lua_State *, GCObject *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8ef9de8 <col:3> 'void (lua_State *, GCObject *, GCObject *)' Function 0x558fa8e24960 'luaC_barrierf' 'void (lua_State *, GCObject *, GCObject *)'
|-ImplicitCastExpr 0x558fa8efa130 <lparser.c:199:19, col:23> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x558fa8ef9e50 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
|   `-ImplicitCastExpr 0x558fa8ef9e38 <col:19> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef9e10 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
|-ParenExpr 0x558fa8ef9f90 <./lstate.h:162:20, col:42> 'GCObject *'
| `-ParenExpr 0x558fa8ef9f70 <./llimits.h:75:22, col:31> 'GCObject *'
|   `-CStyleCastExpr 0x558fa8ef9f48 <col:23, col:30> 'GCObject *' <BitCast>
|     `-ImplicitCastExpr 0x558fa8ef9f30 <col:26, col:30> 'Proto *' <LValueToRValue>
|       `-ParenExpr 0x558fa8ef9f10 <col:26, col:30> 'Proto *' lvalue
|         `-ParenExpr 0x558fa8ef9eb0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
|           `-DeclRefExpr 0x558fa8ef9e88 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-ParenExpr 0x558fa8efa0b8 <./lstate.h:162:20, col:42> 'GCObject *'
  `-ParenExpr 0x558fa8efa098 <./llimits.h:75:22, col:31> 'GCObject *'
    `-CStyleCastExpr 0x558fa8efa070 <col:23, col:30> 'GCObject *' <BitCast>
      `-ImplicitCastExpr 0x558fa8efa058 <col:26, col:30> 'TString *' <LValueToRValue>
        `-ParenExpr 0x558fa8efa038 <col:26, col:30> 'TString *' lvalue
          `-ParenExpr 0x558fa8ef9fd8 <./lstate.h:162:38, col:40> 'TString *' lvalue
            `-DeclRefExpr 0x558fa8ef9fb0 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
[B2.2]([B2.6], (([B2.9])), (([B2.12])))
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x558fa8ef9b50 <./llimits.h:75:26, col:30> 'Proto *' <LValueToRValue>
`-ParenExpr 0x558fa8ef9b30 <col:26, col:30> 'Proto *' lvalue
  `-ParenExpr 0x558fa8ef9ad0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
    `-DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
(([B3.1])) (ImplicitCastExpr, LValueToRValue, Proto *)
   3: CStyleCastExpr 0x558fa8ef9b68 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x558fa8ef9b50 <col:26, col:30> 'Proto *' <LValueToRValue>
  `-ParenExpr 0x558fa8ef9b30 <col:26, col:30> 'Proto *' lvalue
    `-ParenExpr 0x558fa8ef9ad0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
      `-DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
(GCObject *)[B3.2] (CStyleCastExpr, BitCast, GCObject *)
   4: MemberExpr 0x558fa8ef9bf0 <./lgc.h:66:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
`-ParenExpr 0x558fa8ef9bd0 <col:33, col:35> 'GCObject *'
  `-ParenExpr 0x558fa8ef9bb0 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x558fa8ef9b90 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x558fa8ef9b68 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x558fa8ef9b50 <col:26, col:30> 'Proto *' <LValueToRValue>
          `-ParenExpr 0x558fa8ef9b30 <col:26, col:30> 'Proto *' lvalue
            `-ParenExpr 0x558fa8ef9ad0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
              `-DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
((([B3.3])))->gch
   5: MemberExpr 0x558fa8ef9c28 <./lgc.h:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
`-MemberExpr 0x558fa8ef9bf0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
  `-ParenExpr 0x558fa8ef9bd0 <col:33, col:35> 'GCObject *'
    `-ParenExpr 0x558fa8ef9bb0 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x558fa8ef9b90 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x558fa8ef9b68 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x558fa8ef9b50 <col:26, col:30> 'Proto *' <LValueToRValue>
            `-ParenExpr 0x558fa8ef9b30 <col:26, col:30> 'Proto *' lvalue
              `-ParenExpr 0x558fa8ef9ad0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
                `-DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B3.4].marked
   6: ImplicitCastExpr 0x558fa8ef9d48 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x558fa8ef9c60 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x558fa8ef9c28 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
    `-MemberExpr 0x558fa8ef9bf0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
      `-ParenExpr 0x558fa8ef9bd0 <col:33, col:35> 'GCObject *'
        `-ParenExpr 0x558fa8ef9bb0 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x558fa8ef9b90 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x558fa8ef9b68 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x558fa8ef9b50 <col:26, col:30> 'Proto *' <LValueToRValue>
                `-ParenExpr 0x558fa8ef9b30 <col:26, col:30> 'Proto *' lvalue
                  `-ParenExpr 0x558fa8ef9ad0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
                    `-DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
([B3.5]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x558fa8ef9d60 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef9d48 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x558fa8ef9c60 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x558fa8ef9c28 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
      `-MemberExpr 0x558fa8ef9bf0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
        `-ParenExpr 0x558fa8ef9bd0 <col:33, col:35> 'GCObject *'
          `-ParenExpr 0x558fa8ef9bb0 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x558fa8ef9b90 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x558fa8ef9b68 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x558fa8ef9b50 <col:26, col:30> 'Proto *' <LValueToRValue>
                  `-ParenExpr 0x558fa8ef9b30 <col:26, col:30> 'Proto *' lvalue
                    `-ParenExpr 0x558fa8ef9ad0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
                      `-DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B3.6] (ImplicitCastExpr, IntegralCast, int)
   8: IntegerLiteral 0x558fa8ef9c80 <./lgc.h:30:21> 'int' 1
1
   9: IntegerLiteral 0x558fa8ef9ca0 <./lgc.h:56:18> 'int' 2
2
  10: BinaryOperator 0x558fa8ef9ce0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x558fa8ef9c80 <col:21> 'int' 1
`-ParenExpr 0x558fa8ef9cc0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x558fa8ef9ca0 <line:56:18> 'int' 2
[B3.8] << ([B3.9])
  11: BinaryOperator 0x558fa8ef9d78 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x558fa8ef9d60 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef9d48 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x558fa8ef9c60 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x558fa8ef9c28 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
|       `-MemberExpr 0x558fa8ef9bf0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
|         `-ParenExpr 0x558fa8ef9bd0 <col:33, col:35> 'GCObject *'
|           `-ParenExpr 0x558fa8ef9bb0 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x558fa8ef9b90 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x558fa8ef9b68 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x558fa8ef9b50 <col:26, col:30> 'Proto *' <LValueToRValue>
|                   `-ParenExpr 0x558fa8ef9b30 <col:26, col:30> 'Proto *' lvalue
|                     `-ParenExpr 0x558fa8ef9ad0 <./lstate.h:162:38, col:40> 'Proto *' lvalue
|                       `-DeclRefExpr 0x558fa8ef9aa8 <lparser.c:199:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-ParenExpr 0x558fa8ef9d28 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x558fa8ef9d08 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x558fa8ef9ce0 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x558fa8ef9c80 <col:21> 'int' 1
      `-ParenExpr 0x558fa8ef9cc0 <col:24, col:26> 'int'
        `-IntegerLiteral 0x558fa8ef9ca0 <line:56:18> 'int' 2
[B3.7] & (([B3.10]))
   T: if ([B4.27]) && ([B3.11])
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x558fa8ef9618 <lparser.c:198:26> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
name
   2: ImplicitCastExpr 0x558fa8ef9640 <lparser.c:198:26> 'TString *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef9618 <col:26> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
[B4.1] (ImplicitCastExpr, LValueToRValue, TString *)
   3: DeclRefExpr 0x558fa8ef94d0 <lparser.c:198:3> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x558fa8ef94f8 <lparser.c:198:3> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef94d0 <col:3> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B4.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x558fa8ef9510 <lparser.c:198:3, col:6> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
`-ImplicitCastExpr 0x558fa8ef94f8 <col:3> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef94d0 <col:3> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B4.4]->upvalues
   6: ImplicitCastExpr 0x558fa8ef95c0 <lparser.c:198:3, col:6> 'TString **' <LValueToRValue>
`-MemberExpr 0x558fa8ef9510 <col:3, col:6> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
  `-ImplicitCastExpr 0x558fa8ef94f8 <col:3> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef94d0 <col:3> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B4.5] (ImplicitCastExpr, LValueToRValue, TString **)
   7: DeclRefExpr 0x558fa8ef9548 <lparser.c:198:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   8: ImplicitCastExpr 0x558fa8ef9570 <lparser.c:198:15> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef9548 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B4.7] (ImplicitCastExpr, LValueToRValue, Proto *)
   9: MemberExpr 0x558fa8ef9588 <lparser.c:198:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
`-ImplicitCastExpr 0x558fa8ef9570 <col:15> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef9548 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B4.8]->nups
  10: ImplicitCastExpr 0x558fa8ef95d8 <lparser.c:198:15, col:18> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8ef9588 <col:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
  `-ImplicitCastExpr 0x558fa8ef9570 <col:15> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef9548 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B4.9] (ImplicitCastExpr, LValueToRValue, lu_byte)
  11: ArraySubscriptExpr 0x558fa8ef95f0 <lparser.c:198:3, col:22> 'TString *' lvalue
|-ImplicitCastExpr 0x558fa8ef95c0 <col:3, col:6> 'TString **' <LValueToRValue>
| `-MemberExpr 0x558fa8ef9510 <col:3, col:6> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
|   `-ImplicitCastExpr 0x558fa8ef94f8 <col:3> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef94d0 <col:3> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-ImplicitCastExpr 0x558fa8ef95d8 <col:15, col:18> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8ef9588 <col:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
    `-ImplicitCastExpr 0x558fa8ef9570 <col:15> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef9548 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B4.6][[B4.10]]
  12: BinaryOperator 0x558fa8ef9658 <lparser.c:198:3, col:26> 'TString *' '='
|-ArraySubscriptExpr 0x558fa8ef95f0 <col:3, col:22> 'TString *' lvalue
| |-ImplicitCastExpr 0x558fa8ef95c0 <col:3, col:6> 'TString **' <LValueToRValue>
| | `-MemberExpr 0x558fa8ef9510 <col:3, col:6> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
| |   `-ImplicitCastExpr 0x558fa8ef94f8 <col:3> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x558fa8ef94d0 <col:3> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
| `-ImplicitCastExpr 0x558fa8ef95d8 <col:15, col:18> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x558fa8ef9588 <col:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
|     `-ImplicitCastExpr 0x558fa8ef9570 <col:15> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x558fa8ef9548 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-ImplicitCastExpr 0x558fa8ef9640 <col:26> 'TString *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef9618 <col:26> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
[B4.11] = [B4.2]
  13: DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
name
  14: ImplicitCastExpr 0x558fa8ef9728 <./llimits.h:75:26, col:30> 'TString *' <LValueToRValue>
`-ParenExpr 0x558fa8ef9708 <col:26, col:30> 'TString *' lvalue
  `-ParenExpr 0x558fa8ef96a8 <./lstate.h:162:38, col:40> 'TString *' lvalue
    `-DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
(([B4.13])) (ImplicitCastExpr, LValueToRValue, TString *)
  15: CStyleCastExpr 0x558fa8ef9740 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x558fa8ef9728 <col:26, col:30> 'TString *' <LValueToRValue>
  `-ParenExpr 0x558fa8ef9708 <col:26, col:30> 'TString *' lvalue
    `-ParenExpr 0x558fa8ef96a8 <./lstate.h:162:38, col:40> 'TString *' lvalue
      `-DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
(GCObject *)[B4.14] (CStyleCastExpr, BitCast, GCObject *)
  16: MemberExpr 0x558fa8ef97c8 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
`-ParenExpr 0x558fa8ef97a8 <col:35, col:37> 'GCObject *'
  `-ParenExpr 0x558fa8ef9788 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x558fa8ef9768 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x558fa8ef9740 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x558fa8ef9728 <col:26, col:30> 'TString *' <LValueToRValue>
          `-ParenExpr 0x558fa8ef9708 <col:26, col:30> 'TString *' lvalue
            `-ParenExpr 0x558fa8ef96a8 <./lstate.h:162:38, col:40> 'TString *' lvalue
              `-DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
((([B4.15])))->gch
  17: MemberExpr 0x558fa8ef9800 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
`-MemberExpr 0x558fa8ef97c8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
  `-ParenExpr 0x558fa8ef97a8 <col:35, col:37> 'GCObject *'
    `-ParenExpr 0x558fa8ef9788 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x558fa8ef9768 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x558fa8ef9740 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x558fa8ef9728 <col:26, col:30> 'TString *' <LValueToRValue>
            `-ParenExpr 0x558fa8ef9708 <col:26, col:30> 'TString *' lvalue
              `-ParenExpr 0x558fa8ef96a8 <./lstate.h:162:38, col:40> 'TString *' lvalue
                `-DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
[B4.16].marked
  18: ImplicitCastExpr 0x558fa8ef9a30 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x558fa8ef9838 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x558fa8ef9800 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
    `-MemberExpr 0x558fa8ef97c8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
      `-ParenExpr 0x558fa8ef97a8 <col:35, col:37> 'GCObject *'
        `-ParenExpr 0x558fa8ef9788 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x558fa8ef9768 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x558fa8ef9740 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x558fa8ef9728 <col:26, col:30> 'TString *' <LValueToRValue>
                `-ParenExpr 0x558fa8ef9708 <col:26, col:30> 'TString *' lvalue
                  `-ParenExpr 0x558fa8ef96a8 <./lstate.h:162:38, col:40> 'TString *' lvalue
                    `-DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
([B4.17]) (ImplicitCastExpr, LValueToRValue, lu_byte)
  19: ImplicitCastExpr 0x558fa8ef9a48 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef9a30 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x558fa8ef9838 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x558fa8ef9800 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
      `-MemberExpr 0x558fa8ef97c8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
        `-ParenExpr 0x558fa8ef97a8 <col:35, col:37> 'GCObject *'
          `-ParenExpr 0x558fa8ef9788 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x558fa8ef9768 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x558fa8ef9740 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x558fa8ef9728 <col:26, col:30> 'TString *' <LValueToRValue>
                  `-ParenExpr 0x558fa8ef9708 <col:26, col:30> 'TString *' lvalue
                    `-ParenExpr 0x558fa8ef96a8 <./lstate.h:162:38, col:40> 'TString *' lvalue
                      `-DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
[B4.18] (ImplicitCastExpr, IntegralCast, int)
  20: IntegerLiteral 0x558fa8ef9858 <./lgc.h:30:21> 'int' 1
1
  21: IntegerLiteral 0x558fa8ef9878 <./lgc.h:54:19> 'int' 0
0
  22: BinaryOperator 0x558fa8ef98b8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x558fa8ef9858 <col:21> 'int' 1
`-ParenExpr 0x558fa8ef9898 <col:24, col:26> 'int'
  `-IntegerLiteral 0x558fa8ef9878 <line:54:19> 'int' 0
[B4.20] << ([B4.21])
  23: IntegerLiteral 0x558fa8ef9900 <./lgc.h:30:21> 'int' 1
1
  24: IntegerLiteral 0x558fa8ef9920 <./lgc.h:55:19> 'int' 1
1
  25: BinaryOperator 0x558fa8ef9960 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x558fa8ef9900 <col:21> 'int' 1
`-ParenExpr 0x558fa8ef9940 <col:24, col:26> 'int'
  `-IntegerLiteral 0x558fa8ef9920 <line:55:19> 'int' 1
[B4.23] << ([B4.24])
  26: BinaryOperator 0x558fa8ef99a8 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x558fa8ef98e0 <col:20, col:27> 'int'
| `-BinaryOperator 0x558fa8ef98b8 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x558fa8ef9858 <col:21> 'int' 1
|   `-ParenExpr 0x558fa8ef9898 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x558fa8ef9878 <line:54:19> 'int' 0
`-ParenExpr 0x558fa8ef9988 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x558fa8ef9960 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x558fa8ef9900 <col:21> 'int' 1
    `-ParenExpr 0x558fa8ef9940 <col:24, col:26> 'int'
      `-IntegerLiteral 0x558fa8ef9920 <line:55:19> 'int' 1
([B4.22]) | ([B4.25])
  27: BinaryOperator 0x558fa8ef9a60 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x558fa8ef9a48 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef9a30 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x558fa8ef9838 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x558fa8ef9800 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x558fa8e818a8
|       `-MemberExpr 0x558fa8ef97c8 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x558fa8ec7cb0
|         `-ParenExpr 0x558fa8ef97a8 <col:35, col:37> 'GCObject *'
|           `-ParenExpr 0x558fa8ef9788 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x558fa8ef9768 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x558fa8ef9740 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x558fa8ef9728 <col:26, col:30> 'TString *' <LValueToRValue>
|                   `-ParenExpr 0x558fa8ef9708 <col:26, col:30> 'TString *' lvalue
|                     `-ParenExpr 0x558fa8ef96a8 <./lstate.h:162:38, col:40> 'TString *' lvalue
|                       `-DeclRefExpr 0x558fa8ef9680 <lparser.c:199:29> 'TString *' lvalue ParmVar 0x558fa8ef7928 'name' 'TString *'
`-ParenExpr 0x558fa8ef9a10 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x558fa8ef99f0 <line:37:40, col:57> 'int'
    `-ParenExpr 0x558fa8ef99d0 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x558fa8ef99a8 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x558fa8ef98e0 <col:20, col:27> 'int'
        | `-BinaryOperator 0x558fa8ef98b8 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x558fa8ef9858 <col:21> 'int' 1
        |   `-ParenExpr 0x558fa8ef9898 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x558fa8ef9878 <line:54:19> 'int' 0
        `-ParenExpr 0x558fa8ef9988 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x558fa8ef9960 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x558fa8ef9900 <col:21> 'int' 1
            `-ParenExpr 0x558fa8ef9940 <col:24, col:26> 'int'
              `-IntegerLiteral 0x558fa8ef9920 <line:55:19> 'int' 1
[B4.19] & ((([B4.26])))
   T: ([B4.27]) && ...
   Preds (1): B7
   Succs (2): B3 B1

 [B5]
   Preds (1): B6
   Succs (1): B7

 [B6]
   1: IntegerLiteral 0x558fa8ef93f0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x558fa8ef9428 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x558fa8ef93f0 <col:24> 'int' 0
(void *)[B6.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x558fa8ef9470 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'TString *' <NullToPointer>
`-ParenExpr 0x558fa8ef9450 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x558fa8ef9428 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x558fa8ef93f0 <col:24> 'int' 0
([B6.2]) (ImplicitCastExpr, NullToPointer, TString *)
   4: DeclRefExpr 0x558fa8ef92f0 <lparser.c:197:37> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   5: ImplicitCastExpr 0x558fa8ef9318 <lparser.c:197:37> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef92f0 <col:37> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B6.4] (ImplicitCastExpr, LValueToRValue, Proto *)
   6: MemberExpr 0x558fa8ef9330 <lparser.c:197:37, col:40> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
`-ImplicitCastExpr 0x558fa8ef9318 <col:37> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef92f0 <col:37> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B6.5]->upvalues
   7: ImplicitCastExpr 0x558fa8ef93b0 <lparser.c:197:37, col:40> 'TString **' <LValueToRValue>
`-MemberExpr 0x558fa8ef9330 <col:37, col:40> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
  `-ImplicitCastExpr 0x558fa8ef9318 <col:37> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef92f0 <col:37> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B6.6] (ImplicitCastExpr, LValueToRValue, TString **)
   8: DeclRefExpr 0x558fa8ef9368 <lparser.c:197:49> 'int' lvalue Var 0x558fa8ef7d50 'oldsize' 'int'
oldsize
   9: UnaryOperator 0x558fa8ef9390 <lparser.c:197:49, col:56> 'int' postfix '++'
`-DeclRefExpr 0x558fa8ef9368 <col:49> 'int' lvalue Var 0x558fa8ef7d50 'oldsize' 'int'
[B6.8]++
  10: ArraySubscriptExpr 0x558fa8ef93c8 <lparser.c:197:37, col:58> 'TString *' lvalue
|-ImplicitCastExpr 0x558fa8ef93b0 <col:37, col:40> 'TString **' <LValueToRValue>
| `-MemberExpr 0x558fa8ef9330 <col:37, col:40> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
|   `-ImplicitCastExpr 0x558fa8ef9318 <col:37> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef92f0 <col:37> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-UnaryOperator 0x558fa8ef9390 <col:49, col:56> 'int' postfix '++'
  `-DeclRefExpr 0x558fa8ef9368 <col:49> 'int' lvalue Var 0x558fa8ef7d50 'oldsize' 'int'
[B6.7][[B6.9]]
  11: BinaryOperator 0x558fa8ef9488 <lparser.c:197:37, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'TString *' '='
|-ArraySubscriptExpr 0x558fa8ef93c8 <lparser.c:197:37, col:58> 'TString *' lvalue
| |-ImplicitCastExpr 0x558fa8ef93b0 <col:37, col:40> 'TString **' <LValueToRValue>
| | `-MemberExpr 0x558fa8ef9330 <col:37, col:40> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
| |   `-ImplicitCastExpr 0x558fa8ef9318 <col:37> 'Proto *' <LValueToRValue>
| |     `-DeclRefExpr 0x558fa8ef92f0 <col:37> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
| `-UnaryOperator 0x558fa8ef9390 <col:49, col:56> 'int' postfix '++'
|   `-DeclRefExpr 0x558fa8ef9368 <col:49> 'int' lvalue Var 0x558fa8ef7d50 'oldsize' 'int'
`-ImplicitCastExpr 0x558fa8ef9470 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'TString *' <NullToPointer>
  `-ParenExpr 0x558fa8ef9450 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x558fa8ef9428 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x558fa8ef93f0 <col:24> 'int' 0
[B6.10] = [B6.3]
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x558fa8ef91f8 <lparser.c:197:10> 'int' lvalue Var 0x558fa8ef7d50 'oldsize' 'int'
oldsize
   2: ImplicitCastExpr 0x558fa8ef9298 <lparser.c:197:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef91f8 <col:10> 'int' lvalue Var 0x558fa8ef7d50 'oldsize' 'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x558fa8ef9220 <lparser.c:197:20> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x558fa8ef9248 <lparser.c:197:20> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef9220 <col:20> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B7.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x558fa8ef9260 <lparser.c:197:20, col:23> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
`-ImplicitCastExpr 0x558fa8ef9248 <col:20> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef9220 <col:20> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B7.4]->sizeupvalues
   6: ImplicitCastExpr 0x558fa8ef92b0 <lparser.c:197:20, col:23> 'int' <LValueToRValue>
`-MemberExpr 0x558fa8ef9260 <col:20, col:23> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
  `-ImplicitCastExpr 0x558fa8ef9248 <col:20> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef9220 <col:20> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B7.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x558fa8ef92c8 <lparser.c:197:10, col:23> 'int' '<'
|-ImplicitCastExpr 0x558fa8ef9298 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x558fa8ef91f8 <col:10> 'int' lvalue Var 0x558fa8ef7d50 'oldsize' 'int'
`-ImplicitCastExpr 0x558fa8ef92b0 <col:20, col:23> 'int' <LValueToRValue>
  `-MemberExpr 0x558fa8ef9260 <col:20, col:23> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
    `-ImplicitCastExpr 0x558fa8ef9248 <col:20> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef9220 <col:20> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B7.2] < [B7.6]
   T: while [B7.7]
   Preds (3): B5 B8 B9
   Succs (2): B6 B4

 [B8]
   1: DeclRefExpr 0x558fa8ef8cf0 <./lmem.h:35:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x558fa8e9abe8 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
luaM_growaux_
   2: ImplicitCastExpr 0x558fa8ef8fe0 <./lmem.h:35:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8ef8cf0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x558fa8e9abe8 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(lua_State *, void *, int *, size_t, int, const char *))
   3: DeclRefExpr 0x558fa8ef8d18 <lparser.c:195:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x558fa8ef8d40 <lparser.c:195:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8d18 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B8.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: MemberExpr 0x558fa8ef8d58 <lparser.c:195:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
`-ImplicitCastExpr 0x558fa8ef8d40 <col:19> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8d18 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B8.4]->L
   6: ImplicitCastExpr 0x558fa8ef9050 <lparser.c:195:19, col:23> 'struct lua_State *' <LValueToRValue>
`-MemberExpr 0x558fa8ef8d58 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
  `-ImplicitCastExpr 0x558fa8ef8d40 <col:19> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef8d18 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B8.5] (ImplicitCastExpr, LValueToRValue, struct lua_State *)
   7: DeclRefExpr 0x558fa8ef8d90 <lparser.c:195:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   8: ImplicitCastExpr 0x558fa8ef8db8 <lparser.c:195:26> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8d90 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.7] (ImplicitCastExpr, LValueToRValue, Proto *)
   9: MemberExpr 0x558fa8ef8dd0 <lparser.c:195:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
`-ImplicitCastExpr 0x558fa8ef8db8 <col:26> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8d90 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.8]->upvalues
  10: ImplicitCastExpr 0x558fa8ef9068 <lparser.c:195:26, col:29> 'TString **' <LValueToRValue>
`-MemberExpr 0x558fa8ef8dd0 <col:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
  `-ImplicitCastExpr 0x558fa8ef8db8 <col:26> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef8d90 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.9] (ImplicitCastExpr, LValueToRValue, TString **)
  11: ImplicitCastExpr 0x558fa8ef9080 <lparser.c:195:26, col:29> 'void *' <BitCast>
`-ImplicitCastExpr 0x558fa8ef9068 <col:26, col:29> 'TString **' <LValueToRValue>
  `-MemberExpr 0x558fa8ef8dd0 <col:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
    `-ImplicitCastExpr 0x558fa8ef8db8 <col:26> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef8d90 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.10] (ImplicitCastExpr, BitCast, void *)
  12: DeclRefExpr 0x558fa8ef8e08 <lparser.c:195:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
  13: ImplicitCastExpr 0x558fa8ef8e30 <lparser.c:195:48> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8e08 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.12] (ImplicitCastExpr, LValueToRValue, Proto *)
  14: MemberExpr 0x558fa8ef8e48 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
`-ImplicitCastExpr 0x558fa8ef8e30 <col:48> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8e08 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.13]->sizeupvalues
  15: UnaryOperator 0x558fa8ef8ea0 <./lmem.h:35:46, col:52> 'int *' prefix '&'
`-ParenExpr 0x558fa8ef8e80 <col:47, col:52> 'int' lvalue
  `-MemberExpr 0x558fa8ef8e48 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
    `-ImplicitCastExpr 0x558fa8ef8e30 <col:48> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef8e08 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
&([B8.14])
  16: UnaryExprOrTypeTraitExpr 0x558fa8ef8ed0 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'TString *'
sizeof(TString *)
  17: IntegerLiteral 0x558fa8ef8ef0 <<built-in>:37:21> 'int' 2147483647
2147483647
  18: IntegerLiteral 0x558fa8ef8f10 <./llimits.h:35:26> 'int' 2
2
  19: BinaryOperator 0x558fa8ef8f30 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|-IntegerLiteral 0x558fa8ef8ef0 <<built-in>:37:21> 'int' 2147483647
`-IntegerLiteral 0x558fa8ef8f10 <./llimits.h:35:26> 'int' 2
[B8.17] - [B8.18]
  20: StringLiteral 0x558fa8ef8fb8 <lparser.c:196:39> 'char [1]' lvalue ""
""
  21: ImplicitCastExpr 0x558fa8ef9098 <lparser.c:196:39> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x558fa8ef8fb8 <col:39> 'char [1]' lvalue ""
[B8.20] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  22: ImplicitCastExpr 0x558fa8ef90b0 <lparser.c:196:39> 'const char *' <BitCast>
`-ImplicitCastExpr 0x558fa8ef9098 <col:39> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x558fa8ef8fb8 <col:39> 'char [1]' lvalue ""
[B8.21] (ImplicitCastExpr, BitCast, const char *)
  23: CallExpr 0x558fa8ef8ff8 <./lmem.h:35:28, col:71> 'void *'
|-ImplicitCastExpr 0x558fa8ef8fe0 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8ef8cf0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x558fa8e9abe8 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
|-ImplicitCastExpr 0x558fa8ef9050 <lparser.c:195:19, col:23> 'struct lua_State *' <LValueToRValue>
| `-MemberExpr 0x558fa8ef8d58 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
|   `-ImplicitCastExpr 0x558fa8ef8d40 <col:19> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef8d18 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
|-ImplicitCastExpr 0x558fa8ef9080 <col:26, col:29> 'void *' <BitCast>
| `-ImplicitCastExpr 0x558fa8ef9068 <col:26, col:29> 'TString **' <LValueToRValue>
|   `-MemberExpr 0x558fa8ef8dd0 <col:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
|     `-ImplicitCastExpr 0x558fa8ef8db8 <col:26> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x558fa8ef8d90 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
|-UnaryOperator 0x558fa8ef8ea0 <./lmem.h:35:46, col:52> 'int *' prefix '&'
| `-ParenExpr 0x558fa8ef8e80 <col:47, col:52> 'int' lvalue
|   `-MemberExpr 0x558fa8ef8e48 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
|     `-ImplicitCastExpr 0x558fa8ef8e30 <col:48> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x558fa8ef8e08 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
|-UnaryExprOrTypeTraitExpr 0x558fa8ef8ed0 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'TString *'
|-ParenExpr 0x558fa8ef8f58 <./llimits.h:35:17, col:27> 'int'
| `-BinaryOperator 0x558fa8ef8f30 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
|   |-IntegerLiteral 0x558fa8ef8ef0 <<built-in>:37:21> 'int' 2147483647
|   `-IntegerLiteral 0x558fa8ef8f10 <./llimits.h:35:26> 'int' 2
`-ImplicitCastExpr 0x558fa8ef90b0 <lparser.c:196:39> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x558fa8ef9098 <col:39> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x558fa8ef8fb8 <col:39> 'char [1]' lvalue ""
[B8.2]([B8.6], [B8.11], [B8.15], [B8.16], ([B8.19]), [B8.22])
  24: CStyleCastExpr 0x558fa8ef9130 <./llimits.h:75:23, col:30> 'TString **' <BitCast>
`-ParenExpr 0x558fa8ef9110 <col:26, col:30> 'void *'
  `-CallExpr 0x558fa8ef8ff8 <./lmem.h:35:28, col:71> 'void *'
    |-ImplicitCastExpr 0x558fa8ef8fe0 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x558fa8ef8cf0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x558fa8e9abe8 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
    |-ImplicitCastExpr 0x558fa8ef9050 <lparser.c:195:19, col:23> 'struct lua_State *' <LValueToRValue>
    | `-MemberExpr 0x558fa8ef8d58 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
    |   `-ImplicitCastExpr 0x558fa8ef8d40 <col:19> 'FuncState *' <LValueToRValue>
    |     `-DeclRefExpr 0x558fa8ef8d18 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
    |-ImplicitCastExpr 0x558fa8ef9080 <col:26, col:29> 'void *' <BitCast>
    | `-ImplicitCastExpr 0x558fa8ef9068 <col:26, col:29> 'TString **' <LValueToRValue>
    |   `-MemberExpr 0x558fa8ef8dd0 <col:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
    |     `-ImplicitCastExpr 0x558fa8ef8db8 <col:26> 'Proto *' <LValueToRValue>
    |       `-DeclRefExpr 0x558fa8ef8d90 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
    |-UnaryOperator 0x558fa8ef8ea0 <./lmem.h:35:46, col:52> 'int *' prefix '&'
    | `-ParenExpr 0x558fa8ef8e80 <col:47, col:52> 'int' lvalue
    |   `-MemberExpr 0x558fa8ef8e48 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
    |     `-ImplicitCastExpr 0x558fa8ef8e30 <col:48> 'Proto *' <LValueToRValue>
    |       `-DeclRefExpr 0x558fa8ef8e08 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
    |-UnaryExprOrTypeTraitExpr 0x558fa8ef8ed0 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'TString *'
    |-ParenExpr 0x558fa8ef8f58 <./llimits.h:35:17, col:27> 'int'
    | `-BinaryOperator 0x558fa8ef8f30 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
    |   |-IntegerLiteral 0x558fa8ef8ef0 <<built-in>:37:21> 'int' 2147483647
    |   `-IntegerLiteral 0x558fa8ef8f10 <./llimits.h:35:26> 'int' 2
    `-ImplicitCastExpr 0x558fa8ef90b0 <lparser.c:196:39> 'const char *' <BitCast>
      `-ImplicitCastExpr 0x558fa8ef9098 <col:39> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x558fa8ef8fb8 <col:39> 'char [1]' lvalue ""
(TString **)([B8.23]) (CStyleCastExpr, BitCast, TString **)
  25: DeclRefExpr 0x558fa8ef8c58 <lparser.c:195:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
  26: ImplicitCastExpr 0x558fa8ef8c80 <lparser.c:195:26> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8c58 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.25] (ImplicitCastExpr, LValueToRValue, Proto *)
  27: MemberExpr 0x558fa8ef8c98 <lparser.c:195:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
`-ImplicitCastExpr 0x558fa8ef8c80 <col:26> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8c58 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B8.26]->upvalues
  28: BinaryOperator 0x558fa8ef9178 <./lmem.h:35:14, ./llimits.h:75:31> 'TString **' '='
|-ParenExpr 0x558fa8ef8cd0 <./lmem.h:35:14, col:16> 'TString **' lvalue
| `-MemberExpr 0x558fa8ef8c98 <lparser.c:195:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
|   `-ImplicitCastExpr 0x558fa8ef8c80 <col:26> 'Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef8c58 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-ParenExpr 0x558fa8ef9158 <./llimits.h:75:22, col:31> 'TString **'
  `-CStyleCastExpr 0x558fa8ef9130 <col:23, col:30> 'TString **' <BitCast>
    `-ParenExpr 0x558fa8ef9110 <col:26, col:30> 'void *'
      `-CallExpr 0x558fa8ef8ff8 <./lmem.h:35:28, col:71> 'void *'
        |-ImplicitCastExpr 0x558fa8ef8fe0 <col:28> 'void *(*)(lua_State *, void *, int *, size_t, int, const char *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x558fa8ef8cf0 <col:28> 'void *(lua_State *, void *, int *, size_t, int, const char *)' Function 0x558fa8e9abe8 'luaM_growaux_' 'void *(lua_State *, void *, int *, size_t, int, const char *)'
        |-ImplicitCastExpr 0x558fa8ef9050 <lparser.c:195:19, col:23> 'struct lua_State *' <LValueToRValue>
        | `-MemberExpr 0x558fa8ef8d58 <col:19, col:23> 'struct lua_State *' lvalue ->L 0x558fa8eb4070
        |   `-ImplicitCastExpr 0x558fa8ef8d40 <col:19> 'FuncState *' <LValueToRValue>
        |     `-DeclRefExpr 0x558fa8ef8d18 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
        |-ImplicitCastExpr 0x558fa8ef9080 <col:26, col:29> 'void *' <BitCast>
        | `-ImplicitCastExpr 0x558fa8ef9068 <col:26, col:29> 'TString **' <LValueToRValue>
        |   `-MemberExpr 0x558fa8ef8dd0 <col:26, col:29> 'TString **' lvalue ->upvalues 0x558fa8e8f1d0
        |     `-ImplicitCastExpr 0x558fa8ef8db8 <col:26> 'Proto *' <LValueToRValue>
        |       `-DeclRefExpr 0x558fa8ef8d90 <col:26> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
        |-UnaryOperator 0x558fa8ef8ea0 <./lmem.h:35:46, col:52> 'int *' prefix '&'
        | `-ParenExpr 0x558fa8ef8e80 <col:47, col:52> 'int' lvalue
        |   `-MemberExpr 0x558fa8ef8e48 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
        |     `-ImplicitCastExpr 0x558fa8ef8e30 <col:48> 'Proto *' <LValueToRValue>
        |       `-DeclRefExpr 0x558fa8ef8e08 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
        |-UnaryExprOrTypeTraitExpr 0x558fa8ef8ed0 <./lmem.h:35:54, col:62> 'unsigned long' sizeof 'TString *'
        |-ParenExpr 0x558fa8ef8f58 <./llimits.h:35:17, col:27> 'int'
        | `-BinaryOperator 0x558fa8ef8f30 <<built-in>:37:21, ./llimits.h:35:26> 'int' '-'
        |   |-IntegerLiteral 0x558fa8ef8ef0 <<built-in>:37:21> 'int' 2147483647
        |   `-IntegerLiteral 0x558fa8ef8f10 <./llimits.h:35:26> 'int' 2
        `-ImplicitCastExpr 0x558fa8ef90b0 <lparser.c:196:39> 'const char *' <BitCast>
          `-ImplicitCastExpr 0x558fa8ef9098 <col:39> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x558fa8ef8fb8 <col:39> 'char [1]' lvalue ""
([B8.27]) = ([B8.24])
   Preds (1): B9
   Succs (1): B7

 [B9]
   1: DeclRefExpr 0x558fa8ef8a70 <lparser.c:195:39> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x558fa8ef8a98 <lparser.c:195:39> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8a70 <col:39> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B9.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x558fa8ef8ab0 <lparser.c:195:39, col:42> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
`-ImplicitCastExpr 0x558fa8ef8a98 <col:39> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8a70 <col:39> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B9.2]->nups
   4: ImplicitCastExpr 0x558fa8ef8b28 <./lmem.h:34:15, col:22> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x558fa8ef8ae8 <col:15, col:22> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x558fa8ef8ab0 <lparser.c:195:39, col:42> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
    `-ImplicitCastExpr 0x558fa8ef8a98 <col:39> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef8a70 <col:39> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
([B9.3]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   5: ImplicitCastExpr 0x558fa8ef8b40 <./lmem.h:34:15, col:22> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef8b28 <col:15, col:22> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x558fa8ef8ae8 <col:15, col:22> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x558fa8ef8ab0 <lparser.c:195:39, col:42> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
      `-ImplicitCastExpr 0x558fa8ef8a98 <col:39> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef8a70 <col:39> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B9.4] (ImplicitCastExpr, IntegralCast, int)
   6: IntegerLiteral 0x558fa8ef8b08 <./lmem.h:34:24> 'int' 1
1
   7: BinaryOperator 0x558fa8ef8b58 <./lmem.h:34:15, col:24> 'int' '+'
|-ImplicitCastExpr 0x558fa8ef8b40 <col:15, col:22> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef8b28 <col:15, col:22> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x558fa8ef8ae8 <col:15, col:22> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x558fa8ef8ab0 <lparser.c:195:39, col:42> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
|       `-ImplicitCastExpr 0x558fa8ef8a98 <col:39> 'Proto *' <LValueToRValue>
|         `-DeclRefExpr 0x558fa8ef8a70 <col:39> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-IntegerLiteral 0x558fa8ef8b08 <./lmem.h:34:24> 'int' 1
[B9.5] + [B9.6]
   8: DeclRefExpr 0x558fa8ef8b80 <lparser.c:195:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   9: ImplicitCastExpr 0x558fa8ef8ba8 <lparser.c:195:48> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8b80 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B9.8] (ImplicitCastExpr, LValueToRValue, Proto *)
  10: MemberExpr 0x558fa8ef8bc0 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
`-ImplicitCastExpr 0x558fa8ef8ba8 <col:48> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8b80 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B9.9]->sizeupvalues
  11: ImplicitCastExpr 0x558fa8ef8c18 <./lmem.h:34:28, col:33> 'int' <LValueToRValue>
`-ParenExpr 0x558fa8ef8bf8 <col:28, col:33> 'int' lvalue
  `-MemberExpr 0x558fa8ef8bc0 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
    `-ImplicitCastExpr 0x558fa8ef8ba8 <col:48> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef8b80 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
([B9.10]) (ImplicitCastExpr, LValueToRValue, int)
  12: BinaryOperator 0x558fa8ef8c30 <./lmem.h:34:15, col:33> 'int' '>'
|-BinaryOperator 0x558fa8ef8b58 <col:15, col:24> 'int' '+'
| |-ImplicitCastExpr 0x558fa8ef8b40 <col:15, col:22> 'int' <IntegralCast>
| | `-ImplicitCastExpr 0x558fa8ef8b28 <col:15, col:22> 'lu_byte':'unsigned char' <LValueToRValue>
| |   `-ParenExpr 0x558fa8ef8ae8 <col:15, col:22> 'lu_byte':'unsigned char' lvalue
| |     `-MemberExpr 0x558fa8ef8ab0 <lparser.c:195:39, col:42> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
| |       `-ImplicitCastExpr 0x558fa8ef8a98 <col:39> 'Proto *' <LValueToRValue>
| |         `-DeclRefExpr 0x558fa8ef8a70 <col:39> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
| `-IntegerLiteral 0x558fa8ef8b08 <./lmem.h:34:24> 'int' 1
`-ImplicitCastExpr 0x558fa8ef8c18 <col:28, col:33> 'int' <LValueToRValue>
  `-ParenExpr 0x558fa8ef8bf8 <col:28, col:33> 'int' lvalue
    `-MemberExpr 0x558fa8ef8bc0 <lparser.c:195:48, col:51> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
      `-ImplicitCastExpr 0x558fa8ef8ba8 <col:48> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef8b80 <col:48> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B9.7] > [B9.11]
   T: if [B9.12]
   Preds (2): B10 B11
   Succs (2): B8 B7

 [B10]
   1: DeclRefExpr 0x558fa8ef88b8 <lparser.c:34:48> 'void (FuncState *, int, const char *)' Function 0x558fa8eeb4d0 'errorlimit' 'void (FuncState *, int, const char *)'
errorlimit
   2: ImplicitCastExpr 0x558fa8ef8998 <lparser.c:34:48> 'void (*)(FuncState *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8ef88b8 <col:48> 'void (FuncState *, int, const char *)' Function 0x558fa8eeb4d0 'errorlimit' 'void (FuncState *, int, const char *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, int, const char *))
   3: DeclRefExpr 0x558fa8ef88e0 <lparser.c:194:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x558fa8ef89f0 <lparser.c:194:19> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef88e0 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B10.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: IntegerLiteral 0x558fa8ef8908 <./luaconf.h:482:26> 'int' 60
60
   6: StringLiteral 0x558fa8ef8968 <lparser.c:194:54> 'char [9]' lvalue "upvalues"
"upvalues"
   7: ImplicitCastExpr 0x558fa8ef8a08 <lparser.c:194:54> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x558fa8ef8968 <col:54> 'char [9]' lvalue "upvalues"
[B10.6] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   8: ImplicitCastExpr 0x558fa8ef8a20 <lparser.c:194:54> 'const char *' <BitCast>
`-ImplicitCastExpr 0x558fa8ef8a08 <col:54> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x558fa8ef8968 <col:54> 'char [9]' lvalue "upvalues"
[B10.7] (ImplicitCastExpr, BitCast, const char *)
   9: CallExpr 0x558fa8ef89b0 <lparser.c:34:48, col:65> 'void'
|-ImplicitCastExpr 0x558fa8ef8998 <col:48> 'void (*)(FuncState *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8ef88b8 <col:48> 'void (FuncState *, int, const char *)' Function 0x558fa8eeb4d0 'errorlimit' 'void (FuncState *, int, const char *)'
|-ImplicitCastExpr 0x558fa8ef89f0 <line:194:19> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x558fa8ef88e0 <col:19> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
|-IntegerLiteral 0x558fa8ef8908 <./luaconf.h:482:26> 'int' 60
`-ImplicitCastExpr 0x558fa8ef8a20 <lparser.c:194:54> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x558fa8ef8a08 <col:54> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x558fa8ef8968 <col:54> 'char [9]' lvalue "upvalues"
[B10.2]([B10.4], [B10.5], [B10.8])
   Preds (1): B11
   Succs (1): B9

 [B11]
   1: DeclRefExpr 0x558fa8ef8740 <lparser.c:194:23> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   2: ImplicitCastExpr 0x558fa8ef8768 <lparser.c:194:23> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8740 <col:23> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B11.1] (ImplicitCastExpr, LValueToRValue, Proto *)
   3: MemberExpr 0x558fa8ef8780 <lparser.c:194:23, col:26> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
`-ImplicitCastExpr 0x558fa8ef8768 <col:23> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8740 <col:23> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B11.2]->nups
   4: ImplicitCastExpr 0x558fa8ef87d8 <lparser.c:194:23, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8ef8780 <col:23, col:26> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
  `-ImplicitCastExpr 0x558fa8ef8768 <col:23> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef8740 <col:23> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lu_byte)
   5: ImplicitCastExpr 0x558fa8ef87f0 <lparser.c:194:23, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef87d8 <col:23, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8ef8780 <col:23, col:26> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
    `-ImplicitCastExpr 0x558fa8ef8768 <col:23> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef8740 <col:23> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B11.4] (ImplicitCastExpr, IntegralCast, int)
   6: IntegerLiteral 0x558fa8ef87b8 <lparser.c:194:33> 'int' 1
1
   7: BinaryOperator 0x558fa8ef8808 <lparser.c:194:23, col:33> 'int' '+'
|-ImplicitCastExpr 0x558fa8ef87f0 <col:23, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef87d8 <col:23, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x558fa8ef8780 <col:23, col:26> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
|     `-ImplicitCastExpr 0x558fa8ef8768 <col:23> 'Proto *' <LValueToRValue>
|       `-DeclRefExpr 0x558fa8ef8740 <col:23> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
`-IntegerLiteral 0x558fa8ef87b8 <col:33> 'int' 1
[B11.5] + [B11.6]
   8: IntegerLiteral 0x558fa8ef8850 <./luaconf.h:482:26> 'int' 60
60
   9: BinaryOperator 0x558fa8ef8890 <lparser.c:34:39, col:45> 'int' '>'
|-ParenExpr 0x558fa8ef8830 <col:39, col:41> 'int'
| `-BinaryOperator 0x558fa8ef8808 <line:194:23, col:33> 'int' '+'
|   |-ImplicitCastExpr 0x558fa8ef87f0 <col:23, col:26> 'int' <IntegralCast>
|   | `-ImplicitCastExpr 0x558fa8ef87d8 <col:23, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-MemberExpr 0x558fa8ef8780 <col:23, col:26> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
|   |     `-ImplicitCastExpr 0x558fa8ef8768 <col:23> 'Proto *' <LValueToRValue>
|   |       `-DeclRefExpr 0x558fa8ef8740 <col:23> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
|   `-IntegerLiteral 0x558fa8ef87b8 <col:33> 'int' 1
`-ParenExpr 0x558fa8ef8870 <line:34:43, col:45> 'int'
  `-IntegerLiteral 0x558fa8ef8850 <./luaconf.h:482:26> 'int' 60
([B11.7]) > ([B11.8])
   T: if [B11.9]
   Preds (1): B16
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x558fa8ef7fd8 <lparser.c:187:24> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
i
   2: UnaryOperator 0x558fa8ef8000 <lparser.c:187:24, col:25> 'int' postfix '++'
`-DeclRefExpr 0x558fa8ef7fd8 <col:24> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B12.1]++
   Preds (2): B14 B15
   Succs (1): B16

 [B13]
   1: IntegerLiteral 0x558fa8ef85c8 <./llimits.h:62:31> 'int' 0
0
   2: CStyleCastExpr 0x558fa8ef85f8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x558fa8ef85c8 <col:31> 'int' 0
(void)[B13.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x558fa8ef8640 <lparser.c:190:14> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
i
   4: ImplicitCastExpr 0x558fa8ef8668 <lparser.c:190:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8640 <col:14> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B13.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ReturnStmt 0x558fa8ef8680 <lparser.c:190:7, col:14>
`-ImplicitCastExpr 0x558fa8ef8668 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8640 <col:14> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
return [B13.4];
   Preds (1): B14
   Succs (1): B0

 [B14]
   1: DeclRefExpr 0x558fa8ef82a8 <lparser.c:188:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
   2: ImplicitCastExpr 0x558fa8ef82d0 <lparser.c:188:38> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B14.1] (ImplicitCastExpr, LValueToRValue, FuncState *)
   3: MemberExpr 0x558fa8ef82e8 <lparser.c:188:38, col:42> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
`-ImplicitCastExpr 0x558fa8ef82d0 <col:38> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B14.2]->upvalues
   4: ImplicitCastExpr 0x558fa8ef8348 <lparser.c:188:38, col:42> 'upvaldesc *' <ArrayToPointerDecay>
`-MemberExpr 0x558fa8ef82e8 <col:38, col:42> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  `-ImplicitCastExpr 0x558fa8ef82d0 <col:38> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B14.3] (ImplicitCastExpr, ArrayToPointerDecay, upvaldesc *)
   5: DeclRefExpr 0x558fa8ef8320 <lparser.c:188:51> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
i
   6: ImplicitCastExpr 0x558fa8ef8360 <lparser.c:188:51> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8320 <col:51> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B14.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x558fa8ef8378 <lparser.c:188:38, col:52> 'upvaldesc':'struct upvaldesc' lvalue
|-ImplicitCastExpr 0x558fa8ef8348 <col:38, col:42> 'upvaldesc *' <ArrayToPointerDecay>
| `-MemberExpr 0x558fa8ef82e8 <col:38, col:42> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|   `-ImplicitCastExpr 0x558fa8ef82d0 <col:38> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
`-ImplicitCastExpr 0x558fa8ef8360 <col:51> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8320 <col:51> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B14.4][[B14.6]]
   8: MemberExpr 0x558fa8ef83a0 <lparser.c:188:38, col:54> 'lu_byte':'unsigned char' lvalue .info 0x558fa8eb3bb8
`-ArraySubscriptExpr 0x558fa8ef8378 <col:38, col:52> 'upvaldesc':'struct upvaldesc' lvalue
  |-ImplicitCastExpr 0x558fa8ef8348 <col:38, col:42> 'upvaldesc *' <ArrayToPointerDecay>
  | `-MemberExpr 0x558fa8ef82e8 <col:38, col:42> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  |   `-ImplicitCastExpr 0x558fa8ef82d0 <col:38> 'FuncState *' <LValueToRValue>
  |     `-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
  `-ImplicitCastExpr 0x558fa8ef8360 <col:51> 'int' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef8320 <col:51> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B14.7].info
   9: ImplicitCastExpr 0x558fa8ef8530 <lparser.c:188:38, col:54> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8ef83a0 <col:38, col:54> 'lu_byte':'unsigned char' lvalue .info 0x558fa8eb3bb8
  `-ArraySubscriptExpr 0x558fa8ef8378 <col:38, col:52> 'upvaldesc':'struct upvaldesc' lvalue
    |-ImplicitCastExpr 0x558fa8ef8348 <col:38, col:42> 'upvaldesc *' <ArrayToPointerDecay>
    | `-MemberExpr 0x558fa8ef82e8 <col:38, col:42> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
    |   `-ImplicitCastExpr 0x558fa8ef82d0 <col:38> 'FuncState *' <LValueToRValue>
    |     `-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
    `-ImplicitCastExpr 0x558fa8ef8360 <col:51> 'int' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef8320 <col:51> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B14.8] (ImplicitCastExpr, LValueToRValue, lu_byte)
  10: ImplicitCastExpr 0x558fa8ef8548 <lparser.c:188:38, col:54> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef8530 <col:38, col:54> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8ef83a0 <col:38, col:54> 'lu_byte':'unsigned char' lvalue .info 0x558fa8eb3bb8
    `-ArraySubscriptExpr 0x558fa8ef8378 <col:38, col:52> 'upvaldesc':'struct upvaldesc' lvalue
      |-ImplicitCastExpr 0x558fa8ef8348 <col:38, col:42> 'upvaldesc *' <ArrayToPointerDecay>
      | `-MemberExpr 0x558fa8ef82e8 <col:38, col:42> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
      |   `-ImplicitCastExpr 0x558fa8ef82d0 <col:38> 'FuncState *' <LValueToRValue>
      |     `-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
      `-ImplicitCastExpr 0x558fa8ef8360 <col:51> 'int' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef8320 <col:51> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B14.9] (ImplicitCastExpr, IntegralCast, int)
  11: DeclRefExpr 0x558fa8ef83d8 <lparser.c:188:62> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
v
  12: ImplicitCastExpr 0x558fa8ef8470 <lparser.c:188:62> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef83d8 <col:62> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B14.11] (ImplicitCastExpr, LValueToRValue, expdesc *)
  13: MemberExpr 0x558fa8ef8488 <lparser.c:188:62, col:65> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
`-ImplicitCastExpr 0x558fa8ef8470 <col:62> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef83d8 <col:62> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B14.12]->u
  14: MemberExpr 0x558fa8ef84c0 <lparser.c:188:62, col:67> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
`-MemberExpr 0x558fa8ef8488 <col:62, col:65> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
  `-ImplicitCastExpr 0x558fa8ef8470 <col:62> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef83d8 <col:62> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B14.13].s
  15: MemberExpr 0x558fa8ef84f8 <lparser.c:188:62, col:69> 'int' lvalue .info 0x558fa8eb1028
`-MemberExpr 0x558fa8ef84c0 <col:62, col:67> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
  `-MemberExpr 0x558fa8ef8488 <col:62, col:65> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
    `-ImplicitCastExpr 0x558fa8ef8470 <col:62> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef83d8 <col:62> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B14.14].info
  16: ImplicitCastExpr 0x558fa8ef8560 <lparser.c:188:62, col:69> 'int' <LValueToRValue>
`-MemberExpr 0x558fa8ef84f8 <col:62, col:69> 'int' lvalue .info 0x558fa8eb1028
  `-MemberExpr 0x558fa8ef84c0 <col:62, col:67> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
    `-MemberExpr 0x558fa8ef8488 <col:62, col:65> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
      `-ImplicitCastExpr 0x558fa8ef8470 <col:62> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef83d8 <col:62> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B14.15] (ImplicitCastExpr, LValueToRValue, int)
  17: BinaryOperator 0x558fa8ef8578 <lparser.c:188:38, col:69> 'int' '=='
|-ImplicitCastExpr 0x558fa8ef8548 <col:38, col:54> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef8530 <col:38, col:54> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x558fa8ef83a0 <col:38, col:54> 'lu_byte':'unsigned char' lvalue .info 0x558fa8eb3bb8
|     `-ArraySubscriptExpr 0x558fa8ef8378 <col:38, col:52> 'upvaldesc':'struct upvaldesc' lvalue
|       |-ImplicitCastExpr 0x558fa8ef8348 <col:38, col:42> 'upvaldesc *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x558fa8ef82e8 <col:38, col:42> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|       |   `-ImplicitCastExpr 0x558fa8ef82d0 <col:38> 'FuncState *' <LValueToRValue>
|       |     `-DeclRefExpr 0x558fa8ef82a8 <col:38> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
|       `-ImplicitCastExpr 0x558fa8ef8360 <col:51> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x558fa8ef8320 <col:51> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
`-ImplicitCastExpr 0x558fa8ef8560 <col:62, col:69> 'int' <LValueToRValue>
  `-MemberExpr 0x558fa8ef84f8 <col:62, col:69> 'int' lvalue .info 0x558fa8eb1028
    `-MemberExpr 0x558fa8ef84c0 <col:62, col:67> 'struct (anonymous struct at ./lparser.h:40:5)':'struct expdesc::(anonymous at ./lparser.h:40:5)' lvalue .s 0x558fa8eb1120
      `-MemberExpr 0x558fa8ef8488 <col:62, col:65> 'union (anonymous union at ./lparser.h:39:3)':'union expdesc::(anonymous at ./lparser.h:39:3)' lvalue ->u 0x558fa8eb1260
        `-ImplicitCastExpr 0x558fa8ef8470 <col:62> 'expdesc *' <LValueToRValue>
          `-DeclRefExpr 0x558fa8ef83d8 <col:62> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B14.10] == [B14.16]
   T: if [B15.16] && [B14.17]
   Preds (1): B15
   Succs (2): B13 B12

 [B15]
   1: DeclRefExpr 0x558fa8ef8020 <lparser.c:188:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
   2: ImplicitCastExpr 0x558fa8ef8048 <lparser.c:188:9> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B15.1] (ImplicitCastExpr, LValueToRValue, FuncState *)
   3: MemberExpr 0x558fa8ef8060 <lparser.c:188:9, col:13> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
`-ImplicitCastExpr 0x558fa8ef8048 <col:9> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B15.2]->upvalues
   4: ImplicitCastExpr 0x558fa8ef8118 <lparser.c:188:9, col:13> 'upvaldesc *' <ArrayToPointerDecay>
`-MemberExpr 0x558fa8ef8060 <col:9, col:13> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  `-ImplicitCastExpr 0x558fa8ef8048 <col:9> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B15.3] (ImplicitCastExpr, ArrayToPointerDecay, upvaldesc *)
   5: DeclRefExpr 0x558fa8ef8098 <lparser.c:188:22> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
i
   6: ImplicitCastExpr 0x558fa8ef8130 <lparser.c:188:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef8098 <col:22> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B15.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x558fa8ef8148 <lparser.c:188:9, col:23> 'upvaldesc':'struct upvaldesc' lvalue
|-ImplicitCastExpr 0x558fa8ef8118 <col:9, col:13> 'upvaldesc *' <ArrayToPointerDecay>
| `-MemberExpr 0x558fa8ef8060 <col:9, col:13> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|   `-ImplicitCastExpr 0x558fa8ef8048 <col:9> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
`-ImplicitCastExpr 0x558fa8ef8130 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef8098 <col:22> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B15.4][[B15.6]]
   8: MemberExpr 0x558fa8ef8170 <lparser.c:188:9, col:25> 'lu_byte':'unsigned char' lvalue .k 0x558fa8eb3b60
`-ArraySubscriptExpr 0x558fa8ef8148 <col:9, col:23> 'upvaldesc':'struct upvaldesc' lvalue
  |-ImplicitCastExpr 0x558fa8ef8118 <col:9, col:13> 'upvaldesc *' <ArrayToPointerDecay>
  | `-MemberExpr 0x558fa8ef8060 <col:9, col:13> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
  |   `-ImplicitCastExpr 0x558fa8ef8048 <col:9> 'FuncState *' <LValueToRValue>
  |     `-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
  `-ImplicitCastExpr 0x558fa8ef8130 <col:22> 'int' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef8098 <col:22> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B15.7].k
   9: ImplicitCastExpr 0x558fa8ef8220 <lparser.c:188:9, col:25> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8ef8170 <col:9, col:25> 'lu_byte':'unsigned char' lvalue .k 0x558fa8eb3b60
  `-ArraySubscriptExpr 0x558fa8ef8148 <col:9, col:23> 'upvaldesc':'struct upvaldesc' lvalue
    |-ImplicitCastExpr 0x558fa8ef8118 <col:9, col:13> 'upvaldesc *' <ArrayToPointerDecay>
    | `-MemberExpr 0x558fa8ef8060 <col:9, col:13> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
    |   `-ImplicitCastExpr 0x558fa8ef8048 <col:9> 'FuncState *' <LValueToRValue>
    |     `-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
    `-ImplicitCastExpr 0x558fa8ef8130 <col:22> 'int' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef8098 <col:22> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B15.8] (ImplicitCastExpr, LValueToRValue, lu_byte)
  10: ImplicitCastExpr 0x558fa8ef8238 <lparser.c:188:9, col:25> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef8220 <col:9, col:25> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8ef8170 <col:9, col:25> 'lu_byte':'unsigned char' lvalue .k 0x558fa8eb3b60
    `-ArraySubscriptExpr 0x558fa8ef8148 <col:9, col:23> 'upvaldesc':'struct upvaldesc' lvalue
      |-ImplicitCastExpr 0x558fa8ef8118 <col:9, col:13> 'upvaldesc *' <ArrayToPointerDecay>
      | `-MemberExpr 0x558fa8ef8060 <col:9, col:13> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
      |   `-ImplicitCastExpr 0x558fa8ef8048 <col:9> 'FuncState *' <LValueToRValue>
      |     `-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
      `-ImplicitCastExpr 0x558fa8ef8130 <col:22> 'int' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef8098 <col:22> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B15.9] (ImplicitCastExpr, IntegralCast, unsigned int)
  11: DeclRefExpr 0x558fa8ef81a8 <lparser.c:188:30> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
v
  12: ImplicitCastExpr 0x558fa8ef81d0 <lparser.c:188:30> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef81a8 <col:30> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B15.11] (ImplicitCastExpr, LValueToRValue, expdesc *)
  13: MemberExpr 0x558fa8ef81e8 <lparser.c:188:30, col:33> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
`-ImplicitCastExpr 0x558fa8ef81d0 <col:30> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef81a8 <col:30> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B15.12]->k
  14: ImplicitCastExpr 0x558fa8ef8250 <lparser.c:188:30, col:33> 'expkind':'expkind' <LValueToRValue>
`-MemberExpr 0x558fa8ef81e8 <col:30, col:33> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
  `-ImplicitCastExpr 0x558fa8ef81d0 <col:30> 'expdesc *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef81a8 <col:30> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B15.13] (ImplicitCastExpr, LValueToRValue, expkind)
  15: ImplicitCastExpr 0x558fa8ef8268 <lparser.c:188:30, col:33> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef8250 <col:30, col:33> 'expkind':'expkind' <LValueToRValue>
  `-MemberExpr 0x558fa8ef81e8 <col:30, col:33> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
    `-ImplicitCastExpr 0x558fa8ef81d0 <col:30> 'expdesc *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef81a8 <col:30> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B15.14] (ImplicitCastExpr, IntegralCast, unsigned int)
  16: BinaryOperator 0x558fa8ef8280 <lparser.c:188:9, col:33> 'int' '=='
|-ImplicitCastExpr 0x558fa8ef8238 <col:9, col:25> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x558fa8ef8220 <col:9, col:25> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x558fa8ef8170 <col:9, col:25> 'lu_byte':'unsigned char' lvalue .k 0x558fa8eb3b60
|     `-ArraySubscriptExpr 0x558fa8ef8148 <col:9, col:23> 'upvaldesc':'struct upvaldesc' lvalue
|       |-ImplicitCastExpr 0x558fa8ef8118 <col:9, col:13> 'upvaldesc *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x558fa8ef8060 <col:9, col:13> 'upvaldesc [60]' lvalue ->upvalues 0x558fa8eb45d8
|       |   `-ImplicitCastExpr 0x558fa8ef8048 <col:9> 'FuncState *' <LValueToRValue>
|       |     `-DeclRefExpr 0x558fa8ef8020 <col:9> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
|       `-ImplicitCastExpr 0x558fa8ef8130 <col:22> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x558fa8ef8098 <col:22> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
`-ImplicitCastExpr 0x558fa8ef8268 <col:30, col:33> 'unsigned int' <IntegralCast>
  `-ImplicitCastExpr 0x558fa8ef8250 <col:30, col:33> 'expkind':'expkind' <LValueToRValue>
    `-MemberExpr 0x558fa8ef81e8 <col:30, col:33> 'expkind':'expkind' lvalue ->k 0x558fa8eb0e70
      `-ImplicitCastExpr 0x558fa8ef81d0 <col:30> 'expdesc *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef81a8 <col:30> 'expdesc *' lvalue ParmVar 0x558fa8ef7998 'v' 'expdesc *'
[B15.10] == [B15.15]
   T: [B15.16] && ...
   Preds (1): B16
   Succs (2): B14 B12

 [B16]
   1: DeclRefExpr 0x558fa8ef7ec8 <lparser.c:187:13> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
i
   2: ImplicitCastExpr 0x558fa8ef7f68 <lparser.c:187:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef7ec8 <col:13> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
[B16.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x558fa8ef7ef0 <lparser.c:187:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   4: ImplicitCastExpr 0x558fa8ef7f18 <lparser.c:187:15> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef7ef0 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B16.3] (ImplicitCastExpr, LValueToRValue, Proto *)
   5: MemberExpr 0x558fa8ef7f30 <lparser.c:187:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
`-ImplicitCastExpr 0x558fa8ef7f18 <col:15> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef7ef0 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B16.4]->nups
   6: ImplicitCastExpr 0x558fa8ef7f80 <lparser.c:187:15, col:18> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x558fa8ef7f30 <col:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
  `-ImplicitCastExpr 0x558fa8ef7f18 <col:15> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef7ef0 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B16.5] (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x558fa8ef7f98 <lparser.c:187:15, col:18> 'int' <IntegralCast>
`-ImplicitCastExpr 0x558fa8ef7f80 <col:15, col:18> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x558fa8ef7f30 <col:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
    `-ImplicitCastExpr 0x558fa8ef7f18 <col:15> 'Proto *' <LValueToRValue>
      `-DeclRefExpr 0x558fa8ef7ef0 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B16.6] (ImplicitCastExpr, IntegralCast, int)
   8: BinaryOperator 0x558fa8ef7fb0 <lparser.c:187:13, col:18> 'int' '<'
|-ImplicitCastExpr 0x558fa8ef7f68 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x558fa8ef7ec8 <col:13> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
`-ImplicitCastExpr 0x558fa8ef7f98 <col:15, col:18> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x558fa8ef7f80 <col:15, col:18> 'lu_byte':'unsigned char' <LValueToRValue>
    `-MemberExpr 0x558fa8ef7f30 <col:15, col:18> 'lu_byte':'unsigned char' lvalue ->nups 0x558fa8e8f798
      `-ImplicitCastExpr 0x558fa8ef7f18 <col:15> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef7ef0 <col:15> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B16.2] < [B16.7]
   T: for (...; [B16.8]; ...)
   Preds (2): B12 B17
   Succs (2): B15 B11

 [B17]
   1: DeclStmt 0x558fa8ef7c08 <lparser.c:184:3, col:8>col:7
`-VarDecl 0x558fa8ef7ba8 <col:3, col:7> col:7 used i 'int'
int i;
   2: DeclRefExpr 0x558fa8ef7c90 <lparser.c:185:14> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
fs
   3: ImplicitCastExpr 0x558fa8ef7cb8 <lparser.c:185:14> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef7c90 <col:14> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B17.2] (ImplicitCastExpr, LValueToRValue, FuncState *)
   4: MemberExpr 0x558fa8ef7cd0 <lparser.c:185:14, col:18> 'Proto *' lvalue ->f 0x558fa8eb3e58
`-ImplicitCastExpr 0x558fa8ef7cb8 <col:14> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef7c90 <col:14> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B17.3]->f
   5: ImplicitCastExpr 0x558fa8ef7d08 <lparser.c:185:14, col:18> 'Proto *' <LValueToRValue>
`-MemberExpr 0x558fa8ef7cd0 <col:14, col:18> 'Proto *' lvalue ->f 0x558fa8eb3e58
  `-ImplicitCastExpr 0x558fa8ef7cb8 <col:14> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef7c90 <col:14> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
[B17.4] (ImplicitCastExpr, LValueToRValue, Proto *)
   6: DeclStmt 0x558fa8ef7d20 <lparser.c:185:3, col:19>col:10
`-VarDecl 0x558fa8ef7c30 <col:3, col:18> col:10 used f 'Proto *' cinit
  `-ImplicitCastExpr 0x558fa8ef7d08 <col:14, col:18> 'Proto *' <LValueToRValue>
    `-MemberExpr 0x558fa8ef7cd0 <col:14, col:18> 'Proto *' lvalue ->f 0x558fa8eb3e58
      `-ImplicitCastExpr 0x558fa8ef7cb8 <col:14> 'FuncState *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef7c90 <col:14> 'FuncState *' lvalue ParmVar 0x558fa8ef78b8 'fs' 'FuncState *'
Proto *f = fs->f;
   7: DeclRefExpr 0x558fa8ef7db0 <lparser.c:186:17> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
f
   8: ImplicitCastExpr 0x558fa8ef7dd8 <lparser.c:186:17> 'Proto *' <LValueToRValue>
`-DeclRefExpr 0x558fa8ef7db0 <col:17> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B17.7] (ImplicitCastExpr, LValueToRValue, Proto *)
   9: MemberExpr 0x558fa8ef7df0 <lparser.c:186:17, col:20> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
`-ImplicitCastExpr 0x558fa8ef7dd8 <col:17> 'Proto *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8ef7db0 <col:17> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B17.8]->sizeupvalues
  10: ImplicitCastExpr 0x558fa8ef7e28 <lparser.c:186:17, col:20> 'int' <LValueToRValue>
`-MemberExpr 0x558fa8ef7df0 <col:17, col:20> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
  `-ImplicitCastExpr 0x558fa8ef7dd8 <col:17> 'Proto *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8ef7db0 <col:17> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
[B17.9] (ImplicitCastExpr, LValueToRValue, int)
  11: DeclStmt 0x558fa8ef7e40 <lparser.c:186:3, col:32>col:7
`-VarDecl 0x558fa8ef7d50 <col:3, col:20> col:7 used oldsize 'int' cinit
  `-ImplicitCastExpr 0x558fa8ef7e28 <col:17, col:20> 'int' <LValueToRValue>
    `-MemberExpr 0x558fa8ef7df0 <col:17, col:20> 'int' lvalue ->sizeupvalues 0x558fa8e8f288
      `-ImplicitCastExpr 0x558fa8ef7dd8 <col:17> 'Proto *' <LValueToRValue>
        `-DeclRefExpr 0x558fa8ef7db0 <col:17> 'Proto *' lvalue Var 0x558fa8ef7c30 'f' 'Proto *'
int oldsize = f->sizeupvalues;
  12: IntegerLiteral 0x558fa8ef7e80 <lparser.c:187:10> 'int' 0
0
  13: DeclRefExpr 0x558fa8ef7e58 <lparser.c:187:8> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
i
  14: BinaryOperator 0x558fa8ef7ea0 <lparser.c:187:8, col:10> 'int' '='
|-DeclRefExpr 0x558fa8ef7e58 <col:8> 'int' lvalue Var 0x558fa8ef7ba8 'i' 'int'
`-IntegerLiteral 0x558fa8ef7e80 <col:10> 'int' 0
[B17.13] = [B17.12]
   Preds (1): B18
   Succs (1): B16

 [B0 (EXIT)]
   Preds (2): B1 B13
