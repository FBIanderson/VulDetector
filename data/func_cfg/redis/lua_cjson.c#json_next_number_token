static void json_next_number_token(json_parse_t *json, json_token_t *token)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ReturnStmt 0x563107e25498 <lua_cjson.c:1007:5>
return;
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x563107e253e0 <lua_cjson.c:1005:21> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
endptr
   2: ImplicitCastExpr 0x563107e25408 <lua_cjson.c:1005:21> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e253e0 <col:21> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B2.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: ImplicitCastExpr 0x563107e25420 <lua_cjson.c:1005:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e25408 <col:21> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x563107e253e0 <col:21> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B2.2] (ImplicitCastExpr, BitCast, const char *)
   4: DeclRefExpr 0x563107e25368 <lua_cjson.c:1005:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
json
   5: ImplicitCastExpr 0x563107e25390 <lua_cjson.c:1005:9> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e25368 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B2.4] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   6: MemberExpr 0x563107e253a8 <lua_cjson.c:1005:9, col:15> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e25390 <col:9> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e25368 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B2.5]->ptr
   7: BinaryOperator 0x563107e25438 <lua_cjson.c:1005:9, col:21> 'const char *' '='
|-MemberExpr 0x563107e253a8 <col:9, col:15> 'const char *' lvalue ->ptr 0x563107df1578
| `-ImplicitCastExpr 0x563107e25390 <col:9> 'json_parse_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e25368 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e25420 <col:21> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e25408 <col:21> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x563107e253e0 <col:21> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B2.6] = [B2.3]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x563107e25200 <lua_cjson.c:1003:9> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
json_set_token_error
   2: ImplicitCastExpr 0x563107e252b0 <lua_cjson.c:1003:9> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e25200 <col:9> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(json_token_t *, json_parse_t *, const char *))
   3: DeclRefExpr 0x563107e25228 <lua_cjson.c:1003:30> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
token
   4: ImplicitCastExpr 0x563107e25308 <lua_cjson.c:1003:30> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e25228 <col:30> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
[B3.3] (ImplicitCastExpr, LValueToRValue, json_token_t *)
   5: DeclRefExpr 0x563107e25250 <lua_cjson.c:1003:37> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
json
   6: ImplicitCastExpr 0x563107e25320 <lua_cjson.c:1003:37> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e25250 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B3.5] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   7: StringLiteral 0x563107e25278 <lua_cjson.c:1003:43> 'char [15]' lvalue "invalid number"
"invalid number"
   8: ImplicitCastExpr 0x563107e25338 <lua_cjson.c:1003:43> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e25278 <col:43> 'char [15]' lvalue "invalid number"
[B3.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x563107e25350 <lua_cjson.c:1003:43> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e25338 <col:43> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e25278 <col:43> 'char [15]' lvalue "invalid number"
[B3.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x563107e252c8 <lua_cjson.c:1003:9, col:59> 'void'
|-ImplicitCastExpr 0x563107e252b0 <col:9> 'void (*)(json_token_t *, json_parse_t *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e25200 <col:9> 'void (json_token_t *, json_parse_t *, const char *)' Function 0x563107e1cda0 'json_set_token_error' 'void (json_token_t *, json_parse_t *, const char *)'
|-ImplicitCastExpr 0x563107e25308 <col:30> 'json_token_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e25228 <col:30> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
|-ImplicitCastExpr 0x563107e25320 <col:37> 'json_parse_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e25250 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e25350 <col:43> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e25338 <col:43> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e25278 <col:43> 'char [15]' lvalue "invalid number"
[B3.2]([B3.4], [B3.6], [B3.9])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclStmt 0x563107e24dd0 <lua_cjson.c:998:5, col:17>col:11
`-VarDecl 0x563107e24d70 <col:5, col:11> col:11 used endptr 'char *'
char *endptr;
   2: DeclRefExpr 0x563107e24e60 <lua_cjson.c:1000:19> 'int' EnumConstant 0x563107ded448 'T_NUMBER' 'int'
T_NUMBER
   3: ImplicitCastExpr 0x563107e24e88 <lua_cjson.c:1000:19> 'json_token_type_t':'json_token_type_t' <IntegralCast>
`-DeclRefExpr 0x563107e24e60 <col:19> 'int' EnumConstant 0x563107ded448 'T_NUMBER' 'int'
[B4.2] (ImplicitCastExpr, IntegralCast, json_token_type_t)
   4: DeclRefExpr 0x563107e24de8 <lua_cjson.c:1000:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
token
   5: ImplicitCastExpr 0x563107e24e10 <lua_cjson.c:1000:5> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e24de8 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
[B4.4] (ImplicitCastExpr, LValueToRValue, json_token_t *)
   6: MemberExpr 0x563107e24e28 <lua_cjson.c:1000:5, col:12> 'json_token_type_t':'json_token_type_t' lvalue ->type 0x563107df18d0
`-ImplicitCastExpr 0x563107e24e10 <col:5> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e24de8 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
[B4.5]->type
   7: BinaryOperator 0x563107e24ea0 <lua_cjson.c:1000:5, col:19> 'json_token_type_t':'json_token_type_t' '='
|-MemberExpr 0x563107e24e28 <col:5, col:12> 'json_token_type_t':'json_token_type_t' lvalue ->type 0x563107df18d0
| `-ImplicitCastExpr 0x563107e24e10 <col:5> 'json_token_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e24de8 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
`-ImplicitCastExpr 0x563107e24e88 <col:19> 'json_token_type_t':'json_token_type_t' <IntegralCast>
  `-DeclRefExpr 0x563107e24e60 <col:19> 'int' EnumConstant 0x563107ded448 'T_NUMBER' 'int'
[B4.6] = [B4.3]
   8: DeclRefExpr 0x563107e24f78 <lua_cjson.c:1001:27> 'double (const char *, char **)' Function 0x563107ded178 'fpconv_strtod' 'double (const char *, char **)'
fpconv_strtod
   9: ImplicitCastExpr 0x563107e25060 <lua_cjson.c:1001:27> 'double (*)(const char *, char **)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e24f78 <col:27> 'double (const char *, char **)' Function 0x563107ded178 'fpconv_strtod' 'double (const char *, char **)'
[B4.8] (ImplicitCastExpr, FunctionToPointerDecay, double (*)(const char *, char **))
  10: DeclRefExpr 0x563107e24fa0 <lua_cjson.c:1001:41> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
json
  11: ImplicitCastExpr 0x563107e24fc8 <lua_cjson.c:1001:41> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e24fa0 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B4.10] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  12: MemberExpr 0x563107e24fe0 <lua_cjson.c:1001:41, col:47> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e24fc8 <col:41> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e24fa0 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B4.11]->ptr
  13: ImplicitCastExpr 0x563107e250b0 <lua_cjson.c:1001:41, col:47> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e24fe0 <col:41, col:47> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e24fc8 <col:41> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e24fa0 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B4.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: DeclRefExpr 0x563107e25018 <lua_cjson.c:1001:53> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
endptr
  15: UnaryOperator 0x563107e25040 <lua_cjson.c:1001:52, col:53> 'char **' prefix '&'
`-DeclRefExpr 0x563107e25018 <col:53> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
&[B4.14]
  16: CallExpr 0x563107e25078 <lua_cjson.c:1001:27, col:59> 'double'
|-ImplicitCastExpr 0x563107e25060 <col:27> 'double (*)(const char *, char **)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e24f78 <col:27> 'double (const char *, char **)' Function 0x563107ded178 'fpconv_strtod' 'double (const char *, char **)'
|-ImplicitCastExpr 0x563107e250b0 <col:41, col:47> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e24fe0 <col:41, col:47> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e24fc8 <col:41> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e24fa0 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
`-UnaryOperator 0x563107e25040 <col:52, col:53> 'char **' prefix '&'
  `-DeclRefExpr 0x563107e25018 <col:53> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B4.9]([B4.13], [B4.15])
  17: DeclRefExpr 0x563107e24ec8 <lua_cjson.c:1001:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
token
  18: ImplicitCastExpr 0x563107e24ef0 <lua_cjson.c:1001:5> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e24ec8 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
[B4.17] (ImplicitCastExpr, LValueToRValue, json_token_t *)
  19: MemberExpr 0x563107e24f08 <lua_cjson.c:1001:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
`-ImplicitCastExpr 0x563107e24ef0 <col:5> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e24ec8 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
[B4.18]->value
  20: MemberExpr 0x563107e24f40 <lua_cjson.c:1001:5, col:18> 'double' lvalue .number 0x563107df1a98
`-MemberExpr 0x563107e24f08 <col:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
  `-ImplicitCastExpr 0x563107e24ef0 <col:5> 'json_token_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e24ec8 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
[B4.19].number
  21: BinaryOperator 0x563107e250c8 <lua_cjson.c:1001:5, col:59> 'double' '='
|-MemberExpr 0x563107e24f40 <col:5, col:18> 'double' lvalue .number 0x563107df1a98
| `-MemberExpr 0x563107e24f08 <col:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
|   `-ImplicitCastExpr 0x563107e24ef0 <col:5> 'json_token_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e24ec8 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e24c18 'token' 'json_token_t *'
`-CallExpr 0x563107e25078 <col:27, col:59> 'double'
  |-ImplicitCastExpr 0x563107e25060 <col:27> 'double (*)(const char *, char **)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e24f78 <col:27> 'double (const char *, char **)' Function 0x563107ded178 'fpconv_strtod' 'double (const char *, char **)'
  |-ImplicitCastExpr 0x563107e250b0 <col:41, col:47> 'const char *' <LValueToRValue>
  | `-MemberExpr 0x563107e24fe0 <col:41, col:47> 'const char *' lvalue ->ptr 0x563107df1578
  |   `-ImplicitCastExpr 0x563107e24fc8 <col:41> 'json_parse_t *' <LValueToRValue>
  |     `-DeclRefExpr 0x563107e24fa0 <col:41> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
  `-UnaryOperator 0x563107e25040 <col:52, col:53> 'char **' prefix '&'
    `-DeclRefExpr 0x563107e25018 <col:53> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B4.20] = [B4.16]
  22: DeclRefExpr 0x563107e250f0 <lua_cjson.c:1002:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
json
  23: ImplicitCastExpr 0x563107e25118 <lua_cjson.c:1002:9> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e250f0 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B4.22] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  24: MemberExpr 0x563107e25130 <lua_cjson.c:1002:9, col:15> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e25118 <col:9> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e250f0 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B4.23]->ptr
  25: ImplicitCastExpr 0x563107e25190 <lua_cjson.c:1002:9, col:15> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e25130 <col:9, col:15> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e25118 <col:9> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e250f0 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
[B4.24] (ImplicitCastExpr, LValueToRValue, const char *)
  26: DeclRefExpr 0x563107e25168 <lua_cjson.c:1002:22> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
endptr
  27: ImplicitCastExpr 0x563107e251a8 <lua_cjson.c:1002:22> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e25168 <col:22> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B4.26] (ImplicitCastExpr, LValueToRValue, char *)
  28: ImplicitCastExpr 0x563107e251c0 <lua_cjson.c:1002:22> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e251a8 <col:22> 'char *' <LValueToRValue>
  `-DeclRefExpr 0x563107e25168 <col:22> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B4.27] (ImplicitCastExpr, BitCast, const char *)
  29: BinaryOperator 0x563107e251d8 <lua_cjson.c:1002:9, col:22> 'int' '=='
|-ImplicitCastExpr 0x563107e25190 <col:9, col:15> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e25130 <col:9, col:15> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e25118 <col:9> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e250f0 <col:9> 'json_parse_t *' lvalue ParmVar 0x563107e24ba8 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e251c0 <col:22> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e251a8 <col:22> 'char *' <LValueToRValue>
    `-DeclRefExpr 0x563107e25168 <col:22> 'char *' lvalue Var 0x563107e24d70 'endptr' 'char *'
[B4.25] == [B4.28]
   T: if [B4.29]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1
