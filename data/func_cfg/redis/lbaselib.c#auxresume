static int auxresume(lua_State *L, lua_State *co, int narg)
 [B11 (ENTRY)]
   Succs (1): B10

 [B1]
   1: DeclRefExpr 0x562da282cbb0 <lbaselib.c:537:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
lua_xmove
   2: ImplicitCastExpr 0x562da282cc48 <lbaselib.c:537:5> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282cbb0 <col:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_State *, int))
   3: DeclRefExpr 0x562da282cbd8 <lbaselib.c:537:15> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
   4: ImplicitCastExpr 0x562da282cca0 <lbaselib.c:537:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282cbd8 <col:15> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da282cc00 <lbaselib.c:537:19> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x562da282ccb8 <lbaselib.c:537:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282cc00 <col:19> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: IntegerLiteral 0x562da282cc28 <lbaselib.c:537:22> 'int' 1
1
   8: CallExpr 0x562da282cc60 <lbaselib.c:537:5, col:23> 'void'
|-ImplicitCastExpr 0x562da282cc48 <col:5> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282cbb0 <col:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
|-ImplicitCastExpr 0x562da282cca0 <col:15> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282cbd8 <col:15> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
|-ImplicitCastExpr 0x562da282ccb8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282cc00 <col:19> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
`-IntegerLiteral 0x562da282cc28 <col:22> 'int' 1
[B1.2]([B1.4], [B1.6], [B1.7])
   9: IntegerLiteral 0x562da282ccd0 <lbaselib.c:538:13> 'int' 1
1
  10: UnaryOperator 0x562da282ccf0 <lbaselib.c:538:12, col:13> 'int' prefix '-'
`-IntegerLiteral 0x562da282ccd0 <col:13> 'int' 1
-[B1.9]
  11: ReturnStmt 0x562da282cd10 <lbaselib.c:538:5, col:13>
`-UnaryOperator 0x562da282ccf0 <col:12, col:13> 'int' prefix '-'
  `-IntegerLiteral 0x562da282ccd0 <col:13> 'int' 1
return [B1.10];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x562da282c9e8 <lbaselib.c:533:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
lua_xmove
   2: ImplicitCastExpr 0x562da282ca88 <lbaselib.c:533:5> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282c9e8 <col:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_State *, int))
   3: DeclRefExpr 0x562da282ca10 <lbaselib.c:533:15> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
   4: ImplicitCastExpr 0x562da282cae0 <lbaselib.c:533:15> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282ca10 <col:15> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da282ca38 <lbaselib.c:533:19> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x562da282caf8 <lbaselib.c:533:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282ca38 <col:19> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B2.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x562da282ca60 <lbaselib.c:533:22> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
nres
   8: ImplicitCastExpr 0x562da282cb10 <lbaselib.c:533:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282ca60 <col:22> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
[B2.7] (ImplicitCastExpr, LValueToRValue, int)
   9: CallExpr 0x562da282caa0 <lbaselib.c:533:5, col:26> 'void'
|-ImplicitCastExpr 0x562da282ca88 <col:5> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282c9e8 <col:5> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
|-ImplicitCastExpr 0x562da282cae0 <col:15> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282ca10 <col:15> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
|-ImplicitCastExpr 0x562da282caf8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282ca38 <col:19> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da282cb10 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da282ca60 <col:22> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
[B2.2]([B2.4], [B2.6], [B2.8])
  10: DeclRefExpr 0x562da282cb28 <lbaselib.c:534:12> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
nres
  11: ImplicitCastExpr 0x562da282cb50 <lbaselib.c:534:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282cb28 <col:12> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
[B2.10] (ImplicitCastExpr, LValueToRValue, int)
  12: ReturnStmt 0x562da282cb68 <lbaselib.c:534:5, col:12>
`-ImplicitCastExpr 0x562da282cb50 <col:12> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da282cb28 <col:12> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
return [B2.11];
   Preds (2): B3 B4
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x562da282c880 <lbaselib.c:532:7> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x562da282c918 <lbaselib.c:532:7> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282c880 <col:7> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x562da282c8a8 <lbaselib.c:532:18> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282c968 <lbaselib.c:532:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c8a8 <col:18> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x562da282c8d0 <lbaselib.c:532:21> 'char [27]' lvalue "too many results to resume"
"too many results to resume"
   6: ImplicitCastExpr 0x562da282c980 <lbaselib.c:532:21> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da282c8d0 <col:21> 'char [27]' lvalue "too many results to resume"
[B3.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x562da282c998 <lbaselib.c:532:21> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da282c980 <col:21> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da282c8d0 <col:21> 'char [27]' lvalue "too many results to resume"
[B3.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x562da282c930 <lbaselib.c:532:7, col:49> 'int'
|-ImplicitCastExpr 0x562da282c918 <col:7> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282c880 <col:7> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x562da282c968 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282c8a8 <col:18> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da282c998 <col:21> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562da282c980 <col:21> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x562da282c8d0 <col:21> 'char [27]' lvalue "too many results to resume"
[B3.2]([B3.4], [B3.7])
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x562da282c658 <lbaselib.c:530:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
lua_gettop
   2: ImplicitCastExpr 0x562da282c6a8 <lbaselib.c:530:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282c658 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *))
   3: DeclRefExpr 0x562da282c680 <lbaselib.c:530:27> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
   4: ImplicitCastExpr 0x562da282c6f0 <lbaselib.c:530:27> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c680 <col:27> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: CallExpr 0x562da282c6c0 <lbaselib.c:530:16, col:29> 'int'
|-ImplicitCastExpr 0x562da282c6a8 <col:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282c658 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
`-ImplicitCastExpr 0x562da282c6f0 <col:27> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da282c680 <col:27> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B4.2]([B4.4])
   6: DeclStmt 0x562da282c708 <lbaselib.c:530:5, col:30>col:9
`-VarDecl 0x562da282c5f8 <col:5, col:29> col:9 used nres 'int' cinit
  `-CallExpr 0x562da282c6c0 <col:16, col:29> 'int'
    |-ImplicitCastExpr 0x562da282c6a8 <col:16> 'int (*)(lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da282c658 <col:16> 'int (lua_State *)':'int (lua_State *)' Function 0x562da27eaa08 'lua_gettop' 'int (lua_State *)':'int (lua_State *)'
    `-ImplicitCastExpr 0x562da282c6f0 <col:27> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x562da282c680 <col:27> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
int nres = lua_gettop(co);
   7: DeclRefExpr 0x562da282c720 <lbaselib.c:531:10> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_checkstack
   8: ImplicitCastExpr 0x562da282c7f8 <lbaselib.c:531:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282c720 <col:10> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
[B4.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   9: DeclRefExpr 0x562da282c748 <lbaselib.c:531:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x562da282c848 <lbaselib.c:531:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c748 <col:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B4.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: DeclRefExpr 0x562da282c770 <lbaselib.c:531:28> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
nres
  12: ImplicitCastExpr 0x562da282c7b8 <lbaselib.c:531:28> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282c770 <col:28> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
[B4.11] (ImplicitCastExpr, LValueToRValue, int)
  13: IntegerLiteral 0x562da282c798 <lbaselib.c:531:35> 'int' 1
1
  14: BinaryOperator 0x562da282c7d0 <lbaselib.c:531:28, col:35> 'int' '+'
|-ImplicitCastExpr 0x562da282c7b8 <col:28> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da282c770 <col:28> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
`-IntegerLiteral 0x562da282c798 <col:35> 'int' 1
[B4.12] + [B4.13]
  15: CallExpr 0x562da282c810 <lbaselib.c:531:10, col:36> 'int'
|-ImplicitCastExpr 0x562da282c7f8 <col:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282c720 <col:10> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da282c848 <col:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282c748 <col:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
`-BinaryOperator 0x562da282c7d0 <col:28, col:35> 'int' '+'
  |-ImplicitCastExpr 0x562da282c7b8 <col:28> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x562da282c770 <col:28> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
  `-IntegerLiteral 0x562da282c798 <col:35> 'int' 1
[B4.8]([B4.10], [B4.14])
  16: UnaryOperator 0x562da282c860 <lbaselib.c:531:9, col:36> 'int' prefix '!'
`-CallExpr 0x562da282c810 <col:10, col:36> 'int'
  |-ImplicitCastExpr 0x562da282c7f8 <col:10> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da282c720 <col:10> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x562da282c848 <col:25> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da282c748 <col:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
  `-BinaryOperator 0x562da282c7d0 <col:28, col:35> 'int' '+'
    |-ImplicitCastExpr 0x562da282c7b8 <col:28> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x562da282c770 <col:28> 'int' lvalue Var 0x562da282c5f8 'nres' 'int'
    `-IntegerLiteral 0x562da282c798 <col:35> 'int' 1
![B4.15]
   T: if [B4.16]
   Preds (2): B5 B6
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x562da282c518 <lbaselib.c:529:22> 'int' lvalue Var 0x562da282b908 'status' 'int'
status
   2: ImplicitCastExpr 0x562da282c560 <lbaselib.c:529:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282c518 <col:22> 'int' lvalue Var 0x562da282b908 'status' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x562da282c540 <./lua.h:43:19> 'int' 1
1
   4: BinaryOperator 0x562da282c578 <lbaselib.c:529:22, ./lua.h:43:19> 'int' '=='
|-ImplicitCastExpr 0x562da282c560 <lbaselib.c:529:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da282c518 <col:22> 'int' lvalue Var 0x562da282b908 'status' 'int'
`-IntegerLiteral 0x562da282c540 <./lua.h:43:19> 'int' 1
[B5.2] == [B5.3]
   T: if [B6.29] || [B5.4]
   Preds (1): B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x562da282c060 <lbaselib.c:526:3> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
lua_xmove
   2: ImplicitCastExpr 0x562da282c158 <lbaselib.c:526:3> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282c060 <col:3> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_State *, int))
   3: DeclRefExpr 0x562da282c088 <lbaselib.c:526:13> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282c1b0 <lbaselib.c:526:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c088 <col:13> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da282c0b0 <lbaselib.c:526:16> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
   6: ImplicitCastExpr 0x562da282c1c8 <lbaselib.c:526:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c0b0 <col:16> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B6.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: DeclRefExpr 0x562da282c0d8 <lbaselib.c:526:20> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
narg
   8: ImplicitCastExpr 0x562da282c1e0 <lbaselib.c:526:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282c0d8 <col:20> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
[B6.7] (ImplicitCastExpr, LValueToRValue, int)
   9: CallExpr 0x562da282c170 <lbaselib.c:526:3, col:24> 'void'
|-ImplicitCastExpr 0x562da282c158 <col:3> 'void (*)(lua_State *, lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282c060 <col:3> 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)' Function 0x562da27ec9c8 'lua_xmove' 'void (lua_State *, lua_State *, int)':'void (lua_State *, lua_State *, int)'
|-ImplicitCastExpr 0x562da282c1b0 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282c088 <col:13> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
|-ImplicitCastExpr 0x562da282c1c8 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282c0b0 <col:16> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
`-ImplicitCastExpr 0x562da282c1e0 <col:20> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da282c0d8 <col:20> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
[B6.2]([B6.4], [B6.6], [B6.8])
  10: DeclRefExpr 0x562da282c1f8 <lbaselib.c:527:3> 'void (lua_State *, lua_State *)' Function 0x562da27f6a80 'lua_setlevel' 'void (lua_State *, lua_State *)'
lua_setlevel
  11: ImplicitCastExpr 0x562da282c2c8 <lbaselib.c:527:3> 'void (*)(lua_State *, lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282c1f8 <col:3> 'void (lua_State *, lua_State *)' Function 0x562da27f6a80 'lua_setlevel' 'void (lua_State *, lua_State *)'
[B6.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, lua_State *))
  12: DeclRefExpr 0x562da282c220 <lbaselib.c:527:16> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
  13: ImplicitCastExpr 0x562da282c318 <lbaselib.c:527:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c220 <col:16> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B6.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: DeclRefExpr 0x562da282c248 <lbaselib.c:527:19> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
  15: ImplicitCastExpr 0x562da282c330 <lbaselib.c:527:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c248 <col:19> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B6.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: CallExpr 0x562da282c2e0 <lbaselib.c:527:3, col:21> 'void'
|-ImplicitCastExpr 0x562da282c2c8 <col:3> 'void (*)(lua_State *, lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282c1f8 <col:3> 'void (lua_State *, lua_State *)' Function 0x562da27f6a80 'lua_setlevel' 'void (lua_State *, lua_State *)'
|-ImplicitCastExpr 0x562da282c318 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282c220 <col:16> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da282c330 <col:19> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da282c248 <col:19> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B6.11]([B6.13], [B6.15])
  17: DeclRefExpr 0x562da282c370 <lbaselib.c:528:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27f5a18 'lua_resume' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_resume
  18: ImplicitCastExpr 0x562da282c3e8 <lbaselib.c:528:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282c370 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27f5a18 'lua_resume' 'int (lua_State *, int)':'int (lua_State *, int)'
[B6.17] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  19: DeclRefExpr 0x562da282c398 <lbaselib.c:528:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
  20: ImplicitCastExpr 0x562da282c438 <lbaselib.c:528:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282c398 <col:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B6.19] (ImplicitCastExpr, LValueToRValue, lua_State *)
  21: DeclRefExpr 0x562da282c3c0 <lbaselib.c:528:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
narg
  22: ImplicitCastExpr 0x562da282c450 <lbaselib.c:528:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282c3c0 <col:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
[B6.21] (ImplicitCastExpr, LValueToRValue, int)
  23: CallExpr 0x562da282c400 <lbaselib.c:528:12, col:31> 'int'
|-ImplicitCastExpr 0x562da282c3e8 <col:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282c370 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27f5a18 'lua_resume' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da282c438 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282c398 <col:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
`-ImplicitCastExpr 0x562da282c450 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da282c3c0 <col:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
[B6.18]([B6.20], [B6.22])
  24: DeclRefExpr 0x562da282c348 <lbaselib.c:528:3> 'int' lvalue Var 0x562da282b908 'status' 'int'
status
  25: BinaryOperator 0x562da282c468 <lbaselib.c:528:3, col:31> 'int' '='
|-DeclRefExpr 0x562da282c348 <col:3> 'int' lvalue Var 0x562da282b908 'status' 'int'
`-CallExpr 0x562da282c400 <col:12, col:31> 'int'
  |-ImplicitCastExpr 0x562da282c3e8 <col:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da282c370 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27f5a18 'lua_resume' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x562da282c438 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da282c398 <col:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
  `-ImplicitCastExpr 0x562da282c450 <col:27> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da282c3c0 <col:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
[B6.24] = [B6.23]
  26: DeclRefExpr 0x562da282c490 <lbaselib.c:529:7> 'int' lvalue Var 0x562da282b908 'status' 'int'
status
  27: ImplicitCastExpr 0x562da282c4d8 <lbaselib.c:529:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282c490 <col:7> 'int' lvalue Var 0x562da282b908 'status' 'int'
[B6.26] (ImplicitCastExpr, LValueToRValue, int)
  28: IntegerLiteral 0x562da282c4b8 <lbaselib.c:529:17> 'int' 0
0
  29: BinaryOperator 0x562da282c4f0 <lbaselib.c:529:7, col:17> 'int' '=='
|-ImplicitCastExpr 0x562da282c4d8 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da282c490 <col:7> 'int' lvalue Var 0x562da282b908 'status' 'int'
`-IntegerLiteral 0x562da282c4b8 <col:17> 'int' 0
[B6.27] == [B6.28]
   T: [B6.29] || ...
   Preds (1): B8
   Succs (2): B4 B5

 [B7]
   1: DeclRefExpr 0x562da282bdb8 <lbaselib.c:523:5> 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)' Function 0x562da27f0dc8 'lua_pushfstring' 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)'
lua_pushfstring
   2: ImplicitCastExpr 0x562da282bef8 <lbaselib.c:523:5> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282bdb8 <col:5> 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)' Function 0x562da27f0dc8 'lua_pushfstring' 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x562da282bde0 <lbaselib.c:523:21> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282bf50 <lbaselib.c:523:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282bde0 <col:21> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x562da282be08 <lbaselib.c:523:24> 'char [27]' lvalue "cannot resume %s coroutine"
"cannot resume %s coroutine"
   6: ImplicitCastExpr 0x562da282bf68 <lbaselib.c:523:24> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da282be08 <col:24> 'char [27]' lvalue "cannot resume %s coroutine"
[B7.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x562da282bf80 <lbaselib.c:523:24> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da282bf68 <col:24> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da282be08 <col:24> 'char [27]' lvalue "cannot resume %s coroutine"
[B7.6] (ImplicitCastExpr, BitCast, const char *)
   8: DeclRefExpr 0x562da282be50 <lbaselib.c:523:54> 'const char *const [4]' lvalue Var 0x562da2828c20 'statnames' 'const char *const [4]'
statnames
   9: ImplicitCastExpr 0x562da282bea0 <lbaselib.c:523:54> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x562da282be50 <col:54> 'const char *const [4]' lvalue Var 0x562da2828c20 'statnames' 'const char *const [4]'
[B7.8] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
  10: DeclRefExpr 0x562da282be78 <lbaselib.c:523:64> 'int' lvalue Var 0x562da282b908 'status' 'int'
status
  11: ImplicitCastExpr 0x562da282beb8 <lbaselib.c:523:64> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282be78 <col:64> 'int' lvalue Var 0x562da282b908 'status' 'int'
[B7.10] (ImplicitCastExpr, LValueToRValue, int)
  12: ArraySubscriptExpr 0x562da282bed0 <lbaselib.c:523:54, col:70> 'const char *const' lvalue
|-ImplicitCastExpr 0x562da282bea0 <col:54> 'const char *const *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x562da282be50 <col:54> 'const char *const [4]' lvalue Var 0x562da2828c20 'statnames' 'const char *const [4]'
`-ImplicitCastExpr 0x562da282beb8 <col:64> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da282be78 <col:64> 'int' lvalue Var 0x562da282b908 'status' 'int'
[B7.9][[B7.11]]
  13: ImplicitCastExpr 0x562da282bf98 <lbaselib.c:523:54, col:70> 'const char *' <LValueToRValue>
`-ArraySubscriptExpr 0x562da282bed0 <col:54, col:70> 'const char *const' lvalue
  |-ImplicitCastExpr 0x562da282bea0 <col:54> 'const char *const *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x562da282be50 <col:54> 'const char *const [4]' lvalue Var 0x562da2828c20 'statnames' 'const char *const [4]'
  `-ImplicitCastExpr 0x562da282beb8 <col:64> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da282be78 <col:64> 'int' lvalue Var 0x562da282b908 'status' 'int'
[B7.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: CallExpr 0x562da282bf10 <lbaselib.c:523:5, col:71> 'const char *'
|-ImplicitCastExpr 0x562da282bef8 <col:5> 'const char *(*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282bdb8 <col:5> 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)' Function 0x562da27f0dc8 'lua_pushfstring' 'const char *(lua_State *, const char *, ...)':'const char *(lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x562da282bf50 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282bde0 <col:21> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
|-ImplicitCastExpr 0x562da282bf80 <col:24> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x562da282bf68 <col:24> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x562da282be08 <col:24> 'char [27]' lvalue "cannot resume %s coroutine"
`-ImplicitCastExpr 0x562da282bf98 <col:54, col:70> 'const char *' <LValueToRValue>
  `-ArraySubscriptExpr 0x562da282bed0 <col:54, col:70> 'const char *const' lvalue
    |-ImplicitCastExpr 0x562da282bea0 <col:54> 'const char *const *' <ArrayToPointerDecay>
    | `-DeclRefExpr 0x562da282be50 <col:54> 'const char *const [4]' lvalue Var 0x562da2828c20 'statnames' 'const char *const [4]'
    `-ImplicitCastExpr 0x562da282beb8 <col:64> 'int' <LValueToRValue>
      `-DeclRefExpr 0x562da282be78 <col:64> 'int' lvalue Var 0x562da282b908 'status' 'int'
[B7.2]([B7.4], [B7.7], [B7.13])
  15: IntegerLiteral 0x562da282bfb0 <lbaselib.c:524:13> 'int' 1
1
  16: UnaryOperator 0x562da282bfd0 <lbaselib.c:524:12, col:13> 'int' prefix '-'
`-IntegerLiteral 0x562da282bfb0 <col:13> 'int' 1
-[B7.15]
  17: ReturnStmt 0x562da282bff0 <lbaselib.c:524:5, col:13>
`-UnaryOperator 0x562da282bfd0 <col:12, col:13> 'int' prefix '-'
  `-IntegerLiteral 0x562da282bfb0 <col:13> 'int' 1
return [B7.16];
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x562da282bd30 <lbaselib.c:522:7> 'int' lvalue Var 0x562da282b908 'status' 'int'
status
   2: ImplicitCastExpr 0x562da282bd78 <lbaselib.c:522:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282bd30 <col:7> 'int' lvalue Var 0x562da282b908 'status' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x562da282bd58 <lbaselib.c:483:16> 'int' 1
1
   4: BinaryOperator 0x562da282bd90 <lbaselib.c:522:7, line:483:16> 'int' '!='
|-ImplicitCastExpr 0x562da282bd78 <line:522:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x562da282bd30 <col:7> 'int' lvalue Var 0x562da282b908 'status' 'int'
`-IntegerLiteral 0x562da282bd58 <line:483:16> 'int' 1
[B8.2] != [B8.3]
   T: if [B8.4]
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   1: DeclRefExpr 0x562da282bb90 <lbaselib.c:521:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x562da282bc60 <lbaselib.c:521:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282bb90 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x562da282bbb8 <lbaselib.c:521:16> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282bcb0 <lbaselib.c:521:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282bbb8 <col:16> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x562da282bc18 <lbaselib.c:521:19> 'char [29]' lvalue "too many arguments to resume"
"too many arguments to resume"
   6: ImplicitCastExpr 0x562da282bcc8 <lbaselib.c:521:19> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x562da282bc18 <col:19> 'char [29]' lvalue "too many arguments to resume"
[B9.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x562da282bce0 <lbaselib.c:521:19> 'const char *' <BitCast>
`-ImplicitCastExpr 0x562da282bcc8 <col:19> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x562da282bc18 <col:19> 'char [29]' lvalue "too many arguments to resume"
[B9.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x562da282bc78 <lbaselib.c:521:5, col:49> 'int'
|-ImplicitCastExpr 0x562da282bc60 <col:5> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282bb90 <col:5> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x562da2804138 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x562da282bcb0 <col:16> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282bbb8 <col:16> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da282bce0 <col:19> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x562da282bcc8 <col:19> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x562da282bc18 <col:19> 'char [29]' lvalue "too many arguments to resume"
[B9.2]([B9.4], [B9.7])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x562da282b968 <lbaselib.c:519:16> 'int (lua_State *, lua_State *)' Function 0x562da2829138 'costatus' 'int (lua_State *, lua_State *)'
costatus
   2: ImplicitCastExpr 0x562da282b9e0 <lbaselib.c:519:16> 'int (*)(lua_State *, lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282b968 <col:16> 'int (lua_State *, lua_State *)' Function 0x562da2829138 'costatus' 'int (lua_State *, lua_State *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, lua_State *))
   3: DeclRefExpr 0x562da282b990 <lbaselib.c:519:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x562da282ba30 <lbaselib.c:519:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282b990 <col:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
[B10.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x562da282b9b8 <lbaselib.c:519:28> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
   6: ImplicitCastExpr 0x562da282ba48 <lbaselib.c:519:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282b9b8 <col:28> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B10.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: CallExpr 0x562da282b9f8 <lbaselib.c:519:16, col:30> 'int'
|-ImplicitCastExpr 0x562da282b9e0 <col:16> 'int (*)(lua_State *, lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282b968 <col:16> 'int (lua_State *, lua_State *)' Function 0x562da2829138 'costatus' 'int (lua_State *, lua_State *)'
|-ImplicitCastExpr 0x562da282ba30 <col:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282b990 <col:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
`-ImplicitCastExpr 0x562da282ba48 <col:28> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x562da282b9b8 <col:28> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B10.2]([B10.4], [B10.6])
   8: DeclStmt 0x562da282ba60 <lbaselib.c:519:3, col:31>col:7
`-VarDecl 0x562da282b908 <col:3, col:30> col:7 used status 'int' cinit
  `-CallExpr 0x562da282b9f8 <col:16, col:30> 'int'
    |-ImplicitCastExpr 0x562da282b9e0 <col:16> 'int (*)(lua_State *, lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x562da282b968 <col:16> 'int (lua_State *, lua_State *)' Function 0x562da2829138 'costatus' 'int (lua_State *, lua_State *)'
    |-ImplicitCastExpr 0x562da282ba30 <col:25> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x562da282b990 <col:25> 'lua_State *' lvalue ParmVar 0x562da282b610 'L' 'lua_State *'
    `-ImplicitCastExpr 0x562da282ba48 <col:28> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x562da282b9b8 <col:28> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
int status = costatus(L, co);
   9: DeclRefExpr 0x562da282ba78 <lbaselib.c:520:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_checkstack
  10: ImplicitCastExpr 0x562da282baf0 <lbaselib.c:520:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x562da282ba78 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
[B10.9] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
  11: DeclRefExpr 0x562da282baa0 <lbaselib.c:520:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
co
  12: ImplicitCastExpr 0x562da282bb40 <lbaselib.c:520:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x562da282baa0 <col:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
[B10.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: DeclRefExpr 0x562da282bac8 <lbaselib.c:520:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
narg
  14: ImplicitCastExpr 0x562da282bb58 <lbaselib.c:520:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x562da282bac8 <col:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
[B10.13] (ImplicitCastExpr, LValueToRValue, int)
  15: CallExpr 0x562da282bb08 <lbaselib.c:520:8, col:31> 'int'
|-ImplicitCastExpr 0x562da282baf0 <col:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x562da282ba78 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x562da282bb40 <col:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x562da282baa0 <col:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
`-ImplicitCastExpr 0x562da282bb58 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x562da282bac8 <col:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
[B10.10]([B10.12], [B10.14])
  16: UnaryOperator 0x562da282bb70 <lbaselib.c:520:7, col:31> 'int' prefix '!'
`-CallExpr 0x562da282bb08 <col:8, col:31> 'int'
  |-ImplicitCastExpr 0x562da282baf0 <col:8> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x562da282ba78 <col:8> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x562da27ec6b8 'lua_checkstack' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x562da282bb40 <col:23> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x562da282baa0 <col:23> 'lua_State *' lvalue ParmVar 0x562da282b680 'co' 'lua_State *'
  `-ImplicitCastExpr 0x562da282bb58 <col:27> 'int' <LValueToRValue>
    `-DeclRefExpr 0x562da282bac8 <col:27> 'int' lvalue ParmVar 0x562da282b6f8 'narg' 'int'
![B10.15]
   T: if [B10.16]
   Preds (1): B11
   Succs (2): B9 B8

 [B0 (EXIT)]
   Preds (3): B1 B2 B7
