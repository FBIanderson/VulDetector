void sdsrange(sds s, int start, int end)
 [B25 (ENTRY)]
   Succs (1): B24

 [B1]
   1: IntegerLiteral 0x55e83d118bb8 <sds.c:747:17> 'int' 0
0
   2: ImplicitCastExpr 0x55e83d118bd8 <sds.c:747:17> 'char' <IntegralCast>
`-IntegerLiteral 0x55e83d118bb8 <col:17> 'int' 0
[B1.1] (ImplicitCastExpr, IntegralCast, char)
   3: DeclRefExpr 0x55e83d118b10 <sds.c:747:5> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d118b60 <sds.c:747:5> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d118b10 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
[B1.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: DeclRefExpr 0x55e83d118b38 <sds.c:747:7> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
   6: ImplicitCastExpr 0x55e83d118b78 <sds.c:747:7> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d118b38 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B1.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: ArraySubscriptExpr 0x55e83d118b90 <sds.c:747:5, col:13> 'char' lvalue
|-ImplicitCastExpr 0x55e83d118b60 <col:5> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118b10 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d118b78 <col:7> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d118b38 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B1.4][[B1.6]]
   8: BinaryOperator 0x55e83d118bf0 <sds.c:747:5, col:17> 'char' '='
|-ArraySubscriptExpr 0x55e83d118b90 <col:5, col:13> 'char' lvalue
| |-ImplicitCastExpr 0x55e83d118b60 <col:5> 'sds':'char *' <LValueToRValue>
| | `-DeclRefExpr 0x55e83d118b10 <col:5> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
| `-ImplicitCastExpr 0x55e83d118b78 <col:7> 'size_t':'unsigned long' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d118b38 <col:7> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d118bd8 <col:17> 'char' <IntegralCast>
  `-IntegerLiteral 0x55e83d118bb8 <col:17> 'int' 0
[B1.7] = [B1.2]
   9: DeclRefExpr 0x55e83d118c18 <sds.c:748:5> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
sdssetlen
  10: ImplicitCastExpr 0x55e83d118c90 <sds.c:748:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d118c18 <col:5> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
[B1.9] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(sds, size_t))
  11: DeclRefExpr 0x55e83d118c40 <sds.c:748:15> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
s
  12: ImplicitCastExpr 0x55e83d118ce0 <sds.c:748:15> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d118c40 <col:15> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
[B1.11] (ImplicitCastExpr, LValueToRValue, sds)
  13: DeclRefExpr 0x55e83d118c68 <sds.c:748:17> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
  14: ImplicitCastExpr 0x55e83d118cf8 <sds.c:748:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d118c68 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B1.13] (ImplicitCastExpr, LValueToRValue, size_t)
  15: CallExpr 0x55e83d118ca8 <sds.c:748:5, col:23> 'void'
|-ImplicitCastExpr 0x55e83d118c90 <col:5> 'void (*)(sds, size_t)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d118c18 <col:5> 'void (sds, size_t)' Function 0x55e83d0e6df0 'sdssetlen' 'void (sds, size_t)'
|-ImplicitCastExpr 0x55e83d118ce0 <col:15> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118c40 <col:15> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d118cf8 <col:17> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d118c68 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B1.10]([B1.12], [B1.14])
   Preds (3): B2 B3 B4
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55e83d1188d0 <sds.c:746:26> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a8220 'memmove' 'void *(void *, const void *, unsigned long)'
memmove
   2: ImplicitCastExpr 0x55e83d118a20 <sds.c:746:26> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d1188d0 <col:26> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a8220 'memmove' 'void *(void *, const void *, unsigned long)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(void *, const void *, unsigned long))
   3: DeclRefExpr 0x55e83d1188f8 <sds.c:746:34> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
s
   4: ImplicitCastExpr 0x55e83d118a78 <sds.c:746:34> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d1188f8 <col:34> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
[B2.3] (ImplicitCastExpr, LValueToRValue, sds)
   5: ImplicitCastExpr 0x55e83d118a90 <sds.c:746:34> 'void *' <BitCast>
`-ImplicitCastExpr 0x55e83d118a78 <col:34> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1188f8 <col:34> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
[B2.4] (ImplicitCastExpr, BitCast, void *)
   6: DeclRefExpr 0x55e83d118920 <sds.c:746:37> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
s
   7: ImplicitCastExpr 0x55e83d118970 <sds.c:746:37> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d118920 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
[B2.6] (ImplicitCastExpr, LValueToRValue, sds)
   8: DeclRefExpr 0x55e83d118948 <sds.c:746:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   9: ImplicitCastExpr 0x55e83d118988 <sds.c:746:39> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118948 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B2.8] (ImplicitCastExpr, LValueToRValue, int)
  10: BinaryOperator 0x55e83d1189a0 <sds.c:746:37, col:39> 'sds':'char *' '+'
|-ImplicitCastExpr 0x55e83d118970 <col:37> 'sds':'char *' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118920 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
`-ImplicitCastExpr 0x55e83d118988 <col:39> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d118948 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B2.7] + [B2.9]
  11: ImplicitCastExpr 0x55e83d118aa8 <sds.c:746:37, col:39> 'const void *' <BitCast>
`-BinaryOperator 0x55e83d1189a0 <col:37, col:39> 'sds':'char *' '+'
  |-ImplicitCastExpr 0x55e83d118970 <col:37> 'sds':'char *' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d118920 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
  `-ImplicitCastExpr 0x55e83d118988 <col:39> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d118948 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B2.10] (ImplicitCastExpr, BitCast, const void *)
  12: DeclRefExpr 0x55e83d1189c8 <sds.c:746:46> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
  13: ImplicitCastExpr 0x55e83d118ac0 <sds.c:746:46> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d1189c8 <col:46> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B2.12] (ImplicitCastExpr, LValueToRValue, size_t)
  14: CallExpr 0x55e83d118a38 <sds.c:746:26, col:52> 'void *'
|-ImplicitCastExpr 0x55e83d118a20 <col:26> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d1188d0 <col:26> 'void *(void *, const void *, unsigned long)' Function 0x55e83d0a8220 'memmove' 'void *(void *, const void *, unsigned long)'
|-ImplicitCastExpr 0x55e83d118a90 <col:34> 'void *' <BitCast>
| `-ImplicitCastExpr 0x55e83d118a78 <col:34> 'sds':'char *' <LValueToRValue>
|   `-DeclRefExpr 0x55e83d1188f8 <col:34> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
|-ImplicitCastExpr 0x55e83d118aa8 <col:37, col:39> 'const void *' <BitCast>
| `-BinaryOperator 0x55e83d1189a0 <col:37, col:39> 'sds':'char *' '+'
|   |-ImplicitCastExpr 0x55e83d118970 <col:37> 'sds':'char *' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d118920 <col:37> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
|   `-ImplicitCastExpr 0x55e83d118988 <col:39> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d118948 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-ImplicitCastExpr 0x55e83d118ac0 <col:46> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1189c8 <col:46> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B2.2]([B2.5], [B2.11], [B2.13])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55e83d118850 <sds.c:746:18> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
   2: ImplicitCastExpr 0x55e83d118890 <sds.c:746:18> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d118850 <col:18> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   T: if [B4.2] && [B3.2]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x55e83d118808 <sds.c:746:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   2: ImplicitCastExpr 0x55e83d118878 <sds.c:746:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118808 <col:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   T: [B4.2] && ...
   Preds (4): B5 B6 B10 B11
   Succs (2): B3 B1

 [B5]
   1: IntegerLiteral 0x55e83d118770 <sds.c:744:17> 'int' 0
0
   2: DeclRefExpr 0x55e83d118748 <sds.c:744:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   3: BinaryOperator 0x55e83d118790 <sds.c:744:9, col:17> 'int' '='
|-DeclRefExpr 0x55e83d118748 <col:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-IntegerLiteral 0x55e83d118770 <col:17> 'int' 0
[B5.2] = [B5.1]
   Preds (1): B13
   Succs (1): B4

 [B6]
   1: ConditionalOperator 0x55e83d118630 <sds.c:741:22, col:54> 'int'
|-ParenExpr 0x55e83d1184e0 <col:22, col:34> 'int'
| `-BinaryOperator 0x55e83d1184b8 <col:23, col:31> 'int' '>'
|   |-ImplicitCastExpr 0x55e83d118488 <col:23> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d118438 <col:23> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
|   `-ImplicitCastExpr 0x55e83d1184a0 <col:31> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d118460 <col:31> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
|-IntegerLiteral 0x55e83d118500 <col:38> 'int' 0
`-BinaryOperator 0x55e83d118608 <col:42, col:54> 'int' '+'
  |-ParenExpr 0x55e83d1185c8 <col:42, col:52> 'int'
  | `-BinaryOperator 0x55e83d1185a0 <col:43, col:47> 'int' '-'
  |   |-ImplicitCastExpr 0x55e83d118570 <col:43> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x55e83d118520 <col:43> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
  |   `-ImplicitCastExpr 0x55e83d118588 <col:47> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x55e83d118548 <col:47> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
  `-IntegerLiteral 0x55e83d1185e8 <col:54> 'int' 1
([B9.13]) ? [B7.1] : [B8.7]
   2: ImplicitCastExpr 0x55e83d118660 <sds.c:741:22, col:54> 'size_t':'unsigned long' <IntegralCast>
`-ConditionalOperator 0x55e83d118630 <col:22, col:54> 'int'
  |-ParenExpr 0x55e83d1184e0 <col:22, col:34> 'int'
  | `-BinaryOperator 0x55e83d1184b8 <col:23, col:31> 'int' '>'
  |   |-ImplicitCastExpr 0x55e83d118488 <col:23> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x55e83d118438 <col:23> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
  |   `-ImplicitCastExpr 0x55e83d1184a0 <col:31> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x55e83d118460 <col:31> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
  |-IntegerLiteral 0x55e83d118500 <col:38> 'int' 0
  `-BinaryOperator 0x55e83d118608 <col:42, col:54> 'int' '+'
    |-ParenExpr 0x55e83d1185c8 <col:42, col:52> 'int'
    | `-BinaryOperator 0x55e83d1185a0 <col:43, col:47> 'int' '-'
    |   |-ImplicitCastExpr 0x55e83d118570 <col:43> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e83d118520 <col:43> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
    |   `-ImplicitCastExpr 0x55e83d118588 <col:47> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d118548 <col:47> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
    `-IntegerLiteral 0x55e83d1185e8 <col:54> 'int' 1
[B6.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: DeclRefExpr 0x55e83d118410 <sds.c:741:13> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
   4: BinaryOperator 0x55e83d118678 <sds.c:741:13, col:54> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d118410 <col:13> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d118660 <col:22, col:54> 'size_t':'unsigned long' <IntegralCast>
  `-ConditionalOperator 0x55e83d118630 <col:22, col:54> 'int'
    |-ParenExpr 0x55e83d1184e0 <col:22, col:34> 'int'
    | `-BinaryOperator 0x55e83d1184b8 <col:23, col:31> 'int' '>'
    |   |-ImplicitCastExpr 0x55e83d118488 <col:23> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e83d118438 <col:23> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
    |   `-ImplicitCastExpr 0x55e83d1184a0 <col:31> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d118460 <col:31> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
    |-IntegerLiteral 0x55e83d118500 <col:38> 'int' 0
    `-BinaryOperator 0x55e83d118608 <col:42, col:54> 'int' '+'
      |-ParenExpr 0x55e83d1185c8 <col:42, col:52> 'int'
      | `-BinaryOperator 0x55e83d1185a0 <col:43, col:47> 'int' '-'
      |   |-ImplicitCastExpr 0x55e83d118570 <col:43> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x55e83d118520 <col:43> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
      |   `-ImplicitCastExpr 0x55e83d118588 <col:47> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x55e83d118548 <col:47> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
      `-IntegerLiteral 0x55e83d1185e8 <col:54> 'int' 1
[B6.3] = [B6.2]
   Preds (2): B7 B8
   Succs (1): B4

 [B7]
   1: IntegerLiteral 0x55e83d118500 <sds.c:741:38> 'int' 0
0
   Preds (1): B9
   Succs (1): B6

 [B8]
   1: DeclRefExpr 0x55e83d118520 <sds.c:741:43> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   2: ImplicitCastExpr 0x55e83d118570 <sds.c:741:43> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118520 <col:43> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d118548 <sds.c:741:47> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   4: ImplicitCastExpr 0x55e83d118588 <sds.c:741:47> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118548 <col:47> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B8.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55e83d1185a0 <sds.c:741:43, col:47> 'int' '-'
|-ImplicitCastExpr 0x55e83d118570 <col:43> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118520 <col:43> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-ImplicitCastExpr 0x55e83d118588 <col:47> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d118548 <col:47> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B8.2] - [B8.4]
   6: IntegerLiteral 0x55e83d1185e8 <sds.c:741:54> 'int' 1
1
   7: BinaryOperator 0x55e83d118608 <sds.c:741:42, col:54> 'int' '+'
|-ParenExpr 0x55e83d1185c8 <col:42, col:52> 'int'
| `-BinaryOperator 0x55e83d1185a0 <col:43, col:47> 'int' '-'
|   |-ImplicitCastExpr 0x55e83d118570 <col:43> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d118520 <col:43> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
|   `-ImplicitCastExpr 0x55e83d118588 <col:47> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d118548 <col:47> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-IntegerLiteral 0x55e83d1185e8 <col:54> 'int' 1
([B8.5]) + [B8.6]
   Preds (1): B9
   Succs (1): B6

 [B9]
   1: DeclRefExpr 0x55e83d118330 <sds.c:740:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
len
   2: ImplicitCastExpr 0x55e83d118378 <sds.c:740:19> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d118330 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B9.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: IntegerLiteral 0x55e83d118358 <sds.c:740:23> 'int' 1
1
   4: ImplicitCastExpr 0x55e83d118390 <sds.c:740:23> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d118358 <col:23> 'int' 1
[B9.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: BinaryOperator 0x55e83d1183a8 <sds.c:740:19, col:23> 'unsigned long' '-'
|-ImplicitCastExpr 0x55e83d118378 <col:19> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118330 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d118390 <col:23> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d118358 <col:23> 'int' 1
[B9.2] - [B9.4]
   6: ImplicitCastExpr 0x55e83d1183d0 <sds.c:740:19, col:23> 'int' <IntegralCast>
`-BinaryOperator 0x55e83d1183a8 <col:19, col:23> 'unsigned long' '-'
  |-ImplicitCastExpr 0x55e83d118378 <col:19> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d118330 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d118390 <col:23> 'unsigned long' <IntegralCast>
    `-IntegerLiteral 0x55e83d118358 <col:23> 'int' 1
[B9.5] (ImplicitCastExpr, IntegralCast, int)
   7: DeclRefExpr 0x55e83d118308 <sds.c:740:13> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   8: BinaryOperator 0x55e83d1183e8 <sds.c:740:13, col:23> 'int' '='
|-DeclRefExpr 0x55e83d118308 <col:13> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-ImplicitCastExpr 0x55e83d1183d0 <col:19, col:23> 'int' <IntegralCast>
  `-BinaryOperator 0x55e83d1183a8 <col:19, col:23> 'unsigned long' '-'
    |-ImplicitCastExpr 0x55e83d118378 <col:19> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d118330 <col:19> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d118390 <col:23> 'unsigned long' <IntegralCast>
      `-IntegerLiteral 0x55e83d118358 <col:23> 'int' 1
[B9.7] = [B9.6]
   9: DeclRefExpr 0x55e83d118438 <sds.c:741:23> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
  10: ImplicitCastExpr 0x55e83d118488 <sds.c:741:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118438 <col:23> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B9.9] (ImplicitCastExpr, LValueToRValue, int)
  11: DeclRefExpr 0x55e83d118460 <sds.c:741:31> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
  12: ImplicitCastExpr 0x55e83d1184a0 <sds.c:741:31> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118460 <col:31> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B9.11] (ImplicitCastExpr, LValueToRValue, int)
  13: BinaryOperator 0x55e83d1184b8 <sds.c:741:23, col:31> 'int' '>'
|-ImplicitCastExpr 0x55e83d118488 <col:23> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118438 <col:23> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-ImplicitCastExpr 0x55e83d1184a0 <col:31> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d118460 <col:31> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B9.10] > [B9.12]
   T: ([B9.13]) ? ... : ...
   Preds (1): B10
   Succs (2): B7 B8

 [B10]
   1: DeclRefExpr 0x55e83d118220 <sds.c:739:20> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   2: ImplicitCastExpr 0x55e83d1182c8 <sds.c:739:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118220 <col:20> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B10.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d118248 <sds.c:739:35> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
len
   4: ImplicitCastExpr 0x55e83d118288 <sds.c:739:35> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d118248 <col:35> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B10.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: CStyleCastExpr 0x55e83d1182a0 <sds.c:739:27, col:35> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d118288 <col:35> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d118248 <col:35> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
(int)[B10.4] (CStyleCastExpr, IntegralCast, int)
   6: BinaryOperator 0x55e83d1182e0 <sds.c:739:20, col:35> 'int' '>='
|-ImplicitCastExpr 0x55e83d1182c8 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118220 <col:20> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-CStyleCastExpr 0x55e83d1182a0 <col:27, col:35> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d118288 <col:35> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d118248 <col:35> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B10.2] >= [B10.5]
   T: if [B10.6]
   Preds (1): B12
   Succs (2): B9 B4

 [B11]
   1: IntegerLiteral 0x55e83d1181a8 <sds.c:738:22> 'int' 0
0
   2: ImplicitCastExpr 0x55e83d1181c8 <sds.c:738:22> 'size_t':'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d1181a8 <col:22> 'int' 0
[B11.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: DeclRefExpr 0x55e83d118180 <sds.c:738:13> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
   4: BinaryOperator 0x55e83d1181e0 <sds.c:738:13, col:22> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d118180 <col:13> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d1181c8 <col:22> 'size_t':'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d1181a8 <col:22> 'int' 0
[B11.3] = [B11.2]
   Preds (1): B12
   Succs (1): B4

 [B12]
   1: DeclRefExpr 0x55e83d118098 <sds.c:737:13> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   2: ImplicitCastExpr 0x55e83d118140 <sds.c:737:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d118098 <col:13> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B12.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d1180c0 <sds.c:737:30> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
len
   4: ImplicitCastExpr 0x55e83d118100 <sds.c:737:30> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d1180c0 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B12.3] (ImplicitCastExpr, LValueToRValue, size_t)
   5: CStyleCastExpr 0x55e83d118118 <sds.c:737:22, col:30> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55e83d118100 <col:30> 'size_t':'unsigned long' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1180c0 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
(int)[B12.4] (CStyleCastExpr, IntegralCast, int)
   6: BinaryOperator 0x55e83d118158 <sds.c:737:13, col:30> 'int' '>='
|-ImplicitCastExpr 0x55e83d118140 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d118098 <col:13> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-CStyleCastExpr 0x55e83d118118 <col:22, col:30> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d118100 <col:30> 'size_t':'unsigned long' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1180c0 <col:30> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B12.2] >= [B12.5]
   T: if [B12.6]
   Preds (1): B13
   Succs (2): B11 B10

 [B13]
   1: ConditionalOperator 0x55e83d117f88 <sds.c:735:14, col:46> 'int'
|-ParenExpr 0x55e83d117e38 <col:14, col:26> 'int'
| `-BinaryOperator 0x55e83d117e10 <col:15, col:23> 'int' '>'
|   |-ImplicitCastExpr 0x55e83d117de0 <col:15> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d117d90 <col:15> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
|   `-ImplicitCastExpr 0x55e83d117df8 <col:23> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d117db8 <col:23> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
|-IntegerLiteral 0x55e83d117e58 <col:30> 'int' 0
`-BinaryOperator 0x55e83d117f60 <col:34, col:46> 'int' '+'
  |-ParenExpr 0x55e83d117f20 <col:34, col:44> 'int'
  | `-BinaryOperator 0x55e83d117ef8 <col:35, col:39> 'int' '-'
  |   |-ImplicitCastExpr 0x55e83d117ec8 <col:35> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x55e83d117e78 <col:35> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
  |   `-ImplicitCastExpr 0x55e83d117ee0 <col:39> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x55e83d117ea0 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
  `-IntegerLiteral 0x55e83d117f40 <col:46> 'int' 1
([B16.5]) ? [B14.1] : [B15.7]
   2: ImplicitCastExpr 0x55e83d117fb8 <sds.c:735:14, col:46> 'size_t':'unsigned long' <IntegralCast>
`-ConditionalOperator 0x55e83d117f88 <col:14, col:46> 'int'
  |-ParenExpr 0x55e83d117e38 <col:14, col:26> 'int'
  | `-BinaryOperator 0x55e83d117e10 <col:15, col:23> 'int' '>'
  |   |-ImplicitCastExpr 0x55e83d117de0 <col:15> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x55e83d117d90 <col:15> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
  |   `-ImplicitCastExpr 0x55e83d117df8 <col:23> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x55e83d117db8 <col:23> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
  |-IntegerLiteral 0x55e83d117e58 <col:30> 'int' 0
  `-BinaryOperator 0x55e83d117f60 <col:34, col:46> 'int' '+'
    |-ParenExpr 0x55e83d117f20 <col:34, col:44> 'int'
    | `-BinaryOperator 0x55e83d117ef8 <col:35, col:39> 'int' '-'
    |   |-ImplicitCastExpr 0x55e83d117ec8 <col:35> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e83d117e78 <col:35> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
    |   `-ImplicitCastExpr 0x55e83d117ee0 <col:39> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d117ea0 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
    `-IntegerLiteral 0x55e83d117f40 <col:46> 'int' 1
[B13.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: DeclRefExpr 0x55e83d117d68 <sds.c:735:5> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
   4: BinaryOperator 0x55e83d117fd0 <sds.c:735:5, col:46> 'size_t':'unsigned long' '='
|-DeclRefExpr 0x55e83d117d68 <col:5> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d117fb8 <col:14, col:46> 'size_t':'unsigned long' <IntegralCast>
  `-ConditionalOperator 0x55e83d117f88 <col:14, col:46> 'int'
    |-ParenExpr 0x55e83d117e38 <col:14, col:26> 'int'
    | `-BinaryOperator 0x55e83d117e10 <col:15, col:23> 'int' '>'
    |   |-ImplicitCastExpr 0x55e83d117de0 <col:15> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e83d117d90 <col:15> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
    |   `-ImplicitCastExpr 0x55e83d117df8 <col:23> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e83d117db8 <col:23> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
    |-IntegerLiteral 0x55e83d117e58 <col:30> 'int' 0
    `-BinaryOperator 0x55e83d117f60 <col:34, col:46> 'int' '+'
      |-ParenExpr 0x55e83d117f20 <col:34, col:44> 'int'
      | `-BinaryOperator 0x55e83d117ef8 <col:35, col:39> 'int' '-'
      |   |-ImplicitCastExpr 0x55e83d117ec8 <col:35> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x55e83d117e78 <col:35> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
      |   `-ImplicitCastExpr 0x55e83d117ee0 <col:39> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x55e83d117ea0 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
      `-IntegerLiteral 0x55e83d117f40 <col:46> 'int' 1
[B13.3] = [B13.2]
   5: DeclRefExpr 0x55e83d117ff8 <sds.c:736:9> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
newlen
   6: ImplicitCastExpr 0x55e83d118040 <sds.c:736:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d117ff8 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
[B13.5] (ImplicitCastExpr, LValueToRValue, size_t)
   7: IntegerLiteral 0x55e83d118020 <sds.c:736:19> 'int' 0
0
   8: ImplicitCastExpr 0x55e83d118058 <sds.c:736:19> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d118020 <col:19> 'int' 0
[B13.7] (ImplicitCastExpr, IntegralCast, unsigned long)
   9: BinaryOperator 0x55e83d118070 <sds.c:736:9, col:19> 'int' '!='
|-ImplicitCastExpr 0x55e83d118040 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117ff8 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d117438 'newlen' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d118058 <col:19> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d118020 <col:19> 'int' 0
[B13.6] != [B13.8]
   T: if [B13.9]
   Preds (2): B14 B15
   Succs (2): B12 B5

 [B14]
   1: IntegerLiteral 0x55e83d117e58 <sds.c:735:30> 'int' 0
0
   Preds (1): B16
   Succs (1): B13

 [B15]
   1: DeclRefExpr 0x55e83d117e78 <sds.c:735:35> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   2: ImplicitCastExpr 0x55e83d117ec8 <sds.c:735:35> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d117e78 <col:35> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B15.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d117ea0 <sds.c:735:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   4: ImplicitCastExpr 0x55e83d117ee0 <sds.c:735:39> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d117ea0 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B15.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55e83d117ef8 <sds.c:735:35, col:39> 'int' '-'
|-ImplicitCastExpr 0x55e83d117ec8 <col:35> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117e78 <col:35> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-ImplicitCastExpr 0x55e83d117ee0 <col:39> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d117ea0 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B15.2] - [B15.4]
   6: IntegerLiteral 0x55e83d117f40 <sds.c:735:46> 'int' 1
1
   7: BinaryOperator 0x55e83d117f60 <sds.c:735:34, col:46> 'int' '+'
|-ParenExpr 0x55e83d117f20 <col:34, col:44> 'int'
| `-BinaryOperator 0x55e83d117ef8 <col:35, col:39> 'int' '-'
|   |-ImplicitCastExpr 0x55e83d117ec8 <col:35> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x55e83d117e78 <col:35> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
|   `-ImplicitCastExpr 0x55e83d117ee0 <col:39> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55e83d117ea0 <col:39> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-IntegerLiteral 0x55e83d117f40 <col:46> 'int' 1
([B15.5]) + [B15.6]
   Preds (1): B16
   Succs (1): B13

 [B16]
   1: DeclRefExpr 0x55e83d117d90 <sds.c:735:15> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   2: ImplicitCastExpr 0x55e83d117de0 <sds.c:735:15> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d117d90 <col:15> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B16.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55e83d117db8 <sds.c:735:23> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   4: ImplicitCastExpr 0x55e83d117df8 <sds.c:735:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d117db8 <col:23> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B16.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55e83d117e10 <sds.c:735:15, col:23> 'int' '>'
|-ImplicitCastExpr 0x55e83d117de0 <col:15> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117d90 <col:15> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-ImplicitCastExpr 0x55e83d117df8 <col:23> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d117db8 <col:23> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B16.2] > [B16.4]
   T: ([B16.5]) ? ... : ...
   Preds (3): B17 B18 B19
   Succs (2): B14 B15

 [B17]
   1: IntegerLiteral 0x55e83d117c90 <sds.c:733:28> 'int' 0
0
   2: DeclRefExpr 0x55e83d117c68 <sds.c:733:22> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   3: BinaryOperator 0x55e83d117cb0 <sds.c:733:22, col:28> 'int' '='
|-DeclRefExpr 0x55e83d117c68 <col:22> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-IntegerLiteral 0x55e83d117c90 <col:28> 'int' 0
[B17.2] = [B17.1]
   Preds (1): B18
   Succs (1): B16

 [B18]
   1: DeclRefExpr 0x55e83d117ae0 <sds.c:732:15> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
len
   2: ImplicitCastExpr 0x55e83d117b30 <sds.c:732:15> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d117ae0 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B18.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x55e83d117b08 <sds.c:732:19> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   4: ImplicitCastExpr 0x55e83d117b48 <sds.c:732:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d117b08 <col:19> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B18.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ImplicitCastExpr 0x55e83d117b60 <sds.c:732:19> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d117b48 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d117b08 <col:19> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B18.4] (ImplicitCastExpr, IntegralCast, unsigned long)
   6: BinaryOperator 0x55e83d117b78 <sds.c:732:15, col:19> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d117b30 <col:15> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117ae0 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d117b60 <col:19> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d117b48 <col:19> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d117b08 <col:19> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B18.2] + [B18.5]
   7: ImplicitCastExpr 0x55e83d117ba0 <sds.c:732:15, col:19> 'int' <IntegralCast>
`-BinaryOperator 0x55e83d117b78 <col:15, col:19> 'unsigned long' '+'
  |-ImplicitCastExpr 0x55e83d117b30 <col:15> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d117ae0 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d117b60 <col:19> 'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d117b48 <col:19> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d117b08 <col:19> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B18.6] (ImplicitCastExpr, IntegralCast, int)
   8: DeclRefExpr 0x55e83d117ab8 <sds.c:732:9> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   9: BinaryOperator 0x55e83d117bb8 <sds.c:732:9, col:19> 'int' '='
|-DeclRefExpr 0x55e83d117ab8 <col:9> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-ImplicitCastExpr 0x55e83d117ba0 <col:15, col:19> 'int' <IntegralCast>
  `-BinaryOperator 0x55e83d117b78 <col:15, col:19> 'unsigned long' '+'
    |-ImplicitCastExpr 0x55e83d117b30 <col:15> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d117ae0 <col:15> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d117b60 <col:19> 'unsigned long' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d117b48 <col:19> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d117b08 <col:19> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B18.8] = [B18.7]
  10: DeclRefExpr 0x55e83d117be0 <sds.c:733:13> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
  11: ImplicitCastExpr 0x55e83d117c28 <sds.c:733:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d117be0 <col:13> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B18.10] (ImplicitCastExpr, LValueToRValue, int)
  12: IntegerLiteral 0x55e83d117c08 <sds.c:733:19> 'int' 0
0
  13: BinaryOperator 0x55e83d117c40 <sds.c:733:13, col:19> 'int' '<'
|-ImplicitCastExpr 0x55e83d117c28 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117be0 <col:13> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-IntegerLiteral 0x55e83d117c08 <col:19> 'int' 0
[B18.11] < [B18.12]
   T: if [B18.13]
   Preds (1): B19
   Succs (2): B17 B16

 [B19]
   1: DeclRefExpr 0x55e83d117a30 <sds.c:731:9> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
end
   2: ImplicitCastExpr 0x55e83d117a78 <sds.c:731:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d117a30 <col:9> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
[B19.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d117a58 <sds.c:731:15> 'int' 0
0
   4: BinaryOperator 0x55e83d117a90 <sds.c:731:9, col:15> 'int' '<'
|-ImplicitCastExpr 0x55e83d117a78 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117a30 <col:9> 'int' lvalue ParmVar 0x55e83d1172d8 'end' 'int'
`-IntegerLiteral 0x55e83d117a58 <col:15> 'int' 0
[B19.2] < [B19.3]
   T: if [B19.4]
   Preds (3): B20 B21 B22
   Succs (2): B18 B16

 [B20]
   1: IntegerLiteral 0x55e83d117958 <sds.c:729:32> 'int' 0
0
   2: DeclRefExpr 0x55e83d117930 <sds.c:729:24> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   3: BinaryOperator 0x55e83d117978 <sds.c:729:24, col:32> 'int' '='
|-DeclRefExpr 0x55e83d117930 <col:24> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-IntegerLiteral 0x55e83d117958 <col:32> 'int' 0
[B20.2] = [B20.1]
   Preds (1): B21
   Succs (1): B19

 [B21]
   1: DeclRefExpr 0x55e83d117788 <sds.c:728:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
len
   2: ImplicitCastExpr 0x55e83d1177d8 <sds.c:728:17> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d117788 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B21.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: DeclRefExpr 0x55e83d1177b0 <sds.c:728:21> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   4: ImplicitCastExpr 0x55e83d1177f0 <sds.c:728:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d1177b0 <col:21> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B21.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ImplicitCastExpr 0x55e83d117808 <sds.c:728:21> 'unsigned long' <IntegralCast>
`-ImplicitCastExpr 0x55e83d1177f0 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55e83d1177b0 <col:21> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B21.4] (ImplicitCastExpr, IntegralCast, unsigned long)
   6: BinaryOperator 0x55e83d117840 <sds.c:728:17, col:21> 'unsigned long' '+'
|-ImplicitCastExpr 0x55e83d1177d8 <col:17> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d117788 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d117808 <col:21> 'unsigned long' <IntegralCast>
  `-ImplicitCastExpr 0x55e83d1177f0 <col:21> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55e83d1177b0 <col:21> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B21.2] + [B21.5]
   7: ImplicitCastExpr 0x55e83d117868 <sds.c:728:17, col:21> 'int' <IntegralCast>
`-BinaryOperator 0x55e83d117840 <col:17, col:21> 'unsigned long' '+'
  |-ImplicitCastExpr 0x55e83d1177d8 <col:17> 'size_t':'unsigned long' <LValueToRValue>
  | `-DeclRefExpr 0x55e83d117788 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
  `-ImplicitCastExpr 0x55e83d117808 <col:21> 'unsigned long' <IntegralCast>
    `-ImplicitCastExpr 0x55e83d1177f0 <col:21> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55e83d1177b0 <col:21> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B21.6] (ImplicitCastExpr, IntegralCast, int)
   8: DeclRefExpr 0x55e83d117760 <sds.c:728:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   9: BinaryOperator 0x55e83d117880 <sds.c:728:9, col:21> 'int' '='
|-DeclRefExpr 0x55e83d117760 <col:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-ImplicitCastExpr 0x55e83d117868 <col:17, col:21> 'int' <IntegralCast>
  `-BinaryOperator 0x55e83d117840 <col:17, col:21> 'unsigned long' '+'
    |-ImplicitCastExpr 0x55e83d1177d8 <col:17> 'size_t':'unsigned long' <LValueToRValue>
    | `-DeclRefExpr 0x55e83d117788 <col:17> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
    `-ImplicitCastExpr 0x55e83d117808 <col:21> 'unsigned long' <IntegralCast>
      `-ImplicitCastExpr 0x55e83d1177f0 <col:21> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55e83d1177b0 <col:21> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B21.8] = [B21.7]
  10: DeclRefExpr 0x55e83d1178a8 <sds.c:729:13> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
  11: ImplicitCastExpr 0x55e83d1178f0 <sds.c:729:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d1178a8 <col:13> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B21.10] (ImplicitCastExpr, LValueToRValue, int)
  12: IntegerLiteral 0x55e83d1178d0 <sds.c:729:21> 'int' 0
0
  13: BinaryOperator 0x55e83d117908 <sds.c:729:13, col:21> 'int' '<'
|-ImplicitCastExpr 0x55e83d1178f0 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1178a8 <col:13> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-IntegerLiteral 0x55e83d1178d0 <col:21> 'int' 0
[B21.11] < [B21.12]
   T: if [B21.13]
   Preds (1): B22
   Succs (2): B20 B19

 [B22]
   1: DeclRefExpr 0x55e83d1176d8 <sds.c:727:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
start
   2: ImplicitCastExpr 0x55e83d117720 <sds.c:727:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x55e83d1176d8 <col:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
[B22.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55e83d117700 <sds.c:727:17> 'int' 0
0
   4: BinaryOperator 0x55e83d117738 <sds.c:727:9, col:17> 'int' '<'
|-ImplicitCastExpr 0x55e83d117720 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1176d8 <col:9> 'int' lvalue ParmVar 0x55e83d117260 'start' 'int'
`-IntegerLiteral 0x55e83d117700 <col:17> 'int' 0
[B22.2] < [B22.3]
   T: if [B22.4]
   Preds (1): B24
   Succs (2): B21 B19

 [B23]
   1: ReturnStmt 0x55e83d117688 <sds.c:726:19>
return;
   Preds (1): B24
   Succs (1): B0

 [B24]
   1: DeclStmt 0x55e83d135ad8 <sds.c:724:12>col:12
`-VarDecl 0x55e83d117438 <col:5, col:12> col:12 used newlen 'size_t':'unsigned long'
size_t newlen;
   2: DeclRefExpr 0x55e83d117508 <sds.c:724:26> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
sdslen
   3: ImplicitCastExpr 0x55e83d117558 <sds.c:724:26> 'size_t (*)(const sds)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55e83d117508 <col:26> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
[B24.2] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const sds))
   4: DeclRefExpr 0x55e83d117530 <sds.c:724:33> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
s
   5: ImplicitCastExpr 0x55e83d1175a0 <sds.c:724:33> 'sds':'char *' <LValueToRValue>
`-DeclRefExpr 0x55e83d117530 <col:33> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
[B24.4] (ImplicitCastExpr, LValueToRValue, sds)
   6: CallExpr 0x55e83d117570 <sds.c:724:26, col:34> 'size_t':'unsigned long'
|-ImplicitCastExpr 0x55e83d117558 <col:26> 'size_t (*)(const sds)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55e83d117508 <col:26> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
`-ImplicitCastExpr 0x55e83d1175a0 <col:33> 'sds':'char *' <LValueToRValue>
  `-DeclRefExpr 0x55e83d117530 <col:33> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
[B24.3]([B24.5])
   7: DeclStmt 0x55e83d1359c0 <sds.c:724:20, col:34>col:20
`-VarDecl 0x55e83d1174a8 <col:5, col:34> col:20 used len 'size_t':'unsigned long' cinit
  `-CallExpr 0x55e83d117570 <col:26, col:34> 'size_t':'unsigned long'
    |-ImplicitCastExpr 0x55e83d117558 <col:26> 'size_t (*)(const sds)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55e83d117508 <col:26> 'size_t (const sds)' Function 0x55e83d052dd0 'sdslen' 'size_t (const sds)'
    `-ImplicitCastExpr 0x55e83d1175a0 <col:33> 'sds':'char *' <LValueToRValue>
      `-DeclRefExpr 0x55e83d117530 <col:33> 'sds':'char *' lvalue ParmVar 0x55e83d1171e8 's' 'sds':'char *'
size_t len = sdslen(s);
   8: DeclRefExpr 0x55e83d1175e8 <sds.c:726:9> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
len
   9: ImplicitCastExpr 0x55e83d117630 <sds.c:726:9> 'size_t':'unsigned long' <LValueToRValue>
`-DeclRefExpr 0x55e83d1175e8 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
[B24.8] (ImplicitCastExpr, LValueToRValue, size_t)
  10: IntegerLiteral 0x55e83d117610 <sds.c:726:16> 'int' 0
0
  11: ImplicitCastExpr 0x55e83d117648 <sds.c:726:16> 'unsigned long' <IntegralCast>
`-IntegerLiteral 0x55e83d117610 <col:16> 'int' 0
[B24.10] (ImplicitCastExpr, IntegralCast, unsigned long)
  12: BinaryOperator 0x55e83d117660 <sds.c:726:9, col:16> 'int' '=='
|-ImplicitCastExpr 0x55e83d117630 <col:9> 'size_t':'unsigned long' <LValueToRValue>
| `-DeclRefExpr 0x55e83d1175e8 <col:9> 'size_t':'unsigned long' lvalue Var 0x55e83d1174a8 'len' 'size_t':'unsigned long'
`-ImplicitCastExpr 0x55e83d117648 <col:16> 'unsigned long' <IntegralCast>
  `-IntegerLiteral 0x55e83d117610 <col:16> 'int' 0
[B24.9] == [B24.11]
   T: if [B24.12]
   Preds (1): B25
   Succs (2): B23 B22

 [B0 (EXIT)]
   Preds (2): B1 B23
