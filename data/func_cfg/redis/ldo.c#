extern int (lua_yield)(lua_State *L, int nresults)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: DeclRefExpr 0x55f42eee2bb0 <ldo.c:449:13> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eee2bd8 <ldo.c:449:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eee2bb0 <col:13> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B1.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: MemberExpr 0x55f42eee2bf0 <ldo.c:449:13, col:16> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
`-ImplicitCastExpr 0x55f42eee2bd8 <col:13> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eee2bb0 <col:13> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B1.2]->top
   4: ImplicitCastExpr 0x55f42eee2c50 <ldo.c:449:13, col:16> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x55f42eee2bf0 <col:13, col:16> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
  `-ImplicitCastExpr 0x55f42eee2bd8 <col:13> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eee2bb0 <col:13> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: DeclRefExpr 0x55f42eee2c28 <ldo.c:449:22> 'int' lvalue ParmVar 0x55f42eee25b0 'nresults' 'int'
nresults
   6: ImplicitCastExpr 0x55f42eee2c68 <ldo.c:449:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x55f42eee2c28 <col:22> 'int' lvalue ParmVar 0x55f42eee25b0 'nresults' 'int'
[B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x55f42eee2c80 <ldo.c:449:13, col:22> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x55f42eee2c50 <col:13, col:16> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x55f42eee2bf0 <col:13, col:16> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
|   `-ImplicitCastExpr 0x55f42eee2bd8 <col:13> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x55f42eee2bb0 <col:13> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eee2c68 <col:22> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55f42eee2c28 <col:22> 'int' lvalue ParmVar 0x55f42eee25b0 'nresults' 'int'
[B1.4] - [B1.6]
   8: DeclRefExpr 0x55f42eee2b38 <ldo.c:449:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x55f42eee2b60 <ldo.c:449:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eee2b38 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B1.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: MemberExpr 0x55f42eee2b78 <ldo.c:449:3, col:6> 'StkId':'TValue *' lvalue ->base 0x55f42ee88780
`-ImplicitCastExpr 0x55f42eee2b60 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eee2b38 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B1.9]->base
  11: BinaryOperator 0x55f42eee2ca8 <ldo.c:449:3, col:22> 'StkId':'TValue *' '='
|-MemberExpr 0x55f42eee2b78 <col:3, col:6> 'StkId':'TValue *' lvalue ->base 0x55f42ee88780
| `-ImplicitCastExpr 0x55f42eee2b60 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eee2b38 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
`-BinaryOperator 0x55f42eee2c80 <col:13, col:22> 'StkId':'TValue *' '-'
  |-ImplicitCastExpr 0x55f42eee2c50 <col:13, col:16> 'StkId':'TValue *' <LValueToRValue>
  | `-MemberExpr 0x55f42eee2bf0 <col:13, col:16> 'StkId':'TValue *' lvalue ->top 0x55f42ee88728
  |   `-ImplicitCastExpr 0x55f42eee2bd8 <col:13> 'lua_State *' <LValueToRValue>
  |     `-DeclRefExpr 0x55f42eee2bb0 <col:13> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
  `-ImplicitCastExpr 0x55f42eee2c68 <col:22> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55f42eee2c28 <col:22> 'int' lvalue ParmVar 0x55f42eee25b0 'nresults' 'int'
[B1.10] = [B1.7]
  12: IntegerLiteral 0x55f42eee2d48 <./lua.h:43:19> 'int' 1
1
  13: ImplicitCastExpr 0x55f42eee2d68 <./lua.h:43:19> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x55f42eee2d48 <col:19> 'int' 1
[B1.12] (ImplicitCastExpr, IntegralCast, lu_byte)
  14: DeclRefExpr 0x55f42eee2cd0 <ldo.c:450:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
L
  15: ImplicitCastExpr 0x55f42eee2cf8 <ldo.c:450:3> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eee2cd0 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B1.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: MemberExpr 0x55f42eee2d10 <ldo.c:450:3, col:6> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
`-ImplicitCastExpr 0x55f42eee2cf8 <col:3> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eee2cd0 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B1.15]->status
  17: BinaryOperator 0x55f42eee2d80 <ldo.c:450:3, ./lua.h:43:19> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55f42eee2d10 <ldo.c:450:3, col:6> 'lu_byte':'unsigned char' lvalue ->status 0x55f42ee886d0
| `-ImplicitCastExpr 0x55f42eee2cf8 <col:3> 'lua_State *' <LValueToRValue>
|   `-DeclRefExpr 0x55f42eee2cd0 <col:3> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eee2d68 <./lua.h:43:19> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x55f42eee2d48 <col:19> 'int' 1
[B1.16] = [B1.13]
  18: IntegerLiteral 0x55f42eee2da8 <./llimits.h:111:33> 'int' 0
0
  19: CStyleCastExpr 0x55f42eee2dd8 <./llimits.h:111:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eee2da8 <col:33> 'int' 0
(void)[B1.18] (CStyleCastExpr, ToVoid, void)
  20: IntegerLiteral 0x55f42eee2e20 <ldo.c:452:11> 'int' 1
1
  21: UnaryOperator 0x55f42eee2e40 <ldo.c:452:10, col:11> 'int' prefix '-'
`-IntegerLiteral 0x55f42eee2e20 <col:11> 'int' 1
-[B1.20]
  22: ReturnStmt 0x55f42eee2e60 <ldo.c:452:3, col:11>
`-UnaryOperator 0x55f42eee2e40 <col:10, col:11> 'int' prefix '-'
  `-IntegerLiteral 0x55f42eee2e20 <col:11> 'int' 1
return [B1.21];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55f42eee2980 <ldo.c:448:5> 'void (lua_State *, const char *, ...)' Function 0x55f42ee8f070 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x55f42eee2a68 <ldo.c:448:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55f42eee2980 <col:5> 'void (lua_State *, const char *, ...)' Function 0x55f42ee8f070 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x55f42eee29a8 <ldo.c:448:19> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55f42eee2ab8 <ldo.c:448:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eee29a8 <col:19> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B2.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x55f42eee2a08 <ldo.c:448:22> 'char [51]' lvalue "attempt to yield across metamethod/C-call boundary"
"attempt to yield across metamethod/C-call boundary"
   6: ImplicitCastExpr 0x55f42eee2ad0 <ldo.c:448:22> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55f42eee2a08 <col:22> 'char [51]' lvalue "attempt to yield across metamethod/C-call boundary"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x55f42eee2ae8 <ldo.c:448:22> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55f42eee2ad0 <col:22> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55f42eee2a08 <col:22> 'char [51]' lvalue "attempt to yield across metamethod/C-call boundary"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x55f42eee2a80 <ldo.c:448:5, col:74> 'void'
|-ImplicitCastExpr 0x55f42eee2a68 <col:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55f42eee2980 <col:5> 'void (lua_State *, const char *, ...)' Function 0x55f42ee8f070 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x55f42eee2ab8 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55f42eee29a8 <col:19> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eee2ae8 <col:22> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55f42eee2ad0 <col:22> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55f42eee2a08 <col:22> 'char [51]' lvalue "attempt to yield across metamethod/C-call boundary"
[B2.2]([B2.4], [B2.7])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55f42eee26f8 <ldo.c:445:23> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
L
   2: ImplicitCastExpr 0x55f42eee2730 <ldo.c:445:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eee26f8 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.1] (ImplicitCastExpr, LValueToRValue, lua_State *)
   3: CStyleCastExpr 0x55f42eee2748 <./luaconf.h:728:35, ldo.c:445:23> 'void' <ToVoid>
`-ImplicitCastExpr 0x55f42eee2730 <col:23> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eee26f8 <col:23> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
(void)[B3.2] (CStyleCastExpr, ToVoid, void)
   4: IntegerLiteral 0x55f42eee2790 <./llimits.h:110:33> 'int' 0
0
   5: CStyleCastExpr 0x55f42eee27c0 <./llimits.h:110:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x55f42eee2790 <col:33> 'int' 0
(void)[B3.4] (CStyleCastExpr, ToVoid, void)
   6: DeclRefExpr 0x55f42eee2808 <ldo.c:447:7> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x55f42eee2830 <ldo.c:447:7> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eee2808 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: MemberExpr 0x55f42eee2848 <ldo.c:447:7, col:10> 'unsigned short' lvalue ->nCcalls 0x55f42ee88c00
`-ImplicitCastExpr 0x55f42eee2830 <col:7> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eee2808 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.7]->nCcalls
   9: ImplicitCastExpr 0x55f42eee28f8 <ldo.c:447:7, col:10> 'unsigned short' <LValueToRValue>
`-MemberExpr 0x55f42eee2848 <col:7, col:10> 'unsigned short' lvalue ->nCcalls 0x55f42ee88c00
  `-ImplicitCastExpr 0x55f42eee2830 <col:7> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eee2808 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.8] (ImplicitCastExpr, LValueToRValue, unsigned short)
  10: ImplicitCastExpr 0x55f42eee2910 <ldo.c:447:7, col:10> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55f42eee28f8 <col:7, col:10> 'unsigned short' <LValueToRValue>
  `-MemberExpr 0x55f42eee2848 <col:7, col:10> 'unsigned short' lvalue ->nCcalls 0x55f42ee88c00
    `-ImplicitCastExpr 0x55f42eee2830 <col:7> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eee2808 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.9] (ImplicitCastExpr, IntegralCast, int)
  11: DeclRefExpr 0x55f42eee2880 <ldo.c:447:20> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x55f42eee28a8 <ldo.c:447:20> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55f42eee2880 <col:20> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: MemberExpr 0x55f42eee28c0 <ldo.c:447:20, col:23> 'unsigned short' lvalue ->baseCcalls 0x55f42ee88c60
`-ImplicitCastExpr 0x55f42eee28a8 <col:20> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x55f42eee2880 <col:20> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.12]->baseCcalls
  14: ImplicitCastExpr 0x55f42eee2928 <ldo.c:447:20, col:23> 'unsigned short' <LValueToRValue>
`-MemberExpr 0x55f42eee28c0 <col:20, col:23> 'unsigned short' lvalue ->baseCcalls 0x55f42ee88c60
  `-ImplicitCastExpr 0x55f42eee28a8 <col:20> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x55f42eee2880 <col:20> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.13] (ImplicitCastExpr, LValueToRValue, unsigned short)
  15: ImplicitCastExpr 0x55f42eee2940 <ldo.c:447:20, col:23> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55f42eee2928 <col:20, col:23> 'unsigned short' <LValueToRValue>
  `-MemberExpr 0x55f42eee28c0 <col:20, col:23> 'unsigned short' lvalue ->baseCcalls 0x55f42ee88c60
    `-ImplicitCastExpr 0x55f42eee28a8 <col:20> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x55f42eee2880 <col:20> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.14] (ImplicitCastExpr, IntegralCast, int)
  16: BinaryOperator 0x55f42eee2958 <ldo.c:447:7, col:23> 'int' '>'
|-ImplicitCastExpr 0x55f42eee2910 <col:7, col:10> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55f42eee28f8 <col:7, col:10> 'unsigned short' <LValueToRValue>
|   `-MemberExpr 0x55f42eee2848 <col:7, col:10> 'unsigned short' lvalue ->nCcalls 0x55f42ee88c00
|     `-ImplicitCastExpr 0x55f42eee2830 <col:7> 'lua_State *' <LValueToRValue>
|       `-DeclRefExpr 0x55f42eee2808 <col:7> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
`-ImplicitCastExpr 0x55f42eee2940 <col:20, col:23> 'int' <IntegralCast>
  `-ImplicitCastExpr 0x55f42eee2928 <col:20, col:23> 'unsigned short' <LValueToRValue>
    `-MemberExpr 0x55f42eee28c0 <col:20, col:23> 'unsigned short' lvalue ->baseCcalls 0x55f42ee88c60
      `-ImplicitCastExpr 0x55f42eee28a8 <col:20> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x55f42eee2880 <col:20> 'lua_State *' lvalue ParmVar 0x55f42eee2538 'L' 'lua_State *'
[B3.10] > [B3.15]
   T: if [B3.16]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1
