void luaK_patchtohere(FuncState *fs, int list)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x5637768bc3c0 <lcode.c:180:3> 'int (FuncState *)' Function 0x5637768b2b18 'luaK_getlabel' 'int (FuncState *)'
luaK_getlabel
   2: ImplicitCastExpr 0x5637768bc410 <lcode.c:180:3> 'int (*)(FuncState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768bc3c0 <col:3> 'int (FuncState *)' Function 0x5637768b2b18 'luaK_getlabel' 'int (FuncState *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(FuncState *))
   3: DeclRefExpr 0x5637768bc3e8 <lcode.c:180:17> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
fs
   4: ImplicitCastExpr 0x5637768bc458 <lcode.c:180:17> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768bc3e8 <col:17> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, FuncState *)
   5: CallExpr 0x5637768bc428 <lcode.c:180:3, col:19> 'int'
|-ImplicitCastExpr 0x5637768bc410 <col:3> 'int (*)(FuncState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768bc3c0 <col:3> 'int (FuncState *)' Function 0x5637768b2b18 'luaK_getlabel' 'int (FuncState *)'
`-ImplicitCastExpr 0x5637768bc458 <col:17> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768bc3e8 <col:17> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
[B1.2]([B1.4])
   6: DeclRefExpr 0x5637768bc470 <lcode.c:181:3> 'void (FuncState *, int *, int)' Function 0x5637767eab40 'luaK_concat' 'void (FuncState *, int *, int)'
luaK_concat
   7: ImplicitCastExpr 0x5637768bc580 <lcode.c:181:3> 'void (*)(FuncState *, int *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5637768bc470 <col:3> 'void (FuncState *, int *, int)' Function 0x5637767eab40 'luaK_concat' 'void (FuncState *, int *, int)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, int *, int))
   8: DeclRefExpr 0x5637768bc498 <lcode.c:181:15> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
fs
   9: ImplicitCastExpr 0x5637768bc5d8 <lcode.c:181:15> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768bc498 <col:15> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
[B1.8] (ImplicitCastExpr, LValueToRValue, FuncState *)
  10: DeclRefExpr 0x5637768bc4c0 <lcode.c:181:20> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
fs
  11: ImplicitCastExpr 0x5637768bc4e8 <lcode.c:181:20> 'FuncState *' <LValueToRValue>
`-DeclRefExpr 0x5637768bc4c0 <col:20> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
[B1.10] (ImplicitCastExpr, LValueToRValue, FuncState *)
  12: MemberExpr 0x5637768bc500 <lcode.c:181:20, col:24> 'int' lvalue ->jpc 0x56377687e208
`-ImplicitCastExpr 0x5637768bc4e8 <col:20> 'FuncState *' <LValueToRValue>
  `-DeclRefExpr 0x5637768bc4c0 <col:20> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
[B1.11]->jpc
  13: UnaryOperator 0x5637768bc538 <lcode.c:181:19, col:24> 'int *' prefix '&'
`-MemberExpr 0x5637768bc500 <col:20, col:24> 'int' lvalue ->jpc 0x56377687e208
  `-ImplicitCastExpr 0x5637768bc4e8 <col:20> 'FuncState *' <LValueToRValue>
    `-DeclRefExpr 0x5637768bc4c0 <col:20> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
&[B1.12]
  14: DeclRefExpr 0x5637768bc558 <lcode.c:181:29> 'int' lvalue ParmVar 0x5637768bc238 'list' 'int'
list
  15: ImplicitCastExpr 0x5637768bc5f0 <lcode.c:181:29> 'int' <LValueToRValue>
`-DeclRefExpr 0x5637768bc558 <col:29> 'int' lvalue ParmVar 0x5637768bc238 'list' 'int'
[B1.14] (ImplicitCastExpr, LValueToRValue, int)
  16: CallExpr 0x5637768bc598 <lcode.c:181:3, col:33> 'void'
|-ImplicitCastExpr 0x5637768bc580 <col:3> 'void (*)(FuncState *, int *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5637768bc470 <col:3> 'void (FuncState *, int *, int)' Function 0x5637767eab40 'luaK_concat' 'void (FuncState *, int *, int)'
|-ImplicitCastExpr 0x5637768bc5d8 <col:15> 'FuncState *' <LValueToRValue>
| `-DeclRefExpr 0x5637768bc498 <col:15> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
|-UnaryOperator 0x5637768bc538 <col:19, col:24> 'int *' prefix '&'
| `-MemberExpr 0x5637768bc500 <col:20, col:24> 'int' lvalue ->jpc 0x56377687e208
|   `-ImplicitCastExpr 0x5637768bc4e8 <col:20> 'FuncState *' <LValueToRValue>
|     `-DeclRefExpr 0x5637768bc4c0 <col:20> 'FuncState *' lvalue ParmVar 0x5637768bc1c0 'fs' 'FuncState *'
`-ImplicitCastExpr 0x5637768bc5f0 <col:29> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5637768bc558 <col:29> 'int' lvalue ParmVar 0x5637768bc238 'list' 'int'
[B1.7]([B1.9], [B1.13], [B1.15])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
