static int os_setlocale(lua_State *L)
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: DeclRefExpr 0x55626ed0b168 <./lauxlib.h:103:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x55626ecf18d8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
luaL_optlstring
   2: ImplicitCastExpr 0x55626ed0b318 <./lauxlib.h:103:32> 'const char *(*)(lua_State *, int, const char *, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0b168 <col:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x55626ecf18d8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, const char *, size_t *))
   3: DeclRefExpr 0x55626ed0b190 <loslib.c:209:34> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55626ed0b378 <loslib.c:209:34> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed0b190 <col:34> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55626ed0b1b8 <loslib.c:209:37> 'int' 1
1
   6: IntegerLiteral 0x55626ed0b1f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x55626ed0b230 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55626ed0b1f8 <col:24> 'int' 0
(void *)[B1.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x55626ed0b390 <./lauxlib.h:103:56, col:58> 'const char *' <NullToPointer>
`-ParenExpr 0x55626ed0b278 <col:56, col:58> 'void *'
  `-ParenExpr 0x55626ed0b258 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
    `-CStyleCastExpr 0x55626ed0b230 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55626ed0b1f8 <col:24> 'int' 0
(([B1.7])) (ImplicitCastExpr, NullToPointer, const char *)
   9: IntegerLiteral 0x55626ed0b298 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  10: CStyleCastExpr 0x55626ed0b2d0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55626ed0b298 <col:24> 'int' 0
(void *)[B1.9] (CStyleCastExpr, NullToPointer, void *)
  11: ImplicitCastExpr 0x55626ed0b3a8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x55626ed0b2f8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55626ed0b2d0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55626ed0b298 <col:24> 'int' 0
([B1.10]) (ImplicitCastExpr, NullToPointer, size_t *)
  12: CallExpr 0x55626ed0b330 <./lauxlib.h:103:32, col:65> 'const char *'
|-ImplicitCastExpr 0x55626ed0b318 <col:32> 'const char *(*)(lua_State *, int, const char *, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0b168 <col:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x55626ecf18d8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
|-ImplicitCastExpr 0x55626ed0b378 <loslib.c:209:34> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed0b190 <col:34> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
|-ParenExpr 0x55626ed0b1d8 <./lauxlib.h:103:51, col:53> 'int'
| `-IntegerLiteral 0x55626ed0b1b8 <loslib.c:209:37> 'int' 1
|-ImplicitCastExpr 0x55626ed0b390 <./lauxlib.h:103:56, col:58> 'const char *' <NullToPointer>
| `-ParenExpr 0x55626ed0b278 <col:56, col:58> 'void *'
|   `-ParenExpr 0x55626ed0b258 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
|     `-CStyleCastExpr 0x55626ed0b230 <col:17, col:24> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x55626ed0b1f8 <col:24> 'int' 0
`-ImplicitCastExpr 0x55626ed0b3a8 <col:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x55626ed0b2f8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55626ed0b2d0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55626ed0b298 <col:24> 'int' 0
[B1.2]([B1.4], ([B1.5]), [B1.8], [B1.11])
  13: DeclStmt 0x55626ed0b3e0 <loslib.c:209:3, col:45>col:15
`-VarDecl 0x55626ed0b108 <col:3, ./lauxlib.h:103:66> loslib.c:209:15 used l 'const char *' cinit
  `-ParenExpr 0x55626ed0b3c0 <./lauxlib.h:103:31, col:66> 'const char *'
    `-CallExpr 0x55626ed0b330 <col:32, col:65> 'const char *'
      |-ImplicitCastExpr 0x55626ed0b318 <col:32> 'const char *(*)(lua_State *, int, const char *, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55626ed0b168 <col:32> 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)' Function 0x55626ecf18d8 'luaL_optlstring' 'const char *(lua_State *, int, const char *, size_t *)':'const char *(lua_State *, int, const char *, size_t *)'
      |-ImplicitCastExpr 0x55626ed0b378 <loslib.c:209:34> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x55626ed0b190 <col:34> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
      |-ParenExpr 0x55626ed0b1d8 <./lauxlib.h:103:51, col:53> 'int'
      | `-IntegerLiteral 0x55626ed0b1b8 <loslib.c:209:37> 'int' 1
      |-ImplicitCastExpr 0x55626ed0b390 <./lauxlib.h:103:56, col:58> 'const char *' <NullToPointer>
      | `-ParenExpr 0x55626ed0b278 <col:56, col:58> 'void *'
      |   `-ParenExpr 0x55626ed0b258 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'void *'
      |     `-CStyleCastExpr 0x55626ed0b230 <col:17, col:24> 'void *' <NullToPointer>
      |       `-IntegerLiteral 0x55626ed0b1f8 <col:24> 'int' 0
      `-ImplicitCastExpr 0x55626ed0b3a8 <col:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x55626ed0b2f8 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x55626ed0b2d0 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x55626ed0b298 <col:24> 'int' 0
const char *l = (luaL_optlstring(L, (1), (((void *)0)), ((void *)0)));
  14: DeclRefExpr 0x55626ed0b470 <loslib.c:210:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x55626ecf47e8 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
luaL_checkoption
  15: ImplicitCastExpr 0x55626ed0b598 <loslib.c:210:12> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0b470 <col:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x55626ecf47e8 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
[B1.14] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *, const char *const *))
  16: DeclRefExpr 0x55626ed0b498 <loslib.c:210:29> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
L
  17: ImplicitCastExpr 0x55626ed0b5f8 <loslib.c:210:29> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed0b498 <col:29> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
[B1.16] (ImplicitCastExpr, LValueToRValue, lua_State *)
  18: IntegerLiteral 0x55626ed0b4c0 <loslib.c:210:32> 'int' 2
2
  19: StringLiteral 0x55626ed0b4e0 <loslib.c:210:35> 'char [4]' lvalue "all"
"all"
  20: ImplicitCastExpr 0x55626ed0b610 <loslib.c:210:35> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55626ed0b4e0 <col:35> 'char [4]' lvalue "all"
[B1.19] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  21: ImplicitCastExpr 0x55626ed0b628 <loslib.c:210:35> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55626ed0b610 <col:35> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55626ed0b4e0 <col:35> 'char [4]' lvalue "all"
[B1.20] (ImplicitCastExpr, BitCast, const char *)
  22: DeclRefExpr 0x55626ed0b510 <loslib.c:210:42> 'const char *const [7]' lvalue Var 0x55626ed0abb8 'catnames' 'const char *const [7]'
catnames
  23: ImplicitCastExpr 0x55626ed0b640 <loslib.c:210:42> 'const char *const *' <ArrayToPointerDecay>
`-DeclRefExpr 0x55626ed0b510 <col:42> 'const char *const [7]' lvalue Var 0x55626ed0abb8 'catnames' 'const char *const [7]'
[B1.22] (ImplicitCastExpr, ArrayToPointerDecay, const char *const *)
  24: CallExpr 0x55626ed0b5b0 <loslib.c:210:12, col:50> 'int'
|-ImplicitCastExpr 0x55626ed0b598 <col:12> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0b470 <col:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x55626ecf47e8 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
|-ImplicitCastExpr 0x55626ed0b5f8 <col:29> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed0b498 <col:29> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
|-IntegerLiteral 0x55626ed0b4c0 <col:32> 'int' 2
|-ImplicitCastExpr 0x55626ed0b628 <col:35> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55626ed0b610 <col:35> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55626ed0b4e0 <col:35> 'char [4]' lvalue "all"
`-ImplicitCastExpr 0x55626ed0b640 <col:42> 'const char *const *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x55626ed0b510 <col:42> 'const char *const [7]' lvalue Var 0x55626ed0abb8 'catnames' 'const char *const [7]'
[B1.15]([B1.17], [B1.18], [B1.21], [B1.23])
  25: DeclStmt 0x55626ed0b658 <loslib.c:210:3, col:51>col:7
`-VarDecl 0x55626ed0b410 <col:3, col:50> col:7 used op 'int' cinit
  `-CallExpr 0x55626ed0b5b0 <col:12, col:50> 'int'
    |-ImplicitCastExpr 0x55626ed0b598 <col:12> 'int (*)(lua_State *, int, const char *, const char *const *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55626ed0b470 <col:12> 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)' Function 0x55626ecf47e8 'luaL_checkoption' 'int (lua_State *, int, const char *, const char *const *)':'int (lua_State *, int, const char *, const char *const *)'
    |-ImplicitCastExpr 0x55626ed0b5f8 <col:29> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x55626ed0b498 <col:29> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
    |-IntegerLiteral 0x55626ed0b4c0 <col:32> 'int' 2
    |-ImplicitCastExpr 0x55626ed0b628 <col:35> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55626ed0b610 <col:35> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55626ed0b4e0 <col:35> 'char [4]' lvalue "all"
    `-ImplicitCastExpr 0x55626ed0b640 <col:42> 'const char *const *' <ArrayToPointerDecay>
      `-DeclRefExpr 0x55626ed0b510 <col:42> 'const char *const [7]' lvalue Var 0x55626ed0abb8 'catnames' 'const char *const [7]'
int op = luaL_checkoption(L, 2, "all", catnames);
  26: DeclRefExpr 0x55626ed0b670 <loslib.c:211:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55626ecba460 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
lua_pushstring
  27: ImplicitCastExpr 0x55626ed0bc88 <loslib.c:211:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0b670 <col:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55626ecba460 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
[B1.26] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *))
  28: DeclRefExpr 0x55626ed0b698 <loslib.c:211:18> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
L
  29: ImplicitCastExpr 0x55626ed0bcd8 <loslib.c:211:18> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ed0b698 <col:18> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
[B1.28] (ImplicitCastExpr, LValueToRValue, lua_State *)
  30: DeclRefExpr 0x55626ed0b6c0 <loslib.c:211:21> 'char *(int, const char *)' Function 0x55626ebf1d08 'setlocale' 'char *(int, const char *)'
setlocale
  31: ImplicitCastExpr 0x55626ed0bc08 <loslib.c:211:21> 'char *(*)(int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ed0b6c0 <col:21> 'char *(int, const char *)' Function 0x55626ebf1d08 'setlocale' 'char *(int, const char *)'
[B1.30] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(int, const char *))
  32: DeclRefExpr 0x55626ed0b6e8 <loslib.c:211:31> 'const int [6]' lvalue Var 0x55626ed0a8b0 'cat' 'const int [6]'
cat
  33: ImplicitCastExpr 0x55626ed0b738 <loslib.c:211:31> 'const int *' <ArrayToPointerDecay>
`-DeclRefExpr 0x55626ed0b6e8 <col:31> 'const int [6]' lvalue Var 0x55626ed0a8b0 'cat' 'const int [6]'
[B1.32] (ImplicitCastExpr, ArrayToPointerDecay, const int *)
  34: DeclRefExpr 0x55626ed0b710 <loslib.c:211:35> 'int' lvalue Var 0x55626ed0b410 'op' 'int'
op
  35: ImplicitCastExpr 0x55626ed0bb70 <loslib.c:211:35> 'int' <LValueToRValue>
`-DeclRefExpr 0x55626ed0b710 <col:35> 'int' lvalue Var 0x55626ed0b410 'op' 'int'
[B1.34] (ImplicitCastExpr, LValueToRValue, int)
  36: ArraySubscriptExpr 0x55626ed0bb88 <loslib.c:211:31, col:37> 'const int' lvalue
|-ImplicitCastExpr 0x55626ed0b738 <col:31> 'const int *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x55626ed0b6e8 <col:31> 'const int [6]' lvalue Var 0x55626ed0a8b0 'cat' 'const int [6]'
`-ImplicitCastExpr 0x55626ed0bb70 <col:35> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55626ed0b710 <col:35> 'int' lvalue Var 0x55626ed0b410 'op' 'int'
[B1.33][[B1.35]]
  37: ImplicitCastExpr 0x55626ed0bc58 <loslib.c:211:31, col:37> 'int' <LValueToRValue>
`-ArraySubscriptExpr 0x55626ed0bb88 <col:31, col:37> 'const int' lvalue
  |-ImplicitCastExpr 0x55626ed0b738 <col:31> 'const int *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x55626ed0b6e8 <col:31> 'const int [6]' lvalue Var 0x55626ed0a8b0 'cat' 'const int [6]'
  `-ImplicitCastExpr 0x55626ed0bb70 <col:35> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55626ed0b710 <col:35> 'int' lvalue Var 0x55626ed0b410 'op' 'int'
[B1.36] (ImplicitCastExpr, LValueToRValue, int)
  38: DeclRefExpr 0x55626ed0bbb0 <loslib.c:211:40> 'const char *' lvalue Var 0x55626ed0b108 'l' 'const char *'
l
  39: ImplicitCastExpr 0x55626ed0bc70 <loslib.c:211:40> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55626ed0bbb0 <col:40> 'const char *' lvalue Var 0x55626ed0b108 'l' 'const char *'
[B1.38] (ImplicitCastExpr, LValueToRValue, const char *)
  40: CallExpr 0x55626ed0bc20 <loslib.c:211:21, col:41> 'char *'
|-ImplicitCastExpr 0x55626ed0bc08 <col:21> 'char *(*)(int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0b6c0 <col:21> 'char *(int, const char *)' Function 0x55626ebf1d08 'setlocale' 'char *(int, const char *)'
|-ImplicitCastExpr 0x55626ed0bc58 <col:31, col:37> 'int' <LValueToRValue>
| `-ArraySubscriptExpr 0x55626ed0bb88 <col:31, col:37> 'const int' lvalue
|   |-ImplicitCastExpr 0x55626ed0b738 <col:31> 'const int *' <ArrayToPointerDecay>
|   | `-DeclRefExpr 0x55626ed0b6e8 <col:31> 'const int [6]' lvalue Var 0x55626ed0a8b0 'cat' 'const int [6]'
|   `-ImplicitCastExpr 0x55626ed0bb70 <col:35> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x55626ed0b710 <col:35> 'int' lvalue Var 0x55626ed0b410 'op' 'int'
`-ImplicitCastExpr 0x55626ed0bc70 <col:40> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55626ed0bbb0 <col:40> 'const char *' lvalue Var 0x55626ed0b108 'l' 'const char *'
[B1.31]([B1.37], [B1.39])
  41: ImplicitCastExpr 0x55626ed0bcf0 <loslib.c:211:21, col:41> 'const char *' <BitCast>
`-CallExpr 0x55626ed0bc20 <col:21, col:41> 'char *'
  |-ImplicitCastExpr 0x55626ed0bc08 <col:21> 'char *(*)(int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55626ed0b6c0 <col:21> 'char *(int, const char *)' Function 0x55626ebf1d08 'setlocale' 'char *(int, const char *)'
  |-ImplicitCastExpr 0x55626ed0bc58 <col:31, col:37> 'int' <LValueToRValue>
  | `-ArraySubscriptExpr 0x55626ed0bb88 <col:31, col:37> 'const int' lvalue
  |   |-ImplicitCastExpr 0x55626ed0b738 <col:31> 'const int *' <ArrayToPointerDecay>
  |   | `-DeclRefExpr 0x55626ed0b6e8 <col:31> 'const int [6]' lvalue Var 0x55626ed0a8b0 'cat' 'const int [6]'
  |   `-ImplicitCastExpr 0x55626ed0bb70 <col:35> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x55626ed0b710 <col:35> 'int' lvalue Var 0x55626ed0b410 'op' 'int'
  `-ImplicitCastExpr 0x55626ed0bc70 <col:40> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55626ed0bbb0 <col:40> 'const char *' lvalue Var 0x55626ed0b108 'l' 'const char *'
[B1.40] (ImplicitCastExpr, BitCast, const char *)
  42: CallExpr 0x55626ed0bca0 <loslib.c:211:3, col:42> 'void'
|-ImplicitCastExpr 0x55626ed0bc88 <col:3> 'void (*)(lua_State *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ed0b670 <col:3> 'void (lua_State *, const char *)':'void (lua_State *, const char *)' Function 0x55626ecba460 'lua_pushstring' 'void (lua_State *, const char *)':'void (lua_State *, const char *)'
|-ImplicitCastExpr 0x55626ed0bcd8 <col:18> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ed0b698 <col:18> 'lua_State *' lvalue ParmVar 0x55626ed0a6d8 'L' 'lua_State *'
`-ImplicitCastExpr 0x55626ed0bcf0 <col:21, col:41> 'const char *' <BitCast>
  `-CallExpr 0x55626ed0bc20 <col:21, col:41> 'char *'
    |-ImplicitCastExpr 0x55626ed0bc08 <col:21> 'char *(*)(int, const char *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x55626ed0b6c0 <col:21> 'char *(int, const char *)' Function 0x55626ebf1d08 'setlocale' 'char *(int, const char *)'
    |-ImplicitCastExpr 0x55626ed0bc58 <col:31, col:37> 'int' <LValueToRValue>
    | `-ArraySubscriptExpr 0x55626ed0bb88 <col:31, col:37> 'const int' lvalue
    |   |-ImplicitCastExpr 0x55626ed0b738 <col:31> 'const int *' <ArrayToPointerDecay>
    |   | `-DeclRefExpr 0x55626ed0b6e8 <col:31> 'const int [6]' lvalue Var 0x55626ed0a8b0 'cat' 'const int [6]'
    |   `-ImplicitCastExpr 0x55626ed0bb70 <col:35> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55626ed0b710 <col:35> 'int' lvalue Var 0x55626ed0b410 'op' 'int'
    `-ImplicitCastExpr 0x55626ed0bc70 <col:40> 'const char *' <LValueToRValue>
      `-DeclRefExpr 0x55626ed0bbb0 <col:40> 'const char *' lvalue Var 0x55626ed0b108 'l' 'const char *'
[B1.27]([B1.29], [B1.41])
  43: IntegerLiteral 0x55626ed0bd08 <loslib.c:212:10> 'int' 1
1
  44: ReturnStmt 0x55626ed0bd28 <loslib.c:212:3, col:10>
`-IntegerLiteral 0x55626ed0bd08 <col:10> 'int' 1
return [B1.43];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: StringLiteral 0x55626ed0ac18 <loslib.c:207:42> 'char [4]' lvalue "all"
"all"
   2: ImplicitCastExpr 0x55626ed0aeb0 <loslib.c:207:42> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55626ed0ac18 <col:42> 'char [4]' lvalue "all"
[B2.1] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   3: ImplicitCastExpr 0x55626ed0aec8 <loslib.c:207:42> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55626ed0aeb0 <col:42> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55626ed0ac18 <col:42> 'char [4]' lvalue "all"
[B2.2] (ImplicitCastExpr, BitCast, const char *)
   4: StringLiteral 0x55626ed0ac48 <loslib.c:207:49> 'char [8]' lvalue "collate"
"collate"
   5: ImplicitCastExpr 0x55626ed0aee8 <loslib.c:207:49> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55626ed0ac48 <col:49> 'char [8]' lvalue "collate"
[B2.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: ImplicitCastExpr 0x55626ed0af00 <loslib.c:207:49> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55626ed0aee8 <col:49> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55626ed0ac48 <col:49> 'char [8]' lvalue "collate"
[B2.5] (ImplicitCastExpr, BitCast, const char *)
   7: StringLiteral 0x55626ed0ac78 <loslib.c:207:60> 'char [6]' lvalue "ctype"
"ctype"
   8: ImplicitCastExpr 0x55626ed0af28 <loslib.c:207:60> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55626ed0ac78 <col:60> 'char [6]' lvalue "ctype"
[B2.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x55626ed0af40 <loslib.c:207:60> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55626ed0af28 <col:60> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55626ed0ac78 <col:60> 'char [6]' lvalue "ctype"
[B2.8] (ImplicitCastExpr, BitCast, const char *)
  10: StringLiteral 0x55626ed0ace8 <loslib.c:207:69> 'char [9]' lvalue "monetary"
"monetary"
  11: ImplicitCastExpr 0x55626ed0af78 <loslib.c:207:69> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55626ed0ace8 <col:69> 'char [9]' lvalue "monetary"
[B2.10] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  12: ImplicitCastExpr 0x55626ed0af90 <loslib.c:207:69> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55626ed0af78 <col:69> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55626ed0ace8 <col:69> 'char [9]' lvalue "monetary"
[B2.11] (ImplicitCastExpr, BitCast, const char *)
  13: StringLiteral 0x55626ed0ad18 <loslib.c:208:6> 'char [8]' lvalue "numeric"
"numeric"
  14: ImplicitCastExpr 0x55626ed0afa8 <loslib.c:208:6> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55626ed0ad18 <col:6> 'char [8]' lvalue "numeric"
[B2.13] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  15: ImplicitCastExpr 0x55626ed0afc0 <loslib.c:208:6> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55626ed0afa8 <col:6> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55626ed0ad18 <col:6> 'char [8]' lvalue "numeric"
[B2.14] (ImplicitCastExpr, BitCast, const char *)
  16: StringLiteral 0x55626ed0ad48 <loslib.c:208:17> 'char [5]' lvalue "time"
"time"
  17: ImplicitCastExpr 0x55626ed0b018 <loslib.c:208:17> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55626ed0ad48 <col:17> 'char [5]' lvalue "time"
[B2.16] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  18: ImplicitCastExpr 0x55626ed0b030 <loslib.c:208:17> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55626ed0b018 <col:17> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55626ed0ad48 <col:17> 'char [5]' lvalue "time"
[B2.17] (ImplicitCastExpr, BitCast, const char *)
  19: IntegerLiteral 0x55626ed0ad78 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
  20: CStyleCastExpr 0x55626ed0adb0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55626ed0ad78 <col:24> 'int' 0
(void *)[B2.19] (CStyleCastExpr, NullToPointer, void *)
  21: ImplicitCastExpr 0x55626ed0b048 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
`-ParenExpr 0x55626ed0add8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55626ed0adb0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55626ed0ad78 <col:24> 'int' 0
([B2.20]) (ImplicitCastExpr, NullToPointer, const char *const)
  22: InitListExpr 0x55626ed0ae70 <loslib.c:207:41, line:208:29> 'const char *const [7]'
|-ImplicitCastExpr 0x55626ed0aec8 <line:207:42> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55626ed0aeb0 <col:42> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55626ed0ac18 <col:42> 'char [4]' lvalue "all"
|-ImplicitCastExpr 0x55626ed0af00 <col:49> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55626ed0aee8 <col:49> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55626ed0ac48 <col:49> 'char [8]' lvalue "collate"
|-ImplicitCastExpr 0x55626ed0af40 <col:60> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55626ed0af28 <col:60> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55626ed0ac78 <col:60> 'char [6]' lvalue "ctype"
|-ImplicitCastExpr 0x55626ed0af90 <col:69> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55626ed0af78 <col:69> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55626ed0ace8 <col:69> 'char [9]' lvalue "monetary"
|-ImplicitCastExpr 0x55626ed0afc0 <line:208:6> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55626ed0afa8 <col:6> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55626ed0ad18 <col:6> 'char [8]' lvalue "numeric"
|-ImplicitCastExpr 0x55626ed0b030 <col:17> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55626ed0b018 <col:17> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55626ed0ad48 <col:17> 'char [5]' lvalue "time"
`-ImplicitCastExpr 0x55626ed0b048 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
  `-ParenExpr 0x55626ed0add8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55626ed0adb0 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55626ed0ad78 <col:24> 'int' 0
{[B2.3], [B2.6], [B2.9], [B2.12], [B2.15], [B2.18], [B2.21]}
  23: DeclStmt 0x55626ed0b0d8 <loslib.c:207:3, line:208:30>line:207:28
`-VarDecl 0x55626ed0abb8 <col:3, line:208:29> line:207:28 used catnames 'const char *const [7]' static cinit
  `-InitListExpr 0x55626ed0ae70 <col:41, line:208:29> 'const char *const [7]'
    |-ImplicitCastExpr 0x55626ed0aec8 <line:207:42> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55626ed0aeb0 <col:42> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55626ed0ac18 <col:42> 'char [4]' lvalue "all"
    |-ImplicitCastExpr 0x55626ed0af00 <col:49> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55626ed0aee8 <col:49> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55626ed0ac48 <col:49> 'char [8]' lvalue "collate"
    |-ImplicitCastExpr 0x55626ed0af40 <col:60> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55626ed0af28 <col:60> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55626ed0ac78 <col:60> 'char [6]' lvalue "ctype"
    |-ImplicitCastExpr 0x55626ed0af90 <col:69> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55626ed0af78 <col:69> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55626ed0ace8 <col:69> 'char [9]' lvalue "monetary"
    |-ImplicitCastExpr 0x55626ed0afc0 <line:208:6> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55626ed0afa8 <col:6> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55626ed0ad18 <col:6> 'char [8]' lvalue "numeric"
    |-ImplicitCastExpr 0x55626ed0b030 <col:17> 'const char *' <BitCast>
    | `-ImplicitCastExpr 0x55626ed0b018 <col:17> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x55626ed0ad48 <col:17> 'char [5]' lvalue "time"
    `-ImplicitCastExpr 0x55626ed0b048 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const char *const' <NullToPointer>
      `-ParenExpr 0x55626ed0add8 <col:16, col:25> 'void *'
        `-CStyleCastExpr 0x55626ed0adb0 <col:17, col:24> 'void *' <NullToPointer>
          `-IntegerLiteral 0x55626ed0ad78 <col:24> 'int' 0
static const char *const catnames[] = {"all", "collate", "ctype", "monetary", "numeric", "time", ((void *)0)};
   Preds (1): B3
   Succs (1): B1

 [B3]
   T: static init catnames
   Preds (2): B4 B5
   Succs (2): B1 B2

 [B4]
   1: IntegerLiteral 0x55626ed0a910 </usr/include/x86_64-linux-gnu/bits/locale.h:32:20> 'int' 6
6
   2: IntegerLiteral 0x55626ed0a930 </usr/include/x86_64-linux-gnu/bits/locale.h:29:24> 'int' 3
3
   3: IntegerLiteral 0x55626ed0a950 </usr/include/x86_64-linux-gnu/bits/locale.h:26:22> 'int' 0
0
   4: IntegerLiteral 0x55626ed0a970 </usr/include/x86_64-linux-gnu/bits/locale.h:30:25> 'int' 4
4
   5: IntegerLiteral 0x55626ed0a990 </usr/include/x86_64-linux-gnu/bits/locale.h:27:24> 'int' 1
1
   6: IntegerLiteral 0x55626ed0a9b0 </usr/include/x86_64-linux-gnu/bits/locale.h:28:21> 'int' 2
2
   7: InitListExpr 0x55626ed0aa40 <loslib.c:205:28, line:206:42> 'const int [6]'
|-IntegerLiteral 0x55626ed0a910 </usr/include/x86_64-linux-gnu/bits/locale.h:32:20> 'int' 6
|-IntegerLiteral 0x55626ed0a930 <line:29:24> 'int' 3
|-IntegerLiteral 0x55626ed0a950 <line:26:22> 'int' 0
|-IntegerLiteral 0x55626ed0a970 <line:30:25> 'int' 4
|-IntegerLiteral 0x55626ed0a990 <line:27:24> 'int' 1
`-IntegerLiteral 0x55626ed0a9b0 <line:28:21> 'int' 2
{[B4.1], [B4.2], [B4.3], [B4.4], [B4.5], [B4.6]}
   8: DeclStmt 0x55626ed0ab78 <loslib.c:205:3, line:206:43>line:205:20
`-VarDecl 0x55626ed0a8b0 <col:3, line:206:42> line:205:20 used cat 'const int [6]' static cinit
  `-InitListExpr 0x55626ed0aa40 <col:28, line:206:42> 'const int [6]'
    |-IntegerLiteral 0x55626ed0a910 </usr/include/x86_64-linux-gnu/bits/locale.h:32:20> 'int' 6
    |-IntegerLiteral 0x55626ed0a930 <line:29:24> 'int' 3
    |-IntegerLiteral 0x55626ed0a950 <line:26:22> 'int' 0
    |-IntegerLiteral 0x55626ed0a970 <line:30:25> 'int' 4
    |-IntegerLiteral 0x55626ed0a990 <line:27:24> 'int' 1
    `-IntegerLiteral 0x55626ed0a9b0 <line:28:21> 'int' 2
static const int cat[] = {6, 3, 0, 4, 1, 2};
   Preds (1): B5
   Succs (1): B3

 [B5]
   T: static init cat
   Preds (1): B6
   Succs (2): B3 B4

 [B0 (EXIT)]
   Preds (1): B1
