static int os_remove(lua_State *L)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x55626ecfec28 <./lauxlib.h:102:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55626ecf1530 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
luaL_checklstring
   2: ImplicitCastExpr 0x55626ecff208 <./lauxlib.h:102:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ecfec28 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55626ecf1530 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(lua_State *, int, size_t *))
   3: DeclRefExpr 0x55626ecfec50 <loslib.c:45:43> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x55626ecff260 <loslib.c:45:43> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ecfec50 <col:43> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x55626ecfec78 <loslib.c:45:46> 'int' 1
1
   6: IntegerLiteral 0x55626ecfecb8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   7: CStyleCastExpr 0x55626ecff160 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x55626ecfecb8 <col:24> 'int' 0
(void *)[B1.6] (CStyleCastExpr, NullToPointer, void *)
   8: ImplicitCastExpr 0x55626ecff278 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
`-ParenExpr 0x55626ecff188 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x55626ecff160 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x55626ecfecb8 <col:24> 'int' 0
([B1.7]) (ImplicitCastExpr, NullToPointer, size_t *)
   9: CallExpr 0x55626ecff220 <./lauxlib.h:102:32, col:62> 'const char *'
|-ImplicitCastExpr 0x55626ecff208 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ecfec28 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55626ecf1530 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
|-ImplicitCastExpr 0x55626ecff260 <loslib.c:45:43> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ecfec50 <col:43> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
|-ParenExpr 0x55626ecfec98 <./lauxlib.h:102:53, col:55> 'int'
| `-IntegerLiteral 0x55626ecfec78 <loslib.c:45:46> 'int' 1
`-ImplicitCastExpr 0x55626ecff278 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
  `-ParenExpr 0x55626ecff188 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x55626ecff160 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x55626ecfecb8 <col:24> 'int' 0
[B1.2]([B1.4], ([B1.5]), [B1.8])
  10: DeclStmt 0x55626ecff2b0 <loslib.c:45:3, col:48>col:15
`-VarDecl 0x55626ecfebc8 <col:3, ./lauxlib.h:102:63> loslib.c:45:15 used filename 'const char *' cinit
  `-ParenExpr 0x55626ecff290 <./lauxlib.h:102:31, col:63> 'const char *'
    `-CallExpr 0x55626ecff220 <col:32, col:62> 'const char *'
      |-ImplicitCastExpr 0x55626ecff208 <col:32> 'const char *(*)(lua_State *, int, size_t *)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55626ecfec28 <col:32> 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)' Function 0x55626ecf1530 'luaL_checklstring' 'const char *(lua_State *, int, size_t *)':'const char *(lua_State *, int, size_t *)'
      |-ImplicitCastExpr 0x55626ecff260 <loslib.c:45:43> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x55626ecfec50 <col:43> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
      |-ParenExpr 0x55626ecfec98 <./lauxlib.h:102:53, col:55> 'int'
      | `-IntegerLiteral 0x55626ecfec78 <loslib.c:45:46> 'int' 1
      `-ImplicitCastExpr 0x55626ecff278 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'size_t *' <NullToPointer>
        `-ParenExpr 0x55626ecff188 <col:16, col:25> 'void *'
          `-CStyleCastExpr 0x55626ecff160 <col:17, col:24> 'void *' <NullToPointer>
            `-IntegerLiteral 0x55626ecfecb8 <col:24> 'int' 0
const char *filename = (luaL_checklstring(L, (1), ((void *)0)));
  11: DeclRefExpr 0x55626ecff2c8 <loslib.c:46:10> 'int (lua_State *, int, const char *)' Function 0x55626ecfc818 'os_pushresult' 'int (lua_State *, int, const char *)'
os_pushresult
  12: ImplicitCastExpr 0x55626ecff498 <loslib.c:46:10> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ecff2c8 <col:10> 'int (lua_State *, int, const char *)' Function 0x55626ecfc818 'os_pushresult' 'int (lua_State *, int, const char *)'
[B1.11] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int, const char *))
  13: DeclRefExpr 0x55626ecff2f0 <loslib.c:46:24> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x55626ecff4f0 <loslib.c:46:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x55626ecff2f0 <col:24> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
[B1.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: DeclRefExpr 0x55626ecff318 <loslib.c:46:27> 'int (const char *)' Function 0x55626ecd1010 'remove' 'int (const char *)'
remove
  16: ImplicitCastExpr 0x55626ecff368 <loslib.c:46:27> 'int (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55626ecff318 <col:27> 'int (const char *)' Function 0x55626ecd1010 'remove' 'int (const char *)'
[B1.15] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *))
  17: DeclRefExpr 0x55626ecff340 <loslib.c:46:34> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
filename
  18: ImplicitCastExpr 0x55626ecff3b0 <loslib.c:46:34> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55626ecff340 <col:34> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
[B1.17] (ImplicitCastExpr, LValueToRValue, const char *)
  19: CallExpr 0x55626ecff380 <loslib.c:46:27, col:42> 'int'
|-ImplicitCastExpr 0x55626ecff368 <col:27> 'int (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ecff318 <col:27> 'int (const char *)' Function 0x55626ecd1010 'remove' 'int (const char *)'
`-ImplicitCastExpr 0x55626ecff3b0 <col:34> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55626ecff340 <col:34> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
[B1.16]([B1.18])
  20: IntegerLiteral 0x55626ecff3c8 <loslib.c:46:47> 'int' 0
0
  21: BinaryOperator 0x55626ecff3e8 <loslib.c:46:27, col:47> 'int' '=='
|-CallExpr 0x55626ecff380 <col:27, col:42> 'int'
| |-ImplicitCastExpr 0x55626ecff368 <col:27> 'int (*)(const char *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x55626ecff318 <col:27> 'int (const char *)' Function 0x55626ecd1010 'remove' 'int (const char *)'
| `-ImplicitCastExpr 0x55626ecff3b0 <col:34> 'const char *' <LValueToRValue>
|   `-DeclRefExpr 0x55626ecff340 <col:34> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
`-IntegerLiteral 0x55626ecff3c8 <col:47> 'int' 0
[B1.19] == [B1.20]
  22: DeclRefExpr 0x55626ecff410 <loslib.c:46:50> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
filename
  23: ImplicitCastExpr 0x55626ecff508 <loslib.c:46:50> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x55626ecff410 <col:50> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
[B1.22] (ImplicitCastExpr, LValueToRValue, const char *)
  24: CallExpr 0x55626ecff4b0 <loslib.c:46:10, col:58> 'int'
|-ImplicitCastExpr 0x55626ecff498 <col:10> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55626ecff2c8 <col:10> 'int (lua_State *, int, const char *)' Function 0x55626ecfc818 'os_pushresult' 'int (lua_State *, int, const char *)'
|-ImplicitCastExpr 0x55626ecff4f0 <col:24> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x55626ecff2f0 <col:24> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
|-BinaryOperator 0x55626ecff3e8 <col:27, col:47> 'int' '=='
| |-CallExpr 0x55626ecff380 <col:27, col:42> 'int'
| | |-ImplicitCastExpr 0x55626ecff368 <col:27> 'int (*)(const char *)' <FunctionToPointerDecay>
| | | `-DeclRefExpr 0x55626ecff318 <col:27> 'int (const char *)' Function 0x55626ecd1010 'remove' 'int (const char *)'
| | `-ImplicitCastExpr 0x55626ecff3b0 <col:34> 'const char *' <LValueToRValue>
| |   `-DeclRefExpr 0x55626ecff340 <col:34> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
| `-IntegerLiteral 0x55626ecff3c8 <col:47> 'int' 0
`-ImplicitCastExpr 0x55626ecff508 <col:50> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x55626ecff410 <col:50> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
[B1.12]([B1.14], [B1.21], [B1.23])
  25: ReturnStmt 0x55626ecff520 <loslib.c:46:3, col:58>
`-CallExpr 0x55626ecff4b0 <col:10, col:58> 'int'
  |-ImplicitCastExpr 0x55626ecff498 <col:10> 'int (*)(lua_State *, int, const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55626ecff2c8 <col:10> 'int (lua_State *, int, const char *)' Function 0x55626ecfc818 'os_pushresult' 'int (lua_State *, int, const char *)'
  |-ImplicitCastExpr 0x55626ecff4f0 <col:24> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x55626ecff2f0 <col:24> 'lua_State *' lvalue ParmVar 0x55626ecfea78 'L' 'lua_State *'
  |-BinaryOperator 0x55626ecff3e8 <col:27, col:47> 'int' '=='
  | |-CallExpr 0x55626ecff380 <col:27, col:42> 'int'
  | | |-ImplicitCastExpr 0x55626ecff368 <col:27> 'int (*)(const char *)' <FunctionToPointerDecay>
  | | | `-DeclRefExpr 0x55626ecff318 <col:27> 'int (const char *)' Function 0x55626ecd1010 'remove' 'int (const char *)'
  | | `-ImplicitCastExpr 0x55626ecff3b0 <col:34> 'const char *' <LValueToRValue>
  | |   `-DeclRefExpr 0x55626ecff340 <col:34> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
  | `-IntegerLiteral 0x55626ecff3c8 <col:47> 'int' 0
  `-ImplicitCastExpr 0x55626ecff508 <col:50> 'const char *' <LValueToRValue>
    `-DeclRefExpr 0x55626ecff410 <col:50> 'const char *' lvalue Var 0x55626ecfebc8 'filename' 'const char *'
return [B1.24];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
