static int findindex(lua_State *L, Table *t, StkId key)
 [B16 (ENTRY)]
   Succs (1): B15

 [B1]
   1: DeclRefExpr 0x5654000d5b80 <ltable.c:156:5> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x5654000d5cb8 <ltable.c:156:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000d5b80 <col:5> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5654000d5ba8 <ltable.c:156:19> 'lua_State *' lvalue ParmVar 0x5654000d25c8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5654000d5d08 <ltable.c:156:19> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5654000d5ba8 <col:19> 'lua_State *' lvalue ParmVar 0x5654000d25c8 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5654000d5c08 <ltable.c:156:22, ./luaconf.h:201:25> 'char [22]' lvalue "invalid key to 'next'"
"invalid key to 'next'"
   6: ImplicitCastExpr 0x5654000d5d20 <ltable.c:156:22, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5654000d5c08 <ltable.c:156:22, ./luaconf.h:201:25> 'char [22]' lvalue "invalid key to 'next'"
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5654000d5d38 <ltable.c:156:22, ./luaconf.h:201:25> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5654000d5d20 <ltable.c:156:22, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5654000d5c08 <ltable.c:156:22, ./luaconf.h:201:25> 'char [22]' lvalue "invalid key to 'next'"
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5654000d5cd0 <ltable.c:156:5, col:54> 'void'
|-ImplicitCastExpr 0x5654000d5cb8 <col:5> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000d5b80 <col:5> 'void (lua_State *, const char *, ...)' Function 0x5654000b1720 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5654000d5d08 <col:19> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5654000d5ba8 <col:19> 'lua_State *' lvalue ParmVar 0x5654000d25c8 'L' 'lua_State *'
`-ImplicitCastExpr 0x5654000d5d38 <col:22, ./luaconf.h:201:25> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5654000d5d20 <ltable.c:156:22, ./luaconf.h:201:25> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5654000d5c08 <ltable.c:156:22, ./luaconf.h:201:25> 'char [22]' lvalue "invalid key to 'next'"
[B1.2]([B1.4], [B1.7])
   9: IntegerLiteral 0x5654000d5d50 <ltable.c:157:12> 'int' 0
0
  10: ReturnStmt 0x5654000d5d70 <ltable.c:157:5, col:12>
`-IntegerLiteral 0x5654000d5d50 <col:12> 'int' 0
return [B1.9];
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5654000d5b20 <ltable.c:155:14> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000d5b48 <ltable.c:155:14> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000d5b20 <col:14> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B2.1] (ImplicitCastExpr, LValueToRValue, Node *)
   T: do ... while [B2.2]
   Preds (1): B3
   Succs (2): B9 B1

 [B3]
   1: DeclRefExpr 0x5654000d5968 <ltable.c:154:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000d59b0 <./ltable.h:16:19, col:21> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000d5990 <col:19, col:21> 'Node *' lvalue
  `-DeclRefExpr 0x5654000d5968 <ltable.c:154:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000d59c8 <./ltable.h:16:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000d59b0 <col:19, col:21> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000d5990 <col:19, col:21> 'Node *' lvalue
    `-DeclRefExpr 0x5654000d5968 <ltable.c:154:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B3.2]->i_key
   4: MemberExpr 0x5654000d5a00 <./ltable.h:16:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000d59c8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000d59b0 <col:19, col:21> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000d5990 <col:19, col:21> 'Node *' lvalue
      `-DeclRefExpr 0x5654000d5968 <ltable.c:154:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B3.3].nk
   5: MemberExpr 0x5654000d5a38 <./ltable.h:16:19, col:33> 'struct Node *' lvalue .next 0x565400099070
`-MemberExpr 0x5654000d5a00 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000d59c8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000d59b0 <col:19, col:21> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000d5990 <col:19, col:21> 'Node *' lvalue
        `-DeclRefExpr 0x5654000d5968 <ltable.c:154:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B3.4].next
   6: ImplicitCastExpr 0x5654000d5a90 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
`-ParenExpr 0x5654000d5a70 <col:18, col:37> 'struct Node *' lvalue
  `-MemberExpr 0x5654000d5a38 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
    `-MemberExpr 0x5654000d5a00 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
      `-MemberExpr 0x5654000d59c8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000d59b0 <col:19, col:21> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000d5990 <col:19, col:21> 'Node *' lvalue
            `-DeclRefExpr 0x5654000d5968 <ltable.c:154:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B3.5]) (ImplicitCastExpr, LValueToRValue, struct Node *)
   7: DeclRefExpr 0x5654000d5940 <ltable.c:154:12> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
n
   8: BinaryOperator 0x5654000d5aa8 <ltable.c:154:12, ./ltable.h:16:37> 'Node *' '='
|-DeclRefExpr 0x5654000d5940 <ltable.c:154:12> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
`-ImplicitCastExpr 0x5654000d5a90 <./ltable.h:16:18, col:37> 'struct Node *' <LValueToRValue>
  `-ParenExpr 0x5654000d5a70 <col:18, col:37> 'struct Node *' lvalue
    `-MemberExpr 0x5654000d5a38 <col:19, col:33> 'struct Node *' lvalue .next 0x565400099070
      `-MemberExpr 0x5654000d5a00 <col:19, col:30> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
        `-MemberExpr 0x5654000d59c8 <col:19, col:24> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000d59b0 <col:19, col:21> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000d5990 <col:19, col:21> 'Node *' lvalue
              `-DeclRefExpr 0x5654000d5968 <ltable.c:154:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B3.7] = [B3.6]
   Preds (3): B5 B6 B7
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5654000d54d8 <ltable.c:150:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000d5638 <ltable.c:150:22> 'Node *' <LValueToRValue>
`-DeclRefExpr 0x5654000d54d8 <col:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B4.1] (ImplicitCastExpr, LValueToRValue, Node *)
   3: DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000d5548 <./ltable.h:13:22, col:24> 'Table *' <LValueToRValue>
`-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
  `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, Table *)
   5: MemberExpr 0x5654000d5560 <./ltable.h:13:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
`-ImplicitCastExpr 0x5654000d5548 <col:22, col:24> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
    `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B4.4]->node
   6: ImplicitCastExpr 0x5654000d55b8 <./ltable.h:13:22, col:27> 'Node *' <LValueToRValue>
`-MemberExpr 0x5654000d5560 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  `-ImplicitCastExpr 0x5654000d5548 <col:22, col:24> 'Table *' <LValueToRValue>
    `-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
      `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B4.5] (ImplicitCastExpr, LValueToRValue, Node *)
   7: IntegerLiteral 0x5654000d5598 <ltable.c:150:35> 'int' 0
0
   8: ArraySubscriptExpr 0x5654000d55d0 <./ltable.h:13:22, col:33> 'Node':'struct Node' lvalue
|-ImplicitCastExpr 0x5654000d55b8 <col:22, col:27> 'Node *' <LValueToRValue>
| `-MemberExpr 0x5654000d5560 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
|   `-ImplicitCastExpr 0x5654000d5548 <col:22, col:24> 'Table *' <LValueToRValue>
|     `-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
|       `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
`-IntegerLiteral 0x5654000d5598 <col:35> 'int' 0
[B4.6][[B4.7]]
   9: UnaryOperator 0x5654000d55f8 <./ltable.h:13:21, col:33> 'Node *' prefix '&'
`-ArraySubscriptExpr 0x5654000d55d0 <col:22, col:33> 'Node':'struct Node' lvalue
  |-ImplicitCastExpr 0x5654000d55b8 <col:22, col:27> 'Node *' <LValueToRValue>
  | `-MemberExpr 0x5654000d5560 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
  |   `-ImplicitCastExpr 0x5654000d5548 <col:22, col:24> 'Table *' <LValueToRValue>
  |     `-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
  |       `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
  `-IntegerLiteral 0x5654000d5598 <col:35> 'int' 0
&[B4.8]
  10: BinaryOperator 0x5654000d56f0 <ltable.c:150:22, ./ltable.h:13:34> 'long' '-'
|-ImplicitCastExpr 0x5654000d5638 <ltable.c:150:22> 'Node *' <LValueToRValue>
| `-DeclRefExpr 0x5654000d54d8 <col:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
`-ParenExpr 0x5654000d5618 <./ltable.h:13:20, col:34> 'Node *'
  `-UnaryOperator 0x5654000d55f8 <col:21, col:33> 'Node *' prefix '&'
    `-ArraySubscriptExpr 0x5654000d55d0 <col:22, col:33> 'Node':'struct Node' lvalue
      |-ImplicitCastExpr 0x5654000d55b8 <col:22, col:27> 'Node *' <LValueToRValue>
      | `-MemberExpr 0x5654000d5560 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
      |   `-ImplicitCastExpr 0x5654000d5548 <col:22, col:24> 'Table *' <LValueToRValue>
      |     `-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
      |       `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
      `-IntegerLiteral 0x5654000d5598 <col:35> 'int' 0
[B4.2] - ([B4.9])
  11: CStyleCastExpr 0x5654000d57a0 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x5654000d5780 <col:26, col:30> 'long'
  `-ParenExpr 0x5654000d5718 <line:80:31, col:33> 'long'
    `-BinaryOperator 0x5654000d56f0 <ltable.c:150:22, ./ltable.h:13:34> 'long' '-'
      |-ImplicitCastExpr 0x5654000d5638 <ltable.c:150:22> 'Node *' <LValueToRValue>
      | `-DeclRefExpr 0x5654000d54d8 <col:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
      `-ParenExpr 0x5654000d5618 <./ltable.h:13:20, col:34> 'Node *'
        `-UnaryOperator 0x5654000d55f8 <col:21, col:33> 'Node *' prefix '&'
          `-ArraySubscriptExpr 0x5654000d55d0 <col:22, col:33> 'Node':'struct Node' lvalue
            |-ImplicitCastExpr 0x5654000d55b8 <col:22, col:27> 'Node *' <LValueToRValue>
            | `-MemberExpr 0x5654000d5560 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
            |   `-ImplicitCastExpr 0x5654000d5548 <col:22, col:24> 'Table *' <LValueToRValue>
            |     `-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
            |       `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
            `-IntegerLiteral 0x5654000d5598 <col:35> 'int' 0
(int)(([B4.10])) (CStyleCastExpr, IntegralCast, int)
  12: DeclRefExpr 0x5654000d54b0 <ltable.c:150:9> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
i
  13: BinaryOperator 0x5654000d57e8 <ltable.c:150:9, ./llimits.h:75:31> 'int' '='
|-DeclRefExpr 0x5654000d54b0 <ltable.c:150:9> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
`-ParenExpr 0x5654000d57c8 <./llimits.h:75:22, col:31> 'int'
  `-CStyleCastExpr 0x5654000d57a0 <col:23, col:30> 'int' <IntegralCast>
    `-ParenExpr 0x5654000d5780 <col:26, col:30> 'long'
      `-ParenExpr 0x5654000d5718 <line:80:31, col:33> 'long'
        `-BinaryOperator 0x5654000d56f0 <ltable.c:150:22, ./ltable.h:13:34> 'long' '-'
          |-ImplicitCastExpr 0x5654000d5638 <ltable.c:150:22> 'Node *' <LValueToRValue>
          | `-DeclRefExpr 0x5654000d54d8 <col:22> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
          `-ParenExpr 0x5654000d5618 <./ltable.h:13:20, col:34> 'Node *'
            `-UnaryOperator 0x5654000d55f8 <col:21, col:33> 'Node *' prefix '&'
              `-ArraySubscriptExpr 0x5654000d55d0 <col:22, col:33> 'Node':'struct Node' lvalue
                |-ImplicitCastExpr 0x5654000d55b8 <col:22, col:27> 'Node *' <LValueToRValue>
                | `-MemberExpr 0x5654000d5560 <col:22, col:27> 'Node *' lvalue ->node 0x56540009ad58
                |   `-ImplicitCastExpr 0x5654000d5548 <col:22, col:24> 'Table *' <LValueToRValue>
                |     `-ParenExpr 0x5654000d5528 <col:22, col:24> 'Table *' lvalue
                |       `-DeclRefExpr 0x5654000d5500 <ltable.c:150:32> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
                `-IntegerLiteral 0x5654000d5598 <col:35> 'int' 0
[B4.12] = ([B4.11])
  14: DeclRefExpr 0x5654000d5810 <ltable.c:152:16> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
i
  15: ImplicitCastExpr 0x5654000d58b0 <ltable.c:152:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d5810 <col:16> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
[B4.14] (ImplicitCastExpr, LValueToRValue, int)
  16: DeclRefExpr 0x5654000d5838 <ltable.c:152:20> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
t
  17: ImplicitCastExpr 0x5654000d5860 <ltable.c:152:20> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d5838 <col:20> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B4.16] (ImplicitCastExpr, LValueToRValue, Table *)
  18: MemberExpr 0x5654000d5878 <ltable.c:152:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
`-ImplicitCastExpr 0x5654000d5860 <col:20> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d5838 <col:20> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B4.17]->sizearray
  19: ImplicitCastExpr 0x5654000d58c8 <ltable.c:152:20, col:23> 'int' <LValueToRValue>
`-MemberExpr 0x5654000d5878 <col:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
  `-ImplicitCastExpr 0x5654000d5860 <col:20> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d5838 <col:20> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B4.18] (ImplicitCastExpr, LValueToRValue, int)
  20: BinaryOperator 0x5654000d58e0 <ltable.c:152:16, col:23> 'int' '+'
|-ImplicitCastExpr 0x5654000d58b0 <col:16> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000d5810 <col:16> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
`-ImplicitCastExpr 0x5654000d58c8 <col:20, col:23> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000d5878 <col:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
    `-ImplicitCastExpr 0x5654000d5860 <col:20> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d5838 <col:20> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B4.15] + [B4.19]
  21: ReturnStmt 0x5654000d5908 <ltable.c:152:9, col:23>
`-BinaryOperator 0x5654000d58e0 <col:16, col:23> 'int' '+'
  |-ImplicitCastExpr 0x5654000d58b0 <col:16> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5654000d5810 <col:16> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
  `-ImplicitCastExpr 0x5654000d58c8 <col:20, col:23> 'int' <LValueToRValue>
    `-MemberExpr 0x5654000d5878 <col:20, col:23> 'int' lvalue ->sizearray 0x56540009ae68
      `-ImplicitCastExpr 0x5654000d5860 <col:20> 'Table *' <LValueToRValue>
        `-DeclRefExpr 0x5654000d5838 <col:20> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
return [B4.20];
   Preds (2): B5 B8
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000d5180 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000d5198 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000d5180 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B5.2]->i_key
   4: MemberExpr 0x5654000d51d0 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000d5198 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000d5180 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B5.3].nk
   5: UnaryOperator 0x5654000d5208 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x5654000d51d0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000d5198 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000d5180 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
&[B5.4]
   6: MemberExpr 0x5654000d5268 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x565400098e60
`-ParenExpr 0x5654000d5248 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-ParenExpr 0x5654000d5228 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-UnaryOperator 0x5654000d5208 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
      `-MemberExpr 0x5654000d51d0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
        `-MemberExpr 0x5654000d5198 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000d5180 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
(([B5.5]))->value
   7: MemberExpr 0x5654000d52a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x565400089680
`-MemberExpr 0x5654000d5268 <col:48, col:53> 'Value':'Value' lvalue ->value 0x565400098e60
  `-ParenExpr 0x5654000d5248 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-ParenExpr 0x5654000d5228 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
      `-UnaryOperator 0x5654000d5208 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
        `-MemberExpr 0x5654000d51d0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
          `-MemberExpr 0x5654000d5198 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
            `-ImplicitCastExpr 0x5654000d5180 <col:20, col:22> 'Node *' <LValueToRValue>
              `-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
                `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B5.6].gc
   8: ImplicitCastExpr 0x5654000d53e8 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x5654000d52d8 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x5654000d52a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x565400089680
    `-MemberExpr 0x5654000d5268 <col:48, col:53> 'Value':'Value' lvalue ->value 0x565400098e60
      `-ParenExpr 0x5654000d5248 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
        `-ParenExpr 0x5654000d5228 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
          `-UnaryOperator 0x5654000d5208 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
            `-MemberExpr 0x5654000d51d0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
              `-MemberExpr 0x5654000d5198 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
                `-ImplicitCastExpr 0x5654000d5180 <col:20, col:22> 'Node *' <LValueToRValue>
                  `-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
                    `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B5.7]) (ImplicitCastExpr, LValueToRValue, GCObject *)
   9: DeclRefExpr 0x5654000d52f8 <ltable.c:149:42> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
key
  10: ImplicitCastExpr 0x5654000d5340 <./lobject.h:91:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5654000d5320 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5654000d52f8 <ltable.c:149:42> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
([B5.9]) (ImplicitCastExpr, LValueToRValue, StkId)
  11: MemberExpr 0x5654000d5358 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x565400089980
`-ImplicitCastExpr 0x5654000d5340 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000d5320 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x5654000d52f8 <ltable.c:149:42> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B5.10]->value
  12: MemberExpr 0x5654000d5390 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x565400089680
`-MemberExpr 0x5654000d5358 <col:48, col:53> 'Value':'Value' lvalue ->value 0x565400089980
  `-ImplicitCastExpr 0x5654000d5340 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5654000d5320 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5654000d52f8 <ltable.c:149:42> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B5.11].gc
  13: ImplicitCastExpr 0x5654000d5400 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x5654000d53c8 <col:25, col:27> 'GCObject *' lvalue
  `-MemberExpr 0x5654000d5390 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x565400089680
    `-MemberExpr 0x5654000d5358 <col:48, col:53> 'Value':'Value' lvalue ->value 0x565400089980
      `-ImplicitCastExpr 0x5654000d5340 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x5654000d5320 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-DeclRefExpr 0x5654000d52f8 <ltable.c:149:42> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
([B5.12]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  14: BinaryOperator 0x5654000d5418 <./llimits.h:63:25, col:27> 'int' '=='
|-ImplicitCastExpr 0x5654000d53e8 <col:25, col:27> 'GCObject *' <LValueToRValue>
| `-ParenExpr 0x5654000d52d8 <col:25, col:27> 'GCObject *' lvalue
|   `-MemberExpr 0x5654000d52a0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x565400089680
|     `-MemberExpr 0x5654000d5268 <col:48, col:53> 'Value':'Value' lvalue ->value 0x565400098e60
|       `-ParenExpr 0x5654000d5248 <col:48, col:50> 'struct (anonymous struct at ./lobject.h:324:3) *'
|         `-ParenExpr 0x5654000d5228 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
|           `-UnaryOperator 0x5654000d5208 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
|             `-MemberExpr 0x5654000d51d0 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|               `-MemberExpr 0x5654000d5198 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|                 `-ImplicitCastExpr 0x5654000d5180 <col:20, col:22> 'Node *' <LValueToRValue>
|                   `-ParenExpr 0x5654000d5160 <col:20, col:22> 'Node *' lvalue
|                     `-DeclRefExpr 0x5654000d5138 <ltable.c:149:27> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
`-ImplicitCastExpr 0x5654000d5400 <./llimits.h:63:25, col:27> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x5654000d53c8 <col:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x5654000d5390 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x565400089680
      `-MemberExpr 0x5654000d5358 <col:48, col:53> 'Value':'Value' lvalue ->value 0x565400089980
        `-ImplicitCastExpr 0x5654000d5340 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x5654000d5320 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-DeclRefExpr 0x5654000d52f8 <ltable.c:149:42> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B5.8] == [B5.13]
   T: if [B8.12] || ([B7.11] && ([B6.6]) && [B5.14])
   Preds (1): B6
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x5654000d48d8 <ltable.c:148:62> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
key
   2: ImplicitCastExpr 0x5654000d4920 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5654000d4900 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5654000d48d8 <ltable.c:148:62> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
([B6.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: MemberExpr 0x5654000d4938 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d4920 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000d4900 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x5654000d48d8 <ltable.c:148:62> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B6.2]->tt
   4: ImplicitCastExpr 0x5654000d49b0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000d4970 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000d4938 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000d4920 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000d4900 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-DeclRefExpr 0x5654000d48d8 <ltable.c:148:62> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
([B6.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5654000d4990 <./lua.h:78:22> 'int' 4
4
   6: BinaryOperator 0x5654000d49c8 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x5654000d49b0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000d4970 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000d4938 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ImplicitCastExpr 0x5654000d4920 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x5654000d4900 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-DeclRefExpr 0x5654000d48d8 <ltable.c:148:62> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
`-IntegerLiteral 0x5654000d4990 <./lua.h:78:22> 'int' 4
[B6.4] >= [B6.5]
   T: [B7.11] && ([B6.6]) && ...
   Preds (1): B7
   Succs (2): B5 B3

 [B7]
   1: DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
n
   2: ImplicitCastExpr 0x5654000d4678 <./ltable.h:14:20, col:22> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000d4658 <col:20, col:22> 'Node *' lvalue
  `-DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B7.1]) (ImplicitCastExpr, LValueToRValue, Node *)
   3: MemberExpr 0x5654000d4690 <./ltable.h:14:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000d4678 <col:20, col:22> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000d4658 <col:20, col:22> 'Node *' lvalue
    `-DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B7.2]->i_key
   4: MemberExpr 0x5654000d46c8 <./ltable.h:14:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
`-MemberExpr 0x5654000d4690 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000d4678 <col:20, col:22> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000d4658 <col:20, col:22> 'Node *' lvalue
      `-DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B7.3].nk
   5: UnaryOperator 0x5654000d4758 <./ltable.h:14:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
`-MemberExpr 0x5654000d46c8 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
  `-MemberExpr 0x5654000d4690 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000d4678 <col:20, col:22> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000d4658 <col:20, col:22> 'Node *' lvalue
        `-DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
&[B7.4]
   6: MemberExpr 0x5654000d47b8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x565400098ec0
`-ParenExpr 0x5654000d4798 <col:19, col:21> 'struct (anonymous struct at ./lobject.h:324:3) *'
  `-ParenExpr 0x5654000d4778 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
    `-UnaryOperator 0x5654000d4758 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
      `-MemberExpr 0x5654000d46c8 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
        `-MemberExpr 0x5654000d4690 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
          `-ImplicitCastExpr 0x5654000d4678 <col:20, col:22> 'Node *' <LValueToRValue>
            `-ParenExpr 0x5654000d4658 <col:20, col:22> 'Node *' lvalue
              `-DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
(([B7.5]))->tt
   7: ImplicitCastExpr 0x5654000d4898 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000d47f0 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000d47b8 <col:19, col:24> 'int' lvalue ->tt 0x565400098ec0
    `-ParenExpr 0x5654000d4798 <col:19, col:21> 'struct (anonymous struct at ./lobject.h:324:3) *'
      `-ParenExpr 0x5654000d4778 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
        `-UnaryOperator 0x5654000d4758 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
          `-MemberExpr 0x5654000d46c8 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
            `-MemberExpr 0x5654000d4690 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
              `-ImplicitCastExpr 0x5654000d4678 <col:20, col:22> 'Node *' <LValueToRValue>
                `-ParenExpr 0x5654000d4658 <col:20, col:22> 'Node *' lvalue
                  `-DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B7.6]) (ImplicitCastExpr, LValueToRValue, int)
   8: IntegerLiteral 0x5654000d4810 <./lua.h:82:22> 'int' 8
8
   9: IntegerLiteral 0x5654000d4830 <./lobject.h:30:32> 'int' 3
3
  10: BinaryOperator 0x5654000d4850 <./lua.h:82:22, ./lobject.h:30:32> 'int' '+'
|-IntegerLiteral 0x5654000d4810 <./lua.h:82:22> 'int' 8
`-IntegerLiteral 0x5654000d4830 <./lobject.h:30:32> 'int' 3
[B7.8] + [B7.9]
  11: BinaryOperator 0x5654000d48b0 <./lobject.h:90:18, line:30:33> 'int' '=='
|-ImplicitCastExpr 0x5654000d4898 <line:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000d47f0 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000d47b8 <col:19, col:24> 'int' lvalue ->tt 0x565400098ec0
|     `-ParenExpr 0x5654000d4798 <col:19, col:21> 'struct (anonymous struct at ./lobject.h:324:3) *'
|       `-ParenExpr 0x5654000d4778 <./ltable.h:14:18, col:33> 'struct (anonymous struct at ./lobject.h:324:3) *'
|         `-UnaryOperator 0x5654000d4758 <col:19, col:31> 'struct (anonymous struct at ./lobject.h:324:3) *' prefix '&'
|           `-MemberExpr 0x5654000d46c8 <col:20, col:31> 'struct (anonymous struct at ./lobject.h:324:3)':'struct TKey::(anonymous at ./lobject.h:324:3)' lvalue .nk 0x565400099110
|             `-MemberExpr 0x5654000d4690 <col:20, col:25> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|               `-ImplicitCastExpr 0x5654000d4678 <col:20, col:22> 'Node *' <LValueToRValue>
|                 `-ParenExpr 0x5654000d4658 <col:20, col:22> 'Node *' lvalue
|                   `-DeclRefExpr 0x5654000d4630 <ltable.c:148:25> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
`-ParenExpr 0x5654000d4878 <./lobject.h:30:22, col:33> 'int'
  `-BinaryOperator 0x5654000d4850 <./lua.h:82:22, ./lobject.h:30:32> 'int' '+'
    |-IntegerLiteral 0x5654000d4810 <./lua.h:82:22> 'int' 8
    `-IntegerLiteral 0x5654000d4830 <./lobject.h:30:32> 'int' 3
[B7.7] == ([B7.10])
   T: [B7.11] && ...
   Preds (1): B8
   Succs (2): B6 B3

 [B8]
   1: DeclRefExpr 0x5654000d43e0 <ltable.c:147:11> 'int (const TValue *, const TValue *)' Function 0x56540009c108 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
luaO_rawequalObj
   2: ImplicitCastExpr 0x5654000d4598 <ltable.c:147:11> 'int (*)(const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000d43e0 <col:11> 'int (const TValue *, const TValue *)' Function 0x56540009c108 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const TValue *, const TValue *))
   3: DeclRefExpr 0x5654000d4408 <ltable.c:147:37> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
n
   4: ImplicitCastExpr 0x5654000d4450 <./ltable.h:18:23, col:25> 'Node *' <LValueToRValue>
`-ParenExpr 0x5654000d4430 <col:23, col:25> 'Node *' lvalue
  `-DeclRefExpr 0x5654000d4408 <ltable.c:147:37> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B8.3]) (ImplicitCastExpr, LValueToRValue, Node *)
   5: MemberExpr 0x5654000d4468 <./ltable.h:18:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
`-ImplicitCastExpr 0x5654000d4450 <col:23, col:25> 'Node *' <LValueToRValue>
  `-ParenExpr 0x5654000d4430 <col:23, col:25> 'Node *' lvalue
    `-DeclRefExpr 0x5654000d4408 <ltable.c:147:37> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B8.4]->i_key
   6: MemberExpr 0x5654000d44a0 <./ltable.h:18:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
`-MemberExpr 0x5654000d4468 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
  `-ImplicitCastExpr 0x5654000d4450 <col:23, col:25> 'Node *' <LValueToRValue>
    `-ParenExpr 0x5654000d4430 <col:23, col:25> 'Node *' lvalue
      `-DeclRefExpr 0x5654000d4408 <ltable.c:147:37> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
[B8.5].tvk
   7: UnaryOperator 0x5654000d44d8 <./ltable.h:18:22, col:34> 'TValue *' prefix '&'
`-MemberExpr 0x5654000d44a0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
  `-MemberExpr 0x5654000d4468 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
    `-ImplicitCastExpr 0x5654000d4450 <col:23, col:25> 'Node *' <LValueToRValue>
      `-ParenExpr 0x5654000d4430 <col:23, col:25> 'Node *' lvalue
        `-DeclRefExpr 0x5654000d4408 <ltable.c:147:37> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
&[B8.6]
   8: ImplicitCastExpr 0x5654000d45e8 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
`-ParenExpr 0x5654000d44f8 <col:21, col:37> 'TValue *'
  `-UnaryOperator 0x5654000d44d8 <col:22, col:34> 'TValue *' prefix '&'
    `-MemberExpr 0x5654000d44a0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
      `-MemberExpr 0x5654000d4468 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
        `-ImplicitCastExpr 0x5654000d4450 <col:23, col:25> 'Node *' <LValueToRValue>
          `-ParenExpr 0x5654000d4430 <col:23, col:25> 'Node *' lvalue
            `-DeclRefExpr 0x5654000d4408 <ltable.c:147:37> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
([B8.7]) (ImplicitCastExpr, BitCast, const TValue *)
   9: DeclRefExpr 0x5654000d4518 <ltable.c:147:41> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
key
  10: ImplicitCastExpr 0x5654000d4600 <ltable.c:147:41> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d4518 <col:41> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B8.9] (ImplicitCastExpr, LValueToRValue, StkId)
  11: ImplicitCastExpr 0x5654000d4618 <ltable.c:147:41> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5654000d4600 <col:41> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d4518 <col:41> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B8.10] (ImplicitCastExpr, BitCast, const TValue *)
  12: CallExpr 0x5654000d45b0 <ltable.c:147:11, col:44> 'int'
|-ImplicitCastExpr 0x5654000d4598 <col:11> 'int (*)(const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000d43e0 <col:11> 'int (const TValue *, const TValue *)' Function 0x56540009c108 'luaO_rawequalObj' 'int (const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5654000d45e8 <./ltable.h:18:21, col:37> 'const TValue *' <BitCast>
| `-ParenExpr 0x5654000d44f8 <col:21, col:37> 'TValue *'
|   `-UnaryOperator 0x5654000d44d8 <col:22, col:34> 'TValue *' prefix '&'
|     `-MemberExpr 0x5654000d44a0 <col:23, col:34> 'TValue':'struct lua_TValue' lvalue .tvk 0x565400099168
|       `-MemberExpr 0x5654000d4468 <col:23, col:28> 'TKey':'union TKey' lvalue ->i_key 0x56540009a920
|         `-ImplicitCastExpr 0x5654000d4450 <col:23, col:25> 'Node *' <LValueToRValue>
|           `-ParenExpr 0x5654000d4430 <col:23, col:25> 'Node *' lvalue
|             `-DeclRefExpr 0x5654000d4408 <ltable.c:147:37> 'Node *' lvalue Var 0x5654000d41e0 'n' 'Node *'
`-ImplicitCastExpr 0x5654000d4618 <col:41> 'const TValue *' <BitCast>
  `-ImplicitCastExpr 0x5654000d4600 <col:41> 'StkId':'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d4518 <col:41> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B8.2]([B8.8], [B8.11])
   T: [B8.12] || ...
   Preds (2): B9 B10
   Succs (2): B4 B7

 [B9]
   Preds (1): B2
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x5654000d4240 <ltable.c:144:15> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
mainposition
   2: ImplicitCastExpr 0x5654000d4318 <ltable.c:144:15> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000d4240 <col:15> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, Node *(*)(const Table *, const TValue *))
   3: DeclRefExpr 0x5654000d4268 <ltable.c:144:28> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000d4368 <ltable.c:144:28> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d4268 <col:28> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B10.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: ImplicitCastExpr 0x5654000d4380 <ltable.c:144:28> 'const Table *' <BitCast>
`-ImplicitCastExpr 0x5654000d4368 <col:28> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d4268 <col:28> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B10.4] (ImplicitCastExpr, BitCast, const Table *)
   6: DeclRefExpr 0x5654000d4290 <ltable.c:144:31> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
key
   7: ImplicitCastExpr 0x5654000d4398 <ltable.c:144:31> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d4290 <col:31> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B10.6] (ImplicitCastExpr, LValueToRValue, StkId)
   8: ImplicitCastExpr 0x5654000d43b0 <ltable.c:144:31> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5654000d4398 <col:31> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d4290 <col:31> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B10.7] (ImplicitCastExpr, BitCast, const TValue *)
   9: CallExpr 0x5654000d4330 <ltable.c:144:15, col:34> 'Node *'
|-ImplicitCastExpr 0x5654000d4318 <col:15> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000d4240 <col:15> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
|-ImplicitCastExpr 0x5654000d4380 <col:28> 'const Table *' <BitCast>
| `-ImplicitCastExpr 0x5654000d4368 <col:28> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5654000d4268 <col:28> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
`-ImplicitCastExpr 0x5654000d43b0 <col:31> 'const TValue *' <BitCast>
  `-ImplicitCastExpr 0x5654000d4398 <col:31> 'StkId':'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d4290 <col:31> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B10.2]([B10.5], [B10.8])
  10: DeclStmt 0x5654000d43c8 <ltable.c:144:5, col:35>col:11
`-VarDecl 0x5654000d41e0 <col:5, col:34> col:11 used n 'Node *' cinit
  `-CallExpr 0x5654000d4330 <col:15, col:34> 'Node *'
    |-ImplicitCastExpr 0x5654000d4318 <col:15> 'Node *(*)(const Table *, const TValue *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5654000d4240 <col:15> 'Node *(const Table *, const TValue *)' Function 0x5654000cb3e0 'mainposition' 'Node *(const Table *, const TValue *)'
    |-ImplicitCastExpr 0x5654000d4380 <col:28> 'const Table *' <BitCast>
    | `-ImplicitCastExpr 0x5654000d4368 <col:28> 'Table *' <LValueToRValue>
    |   `-DeclRefExpr 0x5654000d4268 <col:28> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
    `-ImplicitCastExpr 0x5654000d43b0 <col:31> 'const TValue *' <BitCast>
      `-ImplicitCastExpr 0x5654000d4398 <col:31> 'StkId':'TValue *' <LValueToRValue>
        `-DeclRefExpr 0x5654000d4290 <col:31> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
Node *n = mainposition(t, key);
   Preds (2): B12 B13
   Succs (1): B8

 [B11]
   1: DeclRefExpr 0x5654000d4130 <ltable.c:142:12> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
i
   2: ImplicitCastExpr 0x5654000d4178 <ltable.c:142:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d4130 <col:12> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
[B11.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x5654000d4158 <ltable.c:142:14> 'int' 1
1
   4: BinaryOperator 0x5654000d4190 <ltable.c:142:12, col:14> 'int' '-'
|-ImplicitCastExpr 0x5654000d4178 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000d4130 <col:12> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
`-IntegerLiteral 0x5654000d4158 <col:14> 'int' 1
[B11.2] - [B11.3]
   5: ReturnStmt 0x5654000d41b8 <ltable.c:142:5, col:14>
`-BinaryOperator 0x5654000d4190 <col:12, col:14> 'int' '-'
  |-ImplicitCastExpr 0x5654000d4178 <col:12> 'int' <LValueToRValue>
  | `-DeclRefExpr 0x5654000d4130 <col:12> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
  `-IntegerLiteral 0x5654000d4158 <col:14> 'int' 1
return [B11.4];
   Preds (1): B12
   Succs (1): B0

 [B12]
   1: DeclRefExpr 0x5654000d4010 <ltable.c:141:16> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
i
   2: ImplicitCastExpr 0x5654000d40b0 <ltable.c:141:16> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d4010 <col:16> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
[B12.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x5654000d4038 <ltable.c:141:21> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
t
   4: ImplicitCastExpr 0x5654000d4060 <ltable.c:141:21> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5654000d4038 <col:21> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B12.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: MemberExpr 0x5654000d4078 <ltable.c:141:21, col:24> 'int' lvalue ->sizearray 0x56540009ae68
`-ImplicitCastExpr 0x5654000d4060 <col:21> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d4038 <col:21> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B12.4]->sizearray
   6: ImplicitCastExpr 0x5654000d40c8 <ltable.c:141:21, col:24> 'int' <LValueToRValue>
`-MemberExpr 0x5654000d4078 <col:21, col:24> 'int' lvalue ->sizearray 0x56540009ae68
  `-ImplicitCastExpr 0x5654000d4060 <col:21> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d4038 <col:21> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B12.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x5654000d40e0 <ltable.c:141:16, col:24> 'int' '<='
|-ImplicitCastExpr 0x5654000d40b0 <col:16> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5654000d4010 <col:16> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
`-ImplicitCastExpr 0x5654000d40c8 <col:21, col:24> 'int' <LValueToRValue>
  `-MemberExpr 0x5654000d4078 <col:21, col:24> 'int' lvalue ->sizearray 0x56540009ae68
    `-ImplicitCastExpr 0x5654000d4060 <col:21> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d4038 <col:21> 'Table *' lvalue ParmVar 0x5654000d39f0 't' 'Table *'
[B12.2] <= [B12.6]
   T: if [B13.12] && [B12.7]
   Preds (1): B13
   Succs (2): B11 B10

 [B13]
   1: DeclRefExpr 0x5654000d3e38 <ltable.c:140:7> 'int (const TValue *)' Function 0x5654000d1d18 'arrayindex' 'int (const TValue *)'
arrayindex
   2: ImplicitCastExpr 0x5654000d3ee8 <ltable.c:140:7> 'int (*)(const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5654000d3e38 <col:7> 'int (const TValue *)' Function 0x5654000d1d18 'arrayindex' 'int (const TValue *)'
[B13.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const TValue *))
   3: DeclRefExpr 0x5654000d3e60 <ltable.c:140:18> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
key
   4: ImplicitCastExpr 0x5654000d3f30 <ltable.c:140:18> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5654000d3e60 <col:18> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B13.3] (ImplicitCastExpr, LValueToRValue, StkId)
   5: ImplicitCastExpr 0x5654000d3f48 <ltable.c:140:18> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5654000d3f30 <col:18> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5654000d3e60 <col:18> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B13.4] (ImplicitCastExpr, BitCast, const TValue *)
   6: CallExpr 0x5654000d3f00 <ltable.c:140:7, col:21> 'int'
|-ImplicitCastExpr 0x5654000d3ee8 <col:7> 'int (*)(const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5654000d3e38 <col:7> 'int (const TValue *)' Function 0x5654000d1d18 'arrayindex' 'int (const TValue *)'
`-ImplicitCastExpr 0x5654000d3f48 <col:18> 'const TValue *' <BitCast>
  `-ImplicitCastExpr 0x5654000d3f30 <col:18> 'StkId':'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5654000d3e60 <col:18> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B13.2]([B13.5])
   7: DeclRefExpr 0x5654000d3e10 <ltable.c:140:3> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
i
   8: BinaryOperator 0x5654000d3f60 <ltable.c:140:3, col:21> 'int' '='
|-DeclRefExpr 0x5654000d3e10 <col:3> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
`-CallExpr 0x5654000d3f00 <col:7, col:21> 'int'
  |-ImplicitCastExpr 0x5654000d3ee8 <col:7> 'int (*)(const TValue *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5654000d3e38 <col:7> 'int (const TValue *)' Function 0x5654000d1d18 'arrayindex' 'int (const TValue *)'
  `-ImplicitCastExpr 0x5654000d3f48 <col:18> 'const TValue *' <BitCast>
    `-ImplicitCastExpr 0x5654000d3f30 <col:18> 'StkId':'TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5654000d3e60 <col:18> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B13.7] = [B13.6]
   9: IntegerLiteral 0x5654000d3f88 <ltable.c:141:7> 'int' 0
0
  10: DeclRefExpr 0x5654000d3fa8 <ltable.c:141:11> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
i
  11: ImplicitCastExpr 0x5654000d3fd0 <ltable.c:141:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x5654000d3fa8 <col:11> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
[B13.10] (ImplicitCastExpr, LValueToRValue, int)
  12: BinaryOperator 0x5654000d3fe8 <ltable.c:141:7, col:11> 'int' '<'
|-IntegerLiteral 0x5654000d3f88 <col:7> 'int' 0
`-ImplicitCastExpr 0x5654000d3fd0 <col:11> 'int' <LValueToRValue>
  `-DeclRefExpr 0x5654000d3fa8 <col:11> 'int' lvalue Var 0x5654000d3bd0 'i' 'int'
[B13.9] < [B13.11]
   T: [B13.12] && ...
   Preds (1): B15
   Succs (2): B12 B10

 [B14]
   1: IntegerLiteral 0x5654000d3d80 <ltable.c:139:29> 'int' 1
1
   2: UnaryOperator 0x5654000d3da0 <ltable.c:139:28, col:29> 'int' prefix '-'
`-IntegerLiteral 0x5654000d3d80 <col:29> 'int' 1
-[B14.1]
   3: ReturnStmt 0x5654000d3dc0 <ltable.c:139:21, col:29>
`-UnaryOperator 0x5654000d3da0 <col:28, col:29> 'int' prefix '-'
  `-IntegerLiteral 0x5654000d3d80 <col:29> 'int' 1
return [B14.2];
   Preds (1): B15
   Succs (1): B0

 [B15]
   1: DeclStmt 0x5654000d3c30 <ltable.c:138:3, col:8>col:7
`-VarDecl 0x5654000d3bd0 <col:3, col:7> col:7 used i 'int'
int i;
   2: DeclRefExpr 0x5654000d3c48 <ltable.c:139:15> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
key
   3: ImplicitCastExpr 0x5654000d3c90 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5654000d3c70 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5654000d3c48 <ltable.c:139:15> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
([B15.2]) (ImplicitCastExpr, LValueToRValue, StkId)
   4: MemberExpr 0x5654000d3ca8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5654000899e0
`-ImplicitCastExpr 0x5654000d3c90 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5654000d3c70 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x5654000d3c48 <ltable.c:139:15> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
[B15.3]->tt
   5: ImplicitCastExpr 0x5654000d3d20 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5654000d3ce0 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5654000d3ca8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
    `-ImplicitCastExpr 0x5654000d3c90 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x5654000d3c70 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-DeclRefExpr 0x5654000d3c48 <ltable.c:139:15> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
([B15.4]) (ImplicitCastExpr, LValueToRValue, int)
   6: IntegerLiteral 0x5654000d3d00 <./lua.h:74:19> 'int' 0
0
   7: BinaryOperator 0x5654000d3d38 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5654000d3d20 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5654000d3ce0 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5654000d3ca8 <col:19, col:24> 'int' lvalue ->tt 0x5654000899e0
|     `-ImplicitCastExpr 0x5654000d3c90 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x5654000d3c70 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-DeclRefExpr 0x5654000d3c48 <ltable.c:139:15> 'StkId':'TValue *' lvalue ParmVar 0x5654000d3a60 'key' 'StkId':'TValue *'
`-IntegerLiteral 0x5654000d3d00 <./lua.h:74:19> 'int' 0
[B15.5] == [B15.6]
   T: if ([B15.7])
   Preds (1): B16
   Succs (2): B14 B13

 [B0 (EXIT)]
   Preds (4): B1 B4 B11 B14
