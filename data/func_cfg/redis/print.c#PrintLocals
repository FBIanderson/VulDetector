static void PrintLocals(const Proto *f)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: DeclRefExpr 0x55936cb61658 <print.c:197:17> 'int' lvalue Var 0x55936cb61128 'i' 'int'
i
   2: UnaryOperator 0x55936cb61680 <print.c:197:17, col:18> 'int' postfix '++'
`-DeclRefExpr 0x55936cb61658 <col:17> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B1.1]++
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: DeclRefExpr 0x55936cb616a0 <print.c:199:3> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
printf
   2: ImplicitCastExpr 0x55936cb61ce8 <print.c:199:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936cb616a0 <col:3> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, ...))
   3: StringLiteral 0x55936cb61708 <print.c:199:10> 'char [14]' lvalue "\t%d\t%s\t%d\t%d\n"
"\t%d\t%s\t%d\t%d\n"
   4: ImplicitCastExpr 0x55936cb61d50 <print.c:199:10> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55936cb61708 <col:10> 'char [14]' lvalue "\t%d\t%s\t%d\t%d\n"
[B2.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: ImplicitCastExpr 0x55936cb61d68 <print.c:199:10> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55936cb61d50 <col:10> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55936cb61708 <col:10> 'char [14]' lvalue "\t%d\t%s\t%d\t%d\n"
[B2.4] (ImplicitCastExpr, BitCast, const char *)
   6: DeclRefExpr 0x55936cb61740 <print.c:200:3> 'int' lvalue Var 0x55936cb61128 'i' 'int'
i
   7: ImplicitCastExpr 0x55936cb61d80 <print.c:200:3> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb61740 <col:3> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.6] (ImplicitCastExpr, LValueToRValue, int)
   8: DeclRefExpr 0x55936cb61768 <print.c:200:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
f
   9: ImplicitCastExpr 0x55936cb61790 <print.c:200:12> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.8] (ImplicitCastExpr, LValueToRValue, const Proto *)
  10: MemberExpr 0x55936cb617a8 <print.c:200:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
`-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.9]->locvars
  11: ImplicitCastExpr 0x55936cb61808 <print.c:200:12, col:15> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x55936cb617a8 <col:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
  `-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.10] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
  12: DeclRefExpr 0x55936cb617e0 <print.c:200:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
i
  13: ImplicitCastExpr 0x55936cb61820 <print.c:200:23> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb617e0 <col:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.12] (ImplicitCastExpr, LValueToRValue, int)
  14: ArraySubscriptExpr 0x55936cb61838 <print.c:200:12, col:24> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x55936cb61808 <col:12, col:15> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x55936cb617a8 <col:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
|   `-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
`-ImplicitCastExpr 0x55936cb61820 <col:23> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55936cb617e0 <col:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.11][[B2.13]]
  15: MemberExpr 0x55936cb61860 <print.c:200:12, col:26> 'TString *' lvalue .varname 0x55936cb1ca40
`-ArraySubscriptExpr 0x55936cb61838 <col:12, col:24> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x55936cb61808 <col:12, col:15> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x55936cb617a8 <col:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
  |   `-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
  `-ImplicitCastExpr 0x55936cb61820 <col:23> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55936cb617e0 <col:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.14].varname
  16: ImplicitCastExpr 0x55936cb618d8 <./lobject.h:210:39, col:42> 'TString *' <LValueToRValue>
`-ParenExpr 0x55936cb61898 <col:39, col:42> 'TString *' lvalue
  `-MemberExpr 0x55936cb61860 <print.c:200:12, col:26> 'TString *' lvalue .varname 0x55936cb1ca40
    `-ArraySubscriptExpr 0x55936cb61838 <col:12, col:24> 'struct LocVar':'struct LocVar' lvalue
      |-ImplicitCastExpr 0x55936cb61808 <col:12, col:15> 'struct LocVar *' <LValueToRValue>
      | `-MemberExpr 0x55936cb617a8 <col:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
      |   `-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
      |     `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
      `-ImplicitCastExpr 0x55936cb61820 <col:23> 'int' <LValueToRValue>
        `-DeclRefExpr 0x55936cb617e0 <col:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
([B2.15]) (ImplicitCastExpr, LValueToRValue, TString *)
  17: IntegerLiteral 0x55936cb618b8 <./lobject.h:210:46> 'int' 1
1
  18: BinaryOperator 0x55936cb618f0 <./lobject.h:210:39, col:46> 'TString *' '+'
|-ImplicitCastExpr 0x55936cb618d8 <col:39, col:42> 'TString *' <LValueToRValue>
| `-ParenExpr 0x55936cb61898 <col:39, col:42> 'TString *' lvalue
|   `-MemberExpr 0x55936cb61860 <print.c:200:12, col:26> 'TString *' lvalue .varname 0x55936cb1ca40
|     `-ArraySubscriptExpr 0x55936cb61838 <col:12, col:24> 'struct LocVar':'struct LocVar' lvalue
|       |-ImplicitCastExpr 0x55936cb61808 <col:12, col:15> 'struct LocVar *' <LValueToRValue>
|       | `-MemberExpr 0x55936cb617a8 <col:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
|       |   `-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
|       |     `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
|       `-ImplicitCastExpr 0x55936cb61820 <col:23> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x55936cb617e0 <col:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
`-IntegerLiteral 0x55936cb618b8 <./lobject.h:210:46> 'int' 1
[B2.16] + [B2.17]
  19: CStyleCastExpr 0x55936cb61980 <./llimits.h:75:23, col:30> 'const char *' <BitCast>
`-ParenExpr 0x55936cb61960 <col:26, col:30> 'TString *'
  `-BinaryOperator 0x55936cb618f0 <./lobject.h:210:39, col:46> 'TString *' '+'
    |-ImplicitCastExpr 0x55936cb618d8 <col:39, col:42> 'TString *' <LValueToRValue>
    | `-ParenExpr 0x55936cb61898 <col:39, col:42> 'TString *' lvalue
    |   `-MemberExpr 0x55936cb61860 <print.c:200:12, col:26> 'TString *' lvalue .varname 0x55936cb1ca40
    |     `-ArraySubscriptExpr 0x55936cb61838 <col:12, col:24> 'struct LocVar':'struct LocVar' lvalue
    |       |-ImplicitCastExpr 0x55936cb61808 <col:12, col:15> 'struct LocVar *' <LValueToRValue>
    |       | `-MemberExpr 0x55936cb617a8 <col:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
    |       |   `-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
    |       `-ImplicitCastExpr 0x55936cb61820 <col:23> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55936cb617e0 <col:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
    `-IntegerLiteral 0x55936cb618b8 <./lobject.h:210:46> 'int' 1
(const char *)([B2.18]) (CStyleCastExpr, BitCast, const char *)
  20: DeclRefExpr 0x55936cb619c8 <print.c:200:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
f
  21: ImplicitCastExpr 0x55936cb619f0 <print.c:200:35> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.20] (ImplicitCastExpr, LValueToRValue, const Proto *)
  22: MemberExpr 0x55936cb61a08 <print.c:200:35, col:38> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
`-ImplicitCastExpr 0x55936cb619f0 <col:35> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.21]->locvars
  23: ImplicitCastExpr 0x55936cb61a68 <print.c:200:35, col:38> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x55936cb61a08 <col:35, col:38> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
  `-ImplicitCastExpr 0x55936cb619f0 <col:35> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.22] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
  24: DeclRefExpr 0x55936cb61a40 <print.c:200:46> 'int' lvalue Var 0x55936cb61128 'i' 'int'
i
  25: ImplicitCastExpr 0x55936cb61a80 <print.c:200:46> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb61a40 <col:46> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.24] (ImplicitCastExpr, LValueToRValue, int)
  26: ArraySubscriptExpr 0x55936cb61a98 <print.c:200:35, col:47> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x55936cb61a68 <col:35, col:38> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x55936cb61a08 <col:35, col:38> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
|   `-ImplicitCastExpr 0x55936cb619f0 <col:35> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
`-ImplicitCastExpr 0x55936cb61a80 <col:46> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55936cb61a40 <col:46> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.23][[B2.25]]
  27: MemberExpr 0x55936cb61ac0 <print.c:200:35, col:49> 'int' lvalue .startpc 0x55936cb1caa0
`-ArraySubscriptExpr 0x55936cb61a98 <col:35, col:47> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x55936cb61a68 <col:35, col:38> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x55936cb61a08 <col:35, col:38> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
  |   `-ImplicitCastExpr 0x55936cb619f0 <col:35> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
  `-ImplicitCastExpr 0x55936cb61a80 <col:46> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55936cb61a40 <col:46> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.26].startpc
  28: ImplicitCastExpr 0x55936cb61b18 <print.c:200:35, col:49> 'int' <LValueToRValue>
`-MemberExpr 0x55936cb61ac0 <col:35, col:49> 'int' lvalue .startpc 0x55936cb1caa0
  `-ArraySubscriptExpr 0x55936cb61a98 <col:35, col:47> 'struct LocVar':'struct LocVar' lvalue
    |-ImplicitCastExpr 0x55936cb61a68 <col:35, col:38> 'struct LocVar *' <LValueToRValue>
    | `-MemberExpr 0x55936cb61a08 <col:35, col:38> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
    |   `-ImplicitCastExpr 0x55936cb619f0 <col:35> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
    `-ImplicitCastExpr 0x55936cb61a80 <col:46> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55936cb61a40 <col:46> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.27] (ImplicitCastExpr, LValueToRValue, int)
  29: IntegerLiteral 0x55936cb61af8 <print.c:200:57> 'int' 1
1
  30: BinaryOperator 0x55936cb61b30 <print.c:200:35, col:57> 'int' '+'
|-ImplicitCastExpr 0x55936cb61b18 <col:35, col:49> 'int' <LValueToRValue>
| `-MemberExpr 0x55936cb61ac0 <col:35, col:49> 'int' lvalue .startpc 0x55936cb1caa0
|   `-ArraySubscriptExpr 0x55936cb61a98 <col:35, col:47> 'struct LocVar':'struct LocVar' lvalue
|     |-ImplicitCastExpr 0x55936cb61a68 <col:35, col:38> 'struct LocVar *' <LValueToRValue>
|     | `-MemberExpr 0x55936cb61a08 <col:35, col:38> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
|     |   `-ImplicitCastExpr 0x55936cb619f0 <col:35> 'const Proto *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
|     `-ImplicitCastExpr 0x55936cb61a80 <col:46> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55936cb61a40 <col:46> 'int' lvalue Var 0x55936cb61128 'i' 'int'
`-IntegerLiteral 0x55936cb61af8 <col:57> 'int' 1
[B2.28] + [B2.29]
  31: DeclRefExpr 0x55936cb61b58 <print.c:200:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
f
  32: ImplicitCastExpr 0x55936cb61b80 <print.c:200:59> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.31] (ImplicitCastExpr, LValueToRValue, const Proto *)
  33: MemberExpr 0x55936cb61b98 <print.c:200:59, col:62> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
`-ImplicitCastExpr 0x55936cb61b80 <col:59> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.32]->locvars
  34: ImplicitCastExpr 0x55936cb61bf8 <print.c:200:59, col:62> 'struct LocVar *' <LValueToRValue>
`-MemberExpr 0x55936cb61b98 <col:59, col:62> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
  `-ImplicitCastExpr 0x55936cb61b80 <col:59> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B2.33] (ImplicitCastExpr, LValueToRValue, struct LocVar *)
  35: DeclRefExpr 0x55936cb61bd0 <print.c:200:70> 'int' lvalue Var 0x55936cb61128 'i' 'int'
i
  36: ImplicitCastExpr 0x55936cb61c10 <print.c:200:70> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb61bd0 <col:70> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.35] (ImplicitCastExpr, LValueToRValue, int)
  37: ArraySubscriptExpr 0x55936cb61c28 <print.c:200:59, col:71> 'struct LocVar':'struct LocVar' lvalue
|-ImplicitCastExpr 0x55936cb61bf8 <col:59, col:62> 'struct LocVar *' <LValueToRValue>
| `-MemberExpr 0x55936cb61b98 <col:59, col:62> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
|   `-ImplicitCastExpr 0x55936cb61b80 <col:59> 'const Proto *' <LValueToRValue>
|     `-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
`-ImplicitCastExpr 0x55936cb61c10 <col:70> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55936cb61bd0 <col:70> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.34][[B2.36]]
  38: MemberExpr 0x55936cb61c50 <print.c:200:59, col:73> 'int' lvalue .endpc 0x55936cb1cb00
`-ArraySubscriptExpr 0x55936cb61c28 <col:59, col:71> 'struct LocVar':'struct LocVar' lvalue
  |-ImplicitCastExpr 0x55936cb61bf8 <col:59, col:62> 'struct LocVar *' <LValueToRValue>
  | `-MemberExpr 0x55936cb61b98 <col:59, col:62> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
  |   `-ImplicitCastExpr 0x55936cb61b80 <col:59> 'const Proto *' <LValueToRValue>
  |     `-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
  `-ImplicitCastExpr 0x55936cb61c10 <col:70> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55936cb61bd0 <col:70> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.37].endpc
  39: ImplicitCastExpr 0x55936cb61ca8 <print.c:200:59, col:73> 'int' <LValueToRValue>
`-MemberExpr 0x55936cb61c50 <col:59, col:73> 'int' lvalue .endpc 0x55936cb1cb00
  `-ArraySubscriptExpr 0x55936cb61c28 <col:59, col:71> 'struct LocVar':'struct LocVar' lvalue
    |-ImplicitCastExpr 0x55936cb61bf8 <col:59, col:62> 'struct LocVar *' <LValueToRValue>
    | `-MemberExpr 0x55936cb61b98 <col:59, col:62> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
    |   `-ImplicitCastExpr 0x55936cb61b80 <col:59> 'const Proto *' <LValueToRValue>
    |     `-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
    `-ImplicitCastExpr 0x55936cb61c10 <col:70> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55936cb61bd0 <col:70> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B2.38] (ImplicitCastExpr, LValueToRValue, int)
  40: IntegerLiteral 0x55936cb61c88 <print.c:200:79> 'int' 1
1
  41: BinaryOperator 0x55936cb61cc0 <print.c:200:59, col:79> 'int' '+'
|-ImplicitCastExpr 0x55936cb61ca8 <col:59, col:73> 'int' <LValueToRValue>
| `-MemberExpr 0x55936cb61c50 <col:59, col:73> 'int' lvalue .endpc 0x55936cb1cb00
|   `-ArraySubscriptExpr 0x55936cb61c28 <col:59, col:71> 'struct LocVar':'struct LocVar' lvalue
|     |-ImplicitCastExpr 0x55936cb61bf8 <col:59, col:62> 'struct LocVar *' <LValueToRValue>
|     | `-MemberExpr 0x55936cb61b98 <col:59, col:62> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
|     |   `-ImplicitCastExpr 0x55936cb61b80 <col:59> 'const Proto *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
|     `-ImplicitCastExpr 0x55936cb61c10 <col:70> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55936cb61bd0 <col:70> 'int' lvalue Var 0x55936cb61128 'i' 'int'
`-IntegerLiteral 0x55936cb61c88 <col:79> 'int' 1
[B2.39] + [B2.40]
  42: CallExpr 0x55936cb61d00 <print.c:199:3, line:200:80> 'int'
|-ImplicitCastExpr 0x55936cb61ce8 <line:199:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936cb616a0 <col:3> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
|-ImplicitCastExpr 0x55936cb61d68 <col:10> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55936cb61d50 <col:10> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55936cb61708 <col:10> 'char [14]' lvalue "\t%d\t%s\t%d\t%d\n"
|-ImplicitCastExpr 0x55936cb61d80 <line:200:3> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55936cb61740 <col:3> 'int' lvalue Var 0x55936cb61128 'i' 'int'
|-ParenExpr 0x55936cb619a8 <./llimits.h:75:22, col:31> 'const char *'
| `-CStyleCastExpr 0x55936cb61980 <col:23, col:30> 'const char *' <BitCast>
|   `-ParenExpr 0x55936cb61960 <col:26, col:30> 'TString *'
|     `-BinaryOperator 0x55936cb618f0 <./lobject.h:210:39, col:46> 'TString *' '+'
|       |-ImplicitCastExpr 0x55936cb618d8 <col:39, col:42> 'TString *' <LValueToRValue>
|       | `-ParenExpr 0x55936cb61898 <col:39, col:42> 'TString *' lvalue
|       |   `-MemberExpr 0x55936cb61860 <print.c:200:12, col:26> 'TString *' lvalue .varname 0x55936cb1ca40
|       |     `-ArraySubscriptExpr 0x55936cb61838 <col:12, col:24> 'struct LocVar':'struct LocVar' lvalue
|       |       |-ImplicitCastExpr 0x55936cb61808 <col:12, col:15> 'struct LocVar *' <LValueToRValue>
|       |       | `-MemberExpr 0x55936cb617a8 <col:12, col:15> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
|       |       |   `-ImplicitCastExpr 0x55936cb61790 <col:12> 'const Proto *' <LValueToRValue>
|       |       |     `-DeclRefExpr 0x55936cb61768 <col:12> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
|       |       `-ImplicitCastExpr 0x55936cb61820 <col:23> 'int' <LValueToRValue>
|       |         `-DeclRefExpr 0x55936cb617e0 <col:23> 'int' lvalue Var 0x55936cb61128 'i' 'int'
|       `-IntegerLiteral 0x55936cb618b8 <./lobject.h:210:46> 'int' 1
|-BinaryOperator 0x55936cb61b30 <print.c:200:35, col:57> 'int' '+'
| |-ImplicitCastExpr 0x55936cb61b18 <col:35, col:49> 'int' <LValueToRValue>
| | `-MemberExpr 0x55936cb61ac0 <col:35, col:49> 'int' lvalue .startpc 0x55936cb1caa0
| |   `-ArraySubscriptExpr 0x55936cb61a98 <col:35, col:47> 'struct LocVar':'struct LocVar' lvalue
| |     |-ImplicitCastExpr 0x55936cb61a68 <col:35, col:38> 'struct LocVar *' <LValueToRValue>
| |     | `-MemberExpr 0x55936cb61a08 <col:35, col:38> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
| |     |   `-ImplicitCastExpr 0x55936cb619f0 <col:35> 'const Proto *' <LValueToRValue>
| |     |     `-DeclRefExpr 0x55936cb619c8 <col:35> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
| |     `-ImplicitCastExpr 0x55936cb61a80 <col:46> 'int' <LValueToRValue>
| |       `-DeclRefExpr 0x55936cb61a40 <col:46> 'int' lvalue Var 0x55936cb61128 'i' 'int'
| `-IntegerLiteral 0x55936cb61af8 <col:57> 'int' 1
`-BinaryOperator 0x55936cb61cc0 <col:59, col:79> 'int' '+'
  |-ImplicitCastExpr 0x55936cb61ca8 <col:59, col:73> 'int' <LValueToRValue>
  | `-MemberExpr 0x55936cb61c50 <col:59, col:73> 'int' lvalue .endpc 0x55936cb1cb00
  |   `-ArraySubscriptExpr 0x55936cb61c28 <col:59, col:71> 'struct LocVar':'struct LocVar' lvalue
  |     |-ImplicitCastExpr 0x55936cb61bf8 <col:59, col:62> 'struct LocVar *' <LValueToRValue>
  |     | `-MemberExpr 0x55936cb61b98 <col:59, col:62> 'struct LocVar *const' lvalue ->locvars 0x55936cb1c280
  |     |   `-ImplicitCastExpr 0x55936cb61b80 <col:59> 'const Proto *' <LValueToRValue>
  |     |     `-DeclRefExpr 0x55936cb61b58 <col:59> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
  |     `-ImplicitCastExpr 0x55936cb61c10 <col:70> 'int' <LValueToRValue>
  |       `-DeclRefExpr 0x55936cb61bd0 <col:70> 'int' lvalue Var 0x55936cb61128 'i' 'int'
  `-IntegerLiteral 0x55936cb61c88 <col:79> 'int' 1
[B2.2]([B2.5], [B2.7], ([B2.19]), [B2.30], [B2.41])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: DeclRefExpr 0x55936cb615b0 <print.c:197:12> 'int' lvalue Var 0x55936cb61128 'i' 'int'
i
   2: ImplicitCastExpr 0x55936cb61600 <print.c:197:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb615b0 <col:12> 'int' lvalue Var 0x55936cb61128 'i' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: DeclRefExpr 0x55936cb615d8 <print.c:197:14> 'int' lvalue Var 0x55936cb611a0 'n' 'int'
n
   4: ImplicitCastExpr 0x55936cb61618 <print.c:197:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb615d8 <col:14> 'int' lvalue Var 0x55936cb611a0 'n' 'int'
[B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: BinaryOperator 0x55936cb61630 <print.c:197:12, col:14> 'int' '<'
|-ImplicitCastExpr 0x55936cb61600 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55936cb615b0 <col:12> 'int' lvalue Var 0x55936cb61128 'i' 'int'
`-ImplicitCastExpr 0x55936cb61618 <col:14> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55936cb615d8 <col:14> 'int' lvalue Var 0x55936cb611a0 'n' 'int'
[B3.2] < [B3.4]
   T: for (...; [B3.5]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: DeclStmt 0x55936cb73bc0 <print.c:195:6>col:6
`-VarDecl 0x55936cb61128 <col:2, col:6> col:6 used i 'int'
int i;
   2: DeclRefExpr 0x55936cb61200 <print.c:195:10> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
f
   3: ImplicitCastExpr 0x55936cb61228 <print.c:195:10> 'const Proto *' <LValueToRValue>
`-DeclRefExpr 0x55936cb61200 <col:10> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B4.2] (ImplicitCastExpr, LValueToRValue, const Proto *)
   4: MemberExpr 0x55936cb61240 <print.c:195:10, col:13> 'const int' lvalue ->sizelocvars 0x55936cb1c658
`-ImplicitCastExpr 0x55936cb61228 <col:10> 'const Proto *' <LValueToRValue>
  `-DeclRefExpr 0x55936cb61200 <col:10> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B4.3]->sizelocvars
   5: ImplicitCastExpr 0x55936cb61278 <print.c:195:10, col:13> 'int' <LValueToRValue>
`-MemberExpr 0x55936cb61240 <col:10, col:13> 'const int' lvalue ->sizelocvars 0x55936cb1c658
  `-ImplicitCastExpr 0x55936cb61228 <col:10> 'const Proto *' <LValueToRValue>
    `-DeclRefExpr 0x55936cb61200 <col:10> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B4.4] (ImplicitCastExpr, LValueToRValue, int)
   6: DeclStmt 0x55936cb6f508 <print.c:195:8, col:13>col:8
`-VarDecl 0x55936cb611a0 <col:2, col:13> col:8 used n 'int' cinit
  `-ImplicitCastExpr 0x55936cb61278 <col:10, col:13> 'int' <LValueToRValue>
    `-MemberExpr 0x55936cb61240 <col:10, col:13> 'const int' lvalue ->sizelocvars 0x55936cb1c658
      `-ImplicitCastExpr 0x55936cb61228 <col:10> 'const Proto *' <LValueToRValue>
        `-DeclRefExpr 0x55936cb61200 <col:10> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
int n = f->sizelocvars;
   7: DeclRefExpr 0x55936cb612c0 <print.c:196:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
printf
   8: ImplicitCastExpr 0x55936cb614a0 <print.c:196:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55936cb612c0 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
[B4.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, ...))
   9: StringLiteral 0x55936cb61328 <print.c:196:9> 'char [21]' lvalue "locals (%d) for %p:\n"
"locals (%d) for %p:\n"
  10: ImplicitCastExpr 0x55936cb614f8 <print.c:196:9> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55936cb61328 <col:9> 'char [21]' lvalue "locals (%d) for %p:\n"
[B4.9] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  11: ImplicitCastExpr 0x55936cb61510 <print.c:196:9> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55936cb614f8 <col:9> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55936cb61328 <col:9> 'char [21]' lvalue "locals (%d) for %p:\n"
[B4.10] (ImplicitCastExpr, BitCast, const char *)
  12: DeclRefExpr 0x55936cb61368 <print.c:196:33> 'int' lvalue Var 0x55936cb611a0 'n' 'int'
n
  13: ImplicitCastExpr 0x55936cb61528 <print.c:196:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x55936cb61368 <col:33> 'int' lvalue Var 0x55936cb611a0 'n' 'int'
[B4.12] (ImplicitCastExpr, LValueToRValue, int)
  14: DeclRefExpr 0x55936cb61390 <print.c:196:40> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
f
  15: ImplicitCastExpr 0x55936cb61420 <print.c:21:32, col:34> 'const Proto *' <LValueToRValue>
`-ParenExpr 0x55936cb61400 <col:32, col:34> 'const Proto *' lvalue
  `-DeclRefExpr 0x55936cb61390 <line:196:40> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
([B4.14]) (ImplicitCastExpr, LValueToRValue, const Proto *)
  16: CStyleCastExpr 0x55936cb61438 <print.c:21:19, col:34> 'const void *' <BitCast>
`-ImplicitCastExpr 0x55936cb61420 <col:32, col:34> 'const Proto *' <LValueToRValue>
  `-ParenExpr 0x55936cb61400 <col:32, col:34> 'const Proto *' lvalue
    `-DeclRefExpr 0x55936cb61390 <line:196:40> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
(const void *)[B4.15] (CStyleCastExpr, BitCast, const void *)
  17: CallExpr 0x55936cb614b8 <print.c:196:2, col:42> 'int'
|-ImplicitCastExpr 0x55936cb614a0 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55936cb612c0 <col:2> 'int (const char *, ...)' Function 0x55936ca0d558 'printf' 'int (const char *, ...)'
|-ImplicitCastExpr 0x55936cb61510 <col:9> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x55936cb614f8 <col:9> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x55936cb61328 <col:9> 'char [21]' lvalue "locals (%d) for %p:\n"
|-ImplicitCastExpr 0x55936cb61528 <col:33> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55936cb61368 <col:33> 'int' lvalue Var 0x55936cb611a0 'n' 'int'
`-ParenExpr 0x55936cb61480 <line:21:18, col:35> 'const void *'
  `-CStyleCastExpr 0x55936cb61438 <col:19, col:34> 'const void *' <BitCast>
    `-ImplicitCastExpr 0x55936cb61420 <col:32, col:34> 'const Proto *' <LValueToRValue>
      `-ParenExpr 0x55936cb61400 <col:32, col:34> 'const Proto *' lvalue
        `-DeclRefExpr 0x55936cb61390 <line:196:40> 'const Proto *' lvalue ParmVar 0x55936cb60fe0 'f' 'const Proto *'
[B4.8]([B4.11], [B4.13], ([B4.16]))
  18: IntegerLiteral 0x55936cb61568 <print.c:197:9> 'int' 0
0
  19: DeclRefExpr 0x55936cb61540 <print.c:197:7> 'int' lvalue Var 0x55936cb61128 'i' 'int'
i
  20: BinaryOperator 0x55936cb61588 <print.c:197:7, col:9> 'int' '='
|-DeclRefExpr 0x55936cb61540 <col:7> 'int' lvalue Var 0x55936cb61128 'i' 'int'
`-IntegerLiteral 0x55936cb61568 <col:9> 'int' 0
[B4.19] = [B4.18]
   Preds (1): B5
   Succs (1): B3

 [B0 (EXIT)]
   Preds (1): B3
