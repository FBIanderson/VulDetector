static void json_set_token_error(json_token_t *token, json_parse_t *json, const char *errtype)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x563107e1ced0 <lua_cjson.c:880:19> 'int' EnumConstant 0x563107ded640 'T_ERROR' 'int'
T_ERROR
   2: ImplicitCastExpr 0x563107e1cef8 <lua_cjson.c:880:19> 'json_token_type_t':'json_token_type_t' <IntegralCast>
`-DeclRefExpr 0x563107e1ced0 <col:19> 'int' EnumConstant 0x563107ded640 'T_ERROR' 'int'
[B1.1] (ImplicitCastExpr, IntegralCast, json_token_type_t)
   3: DeclRefExpr 0x563107e1ce58 <lua_cjson.c:880:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
token
   4: ImplicitCastExpr 0x563107e1ce80 <lua_cjson.c:880:5> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1ce58 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
[B1.3] (ImplicitCastExpr, LValueToRValue, json_token_t *)
   5: MemberExpr 0x563107e1ce98 <lua_cjson.c:880:5, col:12> 'json_token_type_t':'json_token_type_t' lvalue ->type 0x563107df18d0
`-ImplicitCastExpr 0x563107e1ce80 <col:5> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1ce58 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
[B1.4]->type
   6: BinaryOperator 0x563107e1cf10 <lua_cjson.c:880:5, col:19> 'json_token_type_t':'json_token_type_t' '='
|-MemberExpr 0x563107e1ce98 <col:5, col:12> 'json_token_type_t':'json_token_type_t' lvalue ->type 0x563107df18d0
| `-ImplicitCastExpr 0x563107e1ce80 <col:5> 'json_token_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e1ce58 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
`-ImplicitCastExpr 0x563107e1cef8 <col:19> 'json_token_type_t':'json_token_type_t' <IntegralCast>
  `-DeclRefExpr 0x563107e1ced0 <col:19> 'int' EnumConstant 0x563107ded640 'T_ERROR' 'int'
[B1.5] = [B1.2]
   7: DeclRefExpr 0x563107e1cfb0 <lua_cjson.c:881:20> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
json
   8: ImplicitCastExpr 0x563107e1cfd8 <lua_cjson.c:881:20> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1cfb0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.7] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   9: MemberExpr 0x563107e1cff0 <lua_cjson.c:881:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e1cfd8 <col:20> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1cfb0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.8]->ptr
  10: ImplicitCastExpr 0x563107e1d0a0 <lua_cjson.c:881:20, col:26> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e1cff0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e1cfd8 <col:20> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1cfb0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: DeclRefExpr 0x563107e1d028 <lua_cjson.c:881:32> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
json
  12: ImplicitCastExpr 0x563107e1d050 <lua_cjson.c:881:32> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1d028 <col:32> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.11] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  13: MemberExpr 0x563107e1d068 <lua_cjson.c:881:32, col:38> 'const char *' lvalue ->data 0x563107df1518
`-ImplicitCastExpr 0x563107e1d050 <col:32> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1d028 <col:32> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.12]->data
  14: ImplicitCastExpr 0x563107e1d0b8 <lua_cjson.c:881:32, col:38> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e1d068 <col:32, col:38> 'const char *' lvalue ->data 0x563107df1518
  `-ImplicitCastExpr 0x563107e1d050 <col:32> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1d028 <col:32> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.13] (ImplicitCastExpr, LValueToRValue, const char *)
  15: BinaryOperator 0x563107e1d0d0 <lua_cjson.c:881:20, col:38> 'long' '-'
|-ImplicitCastExpr 0x563107e1d0a0 <col:20, col:26> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e1cff0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e1cfd8 <col:20> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1cfb0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e1d0b8 <col:32, col:38> 'const char *' <LValueToRValue>
  `-MemberExpr 0x563107e1d068 <col:32, col:38> 'const char *' lvalue ->data 0x563107df1518
    `-ImplicitCastExpr 0x563107e1d050 <col:32> 'json_parse_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e1d028 <col:32> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.10] - [B1.14]
  16: ImplicitCastExpr 0x563107e1d0f8 <lua_cjson.c:881:20, col:38> 'int' <IntegralCast>
`-BinaryOperator 0x563107e1d0d0 <col:20, col:38> 'long' '-'
  |-ImplicitCastExpr 0x563107e1d0a0 <col:20, col:26> 'const char *' <LValueToRValue>
  | `-MemberExpr 0x563107e1cff0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
  |   `-ImplicitCastExpr 0x563107e1cfd8 <col:20> 'json_parse_t *' <LValueToRValue>
  |     `-DeclRefExpr 0x563107e1cfb0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
  `-ImplicitCastExpr 0x563107e1d0b8 <col:32, col:38> 'const char *' <LValueToRValue>
    `-MemberExpr 0x563107e1d068 <col:32, col:38> 'const char *' lvalue ->data 0x563107df1518
      `-ImplicitCastExpr 0x563107e1d050 <col:32> 'json_parse_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e1d028 <col:32> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.15] (ImplicitCastExpr, IntegralCast, int)
  17: DeclRefExpr 0x563107e1cf38 <lua_cjson.c:881:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
token
  18: ImplicitCastExpr 0x563107e1cf60 <lua_cjson.c:881:5> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1cf38 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
[B1.17] (ImplicitCastExpr, LValueToRValue, json_token_t *)
  19: MemberExpr 0x563107e1cf78 <lua_cjson.c:881:5, col:12> 'int' lvalue ->index 0x563107df1930
`-ImplicitCastExpr 0x563107e1cf60 <col:5> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1cf38 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
[B1.18]->index
  20: BinaryOperator 0x563107e1d110 <lua_cjson.c:881:5, col:38> 'int' '='
|-MemberExpr 0x563107e1cf78 <col:5, col:12> 'int' lvalue ->index 0x563107df1930
| `-ImplicitCastExpr 0x563107e1cf60 <col:5> 'json_token_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e1cf38 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
`-ImplicitCastExpr 0x563107e1d0f8 <col:20, col:38> 'int' <IntegralCast>
  `-BinaryOperator 0x563107e1d0d0 <col:20, col:38> 'long' '-'
    |-ImplicitCastExpr 0x563107e1d0a0 <col:20, col:26> 'const char *' <LValueToRValue>
    | `-MemberExpr 0x563107e1cff0 <col:20, col:26> 'const char *' lvalue ->ptr 0x563107df1578
    |   `-ImplicitCastExpr 0x563107e1cfd8 <col:20> 'json_parse_t *' <LValueToRValue>
    |     `-DeclRefExpr 0x563107e1cfb0 <col:20> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
    `-ImplicitCastExpr 0x563107e1d0b8 <col:32, col:38> 'const char *' <LValueToRValue>
      `-MemberExpr 0x563107e1d068 <col:32, col:38> 'const char *' lvalue ->data 0x563107df1518
        `-ImplicitCastExpr 0x563107e1d050 <col:32> 'json_parse_t *' <LValueToRValue>
          `-DeclRefExpr 0x563107e1d028 <col:32> 'json_parse_t *' lvalue ParmVar 0x563107e1cbf8 'json' 'json_parse_t *'
[B1.19] = [B1.16]
  21: DeclRefExpr 0x563107e1d1e8 <lua_cjson.c:882:27> 'const char *' lvalue ParmVar 0x563107e1cc70 'errtype' 'const char *'
errtype
  22: ImplicitCastExpr 0x563107e1d210 <lua_cjson.c:882:27> 'const char *' <LValueToRValue>
`-DeclRefExpr 0x563107e1d1e8 <col:27> 'const char *' lvalue ParmVar 0x563107e1cc70 'errtype' 'const char *'
[B1.21] (ImplicitCastExpr, LValueToRValue, const char *)
  23: DeclRefExpr 0x563107e1d138 <lua_cjson.c:882:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
token
  24: ImplicitCastExpr 0x563107e1d160 <lua_cjson.c:882:5> 'json_token_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1d138 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
[B1.23] (ImplicitCastExpr, LValueToRValue, json_token_t *)
  25: MemberExpr 0x563107e1d178 <lua_cjson.c:882:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
`-ImplicitCastExpr 0x563107e1d160 <col:5> 'json_token_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1d138 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
[B1.24]->value
  26: MemberExpr 0x563107e1d1b0 <lua_cjson.c:882:5, col:18> 'const char *' lvalue .string 0x563107df1a38
`-MemberExpr 0x563107e1d178 <col:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
  `-ImplicitCastExpr 0x563107e1d160 <col:5> 'json_token_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1d138 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
[B1.25].string
  27: BinaryOperator 0x563107e1d228 <lua_cjson.c:882:5, col:27> 'const char *' '='
|-MemberExpr 0x563107e1d1b0 <col:5, col:18> 'const char *' lvalue .string 0x563107df1a38
| `-MemberExpr 0x563107e1d178 <col:5, col:12> 'union (anonymous union at lua_cjson.c:145:5)':'union json_token_t::(anonymous at lua_cjson.c:145:5)' lvalue ->value 0x563107df1b90
|   `-ImplicitCastExpr 0x563107e1d160 <col:5> 'json_token_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1d138 <col:5> 'json_token_t *' lvalue ParmVar 0x563107e1cb88 'token' 'json_token_t *'
`-ImplicitCastExpr 0x563107e1d210 <col:27> 'const char *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1d1e8 <col:27> 'const char *' lvalue ParmVar 0x563107e1cc70 'errtype' 'const char *'
[B1.26] = [B1.22]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
