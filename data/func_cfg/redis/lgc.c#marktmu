static void marktmu(global_State *g)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: DeclRefExpr 0x55ef1b1d5348 <lgc.c:122:14> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
u
   2: ImplicitCastExpr 0x55ef1b1d53e8 <lgc.c:122:14> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d5348 <col:14> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B1.1] (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: DeclRefExpr 0x55ef1b1d5370 <lgc.c:122:19> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
g
   4: ImplicitCastExpr 0x55ef1b1d5398 <lgc.c:122:19> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d5370 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, global_State *)
   5: MemberExpr 0x55ef1b1d53b0 <lgc.c:122:19, col:22> 'GCObject *' lvalue ->tmudata 0x55ef1b19ee60
`-ImplicitCastExpr 0x55ef1b1d5398 <col:19> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d5370 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B1.4]->tmudata
   6: ImplicitCastExpr 0x55ef1b1d5400 <lgc.c:122:19, col:22> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1d53b0 <col:19, col:22> 'GCObject *' lvalue ->tmudata 0x55ef1b19ee60
  `-ImplicitCastExpr 0x55ef1b1d5398 <col:19> 'global_State *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1d5370 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B1.5] (ImplicitCastExpr, LValueToRValue, GCObject *)
   7: BinaryOperator 0x55ef1b1d5418 <lgc.c:122:14, col:22> 'int' '!='
|-ImplicitCastExpr 0x55ef1b1d53e8 <col:14> 'GCObject *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1d5348 <col:14> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
`-ImplicitCastExpr 0x55ef1b1d5400 <col:19, col:22> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b1d53b0 <col:19, col:22> 'GCObject *' lvalue ->tmudata 0x55ef1b19ee60
    `-ImplicitCastExpr 0x55ef1b1d5398 <col:19> 'global_State *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1d5370 <col:19> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B1.2] != [B1.6]
   T: do ... while [B1.7]
   Preds (1): B2
   Succs (2): B3 B0

 [B2]
   1: DeclRefExpr 0x55ef1b1d0dc8 <lgc.c:119:11> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
u
   2: ImplicitCastExpr 0x55ef1b1d0df0 <lgc.c:119:11> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d0dc8 <col:11> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.1] (ImplicitCastExpr, LValueToRValue, GCObject *)
   3: MemberExpr 0x55ef1b1d0e08 <lgc.c:119:11, col:14> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1d0df0 <col:11> 'GCObject *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d0dc8 <col:11> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.2]->gch
   4: MemberExpr 0x55ef1b1d0e40 <lgc.c:119:11, col:18> 'GCObject *' lvalue .next 0x55ef1b17ec78
`-MemberExpr 0x55ef1b1d0e08 <col:11, col:14> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1d0df0 <col:11> 'GCObject *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1d0dc8 <col:11> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.3].next
   5: ImplicitCastExpr 0x55ef1b1d0e78 <lgc.c:119:11, col:18> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1d0e40 <col:11, col:18> 'GCObject *' lvalue .next 0x55ef1b17ec78
  `-MemberExpr 0x55ef1b1d0e08 <col:11, col:14> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
    `-ImplicitCastExpr 0x55ef1b1d0df0 <col:11> 'GCObject *' <LValueToRValue>
      `-DeclRefExpr 0x55ef1b1d0dc8 <col:11> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: DeclRefExpr 0x55ef1b1d0da0 <lgc.c:119:7> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
u
   7: BinaryOperator 0x55ef1b1d0e90 <lgc.c:119:7, col:18> 'GCObject *' '='
|-DeclRefExpr 0x55ef1b1d0da0 <col:7> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
`-ImplicitCastExpr 0x55ef1b1d0e78 <col:11, col:18> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x55ef1b1d0e40 <col:11, col:18> 'GCObject *' lvalue .next 0x55ef1b17ec78
    `-MemberExpr 0x55ef1b1d0e08 <col:11, col:14> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b1d0df0 <col:11> 'GCObject *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1d0dc8 <col:11> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.6] = [B2.5]
   8: DeclRefExpr 0x55ef1b1d0f88 <lgc.c:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
u
   9: ImplicitCastExpr 0x55ef1b1d0fd0 <lgc.c:35:34, col:36> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
  `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
([B2.8]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  10: MemberExpr 0x55ef1b1d0fe8 <lgc.c:35:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
    `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.9]->gch
  11: MemberExpr 0x55ef1b1d1020 <lgc.c:35:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1d0fe8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
      `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.10].marked
  12: ImplicitCastExpr 0x55ef1b1d4d18 <lgc.c:35:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55ef1b1d1020 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
  `-MemberExpr 0x55ef1b1d0fe8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
    `-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
        `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.11] (ImplicitCastExpr, LValueToRValue, lu_byte)
  13: ImplicitCastExpr 0x55ef1b1d4d30 <lgc.c:35:34, col:43> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1d4d18 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55ef1b1d1020 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
    `-MemberExpr 0x55ef1b1d0fe8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      `-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
          `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.12] (ImplicitCastExpr, IntegralCast, int)
  14: IntegerLiteral 0x55ef1b1d1058 <./lgc.h:30:21> 'int' 1
1
  15: IntegerLiteral 0x55ef1b1d1078 <./lgc.h:56:18> 'int' 2
2
  16: BinaryOperator 0x55ef1b1d10b8 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
[B2.14] << ([B2.15])
  17: IntegerLiteral 0x55ef1b1d1100 <./lgc.h:30:21> 'int' 1
1
  18: IntegerLiteral 0x55ef1b1d1120 <./lgc.h:54:19> 'int' 0
0
  19: BinaryOperator 0x55ef1b1d1160 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
[B2.17] << ([B2.18])
  20: IntegerLiteral 0x55ef1b1d11a8 <./lgc.h:30:21> 'int' 1
1
  21: IntegerLiteral 0x55ef1b1d11c8 <./lgc.h:55:19> 'int' 1
1
  22: BinaryOperator 0x55ef1b1d1208 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
[B2.20] << ([B2.21])
  23: BinaryOperator 0x55ef1b1d1250 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
([B2.19]) | ([B2.22])
  24: BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
|-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
`-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
  `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
    |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
    `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
        `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
([B2.16]) | ([B2.23])
  25: UnaryOperator 0x55ef1b1d4c30 <lgc.c:32:29, col:58> 'int' prefix '~'
`-ParenExpr 0x55ef1b1d4c10 <col:30, col:58> 'int'
  `-BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
    |-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
    | `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
    |   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
    `-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
~([B2.24])
  26: CStyleCastExpr 0x55ef1b1d4cd0 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1d4cb0 <col:26, col:30> 'int'
  `-ParenExpr 0x55ef1b1d4c50 <line:78:36, col:38> 'int'
    `-UnaryOperator 0x55ef1b1d4c30 <lgc.c:32:29, col:58> 'int' prefix '~'
      `-ParenExpr 0x55ef1b1d4c10 <col:30, col:58> 'int'
        `-BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
          |-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
          | `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
          |   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
          |   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
          |     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
          `-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
            `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
              |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
              | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
              |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
              |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
              |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
              `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
                `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
                  |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
                  `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
                    `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
(lu_byte)(([B2.25])) (CStyleCastExpr, IntegralCast, lu_byte)
  27: ImplicitCastExpr 0x55ef1b1d4d48 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b1d4cf8 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1d4cd0 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1d4cb0 <col:26, col:30> 'int'
      `-ParenExpr 0x55ef1b1d4c50 <line:78:36, col:38> 'int'
        `-UnaryOperator 0x55ef1b1d4c30 <lgc.c:32:29, col:58> 'int' prefix '~'
          `-ParenExpr 0x55ef1b1d4c10 <col:30, col:58> 'int'
            `-BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
              |-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
              | `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
              |   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
              |   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
              |     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
              `-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
                `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
                  |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
                  | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
                  |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
                  |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
                  |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
                  `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
                    `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
                      |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
                      `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
                        `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
([B2.26]) (ImplicitCastExpr, IntegralCast, int)
  28: BinaryOperator 0x55ef1b1d4d60 <lgc.c:35:34, ./llimits.h:75:31> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1d4d30 <lgc.c:35:34, col:43> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1d4d18 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55ef1b1d1020 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|     `-MemberExpr 0x55ef1b1d0fe8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|       `-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
|         `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
|           `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
`-ImplicitCastExpr 0x55ef1b1d4d48 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b1d4cf8 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b1d4cd0 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b1d4cb0 <col:26, col:30> 'int'
        `-ParenExpr 0x55ef1b1d4c50 <line:78:36, col:38> 'int'
          `-UnaryOperator 0x55ef1b1d4c30 <lgc.c:32:29, col:58> 'int' prefix '~'
            `-ParenExpr 0x55ef1b1d4c10 <col:30, col:58> 'int'
              `-BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
                |-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
                | `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
                |   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
                |   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
                |     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
                `-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
                  `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
                    |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
                    | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
                    |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
                    |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
                    |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
                    `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
                      `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
                        |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
                        `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
                          `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
[B2.13] & [B2.27]
  29: DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
g
  30: ImplicitCastExpr 0x55ef1b1d4df0 <./lgc.h:77:37, col:39> 'global_State *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
  `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
([B2.29]) (ImplicitCastExpr, LValueToRValue, global_State *)
  31: MemberExpr 0x55ef1b1d4e08 <./lgc.h:77:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
`-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
    `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B2.30]->currentwhite
  32: ImplicitCastExpr 0x55ef1b1d4fd8 <./lgc.h:77:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
  `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
      `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B2.31] (ImplicitCastExpr, LValueToRValue, lu_byte)
  33: ImplicitCastExpr 0x55ef1b1d4ff0 <./lgc.h:77:37, col:42> 'int' <IntegralCast>
`-ImplicitCastExpr 0x55ef1b1d4fd8 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
    `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
      `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
        `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B2.32] (ImplicitCastExpr, IntegralCast, int)
  34: IntegerLiteral 0x55ef1b1d4e40 <./lgc.h:30:21> 'int' 1
1
  35: IntegerLiteral 0x55ef1b1d4e60 <./lgc.h:54:19> 'int' 0
0
  36: BinaryOperator 0x55ef1b1d4ea0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
[B2.34] << ([B2.35])
  37: IntegerLiteral 0x55ef1b1d4ee8 <./lgc.h:30:21> 'int' 1
1
  38: IntegerLiteral 0x55ef1b1d4f08 <./lgc.h:55:19> 'int' 1
1
  39: BinaryOperator 0x55ef1b1d4f48 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
`-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
  `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
[B2.37] << ([B2.38])
  40: BinaryOperator 0x55ef1b1d4f90 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x55ef1b1d4ec8 <col:20, col:27> 'int'
| `-BinaryOperator 0x55ef1b1d4ea0 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
|   `-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
`-ParenExpr 0x55ef1b1d4f70 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x55ef1b1d4f48 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
    `-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
      `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
([B2.36]) | ([B2.39])
  41: BinaryOperator 0x55ef1b1d5008 <./lgc.h:77:37, line:31:51> 'int' '&'
|-ImplicitCastExpr 0x55ef1b1d4ff0 <line:77:37, col:42> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x55ef1b1d4fd8 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
|     `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
|       `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
|         `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
`-ParenExpr 0x55ef1b1d4fb8 <./lgc.h:31:25, col:51> 'int'
  `-BinaryOperator 0x55ef1b1d4f90 <line:30:20, col:27> 'int' '|'
    |-ParenExpr 0x55ef1b1d4ec8 <col:20, col:27> 'int'
    | `-BinaryOperator 0x55ef1b1d4ea0 <col:21, col:26> 'int' '<<'
    |   |-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
    |   `-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
    |     `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
    `-ParenExpr 0x55ef1b1d4f70 <line:30:20, col:27> 'int'
      `-BinaryOperator 0x55ef1b1d4f48 <col:21, col:26> 'int' '<<'
        |-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
        `-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
          `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
[B2.33] & ([B2.40])
  42: CStyleCastExpr 0x55ef1b1d5090 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1d5070 <col:26, col:30> 'int'
  `-BinaryOperator 0x55ef1b1d5008 <./lgc.h:77:37, line:31:51> 'int' '&'
    |-ImplicitCastExpr 0x55ef1b1d4ff0 <line:77:37, col:42> 'int' <IntegralCast>
    | `-ImplicitCastExpr 0x55ef1b1d4fd8 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
    |   `-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
    |     `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
    |       `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
    |         `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
    `-ParenExpr 0x55ef1b1d4fb8 <./lgc.h:31:25, col:51> 'int'
      `-BinaryOperator 0x55ef1b1d4f90 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x55ef1b1d4ec8 <col:20, col:27> 'int'
        | `-BinaryOperator 0x55ef1b1d4ea0 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
        |   `-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
        `-ParenExpr 0x55ef1b1d4f70 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x55ef1b1d4f48 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
            `-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
              `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
(lu_byte)([B2.41]) (CStyleCastExpr, IntegralCast, lu_byte)
  43: ImplicitCastExpr 0x55ef1b1d50d8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
`-ParenExpr 0x55ef1b1d50b8 <col:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1d5090 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1d5070 <col:26, col:30> 'int'
      `-BinaryOperator 0x55ef1b1d5008 <./lgc.h:77:37, line:31:51> 'int' '&'
        |-ImplicitCastExpr 0x55ef1b1d4ff0 <line:77:37, col:42> 'int' <IntegralCast>
        | `-ImplicitCastExpr 0x55ef1b1d4fd8 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
        |   `-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
        |     `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
        |       `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
        |         `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
        `-ParenExpr 0x55ef1b1d4fb8 <./lgc.h:31:25, col:51> 'int'
          `-BinaryOperator 0x55ef1b1d4f90 <line:30:20, col:27> 'int' '|'
            |-ParenExpr 0x55ef1b1d4ec8 <col:20, col:27> 'int'
            | `-BinaryOperator 0x55ef1b1d4ea0 <col:21, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
            |   `-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
            |     `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
            `-ParenExpr 0x55ef1b1d4f70 <line:30:20, col:27> 'int'
              `-BinaryOperator 0x55ef1b1d4f48 <col:21, col:26> 'int' '<<'
                |-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
                `-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
                  `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
([B2.42]) (ImplicitCastExpr, IntegralCast, int)
  44: BinaryOperator 0x55ef1b1d50f0 <lgc.c:35:33, ./llimits.h:75:31> 'int' '|'
|-ParenExpr 0x55ef1b1d4d88 <lgc.c:35:33, col:61> 'int'
| `-BinaryOperator 0x55ef1b1d4d60 <col:34, ./llimits.h:75:31> 'int' '&'
|   |-ImplicitCastExpr 0x55ef1b1d4d30 <lgc.c:35:34, col:43> 'int' <IntegralCast>
|   | `-ImplicitCastExpr 0x55ef1b1d4d18 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-MemberExpr 0x55ef1b1d1020 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
|   |     `-MemberExpr 0x55ef1b1d0fe8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|   |       `-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
|   |         `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
|   |           `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
|   `-ImplicitCastExpr 0x55ef1b1d4d48 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
|     `-ParenExpr 0x55ef1b1d4cf8 <col:22, col:31> 'lu_byte':'unsigned char'
|       `-CStyleCastExpr 0x55ef1b1d4cd0 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
|         `-ParenExpr 0x55ef1b1d4cb0 <col:26, col:30> 'int'
|           `-ParenExpr 0x55ef1b1d4c50 <line:78:36, col:38> 'int'
|             `-UnaryOperator 0x55ef1b1d4c30 <lgc.c:32:29, col:58> 'int' prefix '~'
|               `-ParenExpr 0x55ef1b1d4c10 <col:30, col:58> 'int'
|                 `-BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
|                   |-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
|                   | `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
|                   |   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
|                   |   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
|                   |     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
|                   `-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
|                     `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
|                       |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
|                       | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
|                       |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
|                       |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
|                       |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
|                       `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
|                         `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
|                           |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
|                           `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
|                             `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
`-ImplicitCastExpr 0x55ef1b1d50d8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
  `-ParenExpr 0x55ef1b1d50b8 <col:22, col:31> 'lu_byte':'unsigned char'
    `-CStyleCastExpr 0x55ef1b1d5090 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      `-ParenExpr 0x55ef1b1d5070 <col:26, col:30> 'int'
        `-BinaryOperator 0x55ef1b1d5008 <./lgc.h:77:37, line:31:51> 'int' '&'
          |-ImplicitCastExpr 0x55ef1b1d4ff0 <line:77:37, col:42> 'int' <IntegralCast>
          | `-ImplicitCastExpr 0x55ef1b1d4fd8 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
          |   `-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
          |     `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
          |       `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
          |         `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
          `-ParenExpr 0x55ef1b1d4fb8 <./lgc.h:31:25, col:51> 'int'
            `-BinaryOperator 0x55ef1b1d4f90 <line:30:20, col:27> 'int' '|'
              |-ParenExpr 0x55ef1b1d4ec8 <col:20, col:27> 'int'
              | `-BinaryOperator 0x55ef1b1d4ea0 <col:21, col:26> 'int' '<<'
              |   |-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
              |   `-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
              |     `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
              `-ParenExpr 0x55ef1b1d4f70 <line:30:20, col:27> 'int'
                `-BinaryOperator 0x55ef1b1d4f48 <col:21, col:26> 'int' '<<'
                  |-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
                  `-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
                    `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
([B2.28]) | [B2.43]
  45: CStyleCastExpr 0x55ef1b1d5198 <./llimits.h:75:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
`-ParenExpr 0x55ef1b1d5178 <col:26, col:30> 'int'
  `-ParenExpr 0x55ef1b1d5118 <line:78:36, col:38> 'int'
    `-BinaryOperator 0x55ef1b1d50f0 <lgc.c:35:33, ./llimits.h:75:31> 'int' '|'
      |-ParenExpr 0x55ef1b1d4d88 <lgc.c:35:33, col:61> 'int'
      | `-BinaryOperator 0x55ef1b1d4d60 <col:34, ./llimits.h:75:31> 'int' '&'
      |   |-ImplicitCastExpr 0x55ef1b1d4d30 <lgc.c:35:34, col:43> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x55ef1b1d4d18 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
      |   |   `-MemberExpr 0x55ef1b1d1020 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
      |   |     `-MemberExpr 0x55ef1b1d0fe8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
      |   |       `-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
      |   |         `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
      |   |           `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
      |   `-ImplicitCastExpr 0x55ef1b1d4d48 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
      |     `-ParenExpr 0x55ef1b1d4cf8 <col:22, col:31> 'lu_byte':'unsigned char'
      |       `-CStyleCastExpr 0x55ef1b1d4cd0 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
      |         `-ParenExpr 0x55ef1b1d4cb0 <col:26, col:30> 'int'
      |           `-ParenExpr 0x55ef1b1d4c50 <line:78:36, col:38> 'int'
      |             `-UnaryOperator 0x55ef1b1d4c30 <lgc.c:32:29, col:58> 'int' prefix '~'
      |               `-ParenExpr 0x55ef1b1d4c10 <col:30, col:58> 'int'
      |                 `-BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
      |                   |-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
      |                   | `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
      |                   |   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
      |                   |   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
      |                   |     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
      |                   `-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
      |                     `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
      |                       |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
      |                       | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
      |                       |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
      |                       |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
      |                       |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
      |                       `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
      |                         `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
      |                           |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
      |                           `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
      |                             `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
      `-ImplicitCastExpr 0x55ef1b1d50d8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
        `-ParenExpr 0x55ef1b1d50b8 <col:22, col:31> 'lu_byte':'unsigned char'
          `-CStyleCastExpr 0x55ef1b1d5090 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
            `-ParenExpr 0x55ef1b1d5070 <col:26, col:30> 'int'
              `-BinaryOperator 0x55ef1b1d5008 <./lgc.h:77:37, line:31:51> 'int' '&'
                |-ImplicitCastExpr 0x55ef1b1d4ff0 <line:77:37, col:42> 'int' <IntegralCast>
                | `-ImplicitCastExpr 0x55ef1b1d4fd8 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
                |   `-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
                |     `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
                |       `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
                |         `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
                `-ParenExpr 0x55ef1b1d4fb8 <./lgc.h:31:25, col:51> 'int'
                  `-BinaryOperator 0x55ef1b1d4f90 <line:30:20, col:27> 'int' '|'
                    |-ParenExpr 0x55ef1b1d4ec8 <col:20, col:27> 'int'
                    | `-BinaryOperator 0x55ef1b1d4ea0 <col:21, col:26> 'int' '<<'
                    |   |-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
                    |   `-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
                    |     `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
                    `-ParenExpr 0x55ef1b1d4f70 <line:30:20, col:27> 'int'
                      `-BinaryOperator 0x55ef1b1d4f48 <col:21, col:26> 'int' '<<'
                        |-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
                        `-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
                          `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
(lu_byte)(([B2.44])) (CStyleCastExpr, IntegralCast, lu_byte)
  46: DeclRefExpr 0x55ef1b1d0eb8 <lgc.c:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
u
  47: ImplicitCastExpr 0x55ef1b1d0f00 <lgc.c:35:5, col:7> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x55ef1b1d0ee0 <col:5, col:7> 'GCObject *' lvalue
  `-DeclRefExpr 0x55ef1b1d0eb8 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
([B2.46]) (ImplicitCastExpr, LValueToRValue, GCObject *)
  48: MemberExpr 0x55ef1b1d0f18 <lgc.c:35:5, col:10> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
`-ImplicitCastExpr 0x55ef1b1d0f00 <col:5, col:7> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x55ef1b1d0ee0 <col:5, col:7> 'GCObject *' lvalue
    `-DeclRefExpr 0x55ef1b1d0eb8 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.47]->gch
  49: MemberExpr 0x55ef1b1d0f50 <lgc.c:35:5, col:14> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
`-MemberExpr 0x55ef1b1d0f18 <col:5, col:10> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
  `-ImplicitCastExpr 0x55ef1b1d0f00 <col:5, col:7> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x55ef1b1d0ee0 <col:5, col:7> 'GCObject *' lvalue
      `-DeclRefExpr 0x55ef1b1d0eb8 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.48].marked
  50: BinaryOperator 0x55ef1b1d51e0 <lgc.c:35:5, ./llimits.h:75:31> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x55ef1b1d0f50 <lgc.c:35:5, col:14> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
| `-MemberExpr 0x55ef1b1d0f18 <col:5, col:10> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
|   `-ImplicitCastExpr 0x55ef1b1d0f00 <col:5, col:7> 'GCObject *' <LValueToRValue>
|     `-ParenExpr 0x55ef1b1d0ee0 <col:5, col:7> 'GCObject *' lvalue
|       `-DeclRefExpr 0x55ef1b1d0eb8 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
`-ParenExpr 0x55ef1b1d51c0 <./llimits.h:75:22, col:31> 'lu_byte':'unsigned char'
  `-CStyleCastExpr 0x55ef1b1d5198 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
    `-ParenExpr 0x55ef1b1d5178 <col:26, col:30> 'int'
      `-ParenExpr 0x55ef1b1d5118 <line:78:36, col:38> 'int'
        `-BinaryOperator 0x55ef1b1d50f0 <lgc.c:35:33, ./llimits.h:75:31> 'int' '|'
          |-ParenExpr 0x55ef1b1d4d88 <lgc.c:35:33, col:61> 'int'
          | `-BinaryOperator 0x55ef1b1d4d60 <col:34, ./llimits.h:75:31> 'int' '&'
          |   |-ImplicitCastExpr 0x55ef1b1d4d30 <lgc.c:35:34, col:43> 'int' <IntegralCast>
          |   | `-ImplicitCastExpr 0x55ef1b1d4d18 <col:34, col:43> 'lu_byte':'unsigned char' <LValueToRValue>
          |   |   `-MemberExpr 0x55ef1b1d1020 <col:34, col:43> 'lu_byte':'unsigned char' lvalue .marked 0x55ef1b17ed48
          |   |     `-MemberExpr 0x55ef1b1d0fe8 <col:34, col:39> 'GCheader':'struct GCheader' lvalue ->gch 0x55ef1b1a2bd0
          |   |       `-ImplicitCastExpr 0x55ef1b1d0fd0 <col:34, col:36> 'GCObject *' <LValueToRValue>
          |   |         `-ParenExpr 0x55ef1b1d0fb0 <col:34, col:36> 'GCObject *' lvalue
          |   |           `-DeclRefExpr 0x55ef1b1d0f88 <line:120:20> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
          |   `-ImplicitCastExpr 0x55ef1b1d4d48 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
          |     `-ParenExpr 0x55ef1b1d4cf8 <col:22, col:31> 'lu_byte':'unsigned char'
          |       `-CStyleCastExpr 0x55ef1b1d4cd0 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
          |         `-ParenExpr 0x55ef1b1d4cb0 <col:26, col:30> 'int'
          |           `-ParenExpr 0x55ef1b1d4c50 <line:78:36, col:38> 'int'
          |             `-UnaryOperator 0x55ef1b1d4c30 <lgc.c:32:29, col:58> 'int' prefix '~'
          |               `-ParenExpr 0x55ef1b1d4c10 <col:30, col:58> 'int'
          |                 `-BinaryOperator 0x55ef1b1d1298 <./lgc.h:30:20, line:31:51> 'int' '|'
          |                   |-ParenExpr 0x55ef1b1d10e0 <line:30:20, col:27> 'int'
          |                   | `-BinaryOperator 0x55ef1b1d10b8 <col:21, col:26> 'int' '<<'
          |                   |   |-IntegerLiteral 0x55ef1b1d1058 <col:21> 'int' 1
          |                   |   `-ParenExpr 0x55ef1b1d1098 <col:24, col:26> 'int'
          |                   |     `-IntegerLiteral 0x55ef1b1d1078 <line:56:18> 'int' 2
          |                   `-ParenExpr 0x55ef1b1d1278 <line:31:25, col:51> 'int'
          |                     `-BinaryOperator 0x55ef1b1d1250 <line:30:20, col:27> 'int' '|'
          |                       |-ParenExpr 0x55ef1b1d1188 <col:20, col:27> 'int'
          |                       | `-BinaryOperator 0x55ef1b1d1160 <col:21, col:26> 'int' '<<'
          |                       |   |-IntegerLiteral 0x55ef1b1d1100 <col:21> 'int' 1
          |                       |   `-ParenExpr 0x55ef1b1d1140 <col:24, col:26> 'int'
          |                       |     `-IntegerLiteral 0x55ef1b1d1120 <line:54:19> 'int' 0
          |                       `-ParenExpr 0x55ef1b1d1230 <line:30:20, col:27> 'int'
          |                         `-BinaryOperator 0x55ef1b1d1208 <col:21, col:26> 'int' '<<'
          |                           |-IntegerLiteral 0x55ef1b1d11a8 <col:21> 'int' 1
          |                           `-ParenExpr 0x55ef1b1d11e8 <col:24, col:26> 'int'
          |                             `-IntegerLiteral 0x55ef1b1d11c8 <line:55:19> 'int' 1
          `-ImplicitCastExpr 0x55ef1b1d50d8 <./llimits.h:75:22, col:31> 'int' <IntegralCast>
            `-ParenExpr 0x55ef1b1d50b8 <col:22, col:31> 'lu_byte':'unsigned char'
              `-CStyleCastExpr 0x55ef1b1d5090 <col:23, col:30> 'lu_byte':'unsigned char' <IntegralCast>
                `-ParenExpr 0x55ef1b1d5070 <col:26, col:30> 'int'
                  `-BinaryOperator 0x55ef1b1d5008 <./lgc.h:77:37, line:31:51> 'int' '&'
                    |-ImplicitCastExpr 0x55ef1b1d4ff0 <line:77:37, col:42> 'int' <IntegralCast>
                    | `-ImplicitCastExpr 0x55ef1b1d4fd8 <col:37, col:42> 'lu_byte':'unsigned char' <LValueToRValue>
                    |   `-MemberExpr 0x55ef1b1d4e08 <col:37, col:42> 'lu_byte':'unsigned char' lvalue ->currentwhite 0x55ef1b19eb90
                    |     `-ImplicitCastExpr 0x55ef1b1d4df0 <col:37, col:39> 'global_State *' <LValueToRValue>
                    |       `-ParenExpr 0x55ef1b1d4dd0 <col:37, col:39> 'global_State *' lvalue
                    |         `-DeclRefExpr 0x55ef1b1d4da8 <lgc.c:120:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
                    `-ParenExpr 0x55ef1b1d4fb8 <./lgc.h:31:25, col:51> 'int'
                      `-BinaryOperator 0x55ef1b1d4f90 <line:30:20, col:27> 'int' '|'
                        |-ParenExpr 0x55ef1b1d4ec8 <col:20, col:27> 'int'
                        | `-BinaryOperator 0x55ef1b1d4ea0 <col:21, col:26> 'int' '<<'
                        |   |-IntegerLiteral 0x55ef1b1d4e40 <col:21> 'int' 1
                        |   `-ParenExpr 0x55ef1b1d4e80 <col:24, col:26> 'int'
                        |     `-IntegerLiteral 0x55ef1b1d4e60 <line:54:19> 'int' 0
                        `-ParenExpr 0x55ef1b1d4f70 <line:30:20, col:27> 'int'
                          `-BinaryOperator 0x55ef1b1d4f48 <col:21, col:26> 'int' '<<'
                            |-IntegerLiteral 0x55ef1b1d4ee8 <col:21> 'int' 1
                            `-ParenExpr 0x55ef1b1d4f28 <col:24, col:26> 'int'
                              `-IntegerLiteral 0x55ef1b1d4f08 <line:55:19> 'int' 1
[B2.49] = ([B2.45])
  51: DeclRefExpr 0x55ef1b1d5228 <lgc.c:121:7> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
reallymarkobject
  52: ImplicitCastExpr 0x55ef1b1d52a0 <lgc.c:121:7> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55ef1b1d5228 <col:7> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
[B2.51] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(global_State *, GCObject *))
  53: DeclRefExpr 0x55ef1b1d5250 <lgc.c:121:24> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
g
  54: ImplicitCastExpr 0x55ef1b1d52f0 <lgc.c:121:24> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d5250 <col:24> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B2.53] (ImplicitCastExpr, LValueToRValue, global_State *)
  55: DeclRefExpr 0x55ef1b1d5278 <lgc.c:121:27> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
u
  56: ImplicitCastExpr 0x55ef1b1d5308 <lgc.c:121:27> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d5278 <col:27> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.55] (ImplicitCastExpr, LValueToRValue, GCObject *)
  57: CallExpr 0x55ef1b1d52b8 <lgc.c:121:7, col:28> 'void'
|-ImplicitCastExpr 0x55ef1b1d52a0 <col:7> 'void (*)(global_State *, GCObject *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55ef1b1d5228 <col:7> 'void (global_State *, GCObject *)' Function 0x55ef1b1c5090 'reallymarkobject' 'void (global_State *, GCObject *)'
|-ImplicitCastExpr 0x55ef1b1d52f0 <col:24> 'global_State *' <LValueToRValue>
| `-DeclRefExpr 0x55ef1b1d5250 <col:24> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
`-ImplicitCastExpr 0x55ef1b1d5308 <col:27> 'GCObject *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d5278 <col:27> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B2.52]([B2.54], [B2.56])
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   Preds (1): B1
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x55ef1b1d0cb8 <lgc.c:116:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
g
   2: ImplicitCastExpr 0x55ef1b1d0ce0 <lgc.c:116:17> 'global_State *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d0cb8 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B4.1] (ImplicitCastExpr, LValueToRValue, global_State *)
   3: MemberExpr 0x55ef1b1d0cf8 <lgc.c:116:17, col:20> 'GCObject *' lvalue ->tmudata 0x55ef1b19ee60
`-ImplicitCastExpr 0x55ef1b1d0ce0 <col:17> 'global_State *' <LValueToRValue>
  `-DeclRefExpr 0x55ef1b1d0cb8 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B4.2]->tmudata
   4: ImplicitCastExpr 0x55ef1b1d0d30 <lgc.c:116:17, col:20> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x55ef1b1d0cf8 <col:17, col:20> 'GCObject *' lvalue ->tmudata 0x55ef1b19ee60
  `-ImplicitCastExpr 0x55ef1b1d0ce0 <col:17> 'global_State *' <LValueToRValue>
    `-DeclRefExpr 0x55ef1b1d0cb8 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, GCObject *)
   5: DeclStmt 0x55ef1b1d0d48 <lgc.c:116:3, col:27>col:13
`-VarDecl 0x55ef1b1d0c58 <col:3, col:20> col:13 used u 'GCObject *' cinit
  `-ImplicitCastExpr 0x55ef1b1d0d30 <col:17, col:20> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x55ef1b1d0cf8 <col:17, col:20> 'GCObject *' lvalue ->tmudata 0x55ef1b19ee60
      `-ImplicitCastExpr 0x55ef1b1d0ce0 <col:17> 'global_State *' <LValueToRValue>
        `-DeclRefExpr 0x55ef1b1d0cb8 <col:17> 'global_State *' lvalue ParmVar 0x55ef1b1d0aa0 'g' 'global_State *'
GCObject *u = g->tmudata;
   6: DeclRefExpr 0x55ef1b1d0d60 <lgc.c:117:7> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
u
   7: ImplicitCastExpr 0x55ef1b1d0d88 <lgc.c:117:7> 'GCObject *' <LValueToRValue>
`-DeclRefExpr 0x55ef1b1d0d60 <col:7> 'GCObject *' lvalue Var 0x55ef1b1d0c58 'u' 'GCObject *'
[B4.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   T: if [B4.7]
   Preds (1): B5
   Succs (2): B2 B0

 [B0 (EXIT)]
   Preds (2): B1 B4
