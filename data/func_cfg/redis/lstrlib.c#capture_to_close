static int capture_to_close(MatchState *ms)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: DeclRefExpr 0x55fb421c5b98 <lstrlib.c:198:10> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
luaL_error
   2: ImplicitCastExpr 0x55fb421c5cb8 <lstrlib.c:198:10> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x55fb421c5b98 <col:10> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x55fb421c5bc0 <lstrlib.c:198:21> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
ms
   4: ImplicitCastExpr 0x55fb421c5be8 <lstrlib.c:198:21> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb421c5bc0 <col:21> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, MatchState *)
   5: MemberExpr 0x55fb421c5c00 <lstrlib.c:198:21, col:25> 'lua_State *' lvalue ->L 0x55fb421c36a0
`-ImplicitCastExpr 0x55fb421c5be8 <col:21> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c5bc0 <col:21> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B1.4]->L
   6: ImplicitCastExpr 0x55fb421c5d08 <lstrlib.c:198:21, col:25> 'lua_State *' <LValueToRValue>
`-MemberExpr 0x55fb421c5c00 <col:21, col:25> 'lua_State *' lvalue ->L 0x55fb421c36a0
  `-ImplicitCastExpr 0x55fb421c5be8 <col:21> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421c5bc0 <col:21> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B1.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: StringLiteral 0x55fb421c5c78 <lstrlib.c:198:28> 'char [24]' lvalue "invalid pattern capture"
"invalid pattern capture"
   8: ImplicitCastExpr 0x55fb421c5d20 <lstrlib.c:198:28> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x55fb421c5c78 <col:28> 'char [24]' lvalue "invalid pattern capture"
[B1.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x55fb421c5d38 <lstrlib.c:198:28> 'const char *' <BitCast>
`-ImplicitCastExpr 0x55fb421c5d20 <col:28> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x55fb421c5c78 <col:28> 'char [24]' lvalue "invalid pattern capture"
[B1.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x55fb421c5cd0 <lstrlib.c:198:10, col:53> 'int'
|-ImplicitCastExpr 0x55fb421c5cb8 <col:10> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x55fb421c5b98 <col:10> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x55fb421c5d08 <col:21, col:25> 'lua_State *' <LValueToRValue>
| `-MemberExpr 0x55fb421c5c00 <col:21, col:25> 'lua_State *' lvalue ->L 0x55fb421c36a0
|   `-ImplicitCastExpr 0x55fb421c5be8 <col:21> 'MatchState *' <LValueToRValue>
|     `-DeclRefExpr 0x55fb421c5bc0 <col:21> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
`-ImplicitCastExpr 0x55fb421c5d38 <col:28> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x55fb421c5d20 <col:28> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x55fb421c5c78 <col:28> 'char [24]' lvalue "invalid pattern capture"
[B1.2]([B1.6], [B1.9])
  11: ReturnStmt 0x55fb421c5d50 <lstrlib.c:198:3, col:53>
`-CallExpr 0x55fb421c5cd0 <col:10, col:53> 'int'
  |-ImplicitCastExpr 0x55fb421c5cb8 <col:10> 'int (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x55fb421c5b98 <col:10> 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)' Function 0x55fb421a7478 'luaL_error' 'int (lua_State *, const char *, ...)':'int (lua_State *, const char *, ...)'
  |-ImplicitCastExpr 0x55fb421c5d08 <col:21, col:25> 'lua_State *' <LValueToRValue>
  | `-MemberExpr 0x55fb421c5c00 <col:21, col:25> 'lua_State *' lvalue ->L 0x55fb421c36a0
  |   `-ImplicitCastExpr 0x55fb421c5be8 <col:21> 'MatchState *' <LValueToRValue>
  |     `-DeclRefExpr 0x55fb421c5bc0 <col:21> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
  `-ImplicitCastExpr 0x55fb421c5d38 <col:28> 'const char *' <BitCast>
    `-ImplicitCastExpr 0x55fb421c5d20 <col:28> 'char *' <ArrayToPointerDecay>
      `-StringLiteral 0x55fb421c5c78 <col:28> 'char [24]' lvalue "invalid pattern capture"
return [B1.10];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x55fb421c5890 <lstrlib.c:196:27> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
level
   2: UnaryOperator 0x55fb421c58b8 <lstrlib.c:196:27, col:32> 'int' postfix '--'
`-DeclRefExpr 0x55fb421c5890 <col:27> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B2.1]--
   Preds (1): B4
   Succs (1): B5

 [B3]
   1: DeclRefExpr 0x55fb421c5ad0 <lstrlib.c:197:58> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
level
   2: ImplicitCastExpr 0x55fb421c5af8 <lstrlib.c:197:58> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c5ad0 <col:58> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ReturnStmt 0x55fb421c5b10 <lstrlib.c:197:51, col:58>
`-ImplicitCastExpr 0x55fb421c5af8 <col:58> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c5ad0 <col:58> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
return [B3.2];
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: DeclRefExpr 0x55fb421c58d8 <lstrlib.c:197:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
ms
   2: ImplicitCastExpr 0x55fb421c5900 <lstrlib.c:197:9> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb421c58d8 <col:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B4.1] (ImplicitCastExpr, LValueToRValue, MatchState *)
   3: MemberExpr 0x55fb421c5918 <lstrlib.c:197:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
`-ImplicitCastExpr 0x55fb421c5900 <col:9> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c58d8 <col:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B4.2]->capture
   4: ImplicitCastExpr 0x55fb421c5978 <lstrlib.c:197:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
`-MemberExpr 0x55fb421c5918 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
  `-ImplicitCastExpr 0x55fb421c5900 <col:9> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421c58d8 <col:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B4.3] (ImplicitCastExpr, ArrayToPointerDecay, struct (anonymous struct at lstrlib.c:175:3) *)
   5: DeclRefExpr 0x55fb421c5950 <lstrlib.c:197:21> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
level
   6: ImplicitCastExpr 0x55fb421c5990 <lstrlib.c:197:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c5950 <col:21> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B4.5] (ImplicitCastExpr, LValueToRValue, int)
   7: ArraySubscriptExpr 0x55fb421c59a8 <lstrlib.c:197:9, col:26> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
|-ImplicitCastExpr 0x55fb421c5978 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
| `-MemberExpr 0x55fb421c5918 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
|   `-ImplicitCastExpr 0x55fb421c5900 <col:9> 'MatchState *' <LValueToRValue>
|     `-DeclRefExpr 0x55fb421c58d8 <col:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
`-ImplicitCastExpr 0x55fb421c5990 <col:21> 'int' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c5950 <col:21> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B4.4][[B4.6]]
   8: MemberExpr 0x55fb421c59d0 <lstrlib.c:197:9, col:28> 'ptrdiff_t':'long' lvalue .len 0x55fb421c3860
`-ArraySubscriptExpr 0x55fb421c59a8 <col:9, col:26> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
  |-ImplicitCastExpr 0x55fb421c5978 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
  | `-MemberExpr 0x55fb421c5918 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
  |   `-ImplicitCastExpr 0x55fb421c5900 <col:9> 'MatchState *' <LValueToRValue>
  |     `-DeclRefExpr 0x55fb421c58d8 <col:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
  `-ImplicitCastExpr 0x55fb421c5990 <col:21> 'int' <LValueToRValue>
    `-DeclRefExpr 0x55fb421c5950 <col:21> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B4.7].len
   9: ImplicitCastExpr 0x55fb421c5a68 <lstrlib.c:197:9, col:28> 'ptrdiff_t':'long' <LValueToRValue>
`-MemberExpr 0x55fb421c59d0 <col:9, col:28> 'ptrdiff_t':'long' lvalue .len 0x55fb421c3860
  `-ArraySubscriptExpr 0x55fb421c59a8 <col:9, col:26> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
    |-ImplicitCastExpr 0x55fb421c5978 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
    | `-MemberExpr 0x55fb421c5918 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
    |   `-ImplicitCastExpr 0x55fb421c5900 <col:9> 'MatchState *' <LValueToRValue>
    |     `-DeclRefExpr 0x55fb421c58d8 <col:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
    `-ImplicitCastExpr 0x55fb421c5990 <col:21> 'int' <LValueToRValue>
      `-DeclRefExpr 0x55fb421c5950 <col:21> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B4.8] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
  10: IntegerLiteral 0x55fb421c5a08 <lstrlib.c:167:26> 'int' 1
1
  11: UnaryOperator 0x55fb421c5a28 <lstrlib.c:167:25, col:26> 'int' prefix '-'
`-IntegerLiteral 0x55fb421c5a08 <col:26> 'int' 1
-[B4.10]
  12: ImplicitCastExpr 0x55fb421c5a90 <lstrlib.c:167:24, col:27> 'long' <IntegralCast>
`-ParenExpr 0x55fb421c5a48 <col:24, col:27> 'int'
  `-UnaryOperator 0x55fb421c5a28 <col:25, col:26> 'int' prefix '-'
    `-IntegerLiteral 0x55fb421c5a08 <col:26> 'int' 1
([B4.11]) (ImplicitCastExpr, IntegralCast, long)
  13: BinaryOperator 0x55fb421c5aa8 <lstrlib.c:197:9, line:167:27> 'int' '=='
|-ImplicitCastExpr 0x55fb421c5a68 <line:197:9, col:28> 'ptrdiff_t':'long' <LValueToRValue>
| `-MemberExpr 0x55fb421c59d0 <col:9, col:28> 'ptrdiff_t':'long' lvalue .len 0x55fb421c3860
|   `-ArraySubscriptExpr 0x55fb421c59a8 <col:9, col:26> 'struct (anonymous struct at lstrlib.c:175:3)':'struct MatchState::(anonymous at lstrlib.c:175:3)' lvalue
|     |-ImplicitCastExpr 0x55fb421c5978 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) *' <ArrayToPointerDecay>
|     | `-MemberExpr 0x55fb421c5918 <col:9, col:13> 'struct (anonymous struct at lstrlib.c:175:3) [32]' lvalue ->capture 0x55fb421c39f8
|     |   `-ImplicitCastExpr 0x55fb421c5900 <col:9> 'MatchState *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55fb421c58d8 <col:9> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
|     `-ImplicitCastExpr 0x55fb421c5990 <col:21> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55fb421c5950 <col:21> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
`-ImplicitCastExpr 0x55fb421c5a90 <line:167:24, col:27> 'long' <IntegralCast>
  `-ParenExpr 0x55fb421c5a48 <col:24, col:27> 'int'
    `-UnaryOperator 0x55fb421c5a28 <col:25, col:26> 'int' prefix '-'
      `-IntegerLiteral 0x55fb421c5a08 <col:26> 'int' 1
[B4.9] == [B4.12]
   T: if [B4.13]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: DeclRefExpr 0x55fb421c5808 <lstrlib.c:196:17> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
level
   2: ImplicitCastExpr 0x55fb421c5850 <lstrlib.c:196:17> 'int' <LValueToRValue>
`-DeclRefExpr 0x55fb421c5808 <col:17> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x55fb421c5830 <lstrlib.c:196:24> 'int' 0
0
   4: BinaryOperator 0x55fb421c5868 <lstrlib.c:196:17, col:24> 'int' '>='
|-ImplicitCastExpr 0x55fb421c5850 <col:17> 'int' <LValueToRValue>
| `-DeclRefExpr 0x55fb421c5808 <col:17> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
`-IntegerLiteral 0x55fb421c5830 <col:24> 'int' 0
[B5.2] >= [B5.3]
   T: for (...; [B5.4]; ...)
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: DeclRefExpr 0x55fb421c5718 <lstrlib.c:195:15> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
ms
   2: ImplicitCastExpr 0x55fb421c5740 <lstrlib.c:195:15> 'MatchState *' <LValueToRValue>
`-DeclRefExpr 0x55fb421c5718 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B6.1] (ImplicitCastExpr, LValueToRValue, MatchState *)
   3: MemberExpr 0x55fb421c5758 <lstrlib.c:195:15, col:19> 'int' lvalue ->level 0x55fb421c3700
`-ImplicitCastExpr 0x55fb421c5740 <col:15> 'MatchState *' <LValueToRValue>
  `-DeclRefExpr 0x55fb421c5718 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B6.2]->level
   4: ImplicitCastExpr 0x55fb421c5790 <lstrlib.c:195:15, col:19> 'int' <LValueToRValue>
`-MemberExpr 0x55fb421c5758 <col:15, col:19> 'int' lvalue ->level 0x55fb421c3700
  `-ImplicitCastExpr 0x55fb421c5740 <col:15> 'MatchState *' <LValueToRValue>
    `-DeclRefExpr 0x55fb421c5718 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
[B6.3] (ImplicitCastExpr, LValueToRValue, int)
   5: DeclStmt 0x55fb421c57a8 <lstrlib.c:195:3, col:24>col:7
`-VarDecl 0x55fb421c56b8 <col:3, col:19> col:7 used level 'int' cinit
  `-ImplicitCastExpr 0x55fb421c5790 <col:15, col:19> 'int' <LValueToRValue>
    `-MemberExpr 0x55fb421c5758 <col:15, col:19> 'int' lvalue ->level 0x55fb421c3700
      `-ImplicitCastExpr 0x55fb421c5740 <col:15> 'MatchState *' <LValueToRValue>
        `-DeclRefExpr 0x55fb421c5718 <col:15> 'MatchState *' lvalue ParmVar 0x55fb421c54f0 'ms' 'MatchState *'
int level = ms->level;
   6: DeclRefExpr 0x55fb421c57c0 <lstrlib.c:196:8> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
level
   7: UnaryOperator 0x55fb421c57e8 <lstrlib.c:196:8, col:13> 'int' postfix '--'
`-DeclRefExpr 0x55fb421c57c0 <col:8> 'int' lvalue Var 0x55fb421c56b8 'level' 'int'
[B6.6]--
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (2): B1 B3
