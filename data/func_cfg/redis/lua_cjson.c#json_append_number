static void json_append_number(lua_State *l, json_config_t *cfg, strbuf_t *json, int lindex)
 [B12 (ENTRY)]
   Succs (1): B11

 [B1]
   1: DeclRefExpr 0x563107e124f0 <lua_cjson.c:613:5> 'void (strbuf_t *, int)' Function 0x563107dea3e0 'strbuf_ensure_empty_length' 'void (strbuf_t *, int)'
strbuf_ensure_empty_length
   2: ImplicitCastExpr 0x563107e12560 <lua_cjson.c:613:5> 'void (*)(strbuf_t *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e124f0 <col:5> 'void (strbuf_t *, int)' Function 0x563107dea3e0 'strbuf_ensure_empty_length' 'void (strbuf_t *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, int))
   3: DeclRefExpr 0x563107e12518 <lua_cjson.c:613:32> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
json
   4: ImplicitCastExpr 0x563107e125b0 <lua_cjson.c:613:32> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e12518 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
[B1.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: IntegerLiteral 0x563107e12540 <./fpconv.h:7:33> 'int' 32
32
   6: CallExpr 0x563107e12578 <lua_cjson.c:613:5, col:58> 'void'
|-ImplicitCastExpr 0x563107e12560 <col:5> 'void (*)(strbuf_t *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e124f0 <col:5> 'void (strbuf_t *, int)' Function 0x563107dea3e0 'strbuf_ensure_empty_length' 'void (strbuf_t *, int)'
|-ImplicitCastExpr 0x563107e125b0 <col:32> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e12518 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
`-IntegerLiteral 0x563107e12540 <./fpconv.h:7:33> 'int' 32
[B1.2]([B1.4], [B1.5])
   7: DeclRefExpr 0x563107e125f0 <lua_cjson.c:614:11> 'int (char *, double, int)' Function 0x563107decf98 'fpconv_g_fmt' 'int (char *, double, int)'
fpconv_g_fmt
   8: ImplicitCastExpr 0x563107e127f8 <lua_cjson.c:614:11> 'int (*)(char *, double, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e125f0 <col:11> 'int (char *, double, int)' Function 0x563107decf98 'fpconv_g_fmt' 'int (char *, double, int)'
[B1.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, double, int))
   9: DeclRefExpr 0x563107e12618 <lua_cjson.c:614:24> 'char *(strbuf_t *)' Function 0x563107dea900 'strbuf_empty_ptr' 'char *(strbuf_t *)'
strbuf_empty_ptr
  10: ImplicitCastExpr 0x563107e126c8 <lua_cjson.c:614:24> 'char *(*)(strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e12618 <col:24> 'char *(strbuf_t *)' Function 0x563107dea900 'strbuf_empty_ptr' 'char *(strbuf_t *)'
[B1.9] (ImplicitCastExpr, FunctionToPointerDecay, char *(*)(strbuf_t *))
  11: DeclRefExpr 0x563107e12640 <lua_cjson.c:614:41> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
json
  12: ImplicitCastExpr 0x563107e12710 <lua_cjson.c:614:41> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e12640 <col:41> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
[B1.11] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  13: CallExpr 0x563107e126e0 <lua_cjson.c:614:24, col:45> 'char *'
|-ImplicitCastExpr 0x563107e126c8 <col:24> 'char *(*)(strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e12618 <col:24> 'char *(strbuf_t *)' Function 0x563107dea900 'strbuf_empty_ptr' 'char *(strbuf_t *)'
`-ImplicitCastExpr 0x563107e12710 <col:41> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e12640 <col:41> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
[B1.10]([B1.12])
  14: DeclRefExpr 0x563107e12728 <lua_cjson.c:614:48> 'double' lvalue Var 0x563107e11458 'num' 'double'
num
  15: ImplicitCastExpr 0x563107e12850 <lua_cjson.c:614:48> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e12728 <col:48> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B1.14] (ImplicitCastExpr, LValueToRValue, double)
  16: DeclRefExpr 0x563107e12750 <lua_cjson.c:614:53> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
cfg
  17: ImplicitCastExpr 0x563107e12778 <lua_cjson.c:614:53> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e12750 <col:53> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B1.16] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  18: MemberExpr 0x563107e12790 <lua_cjson.c:614:53, col:58> 'int' lvalue ->encode_number_precision 0x563107df1220
`-ImplicitCastExpr 0x563107e12778 <col:53> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e12750 <col:53> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B1.17]->encode_number_precision
  19: ImplicitCastExpr 0x563107e12868 <lua_cjson.c:614:53, col:58> 'int' <LValueToRValue>
`-MemberExpr 0x563107e12790 <col:53, col:58> 'int' lvalue ->encode_number_precision 0x563107df1220
  `-ImplicitCastExpr 0x563107e12778 <col:53> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e12750 <col:53> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B1.18] (ImplicitCastExpr, LValueToRValue, int)
  20: CallExpr 0x563107e12810 <lua_cjson.c:614:11, col:81> 'int'
|-ImplicitCastExpr 0x563107e127f8 <col:11> 'int (*)(char *, double, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e125f0 <col:11> 'int (char *, double, int)' Function 0x563107decf98 'fpconv_g_fmt' 'int (char *, double, int)'
|-CallExpr 0x563107e126e0 <col:24, col:45> 'char *'
| |-ImplicitCastExpr 0x563107e126c8 <col:24> 'char *(*)(strbuf_t *)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e12618 <col:24> 'char *(strbuf_t *)' Function 0x563107dea900 'strbuf_empty_ptr' 'char *(strbuf_t *)'
| `-ImplicitCastExpr 0x563107e12710 <col:41> 'strbuf_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e12640 <col:41> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
|-ImplicitCastExpr 0x563107e12850 <col:48> 'double' <LValueToRValue>
| `-DeclRefExpr 0x563107e12728 <col:48> 'double' lvalue Var 0x563107e11458 'num' 'double'
`-ImplicitCastExpr 0x563107e12868 <col:53, col:58> 'int' <LValueToRValue>
  `-MemberExpr 0x563107e12790 <col:53, col:58> 'int' lvalue ->encode_number_precision 0x563107df1220
    `-ImplicitCastExpr 0x563107e12778 <col:53> 'json_config_t *' <LValueToRValue>
      `-DeclRefExpr 0x563107e12750 <col:53> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B1.8]([B1.13], [B1.15], [B1.19])
  21: DeclRefExpr 0x563107e125c8 <lua_cjson.c:614:5> 'int' lvalue Var 0x563107e115e0 'len' 'int'
len
  22: BinaryOperator 0x563107e12880 <lua_cjson.c:614:5, col:81> 'int' '='
|-DeclRefExpr 0x563107e125c8 <col:5> 'int' lvalue Var 0x563107e115e0 'len' 'int'
`-CallExpr 0x563107e12810 <col:11, col:81> 'int'
  |-ImplicitCastExpr 0x563107e127f8 <col:11> 'int (*)(char *, double, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e125f0 <col:11> 'int (char *, double, int)' Function 0x563107decf98 'fpconv_g_fmt' 'int (char *, double, int)'
  |-CallExpr 0x563107e126e0 <col:24, col:45> 'char *'
  | |-ImplicitCastExpr 0x563107e126c8 <col:24> 'char *(*)(strbuf_t *)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x563107e12618 <col:24> 'char *(strbuf_t *)' Function 0x563107dea900 'strbuf_empty_ptr' 'char *(strbuf_t *)'
  | `-ImplicitCastExpr 0x563107e12710 <col:41> 'strbuf_t *' <LValueToRValue>
  |   `-DeclRefExpr 0x563107e12640 <col:41> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
  |-ImplicitCastExpr 0x563107e12850 <col:48> 'double' <LValueToRValue>
  | `-DeclRefExpr 0x563107e12728 <col:48> 'double' lvalue Var 0x563107e11458 'num' 'double'
  `-ImplicitCastExpr 0x563107e12868 <col:53, col:58> 'int' <LValueToRValue>
    `-MemberExpr 0x563107e12790 <col:53, col:58> 'int' lvalue ->encode_number_precision 0x563107df1220
      `-ImplicitCastExpr 0x563107e12778 <col:53> 'json_config_t *' <LValueToRValue>
        `-DeclRefExpr 0x563107e12750 <col:53> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B1.21] = [B1.20]
  23: DeclRefExpr 0x563107e128a8 <lua_cjson.c:615:5> 'void (strbuf_t *, int)' Function 0x563107deac38 'strbuf_extend_length' 'void (strbuf_t *, int)'
strbuf_extend_length
  24: ImplicitCastExpr 0x563107e12920 <lua_cjson.c:615:5> 'void (*)(strbuf_t *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e128a8 <col:5> 'void (strbuf_t *, int)' Function 0x563107deac38 'strbuf_extend_length' 'void (strbuf_t *, int)'
[B1.23] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, int))
  25: DeclRefExpr 0x563107e128d0 <lua_cjson.c:615:26> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
json
  26: ImplicitCastExpr 0x563107e12970 <lua_cjson.c:615:26> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e128d0 <col:26> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
[B1.25] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  27: DeclRefExpr 0x563107e128f8 <lua_cjson.c:615:32> 'int' lvalue Var 0x563107e115e0 'len' 'int'
len
  28: ImplicitCastExpr 0x563107e12988 <lua_cjson.c:615:32> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e128f8 <col:32> 'int' lvalue Var 0x563107e115e0 'len' 'int'
[B1.27] (ImplicitCastExpr, LValueToRValue, int)
  29: CallExpr 0x563107e12938 <lua_cjson.c:615:5, col:35> 'void'
|-ImplicitCastExpr 0x563107e12920 <col:5> 'void (*)(strbuf_t *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e128a8 <col:5> 'void (strbuf_t *, int)' Function 0x563107deac38 'strbuf_extend_length' 'void (strbuf_t *, int)'
|-ImplicitCastExpr 0x563107e12970 <col:26> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e128d0 <col:26> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
`-ImplicitCastExpr 0x563107e12988 <col:32> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e128f8 <col:32> 'int' lvalue Var 0x563107e115e0 'len' 'int'
[B1.24]([B1.26], [B1.28])
   Preds (4): B3 B6 B8 B9
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x563107e122b8 <lua_cjson.c:608:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
strbuf_append_mem
   2: ImplicitCastExpr 0x563107e12358 <lua_cjson.c:608:13> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e122b8 <col:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char *, int))
   3: DeclRefExpr 0x563107e122e0 <lua_cjson.c:608:31> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
json
   4: ImplicitCastExpr 0x563107e123b0 <lua_cjson.c:608:31> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e122e0 <col:31> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
[B2.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: StringLiteral 0x563107e12308 <lua_cjson.c:608:37> 'char [5]' lvalue "null"
"null"
   6: ImplicitCastExpr 0x563107e123c8 <lua_cjson.c:608:37> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e12308 <col:37> 'char [5]' lvalue "null"
[B2.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x563107e123e0 <lua_cjson.c:608:37> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e123c8 <col:37> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e12308 <col:37> 'char [5]' lvalue "null"
[B2.6] (ImplicitCastExpr, BitCast, const char *)
   8: IntegerLiteral 0x563107e12338 <lua_cjson.c:608:45> 'int' 4
4
   9: CallExpr 0x563107e12370 <lua_cjson.c:608:13, col:46> 'void'
|-ImplicitCastExpr 0x563107e12358 <col:13> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e122b8 <col:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
|-ImplicitCastExpr 0x563107e123b0 <col:31> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e122e0 <col:31> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
|-ImplicitCastExpr 0x563107e123e0 <col:37> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e123c8 <col:37> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e12308 <col:37> 'char [5]' lvalue "null"
`-IntegerLiteral 0x563107e12338 <col:45> 'int' 4
[B2.2]([B2.4], [B2.7], [B2.8])
  10: ReturnStmt 0x563107e123f8 <lua_cjson.c:609:13>
return;
   Preds (2): B3 B4
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x563107e121e0 </usr/include/math.h:930:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
__builtin_isnan
   2: ImplicitCastExpr 0x563107e12230 </usr/include/math.h:930:20> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x563107e121e0 <col:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
[B3.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x563107e12208 <lua_cjson.c:607:33> 'double' lvalue Var 0x563107e11458 'num' 'double'
num
   4: ImplicitCastExpr 0x563107e12278 <lua_cjson.c:607:33> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e12208 <col:33> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B3.3] (ImplicitCastExpr, LValueToRValue, double)
   5: CallExpr 0x563107e12248 </usr/include/math.h:930:20, col:38> 'int'
|-ImplicitCastExpr 0x563107e12230 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x563107e121e0 <col:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
`-ImplicitCastExpr 0x563107e12278 <lua_cjson.c:607:33> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e12208 <col:33> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B3.2]([B3.4])
   T: if [B4.5] || [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x563107e12130 </usr/include/math.h:948:20> '<builtin fn type>' Function 0x563107e11758 '__builtin_isinf_sign' 'int ()'
__builtin_isinf_sign
   2: ImplicitCastExpr 0x563107e12180 </usr/include/math.h:948:20> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x563107e12130 <col:20> '<builtin fn type>' Function 0x563107e11758 '__builtin_isinf_sign' 'int ()'
[B4.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x563107e12158 <lua_cjson.c:607:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
num
   4: ImplicitCastExpr 0x563107e121c8 <lua_cjson.c:607:19> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e12158 <col:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B4.3] (ImplicitCastExpr, LValueToRValue, double)
   5: CallExpr 0x563107e12198 </usr/include/math.h:948:20, col:43> 'int'
|-ImplicitCastExpr 0x563107e12180 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x563107e12130 <col:20> '<builtin fn type>' Function 0x563107e11758 '__builtin_isinf_sign' 'int ()'
`-ImplicitCastExpr 0x563107e121c8 <lua_cjson.c:607:19> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e12158 <col:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B4.2]([B4.4])
   T: [B4.5] || ...
   Preds (1): B7
   Succs (2): B2 B3

 [B5]
   1: DeclRefExpr 0x563107e11f08 <lua_cjson.c:602:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
strbuf_append_mem
   2: ImplicitCastExpr 0x563107e12008 <lua_cjson.c:602:13> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e11f08 <col:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char *, int))
   3: DeclRefExpr 0x563107e11f30 <lua_cjson.c:602:31> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
json
   4: ImplicitCastExpr 0x563107e12060 <lua_cjson.c:602:31> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e11f30 <col:31> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
[B5.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: StringLiteral 0x563107e11f58 <lua_cjson.c:602:37> 'char [4]' lvalue "nan"
"nan"
   6: ImplicitCastExpr 0x563107e12078 <lua_cjson.c:602:37> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e11f58 <col:37> 'char [4]' lvalue "nan"
[B5.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x563107e12090 <lua_cjson.c:602:37> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e12078 <col:37> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e11f58 <col:37> 'char [4]' lvalue "nan"
[B5.6] (ImplicitCastExpr, BitCast, const char *)
   8: IntegerLiteral 0x563107e11f88 <lua_cjson.c:602:44> 'int' 3
3
   9: CallExpr 0x563107e12020 <lua_cjson.c:602:13, col:45> 'void'
|-ImplicitCastExpr 0x563107e12008 <col:13> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e11f08 <col:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
|-ImplicitCastExpr 0x563107e12060 <col:31> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e11f30 <col:31> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
|-ImplicitCastExpr 0x563107e12090 <col:37> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e12078 <col:37> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e11f58 <col:37> 'char [4]' lvalue "nan"
`-IntegerLiteral 0x563107e11f88 <col:44> 'int' 3
[B5.2]([B5.4], [B5.7], [B5.8])
  10: ReturnStmt 0x563107e120a8 <lua_cjson.c:603:13>
return;
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x563107e11e58 </usr/include/math.h:930:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
__builtin_isnan
   2: ImplicitCastExpr 0x563107e11ea8 </usr/include/math.h:930:20> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x563107e11e58 <col:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
[B6.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x563107e11e80 <lua_cjson.c:601:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
num
   4: ImplicitCastExpr 0x563107e11ef0 <lua_cjson.c:601:19> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e11e80 <col:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B6.3] (ImplicitCastExpr, LValueToRValue, double)
   5: CallExpr 0x563107e11ec0 </usr/include/math.h:930:20, col:38> 'int'
|-ImplicitCastExpr 0x563107e11ea8 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x563107e11e58 <col:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
`-ImplicitCastExpr 0x563107e11ef0 <lua_cjson.c:601:19> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e11e80 <col:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B6.2]([B6.4])
   T: if [B6.5]
   Preds (1): B7
   Succs (2): B5 B1

 [B7]
   1: DeclRefExpr 0x563107e11d80 <lua_cjson.c:598:16> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
cfg
   2: ImplicitCastExpr 0x563107e11da8 <lua_cjson.c:598:16> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e11d80 <col:16> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B7.1] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   3: MemberExpr 0x563107e11dc0 <lua_cjson.c:598:16, col:21> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
`-ImplicitCastExpr 0x563107e11da8 <col:16> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e11d80 <col:16> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B7.2]->encode_invalid_numbers
   4: ImplicitCastExpr 0x563107e11e18 <lua_cjson.c:598:16, col:21> 'int' <LValueToRValue>
`-MemberExpr 0x563107e11dc0 <col:16, col:21> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
  `-ImplicitCastExpr 0x563107e11da8 <col:16> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e11d80 <col:16> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B7.3] (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x563107e11df8 <lua_cjson.c:598:47> 'int' 1
1
   6: BinaryOperator 0x563107e11e30 <lua_cjson.c:598:16, col:47> 'int' '=='
|-ImplicitCastExpr 0x563107e11e18 <col:16, col:21> 'int' <LValueToRValue>
| `-MemberExpr 0x563107e11dc0 <col:16, col:21> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
|   `-ImplicitCastExpr 0x563107e11da8 <col:16> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e11d80 <col:16> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
`-IntegerLiteral 0x563107e11df8 <col:47> 'int' 1
[B7.4] == [B7.5]
   T: if [B7.6]
   Preds (1): B11
   Succs (2): B6 B4

 [B8]
   1: DeclRefExpr 0x563107e11af8 <lua_cjson.c:597:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
json_encode_exception
   2: ImplicitCastExpr 0x563107e11c38 <lua_cjson.c:597:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e11af8 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *))
   3: DeclRefExpr 0x563107e11b20 <lua_cjson.c:597:35> 'lua_State *' lvalue ParmVar 0x563107e110e0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e11ca0 <lua_cjson.c:597:35> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e11b20 <col:35> 'lua_State *' lvalue ParmVar 0x563107e110e0 'l' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e11b48 <lua_cjson.c:597:38> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
cfg
   6: ImplicitCastExpr 0x563107e11cb8 <lua_cjson.c:597:38> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e11b48 <col:38> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B8.5] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   7: DeclRefExpr 0x563107e11b70 <lua_cjson.c:597:43> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
json
   8: ImplicitCastExpr 0x563107e11cd0 <lua_cjson.c:597:43> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e11b70 <col:43> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
[B8.7] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   9: DeclRefExpr 0x563107e11b98 <lua_cjson.c:597:49> 'int' lvalue ParmVar 0x563107e11238 'lindex' 'int'
lindex
  10: ImplicitCastExpr 0x563107e11ce8 <lua_cjson.c:597:49> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e11b98 <col:49> 'int' lvalue ParmVar 0x563107e11238 'lindex' 'int'
[B8.9] (ImplicitCastExpr, LValueToRValue, int)
  11: StringLiteral 0x563107e11bf8 <lua_cjson.c:597:57> 'char [23]' lvalue "must not be NaN or Inf"
"must not be NaN or Inf"
  12: ImplicitCastExpr 0x563107e11d00 <lua_cjson.c:597:57> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e11bf8 <col:57> 'char [23]' lvalue "must not be NaN or Inf"
[B8.11] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  13: ImplicitCastExpr 0x563107e11d18 <lua_cjson.c:597:57> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e11d00 <col:57> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e11bf8 <col:57> 'char [23]' lvalue "must not be NaN or Inf"
[B8.12] (ImplicitCastExpr, BitCast, const char *)
  14: CallExpr 0x563107e11c50 <lua_cjson.c:597:13, col:81> 'void'
|-ImplicitCastExpr 0x563107e11c38 <col:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e11af8 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
|-ImplicitCastExpr 0x563107e11ca0 <col:35> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e11b20 <col:35> 'lua_State *' lvalue ParmVar 0x563107e110e0 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e11cb8 <col:38> 'json_config_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e11b48 <col:38> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e11cd0 <col:43> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e11b70 <col:43> 'strbuf_t *' lvalue ParmVar 0x563107e111c0 'json' 'strbuf_t *'
|-ImplicitCastExpr 0x563107e11ce8 <col:49> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e11b98 <col:49> 'int' lvalue ParmVar 0x563107e11238 'lindex' 'int'
`-ImplicitCastExpr 0x563107e11d18 <col:57> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e11d00 <col:57> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e11bf8 <col:57> 'char [23]' lvalue "must not be NaN or Inf"
[B8.2]([B8.4], [B8.6], [B8.8], [B8.10], [B8.13])
   Preds (2): B9 B10
   Succs (1): B1

 [B9]
   1: DeclRefExpr 0x563107e11a20 </usr/include/math.h:930:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
__builtin_isnan
   2: ImplicitCastExpr 0x563107e11a70 </usr/include/math.h:930:20> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x563107e11a20 <col:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
[B9.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x563107e11a48 <lua_cjson.c:596:33> 'double' lvalue Var 0x563107e11458 'num' 'double'
num
   4: ImplicitCastExpr 0x563107e11ab8 <lua_cjson.c:596:33> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e11a48 <col:33> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B9.3] (ImplicitCastExpr, LValueToRValue, double)
   5: CallExpr 0x563107e11a88 </usr/include/math.h:930:20, col:38> 'int'
|-ImplicitCastExpr 0x563107e11a70 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x563107e11a20 <col:20> '<builtin fn type>' Function 0x563107e11928 '__builtin_isnan' 'int ()'
`-ImplicitCastExpr 0x563107e11ab8 <lua_cjson.c:596:33> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e11a48 <col:33> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B9.2]([B9.4])
   T: if [B10.5] || [B9.5]
   Preds (1): B10
   Succs (2): B8 B1

 [B10]
   1: DeclRefExpr 0x563107e11850 </usr/include/math.h:948:20> '<builtin fn type>' Function 0x563107e11758 '__builtin_isinf_sign' 'int ()'
__builtin_isinf_sign
   2: ImplicitCastExpr 0x563107e118c8 </usr/include/math.h:948:20> 'int (*)()' <BuiltinFnToFnPtr>
`-DeclRefExpr 0x563107e11850 <col:20> '<builtin fn type>' Function 0x563107e11758 '__builtin_isinf_sign' 'int ()'
[B10.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)())
   3: DeclRefExpr 0x563107e11878 <lua_cjson.c:596:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
num
   4: ImplicitCastExpr 0x563107e11910 <lua_cjson.c:596:19> 'double' <LValueToRValue>
`-DeclRefExpr 0x563107e11878 <col:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B10.3] (ImplicitCastExpr, LValueToRValue, double)
   5: CallExpr 0x563107e118e0 </usr/include/math.h:948:20, col:43> 'int'
|-ImplicitCastExpr 0x563107e118c8 <col:20> 'int (*)()' <BuiltinFnToFnPtr>
| `-DeclRefExpr 0x563107e11850 <col:20> '<builtin fn type>' Function 0x563107e11758 '__builtin_isinf_sign' 'int ()'
`-ImplicitCastExpr 0x563107e11910 <lua_cjson.c:596:19> 'double' <LValueToRValue>
  `-DeclRefExpr 0x563107e11878 <col:19> 'double' lvalue Var 0x563107e11458 'num' 'double'
[B10.2]([B10.4])
   T: [B10.5] || ...
   Preds (1): B11
   Succs (2): B8 B9

 [B11]
   1: DeclRefExpr 0x563107e114b8 <lua_cjson.c:591:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
lua_tonumber
   2: ImplicitCastExpr 0x563107e11530 <lua_cjson.c:591:18> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e114b8 <col:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
[B11.1] (ImplicitCastExpr, FunctionToPointerDecay, lua_Number (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e114e0 <lua_cjson.c:591:31> 'lua_State *' lvalue ParmVar 0x563107e110e0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e11580 <lua_cjson.c:591:31> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e114e0 <col:31> 'lua_State *' lvalue ParmVar 0x563107e110e0 'l' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e11508 <lua_cjson.c:591:34> 'int' lvalue ParmVar 0x563107e11238 'lindex' 'int'
lindex
   6: ImplicitCastExpr 0x563107e11598 <lua_cjson.c:591:34> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e11508 <col:34> 'int' lvalue ParmVar 0x563107e11238 'lindex' 'int'
[B11.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x563107e11548 <lua_cjson.c:591:18, col:40> 'lua_Number':'double'
|-ImplicitCastExpr 0x563107e11530 <col:18> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e114b8 <col:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
|-ImplicitCastExpr 0x563107e11580 <col:31> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e114e0 <col:31> 'lua_State *' lvalue ParmVar 0x563107e110e0 'l' 'lua_State *'
`-ImplicitCastExpr 0x563107e11598 <col:34> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e11508 <col:34> 'int' lvalue ParmVar 0x563107e11238 'lindex' 'int'
[B11.2]([B11.4], [B11.6])
   8: DeclStmt 0x563107e115b0 <lua_cjson.c:591:5, col:41>col:12
`-VarDecl 0x563107e11458 <col:5, col:40> col:12 used num 'double' cinit
  `-CallExpr 0x563107e11548 <col:18, col:40> 'lua_Number':'double'
    |-ImplicitCastExpr 0x563107e11530 <col:18> 'lua_Number (*)(lua_State *, int)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x563107e114b8 <col:18> 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)' Function 0x563107d54100 'lua_tonumber' 'lua_Number (lua_State *, int)':'lua_Number (lua_State *, int)'
    |-ImplicitCastExpr 0x563107e11580 <col:31> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x563107e114e0 <col:31> 'lua_State *' lvalue ParmVar 0x563107e110e0 'l' 'lua_State *'
    `-ImplicitCastExpr 0x563107e11598 <col:34> 'int' <LValueToRValue>
      `-DeclRefExpr 0x563107e11508 <col:34> 'int' lvalue ParmVar 0x563107e11238 'lindex' 'int'
double num = lua_tonumber(l, lindex);
   9: DeclStmt 0x563107e11640 <lua_cjson.c:592:5, col:12>col:9
`-VarDecl 0x563107e115e0 <col:5, col:9> col:9 used len 'int'
int len;
  10: DeclRefExpr 0x563107e11658 <lua_cjson.c:594:9> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
cfg
  11: ImplicitCastExpr 0x563107e11680 <lua_cjson.c:594:9> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e11658 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B11.10] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  12: MemberExpr 0x563107e11698 <lua_cjson.c:594:9, col:14> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
`-ImplicitCastExpr 0x563107e11680 <col:9> 'json_config_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e11658 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B11.11]->encode_invalid_numbers
  13: ImplicitCastExpr 0x563107e116f0 <lua_cjson.c:594:9, col:14> 'int' <LValueToRValue>
`-MemberExpr 0x563107e11698 <col:9, col:14> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
  `-ImplicitCastExpr 0x563107e11680 <col:9> 'json_config_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e11658 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
[B11.12] (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x563107e116d0 <lua_cjson.c:594:40> 'int' 0
0
  15: BinaryOperator 0x563107e11708 <lua_cjson.c:594:9, col:40> 'int' '=='
|-ImplicitCastExpr 0x563107e116f0 <col:9, col:14> 'int' <LValueToRValue>
| `-MemberExpr 0x563107e11698 <col:9, col:14> 'int' lvalue ->encode_invalid_numbers 0x563107df11c0
|   `-ImplicitCastExpr 0x563107e11680 <col:9> 'json_config_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e11658 <col:9> 'json_config_t *' lvalue ParmVar 0x563107e11150 'cfg' 'json_config_t *'
`-IntegerLiteral 0x563107e116d0 <col:40> 'int' 0
[B11.13] == [B11.14]
   T: if [B11.15]
   Preds (1): B12
   Succs (2): B10 B7

 [B0 (EXIT)]
   Preds (3): B1 B2 B5
