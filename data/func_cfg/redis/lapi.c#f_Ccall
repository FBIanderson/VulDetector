static void f_Ccall(lua_State *L, void *ud)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x556e5d346d60 <lapi.c:838:44> 'void *' lvalue ParmVar 0x556e5d346b10 'ud' 'void *'
ud
   2: ImplicitCastExpr 0x556e5d346e00 <./llimits.h:75:26, col:30> 'void *' <LValueToRValue>
`-ParenExpr 0x556e5d346de0 <col:26, col:30> 'void *' lvalue
  `-DeclRefExpr 0x556e5d346d60 <lapi.c:838:44> 'void *' lvalue ParmVar 0x556e5d346b10 'ud' 'void *'
([B1.1]) (ImplicitCastExpr, LValueToRValue, void *)
   3: CStyleCastExpr 0x556e5d346e18 <./llimits.h:75:23, col:30> 'struct CCallS *' <BitCast>
`-ImplicitCastExpr 0x556e5d346e00 <col:26, col:30> 'void *' <LValueToRValue>
  `-ParenExpr 0x556e5d346de0 <col:26, col:30> 'void *' lvalue
    `-DeclRefExpr 0x556e5d346d60 <lapi.c:838:44> 'void *' lvalue ParmVar 0x556e5d346b10 'ud' 'void *'
(struct CCallS *)[B1.2] (CStyleCastExpr, BitCast, struct CCallS *)
   4: DeclStmt 0x556e5d346e60 <lapi.c:838:3, col:47>col:18
`-VarDecl 0x556e5d346d00 <col:3, ./llimits.h:75:31> lapi.c:838:18 used c 'struct CCallS *' cinit
  `-ParenExpr 0x556e5d346e40 <./llimits.h:75:22, col:31> 'struct CCallS *'
    `-CStyleCastExpr 0x556e5d346e18 <col:23, col:30> 'struct CCallS *' <BitCast>
      `-ImplicitCastExpr 0x556e5d346e00 <col:26, col:30> 'void *' <LValueToRValue>
        `-ParenExpr 0x556e5d346de0 <col:26, col:30> 'void *' lvalue
          `-DeclRefExpr 0x556e5d346d60 <lapi.c:838:44> 'void *' lvalue ParmVar 0x556e5d346b10 'ud' 'void *'
struct CCallS *c = ((struct CCallS *)(ud));
   5: DeclStmt 0x556e5d346ee8 <lapi.c:839:3, col:14>col:12
`-VarDecl 0x556e5d346e88 <col:3, col:12> col:12 used cl 'Closure *'
Closure *cl;
   6: DeclRefExpr 0x556e5d346f28 <lapi.c:840:8> 'Closure *(lua_State *, int, Table *)' Function 0x556e5d2ecdb0 'luaF_newCclosure' 'Closure *(lua_State *, int, Table *)'
luaF_newCclosure
   7: ImplicitCastExpr 0x556e5d347048 <lapi.c:840:8> 'Closure *(*)(lua_State *, int, Table *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d346f28 <col:8> 'Closure *(lua_State *, int, Table *)' Function 0x556e5d2ecdb0 'luaF_newCclosure' 'Closure *(lua_State *, int, Table *)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, Closure *(*)(lua_State *, int, Table *))
   8: DeclRefExpr 0x556e5d346f50 <lapi.c:840:25> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
   9: ImplicitCastExpr 0x556e5d3470a0 <lapi.c:840:25> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d346f50 <col:25> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.8] (ImplicitCastExpr, LValueToRValue, lua_State *)
  10: IntegerLiteral 0x556e5d346f78 <lapi.c:840:28> 'int' 0
0
  11: DeclRefExpr 0x556e5d346f98 <lapi.c:840:31> 'Table *(lua_State *)' Function 0x556e5d3072b0 'getcurrenv' 'Table *(lua_State *)'
getcurrenv
  12: ImplicitCastExpr 0x556e5d346fe8 <lapi.c:840:31> 'Table *(*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d346f98 <col:31> 'Table *(lua_State *)' Function 0x556e5d3072b0 'getcurrenv' 'Table *(lua_State *)'
[B1.11] (ImplicitCastExpr, FunctionToPointerDecay, Table *(*)(lua_State *))
  13: DeclRefExpr 0x556e5d346fc0 <lapi.c:840:42> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  14: ImplicitCastExpr 0x556e5d347030 <lapi.c:840:42> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d346fc0 <col:42> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.13] (ImplicitCastExpr, LValueToRValue, lua_State *)
  15: CallExpr 0x556e5d347000 <lapi.c:840:31, col:43> 'Table *'
|-ImplicitCastExpr 0x556e5d346fe8 <col:31> 'Table *(*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d346f98 <col:31> 'Table *(lua_State *)' Function 0x556e5d3072b0 'getcurrenv' 'Table *(lua_State *)'
`-ImplicitCastExpr 0x556e5d347030 <col:42> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d346fc0 <col:42> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.12]([B1.14])
  16: CallExpr 0x556e5d347060 <lapi.c:840:8, col:44> 'Closure *'
|-ImplicitCastExpr 0x556e5d347048 <col:8> 'Closure *(*)(lua_State *, int, Table *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d346f28 <col:8> 'Closure *(lua_State *, int, Table *)' Function 0x556e5d2ecdb0 'luaF_newCclosure' 'Closure *(lua_State *, int, Table *)'
|-ImplicitCastExpr 0x556e5d3470a0 <col:25> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x556e5d346f50 <col:25> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
|-IntegerLiteral 0x556e5d346f78 <col:28> 'int' 0
`-CallExpr 0x556e5d347000 <col:31, col:43> 'Table *'
  |-ImplicitCastExpr 0x556e5d346fe8 <col:31> 'Table *(*)(lua_State *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x556e5d346f98 <col:31> 'Table *(lua_State *)' Function 0x556e5d3072b0 'getcurrenv' 'Table *(lua_State *)'
  `-ImplicitCastExpr 0x556e5d347030 <col:42> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d346fc0 <col:42> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.7]([B1.9], [B1.10], [B1.15])
  17: DeclRefExpr 0x556e5d346f00 <lapi.c:840:3> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
cl
  18: BinaryOperator 0x556e5d3470b8 <lapi.c:840:3, col:44> 'Closure *' '='
|-DeclRefExpr 0x556e5d346f00 <col:3> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
`-CallExpr 0x556e5d347060 <col:8, col:44> 'Closure *'
  |-ImplicitCastExpr 0x556e5d347048 <col:8> 'Closure *(*)(lua_State *, int, Table *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x556e5d346f28 <col:8> 'Closure *(lua_State *, int, Table *)' Function 0x556e5d2ecdb0 'luaF_newCclosure' 'Closure *(lua_State *, int, Table *)'
  |-ImplicitCastExpr 0x556e5d3470a0 <col:25> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x556e5d346f50 <col:25> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
  |-IntegerLiteral 0x556e5d346f78 <col:28> 'int' 0
  `-CallExpr 0x556e5d347000 <col:31, col:43> 'Table *'
    |-ImplicitCastExpr 0x556e5d346fe8 <col:31> 'Table *(*)(lua_State *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x556e5d346f98 <col:31> 'Table *(lua_State *)' Function 0x556e5d3072b0 'getcurrenv' 'Table *(lua_State *)'
    `-ImplicitCastExpr 0x556e5d347030 <col:42> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d346fc0 <col:42> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.17] = [B1.16]
  19: DeclRefExpr 0x556e5d347190 <lapi.c:841:13> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
c
  20: ImplicitCastExpr 0x556e5d3471b8 <lapi.c:841:13> 'struct CCallS *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347190 <col:13> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
[B1.19] (ImplicitCastExpr, LValueToRValue, struct CCallS *)
  21: MemberExpr 0x556e5d3471d0 <lapi.c:841:13, col:16> 'lua_CFunction':'int (*)(lua_State *)' lvalue ->func 0x556e5d3469e0
`-ImplicitCastExpr 0x556e5d3471b8 <col:13> 'struct CCallS *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347190 <col:13> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
[B1.20]->func
  22: ImplicitCastExpr 0x556e5d347208 <lapi.c:841:13, col:16> 'lua_CFunction':'int (*)(lua_State *)' <LValueToRValue>
`-MemberExpr 0x556e5d3471d0 <col:13, col:16> 'lua_CFunction':'int (*)(lua_State *)' lvalue ->func 0x556e5d3469e0
  `-ImplicitCastExpr 0x556e5d3471b8 <col:13> 'struct CCallS *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d347190 <col:13> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
[B1.21] (ImplicitCastExpr, LValueToRValue, lua_CFunction)
  23: DeclRefExpr 0x556e5d3470e0 <lapi.c:841:3> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
cl
  24: ImplicitCastExpr 0x556e5d347108 <lapi.c:841:3> 'Closure *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3470e0 <col:3> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
[B1.23] (ImplicitCastExpr, LValueToRValue, Closure *)
  25: MemberExpr 0x556e5d347120 <lapi.c:841:3, col:7> 'CClosure':'struct CClosure' lvalue ->c 0x556e5d2c7900
`-ImplicitCastExpr 0x556e5d347108 <col:3> 'Closure *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3470e0 <col:3> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
[B1.24]->c
  26: MemberExpr 0x556e5d347158 <lapi.c:841:3, col:9> 'lua_CFunction':'int (*)(lua_State *)' lvalue .f 0x556e5d2c5cd0
`-MemberExpr 0x556e5d347120 <col:3, col:7> 'CClosure':'struct CClosure' lvalue ->c 0x556e5d2c7900
  `-ImplicitCastExpr 0x556e5d347108 <col:3> 'Closure *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d3470e0 <col:3> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
[B1.25].f
  27: BinaryOperator 0x556e5d347220 <lapi.c:841:3, col:16> 'lua_CFunction':'int (*)(lua_State *)' '='
|-MemberExpr 0x556e5d347158 <col:3, col:9> 'lua_CFunction':'int (*)(lua_State *)' lvalue .f 0x556e5d2c5cd0
| `-MemberExpr 0x556e5d347120 <col:3, col:7> 'CClosure':'struct CClosure' lvalue ->c 0x556e5d2c7900
|   `-ImplicitCastExpr 0x556e5d347108 <col:3> 'Closure *' <LValueToRValue>
|     `-DeclRefExpr 0x556e5d3470e0 <col:3> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
`-ImplicitCastExpr 0x556e5d347208 <col:13, col:16> 'lua_CFunction':'int (*)(lua_State *)' <LValueToRValue>
  `-MemberExpr 0x556e5d3471d0 <col:13, col:16> 'lua_CFunction':'int (*)(lua_State *)' lvalue ->func 0x556e5d3469e0
    `-ImplicitCastExpr 0x556e5d3471b8 <col:13> 'struct CCallS *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d347190 <col:13> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
[B1.26] = [B1.22]
  28: DeclRefExpr 0x556e5d3472b8 <lapi.c:842:17> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  29: ImplicitCastExpr 0x556e5d3472e0 <lapi.c:842:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3472b8 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.28] (ImplicitCastExpr, LValueToRValue, lua_State *)
  30: MemberExpr 0x556e5d3472f8 <lapi.c:842:17, col:20> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d3472e0 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3472b8 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.29]->top
  31: ImplicitCastExpr 0x556e5d347350 <./lobject.h:144:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d347330 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x556e5d3472f8 <lapi.c:842:17, col:20> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
    `-ImplicitCastExpr 0x556e5d3472e0 <col:17> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d3472b8 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
([B1.30]) (ImplicitCastExpr, LValueToRValue, StkId)
  32: DeclStmt 0x556e5d347368 <./lobject.h:144:5, col:22>col:13
`-VarDecl 0x556e5d347258 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x556e5d347350 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d347330 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x556e5d3472f8 <lapi.c:842:17, col:20> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
        `-ImplicitCastExpr 0x556e5d3472e0 <col:17> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x556e5d3472b8 <col:17> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
TValue *i_o = (L->top);
  33: DeclRefExpr 0x556e5d347430 <lapi.c:842:25> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
cl
  34: ImplicitCastExpr 0x556e5d3474d8 <./llimits.h:75:26, col:30> 'Closure *' <LValueToRValue>
`-ParenExpr 0x556e5d3474b8 <col:26, col:30> 'Closure *' lvalue
  `-ParenExpr 0x556e5d347458 <./lobject.h:145:36, col:38> 'Closure *' lvalue
    `-DeclRefExpr 0x556e5d347430 <lapi.c:842:25> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
(([B1.33])) (ImplicitCastExpr, LValueToRValue, Closure *)
  35: CStyleCastExpr 0x556e5d3474f0 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x556e5d3474d8 <col:26, col:30> 'Closure *' <LValueToRValue>
  `-ParenExpr 0x556e5d3474b8 <col:26, col:30> 'Closure *' lvalue
    `-ParenExpr 0x556e5d347458 <./lobject.h:145:36, col:38> 'Closure *' lvalue
      `-DeclRefExpr 0x556e5d347430 <lapi.c:842:25> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
(GCObject *)[B1.34] (CStyleCastExpr, BitCast, GCObject *)
  36: DeclRefExpr 0x556e5d347380 <./lobject.h:145:5> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
i_o
  37: ImplicitCastExpr 0x556e5d3473a8 <./lobject.h:145:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347380 <col:5> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
[B1.36] (ImplicitCastExpr, LValueToRValue, TValue *)
  38: MemberExpr 0x556e5d3473c0 <./lobject.h:145:5, col:10> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d3473a8 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347380 <col:5> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
[B1.37]->value
  39: MemberExpr 0x556e5d3473f8 <./lobject.h:145:5, col:16> 'GCObject *' lvalue .gc 0x556e5d2b7450
`-MemberExpr 0x556e5d3473c0 <col:5, col:10> 'Value':'Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d3473a8 <col:5> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d347380 <col:5> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
[B1.38].gc
  40: BinaryOperator 0x556e5d347538 <./lobject.h:145:5, ./llimits.h:75:31> 'GCObject *' '='
|-MemberExpr 0x556e5d3473f8 <./lobject.h:145:5, col:16> 'GCObject *' lvalue .gc 0x556e5d2b7450
| `-MemberExpr 0x556e5d3473c0 <col:5, col:10> 'Value':'Value' lvalue ->value 0x556e5d2b7750
|   `-ImplicitCastExpr 0x556e5d3473a8 <col:5> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x556e5d347380 <col:5> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
`-ParenExpr 0x556e5d347518 <./llimits.h:75:22, col:31> 'GCObject *'
  `-CStyleCastExpr 0x556e5d3474f0 <col:23, col:30> 'GCObject *' <BitCast>
    `-ImplicitCastExpr 0x556e5d3474d8 <col:26, col:30> 'Closure *' <LValueToRValue>
      `-ParenExpr 0x556e5d3474b8 <col:26, col:30> 'Closure *' lvalue
        `-ParenExpr 0x556e5d347458 <./lobject.h:145:36, col:38> 'Closure *' lvalue
          `-DeclRefExpr 0x556e5d347430 <lapi.c:842:25> 'Closure *' lvalue Var 0x556e5d346e88 'cl' 'Closure *'
[B1.39] = ([B1.35])
  41: IntegerLiteral 0x556e5d3475d8 <./lua.h:80:24> 'int' 6
6
  42: DeclRefExpr 0x556e5d347560 <./lobject.h:145:42> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
i_o
  43: ImplicitCastExpr 0x556e5d347588 <./lobject.h:145:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347560 <col:42> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
[B1.42] (ImplicitCastExpr, LValueToRValue, TValue *)
  44: MemberExpr 0x556e5d3475a0 <./lobject.h:145:42, col:47> 'int' lvalue ->tt 0x556e5d2b77b0
`-ImplicitCastExpr 0x556e5d347588 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347560 <col:42> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
[B1.43]->tt
  45: BinaryOperator 0x556e5d3475f8 <./lobject.h:145:42, ./lua.h:80:24> 'int' '='
|-MemberExpr 0x556e5d3475a0 <./lobject.h:145:42, col:47> 'int' lvalue ->tt 0x556e5d2b77b0
| `-ImplicitCastExpr 0x556e5d347588 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x556e5d347560 <col:42> 'TValue *' lvalue Var 0x556e5d347258 'i_o' 'TValue *'
`-IntegerLiteral 0x556e5d3475d8 <./lua.h:80:24> 'int' 6
[B1.44] = [B1.41]
  46: IntegerLiteral 0x556e5d347620 <./llimits.h:62:31> 'int' 0
0
  47: CStyleCastExpr 0x556e5d347650 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x556e5d347620 <col:31> 'int' 0
(void)[B1.46] (CStyleCastExpr, ToVoid, void)
  48: DeclRefExpr 0x556e5d3476d8 <lapi.c:843:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  49: ImplicitCastExpr 0x556e5d347710 <lapi.c:843:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3476d8 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.48] (ImplicitCastExpr, LValueToRValue, lua_State *)
  50: CStyleCastExpr 0x556e5d347728 <./luaconf.h:381:30, lapi.c:843:16> 'void' <ToVoid>
`-ImplicitCastExpr 0x556e5d347710 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3476d8 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
(void)[B1.49] (CStyleCastExpr, ToVoid, void)
  51: DeclRefExpr 0x556e5d347778 <lapi.c:843:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  52: ImplicitCastExpr 0x556e5d3477a0 <lapi.c:843:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347778 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.51] (ImplicitCastExpr, LValueToRValue, lua_State *)
  53: MemberExpr 0x556e5d3477b8 <lapi.c:843:16, line:45:66> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d3477a0 <line:843:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347778 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.52]->top
  54: UnaryOperator 0x556e5d3477f0 <lapi.c:843:16, line:45:69> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x556e5d3477b8 <line:843:16, line:45:66> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
  `-ImplicitCastExpr 0x556e5d3477a0 <line:843:16> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d347778 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.53]++
  55: DeclRefExpr 0x556e5d3478b8 <lapi.c:844:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  56: ImplicitCastExpr 0x556e5d3478e0 <lapi.c:844:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d3478b8 <col:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.55] (ImplicitCastExpr, LValueToRValue, lua_State *)
  57: MemberExpr 0x556e5d3478f8 <lapi.c:844:13, col:16> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d3478e0 <col:13> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d3478b8 <col:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.56]->top
  58: ImplicitCastExpr 0x556e5d347950 <./lobject.h:123:17, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x556e5d347930 <col:17, col:21> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x556e5d3478f8 <lapi.c:844:13, col:16> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
    `-ImplicitCastExpr 0x556e5d3478e0 <col:13> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d3478b8 <col:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
([B1.57]) (ImplicitCastExpr, LValueToRValue, StkId)
  59: DeclStmt 0x556e5d347968 <./lobject.h:123:5, col:22>col:13
`-VarDecl 0x556e5d347858 <col:5, col:21> col:13 used i_o 'TValue *' cinit
  `-ImplicitCastExpr 0x556e5d347950 <col:17, col:21> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x556e5d347930 <col:17, col:21> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x556e5d3478f8 <lapi.c:844:13, col:16> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
        `-ImplicitCastExpr 0x556e5d3478e0 <col:13> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x556e5d3478b8 <col:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
TValue *i_o = (L->top);
  60: DeclRefExpr 0x556e5d347a30 <lapi.c:844:21> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
c
  61: ImplicitCastExpr 0x556e5d347a58 <lapi.c:844:21> 'struct CCallS *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347a30 <col:21> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
[B1.60] (ImplicitCastExpr, LValueToRValue, struct CCallS *)
  62: MemberExpr 0x556e5d347a70 <lapi.c:844:21, col:24> 'void *' lvalue ->ud 0x556e5d346a40
`-ImplicitCastExpr 0x556e5d347a58 <col:21> 'struct CCallS *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347a30 <col:21> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
[B1.61]->ud
  63: ImplicitCastExpr 0x556e5d347ac8 <./lobject.h:123:37, col:39> 'void *' <LValueToRValue>
`-ParenExpr 0x556e5d347aa8 <col:37, col:39> 'void *' lvalue
  `-MemberExpr 0x556e5d347a70 <lapi.c:844:21, col:24> 'void *' lvalue ->ud 0x556e5d346a40
    `-ImplicitCastExpr 0x556e5d347a58 <col:21> 'struct CCallS *' <LValueToRValue>
      `-DeclRefExpr 0x556e5d347a30 <col:21> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
([B1.62]) (ImplicitCastExpr, LValueToRValue, void *)
  64: DeclRefExpr 0x556e5d347980 <./lobject.h:123:24> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
i_o
  65: ImplicitCastExpr 0x556e5d3479a8 <./lobject.h:123:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347980 <col:24> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
[B1.64] (ImplicitCastExpr, LValueToRValue, TValue *)
  66: MemberExpr 0x556e5d3479c0 <./lobject.h:123:24, col:29> 'Value':'Value' lvalue ->value 0x556e5d2b7750
`-ImplicitCastExpr 0x556e5d3479a8 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347980 <col:24> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
[B1.65]->value
  67: MemberExpr 0x556e5d3479f8 <./lobject.h:123:24, col:35> 'void *' lvalue .p 0x556e5d2b74b0
`-MemberExpr 0x556e5d3479c0 <col:24, col:29> 'Value':'Value' lvalue ->value 0x556e5d2b7750
  `-ImplicitCastExpr 0x556e5d3479a8 <col:24> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d347980 <col:24> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
[B1.66].p
  68: BinaryOperator 0x556e5d347ae0 <./lobject.h:123:24, col:39> 'void *' '='
|-MemberExpr 0x556e5d3479f8 <col:24, col:35> 'void *' lvalue .p 0x556e5d2b74b0
| `-MemberExpr 0x556e5d3479c0 <col:24, col:29> 'Value':'Value' lvalue ->value 0x556e5d2b7750
|   `-ImplicitCastExpr 0x556e5d3479a8 <col:24> 'TValue *' <LValueToRValue>
|     `-DeclRefExpr 0x556e5d347980 <col:24> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
`-ImplicitCastExpr 0x556e5d347ac8 <col:37, col:39> 'void *' <LValueToRValue>
  `-ParenExpr 0x556e5d347aa8 <col:37, col:39> 'void *' lvalue
    `-MemberExpr 0x556e5d347a70 <lapi.c:844:21, col:24> 'void *' lvalue ->ud 0x556e5d346a40
      `-ImplicitCastExpr 0x556e5d347a58 <col:21> 'struct CCallS *' <LValueToRValue>
        `-DeclRefExpr 0x556e5d347a30 <col:21> 'struct CCallS *' lvalue Var 0x556e5d346d00 'c' 'struct CCallS *'
[B1.67] = [B1.63]
  69: IntegerLiteral 0x556e5d347b80 <./lua.h:76:28> 'int' 2
2
  70: DeclRefExpr 0x556e5d347b08 <./lobject.h:123:42> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
i_o
  71: ImplicitCastExpr 0x556e5d347b30 <./lobject.h:123:42> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347b08 <col:42> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
[B1.70] (ImplicitCastExpr, LValueToRValue, TValue *)
  72: MemberExpr 0x556e5d347b48 <./lobject.h:123:42, col:47> 'int' lvalue ->tt 0x556e5d2b77b0
`-ImplicitCastExpr 0x556e5d347b30 <col:42> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347b08 <col:42> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
[B1.71]->tt
  73: BinaryOperator 0x556e5d347ba0 <./lobject.h:123:42, ./lua.h:76:28> 'int' '='
|-MemberExpr 0x556e5d347b48 <./lobject.h:123:42, col:47> 'int' lvalue ->tt 0x556e5d2b77b0
| `-ImplicitCastExpr 0x556e5d347b30 <col:42> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x556e5d347b08 <col:42> 'TValue *' lvalue Var 0x556e5d347858 'i_o' 'TValue *'
`-IntegerLiteral 0x556e5d347b80 <./lua.h:76:28> 'int' 2
[B1.72] = [B1.69]
  74: DeclRefExpr 0x556e5d347c00 <lapi.c:845:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  75: ImplicitCastExpr 0x556e5d347c38 <lapi.c:845:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347c00 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.74] (ImplicitCastExpr, LValueToRValue, lua_State *)
  76: CStyleCastExpr 0x556e5d347c50 <./luaconf.h:381:30, lapi.c:845:16> 'void' <ToVoid>
`-ImplicitCastExpr 0x556e5d347c38 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347c00 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
(void)[B1.75] (CStyleCastExpr, ToVoid, void)
  77: DeclRefExpr 0x556e5d347ca0 <lapi.c:845:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  78: ImplicitCastExpr 0x556e5d347cc8 <lapi.c:845:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347ca0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.77] (ImplicitCastExpr, LValueToRValue, lua_State *)
  79: MemberExpr 0x556e5d347ce0 <lapi.c:845:16, line:45:66> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d347cc8 <line:845:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347ca0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.78]->top
  80: UnaryOperator 0x556e5d347d18 <lapi.c:845:16, line:45:69> 'StkId':'TValue *' postfix '++'
`-MemberExpr 0x556e5d347ce0 <line:845:16, line:45:66> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
  `-ImplicitCastExpr 0x556e5d347cc8 <line:845:16> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d347ca0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.79]++
  81: DeclRefExpr 0x556e5d347d70 <lapi.c:846:3> 'void (lua_State *, StkId, int)' Function 0x556e5d2e9ff0 'luaD_call' 'void (lua_State *, StkId, int)'
luaD_call
  82: ImplicitCastExpr 0x556e5d347eb8 <lapi.c:846:3> 'void (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x556e5d347d70 <col:3> 'void (lua_State *, StkId, int)' Function 0x556e5d2e9ff0 'luaD_call' 'void (lua_State *, StkId, int)'
[B1.81] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, StkId, int))
  83: DeclRefExpr 0x556e5d347d98 <lapi.c:846:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  84: ImplicitCastExpr 0x556e5d347f10 <lapi.c:846:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347d98 <col:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.83] (ImplicitCastExpr, LValueToRValue, lua_State *)
  85: DeclRefExpr 0x556e5d347dc0 <lapi.c:846:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
L
  86: ImplicitCastExpr 0x556e5d347de8 <lapi.c:846:16> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x556e5d347dc0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.85] (ImplicitCastExpr, LValueToRValue, lua_State *)
  87: MemberExpr 0x556e5d347e00 <lapi.c:846:16, col:19> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
`-ImplicitCastExpr 0x556e5d347de8 <col:16> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x556e5d347dc0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.86]->top
  88: ImplicitCastExpr 0x556e5d347e58 <lapi.c:846:16, col:19> 'StkId':'TValue *' <LValueToRValue>
`-MemberExpr 0x556e5d347e00 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
  `-ImplicitCastExpr 0x556e5d347de8 <col:16> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x556e5d347dc0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
[B1.87] (ImplicitCastExpr, LValueToRValue, StkId)
  89: IntegerLiteral 0x556e5d347e38 <lapi.c:846:25> 'int' 2
2
  90: BinaryOperator 0x556e5d347e70 <lapi.c:846:16, col:25> 'StkId':'TValue *' '-'
|-ImplicitCastExpr 0x556e5d347e58 <col:16, col:19> 'StkId':'TValue *' <LValueToRValue>
| `-MemberExpr 0x556e5d347e00 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
|   `-ImplicitCastExpr 0x556e5d347de8 <col:16> 'lua_State *' <LValueToRValue>
|     `-DeclRefExpr 0x556e5d347dc0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
`-IntegerLiteral 0x556e5d347e38 <col:25> 'int' 2
[B1.88] - [B1.89]
  91: IntegerLiteral 0x556e5d347e98 <lapi.c:846:28> 'int' 0
0
  92: CallExpr 0x556e5d347ed0 <lapi.c:846:3, col:29> 'void'
|-ImplicitCastExpr 0x556e5d347eb8 <col:3> 'void (*)(lua_State *, StkId, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x556e5d347d70 <col:3> 'void (lua_State *, StkId, int)' Function 0x556e5d2e9ff0 'luaD_call' 'void (lua_State *, StkId, int)'
|-ImplicitCastExpr 0x556e5d347f10 <col:13> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x556e5d347d98 <col:13> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
|-BinaryOperator 0x556e5d347e70 <col:16, col:25> 'StkId':'TValue *' '-'
| |-ImplicitCastExpr 0x556e5d347e58 <col:16, col:19> 'StkId':'TValue *' <LValueToRValue>
| | `-MemberExpr 0x556e5d347e00 <col:16, col:19> 'StkId':'TValue *' lvalue ->top 0x556e5d2dc958
| |   `-ImplicitCastExpr 0x556e5d347de8 <col:16> 'lua_State *' <LValueToRValue>
| |     `-DeclRefExpr 0x556e5d347dc0 <col:16> 'lua_State *' lvalue ParmVar 0x556e5d346a98 'L' 'lua_State *'
| `-IntegerLiteral 0x556e5d347e38 <col:25> 'int' 2
`-IntegerLiteral 0x556e5d347e98 <col:28> 'int' 0
[B1.82]([B1.84], [B1.90], [B1.91])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
