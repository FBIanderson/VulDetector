extern int lua_getstack(lua_State *L, int level, lua_Debug *ar)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: IntegerLiteral 0x555e9723e918 <./llimits.h:111:33> 'int' 0
0
   2: CStyleCastExpr 0x555e9723e948 <./llimits.h:111:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x555e9723e918 <col:33> 'int' 0
(void)[B1.1] (CStyleCastExpr, ToVoid, void)
   3: DeclRefExpr 0x555e9723e990 <ldebug.c:103:10> 'int' lvalue Var 0x555e9723d888 'status' 'int'
status
   4: ImplicitCastExpr 0x555e9723e9b8 <ldebug.c:103:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9723e990 <col:10> 'int' lvalue Var 0x555e9723d888 'status' 'int'
[B1.3] (ImplicitCastExpr, LValueToRValue, int)
   5: ReturnStmt 0x555e9723e9d0 <ldebug.c:103:3, col:10>
`-ImplicitCastExpr 0x555e9723e9b8 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x555e9723e990 <col:10> 'int' lvalue Var 0x555e9723d888 'status' 'int'
return [B1.4];
   Preds (3): B2 B3 B5
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x555e9723e860 <ldebug.c:101:17> 'int' 0
0
   2: DeclRefExpr 0x555e9723e838 <ldebug.c:101:8> 'int' lvalue Var 0x555e9723d888 'status' 'int'
status
   3: BinaryOperator 0x555e9723e880 <ldebug.c:101:8, col:17> 'int' '='
|-DeclRefExpr 0x555e9723e838 <col:8> 'int' lvalue Var 0x555e9723d888 'status' 'int'
`-IntegerLiteral 0x555e9723e860 <col:17> 'int' 0
[B2.2] = [B2.1]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x555e9723e710 <ldebug.c:98:14> 'int' 1
1
   2: DeclRefExpr 0x555e9723e6e8 <ldebug.c:98:5> 'int' lvalue Var 0x555e9723d888 'status' 'int'
status
   3: BinaryOperator 0x555e9723e730 <ldebug.c:98:5, col:14> 'int' '='
|-DeclRefExpr 0x555e9723e6e8 <col:5> 'int' lvalue Var 0x555e9723d888 'status' 'int'
`-IntegerLiteral 0x555e9723e710 <col:14> 'int' 1
[B3.2] = [B3.1]
   4: IntegerLiteral 0x555e9723e7d0 <ldebug.c:99:16> 'int' 0
0
   5: DeclRefExpr 0x555e9723e758 <ldebug.c:99:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
ar
   6: ImplicitCastExpr 0x555e9723e780 <ldebug.c:99:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e9723e758 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
[B3.5] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
   7: MemberExpr 0x555e9723e798 <ldebug.c:99:5, col:9> 'int' lvalue ->i_ci 0x555e971c4948
`-ImplicitCastExpr 0x555e9723e780 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723e758 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
[B3.6]->i_ci
   8: BinaryOperator 0x555e9723e7f0 <ldebug.c:99:5, col:16> 'int' '='
|-MemberExpr 0x555e9723e798 <col:5, col:9> 'int' lvalue ->i_ci 0x555e971c4948
| `-ImplicitCastExpr 0x555e9723e780 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e9723e758 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
`-IntegerLiteral 0x555e9723e7d0 <col:16> 'int' 0
[B3.7] = [B3.4]
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x555e9723e660 <ldebug.c:97:12> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
level
   2: ImplicitCastExpr 0x555e9723e6a8 <ldebug.c:97:12> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9723e660 <col:12> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x555e9723e688 <ldebug.c:97:20> 'int' 0
0
   4: BinaryOperator 0x555e9723e6c0 <ldebug.c:97:12, col:20> 'int' '<'
|-ImplicitCastExpr 0x555e9723e6a8 <col:12> 'int' <LValueToRValue>
| `-DeclRefExpr 0x555e9723e660 <col:12> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
`-IntegerLiteral 0x555e9723e688 <col:20> 'int' 0
[B4.2] < [B4.3]
   T: if [B4.4]
   Preds (2): B6 B7
   Succs (2): B3 B2

 [B5]
   1: IntegerLiteral 0x555e9723e320 <ldebug.c:94:14> 'int' 1
1
   2: DeclRefExpr 0x555e9723e2f8 <ldebug.c:94:5> 'int' lvalue Var 0x555e9723d888 'status' 'int'
status
   3: BinaryOperator 0x555e9723e340 <ldebug.c:94:5, col:14> 'int' '='
|-DeclRefExpr 0x555e9723e2f8 <col:5> 'int' lvalue Var 0x555e9723d888 'status' 'int'
`-IntegerLiteral 0x555e9723e320 <col:14> 'int' 1
[B5.2] = [B5.1]
   4: DeclRefExpr 0x555e9723e3e0 <ldebug.c:95:25> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
ci
   5: ImplicitCastExpr 0x555e9723e480 <ldebug.c:95:25> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e9723e3e0 <col:25> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B5.4] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   6: DeclRefExpr 0x555e9723e408 <ldebug.c:95:30> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
L
   7: ImplicitCastExpr 0x555e9723e430 <ldebug.c:95:30> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723e408 <col:30> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B5.6] (ImplicitCastExpr, LValueToRValue, lua_State *)
   8: MemberExpr 0x555e9723e448 <ldebug.c:95:30, col:33> 'CallInfo *' lvalue ->base_ci 0x555e97213720
`-ImplicitCastExpr 0x555e9723e430 <col:30> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723e408 <col:30> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B5.7]->base_ci
   9: ImplicitCastExpr 0x555e9723e498 <ldebug.c:95:30, col:33> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e9723e448 <col:30, col:33> 'CallInfo *' lvalue ->base_ci 0x555e97213720
  `-ImplicitCastExpr 0x555e9723e430 <col:30> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9723e408 <col:30> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B5.8] (ImplicitCastExpr, LValueToRValue, CallInfo *)
  10: BinaryOperator 0x555e9723e520 <ldebug.c:95:25, col:33> 'long' '-'
|-ImplicitCastExpr 0x555e9723e480 <col:25> 'CallInfo *' <LValueToRValue>
| `-DeclRefExpr 0x555e9723e3e0 <col:25> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e9723e498 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x555e9723e448 <col:30, col:33> 'CallInfo *' lvalue ->base_ci 0x555e97213720
    `-ImplicitCastExpr 0x555e9723e430 <col:30> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9723e408 <col:30> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B5.5] - [B5.9]
  11: CStyleCastExpr 0x555e9723e5d0 <./llimits.h:75:23, col:30> 'int' <IntegralCast>
`-ParenExpr 0x555e9723e5b0 <col:26, col:30> 'long'
  `-ParenExpr 0x555e9723e548 <line:80:31, col:33> 'long'
    `-BinaryOperator 0x555e9723e520 <ldebug.c:95:25, col:33> 'long' '-'
      |-ImplicitCastExpr 0x555e9723e480 <col:25> 'CallInfo *' <LValueToRValue>
      | `-DeclRefExpr 0x555e9723e3e0 <col:25> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
      `-ImplicitCastExpr 0x555e9723e498 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-MemberExpr 0x555e9723e448 <col:30, col:33> 'CallInfo *' lvalue ->base_ci 0x555e97213720
          `-ImplicitCastExpr 0x555e9723e430 <col:30> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x555e9723e408 <col:30> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
(int)(([B5.10])) (CStyleCastExpr, IntegralCast, int)
  12: DeclRefExpr 0x555e9723e368 <ldebug.c:95:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
ar
  13: ImplicitCastExpr 0x555e9723e390 <ldebug.c:95:5> 'lua_Debug *' <LValueToRValue>
`-DeclRefExpr 0x555e9723e368 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
[B5.12] (ImplicitCastExpr, LValueToRValue, lua_Debug *)
  14: MemberExpr 0x555e9723e3a8 <ldebug.c:95:5, col:9> 'int' lvalue ->i_ci 0x555e971c4948
`-ImplicitCastExpr 0x555e9723e390 <col:5> 'lua_Debug *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723e368 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
[B5.13]->i_ci
  15: BinaryOperator 0x555e9723e618 <ldebug.c:95:5, ./llimits.h:75:31> 'int' '='
|-MemberExpr 0x555e9723e3a8 <ldebug.c:95:5, col:9> 'int' lvalue ->i_ci 0x555e971c4948
| `-ImplicitCastExpr 0x555e9723e390 <col:5> 'lua_Debug *' <LValueToRValue>
|   `-DeclRefExpr 0x555e9723e368 <col:5> 'lua_Debug *' lvalue ParmVar 0x555e9723d718 'ar' 'lua_Debug *'
`-ParenExpr 0x555e9723e5f8 <./llimits.h:75:22, col:31> 'int'
  `-CStyleCastExpr 0x555e9723e5d0 <col:23, col:30> 'int' <IntegralCast>
    `-ParenExpr 0x555e9723e5b0 <col:26, col:30> 'long'
      `-ParenExpr 0x555e9723e548 <line:80:31, col:33> 'long'
        `-BinaryOperator 0x555e9723e520 <ldebug.c:95:25, col:33> 'long' '-'
          |-ImplicitCastExpr 0x555e9723e480 <col:25> 'CallInfo *' <LValueToRValue>
          | `-DeclRefExpr 0x555e9723e3e0 <col:25> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
          `-ImplicitCastExpr 0x555e9723e498 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-MemberExpr 0x555e9723e448 <col:30, col:33> 'CallInfo *' lvalue ->base_ci 0x555e97213720
              `-ImplicitCastExpr 0x555e9723e430 <col:30> 'lua_State *' <LValueToRValue>
                `-DeclRefExpr 0x555e9723e408 <col:30> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B5.14] = ([B5.11])
   Preds (1): B6
   Succs (1): B1

 [B6]
   1: DeclRefExpr 0x555e9723e1d8 <ldebug.c:93:21> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e9723e278 <ldebug.c:93:21> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e9723e1d8 <col:21> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B6.1] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: DeclRefExpr 0x555e9723e200 <ldebug.c:93:26> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9723e228 <ldebug.c:93:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723e200 <col:26> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x555e9723e240 <ldebug.c:93:26, col:29> 'CallInfo *' lvalue ->base_ci 0x555e97213720
`-ImplicitCastExpr 0x555e9723e228 <col:26> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723e200 <col:26> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B6.4]->base_ci
   6: ImplicitCastExpr 0x555e9723e290 <ldebug.c:93:26, col:29> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e9723e240 <col:26, col:29> 'CallInfo *' lvalue ->base_ci 0x555e97213720
  `-ImplicitCastExpr 0x555e9723e228 <col:26> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9723e200 <col:26> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B6.5] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   7: BinaryOperator 0x555e9723e2a8 <ldebug.c:93:21, col:29> 'int' '>'
|-ImplicitCastExpr 0x555e9723e278 <col:21> 'CallInfo *' <LValueToRValue>
| `-DeclRefExpr 0x555e9723e1d8 <col:21> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e9723e290 <col:26, col:29> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x555e9723e240 <col:26, col:29> 'CallInfo *' lvalue ->base_ci 0x555e97213720
    `-ImplicitCastExpr 0x555e9723e228 <col:26> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9723e200 <col:26> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B6.2] > [B6.6]
   T: if [B7.4] && [B6.7]
   Preds (1): B7
   Succs (2): B5 B4

 [B7]
   1: DeclRefExpr 0x555e9723e150 <ldebug.c:93:7> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
level
   2: ImplicitCastExpr 0x555e9723e198 <ldebug.c:93:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9723e150 <col:7> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x555e9723e178 <ldebug.c:93:16> 'int' 0
0
   4: BinaryOperator 0x555e9723e1b0 <ldebug.c:93:7, col:16> 'int' '=='
|-ImplicitCastExpr 0x555e9723e198 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x555e9723e150 <col:7> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
`-IntegerLiteral 0x555e9723e178 <col:16> 'int' 0
[B7.2] == [B7.3]
   T: [B7.4] && ...
   Preds (2): B11 B12
   Succs (2): B6 B4

 [B8]
   1: DeclRefExpr 0x555e9723dc88 <ldebug.c:88:50> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
ci
   2: UnaryOperator 0x555e9723dcb0 <ldebug.c:88:50, col:52> 'CallInfo *' postfix '--'
`-DeclRefExpr 0x555e9723dc88 <col:50> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B8.1]--
   Preds (2): B9 B10
   Succs (1): B12

 [B9]
   1: DeclRefExpr 0x555e9723dfd0 <ldebug.c:91:7> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
level
   2: DeclRefExpr 0x555e9723dff8 <ldebug.c:91:16> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
ci
   3: ImplicitCastExpr 0x555e9723e020 <ldebug.c:91:16> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e9723dff8 <col:16> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B9.2] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   4: MemberExpr 0x555e9723e038 <ldebug.c:91:16, col:20> 'int' lvalue ->tailcalls 0x555e9720fb48
`-ImplicitCastExpr 0x555e9723e020 <col:16> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723dff8 <col:16> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B9.3]->tailcalls
   5: ImplicitCastExpr 0x555e9723e070 <ldebug.c:91:16, col:20> 'int' <LValueToRValue>
`-MemberExpr 0x555e9723e038 <col:16, col:20> 'int' lvalue ->tailcalls 0x555e9720fb48
  `-ImplicitCastExpr 0x555e9723e020 <col:16> 'CallInfo *' <LValueToRValue>
    `-DeclRefExpr 0x555e9723dff8 <col:16> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B9.4] (ImplicitCastExpr, LValueToRValue, int)
   6: CompoundAssignOperator 0x555e9723e088 <ldebug.c:91:7, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x555e9723dfd0 <col:7> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
`-ImplicitCastExpr 0x555e9723e070 <col:16, col:20> 'int' <LValueToRValue>
  `-MemberExpr 0x555e9723e038 <col:16, col:20> 'int' lvalue ->tailcalls 0x555e9720fb48
    `-ImplicitCastExpr 0x555e9723e020 <col:16> 'CallInfo *' <LValueToRValue>
      `-DeclRefExpr 0x555e9723dff8 <col:16> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B9.1] -= [B9.5]
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x555e9723dcd0 <ldebug.c:89:5> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
level
   2: UnaryOperator 0x555e9723dcf8 <ldebug.c:89:5, col:10> 'int' postfix '--'
`-DeclRefExpr 0x555e9723dcd0 <col:5> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
[B10.1]--
   3: DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
ci
   4: ImplicitCastExpr 0x555e9723dd60 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
([B10.3]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   5: MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B10.4]->func
   6: ImplicitCastExpr 0x555e9723ddd0 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
([B10.5]) (ImplicitCastExpr, LValueToRValue, StkId)
   7: MemberExpr 0x555e9723dde8 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B10.6]->value
   8: MemberExpr 0x555e9723de20 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B10.7].gc
   9: ImplicitCastExpr 0x555e9723de58 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e9723de20 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B10.8] (ImplicitCastExpr, LValueToRValue, GCObject *)
  10: MemberExpr 0x555e9723de70 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e9723de58 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e9723de20 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B10.9]->cl
  11: UnaryOperator 0x555e9723dea8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e9723de70 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e9723de58 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e9723de20 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
&[B10.10]
  12: MemberExpr 0x555e9723df08 <./lstate.h:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
`-ParenExpr 0x555e9723dee8 <line:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e9723dec8 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e9723dea8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e9723de70 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e9723de58 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e9723de20 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
(([B10.11]))->c
  13: MemberExpr 0x555e9723df40 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
`-MemberExpr 0x555e9723df08 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
  `-ParenExpr 0x555e9723dee8 <line:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e9723dec8 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e9723dea8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e9723de70 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e9723de58 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e9723de20 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B10.12].isC
  14: ImplicitCastExpr 0x555e9723df78 <./lstate.h:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x555e9723df40 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
  `-MemberExpr 0x555e9723df08 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
    `-ParenExpr 0x555e9723dee8 <line:60:21, col:41> 'union Closure *'
      `-ParenExpr 0x555e9723dec8 <./llimits.h:63:25, col:27> 'union Closure *'
        `-UnaryOperator 0x555e9723dea8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
          `-MemberExpr 0x555e9723de70 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
            `-ImplicitCastExpr 0x555e9723de58 <col:48, col:59> 'GCObject *' <LValueToRValue>
              `-MemberExpr 0x555e9723de20 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                `-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                  `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                        `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                          `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
                            `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B10.13] (ImplicitCastExpr, LValueToRValue, lu_byte)
  15: UnaryOperator 0x555e9723df90 <./lstate.h:61:22, col:38> 'int' prefix '!'
`-ImplicitCastExpr 0x555e9723df78 <line:60:21, line:61:38> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x555e9723df40 <line:60:21, line:61:38> 'lu_byte':'unsigned char' lvalue .isC 0x555e971db038
    `-MemberExpr 0x555e9723df08 <line:60:21, line:61:36> 'CClosure':'struct CClosure' lvalue ->c 0x555e971dba50
      `-ParenExpr 0x555e9723dee8 <line:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x555e9723dec8 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x555e9723dea8 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x555e9723de70 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
              `-ImplicitCastExpr 0x555e9723de58 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x555e9723de20 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                  `-MemberExpr 0x555e9723dde8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                    `-ImplicitCastExpr 0x555e9723ddd0 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x555e9723ddb0 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x555e9723dd78 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                          `-ImplicitCastExpr 0x555e9723dd60 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x555e9723dd40 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x555e9723dd18 <ldebug.c:90:17> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
![B10.14]
   T: if ([B10.15])
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x555e9723db68 <ldebug.c:88:33> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e9723dc08 <ldebug.c:88:33> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e9723db68 <col:33> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
[B11.1] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: DeclRefExpr 0x555e9723db90 <ldebug.c:88:38> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e9723dbb8 <ldebug.c:88:38> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723db90 <col:38> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B11.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: MemberExpr 0x555e9723dbd0 <ldebug.c:88:38, col:41> 'CallInfo *' lvalue ->base_ci 0x555e97213720
`-ImplicitCastExpr 0x555e9723dbb8 <col:38> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723db90 <col:38> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B11.4]->base_ci
   6: ImplicitCastExpr 0x555e9723dc20 <ldebug.c:88:38, col:41> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e9723dbd0 <col:38, col:41> 'CallInfo *' lvalue ->base_ci 0x555e97213720
  `-ImplicitCastExpr 0x555e9723dbb8 <col:38> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9723db90 <col:38> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B11.5] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   7: BinaryOperator 0x555e9723dc38 <ldebug.c:88:33, col:41> 'int' '>'
|-ImplicitCastExpr 0x555e9723dc08 <col:33> 'CallInfo *' <LValueToRValue>
| `-DeclRefExpr 0x555e9723db68 <col:33> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e9723dc20 <col:38, col:41> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x555e9723dbd0 <col:38, col:41> 'CallInfo *' lvalue ->base_ci 0x555e97213720
    `-ImplicitCastExpr 0x555e9723dbb8 <col:38> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9723db90 <col:38> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B11.2] > [B11.6]
   T: for (...; [B12.4] && [B11.7]; ...)
   Preds (1): B12
   Succs (2): B10 B7

 [B12]
   1: DeclRefExpr 0x555e9723dae0 <ldebug.c:88:20> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
level
   2: ImplicitCastExpr 0x555e9723db28 <ldebug.c:88:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9723dae0 <col:20> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
[B12.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x555e9723db08 <ldebug.c:88:28> 'int' 0
0
   4: BinaryOperator 0x555e9723db40 <ldebug.c:88:20, col:28> 'int' '>'
|-ImplicitCastExpr 0x555e9723db28 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x555e9723dae0 <col:20> 'int' lvalue ParmVar 0x555e9723d6a8 'level' 'int'
`-IntegerLiteral 0x555e9723db08 <col:28> 'int' 0
[B12.2] > [B12.3]
   T: [B12.4] && ...
   Preds (2): B8 B13
   Succs (2): B11 B7

 [B13]
   1: DeclStmt 0x555e9723d8e8 <ldebug.c:85:3, col:13>col:7
`-VarDecl 0x555e9723d888 <col:3, col:7> col:7 used status 'int'
int status;
   2: DeclStmt 0x555e9723d970 <ldebug.c:86:3, col:15>col:13
`-VarDecl 0x555e9723d910 <col:3, col:13> col:13 used ci 'CallInfo *'
CallInfo *ci;
   3: IntegerLiteral 0x555e9723d988 <./llimits.h:110:33> 'int' 0
0
   4: CStyleCastExpr 0x555e9723d9b8 <./llimits.h:110:26, col:33> 'void' <ToVoid>
`-IntegerLiteral 0x555e9723d988 <col:33> 'int' 0
(void)[B13.3] (CStyleCastExpr, ToVoid, void)
   5: DeclRefExpr 0x555e9723da28 <ldebug.c:88:13> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
L
   6: ImplicitCastExpr 0x555e9723da50 <ldebug.c:88:13> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e9723da28 <col:13> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B13.5] (ImplicitCastExpr, LValueToRValue, lua_State *)
   7: MemberExpr 0x555e9723da68 <ldebug.c:88:13, col:16> 'CallInfo *' lvalue ->ci 0x555e97213568
`-ImplicitCastExpr 0x555e9723da50 <col:13> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x555e9723da28 <col:13> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B13.6]->ci
   8: ImplicitCastExpr 0x555e9723daa0 <ldebug.c:88:13, col:16> 'CallInfo *' <LValueToRValue>
`-MemberExpr 0x555e9723da68 <col:13, col:16> 'CallInfo *' lvalue ->ci 0x555e97213568
  `-ImplicitCastExpr 0x555e9723da50 <col:13> 'lua_State *' <LValueToRValue>
    `-DeclRefExpr 0x555e9723da28 <col:13> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B13.7] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   9: DeclRefExpr 0x555e9723da00 <ldebug.c:88:8> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
ci
  10: BinaryOperator 0x555e9723dab8 <ldebug.c:88:8, col:16> 'CallInfo *' '='
|-DeclRefExpr 0x555e9723da00 <col:8> 'CallInfo *' lvalue Var 0x555e9723d910 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e9723daa0 <col:13, col:16> 'CallInfo *' <LValueToRValue>
  `-MemberExpr 0x555e9723da68 <col:13, col:16> 'CallInfo *' lvalue ->ci 0x555e97213568
    `-ImplicitCastExpr 0x555e9723da50 <col:13> 'lua_State *' <LValueToRValue>
      `-DeclRefExpr 0x555e9723da28 <col:13> 'lua_State *' lvalue ParmVar 0x555e9723d630 'L' 'lua_State *'
[B13.9] = [B13.8]
   Preds (1): B14
   Succs (1): B12

 [B0 (EXIT)]
   Preds (1): B1
