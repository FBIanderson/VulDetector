static int json_append_unicode_escape(json_parse_t *json)
 [B17 (ENTRY)]
   Succs (1): B16

 [B1]
   1: DeclRefExpr 0x563107e1c830 <lua_cjson.c:871:5> 'void (strbuf_t *, const char *, int)' Function 0x563107dec108 'strbuf_append_mem_unsafe' 'void (strbuf_t *, const char *, int)'
strbuf_append_mem_unsafe
   2: ImplicitCastExpr 0x563107e1c920 <lua_cjson.c:871:5> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e1c830 <col:5> 'void (strbuf_t *, const char *, int)' Function 0x563107dec108 'strbuf_append_mem_unsafe' 'void (strbuf_t *, const char *, int)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char *, int))
   3: DeclRefExpr 0x563107e1c858 <lua_cjson.c:871:30> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
json
   4: ImplicitCastExpr 0x563107e1c880 <lua_cjson.c:871:30> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1c858 <col:30> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B1.3] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   5: MemberExpr 0x563107e1c898 <lua_cjson.c:871:30, col:36> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
`-ImplicitCastExpr 0x563107e1c880 <col:30> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1c858 <col:30> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B1.4]->tmp
   6: ImplicitCastExpr 0x563107e1c978 <lua_cjson.c:871:30, col:36> 'strbuf_t *' <LValueToRValue>
`-MemberExpr 0x563107e1c898 <col:30, col:36> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
  `-ImplicitCastExpr 0x563107e1c880 <col:30> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1c858 <col:30> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B1.5] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   7: DeclRefExpr 0x563107e1c8d0 <lua_cjson.c:871:41> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
utf8
   8: ImplicitCastExpr 0x563107e1c990 <lua_cjson.c:871:41> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x563107e1c8d0 <col:41> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
[B1.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x563107e1c9a8 <lua_cjson.c:871:41> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e1c990 <col:41> 'char *' <ArrayToPointerDecay>
  `-DeclRefExpr 0x563107e1c8d0 <col:41> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
[B1.8] (ImplicitCastExpr, BitCast, const char *)
  10: DeclRefExpr 0x563107e1c8f8 <lua_cjson.c:871:47> 'int' lvalue Var 0x563107e1b280 'len' 'int'
len
  11: ImplicitCastExpr 0x563107e1c9c0 <lua_cjson.c:871:47> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1c8f8 <col:47> 'int' lvalue Var 0x563107e1b280 'len' 'int'
[B1.10] (ImplicitCastExpr, LValueToRValue, int)
  12: CallExpr 0x563107e1c938 <lua_cjson.c:871:5, col:50> 'void'
|-ImplicitCastExpr 0x563107e1c920 <col:5> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e1c830 <col:5> 'void (strbuf_t *, const char *, int)' Function 0x563107dec108 'strbuf_append_mem_unsafe' 'void (strbuf_t *, const char *, int)'
|-ImplicitCastExpr 0x563107e1c978 <col:30, col:36> 'strbuf_t *' <LValueToRValue>
| `-MemberExpr 0x563107e1c898 <col:30, col:36> 'strbuf_t *' lvalue ->tmp 0x563107df15d0
|   `-ImplicitCastExpr 0x563107e1c880 <col:30> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1c858 <col:30> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
|-ImplicitCastExpr 0x563107e1c9a8 <col:41> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e1c990 <col:41> 'char *' <ArrayToPointerDecay>
|   `-DeclRefExpr 0x563107e1c8d0 <col:41> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
`-ImplicitCastExpr 0x563107e1c9c0 <col:47> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1c8f8 <col:47> 'int' lvalue Var 0x563107e1b280 'len' 'int'
[B1.2]([B1.6], [B1.9], [B1.11])
  13: DeclRefExpr 0x563107e1c9d8 <lua_cjson.c:872:5> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
json
  14: ImplicitCastExpr 0x563107e1ca00 <lua_cjson.c:872:5> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1c9d8 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B1.13] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  15: MemberExpr 0x563107e1ca18 <lua_cjson.c:872:5, col:11> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e1ca00 <col:5> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1c9d8 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B1.14]->ptr
  16: DeclRefExpr 0x563107e1ca50 <lua_cjson.c:872:18> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
escape_len
  17: ImplicitCastExpr 0x563107e1ca78 <lua_cjson.c:872:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1ca50 <col:18> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B1.16] (ImplicitCastExpr, LValueToRValue, int)
  18: CompoundAssignOperator 0x563107e1ca90 <lua_cjson.c:872:5, col:18> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|-MemberExpr 0x563107e1ca18 <col:5, col:11> 'const char *' lvalue ->ptr 0x563107df1578
| `-ImplicitCastExpr 0x563107e1ca00 <col:5> 'json_parse_t *' <LValueToRValue>
|   `-DeclRefExpr 0x563107e1c9d8 <col:5> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e1ca78 <col:18> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1ca50 <col:18> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B1.15] += [B1.17]
  19: IntegerLiteral 0x563107e1cac8 <lua_cjson.c:874:12> 'int' 0
0
  20: ReturnStmt 0x563107e1cae8 <lua_cjson.c:874:5, col:12>
`-IntegerLiteral 0x563107e1cac8 <col:12> 'int' 0
return [B1.19];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: IntegerLiteral 0x563107e1c7a0 <lua_cjson.c:868:17> 'int' 1
1
   2: UnaryOperator 0x563107e1c7c0 <lua_cjson.c:868:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x563107e1c7a0 <col:17> 'int' 1
-[B2.1]
   3: ReturnStmt 0x563107e1c7e0 <lua_cjson.c:868:9, col:17>
`-UnaryOperator 0x563107e1c7c0 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x563107e1c7a0 <col:17> 'int' 1
return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x563107e1c5f8 <lua_cjson.c:866:11> 'int (char *, int)' Function 0x563107e19738 'codepoint_to_utf8' 'int (char *, int)'
codepoint_to_utf8
   2: ImplicitCastExpr 0x563107e1c698 <lua_cjson.c:866:11> 'int (*)(char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e1c5f8 <col:11> 'int (char *, int)' Function 0x563107e19738 'codepoint_to_utf8' 'int (char *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(char *, int))
   3: DeclRefExpr 0x563107e1c620 <lua_cjson.c:866:29> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
utf8
   4: ImplicitCastExpr 0x563107e1c6e8 <lua_cjson.c:866:29> 'char *' <ArrayToPointerDecay>
`-DeclRefExpr 0x563107e1c620 <col:29> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
[B3.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: DeclRefExpr 0x563107e1c648 <lua_cjson.c:866:35> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
   6: ImplicitCastExpr 0x563107e1c700 <lua_cjson.c:866:35> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1c648 <col:35> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B3.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x563107e1c6b0 <lua_cjson.c:866:11, col:44> 'int'
|-ImplicitCastExpr 0x563107e1c698 <col:11> 'int (*)(char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e1c5f8 <col:11> 'int (char *, int)' Function 0x563107e19738 'codepoint_to_utf8' 'int (char *, int)'
|-ImplicitCastExpr 0x563107e1c6e8 <col:29> 'char *' <ArrayToPointerDecay>
| `-DeclRefExpr 0x563107e1c620 <col:29> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
`-ImplicitCastExpr 0x563107e1c700 <col:35> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1c648 <col:35> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B3.2]([B3.4], [B3.6])
   8: DeclRefExpr 0x563107e1c5d0 <lua_cjson.c:866:5> 'int' lvalue Var 0x563107e1b280 'len' 'int'
len
   9: BinaryOperator 0x563107e1c718 <lua_cjson.c:866:5, col:44> 'int' '='
|-DeclRefExpr 0x563107e1c5d0 <col:5> 'int' lvalue Var 0x563107e1b280 'len' 'int'
`-CallExpr 0x563107e1c6b0 <col:11, col:44> 'int'
  |-ImplicitCastExpr 0x563107e1c698 <col:11> 'int (*)(char *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e1c5f8 <col:11> 'int (char *, int)' Function 0x563107e19738 'codepoint_to_utf8' 'int (char *, int)'
  |-ImplicitCastExpr 0x563107e1c6e8 <col:29> 'char *' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x563107e1c620 <col:29> 'char [4]' lvalue Var 0x563107e1b0d0 'utf8' 'char [4]'
  `-ImplicitCastExpr 0x563107e1c700 <col:35> 'int' <LValueToRValue>
    `-DeclRefExpr 0x563107e1c648 <col:35> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B3.8] = [B3.7]
  10: DeclRefExpr 0x563107e1c740 <lua_cjson.c:867:10> 'int' lvalue Var 0x563107e1b280 'len' 'int'
len
  11: ImplicitCastExpr 0x563107e1c768 <lua_cjson.c:867:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1c740 <col:10> 'int' lvalue Var 0x563107e1b280 'len' 'int'
[B3.10] (ImplicitCastExpr, LValueToRValue, int)
  12: UnaryOperator 0x563107e1c780 <lua_cjson.c:867:9, col:10> 'int' prefix '!'
`-ImplicitCastExpr 0x563107e1c768 <col:10> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1c740 <col:10> 'int' lvalue Var 0x563107e1b280 'len' 'int'
![B3.11]
   T: if [B3.12]
   Preds (2): B4 B14
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x563107e1c1d8 <lua_cjson.c:859:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e1c220 <lua_cjson.c:859:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1c1d8 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e1c200 <lua_cjson.c:859:34> 'int' 1023
1023
   4: BinaryOperator 0x563107e1c238 <lua_cjson.c:859:22, col:34> 'int' '&'
|-ImplicitCastExpr 0x563107e1c220 <col:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1c1d8 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-IntegerLiteral 0x563107e1c200 <col:34> 'int' 1023
[B4.2] & [B4.3]
   5: IntegerLiteral 0x563107e1c280 <lua_cjson.c:859:44> 'int' 10
10
   6: BinaryOperator 0x563107e1c2a0 <lua_cjson.c:859:21, col:44> 'int' '<<'
|-ParenExpr 0x563107e1c260 <col:21, col:39> 'int'
| `-BinaryOperator 0x563107e1c238 <col:22, col:34> 'int' '&'
|   |-ImplicitCastExpr 0x563107e1c220 <col:22> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1c1d8 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1c200 <col:34> 'int' 1023
`-IntegerLiteral 0x563107e1c280 <col:44> 'int' 10
([B4.4]) << [B4.5]
   7: DeclRefExpr 0x563107e1c1b0 <lua_cjson.c:859:9> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
   8: BinaryOperator 0x563107e1c2c8 <lua_cjson.c:859:9, col:44> 'int' '='
|-DeclRefExpr 0x563107e1c1b0 <col:9> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-BinaryOperator 0x563107e1c2a0 <col:21, col:44> 'int' '<<'
  |-ParenExpr 0x563107e1c260 <col:21, col:39> 'int'
  | `-BinaryOperator 0x563107e1c238 <col:22, col:34> 'int' '&'
  |   |-ImplicitCastExpr 0x563107e1c220 <col:22> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e1c1d8 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
  |   `-IntegerLiteral 0x563107e1c200 <col:34> 'int' 1023
  `-IntegerLiteral 0x563107e1c280 <col:44> 'int' 10
[B4.7] = [B4.6]
   9: DeclRefExpr 0x563107e1c2f0 <lua_cjson.c:860:9> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
surrogate_low
  10: IntegerLiteral 0x563107e1c318 <lua_cjson.c:860:26> 'int' 1023
1023
  11: CompoundAssignOperator 0x563107e1c338 <lua_cjson.c:860:9, col:26> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|-DeclRefExpr 0x563107e1c2f0 <col:9> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
`-IntegerLiteral 0x563107e1c318 <col:26> 'int' 1023
[B4.9] &= [B4.10]
  12: DeclRefExpr 0x563107e1c398 <lua_cjson.c:861:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
  13: ImplicitCastExpr 0x563107e1c3e8 <lua_cjson.c:861:22> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1c398 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B4.12] (ImplicitCastExpr, LValueToRValue, int)
  14: DeclRefExpr 0x563107e1c3c0 <lua_cjson.c:861:34> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
surrogate_low
  15: ImplicitCastExpr 0x563107e1c400 <lua_cjson.c:861:34> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1c3c0 <col:34> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
[B4.14] (ImplicitCastExpr, LValueToRValue, int)
  16: BinaryOperator 0x563107e1c418 <lua_cjson.c:861:22, col:34> 'int' '|'
|-ImplicitCastExpr 0x563107e1c3e8 <col:22> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1c398 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-ImplicitCastExpr 0x563107e1c400 <col:34> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1c3c0 <col:34> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
[B4.13] | [B4.15]
  17: IntegerLiteral 0x563107e1c460 <lua_cjson.c:861:51> 'int' 65536
65536
  18: BinaryOperator 0x563107e1c480 <lua_cjson.c:861:21, col:51> 'int' '+'
|-ParenExpr 0x563107e1c440 <col:21, col:47> 'int'
| `-BinaryOperator 0x563107e1c418 <col:22, col:34> 'int' '|'
|   |-ImplicitCastExpr 0x563107e1c3e8 <col:22> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1c398 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
|   `-ImplicitCastExpr 0x563107e1c400 <col:34> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1c3c0 <col:34> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
`-IntegerLiteral 0x563107e1c460 <col:51> 'int' 65536
([B4.16]) + [B4.17]
  19: DeclRefExpr 0x563107e1c370 <lua_cjson.c:861:9> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
  20: BinaryOperator 0x563107e1c4a8 <lua_cjson.c:861:9, col:51> 'int' '='
|-DeclRefExpr 0x563107e1c370 <col:9> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-BinaryOperator 0x563107e1c480 <col:21, col:51> 'int' '+'
  |-ParenExpr 0x563107e1c440 <col:21, col:47> 'int'
  | `-BinaryOperator 0x563107e1c418 <col:22, col:34> 'int' '|'
  |   |-ImplicitCastExpr 0x563107e1c3e8 <col:22> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e1c398 <col:22> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
  |   `-ImplicitCastExpr 0x563107e1c400 <col:34> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x563107e1c3c0 <col:34> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
  `-IntegerLiteral 0x563107e1c460 <col:51> 'int' 65536
[B4.19] = [B4.18]
  21: IntegerLiteral 0x563107e1c4f8 <lua_cjson.c:862:22> 'int' 12
12
  22: DeclRefExpr 0x563107e1c4d0 <lua_cjson.c:862:9> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
escape_len
  23: BinaryOperator 0x563107e1c518 <lua_cjson.c:862:9, col:22> 'int' '='
|-DeclRefExpr 0x563107e1c4d0 <col:9> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
`-IntegerLiteral 0x563107e1c4f8 <col:22> 'int' 12
[B4.22] = [B4.21]
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: IntegerLiteral 0x563107e1c120 <lua_cjson.c:856:21> 'int' 1
1
   2: UnaryOperator 0x563107e1c140 <lua_cjson.c:856:20, col:21> 'int' prefix '-'
`-IntegerLiteral 0x563107e1c120 <col:21> 'int' 1
-[B5.1]
   3: ReturnStmt 0x563107e1c160 <lua_cjson.c:856:13, col:21>
`-UnaryOperator 0x563107e1c140 <col:20, col:21> 'int' prefix '-'
  `-IntegerLiteral 0x563107e1c120 <col:21> 'int' 1
return [B5.2];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x563107e1c030 <lua_cjson.c:855:14> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
surrogate_low
   2: ImplicitCastExpr 0x563107e1c078 <lua_cjson.c:855:14> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1c030 <col:14> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e1c058 <lua_cjson.c:855:30> 'int' 64512
64512
   4: BinaryOperator 0x563107e1c090 <lua_cjson.c:855:14, col:30> 'int' '&'
|-ImplicitCastExpr 0x563107e1c078 <col:14> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1c030 <col:14> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
`-IntegerLiteral 0x563107e1c058 <col:30> 'int' 64512
[B6.2] & [B6.3]
   5: IntegerLiteral 0x563107e1c0d8 <lua_cjson.c:855:41> 'int' 56320
56320
   6: BinaryOperator 0x563107e1c0f8 <lua_cjson.c:855:13, col:41> 'int' '!='
|-ParenExpr 0x563107e1c0b8 <col:13, col:36> 'int'
| `-BinaryOperator 0x563107e1c090 <col:14, col:30> 'int' '&'
|   |-ImplicitCastExpr 0x563107e1c078 <col:14> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1c030 <col:14> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
|   `-IntegerLiteral 0x563107e1c058 <col:30> 'int' 64512
`-IntegerLiteral 0x563107e1c0d8 <col:41> 'int' 56320
([B6.4]) != [B6.5]
   T: if [B6.6]
   Preds (1): B8
   Succs (2): B5 B4

 [B7]
   1: IntegerLiteral 0x563107e1bfa0 <lua_cjson.c:852:21> 'int' 1
1
   2: UnaryOperator 0x563107e1bfc0 <lua_cjson.c:852:20, col:21> 'int' prefix '-'
`-IntegerLiteral 0x563107e1bfa0 <col:21> 'int' 1
-[B7.1]
   3: ReturnStmt 0x563107e1bfe0 <lua_cjson.c:852:13, col:21>
`-UnaryOperator 0x563107e1bfc0 <col:20, col:21> 'int' prefix '-'
  `-IntegerLiteral 0x563107e1bfa0 <col:21> 'int' 1
return [B7.2];
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: DeclRefExpr 0x563107e1bd40 <lua_cjson.c:850:25> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
decode_hex4
   2: ImplicitCastExpr 0x563107e1bea8 <lua_cjson.c:850:25> 'int (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e1bd40 <col:25> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *))
   3: DeclRefExpr 0x563107e1bd68 <lua_cjson.c:850:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
json
   4: ImplicitCastExpr 0x563107e1bd90 <lua_cjson.c:850:37> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1bd68 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B8.3] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   5: MemberExpr 0x563107e1bda8 <lua_cjson.c:850:37, col:43> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e1bd90 <col:37> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1bd68 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B8.4]->ptr
   6: ImplicitCastExpr 0x563107e1be00 <lua_cjson.c:850:37, col:43> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e1bda8 <col:37, col:43> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e1bd90 <col:37> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1bd68 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B8.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: IntegerLiteral 0x563107e1bde0 <lua_cjson.c:850:49> 'int' 2
2
   8: BinaryOperator 0x563107e1be18 <lua_cjson.c:850:37, col:49> 'const char *' '+'
|-ImplicitCastExpr 0x563107e1be00 <col:37, col:43> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e1bda8 <col:37, col:43> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e1bd90 <col:37> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1bd68 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
`-IntegerLiteral 0x563107e1bde0 <col:49> 'int' 2
[B8.6] + [B8.7]
   9: DeclRefExpr 0x563107e1be40 <lua_cjson.c:850:53> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
escape_len
  10: ImplicitCastExpr 0x563107e1be68 <lua_cjson.c:850:53> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1be40 <col:53> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B8.9] (ImplicitCastExpr, LValueToRValue, int)
  11: BinaryOperator 0x563107e1be80 <lua_cjson.c:850:37, col:53> 'const char *' '+'
|-BinaryOperator 0x563107e1be18 <col:37, col:49> 'const char *' '+'
| |-ImplicitCastExpr 0x563107e1be00 <col:37, col:43> 'const char *' <LValueToRValue>
| | `-MemberExpr 0x563107e1bda8 <col:37, col:43> 'const char *' lvalue ->ptr 0x563107df1578
| |   `-ImplicitCastExpr 0x563107e1bd90 <col:37> 'json_parse_t *' <LValueToRValue>
| |     `-DeclRefExpr 0x563107e1bd68 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
| `-IntegerLiteral 0x563107e1bde0 <col:49> 'int' 2
`-ImplicitCastExpr 0x563107e1be68 <col:53> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1be40 <col:53> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B8.8] + [B8.10]
  12: CallExpr 0x563107e1bec0 <lua_cjson.c:850:25, col:63> 'int'
|-ImplicitCastExpr 0x563107e1bea8 <col:25> 'int (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e1bd40 <col:25> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
`-BinaryOperator 0x563107e1be80 <col:37, col:53> 'const char *' '+'
  |-BinaryOperator 0x563107e1be18 <col:37, col:49> 'const char *' '+'
  | |-ImplicitCastExpr 0x563107e1be00 <col:37, col:43> 'const char *' <LValueToRValue>
  | | `-MemberExpr 0x563107e1bda8 <col:37, col:43> 'const char *' lvalue ->ptr 0x563107df1578
  | |   `-ImplicitCastExpr 0x563107e1bd90 <col:37> 'json_parse_t *' <LValueToRValue>
  | |     `-DeclRefExpr 0x563107e1bd68 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
  | `-IntegerLiteral 0x563107e1bde0 <col:49> 'int' 2
  `-ImplicitCastExpr 0x563107e1be68 <col:53> 'int' <LValueToRValue>
    `-DeclRefExpr 0x563107e1be40 <col:53> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B8.2]([B8.11])
  13: DeclRefExpr 0x563107e1bd18 <lua_cjson.c:850:9> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
surrogate_low
  14: BinaryOperator 0x563107e1bef0 <lua_cjson.c:850:9, col:63> 'int' '='
|-DeclRefExpr 0x563107e1bd18 <col:9> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
`-CallExpr 0x563107e1bec0 <col:25, col:63> 'int'
  |-ImplicitCastExpr 0x563107e1bea8 <col:25> 'int (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e1bd40 <col:25> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
  `-BinaryOperator 0x563107e1be80 <col:37, col:53> 'const char *' '+'
    |-BinaryOperator 0x563107e1be18 <col:37, col:49> 'const char *' '+'
    | |-ImplicitCastExpr 0x563107e1be00 <col:37, col:43> 'const char *' <LValueToRValue>
    | | `-MemberExpr 0x563107e1bda8 <col:37, col:43> 'const char *' lvalue ->ptr 0x563107df1578
    | |   `-ImplicitCastExpr 0x563107e1bd90 <col:37> 'json_parse_t *' <LValueToRValue>
    | |     `-DeclRefExpr 0x563107e1bd68 <col:37> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
    | `-IntegerLiteral 0x563107e1bde0 <col:49> 'int' 2
    `-ImplicitCastExpr 0x563107e1be68 <col:53> 'int' <LValueToRValue>
      `-DeclRefExpr 0x563107e1be40 <col:53> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B8.13] = [B8.12]
  15: DeclRefExpr 0x563107e1bf18 <lua_cjson.c:851:13> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
surrogate_low
  16: ImplicitCastExpr 0x563107e1bf60 <lua_cjson.c:851:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1bf18 <col:13> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
[B8.15] (ImplicitCastExpr, LValueToRValue, int)
  17: IntegerLiteral 0x563107e1bf40 <lua_cjson.c:851:29> 'int' 0
0
  18: BinaryOperator 0x563107e1bf78 <lua_cjson.c:851:13, col:29> 'int' '<'
|-ImplicitCastExpr 0x563107e1bf60 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1bf18 <col:13> 'int' lvalue Var 0x563107e1b1f0 'surrogate_low' 'int'
`-IntegerLiteral 0x563107e1bf40 <col:29> 'int' 0
[B8.16] < [B8.17]
   T: if [B8.18]
   Preds (1): B10
   Succs (2): B7 B6

 [B9]
   1: IntegerLiteral 0x563107e1bc70 <lua_cjson.c:846:21> 'int' 1
1
   2: UnaryOperator 0x563107e1bc90 <lua_cjson.c:846:20, col:21> 'int' prefix '-'
`-IntegerLiteral 0x563107e1bc70 <col:21> 'int' 1
-[B9.1]
   3: ReturnStmt 0x563107e1bcb0 <lua_cjson.c:846:13, col:21>
`-UnaryOperator 0x563107e1bc90 <col:20, col:21> 'int' prefix '-'
  `-IntegerLiteral 0x563107e1bc70 <col:21> 'int' 1
return [B9.2];
   Preds (2): B10 B11
   Succs (1): B0

 [B10]
   1: DeclRefExpr 0x563107e1ba30 <lua_cjson.c:845:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e1ba58 <lua_cjson.c:845:15> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B10.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e1ba70 <lua_cjson.c:845:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B10.2]->ptr
   4: ImplicitCastExpr 0x563107e1baf8 <lua_cjson.c:845:15, col:21> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e1ba70 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B10.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x563107e1bad0 <lua_cjson.c:845:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
escape_len
   6: ImplicitCastExpr 0x563107e1bb10 <lua_cjson.c:845:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1bad0 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B10.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x563107e1bb28 <lua_cjson.c:845:15, col:27> 'const char *' '+'
|-ImplicitCastExpr 0x563107e1baf8 <col:15, col:21> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e1ba70 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e1bb10 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1bad0 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B10.4] + [B10.6]
   8: IntegerLiteral 0x563107e1bb50 <lua_cjson.c:845:40> 'int' 1
1
   9: BinaryOperator 0x563107e1bb70 <lua_cjson.c:845:15, col:40> 'const char *' '+'
|-BinaryOperator 0x563107e1bb28 <col:15, col:27> 'const char *' '+'
| |-ImplicitCastExpr 0x563107e1baf8 <col:15, col:21> 'const char *' <LValueToRValue>
| | `-MemberExpr 0x563107e1ba70 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
| |   `-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
| |     `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
| `-ImplicitCastExpr 0x563107e1bb10 <col:27> 'int' <LValueToRValue>
|   `-DeclRefExpr 0x563107e1bad0 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
`-IntegerLiteral 0x563107e1bb50 <col:40> 'int' 1
[B10.7] + [B10.8]
  10: UnaryOperator 0x563107e1bbb8 <lua_cjson.c:845:13, col:41> 'const char' lvalue prefix '*'
`-ParenExpr 0x563107e1bb98 <col:14, col:41> 'const char *'
  `-BinaryOperator 0x563107e1bb70 <col:15, col:40> 'const char *' '+'
    |-BinaryOperator 0x563107e1bb28 <col:15, col:27> 'const char *' '+'
    | |-ImplicitCastExpr 0x563107e1baf8 <col:15, col:21> 'const char *' <LValueToRValue>
    | | `-MemberExpr 0x563107e1ba70 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
    | |   `-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
    | |     `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
    | `-ImplicitCastExpr 0x563107e1bb10 <col:27> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x563107e1bad0 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
    `-IntegerLiteral 0x563107e1bb50 <col:40> 'int' 1
*([B10.9])
  11: ImplicitCastExpr 0x563107e1bbf0 <lua_cjson.c:845:13, col:41> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e1bbb8 <col:13, col:41> 'const char' lvalue prefix '*'
  `-ParenExpr 0x563107e1bb98 <col:14, col:41> 'const char *'
    `-BinaryOperator 0x563107e1bb70 <col:15, col:40> 'const char *' '+'
      |-BinaryOperator 0x563107e1bb28 <col:15, col:27> 'const char *' '+'
      | |-ImplicitCastExpr 0x563107e1baf8 <col:15, col:21> 'const char *' <LValueToRValue>
      | | `-MemberExpr 0x563107e1ba70 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
      | |   `-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
      | |     `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
      | `-ImplicitCastExpr 0x563107e1bb10 <col:27> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x563107e1bad0 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
      `-IntegerLiteral 0x563107e1bb50 <col:40> 'int' 1
[B10.10] (ImplicitCastExpr, LValueToRValue, char)
  12: ImplicitCastExpr 0x563107e1bc08 <lua_cjson.c:845:13, col:41> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e1bbf0 <col:13, col:41> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e1bbb8 <col:13, col:41> 'const char' lvalue prefix '*'
    `-ParenExpr 0x563107e1bb98 <col:14, col:41> 'const char *'
      `-BinaryOperator 0x563107e1bb70 <col:15, col:40> 'const char *' '+'
        |-BinaryOperator 0x563107e1bb28 <col:15, col:27> 'const char *' '+'
        | |-ImplicitCastExpr 0x563107e1baf8 <col:15, col:21> 'const char *' <LValueToRValue>
        | | `-MemberExpr 0x563107e1ba70 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
        | |   `-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
        | |     `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
        | `-ImplicitCastExpr 0x563107e1bb10 <col:27> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x563107e1bad0 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
        `-IntegerLiteral 0x563107e1bb50 <col:40> 'int' 1
[B10.11] (ImplicitCastExpr, IntegralCast, int)
  13: CharacterLiteral 0x563107e1bbd8 <lua_cjson.c:845:46> 'int' 117
'u'
  14: BinaryOperator 0x563107e1bc20 <lua_cjson.c:845:13, col:46> 'int' '!='
|-ImplicitCastExpr 0x563107e1bc08 <col:13, col:41> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e1bbf0 <col:13, col:41> 'char' <LValueToRValue>
|   `-UnaryOperator 0x563107e1bbb8 <col:13, col:41> 'const char' lvalue prefix '*'
|     `-ParenExpr 0x563107e1bb98 <col:14, col:41> 'const char *'
|       `-BinaryOperator 0x563107e1bb70 <col:15, col:40> 'const char *' '+'
|         |-BinaryOperator 0x563107e1bb28 <col:15, col:27> 'const char *' '+'
|         | |-ImplicitCastExpr 0x563107e1baf8 <col:15, col:21> 'const char *' <LValueToRValue>
|         | | `-MemberExpr 0x563107e1ba70 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
|         | |   `-ImplicitCastExpr 0x563107e1ba58 <col:15> 'json_parse_t *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x563107e1ba30 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
|         | `-ImplicitCastExpr 0x563107e1bb10 <col:27> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563107e1bad0 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
|         `-IntegerLiteral 0x563107e1bb50 <col:40> 'int' 1
`-CharacterLiteral 0x563107e1bbd8 <col:46> 'int' 117
[B10.12] != [B10.13]
   T: if [B11.12] || [B10.14]
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x563107e1b888 <lua_cjson.c:844:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
json
   2: ImplicitCastExpr 0x563107e1b8b0 <lua_cjson.c:844:15> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B11.1] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
   3: MemberExpr 0x563107e1b8c8 <lua_cjson.c:844:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e1b8b0 <col:15> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B11.2]->ptr
   4: ImplicitCastExpr 0x563107e1b928 <lua_cjson.c:844:15, col:21> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e1b8c8 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e1b8b0 <col:15> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B11.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: DeclRefExpr 0x563107e1b900 <lua_cjson.c:844:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
escape_len
   6: ImplicitCastExpr 0x563107e1b940 <lua_cjson.c:844:27> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1b900 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B11.5] (ImplicitCastExpr, LValueToRValue, int)
   7: BinaryOperator 0x563107e1b958 <lua_cjson.c:844:15, col:27> 'const char *' '+'
|-ImplicitCastExpr 0x563107e1b928 <col:15, col:21> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e1b8c8 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e1b8b0 <col:15> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
`-ImplicitCastExpr 0x563107e1b940 <col:27> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e1b900 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B11.4] + [B11.6]
   8: UnaryOperator 0x563107e1b9a0 <lua_cjson.c:844:13, col:37> 'const char' lvalue prefix '*'
`-ParenExpr 0x563107e1b980 <col:14, col:37> 'const char *'
  `-BinaryOperator 0x563107e1b958 <col:15, col:27> 'const char *' '+'
    |-ImplicitCastExpr 0x563107e1b928 <col:15, col:21> 'const char *' <LValueToRValue>
    | `-MemberExpr 0x563107e1b8c8 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
    |   `-ImplicitCastExpr 0x563107e1b8b0 <col:15> 'json_parse_t *' <LValueToRValue>
    |     `-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
    `-ImplicitCastExpr 0x563107e1b940 <col:27> 'int' <LValueToRValue>
      `-DeclRefExpr 0x563107e1b900 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
*([B11.7])
   9: ImplicitCastExpr 0x563107e1b9d8 <lua_cjson.c:844:13, col:37> 'char' <LValueToRValue>
`-UnaryOperator 0x563107e1b9a0 <col:13, col:37> 'const char' lvalue prefix '*'
  `-ParenExpr 0x563107e1b980 <col:14, col:37> 'const char *'
    `-BinaryOperator 0x563107e1b958 <col:15, col:27> 'const char *' '+'
      |-ImplicitCastExpr 0x563107e1b928 <col:15, col:21> 'const char *' <LValueToRValue>
      | `-MemberExpr 0x563107e1b8c8 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
      |   `-ImplicitCastExpr 0x563107e1b8b0 <col:15> 'json_parse_t *' <LValueToRValue>
      |     `-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
      `-ImplicitCastExpr 0x563107e1b940 <col:27> 'int' <LValueToRValue>
        `-DeclRefExpr 0x563107e1b900 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B11.8] (ImplicitCastExpr, LValueToRValue, char)
  10: ImplicitCastExpr 0x563107e1b9f0 <lua_cjson.c:844:13, col:37> 'int' <IntegralCast>
`-ImplicitCastExpr 0x563107e1b9d8 <col:13, col:37> 'char' <LValueToRValue>
  `-UnaryOperator 0x563107e1b9a0 <col:13, col:37> 'const char' lvalue prefix '*'
    `-ParenExpr 0x563107e1b980 <col:14, col:37> 'const char *'
      `-BinaryOperator 0x563107e1b958 <col:15, col:27> 'const char *' '+'
        |-ImplicitCastExpr 0x563107e1b928 <col:15, col:21> 'const char *' <LValueToRValue>
        | `-MemberExpr 0x563107e1b8c8 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
        |   `-ImplicitCastExpr 0x563107e1b8b0 <col:15> 'json_parse_t *' <LValueToRValue>
        |     `-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
        `-ImplicitCastExpr 0x563107e1b940 <col:27> 'int' <LValueToRValue>
          `-DeclRefExpr 0x563107e1b900 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
[B11.9] (ImplicitCastExpr, IntegralCast, int)
  11: CharacterLiteral 0x563107e1b9c0 <lua_cjson.c:844:42> 'int' 92
'\\'
  12: BinaryOperator 0x563107e1ba08 <lua_cjson.c:844:13, col:42> 'int' '!='
|-ImplicitCastExpr 0x563107e1b9f0 <col:13, col:37> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x563107e1b9d8 <col:13, col:37> 'char' <LValueToRValue>
|   `-UnaryOperator 0x563107e1b9a0 <col:13, col:37> 'const char' lvalue prefix '*'
|     `-ParenExpr 0x563107e1b980 <col:14, col:37> 'const char *'
|       `-BinaryOperator 0x563107e1b958 <col:15, col:27> 'const char *' '+'
|         |-ImplicitCastExpr 0x563107e1b928 <col:15, col:21> 'const char *' <LValueToRValue>
|         | `-MemberExpr 0x563107e1b8c8 <col:15, col:21> 'const char *' lvalue ->ptr 0x563107df1578
|         |   `-ImplicitCastExpr 0x563107e1b8b0 <col:15> 'json_parse_t *' <LValueToRValue>
|         |     `-DeclRefExpr 0x563107e1b888 <col:15> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
|         `-ImplicitCastExpr 0x563107e1b940 <col:27> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x563107e1b900 <col:27> 'int' lvalue Var 0x563107e1b310 'escape_len' 'int'
`-CharacterLiteral 0x563107e1b9c0 <col:42> 'int' 92
[B11.10] != [B11.11]
   T: [B11.12] || ...
   Preds (1): B13
   Succs (2): B9 B10

 [B12]
   1: IntegerLiteral 0x563107e1b7f8 <lua_cjson.c:841:21> 'int' 1
1
   2: UnaryOperator 0x563107e1b818 <lua_cjson.c:841:20, col:21> 'int' prefix '-'
`-IntegerLiteral 0x563107e1b7f8 <col:21> 'int' 1
-[B12.1]
   3: ReturnStmt 0x563107e1b838 <lua_cjson.c:841:13, col:21>
`-UnaryOperator 0x563107e1b818 <col:20, col:21> 'int' prefix '-'
  `-IntegerLiteral 0x563107e1b7f8 <col:21> 'int' 1
return [B12.2];
   Preds (1): B13
   Succs (1): B0

 [B13]
   1: DeclRefExpr 0x563107e1b770 <lua_cjson.c:840:13> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e1b7b8 <lua_cjson.c:840:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1b770 <col:13> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B13.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e1b798 <lua_cjson.c:840:25> 'int' 1024
1024
   4: BinaryOperator 0x563107e1b7d0 <lua_cjson.c:840:13, col:25> 'int' '&'
|-ImplicitCastExpr 0x563107e1b7b8 <col:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1b770 <col:13> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-IntegerLiteral 0x563107e1b798 <col:25> 'int' 1024
[B13.2] & [B13.3]
   T: if [B13.4]
   Preds (1): B14
   Succs (2): B12 B11

 [B14]
   1: DeclRefExpr 0x563107e1b680 <lua_cjson.c:838:10> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e1b6c8 <lua_cjson.c:838:10> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1b680 <col:10> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B14.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e1b6a8 <lua_cjson.c:838:22> 'int' 63488
63488
   4: BinaryOperator 0x563107e1b6e0 <lua_cjson.c:838:10, col:22> 'int' '&'
|-ImplicitCastExpr 0x563107e1b6c8 <col:10> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1b680 <col:10> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-IntegerLiteral 0x563107e1b6a8 <col:22> 'int' 63488
[B14.2] & [B14.3]
   5: IntegerLiteral 0x563107e1b728 <lua_cjson.c:838:33> 'int' 55296
55296
   6: BinaryOperator 0x563107e1b748 <lua_cjson.c:838:9, col:33> 'int' '=='
|-ParenExpr 0x563107e1b708 <col:9, col:28> 'int'
| `-BinaryOperator 0x563107e1b6e0 <col:10, col:22> 'int' '&'
|   |-ImplicitCastExpr 0x563107e1b6c8 <col:10> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1b680 <col:10> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1b6a8 <col:22> 'int' 63488
`-IntegerLiteral 0x563107e1b728 <col:33> 'int' 55296
([B14.4]) == [B14.5]
   T: if [B14.6]
   Preds (1): B16
   Succs (2): B13 B3

 [B15]
   1: IntegerLiteral 0x563107e1b5f0 <lua_cjson.c:830:17> 'int' 1
1
   2: UnaryOperator 0x563107e1b610 <lua_cjson.c:830:16, col:17> 'int' prefix '-'
`-IntegerLiteral 0x563107e1b5f0 <col:17> 'int' 1
-[B15.1]
   3: ReturnStmt 0x563107e1b630 <lua_cjson.c:830:9, col:17>
`-UnaryOperator 0x563107e1b610 <col:16, col:17> 'int' prefix '-'
  `-IntegerLiteral 0x563107e1b5f0 <col:17> 'int' 1
return [B15.2];
   Preds (1): B16
   Succs (1): B0

 [B16]
   1: DeclStmt 0x563107e1b130 <lua_cjson.c:821:5, col:17>col:10
`-VarDecl 0x563107e1b0d0 <col:5, col:16> col:10 used utf8 'char [4]'
char utf8[4];
   2: DeclStmt 0x563107e1b1c0 <lua_cjson.c:822:5, col:18>col:9
`-VarDecl 0x563107e1b160 <col:5, col:9> col:9 used codepoint 'int'
int codepoint;
   3: DeclStmt 0x563107e1b250 <lua_cjson.c:823:5, col:22>col:9
`-VarDecl 0x563107e1b1f0 <col:5, col:9> col:9 used surrogate_low 'int'
int surrogate_low;
   4: DeclStmt 0x563107e1b2e0 <lua_cjson.c:824:5, col:12>col:9
`-VarDecl 0x563107e1b280 <col:5, col:9> col:9 used len 'int'
int len;
   5: IntegerLiteral 0x563107e1b370 <lua_cjson.c:825:22> 'int' 6
6
   6: DeclStmt 0x563107e1b390 <lua_cjson.c:825:5, col:23>col:9
`-VarDecl 0x563107e1b310 <col:5, col:22> col:9 used escape_len 'int' cinit
  `-IntegerLiteral 0x563107e1b370 <col:22> 'int' 6
int escape_len = 6;
   7: DeclRefExpr 0x563107e1b3d0 <lua_cjson.c:828:17> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
decode_hex4
   8: ImplicitCastExpr 0x563107e1b4f8 <lua_cjson.c:828:17> 'int (*)(const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e1b3d0 <col:17> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
[B16.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *))
   9: DeclRefExpr 0x563107e1b3f8 <lua_cjson.c:828:29> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
json
  10: ImplicitCastExpr 0x563107e1b420 <lua_cjson.c:828:29> 'json_parse_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e1b3f8 <col:29> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B16.9] (ImplicitCastExpr, LValueToRValue, json_parse_t *)
  11: MemberExpr 0x563107e1b438 <lua_cjson.c:828:29, col:35> 'const char *' lvalue ->ptr 0x563107df1578
`-ImplicitCastExpr 0x563107e1b420 <col:29> 'json_parse_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e1b3f8 <col:29> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B16.10]->ptr
  12: ImplicitCastExpr 0x563107e1b490 <lua_cjson.c:828:29, col:35> 'const char *' <LValueToRValue>
`-MemberExpr 0x563107e1b438 <col:29, col:35> 'const char *' lvalue ->ptr 0x563107df1578
  `-ImplicitCastExpr 0x563107e1b420 <col:29> 'json_parse_t *' <LValueToRValue>
    `-DeclRefExpr 0x563107e1b3f8 <col:29> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
[B16.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: IntegerLiteral 0x563107e1b470 <lua_cjson.c:828:41> 'int' 2
2
  14: BinaryOperator 0x563107e1b4a8 <lua_cjson.c:828:29, col:41> 'const char *' '+'
|-ImplicitCastExpr 0x563107e1b490 <col:29, col:35> 'const char *' <LValueToRValue>
| `-MemberExpr 0x563107e1b438 <col:29, col:35> 'const char *' lvalue ->ptr 0x563107df1578
|   `-ImplicitCastExpr 0x563107e1b420 <col:29> 'json_parse_t *' <LValueToRValue>
|     `-DeclRefExpr 0x563107e1b3f8 <col:29> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
`-IntegerLiteral 0x563107e1b470 <col:41> 'int' 2
[B16.12] + [B16.13]
  15: CallExpr 0x563107e1b510 <lua_cjson.c:828:17, col:42> 'int'
|-ImplicitCastExpr 0x563107e1b4f8 <col:17> 'int (*)(const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e1b3d0 <col:17> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
`-BinaryOperator 0x563107e1b4a8 <col:29, col:41> 'const char *' '+'
  |-ImplicitCastExpr 0x563107e1b490 <col:29, col:35> 'const char *' <LValueToRValue>
  | `-MemberExpr 0x563107e1b438 <col:29, col:35> 'const char *' lvalue ->ptr 0x563107df1578
  |   `-ImplicitCastExpr 0x563107e1b420 <col:29> 'json_parse_t *' <LValueToRValue>
  |     `-DeclRefExpr 0x563107e1b3f8 <col:29> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
  `-IntegerLiteral 0x563107e1b470 <col:41> 'int' 2
[B16.8]([B16.14])
  16: DeclRefExpr 0x563107e1b3a8 <lua_cjson.c:828:5> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
  17: BinaryOperator 0x563107e1b540 <lua_cjson.c:828:5, col:42> 'int' '='
|-DeclRefExpr 0x563107e1b3a8 <col:5> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-CallExpr 0x563107e1b510 <col:17, col:42> 'int'
  |-ImplicitCastExpr 0x563107e1b4f8 <col:17> 'int (*)(const char *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e1b3d0 <col:17> 'int (const char *)' Function 0x563107e189f8 'decode_hex4' 'int (const char *)'
  `-BinaryOperator 0x563107e1b4a8 <col:29, col:41> 'const char *' '+'
    |-ImplicitCastExpr 0x563107e1b490 <col:29, col:35> 'const char *' <LValueToRValue>
    | `-MemberExpr 0x563107e1b438 <col:29, col:35> 'const char *' lvalue ->ptr 0x563107df1578
    |   `-ImplicitCastExpr 0x563107e1b420 <col:29> 'json_parse_t *' <LValueToRValue>
    |     `-DeclRefExpr 0x563107e1b3f8 <col:29> 'json_parse_t *' lvalue ParmVar 0x563107e1aee0 'json' 'json_parse_t *'
    `-IntegerLiteral 0x563107e1b470 <col:41> 'int' 2
[B16.16] = [B16.15]
  18: DeclRefExpr 0x563107e1b568 <lua_cjson.c:829:9> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
codepoint
  19: ImplicitCastExpr 0x563107e1b5b0 <lua_cjson.c:829:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1b568 <col:9> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
[B16.18] (ImplicitCastExpr, LValueToRValue, int)
  20: IntegerLiteral 0x563107e1b590 <lua_cjson.c:829:21> 'int' 0
0
  21: BinaryOperator 0x563107e1b5c8 <lua_cjson.c:829:9, col:21> 'int' '<'
|-ImplicitCastExpr 0x563107e1b5b0 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1b568 <col:9> 'int' lvalue Var 0x563107e1b160 'codepoint' 'int'
`-IntegerLiteral 0x563107e1b590 <col:21> 'int' 0
[B16.19] < [B16.20]
   T: if [B16.21]
   Preds (1): B17
   Succs (2): B15 B14

 [B0 (EXIT)]
   Preds (7): B1 B2 B5 B7 B9 B12 B15
