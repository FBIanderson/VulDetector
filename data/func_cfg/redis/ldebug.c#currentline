static int currentline(lua_State *L, CallInfo *ci)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: ConditionalOperator 0x555e9723a110 <./ldebug.h:16:24, col:62> 'int'
|-ImplicitCastExpr 0x555e9723a0e0 <col:24, col:38> 'int *' <LValueToRValue>
| `-ParenExpr 0x555e97239d50 <col:24, col:38> 'int *' lvalue
|   `-MemberExpr 0x555e97239d18 <col:25, col:30> 'int *' lvalue ->lineinfo 0x555e971d96c0
|     `-ImplicitCastExpr 0x555e97239d00 <col:25, col:27> 'struct Proto *' <LValueToRValue>
|       `-ParenExpr 0x555e97239ce0 <col:25, col:27> 'struct Proto *' lvalue
|         `-MemberExpr 0x555e97239ca8 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
|           `-MemberExpr 0x555e97239c70 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
|             `-ParenExpr 0x555e97239c50 <./lstate.h:60:21, col:41> 'union Closure *'
|               `-ParenExpr 0x555e97239c30 <./llimits.h:63:25, col:27> 'union Closure *'
|                 `-UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|                   `-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
|                     `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
|                       `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
|                         `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
|                           `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                             `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
|                               `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|                                 `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
|                                   `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
|                                     `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
|-ImplicitCastExpr 0x555e9723a0f8 <./ldebug.h:16:42, col:58> 'int' <LValueToRValue>
| `-ArraySubscriptExpr 0x555e9723a098 <col:42, col:58> 'int' lvalue
|   |-ImplicitCastExpr 0x555e9723a068 <col:42, col:47> 'int *' <LValueToRValue>
|   | `-MemberExpr 0x555e9723a008 <col:42, col:47> 'int *' lvalue ->lineinfo 0x555e971d96c0
|   |   `-ImplicitCastExpr 0x555e97239ff0 <col:42, col:44> 'struct Proto *' <LValueToRValue>
|   |     `-ParenExpr 0x555e97239fd0 <col:42, col:44> 'struct Proto *' lvalue
|   |       `-MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
|   |         `-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
|   |           `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
|   |             `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
|   |               `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|   |                 `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
|   |                   `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
|   |                     `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
|   |                       `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
|   |                         `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|   |                           `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
|   |                             `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|   |                               `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
|   |                                 `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
|   |                                   `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
|   `-ImplicitCastExpr 0x555e9723a080 <col:38> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x555e9723a040 <col:38> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
`-IntegerLiteral 0x555e9723a0c0 <./ldebug.h:16:62> 'int' 0
[B4.14] ? [B2.18] : [B3.1]
   2: ReturnStmt 0x555e9723a160 <ldebug.c:49:5, ./ldebug.h:16:63>
`-ParenExpr 0x555e9723a140 <col:23, col:63> 'int'
  `-ConditionalOperator 0x555e9723a110 <col:24, col:62> 'int'
    |-ImplicitCastExpr 0x555e9723a0e0 <col:24, col:38> 'int *' <LValueToRValue>
    | `-ParenExpr 0x555e97239d50 <col:24, col:38> 'int *' lvalue
    |   `-MemberExpr 0x555e97239d18 <col:25, col:30> 'int *' lvalue ->lineinfo 0x555e971d96c0
    |     `-ImplicitCastExpr 0x555e97239d00 <col:25, col:27> 'struct Proto *' <LValueToRValue>
    |       `-ParenExpr 0x555e97239ce0 <col:25, col:27> 'struct Proto *' lvalue
    |         `-MemberExpr 0x555e97239ca8 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
    |           `-MemberExpr 0x555e97239c70 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    |             `-ParenExpr 0x555e97239c50 <./lstate.h:60:21, col:41> 'union Closure *'
    |               `-ParenExpr 0x555e97239c30 <./llimits.h:63:25, col:27> 'union Closure *'
    |                 `-UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    |                   `-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
    |                     `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    |                       `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    |                         `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    |                           `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    |                             `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
    |                               `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    |                                 `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
    |                                   `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
    |                                     `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
    |-ImplicitCastExpr 0x555e9723a0f8 <./ldebug.h:16:42, col:58> 'int' <LValueToRValue>
    | `-ArraySubscriptExpr 0x555e9723a098 <col:42, col:58> 'int' lvalue
    |   |-ImplicitCastExpr 0x555e9723a068 <col:42, col:47> 'int *' <LValueToRValue>
    |   | `-MemberExpr 0x555e9723a008 <col:42, col:47> 'int *' lvalue ->lineinfo 0x555e971d96c0
    |   |   `-ImplicitCastExpr 0x555e97239ff0 <col:42, col:44> 'struct Proto *' <LValueToRValue>
    |   |     `-ParenExpr 0x555e97239fd0 <col:42, col:44> 'struct Proto *' lvalue
    |   |       `-MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
    |   |         `-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
    |   |           `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
    |   |             `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
    |   |               `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
    |   |                 `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
    |   |                   `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    |   |                     `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    |   |                       `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    |   |                         `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    |   |                           `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
    |   |                             `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    |   |                               `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
    |   |                                 `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
    |   |                                   `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
    |   `-ImplicitCastExpr 0x555e9723a080 <col:38> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x555e9723a040 <col:38> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
    `-IntegerLiteral 0x555e9723a0c0 <./ldebug.h:16:62> 'int' 0
return ([B1.1]);
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e97239db8 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
([B2.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.2]->func
   4: ImplicitCastExpr 0x555e97239e28 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
([B2.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e97239e40 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.4]->value
   6: MemberExpr 0x555e97239e78 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.5].gc
   7: ImplicitCastExpr 0x555e97239eb0 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x555e97239ec8 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.7]->cl
   9: UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
&[B2.8]
  10: MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
(([B2.9]))->l
  11: MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.10].p
  12: ImplicitCastExpr 0x555e97239ff0 <./ldebug.h:16:42, col:44> 'struct Proto *' <LValueToRValue>
`-ParenExpr 0x555e97239fd0 <col:42, col:44> 'struct Proto *' lvalue
  `-MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
              `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                  `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                    `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                          `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
([B2.11]) (ImplicitCastExpr, LValueToRValue, struct Proto *)
  13: MemberExpr 0x555e9723a008 <./ldebug.h:16:42, col:47> 'int *' lvalue ->lineinfo 0x555e971d96c0
`-ImplicitCastExpr 0x555e97239ff0 <col:42, col:44> 'struct Proto *' <LValueToRValue>
  `-ParenExpr 0x555e97239fd0 <col:42, col:44> 'struct Proto *' lvalue
    `-MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
      `-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
          `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
            `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
              `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                  `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                    `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                      `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                        `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
                          `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                            `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                              `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
                                `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.12]->lineinfo
  14: ImplicitCastExpr 0x555e9723a068 <./ldebug.h:16:42, col:47> 'int *' <LValueToRValue>
`-MemberExpr 0x555e9723a008 <col:42, col:47> 'int *' lvalue ->lineinfo 0x555e971d96c0
  `-ImplicitCastExpr 0x555e97239ff0 <col:42, col:44> 'struct Proto *' <LValueToRValue>
    `-ParenExpr 0x555e97239fd0 <col:42, col:44> 'struct Proto *' lvalue
      `-MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
        `-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
          `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
            `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
              `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                  `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                    `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                      `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                        `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                          `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
                            `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                              `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
                                  `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B2.13] (ImplicitCastExpr, LValueToRValue, int *)
  15: DeclRefExpr 0x555e9723a040 <ldebug.c:49:38> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
pc
  16: ImplicitCastExpr 0x555e9723a080 <ldebug.c:49:38> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e9723a040 <col:38> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
[B2.15] (ImplicitCastExpr, LValueToRValue, int)
  17: ArraySubscriptExpr 0x555e9723a098 <./ldebug.h:16:42, col:58> 'int' lvalue
|-ImplicitCastExpr 0x555e9723a068 <col:42, col:47> 'int *' <LValueToRValue>
| `-MemberExpr 0x555e9723a008 <col:42, col:47> 'int *' lvalue ->lineinfo 0x555e971d96c0
|   `-ImplicitCastExpr 0x555e97239ff0 <col:42, col:44> 'struct Proto *' <LValueToRValue>
|     `-ParenExpr 0x555e97239fd0 <col:42, col:44> 'struct Proto *' lvalue
|       `-MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
|         `-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
|           `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
|             `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
|               `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
|                 `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
|                   `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
|                     `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
|                       `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
|                         `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                           `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
|                             `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
|                               `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
|                                 `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
|                                   `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
`-ImplicitCastExpr 0x555e9723a080 <col:38> 'int' <LValueToRValue>
  `-DeclRefExpr 0x555e9723a040 <col:38> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
[B2.14][[B2.16]]
  18: ImplicitCastExpr 0x555e9723a0f8 <./ldebug.h:16:42, col:58> 'int' <LValueToRValue>
`-ArraySubscriptExpr 0x555e9723a098 <col:42, col:58> 'int' lvalue
  |-ImplicitCastExpr 0x555e9723a068 <col:42, col:47> 'int *' <LValueToRValue>
  | `-MemberExpr 0x555e9723a008 <col:42, col:47> 'int *' lvalue ->lineinfo 0x555e971d96c0
  |   `-ImplicitCastExpr 0x555e97239ff0 <col:42, col:44> 'struct Proto *' <LValueToRValue>
  |     `-ParenExpr 0x555e97239fd0 <col:42, col:44> 'struct Proto *' lvalue
  |       `-MemberExpr 0x555e97239f98 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
  |         `-MemberExpr 0x555e97239f60 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  |           `-ParenExpr 0x555e97239f40 <./lstate.h:60:21, col:41> 'union Closure *'
  |             `-ParenExpr 0x555e97239f20 <./llimits.h:63:25, col:27> 'union Closure *'
  |               `-UnaryOperator 0x555e97239f00 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
  |                 `-MemberExpr 0x555e97239ec8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  |                   `-ImplicitCastExpr 0x555e97239eb0 <col:48, col:59> 'GCObject *' <LValueToRValue>
  |                     `-MemberExpr 0x555e97239e78 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  |                       `-MemberExpr 0x555e97239e40 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  |                         `-ImplicitCastExpr 0x555e97239e28 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  |                           `-ParenExpr 0x555e97239e08 <col:48, col:50> 'StkId':'TValue *' lvalue
  |                             `-MemberExpr 0x555e97239dd0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
  |                               `-ImplicitCastExpr 0x555e97239db8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  |                                 `-ParenExpr 0x555e97239d98 <col:30, col:33> 'CallInfo *' lvalue
  |                                   `-DeclRefExpr 0x555e97239d70 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
  `-ImplicitCastExpr 0x555e9723a080 <col:38> 'int' <LValueToRValue>
    `-DeclRefExpr 0x555e9723a040 <col:38> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
[B2.17] (ImplicitCastExpr, LValueToRValue, int)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: IntegerLiteral 0x555e9723a0c0 <./ldebug.h:16:62> 'int' 0
0
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
ci
   2: ImplicitCastExpr 0x555e97239ac8 <./lstate.h:60:30, col:33> 'CallInfo *' <LValueToRValue>
`-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
  `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
([B4.1]) (ImplicitCastExpr, LValueToRValue, CallInfo *)
   3: MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
`-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
  `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
    `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B4.2]->func
   4: ImplicitCastExpr 0x555e97239b38 <./lobject.h:98:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
    `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
      `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
        `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
([B4.3]) (ImplicitCastExpr, LValueToRValue, StkId)
   5: MemberExpr 0x555e97239b50 <./lobject.h:98:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
`-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
      `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
        `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
          `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B4.4]->value
   6: MemberExpr 0x555e97239b88 <./lobject.h:98:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
`-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
  `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
        `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
          `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
            `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B4.5].gc
   7: ImplicitCastExpr 0x555e97239bc0 <./lobject.h:98:48, col:59> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
  `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
    `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
        `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
          `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
            `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
              `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B4.6] (ImplicitCastExpr, LValueToRValue, GCObject *)
   8: MemberExpr 0x555e97239bd8 <./lobject.h:98:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
`-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
    `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
      `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
        `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
          `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
            `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
              `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
                `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B4.7]->cl
   9: UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
`-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
  `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
      `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
        `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
              `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
                  `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
&[B4.8]
  10: MemberExpr 0x555e97239c70 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
`-ParenExpr 0x555e97239c50 <./lstate.h:60:21, col:41> 'union Closure *'
  `-ParenExpr 0x555e97239c30 <./llimits.h:63:25, col:27> 'union Closure *'
    `-UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
      `-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
        `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
            `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
              `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
                  `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                    `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                      `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
                        `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
(([B4.9]))->l
  11: MemberExpr 0x555e97239ca8 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
`-MemberExpr 0x555e97239c70 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
  `-ParenExpr 0x555e97239c50 <./lstate.h:60:21, col:41> 'union Closure *'
    `-ParenExpr 0x555e97239c30 <./llimits.h:63:25, col:27> 'union Closure *'
      `-UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
        `-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
          `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
            `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
              `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                      `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                        `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
                          `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B4.10].p
  12: ImplicitCastExpr 0x555e97239d00 <./ldebug.h:16:25, col:27> 'struct Proto *' <LValueToRValue>
`-ParenExpr 0x555e97239ce0 <col:25, col:27> 'struct Proto *' lvalue
  `-MemberExpr 0x555e97239ca8 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
    `-MemberExpr 0x555e97239c70 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
      `-ParenExpr 0x555e97239c50 <./lstate.h:60:21, col:41> 'union Closure *'
        `-ParenExpr 0x555e97239c30 <./llimits.h:63:25, col:27> 'union Closure *'
          `-UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
            `-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
              `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                  `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                    `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                      `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
                        `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                          `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                            `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
                              `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
([B4.11]) (ImplicitCastExpr, LValueToRValue, struct Proto *)
  13: MemberExpr 0x555e97239d18 <./ldebug.h:16:25, col:30> 'int *' lvalue ->lineinfo 0x555e971d96c0
`-ImplicitCastExpr 0x555e97239d00 <col:25, col:27> 'struct Proto *' <LValueToRValue>
  `-ParenExpr 0x555e97239ce0 <col:25, col:27> 'struct Proto *' lvalue
    `-MemberExpr 0x555e97239ca8 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
      `-MemberExpr 0x555e97239c70 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
        `-ParenExpr 0x555e97239c50 <./lstate.h:60:21, col:41> 'union Closure *'
          `-ParenExpr 0x555e97239c30 <./llimits.h:63:25, col:27> 'union Closure *'
            `-UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
              `-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                  `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                    `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                      `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                        `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
                          `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                            `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                              `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
                                `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B4.12]->lineinfo
  14: ImplicitCastExpr 0x555e9723a0e0 <./ldebug.h:16:24, col:38> 'int *' <LValueToRValue>
`-ParenExpr 0x555e97239d50 <col:24, col:38> 'int *' lvalue
  `-MemberExpr 0x555e97239d18 <col:25, col:30> 'int *' lvalue ->lineinfo 0x555e971d96c0
    `-ImplicitCastExpr 0x555e97239d00 <col:25, col:27> 'struct Proto *' <LValueToRValue>
      `-ParenExpr 0x555e97239ce0 <col:25, col:27> 'struct Proto *' lvalue
        `-MemberExpr 0x555e97239ca8 <./lstate.h:60:21, ldebug.c:49:35> 'struct Proto *' lvalue .p 0x555e971db718
          `-MemberExpr 0x555e97239c70 <./lstate.h:60:21, ldebug.c:49:33> 'LClosure':'struct LClosure' lvalue ->l 0x555e971dbad0
            `-ParenExpr 0x555e97239c50 <./lstate.h:60:21, col:41> 'union Closure *'
              `-ParenExpr 0x555e97239c30 <./llimits.h:63:25, col:27> 'union Closure *'
                `-UnaryOperator 0x555e97239c10 <./lobject.h:98:47, col:63> 'union Closure *' prefix '&'
                  `-MemberExpr 0x555e97239bd8 <col:48, col:63> 'union Closure':'union Closure' lvalue ->cl 0x555e97213f98
                    `-ImplicitCastExpr 0x555e97239bc0 <col:48, col:59> 'GCObject *' <LValueToRValue>
                      `-MemberExpr 0x555e97239b88 <col:48, col:59> 'GCObject *' lvalue .gc 0x555e971cc250
                        `-MemberExpr 0x555e97239b50 <col:48, col:53> 'Value':'Value' lvalue ->value 0x555e971cc550
                          `-ImplicitCastExpr 0x555e97239b38 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                            `-ParenExpr 0x555e97239b18 <col:48, col:50> 'StkId':'TValue *' lvalue
                              `-MemberExpr 0x555e97239ae0 <./lstate.h:60:30, col:36> 'StkId':'TValue *' lvalue ->func 0x555e9720f978
                                `-ImplicitCastExpr 0x555e97239ac8 <col:30, col:33> 'CallInfo *' <LValueToRValue>
                                  `-ParenExpr 0x555e97239aa8 <col:30, col:33> 'CallInfo *' lvalue
                                    `-DeclRefExpr 0x555e97239a80 <ldebug.c:49:28> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
([B4.13]) (ImplicitCastExpr, LValueToRValue, int *)
   T: [B4.14] ? ... : ...
   Preds (1): B6
   Succs (2): B2 B3

 [B5]
   1: IntegerLiteral 0x555e97239a28 <ldebug.c:47:13> 'int' 1
1
   2: UnaryOperator 0x555e97239a48 <ldebug.c:47:12, col:13> 'int' prefix '-'
`-IntegerLiteral 0x555e97239a28 <col:13> 'int' 1
-[B5.1]
   3: ReturnStmt 0x555e97239a68 <ldebug.c:47:5, col:13>
`-UnaryOperator 0x555e97239a48 <col:12, col:13> 'int' prefix '-'
  `-IntegerLiteral 0x555e97239a28 <col:13> 'int' 1
return [B5.2];
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: DeclRefExpr 0x555e97239830 <ldebug.c:45:12> 'int (lua_State *, CallInfo *)' Function 0x555e97237848 'currentpc' 'int (lua_State *, CallInfo *)'
currentpc
   2: ImplicitCastExpr 0x555e97239908 <ldebug.c:45:12> 'int (*)(lua_State *, CallInfo *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x555e97239830 <col:12> 'int (lua_State *, CallInfo *)' Function 0x555e97237848 'currentpc' 'int (lua_State *, CallInfo *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, CallInfo *))
   3: DeclRefExpr 0x555e97239858 <ldebug.c:45:22> 'lua_State *' lvalue ParmVar 0x555e97239600 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x555e97239958 <ldebug.c:45:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x555e97239858 <col:22> 'lua_State *' lvalue ParmVar 0x555e97239600 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x555e97239880 <ldebug.c:45:25> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
ci
   6: ImplicitCastExpr 0x555e97239970 <ldebug.c:45:25> 'CallInfo *' <LValueToRValue>
`-DeclRefExpr 0x555e97239880 <col:25> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B6.5] (ImplicitCastExpr, LValueToRValue, CallInfo *)
   7: CallExpr 0x555e97239920 <ldebug.c:45:12, col:27> 'int'
|-ImplicitCastExpr 0x555e97239908 <col:12> 'int (*)(lua_State *, CallInfo *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x555e97239830 <col:12> 'int (lua_State *, CallInfo *)' Function 0x555e97237848 'currentpc' 'int (lua_State *, CallInfo *)'
|-ImplicitCastExpr 0x555e97239958 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x555e97239858 <col:22> 'lua_State *' lvalue ParmVar 0x555e97239600 'L' 'lua_State *'
`-ImplicitCastExpr 0x555e97239970 <col:25> 'CallInfo *' <LValueToRValue>
  `-DeclRefExpr 0x555e97239880 <col:25> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
[B6.2]([B6.4], [B6.6])
   8: DeclStmt 0x555e97239988 <ldebug.c:45:3, col:28>col:7
`-VarDecl 0x555e972397d0 <col:3, col:27> col:7 used pc 'int' cinit
  `-CallExpr 0x555e97239920 <col:12, col:27> 'int'
    |-ImplicitCastExpr 0x555e97239908 <col:12> 'int (*)(lua_State *, CallInfo *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x555e97239830 <col:12> 'int (lua_State *, CallInfo *)' Function 0x555e97237848 'currentpc' 'int (lua_State *, CallInfo *)'
    |-ImplicitCastExpr 0x555e97239958 <col:22> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x555e97239858 <col:22> 'lua_State *' lvalue ParmVar 0x555e97239600 'L' 'lua_State *'
    `-ImplicitCastExpr 0x555e97239970 <col:25> 'CallInfo *' <LValueToRValue>
      `-DeclRefExpr 0x555e97239880 <col:25> 'CallInfo *' lvalue ParmVar 0x555e97239670 'ci' 'CallInfo *'
int pc = currentpc(L, ci);
   9: DeclRefExpr 0x555e972399a0 <ldebug.c:46:7> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
pc
  10: ImplicitCastExpr 0x555e972399e8 <ldebug.c:46:7> 'int' <LValueToRValue>
`-DeclRefExpr 0x555e972399a0 <col:7> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
[B6.9] (ImplicitCastExpr, LValueToRValue, int)
  11: IntegerLiteral 0x555e972399c8 <ldebug.c:46:12> 'int' 0
0
  12: BinaryOperator 0x555e97239a00 <ldebug.c:46:7, col:12> 'int' '<'
|-ImplicitCastExpr 0x555e972399e8 <col:7> 'int' <LValueToRValue>
| `-DeclRefExpr 0x555e972399a0 <col:7> 'int' lvalue Var 0x555e972397d0 'pc' 'int'
`-IntegerLiteral 0x555e972399c8 <col:12> 'int' 0
[B6.10] < [B6.11]
   T: if [B6.12]
   Preds (1): B7
   Succs (2): B5 B4

 [B0 (EXIT)]
   Preds (2): B1 B5
