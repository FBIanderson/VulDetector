void luaV_settable(lua_State *L, const TValue *t, TValue *key, StkId val)
 [B24 (ENTRY)]
   Succs (1): B23

 [B1]
   1: DeclRefExpr 0x5590ecee42b8 <lvm.c:161:3> 'void (lua_State *, const char *, ...)' Function 0x5590ecea4d80 'luaG_runerror' 'void (lua_State *, const char *, ...)'
luaG_runerror
   2: ImplicitCastExpr 0x5590ecee4340 <lvm.c:161:3> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee42b8 <col:3> 'void (lua_State *, const char *, ...)' Function 0x5590ecea4d80 'luaG_runerror' 'void (lua_State *, const char *, ...)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const char *, ...))
   3: DeclRefExpr 0x5590ecee42e0 <lvm.c:161:17> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecee4390 <lvm.c:161:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee42e0 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B1.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: StringLiteral 0x5590ecee4308 <lvm.c:161:20> 'char [17]' lvalue "loop in settable"
"loop in settable"
   6: ImplicitCastExpr 0x5590ecee43a8 <lvm.c:161:20> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5590ecee4308 <col:20> 'char [17]' lvalue "loop in settable"
[B1.5] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   7: ImplicitCastExpr 0x5590ecee43c0 <lvm.c:161:20> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5590ecee43a8 <col:20> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5590ecee4308 <col:20> 'char [17]' lvalue "loop in settable"
[B1.6] (ImplicitCastExpr, BitCast, const char *)
   8: CallExpr 0x5590ecee4358 <lvm.c:161:3, col:38> 'void'
|-ImplicitCastExpr 0x5590ecee4340 <col:3> 'void (*)(lua_State *, const char *, ...)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee42b8 <col:3> 'void (lua_State *, const char *, ...)' Function 0x5590ecea4d80 'luaG_runerror' 'void (lua_State *, const char *, ...)'
|-ImplicitCastExpr 0x5590ecee4390 <col:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee42e0 <col:17> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecee43c0 <col:20> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5590ecee43a8 <col:20> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5590ecee4308 <col:20> 'char [17]' lvalue "loop in settable"
[B1.2]([B1.4], [B1.7])
   Preds (1): B22
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x5590ecee01d0 <lvm.c:137:37> 'int' lvalue Var 0x5590ecedffd8 'loop' 'int'
loop
   2: UnaryOperator 0x5590ecee01f8 <lvm.c:137:37, col:41> 'int' postfix '++'
`-DeclRefExpr 0x5590ecee01d0 <col:37> 'int' lvalue Var 0x5590ecedffd8 'loop' 'int'
[B2.1]++
   Preds (1): B3
   Succs (1): B22

 [B3]
   1: DeclRefExpr 0x5590ecee3d08 <lvm.c:158:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
tm
   2: ImplicitCastExpr 0x5590ecee3d50 <./lobject.h:162:22, col:27> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee3d30 <col:22, col:27> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecee3d08 <lvm.c:158:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
([B3.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: DeclStmt 0x5590ecee3d68 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590ecee3ca8 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590ecee3d50 <col:22, col:27> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecee3d30 <col:22, col:27> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecee3d08 <lvm.c:158:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
const TValue *o2 = (tm);
   4: DeclRefExpr 0x5590ecee3df0 <lvm.c:158:16> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecee0060 'temp' 'TValue':'struct lua_TValue'
temp
   5: UnaryOperator 0x5590ecee3e18 <lvm.c:158:15, col:16> 'TValue *' prefix '&'
`-DeclRefExpr 0x5590ecee3df0 <col:16> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecee0060 'temp' 'TValue':'struct lua_TValue'
&[B3.4]
   6: DeclStmt 0x5590ecee3e58 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590ecee3d90 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ParenExpr 0x5590ecee3e38 <col:41, col:46> 'TValue *'
    `-UnaryOperator 0x5590ecee3e18 <lvm.c:158:15, col:16> 'TValue *' prefix '&'
      `-DeclRefExpr 0x5590ecee3df0 <col:16> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecee0060 'temp' 'TValue':'struct lua_TValue'
TValue *o1 = (&temp);
   7: DeclRefExpr 0x5590ecee3ee8 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
o2
   8: ImplicitCastExpr 0x5590ecee3f10 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3ee8 <col:17> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: MemberExpr 0x5590ecee3f28 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecee3f10 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee3ee8 <col:17> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.8]->value
  10: ImplicitCastExpr 0x5590ecee3f60 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590ecee3f28 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecee3f10 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee3ee8 <col:17> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.9] (ImplicitCastExpr, LValueToRValue, Value)
  11: DeclRefExpr 0x5590ecee3e70 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
o1
  12: ImplicitCastExpr 0x5590ecee3e98 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3e70 <col:5> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
[B3.11] (ImplicitCastExpr, LValueToRValue, TValue *)
  13: MemberExpr 0x5590ecee3eb0 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecee3e98 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee3e70 <col:5> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
[B3.12]->value
  14: BinaryOperator 0x5590ecee3f78 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590ecee3eb0 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590ecee3e98 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecee3e70 <col:5> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecee3f60 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590ecee3f28 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecee3f10 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee3ee8 <col:17> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.13] = [B3.10]
  15: DeclRefExpr 0x5590ecee4018 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
o2
  16: ImplicitCastExpr 0x5590ecee4040 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee4018 <col:35> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.15] (ImplicitCastExpr, LValueToRValue, const TValue *)
  17: MemberExpr 0x5590ecee4058 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee4040 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee4018 <col:35> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.16]->tt
  18: ImplicitCastExpr 0x5590ecee4090 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590ecee4058 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590ecee4040 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee4018 <col:35> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.17] (ImplicitCastExpr, LValueToRValue, int)
  19: DeclRefExpr 0x5590ecee3fa0 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
o1
  20: ImplicitCastExpr 0x5590ecee3fc8 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3fa0 <col:28> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
[B3.19] (ImplicitCastExpr, LValueToRValue, TValue *)
  21: MemberExpr 0x5590ecee3fe0 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee3fc8 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee3fa0 <col:28> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
[B3.20]->tt
  22: BinaryOperator 0x5590ecee40a8 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590ecee3fe0 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecee3fc8 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecee3fa0 <col:28> 'TValue *' lvalue Var 0x5590ecee3d90 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecee4090 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590ecee4058 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecee4040 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee4018 <col:35> 'const TValue *' lvalue Var 0x5590ecee3ca8 'o2' 'const TValue *'
[B3.21] = [B3.18]
  23: IntegerLiteral 0x5590ecee40d0 <./llimits.h:62:31> 'int' 0
0
  24: CStyleCastExpr 0x5590ecee4100 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecee40d0 <col:31> 'int' 0
(void)[B3.23] (CStyleCastExpr, ToVoid, void)
  25: DeclRefExpr 0x5590ecee41b8 <lvm.c:159:10> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecee0060 'temp' 'TValue':'struct lua_TValue'
temp
  26: UnaryOperator 0x5590ecee41e0 <lvm.c:159:9, col:10> 'TValue *' prefix '&'
`-DeclRefExpr 0x5590ecee41b8 <col:10> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecee0060 'temp' 'TValue':'struct lua_TValue'
&[B3.25]
  27: ImplicitCastExpr 0x5590ecee4200 <lvm.c:159:9, col:10> 'const TValue *' <BitCast>
`-UnaryOperator 0x5590ecee41e0 <col:9, col:10> 'TValue *' prefix '&'
  `-DeclRefExpr 0x5590ecee41b8 <col:10> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecee0060 'temp' 'TValue':'struct lua_TValue'
[B3.26] (ImplicitCastExpr, BitCast, const TValue *)
  28: DeclRefExpr 0x5590ecee4190 <lvm.c:159:5> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
t
  29: BinaryOperator 0x5590ecee4218 <lvm.c:159:5, col:10> 'const TValue *' '='
|-DeclRefExpr 0x5590ecee4190 <col:5> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
`-ImplicitCastExpr 0x5590ecee4200 <col:9, col:10> 'const TValue *' <BitCast>
  `-UnaryOperator 0x5590ecee41e0 <col:9, col:10> 'TValue *' prefix '&'
    `-DeclRefExpr 0x5590ecee41b8 <col:10> 'TValue':'struct lua_TValue' lvalue Var 0x5590ecee0060 'temp' 'TValue':'struct lua_TValue'
[B3.28] = [B3.27]
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x5590ecee39d0 <lvm.c:154:7> 'void (lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)' Function 0x5590ecedb3b0 'callTM' 'void (lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)'
callTM
   2: ImplicitCastExpr 0x5590ecee3b18 <lvm.c:154:7> 'void (*)(lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee39d0 <col:7> 'void (lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)' Function 0x5590ecedb3b0 'callTM' 'void (lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const TValue *, const TValue *, const TValue *, const TValue *))
   3: DeclRefExpr 0x5590ecee39f8 <lvm.c:154:14> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecee3b80 <lvm.c:154:14> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee39f8 <col:14> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecee3a20 <lvm.c:154:17> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
tm
   6: ImplicitCastExpr 0x5590ecee3b98 <lvm.c:154:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3a20 <col:17> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
[B4.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590ecee3a48 <lvm.c:154:21> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
t
   8: ImplicitCastExpr 0x5590ecee3bb0 <lvm.c:154:21> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3a48 <col:21> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B4.7] (ImplicitCastExpr, LValueToRValue, const TValue *)
   9: DeclRefExpr 0x5590ecee3a70 <lvm.c:154:24> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
key
  10: ImplicitCastExpr 0x5590ecee3bc8 <lvm.c:154:24> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3a70 <col:24> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
[B4.9] (ImplicitCastExpr, LValueToRValue, TValue *)
  11: ImplicitCastExpr 0x5590ecee3be0 <lvm.c:154:24> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5590ecee3bc8 <col:24> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee3a70 <col:24> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
[B4.10] (ImplicitCastExpr, BitCast, const TValue *)
  12: DeclRefExpr 0x5590ecee3a98 <lvm.c:154:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
val
  13: ImplicitCastExpr 0x5590ecee3bf8 <lvm.c:154:29> 'StkId':'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3a98 <col:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B4.12] (ImplicitCastExpr, LValueToRValue, StkId)
  14: ImplicitCastExpr 0x5590ecee3c10 <lvm.c:154:29> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5590ecee3bf8 <col:29> 'StkId':'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee3a98 <col:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B4.13] (ImplicitCastExpr, BitCast, const TValue *)
  15: CallExpr 0x5590ecee3b30 <lvm.c:154:7, col:32> 'void'
|-ImplicitCastExpr 0x5590ecee3b18 <col:7> 'void (*)(lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee39d0 <col:7> 'void (lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)' Function 0x5590ecedb3b0 'callTM' 'void (lua_State *, const TValue *, const TValue *, const TValue *, const TValue *)'
|-ImplicitCastExpr 0x5590ecee3b80 <col:14> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee39f8 <col:14> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecee3b98 <col:17> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee3a20 <col:17> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
|-ImplicitCastExpr 0x5590ecee3bb0 <col:21> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee3a48 <col:21> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
|-ImplicitCastExpr 0x5590ecee3be0 <col:24> 'const TValue *' <BitCast>
| `-ImplicitCastExpr 0x5590ecee3bc8 <col:24> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecee3a70 <col:24> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
`-ImplicitCastExpr 0x5590ecee3c10 <col:29> 'const TValue *' <BitCast>
  `-ImplicitCastExpr 0x5590ecee3bf8 <col:29> 'StkId':'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee3a98 <col:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B4.2]([B4.4], [B4.6], [B4.8], [B4.11], [B4.14])
  16: ReturnStmt 0x5590ecee3c28 <lvm.c:155:7>
return;
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x5590ecee3898 <lvm.c:153:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
tm
   2: ImplicitCastExpr 0x5590ecee38e0 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee38c0 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecee3898 <lvm.c:153:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
([B5.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590ecee38f8 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee38e0 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecee38c0 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecee3898 <lvm.c:153:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
[B5.2]->tt
   4: ImplicitCastExpr 0x5590ecee3970 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecee3930 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590ecee38f8 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecee38e0 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecee38c0 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590ecee3898 <lvm.c:153:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
([B5.3]) (ImplicitCastExpr, LValueToRValue, int)
   5: IntegerLiteral 0x5590ecee3950 <./lua.h:80:24> 'int' 6
6
   6: BinaryOperator 0x5590ecee3988 <./lobject.h:90:18, ./lua.h:80:24> 'int' '=='
|-ImplicitCastExpr 0x5590ecee3970 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecee3930 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590ecee38f8 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590ecee38e0 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590ecee38c0 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590ecee3898 <lvm.c:153:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
`-IntegerLiteral 0x5590ecee3950 <./lua.h:80:24> 'int' 6
[B5.4] == [B5.5]
   T: if ([B5.6])
   Preds (3): B6 B7 B13
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x5590ecee36c8 <lvm.c:152:7> 'void (lua_State *, const TValue *, const char *)' Function 0x5590ecea40c0 'luaG_typeerror' 'void (lua_State *, const TValue *, const char *)'
luaG_typeerror
   2: ImplicitCastExpr 0x5590ecee3770 <lvm.c:152:7> 'void (*)(lua_State *, const TValue *, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee36c8 <col:7> 'void (lua_State *, const TValue *, const char *)' Function 0x5590ecea40c0 'luaG_typeerror' 'void (lua_State *, const TValue *, const char *)'
[B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, const TValue *, const char *))
   3: DeclRefExpr 0x5590ecee36f0 <lvm.c:152:22> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecee37c8 <lvm.c:152:22> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee36f0 <col:22> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B6.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecee3718 <lvm.c:152:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
t
   6: ImplicitCastExpr 0x5590ecee37e0 <lvm.c:152:25> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3718 <col:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B6.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: StringLiteral 0x5590ecee3740 <lvm.c:152:28> 'char [6]' lvalue "index"
"index"
   8: ImplicitCastExpr 0x5590ecee37f8 <lvm.c:152:28> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x5590ecee3740 <col:28> 'char [6]' lvalue "index"
[B6.7] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   9: ImplicitCastExpr 0x5590ecee3810 <lvm.c:152:28> 'const char *' <BitCast>
`-ImplicitCastExpr 0x5590ecee37f8 <col:28> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x5590ecee3740 <col:28> 'char [6]' lvalue "index"
[B6.8] (ImplicitCastExpr, BitCast, const char *)
  10: CallExpr 0x5590ecee3788 <lvm.c:152:7, col:35> 'void'
|-ImplicitCastExpr 0x5590ecee3770 <col:7> 'void (*)(lua_State *, const TValue *, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee36c8 <col:7> 'void (lua_State *, const TValue *, const char *)' Function 0x5590ecea40c0 'luaG_typeerror' 'void (lua_State *, const TValue *, const char *)'
|-ImplicitCastExpr 0x5590ecee37c8 <col:22> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee36f0 <col:22> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecee37e0 <col:25> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee3718 <col:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
`-ImplicitCastExpr 0x5590ecee3810 <col:28> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x5590ecee37f8 <col:28> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x5590ecee3740 <col:28> 'char [6]' lvalue "index"
[B6.2]([B6.4], [B6.6], [B6.9])
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: DeclRefExpr 0x5590ecee3468 <lvm.c:151:27> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x5590ece95020 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
luaT_gettmbyobj
   2: ImplicitCastExpr 0x5590ecee3508 <lvm.c:151:27> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee3468 <col:27> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x5590ece95020 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(lua_State *, const TValue *, TMS))
   3: DeclRefExpr 0x5590ecee3490 <lvm.c:151:43> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecee3560 <lvm.c:151:43> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee3490 <col:43> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B7.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecee34b8 <lvm.c:151:46> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
t
   6: ImplicitCastExpr 0x5590ecee3578 <lvm.c:151:46> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee34b8 <col:46> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B7.5] (ImplicitCastExpr, LValueToRValue, const TValue *)
   7: DeclRefExpr 0x5590ecee34e0 <lvm.c:151:49> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
TM_NEWINDEX
   8: ImplicitCastExpr 0x5590ecee3590 <lvm.c:151:49> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590ecee34e0 <col:49> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B7.7] (ImplicitCastExpr, IntegralCast, TMS)
   9: CallExpr 0x5590ecee3520 <lvm.c:151:27, col:60> 'const TValue *'
|-ImplicitCastExpr 0x5590ecee3508 <col:27> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee3468 <col:27> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x5590ece95020 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
|-ImplicitCastExpr 0x5590ecee3560 <col:43> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee3490 <col:43> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecee3578 <col:46> 'const TValue *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee34b8 <col:46> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
`-ImplicitCastExpr 0x5590ecee3590 <col:49> 'TMS':'TMS' <IntegralCast>
  `-DeclRefExpr 0x5590ecee34e0 <col:49> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B7.2]([B7.4], [B7.6], [B7.8])
  10: DeclRefExpr 0x5590ecee3440 <lvm.c:151:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
tm
  11: BinaryOperator 0x5590ecee35a8 <lvm.c:151:22, col:60> 'const TValue *' '='
|-DeclRefExpr 0x5590ecee3440 <col:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
`-CallExpr 0x5590ecee3520 <col:27, col:60> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecee3508 <col:27> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecee3468 <col:27> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x5590ece95020 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
  |-ImplicitCastExpr 0x5590ecee3560 <col:43> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecee3490 <col:43> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
  |-ImplicitCastExpr 0x5590ecee3578 <col:46> 'const TValue *' <LValueToRValue>
  | `-DeclRefExpr 0x5590ecee34b8 <col:46> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
  `-ImplicitCastExpr 0x5590ecee3590 <col:49> 'TMS':'TMS' <IntegralCast>
    `-DeclRefExpr 0x5590ecee34e0 <col:49> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B7.10] = [B7.9]
  12: MemberExpr 0x5590ecee35f0 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ParenExpr 0x5590ecee35d0 <col:19, col:21> 'const TValue *'
  `-BinaryOperator 0x5590ecee35a8 <lvm.c:151:22, col:60> 'const TValue *' '='
    |-DeclRefExpr 0x5590ecee3440 <col:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
    `-CallExpr 0x5590ecee3520 <col:27, col:60> 'const TValue *'
      |-ImplicitCastExpr 0x5590ecee3508 <col:27> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x5590ecee3468 <col:27> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x5590ece95020 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
      |-ImplicitCastExpr 0x5590ecee3560 <col:43> 'lua_State *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecee3490 <col:43> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
      |-ImplicitCastExpr 0x5590ecee3578 <col:46> 'const TValue *' <LValueToRValue>
      | `-DeclRefExpr 0x5590ecee34b8 <col:46> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
      `-ImplicitCastExpr 0x5590ecee3590 <col:49> 'TMS':'TMS' <IntegralCast>
        `-DeclRefExpr 0x5590ecee34e0 <col:49> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
([B7.11])->tt
  13: ImplicitCastExpr 0x5590ecee3668 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecee3628 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590ecee35f0 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ParenExpr 0x5590ecee35d0 <col:19, col:21> 'const TValue *'
      `-BinaryOperator 0x5590ecee35a8 <lvm.c:151:22, col:60> 'const TValue *' '='
        |-DeclRefExpr 0x5590ecee3440 <col:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
        `-CallExpr 0x5590ecee3520 <col:27, col:60> 'const TValue *'
          |-ImplicitCastExpr 0x5590ecee3508 <col:27> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x5590ecee3468 <col:27> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x5590ece95020 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
          |-ImplicitCastExpr 0x5590ecee3560 <col:43> 'lua_State *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecee3490 <col:43> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
          |-ImplicitCastExpr 0x5590ecee3578 <col:46> 'const TValue *' <LValueToRValue>
          | `-DeclRefExpr 0x5590ecee34b8 <col:46> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
          `-ImplicitCastExpr 0x5590ecee3590 <col:49> 'TMS':'TMS' <IntegralCast>
            `-DeclRefExpr 0x5590ecee34e0 <col:49> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
([B7.12]) (ImplicitCastExpr, LValueToRValue, int)
  14: IntegerLiteral 0x5590ecee3648 <./lua.h:74:19> 'int' 0
0
  15: BinaryOperator 0x5590ecee3680 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5590ecee3668 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecee3628 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590ecee35f0 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ParenExpr 0x5590ecee35d0 <col:19, col:21> 'const TValue *'
|       `-BinaryOperator 0x5590ecee35a8 <lvm.c:151:22, col:60> 'const TValue *' '='
|         |-DeclRefExpr 0x5590ecee3440 <col:22> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
|         `-CallExpr 0x5590ecee3520 <col:27, col:60> 'const TValue *'
|           |-ImplicitCastExpr 0x5590ecee3508 <col:27> 'const TValue *(*)(lua_State *, const TValue *, TMS)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x5590ecee3468 <col:27> 'const TValue *(lua_State *, const TValue *, TMS)' Function 0x5590ece95020 'luaT_gettmbyobj' 'const TValue *(lua_State *, const TValue *, TMS)'
|           |-ImplicitCastExpr 0x5590ecee3560 <col:43> 'lua_State *' <LValueToRValue>
|           | `-DeclRefExpr 0x5590ecee3490 <col:43> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
|           |-ImplicitCastExpr 0x5590ecee3578 <col:46> 'const TValue *' <LValueToRValue>
|           | `-DeclRefExpr 0x5590ecee34b8 <col:46> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
|           `-ImplicitCastExpr 0x5590ecee3590 <col:49> 'TMS':'TMS' <IntegralCast>
|             `-DeclRefExpr 0x5590ecee34e0 <col:49> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
`-IntegerLiteral 0x5590ecee3648 <./lua.h:74:19> 'int' 0
[B7.13] == [B7.14]
   T: if ([B7.15])
   Preds (1): B21
   Succs (2): B6 B5

 [B8]
   1: ReturnStmt 0x5590ecee3388 <lvm.c:147:9>
return;
   Preds (4): B9 B10 B11 B12
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x5590ecee25d8 <./lgc.h:90:2> 'void (lua_State *, Table *)' Function 0x5590eceb2af0 'luaC_barrierback' 'void (lua_State *, Table *)'
luaC_barrierback
   2: ImplicitCastExpr 0x5590ecee32a8 <./lgc.h:90:2> 'void (*)(lua_State *, Table *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee25d8 <col:2> 'void (lua_State *, Table *)' Function 0x5590eceb2af0 'luaC_barrierback' 'void (lua_State *, Table *)'
[B9.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, Table *))
   3: DeclRefExpr 0x5590ecee2600 <lvm.c:146:23> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
L
   4: ImplicitCastExpr 0x5590ecee32f8 <lvm.c:146:23> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee2600 <col:23> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B9.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x5590ecee2628 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
h
   6: ImplicitCastExpr 0x5590ecee3310 <lvm.c:146:26> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee2628 <col:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B9.5] (ImplicitCastExpr, LValueToRValue, Table *)
   7: CallExpr 0x5590ecee32c0 <./lgc.h:90:2, col:22> 'void'
|-ImplicitCastExpr 0x5590ecee32a8 <col:2> 'void (*)(lua_State *, Table *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee25d8 <col:2> 'void (lua_State *, Table *)' Function 0x5590eceb2af0 'luaC_barrierback' 'void (lua_State *, Table *)'
|-ImplicitCastExpr 0x5590ecee32f8 <lvm.c:146:23> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee2600 <col:23> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
`-ImplicitCastExpr 0x5590ecee3310 <col:26> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee2628 <col:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B9.2]([B9.4], [B9.6])
   Preds (1): B10
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
h
   2: ImplicitCastExpr 0x5590ecee2340 <./llimits.h:75:26, col:30> 'Table *' <LValueToRValue>
`-ParenExpr 0x5590ecee2320 <col:26, col:30> 'Table *' lvalue
  `-ParenExpr 0x5590ecee22c0 <./lstate.h:162:38, col:40> 'Table *' lvalue
    `-DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
(([B10.1])) (ImplicitCastExpr, LValueToRValue, Table *)
   3: CStyleCastExpr 0x5590ecee2358 <./llimits.h:75:23, col:30> 'GCObject *' <BitCast>
`-ImplicitCastExpr 0x5590ecee2340 <col:26, col:30> 'Table *' <LValueToRValue>
  `-ParenExpr 0x5590ecee2320 <col:26, col:30> 'Table *' lvalue
    `-ParenExpr 0x5590ecee22c0 <./lstate.h:162:38, col:40> 'Table *' lvalue
      `-DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
(GCObject *)[B10.2] (CStyleCastExpr, BitCast, GCObject *)
   4: MemberExpr 0x5590ecee23e0 <./lgc.h:66:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
`-ParenExpr 0x5590ecee23c0 <col:33, col:35> 'GCObject *'
  `-ParenExpr 0x5590ecee23a0 <./lstate.h:162:20, col:42> 'GCObject *'
    `-ParenExpr 0x5590ecee2380 <./llimits.h:75:22, col:31> 'GCObject *'
      `-CStyleCastExpr 0x5590ecee2358 <col:23, col:30> 'GCObject *' <BitCast>
        `-ImplicitCastExpr 0x5590ecee2340 <col:26, col:30> 'Table *' <LValueToRValue>
          `-ParenExpr 0x5590ecee2320 <col:26, col:30> 'Table *' lvalue
            `-ParenExpr 0x5590ecee22c0 <./lstate.h:162:38, col:40> 'Table *' lvalue
              `-DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
((([B10.3])))->gch
   5: MemberExpr 0x5590ecee2418 <./lgc.h:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
`-MemberExpr 0x5590ecee23e0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
  `-ParenExpr 0x5590ecee23c0 <col:33, col:35> 'GCObject *'
    `-ParenExpr 0x5590ecee23a0 <./lstate.h:162:20, col:42> 'GCObject *'
      `-ParenExpr 0x5590ecee2380 <./llimits.h:75:22, col:31> 'GCObject *'
        `-CStyleCastExpr 0x5590ecee2358 <col:23, col:30> 'GCObject *' <BitCast>
          `-ImplicitCastExpr 0x5590ecee2340 <col:26, col:30> 'Table *' <LValueToRValue>
            `-ParenExpr 0x5590ecee2320 <col:26, col:30> 'Table *' lvalue
              `-ParenExpr 0x5590ecee22c0 <./lstate.h:162:38, col:40> 'Table *' lvalue
                `-DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B10.4].marked
   6: ImplicitCastExpr 0x5590ecee2538 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x5590ecee2450 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x5590ecee2418 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
    `-MemberExpr 0x5590ecee23e0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
      `-ParenExpr 0x5590ecee23c0 <col:33, col:35> 'GCObject *'
        `-ParenExpr 0x5590ecee23a0 <./lstate.h:162:20, col:42> 'GCObject *'
          `-ParenExpr 0x5590ecee2380 <./llimits.h:75:22, col:31> 'GCObject *'
            `-CStyleCastExpr 0x5590ecee2358 <col:23, col:30> 'GCObject *' <BitCast>
              `-ImplicitCastExpr 0x5590ecee2340 <col:26, col:30> 'Table *' <LValueToRValue>
                `-ParenExpr 0x5590ecee2320 <col:26, col:30> 'Table *' lvalue
                  `-ParenExpr 0x5590ecee22c0 <./lstate.h:162:38, col:40> 'Table *' lvalue
                    `-DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
([B10.5]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x5590ecee2550 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecee2538 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x5590ecee2450 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x5590ecee2418 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
      `-MemberExpr 0x5590ecee23e0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
        `-ParenExpr 0x5590ecee23c0 <col:33, col:35> 'GCObject *'
          `-ParenExpr 0x5590ecee23a0 <./lstate.h:162:20, col:42> 'GCObject *'
            `-ParenExpr 0x5590ecee2380 <./llimits.h:75:22, col:31> 'GCObject *'
              `-CStyleCastExpr 0x5590ecee2358 <col:23, col:30> 'GCObject *' <BitCast>
                `-ImplicitCastExpr 0x5590ecee2340 <col:26, col:30> 'Table *' <LValueToRValue>
                  `-ParenExpr 0x5590ecee2320 <col:26, col:30> 'Table *' lvalue
                    `-ParenExpr 0x5590ecee22c0 <./lstate.h:162:38, col:40> 'Table *' lvalue
                      `-DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B10.6] (ImplicitCastExpr, IntegralCast, int)
   8: IntegerLiteral 0x5590ecee2470 <./lgc.h:30:21> 'int' 1
1
   9: IntegerLiteral 0x5590ecee2490 <./lgc.h:56:18> 'int' 2
2
  10: BinaryOperator 0x5590ecee24d0 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x5590ecee2470 <col:21> 'int' 1
`-ParenExpr 0x5590ecee24b0 <col:24, col:26> 'int'
  `-IntegerLiteral 0x5590ecee2490 <line:56:18> 'int' 2
[B10.8] << ([B10.9])
  11: BinaryOperator 0x5590ecee2568 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x5590ecee2550 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5590ecee2538 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x5590ecee2450 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x5590ecee2418 <line:66:33, col:42> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
|       `-MemberExpr 0x5590ecee23e0 <col:33, col:38> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
|         `-ParenExpr 0x5590ecee23c0 <col:33, col:35> 'GCObject *'
|           `-ParenExpr 0x5590ecee23a0 <./lstate.h:162:20, col:42> 'GCObject *'
|             `-ParenExpr 0x5590ecee2380 <./llimits.h:75:22, col:31> 'GCObject *'
|               `-CStyleCastExpr 0x5590ecee2358 <col:23, col:30> 'GCObject *' <BitCast>
|                 `-ImplicitCastExpr 0x5590ecee2340 <col:26, col:30> 'Table *' <LValueToRValue>
|                   `-ParenExpr 0x5590ecee2320 <col:26, col:30> 'Table *' lvalue
|                     `-ParenExpr 0x5590ecee22c0 <./lstate.h:162:38, col:40> 'Table *' lvalue
|                       `-DeclRefExpr 0x5590ecee2298 <lvm.c:146:26> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
`-ParenExpr 0x5590ecee2518 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x5590ecee24f8 <line:30:20, col:27> 'int'
    `-BinaryOperator 0x5590ecee24d0 <col:21, col:26> 'int' '<<'
      |-IntegerLiteral 0x5590ecee2470 <col:21> 'int' 1
      `-ParenExpr 0x5590ecee24b0 <col:24, col:26> 'int'
        `-IntegerLiteral 0x5590ecee2490 <line:56:18> 'int' 2
[B10.7] & (([B10.10]))
   T: if (([B12.37]) && ([B11.17])) && ([B10.11])
   Preds (1): B11
   Succs (2): B9 B8

 [B11]
   1: DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
val
   2: ImplicitCastExpr 0x5590ecee1e90 <./lobject.h:91:48, col:50> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
([B11.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: MemberExpr 0x5590ecee1ea8 <./lobject.h:91:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B11.2]->value
   4: MemberExpr 0x5590ecee1ee0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecee1ea8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
      `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B11.3].gc
   5: ImplicitCastExpr 0x5590ecee1f58 <./lgc.h:65:35, col:37> 'GCObject *' <LValueToRValue>
`-ParenExpr 0x5590ecee1f38 <col:35, col:37> 'GCObject *' lvalue
  `-ParenExpr 0x5590ecee1f18 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
    `-MemberExpr 0x5590ecee1ee0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecee1ea8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
          `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
            `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
(([B11.4])) (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x5590ecee1f70 <./lgc.h:65:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
`-ImplicitCastExpr 0x5590ecee1f58 <col:35, col:37> 'GCObject *' <LValueToRValue>
  `-ParenExpr 0x5590ecee1f38 <col:35, col:37> 'GCObject *' lvalue
    `-ParenExpr 0x5590ecee1f18 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
      `-MemberExpr 0x5590ecee1ee0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x5590ece76aa0
        `-MemberExpr 0x5590ecee1ea8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
          `-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
            `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
              `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B11.5]->gch
   7: MemberExpr 0x5590ecee1fa8 <./lgc.h:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
`-MemberExpr 0x5590ecee1f70 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
  `-ImplicitCastExpr 0x5590ecee1f58 <col:35, col:37> 'GCObject *' <LValueToRValue>
    `-ParenExpr 0x5590ecee1f38 <col:35, col:37> 'GCObject *' lvalue
      `-ParenExpr 0x5590ecee1f18 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
        `-MemberExpr 0x5590ecee1ee0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x5590ece76aa0
          `-MemberExpr 0x5590ecee1ea8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
            `-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
              `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
                `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B11.6].marked
   8: ImplicitCastExpr 0x5590ecee21d8 <./lgc.h:29:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
`-ParenExpr 0x5590ecee1fe0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
  `-MemberExpr 0x5590ecee1fa8 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
    `-MemberExpr 0x5590ecee1f70 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
      `-ImplicitCastExpr 0x5590ecee1f58 <col:35, col:37> 'GCObject *' <LValueToRValue>
        `-ParenExpr 0x5590ecee1f38 <col:35, col:37> 'GCObject *' lvalue
          `-ParenExpr 0x5590ecee1f18 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
            `-MemberExpr 0x5590ecee1ee0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x5590ece76aa0
              `-MemberExpr 0x5590ecee1ea8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
                `-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                  `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
                    `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
([B11.7]) (ImplicitCastExpr, LValueToRValue, lu_byte)
   9: ImplicitCastExpr 0x5590ecee21f0 <./lgc.h:29:24, col:26> 'int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecee21d8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
  `-ParenExpr 0x5590ecee1fe0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
    `-MemberExpr 0x5590ecee1fa8 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
      `-MemberExpr 0x5590ecee1f70 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
        `-ImplicitCastExpr 0x5590ecee1f58 <col:35, col:37> 'GCObject *' <LValueToRValue>
          `-ParenExpr 0x5590ecee1f38 <col:35, col:37> 'GCObject *' lvalue
            `-ParenExpr 0x5590ecee1f18 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
              `-MemberExpr 0x5590ecee1ee0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x5590ece76aa0
                `-MemberExpr 0x5590ecee1ea8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
                  `-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
                    `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
                      `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B11.8] (ImplicitCastExpr, IntegralCast, int)
  10: IntegerLiteral 0x5590ecee2000 <./lgc.h:30:21> 'int' 1
1
  11: IntegerLiteral 0x5590ecee2020 <./lgc.h:54:19> 'int' 0
0
  12: BinaryOperator 0x5590ecee2060 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x5590ecee2000 <col:21> 'int' 1
`-ParenExpr 0x5590ecee2040 <col:24, col:26> 'int'
  `-IntegerLiteral 0x5590ecee2020 <line:54:19> 'int' 0
[B11.10] << ([B11.11])
  13: IntegerLiteral 0x5590ecee20a8 <./lgc.h:30:21> 'int' 1
1
  14: IntegerLiteral 0x5590ecee20c8 <./lgc.h:55:19> 'int' 1
1
  15: BinaryOperator 0x5590ecee2108 <./lgc.h:30:21, col:26> 'int' '<<'
|-IntegerLiteral 0x5590ecee20a8 <col:21> 'int' 1
`-ParenExpr 0x5590ecee20e8 <col:24, col:26> 'int'
  `-IntegerLiteral 0x5590ecee20c8 <line:55:19> 'int' 1
[B11.13] << ([B11.14])
  16: BinaryOperator 0x5590ecee2150 <./lgc.h:30:20, col:27> 'int' '|'
|-ParenExpr 0x5590ecee2088 <col:20, col:27> 'int'
| `-BinaryOperator 0x5590ecee2060 <col:21, col:26> 'int' '<<'
|   |-IntegerLiteral 0x5590ecee2000 <col:21> 'int' 1
|   `-ParenExpr 0x5590ecee2040 <col:24, col:26> 'int'
|     `-IntegerLiteral 0x5590ecee2020 <line:54:19> 'int' 0
`-ParenExpr 0x5590ecee2130 <line:30:20, col:27> 'int'
  `-BinaryOperator 0x5590ecee2108 <col:21, col:26> 'int' '<<'
    |-IntegerLiteral 0x5590ecee20a8 <col:21> 'int' 1
    `-ParenExpr 0x5590ecee20e8 <col:24, col:26> 'int'
      `-IntegerLiteral 0x5590ecee20c8 <line:55:19> 'int' 1
([B11.12]) | ([B11.15])
  17: BinaryOperator 0x5590ecee2208 <./lgc.h:29:24, col:32> 'int' '&'
|-ImplicitCastExpr 0x5590ecee21f0 <col:24, col:26> 'int' <IntegralCast>
| `-ImplicitCastExpr 0x5590ecee21d8 <col:24, col:26> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-ParenExpr 0x5590ecee1fe0 <col:24, col:26> 'lu_byte':'unsigned char' lvalue
|     `-MemberExpr 0x5590ecee1fa8 <line:65:35, col:44> 'lu_byte':'unsigned char' lvalue .marked 0x5590ece768d8
|       `-MemberExpr 0x5590ecee1f70 <col:35, col:40> 'GCheader':'struct GCheader' lvalue ->gch 0x5590ecea3700
|         `-ImplicitCastExpr 0x5590ecee1f58 <col:35, col:37> 'GCObject *' <LValueToRValue>
|           `-ParenExpr 0x5590ecee1f38 <col:35, col:37> 'GCObject *' lvalue
|             `-ParenExpr 0x5590ecee1f18 <./llimits.h:63:25, col:27> 'GCObject *' lvalue
|               `-MemberExpr 0x5590ecee1ee0 <./lobject.h:91:48, col:59> 'GCObject *' lvalue .gc 0x5590ece76aa0
|                 `-MemberExpr 0x5590ecee1ea8 <col:48, col:53> 'Value':'Value' lvalue ->value 0x5590ece76da0
|                   `-ImplicitCastExpr 0x5590ecee1e90 <col:48, col:50> 'StkId':'TValue *' <LValueToRValue>
|                     `-ParenExpr 0x5590ecee1e70 <col:48, col:50> 'StkId':'TValue *' lvalue
|                       `-DeclRefExpr 0x5590ecee1e48 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
`-ParenExpr 0x5590ecee21b8 <./lgc.h:29:30, col:32> 'int'
  `-ParenExpr 0x5590ecee2198 <line:37:40, col:57> 'int'
    `-ParenExpr 0x5590ecee2178 <line:31:25, col:51> 'int'
      `-BinaryOperator 0x5590ecee2150 <line:30:20, col:27> 'int' '|'
        |-ParenExpr 0x5590ecee2088 <col:20, col:27> 'int'
        | `-BinaryOperator 0x5590ecee2060 <col:21, col:26> 'int' '<<'
        |   |-IntegerLiteral 0x5590ecee2000 <col:21> 'int' 1
        |   `-ParenExpr 0x5590ecee2040 <col:24, col:26> 'int'
        |     `-IntegerLiteral 0x5590ecee2020 <line:54:19> 'int' 0
        `-ParenExpr 0x5590ecee2130 <line:30:20, col:27> 'int'
          `-BinaryOperator 0x5590ecee2108 <col:21, col:26> 'int' '<<'
            |-IntegerLiteral 0x5590ecee20a8 <col:21> 'int' 1
            `-ParenExpr 0x5590ecee20e8 <col:24, col:26> 'int'
              `-IntegerLiteral 0x5590ecee20c8 <line:55:19> 'int' 1
[B11.9] & ((([B11.16])))
   T: (([B12.37]) && ([B11.17])) && ...
   Preds (1): B12
   Succs (2): B10 B8

 [B12]
   1: DeclRefExpr 0x5590ecee17a0 <lvm.c:144:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
val
   2: ImplicitCastExpr 0x5590ecee17e8 <./lobject.h:162:22, col:27> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee17c8 <col:22, col:27> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecee17a0 <lvm.c:144:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
([B12.1]) (ImplicitCastExpr, LValueToRValue, StkId)
   3: ImplicitCastExpr 0x5590ecee1800 <./lobject.h:162:22, col:27> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5590ecee17e8 <col:22, col:27> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecee17c8 <col:22, col:27> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x5590ecee17a0 <lvm.c:144:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B12.2] (ImplicitCastExpr, BitCast, const TValue *)
   4: DeclStmt 0x5590ecee1818 <./lobject.h:162:5, col:28>col:19
`-VarDecl 0x5590ecee1740 <col:5, col:27> col:19 used o2 'const TValue *' cinit
  `-ImplicitCastExpr 0x5590ecee1800 <col:22, col:27> 'const TValue *' <BitCast>
    `-ImplicitCastExpr 0x5590ecee17e8 <col:22, col:27> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecee17c8 <col:22, col:27> 'StkId':'TValue *' lvalue
        `-DeclRefExpr 0x5590ecee17a0 <lvm.c:144:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
const TValue *o2 = (val);
   5: DeclRefExpr 0x5590ecee18a0 <lvm.c:144:21> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
oldval
   6: ImplicitCastExpr 0x5590ecee18e8 <./lobject.h:162:41, col:46> 'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee18c8 <col:41, col:46> 'TValue *' lvalue
  `-DeclRefExpr 0x5590ecee18a0 <lvm.c:144:21> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
([B12.5]) (ImplicitCastExpr, LValueToRValue, TValue *)
   7: DeclStmt 0x5590ecee1900 <./lobject.h:162:30, col:47>col:38
`-VarDecl 0x5590ecee1840 <col:30, col:46> col:38 used o1 'TValue *' cinit
  `-ImplicitCastExpr 0x5590ecee18e8 <col:41, col:46> 'TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecee18c8 <col:41, col:46> 'TValue *' lvalue
      `-DeclRefExpr 0x5590ecee18a0 <lvm.c:144:21> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
TValue *o1 = (oldval);
   8: DeclRefExpr 0x5590ecee1990 <./lobject.h:163:17> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
o2
   9: ImplicitCastExpr 0x5590ecee19b8 <./lobject.h:163:17> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee1990 <col:17> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.8] (ImplicitCastExpr, LValueToRValue, const TValue *)
  10: MemberExpr 0x5590ecee19d0 <./lobject.h:163:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecee19b8 <col:17> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee1990 <col:17> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.9]->value
  11: ImplicitCastExpr 0x5590ecee1a08 <./lobject.h:163:17, col:21> 'Value':'Value' <LValueToRValue>
`-MemberExpr 0x5590ecee19d0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecee19b8 <col:17> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee1990 <col:17> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.10] (ImplicitCastExpr, LValueToRValue, Value)
  12: DeclRefExpr 0x5590ecee1918 <./lobject.h:163:5> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
o1
  13: ImplicitCastExpr 0x5590ecee1940 <./lobject.h:163:5> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee1918 <col:5> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
[B12.12] (ImplicitCastExpr, LValueToRValue, TValue *)
  14: MemberExpr 0x5590ecee1958 <./lobject.h:163:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecee1940 <col:5> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee1918 <col:5> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
[B12.13]->value
  15: BinaryOperator 0x5590ecee1a20 <./lobject.h:163:5, col:21> 'Value':'Value' '='
|-MemberExpr 0x5590ecee1958 <col:5, col:9> 'Value':'Value' lvalue ->value 0x5590ece76da0
| `-ImplicitCastExpr 0x5590ecee1940 <col:5> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecee1918 <col:5> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecee1a08 <col:17, col:21> 'Value':'Value' <LValueToRValue>
  `-MemberExpr 0x5590ecee19d0 <col:17, col:21> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecee19b8 <col:17> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee1990 <col:17> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.14] = [B12.11]
  16: DeclRefExpr 0x5590ecee1ac0 <./lobject.h:163:35> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
o2
  17: ImplicitCastExpr 0x5590ecee1ae8 <./lobject.h:163:35> 'const TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee1ac0 <col:35> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.16] (ImplicitCastExpr, LValueToRValue, const TValue *)
  18: MemberExpr 0x5590ecee1b00 <./lobject.h:163:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee1ae8 <col:35> 'const TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee1ac0 <col:35> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.17]->tt
  19: ImplicitCastExpr 0x5590ecee1b38 <./lobject.h:163:35, col:39> 'int' <LValueToRValue>
`-MemberExpr 0x5590ecee1b00 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
  `-ImplicitCastExpr 0x5590ecee1ae8 <col:35> 'const TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee1ac0 <col:35> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.18] (ImplicitCastExpr, LValueToRValue, int)
  20: DeclRefExpr 0x5590ecee1a48 <./lobject.h:163:28> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
o1
  21: ImplicitCastExpr 0x5590ecee1a70 <./lobject.h:163:28> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee1a48 <col:28> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
[B12.20] (ImplicitCastExpr, LValueToRValue, TValue *)
  22: MemberExpr 0x5590ecee1a88 <./lobject.h:163:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee1a70 <col:28> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee1a48 <col:28> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
[B12.21]->tt
  23: BinaryOperator 0x5590ecee1b50 <./lobject.h:163:28, col:39> 'int' '='
|-MemberExpr 0x5590ecee1a88 <col:28, col:32> 'int' lvalue ->tt 0x5590ece76e00
| `-ImplicitCastExpr 0x5590ecee1a70 <col:28> 'TValue *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecee1a48 <col:28> 'TValue *' lvalue Var 0x5590ecee1840 'o1' 'TValue *'
`-ImplicitCastExpr 0x5590ecee1b38 <col:35, col:39> 'int' <LValueToRValue>
  `-MemberExpr 0x5590ecee1b00 <col:35, col:39> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecee1ae8 <col:35> 'const TValue *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee1ac0 <col:35> 'const TValue *' lvalue Var 0x5590ecee1740 'o2' 'const TValue *'
[B12.22] = [B12.19]
  24: IntegerLiteral 0x5590ecee1b78 <./llimits.h:62:31> 'int' 0
0
  25: CStyleCastExpr 0x5590ecee1ba8 <./llimits.h:62:25, col:31> 'void' <ToVoid>
`-IntegerLiteral 0x5590ecee1b78 <col:31> 'int' 0
(void)[B12.24] (CStyleCastExpr, ToVoid, void)
  26: IntegerLiteral 0x5590ecee1cb0 <lvm.c:145:20> 'int' 0
0
  27: ImplicitCastExpr 0x5590ecee1cd0 <lvm.c:145:20> 'lu_byte':'unsigned char' <IntegralCast>
`-IntegerLiteral 0x5590ecee1cb0 <col:20> 'int' 0
[B12.26] (ImplicitCastExpr, IntegralCast, lu_byte)
  28: DeclRefExpr 0x5590ecee1c38 <lvm.c:145:9> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
h
  29: ImplicitCastExpr 0x5590ecee1c60 <lvm.c:145:9> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee1c38 <col:9> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B12.28] (ImplicitCastExpr, LValueToRValue, Table *)
  30: MemberExpr 0x5590ecee1c78 <lvm.c:145:9, col:12> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
`-ImplicitCastExpr 0x5590ecee1c60 <col:9> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee1c38 <col:9> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B12.29]->flags
  31: BinaryOperator 0x5590ecee1ce8 <lvm.c:145:9, col:20> 'lu_byte':'unsigned char' '='
|-MemberExpr 0x5590ecee1c78 <col:9, col:12> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
| `-ImplicitCastExpr 0x5590ecee1c60 <col:9> 'Table *' <LValueToRValue>
|   `-DeclRefExpr 0x5590ecee1c38 <col:9> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
`-ImplicitCastExpr 0x5590ecee1cd0 <col:20> 'lu_byte':'unsigned char' <IntegralCast>
  `-IntegerLiteral 0x5590ecee1cb0 <col:20> 'int' 0
[B12.30] = [B12.27]
  32: DeclRefExpr 0x5590ecee1d10 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
val
  33: ImplicitCastExpr 0x5590ecee1d58 <./lobject.h:90:19, col:21> 'StkId':'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee1d38 <col:19, col:21> 'StkId':'TValue *' lvalue
  `-DeclRefExpr 0x5590ecee1d10 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
([B12.32]) (ImplicitCastExpr, LValueToRValue, StkId)
  34: MemberExpr 0x5590ecee1d70 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee1d58 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecee1d38 <col:19, col:21> 'StkId':'TValue *' lvalue
    `-DeclRefExpr 0x5590ecee1d10 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
[B12.33]->tt
  35: ImplicitCastExpr 0x5590ecee1de8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecee1da8 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecee1d70 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecee1d58 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecee1d38 <col:19, col:21> 'StkId':'TValue *' lvalue
        `-DeclRefExpr 0x5590ecee1d10 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
([B12.34]) (ImplicitCastExpr, LValueToRValue, int)
  36: IntegerLiteral 0x5590ecee1dc8 <./lua.h:78:22> 'int' 4
4
  37: BinaryOperator 0x5590ecee1e00 <./lobject.h:90:18, ./lua.h:78:22> 'int' '>='
|-ImplicitCastExpr 0x5590ecee1de8 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecee1da8 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecee1d70 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590ecee1d58 <col:19, col:21> 'StkId':'TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590ecee1d38 <col:19, col:21> 'StkId':'TValue *' lvalue
|         `-DeclRefExpr 0x5590ecee1d10 <lvm.c:146:29> 'StkId':'TValue *' lvalue ParmVar 0x5590ecedfe18 'val' 'StkId':'TValue *'
`-IntegerLiteral 0x5590ecee1dc8 <./lua.h:78:22> 'int' 4
[B12.35] >= [B12.36]
   T: ([B12.37]) && ...
   Preds (2): B13 B20
   Succs (2): B11 B8

 [B13]
   1: ConditionalOperator 0x5590ecee15b0 <./ltm.h:41:26, line:42:70> 'const TValue *'
|-BinaryOperator 0x5590ecee0f40 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
| |-ImplicitCastExpr 0x5590ecee0f10 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
| | `-ParenExpr 0x5590ecee0e70 <col:26, col:29> 'struct Table *' lvalue
| |   `-MemberExpr 0x5590ecee0e38 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
| |     `-ImplicitCastExpr 0x5590ecee0e20 <col:27> 'Table *' <LValueToRValue>
| |       `-DeclRefExpr 0x5590ecee0df8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
| `-ImplicitCastExpr 0x5590ecee0f28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
|   `-ParenExpr 0x5590ecee0ef0 <col:16, col:25> 'void *'
|     `-CStyleCastExpr 0x5590ecee0ec8 <col:17, col:24> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x5590ecee0e90 <col:24> 'int' 0
|-ImplicitCastExpr 0x5590ecee1598 <col:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x5590ecee0fc8 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x5590ecee0fa0 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5590ecee0f68 <col:24> 'int' 0
`-ConditionalOperator 0x5590ecee1568 <./ltm.h:42:3, col:70> 'const TValue *'
  |-ParenExpr 0x5590ecee11d8 <col:3, col:27> 'unsigned int'
  | `-BinaryOperator 0x5590ecee11b0 <col:4, col:26> 'unsigned int' '&'
  |   |-ImplicitCastExpr 0x5590ecee1198 <col:4, col:10> 'unsigned int' <IntegralCast>
  |   | `-ImplicitCastExpr 0x5590ecee1180 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  |   |   `-MemberExpr 0x5590ecee1098 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
  |   |     `-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
  |   |       `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
  |   |         `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
  |   |           `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
  |   |             `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
  |   `-ParenExpr 0x5590ecee1160 <./ltm.h:42:18, col:26> 'unsigned int'
  |     `-BinaryOperator 0x5590ecee1138 <col:19, col:25> 'unsigned int' '<<'
  |       |-IntegerLiteral 0x5590ecee10d0 <col:19> 'unsigned int' 1
  |       `-ParenExpr 0x5590ecee1118 <col:23, col:25> 'int'
  |         `-DeclRefExpr 0x5590ecee10f0 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
  |-ImplicitCastExpr 0x5590ecee1550 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
  | `-ParenExpr 0x5590ecee1258 <col:16, col:25> 'void *'
  |   `-CStyleCastExpr 0x5590ecee1230 <col:17, col:24> 'void *' <NullToPointer>
  |     `-IntegerLiteral 0x5590ecee11f8 <col:24> 'int' 0
  `-CallExpr 0x5590ecee14c8 <./ltm.h:42:38, col:70> 'const TValue *'
    |-ImplicitCastExpr 0x5590ecee14b0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590ecee1278 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
    |-ImplicitCastExpr 0x5590ecee1508 <lvm.c:143:27, col:30> 'struct Table *' <LValueToRValue>
    | `-MemberExpr 0x5590ecee12e0 <col:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
    |   `-ImplicitCastExpr 0x5590ecee12c8 <col:27> 'Table *' <LValueToRValue>
    |     `-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
    |-ImplicitCastExpr 0x5590ecee1520 <col:41> 'TMS':'TMS' <IntegralCast>
    | `-DeclRefExpr 0x5590ecee1318 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
    `-ImplicitCastExpr 0x5590ecee1538 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
      `-ArraySubscriptExpr 0x5590ecee1488 <col:56, col:69> 'TString *' lvalue
        |-ImplicitCastExpr 0x5590ecee1470 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
        | `-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
        |   `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
        |     `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
        |       `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        |         `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
        |           `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
        |             `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
        `-DeclRefExpr 0x5590ecee1448 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B19.8] ? [B14.3] : [B15.1]
   2: DeclRefExpr 0x5590ecee0dd0 <lvm.c:143:12> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
tm
   3: BinaryOperator 0x5590ecee1600 <lvm.c:143:12, ./ltm.h:42:71> 'const TValue *' '='
|-DeclRefExpr 0x5590ecee0dd0 <lvm.c:143:12> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
`-ParenExpr 0x5590ecee15e0 <./ltm.h:41:25, line:42:71> 'const TValue *'
  `-ConditionalOperator 0x5590ecee15b0 <line:41:26, line:42:70> 'const TValue *'
    |-BinaryOperator 0x5590ecee0f40 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
    | |-ImplicitCastExpr 0x5590ecee0f10 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
    | | `-ParenExpr 0x5590ecee0e70 <col:26, col:29> 'struct Table *' lvalue
    | |   `-MemberExpr 0x5590ecee0e38 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
    | |     `-ImplicitCastExpr 0x5590ecee0e20 <col:27> 'Table *' <LValueToRValue>
    | |       `-DeclRefExpr 0x5590ecee0df8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
    | `-ImplicitCastExpr 0x5590ecee0f28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
    |   `-ParenExpr 0x5590ecee0ef0 <col:16, col:25> 'void *'
    |     `-CStyleCastExpr 0x5590ecee0ec8 <col:17, col:24> 'void *' <NullToPointer>
    |       `-IntegerLiteral 0x5590ecee0e90 <col:24> 'int' 0
    |-ImplicitCastExpr 0x5590ecee1598 <col:16, col:25> 'const TValue *' <NullToPointer>
    | `-ParenExpr 0x5590ecee0fc8 <col:16, col:25> 'void *'
    |   `-CStyleCastExpr 0x5590ecee0fa0 <col:17, col:24> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5590ecee0f68 <col:24> 'int' 0
    `-ConditionalOperator 0x5590ecee1568 <./ltm.h:42:3, col:70> 'const TValue *'
      |-ParenExpr 0x5590ecee11d8 <col:3, col:27> 'unsigned int'
      | `-BinaryOperator 0x5590ecee11b0 <col:4, col:26> 'unsigned int' '&'
      |   |-ImplicitCastExpr 0x5590ecee1198 <col:4, col:10> 'unsigned int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x5590ecee1180 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
      |   |   `-MemberExpr 0x5590ecee1098 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
      |   |     `-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
      |   |       `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
      |   |         `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
      |   |           `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
      |   |             `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
      |   `-ParenExpr 0x5590ecee1160 <./ltm.h:42:18, col:26> 'unsigned int'
      |     `-BinaryOperator 0x5590ecee1138 <col:19, col:25> 'unsigned int' '<<'
      |       |-IntegerLiteral 0x5590ecee10d0 <col:19> 'unsigned int' 1
      |       `-ParenExpr 0x5590ecee1118 <col:23, col:25> 'int'
      |         `-DeclRefExpr 0x5590ecee10f0 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
      |-ImplicitCastExpr 0x5590ecee1550 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
      | `-ParenExpr 0x5590ecee1258 <col:16, col:25> 'void *'
      |   `-CStyleCastExpr 0x5590ecee1230 <col:17, col:24> 'void *' <NullToPointer>
      |     `-IntegerLiteral 0x5590ecee11f8 <col:24> 'int' 0
      `-CallExpr 0x5590ecee14c8 <./ltm.h:42:38, col:70> 'const TValue *'
        |-ImplicitCastExpr 0x5590ecee14b0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5590ecee1278 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
        |-ImplicitCastExpr 0x5590ecee1508 <lvm.c:143:27, col:30> 'struct Table *' <LValueToRValue>
        | `-MemberExpr 0x5590ecee12e0 <col:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
        |   `-ImplicitCastExpr 0x5590ecee12c8 <col:27> 'Table *' <LValueToRValue>
        |     `-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
        |-ImplicitCastExpr 0x5590ecee1520 <col:41> 'TMS':'TMS' <IntegralCast>
        | `-DeclRefExpr 0x5590ecee1318 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
        `-ImplicitCastExpr 0x5590ecee1538 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
          `-ArraySubscriptExpr 0x5590ecee1488 <col:56, col:69> 'TString *' lvalue
            |-ImplicitCastExpr 0x5590ecee1470 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
            | `-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
            |   `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
            |     `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
            |       `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
            |         `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
            |           `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
            |             `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
            `-DeclRefExpr 0x5590ecee1448 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B13.2] = ([B13.1])
   4: IntegerLiteral 0x5590ecee1648 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   5: CStyleCastExpr 0x5590ecee1680 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee1648 <col:24> 'int' 0
(void *)[B13.4] (CStyleCastExpr, NullToPointer, void *)
   6: ImplicitCastExpr 0x5590ecee16c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
`-ParenExpr 0x5590ecee16a8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee1680 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee1648 <col:24> 'int' 0
([B13.5]) (ImplicitCastExpr, BitCast, const TValue *)
   7: BinaryOperator 0x5590ecee16e0 <lvm.c:143:11, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ParenExpr 0x5590ecee1628 <lvm.c:143:11, col:53> 'const TValue *'
| `-BinaryOperator 0x5590ecee1600 <col:12, ./ltm.h:42:71> 'const TValue *' '='
|   |-DeclRefExpr 0x5590ecee0dd0 <lvm.c:143:12> 'const TValue *' lvalue Var 0x5590ecee06a0 'tm' 'const TValue *'
|   `-ParenExpr 0x5590ecee15e0 <./ltm.h:41:25, line:42:71> 'const TValue *'
|     `-ConditionalOperator 0x5590ecee15b0 <line:41:26, line:42:70> 'const TValue *'
|       |-BinaryOperator 0x5590ecee0f40 <line:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|       | |-ImplicitCastExpr 0x5590ecee0f10 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
|       | | `-ParenExpr 0x5590ecee0e70 <col:26, col:29> 'struct Table *' lvalue
|       | |   `-MemberExpr 0x5590ecee0e38 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|       | |     `-ImplicitCastExpr 0x5590ecee0e20 <col:27> 'Table *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x5590ecee0df8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
|       | `-ImplicitCastExpr 0x5590ecee0f28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
|       |   `-ParenExpr 0x5590ecee0ef0 <col:16, col:25> 'void *'
|       |     `-CStyleCastExpr 0x5590ecee0ec8 <col:17, col:24> 'void *' <NullToPointer>
|       |       `-IntegerLiteral 0x5590ecee0e90 <col:24> 'int' 0
|       |-ImplicitCastExpr 0x5590ecee1598 <col:16, col:25> 'const TValue *' <NullToPointer>
|       | `-ParenExpr 0x5590ecee0fc8 <col:16, col:25> 'void *'
|       |   `-CStyleCastExpr 0x5590ecee0fa0 <col:17, col:24> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x5590ecee0f68 <col:24> 'int' 0
|       `-ConditionalOperator 0x5590ecee1568 <./ltm.h:42:3, col:70> 'const TValue *'
|         |-ParenExpr 0x5590ecee11d8 <col:3, col:27> 'unsigned int'
|         | `-BinaryOperator 0x5590ecee11b0 <col:4, col:26> 'unsigned int' '&'
|         |   |-ImplicitCastExpr 0x5590ecee1198 <col:4, col:10> 'unsigned int' <IntegralCast>
|         |   | `-ImplicitCastExpr 0x5590ecee1180 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|         |   |   `-MemberExpr 0x5590ecee1098 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
|         |   |     `-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
|         |   |       `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
|         |   |         `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|         |   |           `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
|         |   |             `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
|         |   `-ParenExpr 0x5590ecee1160 <./ltm.h:42:18, col:26> 'unsigned int'
|         |     `-BinaryOperator 0x5590ecee1138 <col:19, col:25> 'unsigned int' '<<'
|         |       |-IntegerLiteral 0x5590ecee10d0 <col:19> 'unsigned int' 1
|         |       `-ParenExpr 0x5590ecee1118 <col:23, col:25> 'int'
|         |         `-DeclRefExpr 0x5590ecee10f0 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
|         |-ImplicitCastExpr 0x5590ecee1550 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
|         | `-ParenExpr 0x5590ecee1258 <col:16, col:25> 'void *'
|         |   `-CStyleCastExpr 0x5590ecee1230 <col:17, col:24> 'void *' <NullToPointer>
|         |     `-IntegerLiteral 0x5590ecee11f8 <col:24> 'int' 0
|         `-CallExpr 0x5590ecee14c8 <./ltm.h:42:38, col:70> 'const TValue *'
|           |-ImplicitCastExpr 0x5590ecee14b0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x5590ecee1278 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
|           |-ImplicitCastExpr 0x5590ecee1508 <lvm.c:143:27, col:30> 'struct Table *' <LValueToRValue>
|           | `-MemberExpr 0x5590ecee12e0 <col:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|           |   `-ImplicitCastExpr 0x5590ecee12c8 <col:27> 'Table *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
|           |-ImplicitCastExpr 0x5590ecee1520 <col:41> 'TMS':'TMS' <IntegralCast>
|           | `-DeclRefExpr 0x5590ecee1318 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
|           `-ImplicitCastExpr 0x5590ecee1538 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
|             `-ArraySubscriptExpr 0x5590ecee1488 <col:56, col:69> 'TString *' lvalue
|               |-ImplicitCastExpr 0x5590ecee1470 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
|               | `-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
|               |   `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
|               |     `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
|               |       `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
|               |         `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
|               |           `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
|               |             `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
|               `-DeclRefExpr 0x5590ecee1448 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
`-ImplicitCastExpr 0x5590ecee16c8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <BitCast>
  `-ParenExpr 0x5590ecee16a8 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee1680 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee1648 <col:24> 'int' 0
([B13.3]) == [B13.6]
   T: if [B20.26] || [B13.7]
   Preds (2): B14 B15
   Succs (2): B12 B5

 [B14]
   1: IntegerLiteral 0x5590ecee0f68 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee0fa0 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee0f68 <col:24> 'int' 0
(void *)[B14.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee1598 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee0fc8 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee0fa0 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee0f68 <col:24> 'int' 0
([B14.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B19
   Succs (1): B13

 [B15]
   1: ConditionalOperator 0x5590ecee1568 <./ltm.h:42:3, col:70> 'const TValue *'
|-ParenExpr 0x5590ecee11d8 <col:3, col:27> 'unsigned int'
| `-BinaryOperator 0x5590ecee11b0 <col:4, col:26> 'unsigned int' '&'
|   |-ImplicitCastExpr 0x5590ecee1198 <col:4, col:10> 'unsigned int' <IntegralCast>
|   | `-ImplicitCastExpr 0x5590ecee1180 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   |   `-MemberExpr 0x5590ecee1098 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
|   |     `-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
|   |       `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
|   |         `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|   |           `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
|   |             `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
|   `-ParenExpr 0x5590ecee1160 <./ltm.h:42:18, col:26> 'unsigned int'
|     `-BinaryOperator 0x5590ecee1138 <col:19, col:25> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5590ecee10d0 <col:19> 'unsigned int' 1
|       `-ParenExpr 0x5590ecee1118 <col:23, col:25> 'int'
|         `-DeclRefExpr 0x5590ecee10f0 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
|-ImplicitCastExpr 0x5590ecee1550 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
| `-ParenExpr 0x5590ecee1258 <col:16, col:25> 'void *'
|   `-CStyleCastExpr 0x5590ecee1230 <col:17, col:24> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5590ecee11f8 <col:24> 'int' 0
`-CallExpr 0x5590ecee14c8 <./ltm.h:42:38, col:70> 'const TValue *'
  |-ImplicitCastExpr 0x5590ecee14b0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x5590ecee1278 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
  |-ImplicitCastExpr 0x5590ecee1508 <lvm.c:143:27, col:30> 'struct Table *' <LValueToRValue>
  | `-MemberExpr 0x5590ecee12e0 <col:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
  |   `-ImplicitCastExpr 0x5590ecee12c8 <col:27> 'Table *' <LValueToRValue>
  |     `-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
  |-ImplicitCastExpr 0x5590ecee1520 <col:41> 'TMS':'TMS' <IntegralCast>
  | `-DeclRefExpr 0x5590ecee1318 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
  `-ImplicitCastExpr 0x5590ecee1538 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
    `-ArraySubscriptExpr 0x5590ecee1488 <col:56, col:69> 'TString *' lvalue
      |-ImplicitCastExpr 0x5590ecee1470 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
      | `-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
      |   `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
      |     `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
      |       `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
      |         `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
      |           `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
      |             `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
      `-DeclRefExpr 0x5590ecee1448 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
([B18.11]) ? [B16.3] : [B17.18]
   Preds (2): B16 B17
   Succs (1): B13

 [B16]
   1: IntegerLiteral 0x5590ecee11f8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   2: CStyleCastExpr 0x5590ecee1230 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee11f8 <col:24> 'int' 0
(void *)[B16.1] (CStyleCastExpr, NullToPointer, void *)
   3: ImplicitCastExpr 0x5590ecee1550 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'const TValue *' <NullToPointer>
`-ParenExpr 0x5590ecee1258 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee1230 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee11f8 <col:24> 'int' 0
([B16.2]) (ImplicitCastExpr, NullToPointer, const TValue *)
   Preds (1): B18
   Succs (1): B15

 [B17]
   1: DeclRefExpr 0x5590ecee1278 <./ltm.h:42:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
luaT_gettm
   2: ImplicitCastExpr 0x5590ecee14b0 <./ltm.h:42:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee1278 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
[B17.1] (ImplicitCastExpr, FunctionToPointerDecay, const TValue *(*)(Table *, TMS, TString *))
   3: DeclRefExpr 0x5590ecee12a0 <lvm.c:143:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
h
   4: ImplicitCastExpr 0x5590ecee12c8 <lvm.c:143:27> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B17.3] (ImplicitCastExpr, LValueToRValue, Table *)
   5: MemberExpr 0x5590ecee12e0 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
`-ImplicitCastExpr 0x5590ecee12c8 <col:27> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B17.4]->metatable
   6: ImplicitCastExpr 0x5590ecee1508 <lvm.c:143:27, col:30> 'struct Table *' <LValueToRValue>
`-MemberExpr 0x5590ecee12e0 <col:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
  `-ImplicitCastExpr 0x5590ecee12c8 <col:27> 'Table *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B17.5] (ImplicitCastExpr, LValueToRValue, struct Table *)
   7: DeclRefExpr 0x5590ecee1318 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
TM_NEWINDEX
   8: ImplicitCastExpr 0x5590ecee1520 <lvm.c:143:41> 'TMS':'TMS' <IntegralCast>
`-DeclRefExpr 0x5590ecee1318 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B17.7] (ImplicitCastExpr, IntegralCast, TMS)
   9: DeclRefExpr 0x5590ecee1340 <lvm.c:143:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
L
  10: ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B17.9] (ImplicitCastExpr, LValueToRValue, lua_State *)
  11: MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
`-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B17.10]->l_G
  12: ImplicitCastExpr 0x5590ecee13f8 <./ltm.h:42:56, col:58> 'global_State *' <LValueToRValue>
`-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
  `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
      `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
(([B17.11])) (ImplicitCastExpr, LValueToRValue, global_State *)
  13: MemberExpr 0x5590ecee1410 <./ltm.h:42:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
`-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
  `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
    `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
      `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
        `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
          `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B17.12]->tmname
  14: ImplicitCastExpr 0x5590ecee1470 <./ltm.h:42:56, col:61> 'TString **' <ArrayToPointerDecay>
`-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
  `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
    `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
      `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
        `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
          `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
            `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B17.13] (ImplicitCastExpr, ArrayToPointerDecay, TString **)
  15: DeclRefExpr 0x5590ecee1448 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
TM_NEWINDEX
  16: ArraySubscriptExpr 0x5590ecee1488 <./ltm.h:42:56, col:69> 'TString *' lvalue
|-ImplicitCastExpr 0x5590ecee1470 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
| `-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
|   `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
|     `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
|       `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
|         `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
|           `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
|             `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
`-DeclRefExpr 0x5590ecee1448 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B17.14][[B17.15]]
  17: ImplicitCastExpr 0x5590ecee1538 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
`-ArraySubscriptExpr 0x5590ecee1488 <col:56, col:69> 'TString *' lvalue
  |-ImplicitCastExpr 0x5590ecee1470 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
  | `-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
  |   `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
  |     `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
  |       `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
  |         `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
  |           `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
  |             `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
  `-DeclRefExpr 0x5590ecee1448 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B17.16] (ImplicitCastExpr, LValueToRValue, TString *)
  18: CallExpr 0x5590ecee14c8 <./ltm.h:42:38, col:70> 'const TValue *'
|-ImplicitCastExpr 0x5590ecee14b0 <col:38> 'const TValue *(*)(Table *, TMS, TString *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee1278 <col:38> 'const TValue *(Table *, TMS, TString *)' Function 0x5590ece94cd0 'luaT_gettm' 'const TValue *(Table *, TMS, TString *)'
|-ImplicitCastExpr 0x5590ecee1508 <lvm.c:143:27, col:30> 'struct Table *' <LValueToRValue>
| `-MemberExpr 0x5590ecee12e0 <col:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|   `-ImplicitCastExpr 0x5590ecee12c8 <col:27> 'Table *' <LValueToRValue>
|     `-DeclRefExpr 0x5590ecee12a0 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
|-ImplicitCastExpr 0x5590ecee1520 <col:41> 'TMS':'TMS' <IntegralCast>
| `-DeclRefExpr 0x5590ecee1318 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
`-ImplicitCastExpr 0x5590ecee1538 <./ltm.h:42:56, col:69> 'TString *' <LValueToRValue>
  `-ArraySubscriptExpr 0x5590ecee1488 <col:56, col:69> 'TString *' lvalue
    |-ImplicitCastExpr 0x5590ecee1470 <col:56, col:61> 'TString **' <ArrayToPointerDecay>
    | `-MemberExpr 0x5590ecee1410 <col:56, col:61> 'TString *[17]' lvalue ->tmname 0x5590ece9fc88
    |   `-ImplicitCastExpr 0x5590ecee13f8 <col:56, col:58> 'global_State *' <LValueToRValue>
    |     `-ParenExpr 0x5590ecee13d8 <col:56, col:58> 'global_State *' lvalue
    |       `-ParenExpr 0x5590ecee13b8 <./lstate.h:130:14, col:21> 'global_State *' lvalue
    |         `-MemberExpr 0x5590ecee1380 <lvm.c:143:24, ./lstate.h:130:18> 'global_State *' lvalue ->l_G 0x5590ecea0118
    |           `-ImplicitCastExpr 0x5590ecee1368 <lvm.c:143:24> 'lua_State *' <LValueToRValue>
    |             `-DeclRefExpr 0x5590ecee1340 <col:24> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
    `-DeclRefExpr 0x5590ecee1448 <col:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B17.2]([B17.6], [B17.8], [B17.17])
   Preds (1): B18
   Succs (1): B15

 [B18]
   1: DeclRefExpr 0x5590ecee0fe8 <lvm.c:143:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
h
   2: ImplicitCastExpr 0x5590ecee1010 <lvm.c:143:27> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B18.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
`-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B18.2]->metatable
   4: ImplicitCastExpr 0x5590ecee1080 <./ltm.h:42:4, col:7> 'struct Table *' <LValueToRValue>
`-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
  `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
    `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
([B18.3]) (ImplicitCastExpr, LValueToRValue, struct Table *)
   5: MemberExpr 0x5590ecee1098 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
`-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
  `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
    `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
      `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B18.4]->flags
   6: ImplicitCastExpr 0x5590ecee1180 <./ltm.h:42:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
`-MemberExpr 0x5590ecee1098 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
  `-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
    `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
      `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
        `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
          `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B18.5] (ImplicitCastExpr, LValueToRValue, lu_byte)
   7: ImplicitCastExpr 0x5590ecee1198 <./ltm.h:42:4, col:10> 'unsigned int' <IntegralCast>
`-ImplicitCastExpr 0x5590ecee1180 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
  `-MemberExpr 0x5590ecee1098 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
    `-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
      `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
        `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
          `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
            `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B18.6] (ImplicitCastExpr, IntegralCast, unsigned int)
   8: IntegerLiteral 0x5590ecee10d0 <./ltm.h:42:19> 'unsigned int' 1
1U
   9: DeclRefExpr 0x5590ecee10f0 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
TM_NEWINDEX
  10: BinaryOperator 0x5590ecee1138 <./ltm.h:42:19, col:25> 'unsigned int' '<<'
|-IntegerLiteral 0x5590ecee10d0 <col:19> 'unsigned int' 1
`-ParenExpr 0x5590ecee1118 <col:23, col:25> 'int'
  `-DeclRefExpr 0x5590ecee10f0 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B18.8] << ([B18.9])
  11: BinaryOperator 0x5590ecee11b0 <./ltm.h:42:4, col:26> 'unsigned int' '&'
|-ImplicitCastExpr 0x5590ecee1198 <col:4, col:10> 'unsigned int' <IntegralCast>
| `-ImplicitCastExpr 0x5590ecee1180 <col:4, col:10> 'lu_byte':'unsigned char' <LValueToRValue>
|   `-MemberExpr 0x5590ecee1098 <col:4, col:10> 'lu_byte':'unsigned char' lvalue ->flags 0x5590ece90d48
|     `-ImplicitCastExpr 0x5590ecee1080 <col:4, col:7> 'struct Table *' <LValueToRValue>
|       `-ParenExpr 0x5590ecee1060 <col:4, col:7> 'struct Table *' lvalue
|         `-MemberExpr 0x5590ecee1028 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|           `-ImplicitCastExpr 0x5590ecee1010 <col:27> 'Table *' <LValueToRValue>
|             `-DeclRefExpr 0x5590ecee0fe8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
`-ParenExpr 0x5590ecee1160 <./ltm.h:42:18, col:26> 'unsigned int'
  `-BinaryOperator 0x5590ecee1138 <col:19, col:25> 'unsigned int' '<<'
    |-IntegerLiteral 0x5590ecee10d0 <col:19> 'unsigned int' 1
    `-ParenExpr 0x5590ecee1118 <col:23, col:25> 'int'
      `-DeclRefExpr 0x5590ecee10f0 <lvm.c:143:41> 'int' EnumConstant 0x5590ece94388 'TM_NEWINDEX' 'int'
[B18.7] & ([B18.10])
   T: ([B18.11]) ? ... : ...
   Preds (1): B19
   Succs (2): B16 B17

 [B19]
   1: DeclRefExpr 0x5590ecee0df8 <lvm.c:143:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
h
   2: ImplicitCastExpr 0x5590ecee0e20 <lvm.c:143:27> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee0df8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B19.1] (ImplicitCastExpr, LValueToRValue, Table *)
   3: MemberExpr 0x5590ecee0e38 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
`-ImplicitCastExpr 0x5590ecee0e20 <col:27> 'Table *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee0df8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B19.2]->metatable
   4: ImplicitCastExpr 0x5590ecee0f10 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
`-ParenExpr 0x5590ecee0e70 <col:26, col:29> 'struct Table *' lvalue
  `-MemberExpr 0x5590ecee0e38 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
    `-ImplicitCastExpr 0x5590ecee0e20 <col:27> 'Table *' <LValueToRValue>
      `-DeclRefExpr 0x5590ecee0df8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
([B19.3]) (ImplicitCastExpr, LValueToRValue, struct Table *)
   5: IntegerLiteral 0x5590ecee0e90 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:24> 'int' 0
0
   6: CStyleCastExpr 0x5590ecee0ec8 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:17, col:24> 'void *' <NullToPointer>
`-IntegerLiteral 0x5590ecee0e90 <col:24> 'int' 0
(void *)[B19.5] (CStyleCastExpr, NullToPointer, void *)
   7: ImplicitCastExpr 0x5590ecee0f28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
`-ParenExpr 0x5590ecee0ef0 <col:16, col:25> 'void *'
  `-CStyleCastExpr 0x5590ecee0ec8 <col:17, col:24> 'void *' <NullToPointer>
    `-IntegerLiteral 0x5590ecee0e90 <col:24> 'int' 0
([B19.6]) (ImplicitCastExpr, BitCast, struct Table *)
   8: BinaryOperator 0x5590ecee0f40 <./ltm.h:41:26, /home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:25> 'int' '=='
|-ImplicitCastExpr 0x5590ecee0f10 <./ltm.h:41:26, col:29> 'struct Table *' <LValueToRValue>
| `-ParenExpr 0x5590ecee0e70 <col:26, col:29> 'struct Table *' lvalue
|   `-MemberExpr 0x5590ecee0e38 <lvm.c:143:27, col:30> 'struct Table *' lvalue ->metatable 0x5590ece90e10
|     `-ImplicitCastExpr 0x5590ecee0e20 <col:27> 'Table *' <LValueToRValue>
|       `-DeclRefExpr 0x5590ecee0df8 <col:27> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
`-ImplicitCastExpr 0x5590ecee0f28 </home/anderson/Documents/llvm/build/lib/clang/6.0.1/include/stddef.h:105:16, col:25> 'struct Table *' <BitCast>
  `-ParenExpr 0x5590ecee0ef0 <col:16, col:25> 'void *'
    `-CStyleCastExpr 0x5590ecee0ec8 <col:17, col:24> 'void *' <NullToPointer>
      `-IntegerLiteral 0x5590ecee0e90 <col:24> 'int' 0
[B19.4] == [B19.7]
   T: [B19.8] ? ... : ...
   Preds (1): B20
   Succs (2): B14 B18

 [B20]
   1: DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
t
   2: ImplicitCastExpr 0x5590ecee0908 <./lobject.h:99:44, col:46> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee08e8 <col:44, col:46> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
([B20.1]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   3: MemberExpr 0x5590ecee0920 <./lobject.h:99:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
`-ImplicitCastExpr 0x5590ecee0908 <col:44, col:46> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecee08e8 <col:44, col:46> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B20.2]->value
   4: MemberExpr 0x5590ecee0958 <./lobject.h:99:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
`-MemberExpr 0x5590ecee0920 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
  `-ImplicitCastExpr 0x5590ecee0908 <col:44, col:46> 'const TValue *' <LValueToRValue>
    `-ParenExpr 0x5590ecee08e8 <col:44, col:46> 'const TValue *' lvalue
      `-DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B20.3].gc
   5: ImplicitCastExpr 0x5590ecee0990 <./lobject.h:99:44, col:55> 'GCObject *' <LValueToRValue>
`-MemberExpr 0x5590ecee0958 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
  `-MemberExpr 0x5590ecee0920 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
    `-ImplicitCastExpr 0x5590ecee0908 <col:44, col:46> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecee08e8 <col:44, col:46> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B20.4] (ImplicitCastExpr, LValueToRValue, GCObject *)
   6: MemberExpr 0x5590ecee09a8 <./lobject.h:99:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
`-ImplicitCastExpr 0x5590ecee0990 <col:44, col:55> 'GCObject *' <LValueToRValue>
  `-MemberExpr 0x5590ecee0958 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
    `-MemberExpr 0x5590ecee0920 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
      `-ImplicitCastExpr 0x5590ecee0908 <col:44, col:46> 'const TValue *' <LValueToRValue>
        `-ParenExpr 0x5590ecee08e8 <col:44, col:46> 'const TValue *' lvalue
          `-DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B20.5]->h
   7: UnaryOperator 0x5590ecee09e0 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
`-MemberExpr 0x5590ecee09a8 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
  `-ImplicitCastExpr 0x5590ecee0990 <col:44, col:55> 'GCObject *' <LValueToRValue>
    `-MemberExpr 0x5590ecee0958 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
      `-MemberExpr 0x5590ecee0920 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
        `-ImplicitCastExpr 0x5590ecee0908 <col:44, col:46> 'const TValue *' <LValueToRValue>
          `-ParenExpr 0x5590ecee08e8 <col:44, col:46> 'const TValue *' lvalue
            `-DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
&[B20.6]
   8: DeclStmt 0x5590ecee0a20 <lvm.c:140:7, col:27>col:14
`-VarDecl 0x5590ecee0860 <col:7, ./llimits.h:63:27> lvm.c:140:14 used h 'Table *' cinit
  `-ParenExpr 0x5590ecee0a00 <./llimits.h:63:25, col:27> 'struct Table *'
    `-UnaryOperator 0x5590ecee09e0 <./lobject.h:99:43, col:59> 'struct Table *' prefix '&'
      `-MemberExpr 0x5590ecee09a8 <col:44, col:59> 'struct Table':'struct Table' lvalue ->h 0x5590ecea38a0
        `-ImplicitCastExpr 0x5590ecee0990 <col:44, col:55> 'GCObject *' <LValueToRValue>
          `-MemberExpr 0x5590ecee0958 <col:44, col:55> 'GCObject *const' lvalue .gc 0x5590ece76aa0
            `-MemberExpr 0x5590ecee0920 <col:44, col:49> 'const Value':'const Value' lvalue ->value 0x5590ece76da0
              `-ImplicitCastExpr 0x5590ecee0908 <col:44, col:46> 'const TValue *' <LValueToRValue>
                `-ParenExpr 0x5590ecee08e8 <col:44, col:46> 'const TValue *' lvalue
                  `-DeclRefExpr 0x5590ecee08c0 <lvm.c:140:25> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
Table *h = (&(t)->value.gc->h);
   9: DeclRefExpr 0x5590ecee0aa8 <lvm.c:141:24> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5590ececcc10 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
luaH_set
  10: ImplicitCastExpr 0x5590ecee0ba8 <lvm.c:141:24> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x5590ecee0aa8 <col:24> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5590ececcc10 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
[B20.9] (ImplicitCastExpr, FunctionToPointerDecay, TValue *(*)(lua_State *, Table *, const TValue *))
  11: DeclRefExpr 0x5590ecee0ad0 <lvm.c:141:33> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
L
  12: ImplicitCastExpr 0x5590ecee0c00 <lvm.c:141:33> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee0ad0 <col:33> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
[B20.11] (ImplicitCastExpr, LValueToRValue, lua_State *)
  13: DeclRefExpr 0x5590ecee0af8 <lvm.c:141:36> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
h
  14: ImplicitCastExpr 0x5590ecee0c18 <lvm.c:141:36> 'Table *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee0af8 <col:36> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
[B20.13] (ImplicitCastExpr, LValueToRValue, Table *)
  15: DeclRefExpr 0x5590ecee0b20 <lvm.c:141:39> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
key
  16: ImplicitCastExpr 0x5590ecee0c30 <lvm.c:141:39> 'TValue *' <LValueToRValue>
`-DeclRefExpr 0x5590ecee0b20 <col:39> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
[B20.15] (ImplicitCastExpr, LValueToRValue, TValue *)
  17: ImplicitCastExpr 0x5590ecee0c48 <lvm.c:141:39> 'const TValue *' <BitCast>
`-ImplicitCastExpr 0x5590ecee0c30 <col:39> 'TValue *' <LValueToRValue>
  `-DeclRefExpr 0x5590ecee0b20 <col:39> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
[B20.16] (ImplicitCastExpr, BitCast, const TValue *)
  18: CallExpr 0x5590ecee0bc0 <lvm.c:141:24, col:42> 'TValue *'
|-ImplicitCastExpr 0x5590ecee0ba8 <col:24> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x5590ecee0aa8 <col:24> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5590ececcc10 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
|-ImplicitCastExpr 0x5590ecee0c00 <col:33> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee0ad0 <col:33> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
|-ImplicitCastExpr 0x5590ecee0c18 <col:36> 'Table *' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee0af8 <col:36> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
`-ImplicitCastExpr 0x5590ecee0c48 <col:39> 'const TValue *' <BitCast>
  `-ImplicitCastExpr 0x5590ecee0c30 <col:39> 'TValue *' <LValueToRValue>
    `-DeclRefExpr 0x5590ecee0b20 <col:39> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
[B20.10]([B20.12], [B20.14], [B20.17])
  19: DeclStmt 0x5590ecee0c60 <lvm.c:141:7, col:43>col:15
`-VarDecl 0x5590ecee0a48 <col:7, col:42> col:15 used oldval 'TValue *' cinit
  `-CallExpr 0x5590ecee0bc0 <col:24, col:42> 'TValue *'
    |-ImplicitCastExpr 0x5590ecee0ba8 <col:24> 'TValue *(*)(lua_State *, Table *, const TValue *)' <FunctionToPointerDecay>
    | `-DeclRefExpr 0x5590ecee0aa8 <col:24> 'TValue *(lua_State *, Table *, const TValue *)' Function 0x5590ececcc10 'luaH_set' 'TValue *(lua_State *, Table *, const TValue *)'
    |-ImplicitCastExpr 0x5590ecee0c00 <col:33> 'lua_State *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecee0ad0 <col:33> 'lua_State *' lvalue ParmVar 0x5590ecedfcc8 'L' 'lua_State *'
    |-ImplicitCastExpr 0x5590ecee0c18 <col:36> 'Table *' <LValueToRValue>
    | `-DeclRefExpr 0x5590ecee0af8 <col:36> 'Table *' lvalue Var 0x5590ecee0860 'h' 'Table *'
    `-ImplicitCastExpr 0x5590ecee0c48 <col:39> 'const TValue *' <BitCast>
      `-ImplicitCastExpr 0x5590ecee0c30 <col:39> 'TValue *' <LValueToRValue>
        `-DeclRefExpr 0x5590ecee0b20 <col:39> 'TValue *' lvalue ParmVar 0x5590ecedfda8 'key' 'TValue *'
TValue *oldval = luaH_set(L, h, key);
  20: DeclRefExpr 0x5590ecee0c78 <lvm.c:142:20> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
oldval
  21: ImplicitCastExpr 0x5590ecee0cc0 <./lobject.h:90:19, col:21> 'TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee0ca0 <col:19, col:21> 'TValue *' lvalue
  `-DeclRefExpr 0x5590ecee0c78 <lvm.c:142:20> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
([B20.20]) (ImplicitCastExpr, LValueToRValue, TValue *)
  22: MemberExpr 0x5590ecee0cd8 <./lobject.h:90:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee0cc0 <col:19, col:21> 'TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecee0ca0 <col:19, col:21> 'TValue *' lvalue
    `-DeclRefExpr 0x5590ecee0c78 <lvm.c:142:20> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
[B20.21]->tt
  23: ImplicitCastExpr 0x5590ecee0d50 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecee0d10 <col:18, col:26> 'int' lvalue
  `-MemberExpr 0x5590ecee0cd8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecee0cc0 <col:19, col:21> 'TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecee0ca0 <col:19, col:21> 'TValue *' lvalue
        `-DeclRefExpr 0x5590ecee0c78 <lvm.c:142:20> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
([B20.22]) (ImplicitCastExpr, LValueToRValue, int)
  24: IntegerLiteral 0x5590ecee0d30 <./lua.h:74:19> 'int' 0
0
  25: BinaryOperator 0x5590ecee0d68 <./lobject.h:90:18, ./lua.h:74:19> 'int' '=='
|-ImplicitCastExpr 0x5590ecee0d50 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecee0d10 <col:18, col:26> 'int' lvalue
|   `-MemberExpr 0x5590ecee0cd8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590ecee0cc0 <col:19, col:21> 'TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590ecee0ca0 <col:19, col:21> 'TValue *' lvalue
|         `-DeclRefExpr 0x5590ecee0c78 <lvm.c:142:20> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
`-IntegerLiteral 0x5590ecee0d30 <./lua.h:74:19> 'int' 0
[B20.23] == [B20.24]
  26: UnaryOperator 0x5590ecee0db0 <lvm.c:142:11, ./lobject.h:79:41> 'int' prefix '!'
`-ParenExpr 0x5590ecee0d90 <col:20, col:41> 'int'
  `-BinaryOperator 0x5590ecee0d68 <line:90:18, ./lua.h:74:19> 'int' '=='
    |-ImplicitCastExpr 0x5590ecee0d50 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
    | `-ParenExpr 0x5590ecee0d10 <col:18, col:26> 'int' lvalue
    |   `-MemberExpr 0x5590ecee0cd8 <col:19, col:24> 'int' lvalue ->tt 0x5590ece76e00
    |     `-ImplicitCastExpr 0x5590ecee0cc0 <col:19, col:21> 'TValue *' <LValueToRValue>
    |       `-ParenExpr 0x5590ecee0ca0 <col:19, col:21> 'TValue *' lvalue
    |         `-DeclRefExpr 0x5590ecee0c78 <lvm.c:142:20> 'TValue *' lvalue Var 0x5590ecee0a48 'oldval' 'TValue *'
    `-IntegerLiteral 0x5590ecee0d30 <./lua.h:74:19> 'int' 0
!([B20.25])
   T: [B20.26] || ...
   Preds (1): B21
   Succs (2): B12 B19

 [B21]
   1: DeclStmt 0x5590ecee0700 <lvm.c:138:5, col:21>col:19
`-VarDecl 0x5590ecee06a0 <col:5, col:19> col:19 used tm 'const TValue *'
const TValue *tm;
   2: DeclRefExpr 0x5590ecee0718 <lvm.c:139:19> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
t
   3: ImplicitCastExpr 0x5590ecee0760 <./lobject.h:90:19, col:21> 'const TValue *' <LValueToRValue>
`-ParenExpr 0x5590ecee0740 <col:19, col:21> 'const TValue *' lvalue
  `-DeclRefExpr 0x5590ecee0718 <lvm.c:139:19> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
([B21.2]) (ImplicitCastExpr, LValueToRValue, const TValue *)
   4: MemberExpr 0x5590ecee0778 <./lobject.h:90:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
`-ImplicitCastExpr 0x5590ecee0760 <col:19, col:21> 'const TValue *' <LValueToRValue>
  `-ParenExpr 0x5590ecee0740 <col:19, col:21> 'const TValue *' lvalue
    `-DeclRefExpr 0x5590ecee0718 <lvm.c:139:19> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
[B21.3]->tt
   5: ImplicitCastExpr 0x5590ecee07f0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
`-ParenExpr 0x5590ecee07b0 <col:18, col:26> 'const int' lvalue
  `-MemberExpr 0x5590ecee0778 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
    `-ImplicitCastExpr 0x5590ecee0760 <col:19, col:21> 'const TValue *' <LValueToRValue>
      `-ParenExpr 0x5590ecee0740 <col:19, col:21> 'const TValue *' lvalue
        `-DeclRefExpr 0x5590ecee0718 <lvm.c:139:19> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
([B21.4]) (ImplicitCastExpr, LValueToRValue, int)
   6: IntegerLiteral 0x5590ecee07d0 <./lua.h:79:21> 'int' 5
5
   7: BinaryOperator 0x5590ecee0808 <./lobject.h:90:18, ./lua.h:79:21> 'int' '=='
|-ImplicitCastExpr 0x5590ecee07f0 <./lobject.h:90:18, col:26> 'int' <LValueToRValue>
| `-ParenExpr 0x5590ecee07b0 <col:18, col:26> 'const int' lvalue
|   `-MemberExpr 0x5590ecee0778 <col:19, col:24> 'const int' lvalue ->tt 0x5590ece76e00
|     `-ImplicitCastExpr 0x5590ecee0760 <col:19, col:21> 'const TValue *' <LValueToRValue>
|       `-ParenExpr 0x5590ecee0740 <col:19, col:21> 'const TValue *' lvalue
|         `-DeclRefExpr 0x5590ecee0718 <lvm.c:139:19> 'const TValue *' lvalue ParmVar 0x5590ecedfd38 't' 'const TValue *'
`-IntegerLiteral 0x5590ecee07d0 <./lua.h:79:21> 'int' 5
[B21.5] == [B21.6]
   T: if ([B21.7])
   Preds (1): B22
   Succs (2): B20 B7

 [B22]
   1: DeclRefExpr 0x5590ecee0148 <lvm.c:137:18> 'int' lvalue Var 0x5590ecedffd8 'loop' 'int'
loop
   2: ImplicitCastExpr 0x5590ecee0190 <lvm.c:137:18> 'int' <LValueToRValue>
`-DeclRefExpr 0x5590ecee0148 <col:18> 'int' lvalue Var 0x5590ecedffd8 'loop' 'int'
[B22.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x5590ecee0170 <lvm.c:32:20> 'int' 100
100
   4: BinaryOperator 0x5590ecee01a8 <lvm.c:137:18, line:32:20> 'int' '<'
|-ImplicitCastExpr 0x5590ecee0190 <line:137:18> 'int' <LValueToRValue>
| `-DeclRefExpr 0x5590ecee0148 <col:18> 'int' lvalue Var 0x5590ecedffd8 'loop' 'int'
`-IntegerLiteral 0x5590ecee0170 <line:32:20> 'int' 100
[B22.2] < [B22.3]
   T: for (...; [B22.4]; ...)
   Preds (2): B2 B23
   Succs (2): B21 B1

 [B23]
   1: DeclStmt 0x5590ecee0038 <lvm.c:135:3, col:11>col:7
`-VarDecl 0x5590ecedffd8 <col:3, col:7> col:7 used loop 'int'
int loop;
   2: DeclStmt 0x5590ecee00c0 <lvm.c:136:3, col:14>col:10
`-VarDecl 0x5590ecee0060 <col:3, col:10> col:10 used temp 'TValue':'struct lua_TValue'
TValue temp;
   3: IntegerLiteral 0x5590ecee0100 <lvm.c:137:15> 'int' 0
0
   4: DeclRefExpr 0x5590ecee00d8 <lvm.c:137:8> 'int' lvalue Var 0x5590ecedffd8 'loop' 'int'
loop
   5: BinaryOperator 0x5590ecee0120 <lvm.c:137:8, col:15> 'int' '='
|-DeclRefExpr 0x5590ecee00d8 <col:8> 'int' lvalue Var 0x5590ecedffd8 'loop' 'int'
`-IntegerLiteral 0x5590ecee0100 <col:15> 'int' 0
[B23.4] = [B23.3]
   Preds (1): B24
   Succs (1): B22

 [B0 (EXIT)]
   Preds (3): B1 B4 B8
