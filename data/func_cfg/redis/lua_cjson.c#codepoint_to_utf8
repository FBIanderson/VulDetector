static int codepoint_to_utf8(char *utf8, int codepoint)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: IntegerLiteral 0x563107e1ae60 <lua_cjson.c:807:12> 'int' 0
0
   2: ReturnStmt 0x563107e1ae80 <lua_cjson.c:807:5, col:12>
`-IntegerLiteral 0x563107e1ae60 <col:12> 'int' 0
return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: DeclRefExpr 0x563107e1a690 <lua_cjson.c:800:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e1a6d8 <lua_cjson.c:800:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1a690 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B2.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e1a6b8 <lua_cjson.c:800:33> 'int' 18
18
   4: BinaryOperator 0x563107e1a6f0 <lua_cjson.c:800:20, col:33> 'int' '>>'
|-ImplicitCastExpr 0x563107e1a6d8 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a690 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1a6b8 <col:33> 'int' 18
[B2.2] >> [B2.3]
   5: IntegerLiteral 0x563107e1a738 <lua_cjson.c:800:39> 'int' 240
240
   6: BinaryOperator 0x563107e1a758 <lua_cjson.c:800:19, col:39> 'int' '|'
|-ParenExpr 0x563107e1a718 <col:19, col:35> 'int'
| `-BinaryOperator 0x563107e1a6f0 <col:20, col:33> 'int' '>>'
|   |-ImplicitCastExpr 0x563107e1a6d8 <col:20> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1a690 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1a6b8 <col:33> 'int' 18
`-IntegerLiteral 0x563107e1a738 <col:39> 'int' 240
([B2.4]) | [B2.5]
   7: ImplicitCastExpr 0x563107e1a780 <lua_cjson.c:800:19, col:39> 'char' <IntegralCast>
`-BinaryOperator 0x563107e1a758 <col:19, col:39> 'int' '|'
  |-ParenExpr 0x563107e1a718 <col:19, col:35> 'int'
  | `-BinaryOperator 0x563107e1a6f0 <col:20, col:33> 'int' '>>'
  |   |-ImplicitCastExpr 0x563107e1a6d8 <col:20> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e1a690 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   `-IntegerLiteral 0x563107e1a6b8 <col:33> 'int' 18
  `-IntegerLiteral 0x563107e1a738 <col:39> 'int' 240
[B2.6] (ImplicitCastExpr, IntegralCast, char)
   8: DeclRefExpr 0x563107e1a608 <lua_cjson.c:800:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
   9: ImplicitCastExpr 0x563107e1a650 <lua_cjson.c:800:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e1a608 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B2.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: IntegerLiteral 0x563107e1a630 <lua_cjson.c:800:14> 'int' 0
0
  11: ArraySubscriptExpr 0x563107e1a668 <lua_cjson.c:800:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e1a650 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a608 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e1a630 <col:14> 'int' 0
[B2.9][[B2.10]]
  12: BinaryOperator 0x563107e1a798 <lua_cjson.c:800:9, col:39> 'char' '='
|-ArraySubscriptExpr 0x563107e1a668 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e1a650 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e1a608 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e1a630 <col:14> 'int' 0
`-ImplicitCastExpr 0x563107e1a780 <col:19, col:39> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e1a758 <col:19, col:39> 'int' '|'
    |-ParenExpr 0x563107e1a718 <col:19, col:35> 'int'
    | `-BinaryOperator 0x563107e1a6f0 <col:20, col:33> 'int' '>>'
    |   |-ImplicitCastExpr 0x563107e1a6d8 <col:20> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563107e1a690 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   `-IntegerLiteral 0x563107e1a6b8 <col:33> 'int' 18
    `-IntegerLiteral 0x563107e1a738 <col:39> 'int' 240
[B2.11] = [B2.7]
  13: DeclRefExpr 0x563107e1a848 <lua_cjson.c:801:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
  14: ImplicitCastExpr 0x563107e1a890 <lua_cjson.c:801:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1a848 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B2.13] (ImplicitCastExpr, LValueToRValue, int)
  15: IntegerLiteral 0x563107e1a870 <lua_cjson.c:801:34> 'int' 12
12
  16: BinaryOperator 0x563107e1a8a8 <lua_cjson.c:801:21, col:34> 'int' '>>'
|-ImplicitCastExpr 0x563107e1a890 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a848 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1a870 <col:34> 'int' 12
[B2.14] >> [B2.15]
  17: IntegerLiteral 0x563107e1a8f0 <lua_cjson.c:801:40> 'int' 63
63
  18: BinaryOperator 0x563107e1a910 <lua_cjson.c:801:20, col:40> 'int' '&'
|-ParenExpr 0x563107e1a8d0 <col:20, col:36> 'int'
| `-BinaryOperator 0x563107e1a8a8 <col:21, col:34> 'int' '>>'
|   |-ImplicitCastExpr 0x563107e1a890 <col:21> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1a848 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1a870 <col:34> 'int' 12
`-IntegerLiteral 0x563107e1a8f0 <col:40> 'int' 63
([B2.16]) & [B2.17]
  19: IntegerLiteral 0x563107e1a958 <lua_cjson.c:801:48> 'int' 128
128
  20: BinaryOperator 0x563107e1a978 <lua_cjson.c:801:19, col:48> 'int' '|'
|-ParenExpr 0x563107e1a938 <col:19, col:44> 'int'
| `-BinaryOperator 0x563107e1a910 <col:20, col:40> 'int' '&'
|   |-ParenExpr 0x563107e1a8d0 <col:20, col:36> 'int'
|   | `-BinaryOperator 0x563107e1a8a8 <col:21, col:34> 'int' '>>'
|   |   |-ImplicitCastExpr 0x563107e1a890 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563107e1a848 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   |   `-IntegerLiteral 0x563107e1a870 <col:34> 'int' 12
|   `-IntegerLiteral 0x563107e1a8f0 <col:40> 'int' 63
`-IntegerLiteral 0x563107e1a958 <col:48> 'int' 128
([B2.18]) | [B2.19]
  21: ImplicitCastExpr 0x563107e1a9a0 <lua_cjson.c:801:19, col:48> 'char' <IntegralCast>
`-BinaryOperator 0x563107e1a978 <col:19, col:48> 'int' '|'
  |-ParenExpr 0x563107e1a938 <col:19, col:44> 'int'
  | `-BinaryOperator 0x563107e1a910 <col:20, col:40> 'int' '&'
  |   |-ParenExpr 0x563107e1a8d0 <col:20, col:36> 'int'
  |   | `-BinaryOperator 0x563107e1a8a8 <col:21, col:34> 'int' '>>'
  |   |   |-ImplicitCastExpr 0x563107e1a890 <col:21> 'int' <LValueToRValue>
  |   |   | `-DeclRefExpr 0x563107e1a848 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   |   `-IntegerLiteral 0x563107e1a870 <col:34> 'int' 12
  |   `-IntegerLiteral 0x563107e1a8f0 <col:40> 'int' 63
  `-IntegerLiteral 0x563107e1a958 <col:48> 'int' 128
[B2.20] (ImplicitCastExpr, IntegralCast, char)
  22: DeclRefExpr 0x563107e1a7c0 <lua_cjson.c:801:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
  23: ImplicitCastExpr 0x563107e1a808 <lua_cjson.c:801:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e1a7c0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B2.22] (ImplicitCastExpr, LValueToRValue, char *)
  24: IntegerLiteral 0x563107e1a7e8 <lua_cjson.c:801:14> 'int' 1
1
  25: ArraySubscriptExpr 0x563107e1a820 <lua_cjson.c:801:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e1a808 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a7c0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e1a7e8 <col:14> 'int' 1
[B2.23][[B2.24]]
  26: BinaryOperator 0x563107e1a9b8 <lua_cjson.c:801:9, col:48> 'char' '='
|-ArraySubscriptExpr 0x563107e1a820 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e1a808 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e1a7c0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e1a7e8 <col:14> 'int' 1
`-ImplicitCastExpr 0x563107e1a9a0 <col:19, col:48> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e1a978 <col:19, col:48> 'int' '|'
    |-ParenExpr 0x563107e1a938 <col:19, col:44> 'int'
    | `-BinaryOperator 0x563107e1a910 <col:20, col:40> 'int' '&'
    |   |-ParenExpr 0x563107e1a8d0 <col:20, col:36> 'int'
    |   | `-BinaryOperator 0x563107e1a8a8 <col:21, col:34> 'int' '>>'
    |   |   |-ImplicitCastExpr 0x563107e1a890 <col:21> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x563107e1a848 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   |   `-IntegerLiteral 0x563107e1a870 <col:34> 'int' 12
    |   `-IntegerLiteral 0x563107e1a8f0 <col:40> 'int' 63
    `-IntegerLiteral 0x563107e1a958 <col:48> 'int' 128
[B2.25] = [B2.21]
  27: DeclRefExpr 0x563107e1aa68 <lua_cjson.c:802:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
  28: ImplicitCastExpr 0x563107e1aab0 <lua_cjson.c:802:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1aa68 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B2.27] (ImplicitCastExpr, LValueToRValue, int)
  29: IntegerLiteral 0x563107e1aa90 <lua_cjson.c:802:34> 'int' 6
6
  30: BinaryOperator 0x563107e1aac8 <lua_cjson.c:802:21, col:34> 'int' '>>'
|-ImplicitCastExpr 0x563107e1aab0 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1aa68 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1aa90 <col:34> 'int' 6
[B2.28] >> [B2.29]
  31: IntegerLiteral 0x563107e1ab10 <lua_cjson.c:802:39> 'int' 63
63
  32: BinaryOperator 0x563107e1ab30 <lua_cjson.c:802:20, col:39> 'int' '&'
|-ParenExpr 0x563107e1aaf0 <col:20, col:35> 'int'
| `-BinaryOperator 0x563107e1aac8 <col:21, col:34> 'int' '>>'
|   |-ImplicitCastExpr 0x563107e1aab0 <col:21> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1aa68 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1aa90 <col:34> 'int' 6
`-IntegerLiteral 0x563107e1ab10 <col:39> 'int' 63
([B2.30]) & [B2.31]
  33: IntegerLiteral 0x563107e1ab78 <lua_cjson.c:802:47> 'int' 128
128
  34: BinaryOperator 0x563107e1ab98 <lua_cjson.c:802:19, col:47> 'int' '|'
|-ParenExpr 0x563107e1ab58 <col:19, col:43> 'int'
| `-BinaryOperator 0x563107e1ab30 <col:20, col:39> 'int' '&'
|   |-ParenExpr 0x563107e1aaf0 <col:20, col:35> 'int'
|   | `-BinaryOperator 0x563107e1aac8 <col:21, col:34> 'int' '>>'
|   |   |-ImplicitCastExpr 0x563107e1aab0 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563107e1aa68 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   |   `-IntegerLiteral 0x563107e1aa90 <col:34> 'int' 6
|   `-IntegerLiteral 0x563107e1ab10 <col:39> 'int' 63
`-IntegerLiteral 0x563107e1ab78 <col:47> 'int' 128
([B2.32]) | [B2.33]
  35: ImplicitCastExpr 0x563107e1abc0 <lua_cjson.c:802:19, col:47> 'char' <IntegralCast>
`-BinaryOperator 0x563107e1ab98 <col:19, col:47> 'int' '|'
  |-ParenExpr 0x563107e1ab58 <col:19, col:43> 'int'
  | `-BinaryOperator 0x563107e1ab30 <col:20, col:39> 'int' '&'
  |   |-ParenExpr 0x563107e1aaf0 <col:20, col:35> 'int'
  |   | `-BinaryOperator 0x563107e1aac8 <col:21, col:34> 'int' '>>'
  |   |   |-ImplicitCastExpr 0x563107e1aab0 <col:21> 'int' <LValueToRValue>
  |   |   | `-DeclRefExpr 0x563107e1aa68 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   |   `-IntegerLiteral 0x563107e1aa90 <col:34> 'int' 6
  |   `-IntegerLiteral 0x563107e1ab10 <col:39> 'int' 63
  `-IntegerLiteral 0x563107e1ab78 <col:47> 'int' 128
[B2.34] (ImplicitCastExpr, IntegralCast, char)
  36: DeclRefExpr 0x563107e1a9e0 <lua_cjson.c:802:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
  37: ImplicitCastExpr 0x563107e1aa28 <lua_cjson.c:802:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e1a9e0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B2.36] (ImplicitCastExpr, LValueToRValue, char *)
  38: IntegerLiteral 0x563107e1aa08 <lua_cjson.c:802:14> 'int' 2
2
  39: ArraySubscriptExpr 0x563107e1aa40 <lua_cjson.c:802:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e1aa28 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a9e0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e1aa08 <col:14> 'int' 2
[B2.37][[B2.38]]
  40: BinaryOperator 0x563107e1abd8 <lua_cjson.c:802:9, col:47> 'char' '='
|-ArraySubscriptExpr 0x563107e1aa40 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e1aa28 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e1a9e0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e1aa08 <col:14> 'int' 2
`-ImplicitCastExpr 0x563107e1abc0 <col:19, col:47> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e1ab98 <col:19, col:47> 'int' '|'
    |-ParenExpr 0x563107e1ab58 <col:19, col:43> 'int'
    | `-BinaryOperator 0x563107e1ab30 <col:20, col:39> 'int' '&'
    |   |-ParenExpr 0x563107e1aaf0 <col:20, col:35> 'int'
    |   | `-BinaryOperator 0x563107e1aac8 <col:21, col:34> 'int' '>>'
    |   |   |-ImplicitCastExpr 0x563107e1aab0 <col:21> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x563107e1aa68 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   |   `-IntegerLiteral 0x563107e1aa90 <col:34> 'int' 6
    |   `-IntegerLiteral 0x563107e1ab10 <col:39> 'int' 63
    `-IntegerLiteral 0x563107e1ab78 <col:47> 'int' 128
[B2.39] = [B2.35]
  41: DeclRefExpr 0x563107e1ac88 <lua_cjson.c:803:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
  42: ImplicitCastExpr 0x563107e1acd0 <lua_cjson.c:803:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1ac88 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B2.41] (ImplicitCastExpr, LValueToRValue, int)
  43: IntegerLiteral 0x563107e1acb0 <lua_cjson.c:803:32> 'int' 63
63
  44: BinaryOperator 0x563107e1ace8 <lua_cjson.c:803:20, col:32> 'int' '&'
|-ImplicitCastExpr 0x563107e1acd0 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1ac88 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1acb0 <col:32> 'int' 63
[B2.42] & [B2.43]
  45: IntegerLiteral 0x563107e1ad30 <lua_cjson.c:803:40> 'int' 128
128
  46: BinaryOperator 0x563107e1ad50 <lua_cjson.c:803:19, col:40> 'int' '|'
|-ParenExpr 0x563107e1ad10 <col:19, col:36> 'int'
| `-BinaryOperator 0x563107e1ace8 <col:20, col:32> 'int' '&'
|   |-ImplicitCastExpr 0x563107e1acd0 <col:20> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1ac88 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1acb0 <col:32> 'int' 63
`-IntegerLiteral 0x563107e1ad30 <col:40> 'int' 128
([B2.44]) | [B2.45]
  47: ImplicitCastExpr 0x563107e1ad78 <lua_cjson.c:803:19, col:40> 'char' <IntegralCast>
`-BinaryOperator 0x563107e1ad50 <col:19, col:40> 'int' '|'
  |-ParenExpr 0x563107e1ad10 <col:19, col:36> 'int'
  | `-BinaryOperator 0x563107e1ace8 <col:20, col:32> 'int' '&'
  |   |-ImplicitCastExpr 0x563107e1acd0 <col:20> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e1ac88 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   `-IntegerLiteral 0x563107e1acb0 <col:32> 'int' 63
  `-IntegerLiteral 0x563107e1ad30 <col:40> 'int' 128
[B2.46] (ImplicitCastExpr, IntegralCast, char)
  48: DeclRefExpr 0x563107e1ac00 <lua_cjson.c:803:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
  49: ImplicitCastExpr 0x563107e1ac48 <lua_cjson.c:803:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e1ac00 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B2.48] (ImplicitCastExpr, LValueToRValue, char *)
  50: IntegerLiteral 0x563107e1ac28 <lua_cjson.c:803:14> 'int' 3
3
  51: ArraySubscriptExpr 0x563107e1ac60 <lua_cjson.c:803:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e1ac48 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e1ac00 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e1ac28 <col:14> 'int' 3
[B2.49][[B2.50]]
  52: BinaryOperator 0x563107e1ad90 <lua_cjson.c:803:9, col:40> 'char' '='
|-ArraySubscriptExpr 0x563107e1ac60 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e1ac48 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e1ac00 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e1ac28 <col:14> 'int' 3
`-ImplicitCastExpr 0x563107e1ad78 <col:19, col:40> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e1ad50 <col:19, col:40> 'int' '|'
    |-ParenExpr 0x563107e1ad10 <col:19, col:36> 'int'
    | `-BinaryOperator 0x563107e1ace8 <col:20, col:32> 'int' '&'
    |   |-ImplicitCastExpr 0x563107e1acd0 <col:20> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563107e1ac88 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   `-IntegerLiteral 0x563107e1acb0 <col:32> 'int' 63
    `-IntegerLiteral 0x563107e1ad30 <col:40> 'int' 128
[B2.51] = [B2.47]
  53: IntegerLiteral 0x563107e1adb8 <lua_cjson.c:804:16> 'int' 4
4
  54: ReturnStmt 0x563107e1add8 <lua_cjson.c:804:9, col:16>
`-IntegerLiteral 0x563107e1adb8 <col:16> 'int' 4
return [B2.53];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: DeclRefExpr 0x563107e1a580 <lua_cjson.c:799:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e1a5c8 <lua_cjson.c:799:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1a580 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e1a5a8 <lua_cjson.c:799:22> 'int' 2097151
2097151
   4: BinaryOperator 0x563107e1a5e0 <lua_cjson.c:799:9, col:22> 'int' '<='
|-ImplicitCastExpr 0x563107e1a5c8 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a580 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1a5a8 <col:22> 'int' 2097151
[B3.2] <= [B3.3]
   T: if [B3.4]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: DeclRefExpr 0x563107e19fd8 <lua_cjson.c:792:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e1a020 <lua_cjson.c:792:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e19fd8 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e1a000 <lua_cjson.c:792:33> 'int' 12
12
   4: BinaryOperator 0x563107e1a038 <lua_cjson.c:792:20, col:33> 'int' '>>'
|-ImplicitCastExpr 0x563107e1a020 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e19fd8 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1a000 <col:33> 'int' 12
[B4.2] >> [B4.3]
   5: IntegerLiteral 0x563107e1a080 <lua_cjson.c:792:39> 'int' 224
224
   6: BinaryOperator 0x563107e1a0a0 <lua_cjson.c:792:19, col:39> 'int' '|'
|-ParenExpr 0x563107e1a060 <col:19, col:35> 'int'
| `-BinaryOperator 0x563107e1a038 <col:20, col:33> 'int' '>>'
|   |-ImplicitCastExpr 0x563107e1a020 <col:20> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e19fd8 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1a000 <col:33> 'int' 12
`-IntegerLiteral 0x563107e1a080 <col:39> 'int' 224
([B4.4]) | [B4.5]
   7: ImplicitCastExpr 0x563107e1a0c8 <lua_cjson.c:792:19, col:39> 'char' <IntegralCast>
`-BinaryOperator 0x563107e1a0a0 <col:19, col:39> 'int' '|'
  |-ParenExpr 0x563107e1a060 <col:19, col:35> 'int'
  | `-BinaryOperator 0x563107e1a038 <col:20, col:33> 'int' '>>'
  |   |-ImplicitCastExpr 0x563107e1a020 <col:20> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e19fd8 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   `-IntegerLiteral 0x563107e1a000 <col:33> 'int' 12
  `-IntegerLiteral 0x563107e1a080 <col:39> 'int' 224
[B4.6] (ImplicitCastExpr, IntegralCast, char)
   8: DeclRefExpr 0x563107e19f50 <lua_cjson.c:792:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
   9: ImplicitCastExpr 0x563107e19f98 <lua_cjson.c:792:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e19f50 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B4.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: IntegerLiteral 0x563107e19f78 <lua_cjson.c:792:14> 'int' 0
0
  11: ArraySubscriptExpr 0x563107e19fb0 <lua_cjson.c:792:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e19f98 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e19f50 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e19f78 <col:14> 'int' 0
[B4.9][[B4.10]]
  12: BinaryOperator 0x563107e1a0e0 <lua_cjson.c:792:9, col:39> 'char' '='
|-ArraySubscriptExpr 0x563107e19fb0 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e19f98 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e19f50 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e19f78 <col:14> 'int' 0
`-ImplicitCastExpr 0x563107e1a0c8 <col:19, col:39> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e1a0a0 <col:19, col:39> 'int' '|'
    |-ParenExpr 0x563107e1a060 <col:19, col:35> 'int'
    | `-BinaryOperator 0x563107e1a038 <col:20, col:33> 'int' '>>'
    |   |-ImplicitCastExpr 0x563107e1a020 <col:20> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563107e19fd8 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   `-IntegerLiteral 0x563107e1a000 <col:33> 'int' 12
    `-IntegerLiteral 0x563107e1a080 <col:39> 'int' 224
[B4.11] = [B4.7]
  13: DeclRefExpr 0x563107e1a190 <lua_cjson.c:793:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
  14: ImplicitCastExpr 0x563107e1a1d8 <lua_cjson.c:793:21> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1a190 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B4.13] (ImplicitCastExpr, LValueToRValue, int)
  15: IntegerLiteral 0x563107e1a1b8 <lua_cjson.c:793:34> 'int' 6
6
  16: BinaryOperator 0x563107e1a1f0 <lua_cjson.c:793:21, col:34> 'int' '>>'
|-ImplicitCastExpr 0x563107e1a1d8 <col:21> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a190 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1a1b8 <col:34> 'int' 6
[B4.14] >> [B4.15]
  17: IntegerLiteral 0x563107e1a238 <lua_cjson.c:793:39> 'int' 63
63
  18: BinaryOperator 0x563107e1a258 <lua_cjson.c:793:20, col:39> 'int' '&'
|-ParenExpr 0x563107e1a218 <col:20, col:35> 'int'
| `-BinaryOperator 0x563107e1a1f0 <col:21, col:34> 'int' '>>'
|   |-ImplicitCastExpr 0x563107e1a1d8 <col:21> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1a190 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1a1b8 <col:34> 'int' 6
`-IntegerLiteral 0x563107e1a238 <col:39> 'int' 63
([B4.16]) & [B4.17]
  19: IntegerLiteral 0x563107e1a2a0 <lua_cjson.c:793:47> 'int' 128
128
  20: BinaryOperator 0x563107e1a2c0 <lua_cjson.c:793:19, col:47> 'int' '|'
|-ParenExpr 0x563107e1a280 <col:19, col:43> 'int'
| `-BinaryOperator 0x563107e1a258 <col:20, col:39> 'int' '&'
|   |-ParenExpr 0x563107e1a218 <col:20, col:35> 'int'
|   | `-BinaryOperator 0x563107e1a1f0 <col:21, col:34> 'int' '>>'
|   |   |-ImplicitCastExpr 0x563107e1a1d8 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563107e1a190 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   |   `-IntegerLiteral 0x563107e1a1b8 <col:34> 'int' 6
|   `-IntegerLiteral 0x563107e1a238 <col:39> 'int' 63
`-IntegerLiteral 0x563107e1a2a0 <col:47> 'int' 128
([B4.18]) | [B4.19]
  21: ImplicitCastExpr 0x563107e1a2e8 <lua_cjson.c:793:19, col:47> 'char' <IntegralCast>
`-BinaryOperator 0x563107e1a2c0 <col:19, col:47> 'int' '|'
  |-ParenExpr 0x563107e1a280 <col:19, col:43> 'int'
  | `-BinaryOperator 0x563107e1a258 <col:20, col:39> 'int' '&'
  |   |-ParenExpr 0x563107e1a218 <col:20, col:35> 'int'
  |   | `-BinaryOperator 0x563107e1a1f0 <col:21, col:34> 'int' '>>'
  |   |   |-ImplicitCastExpr 0x563107e1a1d8 <col:21> 'int' <LValueToRValue>
  |   |   | `-DeclRefExpr 0x563107e1a190 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   |   `-IntegerLiteral 0x563107e1a1b8 <col:34> 'int' 6
  |   `-IntegerLiteral 0x563107e1a238 <col:39> 'int' 63
  `-IntegerLiteral 0x563107e1a2a0 <col:47> 'int' 128
[B4.20] (ImplicitCastExpr, IntegralCast, char)
  22: DeclRefExpr 0x563107e1a108 <lua_cjson.c:793:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
  23: ImplicitCastExpr 0x563107e1a150 <lua_cjson.c:793:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e1a108 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B4.22] (ImplicitCastExpr, LValueToRValue, char *)
  24: IntegerLiteral 0x563107e1a130 <lua_cjson.c:793:14> 'int' 1
1
  25: ArraySubscriptExpr 0x563107e1a168 <lua_cjson.c:793:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e1a150 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a108 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e1a130 <col:14> 'int' 1
[B4.23][[B4.24]]
  26: BinaryOperator 0x563107e1a300 <lua_cjson.c:793:9, col:47> 'char' '='
|-ArraySubscriptExpr 0x563107e1a168 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e1a150 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e1a108 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e1a130 <col:14> 'int' 1
`-ImplicitCastExpr 0x563107e1a2e8 <col:19, col:47> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e1a2c0 <col:19, col:47> 'int' '|'
    |-ParenExpr 0x563107e1a280 <col:19, col:43> 'int'
    | `-BinaryOperator 0x563107e1a258 <col:20, col:39> 'int' '&'
    |   |-ParenExpr 0x563107e1a218 <col:20, col:35> 'int'
    |   | `-BinaryOperator 0x563107e1a1f0 <col:21, col:34> 'int' '>>'
    |   |   |-ImplicitCastExpr 0x563107e1a1d8 <col:21> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x563107e1a190 <col:21> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   |   `-IntegerLiteral 0x563107e1a1b8 <col:34> 'int' 6
    |   `-IntegerLiteral 0x563107e1a238 <col:39> 'int' 63
    `-IntegerLiteral 0x563107e1a2a0 <col:47> 'int' 128
[B4.25] = [B4.21]
  27: DeclRefExpr 0x563107e1a3b0 <lua_cjson.c:794:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
  28: ImplicitCastExpr 0x563107e1a3f8 <lua_cjson.c:794:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e1a3b0 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B4.27] (ImplicitCastExpr, LValueToRValue, int)
  29: IntegerLiteral 0x563107e1a3d8 <lua_cjson.c:794:32> 'int' 63
63
  30: BinaryOperator 0x563107e1a410 <lua_cjson.c:794:20, col:32> 'int' '&'
|-ImplicitCastExpr 0x563107e1a3f8 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a3b0 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e1a3d8 <col:32> 'int' 63
[B4.28] & [B4.29]
  31: IntegerLiteral 0x563107e1a458 <lua_cjson.c:794:40> 'int' 128
128
  32: BinaryOperator 0x563107e1a478 <lua_cjson.c:794:19, col:40> 'int' '|'
|-ParenExpr 0x563107e1a438 <col:19, col:36> 'int'
| `-BinaryOperator 0x563107e1a410 <col:20, col:32> 'int' '&'
|   |-ImplicitCastExpr 0x563107e1a3f8 <col:20> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e1a3b0 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e1a3d8 <col:32> 'int' 63
`-IntegerLiteral 0x563107e1a458 <col:40> 'int' 128
([B4.30]) | [B4.31]
  33: ImplicitCastExpr 0x563107e1a4a0 <lua_cjson.c:794:19, col:40> 'char' <IntegralCast>
`-BinaryOperator 0x563107e1a478 <col:19, col:40> 'int' '|'
  |-ParenExpr 0x563107e1a438 <col:19, col:36> 'int'
  | `-BinaryOperator 0x563107e1a410 <col:20, col:32> 'int' '&'
  |   |-ImplicitCastExpr 0x563107e1a3f8 <col:20> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e1a3b0 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   `-IntegerLiteral 0x563107e1a3d8 <col:32> 'int' 63
  `-IntegerLiteral 0x563107e1a458 <col:40> 'int' 128
[B4.32] (ImplicitCastExpr, IntegralCast, char)
  34: DeclRefExpr 0x563107e1a328 <lua_cjson.c:794:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
  35: ImplicitCastExpr 0x563107e1a370 <lua_cjson.c:794:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e1a328 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B4.34] (ImplicitCastExpr, LValueToRValue, char *)
  36: IntegerLiteral 0x563107e1a350 <lua_cjson.c:794:14> 'int' 2
2
  37: ArraySubscriptExpr 0x563107e1a388 <lua_cjson.c:794:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e1a370 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e1a328 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e1a350 <col:14> 'int' 2
[B4.35][[B4.36]]
  38: BinaryOperator 0x563107e1a4b8 <lua_cjson.c:794:9, col:40> 'char' '='
|-ArraySubscriptExpr 0x563107e1a388 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e1a370 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e1a328 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e1a350 <col:14> 'int' 2
`-ImplicitCastExpr 0x563107e1a4a0 <col:19, col:40> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e1a478 <col:19, col:40> 'int' '|'
    |-ParenExpr 0x563107e1a438 <col:19, col:36> 'int'
    | `-BinaryOperator 0x563107e1a410 <col:20, col:32> 'int' '&'
    |   |-ImplicitCastExpr 0x563107e1a3f8 <col:20> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563107e1a3b0 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   `-IntegerLiteral 0x563107e1a3d8 <col:32> 'int' 63
    `-IntegerLiteral 0x563107e1a458 <col:40> 'int' 128
[B4.37] = [B4.33]
  39: IntegerLiteral 0x563107e1a4e0 <lua_cjson.c:795:16> 'int' 3
3
  40: ReturnStmt 0x563107e1a500 <lua_cjson.c:795:9, col:16>
`-IntegerLiteral 0x563107e1a4e0 <col:16> 'int' 3
return [B4.39];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: DeclRefExpr 0x563107e19ec8 <lua_cjson.c:791:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e19f10 <lua_cjson.c:791:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e19ec8 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B5.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e19ef0 <lua_cjson.c:791:22> 'int' 65535
65535
   4: BinaryOperator 0x563107e19f28 <lua_cjson.c:791:9, col:22> 'int' '<='
|-ImplicitCastExpr 0x563107e19f10 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e19ec8 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e19ef0 <col:22> 'int' 65535
[B5.2] <= [B5.3]
   T: if [B5.4]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: DeclRefExpr 0x563107e19b48 <lua_cjson.c:785:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e19b90 <lua_cjson.c:785:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e19b48 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e19b70 <lua_cjson.c:785:33> 'int' 6
6
   4: BinaryOperator 0x563107e19ba8 <lua_cjson.c:785:20, col:33> 'int' '>>'
|-ImplicitCastExpr 0x563107e19b90 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e19b48 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e19b70 <col:33> 'int' 6
[B6.2] >> [B6.3]
   5: IntegerLiteral 0x563107e19bf0 <lua_cjson.c:785:38> 'int' 192
192
   6: BinaryOperator 0x563107e19c10 <lua_cjson.c:785:19, col:38> 'int' '|'
|-ParenExpr 0x563107e19bd0 <col:19, col:34> 'int'
| `-BinaryOperator 0x563107e19ba8 <col:20, col:33> 'int' '>>'
|   |-ImplicitCastExpr 0x563107e19b90 <col:20> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e19b48 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e19b70 <col:33> 'int' 6
`-IntegerLiteral 0x563107e19bf0 <col:38> 'int' 192
([B6.4]) | [B6.5]
   7: ImplicitCastExpr 0x563107e19c38 <lua_cjson.c:785:19, col:38> 'char' <IntegralCast>
`-BinaryOperator 0x563107e19c10 <col:19, col:38> 'int' '|'
  |-ParenExpr 0x563107e19bd0 <col:19, col:34> 'int'
  | `-BinaryOperator 0x563107e19ba8 <col:20, col:33> 'int' '>>'
  |   |-ImplicitCastExpr 0x563107e19b90 <col:20> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e19b48 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   `-IntegerLiteral 0x563107e19b70 <col:33> 'int' 6
  `-IntegerLiteral 0x563107e19bf0 <col:38> 'int' 192
[B6.6] (ImplicitCastExpr, IntegralCast, char)
   8: DeclRefExpr 0x563107e19ac0 <lua_cjson.c:785:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
   9: ImplicitCastExpr 0x563107e19b08 <lua_cjson.c:785:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e19ac0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B6.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: IntegerLiteral 0x563107e19ae8 <lua_cjson.c:785:14> 'int' 0
0
  11: ArraySubscriptExpr 0x563107e19b20 <lua_cjson.c:785:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e19b08 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e19ac0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e19ae8 <col:14> 'int' 0
[B6.9][[B6.10]]
  12: BinaryOperator 0x563107e19c50 <lua_cjson.c:785:9, col:38> 'char' '='
|-ArraySubscriptExpr 0x563107e19b20 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e19b08 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e19ac0 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e19ae8 <col:14> 'int' 0
`-ImplicitCastExpr 0x563107e19c38 <col:19, col:38> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e19c10 <col:19, col:38> 'int' '|'
    |-ParenExpr 0x563107e19bd0 <col:19, col:34> 'int'
    | `-BinaryOperator 0x563107e19ba8 <col:20, col:33> 'int' '>>'
    |   |-ImplicitCastExpr 0x563107e19b90 <col:20> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563107e19b48 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   `-IntegerLiteral 0x563107e19b70 <col:33> 'int' 6
    `-IntegerLiteral 0x563107e19bf0 <col:38> 'int' 192
[B6.11] = [B6.7]
  13: DeclRefExpr 0x563107e19d00 <lua_cjson.c:786:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
  14: ImplicitCastExpr 0x563107e19d48 <lua_cjson.c:786:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e19d00 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B6.13] (ImplicitCastExpr, LValueToRValue, int)
  15: IntegerLiteral 0x563107e19d28 <lua_cjson.c:786:32> 'int' 63
63
  16: BinaryOperator 0x563107e19d60 <lua_cjson.c:786:20, col:32> 'int' '&'
|-ImplicitCastExpr 0x563107e19d48 <col:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e19d00 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e19d28 <col:32> 'int' 63
[B6.14] & [B6.15]
  17: IntegerLiteral 0x563107e19da8 <lua_cjson.c:786:40> 'int' 128
128
  18: BinaryOperator 0x563107e19dc8 <lua_cjson.c:786:19, col:40> 'int' '|'
|-ParenExpr 0x563107e19d88 <col:19, col:36> 'int'
| `-BinaryOperator 0x563107e19d60 <col:20, col:32> 'int' '&'
|   |-ImplicitCastExpr 0x563107e19d48 <col:20> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x563107e19d00 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
|   `-IntegerLiteral 0x563107e19d28 <col:32> 'int' 63
`-IntegerLiteral 0x563107e19da8 <col:40> 'int' 128
([B6.16]) | [B6.17]
  19: ImplicitCastExpr 0x563107e19df0 <lua_cjson.c:786:19, col:40> 'char' <IntegralCast>
`-BinaryOperator 0x563107e19dc8 <col:19, col:40> 'int' '|'
  |-ParenExpr 0x563107e19d88 <col:19, col:36> 'int'
  | `-BinaryOperator 0x563107e19d60 <col:20, col:32> 'int' '&'
  |   |-ImplicitCastExpr 0x563107e19d48 <col:20> 'int' <LValueToRValue>
  |   | `-DeclRefExpr 0x563107e19d00 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
  |   `-IntegerLiteral 0x563107e19d28 <col:32> 'int' 63
  `-IntegerLiteral 0x563107e19da8 <col:40> 'int' 128
[B6.18] (ImplicitCastExpr, IntegralCast, char)
  20: DeclRefExpr 0x563107e19c78 <lua_cjson.c:786:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
  21: ImplicitCastExpr 0x563107e19cc0 <lua_cjson.c:786:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e19c78 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B6.20] (ImplicitCastExpr, LValueToRValue, char *)
  22: IntegerLiteral 0x563107e19ca0 <lua_cjson.c:786:14> 'int' 1
1
  23: ArraySubscriptExpr 0x563107e19cd8 <lua_cjson.c:786:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e19cc0 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e19c78 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e19ca0 <col:14> 'int' 1
[B6.21][[B6.22]]
  24: BinaryOperator 0x563107e19e08 <lua_cjson.c:786:9, col:40> 'char' '='
|-ArraySubscriptExpr 0x563107e19cd8 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e19cc0 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e19c78 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e19ca0 <col:14> 'int' 1
`-ImplicitCastExpr 0x563107e19df0 <col:19, col:40> 'char' <IntegralCast>
  `-BinaryOperator 0x563107e19dc8 <col:19, col:40> 'int' '|'
    |-ParenExpr 0x563107e19d88 <col:19, col:36> 'int'
    | `-BinaryOperator 0x563107e19d60 <col:20, col:32> 'int' '&'
    |   |-ImplicitCastExpr 0x563107e19d48 <col:20> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563107e19d00 <col:20> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
    |   `-IntegerLiteral 0x563107e19d28 <col:32> 'int' 63
    `-IntegerLiteral 0x563107e19da8 <col:40> 'int' 128
[B6.23] = [B6.19]
  25: IntegerLiteral 0x563107e19e30 <lua_cjson.c:787:16> 'int' 2
2
  26: ReturnStmt 0x563107e19e50 <lua_cjson.c:787:9, col:16>
`-IntegerLiteral 0x563107e19e30 <col:16> 'int' 2
return [B6.25];
   Preds (1): B7
   Succs (1): B0

 [B7]
   1: DeclRefExpr 0x563107e19a08 <lua_cjson.c:784:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e19a50 <lua_cjson.c:784:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e19a08 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B7.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e19a30 <lua_cjson.c:784:22> 'int' 2047
2047
   4: BinaryOperator 0x563107e19a68 <lua_cjson.c:784:9, col:22> 'int' '<='
|-ImplicitCastExpr 0x563107e19a50 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e19a08 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e19a30 <col:22> 'int' 2047
[B7.2] <= [B7.3]
   T: if [B7.4]
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: DeclRefExpr 0x563107e198f8 <lua_cjson.c:779:19> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e19920 <lua_cjson.c:779:19> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e198f8 <col:19> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B8.1] (ImplicitCastExpr, LValueToRValue, int)
   3: ImplicitCastExpr 0x563107e19938 <lua_cjson.c:779:19> 'char' <IntegralCast>
`-ImplicitCastExpr 0x563107e19920 <col:19> 'int' <LValueToRValue>
  `-DeclRefExpr 0x563107e198f8 <col:19> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B8.2] (ImplicitCastExpr, IntegralCast, char)
   4: DeclRefExpr 0x563107e19870 <lua_cjson.c:779:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
utf8
   5: ImplicitCastExpr 0x563107e198b8 <lua_cjson.c:779:9> 'char *' <LValueToRValue>
`-DeclRefExpr 0x563107e19870 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
[B8.4] (ImplicitCastExpr, LValueToRValue, char *)
   6: IntegerLiteral 0x563107e19898 <lua_cjson.c:779:14> 'int' 0
0
   7: ArraySubscriptExpr 0x563107e198d0 <lua_cjson.c:779:9, col:15> 'char' lvalue
|-ImplicitCastExpr 0x563107e198b8 <col:9> 'char *' <LValueToRValue>
| `-DeclRefExpr 0x563107e19870 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
`-IntegerLiteral 0x563107e19898 <col:14> 'int' 0
[B8.5][[B8.6]]
   8: BinaryOperator 0x563107e19950 <lua_cjson.c:779:9, col:19> 'char' '='
|-ArraySubscriptExpr 0x563107e198d0 <col:9, col:15> 'char' lvalue
| |-ImplicitCastExpr 0x563107e198b8 <col:9> 'char *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e19870 <col:9> 'char *' lvalue ParmVar 0x563107e19628 'utf8' 'char *'
| `-IntegerLiteral 0x563107e19898 <col:14> 'int' 0
`-ImplicitCastExpr 0x563107e19938 <col:19> 'char' <IntegralCast>
  `-ImplicitCastExpr 0x563107e19920 <col:19> 'int' <LValueToRValue>
    `-DeclRefExpr 0x563107e198f8 <col:19> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B8.7] = [B8.3]
   9: IntegerLiteral 0x563107e19978 <lua_cjson.c:780:16> 'int' 1
1
  10: ReturnStmt 0x563107e19998 <lua_cjson.c:780:9, col:16>
`-IntegerLiteral 0x563107e19978 <col:16> 'int' 1
return [B8.9];
   Preds (1): B9
   Succs (1): B0

 [B9]
   1: DeclRefExpr 0x563107e197e8 <lua_cjson.c:778:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
codepoint
   2: ImplicitCastExpr 0x563107e19830 <lua_cjson.c:778:9> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e197e8 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
[B9.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e19810 <lua_cjson.c:778:22> 'int' 127
127
   4: BinaryOperator 0x563107e19848 <lua_cjson.c:778:9, col:22> 'int' '<='
|-ImplicitCastExpr 0x563107e19830 <col:9> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e197e8 <col:9> 'int' lvalue ParmVar 0x563107e196a0 'codepoint' 'int'
`-IntegerLiteral 0x563107e19810 <col:22> 'int' 127
[B9.2] <= [B9.3]
   T: if [B9.4]
   Preds (1): B10
   Succs (2): B8 B7

 [B0 (EXIT)]
   Preds (5): B1 B2 B4 B6 B8
