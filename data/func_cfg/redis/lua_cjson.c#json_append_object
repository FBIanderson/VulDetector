static void json_append_object(lua_State *l, json_config_t *cfg, int current_depth, strbuf_t *json)
 [B14 (ENTRY)]
   Succs (1): B13

 [B1]
   1: DeclRefExpr 0x563107e14240 <lua_cjson.c:656:5> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
strbuf_append_char
   2: ImplicitCastExpr 0x563107e142a8 <lua_cjson.c:656:5> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e14240 <col:5> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char))
   3: DeclRefExpr 0x563107e14268 <lua_cjson.c:656:24> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
   4: ImplicitCastExpr 0x563107e142f8 <lua_cjson.c:656:24> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e14268 <col:24> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B1.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: CharacterLiteral 0x563107e14290 <lua_cjson.c:656:30> 'int' 125
'}'
   6: ImplicitCastExpr 0x563107e14310 <lua_cjson.c:656:30> 'char' <IntegralCast>
`-CharacterLiteral 0x563107e14290 <col:30> 'int' 125
[B1.5] (ImplicitCastExpr, IntegralCast, char)
   7: CallExpr 0x563107e142c0 <lua_cjson.c:656:5, col:33> 'void'
|-ImplicitCastExpr 0x563107e142a8 <col:5> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e14240 <col:5> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
|-ImplicitCastExpr 0x563107e142f8 <col:24> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e14268 <col:24> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
`-ImplicitCastExpr 0x563107e14310 <col:30> 'char' <IntegralCast>
  `-CharacterLiteral 0x563107e14290 <col:30> 'int' 125
[B1.2]([B1.4], [B1.6])
   Preds (1): B12
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B12

 [B3]
   1: DeclRefExpr 0x563107e13f00 <lua_cjson.c:651:9> 'void (lua_State *, json_config_t *, int, strbuf_t *)' Function 0x563107e10040 'json_append_data' 'void (lua_State *, json_config_t *, int, strbuf_t *)'
json_append_data
   2: ImplicitCastExpr 0x563107e13fc8 <lua_cjson.c:651:9> 'void (*)(lua_State *, json_config_t *, int, strbuf_t *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e13f00 <col:9> 'void (lua_State *, json_config_t *, int, strbuf_t *)' Function 0x563107e10040 'json_append_data' 'void (lua_State *, json_config_t *, int, strbuf_t *)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, json_config_t *, int, strbuf_t *))
   3: DeclRefExpr 0x563107e13f28 <lua_cjson.c:651:26> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e14028 <lua_cjson.c:651:26> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e13f28 <col:26> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B3.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e13f50 <lua_cjson.c:651:29> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
cfg
   6: ImplicitCastExpr 0x563107e14040 <lua_cjson.c:651:29> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13f50 <col:29> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
[B3.5] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   7: DeclRefExpr 0x563107e13f78 <lua_cjson.c:651:34> 'int' lvalue ParmVar 0x563107e12ad8 'current_depth' 'int'
current_depth
   8: ImplicitCastExpr 0x563107e14058 <lua_cjson.c:651:34> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e13f78 <col:34> 'int' lvalue ParmVar 0x563107e12ad8 'current_depth' 'int'
[B3.7] (ImplicitCastExpr, LValueToRValue, int)
   9: DeclRefExpr 0x563107e13fa0 <lua_cjson.c:651:49> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
  10: ImplicitCastExpr 0x563107e14070 <lua_cjson.c:651:49> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13fa0 <col:49> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B3.9] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  11: CallExpr 0x563107e13fe0 <lua_cjson.c:651:9, col:53> 'void'
|-ImplicitCastExpr 0x563107e13fc8 <col:9> 'void (*)(lua_State *, json_config_t *, int, strbuf_t *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e13f00 <col:9> 'void (lua_State *, json_config_t *, int, strbuf_t *)' Function 0x563107e10040 'json_append_data' 'void (lua_State *, json_config_t *, int, strbuf_t *)'
|-ImplicitCastExpr 0x563107e14028 <col:26> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13f28 <col:26> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e14040 <col:29> 'json_config_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13f50 <col:29> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e14058 <col:34> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e13f78 <col:34> 'int' lvalue ParmVar 0x563107e12ad8 'current_depth' 'int'
`-ImplicitCastExpr 0x563107e14070 <col:49> 'strbuf_t *' <LValueToRValue>
  `-DeclRefExpr 0x563107e13fa0 <col:49> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B3.2]([B3.4], [B3.6], [B3.8], [B3.10])
  12: DeclRefExpr 0x563107e14088 <./lua.h:254:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
lua_settop
  13: ImplicitCastExpr 0x563107e14180 <./lua.h:254:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e14088 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
[B3.12] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, int))
  14: DeclRefExpr 0x563107e140b0 <lua_cjson.c:652:17> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
  15: ImplicitCastExpr 0x563107e141d0 <lua_cjson.c:652:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e140b0 <col:17> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B3.14] (ImplicitCastExpr, LValueToRValue, lua_State *)
  16: IntegerLiteral 0x563107e140d8 <lua_cjson.c:652:20> 'int' 1
1
  17: UnaryOperator 0x563107e14118 <./lua.h:254:37, col:40> 'int' prefix '-'
`-ParenExpr 0x563107e140f8 <col:38, col:40> 'int'
  `-IntegerLiteral 0x563107e140d8 <lua_cjson.c:652:20> 'int' 1
-([B3.16])
  18: IntegerLiteral 0x563107e14138 <./lua.h:254:42> 'int' 1
1
  19: BinaryOperator 0x563107e14158 <./lua.h:254:37, col:42> 'int' '-'
|-UnaryOperator 0x563107e14118 <col:37, col:40> 'int' prefix '-'
| `-ParenExpr 0x563107e140f8 <col:38, col:40> 'int'
|   `-IntegerLiteral 0x563107e140d8 <lua_cjson.c:652:20> 'int' 1
`-IntegerLiteral 0x563107e14138 <./lua.h:254:42> 'int' 1
[B3.17] - [B3.18]
  20: CallExpr 0x563107e14198 <./lua.h:254:23, col:43> 'void'
|-ImplicitCastExpr 0x563107e14180 <col:23> 'void (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e14088 <col:23> 'void (lua_State *, int)':'void (lua_State *, int)' Function 0x563107d508e0 'lua_settop' 'void (lua_State *, int)':'void (lua_State *, int)'
|-ImplicitCastExpr 0x563107e141d0 <lua_cjson.c:652:17> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e140b0 <col:17> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
`-BinaryOperator 0x563107e14158 <./lua.h:254:37, col:42> 'int' '-'
  |-UnaryOperator 0x563107e14118 <col:37, col:40> 'int' prefix '-'
  | `-ParenExpr 0x563107e140f8 <col:38, col:40> 'int'
  |   `-IntegerLiteral 0x563107e140d8 <lua_cjson.c:652:20> 'int' 1
  `-IntegerLiteral 0x563107e14138 <./lua.h:254:42> 'int' 1
[B3.13]([B3.15], [B3.19])
   Preds (3): B4 B5 B7
   Succs (1): B2

 [B4]
   1: DeclRefExpr 0x563107e13c28 <lua_cjson.c:645:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
json_encode_exception
   2: ImplicitCastExpr 0x563107e13d98 <lua_cjson.c:645:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e13c28 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
[B4.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *))
   3: DeclRefExpr 0x563107e13c50 <lua_cjson.c:645:35> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e13e00 <lua_cjson.c:645:35> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e13c50 <col:35> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B4.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e13c78 <lua_cjson.c:645:38> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
cfg
   6: ImplicitCastExpr 0x563107e13e18 <lua_cjson.c:645:38> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13c78 <col:38> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
[B4.5] (ImplicitCastExpr, LValueToRValue, json_config_t *)
   7: DeclRefExpr 0x563107e13ca0 <lua_cjson.c:645:43> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
   8: ImplicitCastExpr 0x563107e13e30 <lua_cjson.c:645:43> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13ca0 <col:43> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B4.7] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   9: IntegerLiteral 0x563107e13cc8 <lua_cjson.c:645:50> 'int' 2
2
  10: UnaryOperator 0x563107e13ce8 <lua_cjson.c:645:49, col:50> 'int' prefix '-'
`-IntegerLiteral 0x563107e13cc8 <col:50> 'int' 2
-[B4.9]
  11: StringLiteral 0x563107e13d48 <lua_cjson.c:646:35> 'char [37]' lvalue "table key must be a number or string"
"table key must be a number or string"
  12: ImplicitCastExpr 0x563107e13e48 <lua_cjson.c:646:35> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e13d48 <col:35> 'char [37]' lvalue "table key must be a number or string"
[B4.11] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  13: ImplicitCastExpr 0x563107e13e60 <lua_cjson.c:646:35> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e13e48 <col:35> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e13d48 <col:35> 'char [37]' lvalue "table key must be a number or string"
[B4.12] (ImplicitCastExpr, BitCast, const char *)
  14: CallExpr 0x563107e13db0 <lua_cjson.c:645:13, line:646:73> 'void'
|-ImplicitCastExpr 0x563107e13d98 <line:645:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int, const char *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e13c28 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)' Function 0x563107e0b1a0 'json_encode_exception' 'void (lua_State *, json_config_t *, strbuf_t *, int, const char *)'
|-ImplicitCastExpr 0x563107e13e00 <col:35> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13c50 <col:35> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e13e18 <col:38> 'json_config_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13c78 <col:38> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e13e30 <col:43> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13ca0 <col:43> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
|-UnaryOperator 0x563107e13ce8 <col:49, col:50> 'int' prefix '-'
| `-IntegerLiteral 0x563107e13cc8 <col:50> 'int' 2
`-ImplicitCastExpr 0x563107e13e60 <line:646:35> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x563107e13e48 <col:35> 'char *' <ArrayToPointerDecay>
    `-StringLiteral 0x563107e13d48 <col:35> 'char [37]' lvalue "table key must be a number or string"
[B4.2]([B4.4], [B4.6], [B4.8], [B4.10], [B4.13])
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: DeclRefExpr 0x563107e13980 <lua_cjson.c:642:13> 'void (lua_State *, strbuf_t *, int)' Function 0x563107e0ba00 'json_append_string' 'void (lua_State *, strbuf_t *, int)'
json_append_string
   2: ImplicitCastExpr 0x563107e13a98 <lua_cjson.c:642:13> 'void (*)(lua_State *, strbuf_t *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e13980 <col:13> 'void (lua_State *, strbuf_t *, int)' Function 0x563107e0ba00 'json_append_string' 'void (lua_State *, strbuf_t *, int)'
[B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, strbuf_t *, int))
   3: DeclRefExpr 0x563107e139a8 <lua_cjson.c:642:32> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e13af0 <lua_cjson.c:642:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e139a8 <col:32> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B5.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: DeclRefExpr 0x563107e139d0 <lua_cjson.c:642:35> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
   6: ImplicitCastExpr 0x563107e13b08 <lua_cjson.c:642:35> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e139d0 <col:35> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B5.5] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   7: IntegerLiteral 0x563107e139f8 <lua_cjson.c:642:42> 'int' 2
2
   8: UnaryOperator 0x563107e13a18 <lua_cjson.c:642:41, col:42> 'int' prefix '-'
`-IntegerLiteral 0x563107e139f8 <col:42> 'int' 2
-[B5.7]
   9: CallExpr 0x563107e13ab0 <lua_cjson.c:642:13, col:43> 'void'
|-ImplicitCastExpr 0x563107e13a98 <col:13> 'void (*)(lua_State *, strbuf_t *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e13980 <col:13> 'void (lua_State *, strbuf_t *, int)' Function 0x563107e0ba00 'json_append_string' 'void (lua_State *, strbuf_t *, int)'
|-ImplicitCastExpr 0x563107e13af0 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e139a8 <col:32> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e13b08 <col:35> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e139d0 <col:35> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
`-UnaryOperator 0x563107e13a18 <col:41, col:42> 'int' prefix '-'
  `-IntegerLiteral 0x563107e139f8 <col:42> 'int' 2
[B5.2]([B5.4], [B5.6], [B5.8])
  10: DeclRefExpr 0x563107e13b20 <lua_cjson.c:643:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
strbuf_append_char
  11: ImplicitCastExpr 0x563107e13b88 <lua_cjson.c:643:13> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e13b20 <col:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
[B5.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char))
  12: DeclRefExpr 0x563107e13b48 <lua_cjson.c:643:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
  13: ImplicitCastExpr 0x563107e13bd8 <lua_cjson.c:643:32> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13b48 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B5.12] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  14: CharacterLiteral 0x563107e13b70 <lua_cjson.c:643:38> 'int' 58
':'
  15: ImplicitCastExpr 0x563107e13bf0 <lua_cjson.c:643:38> 'char' <IntegralCast>
`-CharacterLiteral 0x563107e13b70 <col:38> 'int' 58
[B5.14] (ImplicitCastExpr, IntegralCast, char)
  16: CallExpr 0x563107e13ba0 <lua_cjson.c:643:13, col:41> 'void'
|-ImplicitCastExpr 0x563107e13b88 <col:13> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e13b20 <col:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
|-ImplicitCastExpr 0x563107e13bd8 <col:32> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13b48 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
`-ImplicitCastExpr 0x563107e13bf0 <col:38> 'char' <IntegralCast>
  `-CharacterLiteral 0x563107e13b70 <col:38> 'int' 58
[B5.11]([B5.13], [B5.15])
   Preds (1): B6
   Succs (1): B3

 [B6]
   1: DeclRefExpr 0x563107e138f8 <lua_cjson.c:641:20> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
keytype
   2: ImplicitCastExpr 0x563107e13940 <lua_cjson.c:641:20> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e138f8 <col:20> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
[B6.1] (ImplicitCastExpr, LValueToRValue, int)
   3: IntegerLiteral 0x563107e13920 <./lua.h:78:22> 'int' 4
4
   4: BinaryOperator 0x563107e13958 <lua_cjson.c:641:20, ./lua.h:78:22> 'int' '=='
|-ImplicitCastExpr 0x563107e13940 <lua_cjson.c:641:20> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e138f8 <col:20> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
`-IntegerLiteral 0x563107e13920 <./lua.h:78:22> 'int' 4
[B6.2] == [B6.3]
   T: if [B6.4]
   Preds (1): B8
   Succs (2): B5 B4

 [B7]
   1: DeclRefExpr 0x563107e134c8 <lua_cjson.c:638:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
strbuf_append_char
   2: ImplicitCastExpr 0x563107e13530 <lua_cjson.c:638:13> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e134c8 <col:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
[B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char))
   3: DeclRefExpr 0x563107e134f0 <lua_cjson.c:638:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
   4: ImplicitCastExpr 0x563107e13580 <lua_cjson.c:638:32> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e134f0 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B7.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: CharacterLiteral 0x563107e13518 <lua_cjson.c:638:38> 'int' 34
'"'
   6: ImplicitCastExpr 0x563107e13598 <lua_cjson.c:638:38> 'char' <IntegralCast>
`-CharacterLiteral 0x563107e13518 <col:38> 'int' 34
[B7.5] (ImplicitCastExpr, IntegralCast, char)
   7: CallExpr 0x563107e13548 <lua_cjson.c:638:13, col:41> 'void'
|-ImplicitCastExpr 0x563107e13530 <col:13> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e134c8 <col:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
|-ImplicitCastExpr 0x563107e13580 <col:32> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e134f0 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
`-ImplicitCastExpr 0x563107e13598 <col:38> 'char' <IntegralCast>
  `-CharacterLiteral 0x563107e13518 <col:38> 'int' 34
[B7.2]([B7.4], [B7.6])
   8: DeclRefExpr 0x563107e135b0 <lua_cjson.c:639:13> 'void (lua_State *, json_config_t *, strbuf_t *, int)' Function 0x563107e11380 'json_append_number' 'void (lua_State *, json_config_t *, strbuf_t *, int)'
json_append_number
   9: ImplicitCastExpr 0x563107e136e8 <lua_cjson.c:639:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e135b0 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int)' Function 0x563107e11380 'json_append_number' 'void (lua_State *, json_config_t *, strbuf_t *, int)'
[B7.8] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *, json_config_t *, strbuf_t *, int))
  10: DeclRefExpr 0x563107e135d8 <lua_cjson.c:639:32> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
  11: ImplicitCastExpr 0x563107e13748 <lua_cjson.c:639:32> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e135d8 <col:32> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B7.10] (ImplicitCastExpr, LValueToRValue, lua_State *)
  12: DeclRefExpr 0x563107e13600 <lua_cjson.c:639:35> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
cfg
  13: ImplicitCastExpr 0x563107e13760 <lua_cjson.c:639:35> 'json_config_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13600 <col:35> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
[B7.12] (ImplicitCastExpr, LValueToRValue, json_config_t *)
  14: DeclRefExpr 0x563107e13628 <lua_cjson.c:639:40> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
  15: ImplicitCastExpr 0x563107e13778 <lua_cjson.c:639:40> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13628 <col:40> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B7.14] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  16: IntegerLiteral 0x563107e13650 <lua_cjson.c:639:47> 'int' 2
2
  17: UnaryOperator 0x563107e13670 <lua_cjson.c:639:46, col:47> 'int' prefix '-'
`-IntegerLiteral 0x563107e13650 <col:47> 'int' 2
-[B7.16]
  18: CallExpr 0x563107e13700 <lua_cjson.c:639:13, col:48> 'void'
|-ImplicitCastExpr 0x563107e136e8 <col:13> 'void (*)(lua_State *, json_config_t *, strbuf_t *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e135b0 <col:13> 'void (lua_State *, json_config_t *, strbuf_t *, int)' Function 0x563107e11380 'json_append_number' 'void (lua_State *, json_config_t *, strbuf_t *, int)'
|-ImplicitCastExpr 0x563107e13748 <col:32> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e135d8 <col:32> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
|-ImplicitCastExpr 0x563107e13760 <col:35> 'json_config_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13600 <col:35> 'json_config_t *' lvalue ParmVar 0x563107e12a60 'cfg' 'json_config_t *'
|-ImplicitCastExpr 0x563107e13778 <col:40> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13628 <col:40> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
`-UnaryOperator 0x563107e13670 <col:46, col:47> 'int' prefix '-'
  `-IntegerLiteral 0x563107e13650 <col:47> 'int' 2
[B7.9]([B7.11], [B7.13], [B7.15], [B7.17])
  19: DeclRefExpr 0x563107e13790 <lua_cjson.c:640:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
strbuf_append_mem
  20: ImplicitCastExpr 0x563107e13830 <lua_cjson.c:640:13> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e13790 <col:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
[B7.19] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char *, int))
  21: DeclRefExpr 0x563107e137b8 <lua_cjson.c:640:31> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
  22: ImplicitCastExpr 0x563107e13888 <lua_cjson.c:640:31> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e137b8 <col:31> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B7.21] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
  23: StringLiteral 0x563107e137e0 <lua_cjson.c:640:37> 'char [3]' lvalue "\":"
"\":"
  24: ImplicitCastExpr 0x563107e138a0 <lua_cjson.c:640:37> 'char *' <ArrayToPointerDecay>
`-StringLiteral 0x563107e137e0 <col:37> 'char [3]' lvalue "\":"
[B7.23] (ImplicitCastExpr, ArrayToPointerDecay, char *)
  25: ImplicitCastExpr 0x563107e138b8 <lua_cjson.c:640:37> 'const char *' <BitCast>
`-ImplicitCastExpr 0x563107e138a0 <col:37> 'char *' <ArrayToPointerDecay>
  `-StringLiteral 0x563107e137e0 <col:37> 'char [3]' lvalue "\":"
[B7.24] (ImplicitCastExpr, BitCast, const char *)
  26: IntegerLiteral 0x563107e13810 <lua_cjson.c:640:44> 'int' 2
2
  27: CallExpr 0x563107e13848 <lua_cjson.c:640:13, col:45> 'void'
|-ImplicitCastExpr 0x563107e13830 <col:13> 'void (*)(strbuf_t *, const char *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e13790 <col:13> 'void (strbuf_t *, const char *, int)' Function 0x563107deb990 'strbuf_append_mem' 'void (strbuf_t *, const char *, int)'
|-ImplicitCastExpr 0x563107e13888 <col:31> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e137b8 <col:31> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
|-ImplicitCastExpr 0x563107e138b8 <col:37> 'const char *' <BitCast>
| `-ImplicitCastExpr 0x563107e138a0 <col:37> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x563107e137e0 <col:37> 'char [3]' lvalue "\":"
`-IntegerLiteral 0x563107e13810 <col:44> 'int' 2
[B7.20]([B7.22], [B7.25], [B7.26])
   Preds (1): B8
   Succs (1): B3

 [B8]
   1: DeclRefExpr 0x563107e13320 <lua_cjson.c:636:19> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_type
   2: ImplicitCastExpr 0x563107e133b0 <lua_cjson.c:636:19> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e13320 <col:19> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
[B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e13348 <lua_cjson.c:636:28> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e13400 <lua_cjson.c:636:28> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e13348 <col:28> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B8.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e13370 <lua_cjson.c:636:32> 'int' 2
2
   6: UnaryOperator 0x563107e13390 <lua_cjson.c:636:31, col:32> 'int' prefix '-'
`-IntegerLiteral 0x563107e13370 <col:32> 'int' 2
-[B8.5]
   7: CallExpr 0x563107e133c8 <lua_cjson.c:636:19, col:33> 'int'
|-ImplicitCastExpr 0x563107e133b0 <col:19> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e13320 <col:19> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e13400 <col:28> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13348 <col:28> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
`-UnaryOperator 0x563107e13390 <col:31, col:32> 'int' prefix '-'
  `-IntegerLiteral 0x563107e13370 <col:32> 'int' 2
[B8.2]([B8.4], [B8.6])
   8: DeclRefExpr 0x563107e132f8 <lua_cjson.c:636:9> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
keytype
   9: BinaryOperator 0x563107e13418 <lua_cjson.c:636:9, col:33> 'int' '='
|-DeclRefExpr 0x563107e132f8 <col:9> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
`-CallExpr 0x563107e133c8 <col:19, col:33> 'int'
  |-ImplicitCastExpr 0x563107e133b0 <col:19> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x563107e13320 <col:19> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d52f58 'lua_type' 'int (lua_State *, int)':'int (lua_State *, int)'
  |-ImplicitCastExpr 0x563107e13400 <col:28> 'lua_State *' <LValueToRValue>
  | `-DeclRefExpr 0x563107e13348 <col:28> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
  `-UnaryOperator 0x563107e13390 <col:31, col:32> 'int' prefix '-'
    `-IntegerLiteral 0x563107e13370 <col:32> 'int' 2
[B8.8] = [B8.7]
  10: DeclRefExpr 0x563107e13440 <lua_cjson.c:637:13> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
keytype
  11: ImplicitCastExpr 0x563107e13488 <lua_cjson.c:637:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e13440 <col:13> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
[B8.10] (ImplicitCastExpr, LValueToRValue, int)
  12: IntegerLiteral 0x563107e13468 <./lua.h:77:22> 'int' 3
3
  13: BinaryOperator 0x563107e134a0 <lua_cjson.c:637:13, ./lua.h:77:22> 'int' '=='
|-ImplicitCastExpr 0x563107e13488 <lua_cjson.c:637:13> 'int' <LValueToRValue>
| `-DeclRefExpr 0x563107e13440 <col:13> 'int' lvalue Var 0x563107e12d38 'keytype' 'int'
`-IntegerLiteral 0x563107e13468 <./lua.h:77:22> 'int' 3
[B8.11] == [B8.12]
   T: if [B8.13]
   Preds (2): B9 B10
   Succs (2): B7 B6

 [B9]
   1: IntegerLiteral 0x563107e13278 <lua_cjson.c:633:21> 'int' 1
1
   2: DeclRefExpr 0x563107e13250 <lua_cjson.c:633:13> 'int' lvalue Var 0x563107e12cc0 'comma' 'int'
comma
   3: BinaryOperator 0x563107e13298 <lua_cjson.c:633:13, col:21> 'int' '='
|-DeclRefExpr 0x563107e13250 <col:13> 'int' lvalue Var 0x563107e12cc0 'comma' 'int'
`-IntegerLiteral 0x563107e13278 <col:21> 'int' 1
[B9.2] = [B9.1]
   Preds (1): B11
   Succs (1): B8

 [B10]
   1: DeclRefExpr 0x563107e13168 <lua_cjson.c:631:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
strbuf_append_char
   2: ImplicitCastExpr 0x563107e131d0 <lua_cjson.c:631:13> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e13168 <col:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
[B10.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char))
   3: DeclRefExpr 0x563107e13190 <lua_cjson.c:631:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
   4: ImplicitCastExpr 0x563107e13220 <lua_cjson.c:631:32> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e13190 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B10.3] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   5: CharacterLiteral 0x563107e131b8 <lua_cjson.c:631:38> 'int' 44
','
   6: ImplicitCastExpr 0x563107e13238 <lua_cjson.c:631:38> 'char' <IntegralCast>
`-CharacterLiteral 0x563107e131b8 <col:38> 'int' 44
[B10.5] (ImplicitCastExpr, IntegralCast, char)
   7: CallExpr 0x563107e131e8 <lua_cjson.c:631:13, col:41> 'void'
|-ImplicitCastExpr 0x563107e131d0 <col:13> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e13168 <col:13> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
|-ImplicitCastExpr 0x563107e13220 <col:32> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e13190 <col:32> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
`-ImplicitCastExpr 0x563107e13238 <col:38> 'char' <IntegralCast>
  `-CharacterLiteral 0x563107e131b8 <col:38> 'int' 44
[B10.2]([B10.4], [B10.6])
   Preds (1): B11
   Succs (1): B8

 [B11]
   1: DeclRefExpr 0x563107e13128 <lua_cjson.c:630:13> 'int' lvalue Var 0x563107e12cc0 'comma' 'int'
comma
   2: ImplicitCastExpr 0x563107e13150 <lua_cjson.c:630:13> 'int' <LValueToRValue>
`-DeclRefExpr 0x563107e13128 <col:13> 'int' lvalue Var 0x563107e12cc0 'comma' 'int'
[B11.1] (ImplicitCastExpr, LValueToRValue, int)
   T: if [B11.2]
   Preds (1): B12
   Succs (2): B10 B9

 [B12]
   1: DeclRefExpr 0x563107e12fd0 <lua_cjson.c:629:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
lua_next
   2: ImplicitCastExpr 0x563107e13060 <lua_cjson.c:629:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e12fd0 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
[B12.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(lua_State *, int))
   3: DeclRefExpr 0x563107e12ff8 <lua_cjson.c:629:21> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
   4: ImplicitCastExpr 0x563107e130c8 <lua_cjson.c:629:21> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e12ff8 <col:21> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B12.3] (ImplicitCastExpr, LValueToRValue, lua_State *)
   5: IntegerLiteral 0x563107e13020 <lua_cjson.c:629:25> 'int' 2
2
   6: UnaryOperator 0x563107e13040 <lua_cjson.c:629:24, col:25> 'int' prefix '-'
`-IntegerLiteral 0x563107e13020 <col:25> 'int' 2
-[B12.5]
   7: CallExpr 0x563107e13090 <lua_cjson.c:629:12, col:26> 'int'
|-ImplicitCastExpr 0x563107e13060 <col:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e12fd0 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
|-ImplicitCastExpr 0x563107e130c8 <col:21> 'lua_State *' <LValueToRValue>
| `-DeclRefExpr 0x563107e12ff8 <col:21> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
`-UnaryOperator 0x563107e13040 <col:24, col:25> 'int' prefix '-'
  `-IntegerLiteral 0x563107e13020 <col:25> 'int' 2
[B12.2]([B12.4], [B12.6])
   8: IntegerLiteral 0x563107e130e0 <lua_cjson.c:629:31> 'int' 0
0
   9: BinaryOperator 0x563107e13100 <lua_cjson.c:629:12, col:31> 'int' '!='
|-CallExpr 0x563107e13090 <col:12, col:26> 'int'
| |-ImplicitCastExpr 0x563107e13060 <col:12> 'int (*)(lua_State *, int)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x563107e12fd0 <col:12> 'int (lua_State *, int)':'int (lua_State *, int)' Function 0x563107d5ba50 'lua_next' 'int (lua_State *, int)':'int (lua_State *, int)'
| |-ImplicitCastExpr 0x563107e130c8 <col:21> 'lua_State *' <LValueToRValue>
| | `-DeclRefExpr 0x563107e12ff8 <col:21> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
| `-UnaryOperator 0x563107e13040 <col:24, col:25> 'int' prefix '-'
|   `-IntegerLiteral 0x563107e13020 <col:25> 'int' 2
`-IntegerLiteral 0x563107e130e0 <col:31> 'int' 0
[B12.7] != [B12.8]
   T: while [B12.9]
   Preds (2): B2 B13
   Succs (2): B11 B1

 [B13]
   1: DeclStmt 0x563107e39fb8 <lua_cjson.c:621:9>col:9
`-VarDecl 0x563107e12cc0 <col:5, col:9> col:9 used comma 'int'
int comma;
   2: DeclStmt 0x563107e39fa0 <lua_cjson.c:621:16>col:16
`-VarDecl 0x563107e12d38 <col:5, col:16> col:16 used keytype 'int'
int keytype;
   3: DeclRefExpr 0x563107e12dc8 <lua_cjson.c:624:5> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
strbuf_append_char
   4: ImplicitCastExpr 0x563107e12e30 <lua_cjson.c:624:5> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e12dc8 <col:5> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
[B13.3] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(strbuf_t *, const char))
   5: DeclRefExpr 0x563107e12df0 <lua_cjson.c:624:24> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
json
   6: ImplicitCastExpr 0x563107e12e80 <lua_cjson.c:624:24> 'strbuf_t *' <LValueToRValue>
`-DeclRefExpr 0x563107e12df0 <col:24> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
[B13.5] (ImplicitCastExpr, LValueToRValue, strbuf_t *)
   7: CharacterLiteral 0x563107e12e18 <lua_cjson.c:624:30> 'int' 123
'{'
   8: ImplicitCastExpr 0x563107e12e98 <lua_cjson.c:624:30> 'char' <IntegralCast>
`-CharacterLiteral 0x563107e12e18 <col:30> 'int' 123
[B13.7] (ImplicitCastExpr, IntegralCast, char)
   9: CallExpr 0x563107e12e48 <lua_cjson.c:624:5, col:33> 'void'
|-ImplicitCastExpr 0x563107e12e30 <col:5> 'void (*)(strbuf_t *, const char)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e12dc8 <col:5> 'void (strbuf_t *, const char)' Function 0x563107deb108 'strbuf_append_char' 'void (strbuf_t *, const char)'
|-ImplicitCastExpr 0x563107e12e80 <col:24> 'strbuf_t *' <LValueToRValue>
| `-DeclRefExpr 0x563107e12df0 <col:24> 'strbuf_t *' lvalue ParmVar 0x563107e12b48 'json' 'strbuf_t *'
`-ImplicitCastExpr 0x563107e12e98 <col:30> 'char' <IntegralCast>
  `-CharacterLiteral 0x563107e12e18 <col:30> 'int' 123
[B13.4]([B13.6], [B13.8])
  10: DeclRefExpr 0x563107e12eb0 <lua_cjson.c:626:5> 'void (lua_State *)':'void (lua_State *)' Function 0x563107d566a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
lua_pushnil
  11: ImplicitCastExpr 0x563107e12f00 <lua_cjson.c:626:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x563107e12eb0 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x563107d566a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
[B13.10] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(lua_State *))
  12: DeclRefExpr 0x563107e12ed8 <lua_cjson.c:626:17> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
l
  13: ImplicitCastExpr 0x563107e12f48 <lua_cjson.c:626:17> 'lua_State *' <LValueToRValue>
`-DeclRefExpr 0x563107e12ed8 <col:17> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B13.12] (ImplicitCastExpr, LValueToRValue, lua_State *)
  14: CallExpr 0x563107e12f18 <lua_cjson.c:626:5, col:18> 'void'
|-ImplicitCastExpr 0x563107e12f00 <col:5> 'void (*)(lua_State *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x563107e12eb0 <col:5> 'void (lua_State *)':'void (lua_State *)' Function 0x563107d566a8 'lua_pushnil' 'void (lua_State *)':'void (lua_State *)'
`-ImplicitCastExpr 0x563107e12f48 <col:17> 'lua_State *' <LValueToRValue>
  `-DeclRefExpr 0x563107e12ed8 <col:17> 'lua_State *' lvalue ParmVar 0x563107e129f0 'l' 'lua_State *'
[B13.11]([B13.13])
  15: IntegerLiteral 0x563107e12f88 <lua_cjson.c:628:13> 'int' 0
0
  16: DeclRefExpr 0x563107e12f60 <lua_cjson.c:628:5> 'int' lvalue Var 0x563107e12cc0 'comma' 'int'
comma
  17: BinaryOperator 0x563107e12fa8 <lua_cjson.c:628:5, col:13> 'int' '='
|-DeclRefExpr 0x563107e12f60 <col:5> 'int' lvalue Var 0x563107e12cc0 'comma' 'int'
`-IntegerLiteral 0x563107e12f88 <col:13> 'int' 0
[B13.16] = [B13.15]
   Preds (1): B14
   Succs (1): B12

 [B0 (EXIT)]
   Preds (1): B1
