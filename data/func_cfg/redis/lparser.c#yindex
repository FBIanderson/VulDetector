static void yindex(LexState *ls, expdesc *v)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x558fa8f13520 <lparser.c:420:3> 'void (LexState *)' Function 0x558fa8ea1430 'luaX_next' 'void (LexState *)'
luaX_next
   2: ImplicitCastExpr 0x558fa8f13570 <lparser.c:420:3> 'void (*)(LexState *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8f13520 <col:3> 'void (LexState *)' Function 0x558fa8ea1430 'luaX_next' 'void (LexState *)'
[B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LexState *))
   3: DeclRefExpr 0x558fa8f13548 <lparser.c:420:13> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x558fa8f135b8 <lparser.c:420:13> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8f13548 <col:13> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
[B1.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: CallExpr 0x558fa8f13588 <lparser.c:420:3, col:15> 'void'
|-ImplicitCastExpr 0x558fa8f13570 <col:3> 'void (*)(LexState *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8f13520 <col:3> 'void (LexState *)' Function 0x558fa8ea1430 'luaX_next' 'void (LexState *)'
`-ImplicitCastExpr 0x558fa8f135b8 <col:13> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8f13548 <col:13> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
[B1.2]([B1.4])
   6: DeclRefExpr 0x558fa8f135d0 <lparser.c:421:3> 'void (LexState *, expdesc *)' Function 0x558fa8eea220 'expr' 'void (LexState *, expdesc *)'
expr
   7: ImplicitCastExpr 0x558fa8f13648 <lparser.c:421:3> 'void (*)(LexState *, expdesc *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8f135d0 <col:3> 'void (LexState *, expdesc *)' Function 0x558fa8eea220 'expr' 'void (LexState *, expdesc *)'
[B1.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LexState *, expdesc *))
   8: DeclRefExpr 0x558fa8f135f8 <lparser.c:421:8> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
ls
   9: ImplicitCastExpr 0x558fa8f13698 <lparser.c:421:8> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8f135f8 <col:8> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
[B1.8] (ImplicitCastExpr, LValueToRValue, LexState *)
  10: DeclRefExpr 0x558fa8f13620 <lparser.c:421:12> 'expdesc *' lvalue ParmVar 0x558fa8f133e0 'v' 'expdesc *'
v
  11: ImplicitCastExpr 0x558fa8f136b0 <lparser.c:421:12> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x558fa8f13620 <col:12> 'expdesc *' lvalue ParmVar 0x558fa8f133e0 'v' 'expdesc *'
[B1.10] (ImplicitCastExpr, LValueToRValue, expdesc *)
  12: CallExpr 0x558fa8f13660 <lparser.c:421:3, col:13> 'void'
|-ImplicitCastExpr 0x558fa8f13648 <col:3> 'void (*)(LexState *, expdesc *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8f135d0 <col:3> 'void (LexState *, expdesc *)' Function 0x558fa8eea220 'expr' 'void (LexState *, expdesc *)'
|-ImplicitCastExpr 0x558fa8f13698 <col:8> 'LexState *' <LValueToRValue>
| `-DeclRefExpr 0x558fa8f135f8 <col:8> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
`-ImplicitCastExpr 0x558fa8f136b0 <col:12> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8f13620 <col:12> 'expdesc *' lvalue ParmVar 0x558fa8f133e0 'v' 'expdesc *'
[B1.7]([B1.9], [B1.11])
  13: DeclRefExpr 0x558fa8f136c8 <lparser.c:422:3> 'void (FuncState *, expdesc *)' Function 0x558fa8ebaff8 'luaK_exp2val' 'void (FuncState *, expdesc *)'
luaK_exp2val
  14: ImplicitCastExpr 0x558fa8f13790 <lparser.c:422:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8f136c8 <col:3> 'void (FuncState *, expdesc *)' Function 0x558fa8ebaff8 'luaK_exp2val' 'void (FuncState *, expdesc *)'
[B1.13] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(FuncState *, expdesc *))
  15: DeclRefExpr 0x558fa8f136f0 <lparser.c:422:16> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
ls
  16: ImplicitCastExpr 0x558fa8f13718 <lparser.c:422:16> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8f136f0 <col:16> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
[B1.15] (ImplicitCastExpr, LValueToRValue, LexState *)
  17: MemberExpr 0x558fa8f13730 <lparser.c:422:16, col:20> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
`-ImplicitCastExpr 0x558fa8f13718 <col:16> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8f136f0 <col:16> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
[B1.16]->fs
  18: ImplicitCastExpr 0x558fa8f137e0 <lparser.c:422:16, col:20> 'struct FuncState *' <LValueToRValue>
`-MemberExpr 0x558fa8f13730 <col:16, col:20> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
  `-ImplicitCastExpr 0x558fa8f13718 <col:16> 'LexState *' <LValueToRValue>
    `-DeclRefExpr 0x558fa8f136f0 <col:16> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
[B1.17] (ImplicitCastExpr, LValueToRValue, struct FuncState *)
  19: DeclRefExpr 0x558fa8f13768 <lparser.c:422:24> 'expdesc *' lvalue ParmVar 0x558fa8f133e0 'v' 'expdesc *'
v
  20: ImplicitCastExpr 0x558fa8f137f8 <lparser.c:422:24> 'expdesc *' <LValueToRValue>
`-DeclRefExpr 0x558fa8f13768 <col:24> 'expdesc *' lvalue ParmVar 0x558fa8f133e0 'v' 'expdesc *'
[B1.19] (ImplicitCastExpr, LValueToRValue, expdesc *)
  21: CallExpr 0x558fa8f137a8 <lparser.c:422:3, col:25> 'void'
|-ImplicitCastExpr 0x558fa8f13790 <col:3> 'void (*)(FuncState *, expdesc *)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8f136c8 <col:3> 'void (FuncState *, expdesc *)' Function 0x558fa8ebaff8 'luaK_exp2val' 'void (FuncState *, expdesc *)'
|-ImplicitCastExpr 0x558fa8f137e0 <col:16, col:20> 'struct FuncState *' <LValueToRValue>
| `-MemberExpr 0x558fa8f13730 <col:16, col:20> 'struct FuncState *' lvalue ->fs 0x558fa8ea05f0
|   `-ImplicitCastExpr 0x558fa8f13718 <col:16> 'LexState *' <LValueToRValue>
|     `-DeclRefExpr 0x558fa8f136f0 <col:16> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
`-ImplicitCastExpr 0x558fa8f137f8 <col:24> 'expdesc *' <LValueToRValue>
  `-DeclRefExpr 0x558fa8f13768 <col:24> 'expdesc *' lvalue ParmVar 0x558fa8f133e0 'v' 'expdesc *'
[B1.14]([B1.18], [B1.20])
  22: DeclRefExpr 0x558fa8f13810 <lparser.c:423:3> 'void (LexState *, int)' Function 0x558fa8eedcb0 'checknext' 'void (LexState *, int)'
checknext
  23: ImplicitCastExpr 0x558fa8f13878 <lparser.c:423:3> 'void (*)(LexState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x558fa8f13810 <col:3> 'void (LexState *, int)' Function 0x558fa8eedcb0 'checknext' 'void (LexState *, int)'
[B1.22] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LexState *, int))
  24: DeclRefExpr 0x558fa8f13838 <lparser.c:423:13> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
ls
  25: ImplicitCastExpr 0x558fa8f138c8 <lparser.c:423:13> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x558fa8f13838 <col:13> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
[B1.24] (ImplicitCastExpr, LValueToRValue, LexState *)
  26: CharacterLiteral 0x558fa8f13860 <lparser.c:423:17> 'int' 93
']'
  27: CallExpr 0x558fa8f13890 <lparser.c:423:3, col:20> 'void'
|-ImplicitCastExpr 0x558fa8f13878 <col:3> 'void (*)(LexState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x558fa8f13810 <col:3> 'void (LexState *, int)' Function 0x558fa8eedcb0 'checknext' 'void (LexState *, int)'
|-ImplicitCastExpr 0x558fa8f138c8 <col:13> 'LexState *' <LValueToRValue>
| `-DeclRefExpr 0x558fa8f13838 <col:13> 'LexState *' lvalue ParmVar 0x558fa8f13370 'ls' 'LexState *'
`-CharacterLiteral 0x558fa8f13860 <col:17> 'int' 93
[B1.23]([B1.25], [B1.26])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1
