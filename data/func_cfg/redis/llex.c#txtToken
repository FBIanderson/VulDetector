static const char *txtToken(LexState *ls, int token)
 [B6 (ENTRY)]
   Succs (1): B1

 [B1]
   1: DeclRefExpr 0x561ce7446ea8 <llex.c:90:11> 'int' lvalue ParmVar 0x561ce7446d60 'token' 'int'
token
   2: ImplicitCastExpr 0x561ce7446ed0 <llex.c:90:11> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7446ea8 <col:11> 'int' lvalue ParmVar 0x561ce7446d60 'token' 'int'
[B1.1] (ImplicitCastExpr, LValueToRValue, int)
   T: switch [B1.2]
   Preds (1): B6
   Succs (4): B4 B5 B3 B2

 [B2]
  default:
   1: DeclRefExpr 0x561ce74472b0 <llex.c:97:14> 'const char *(LexState *, int)' Function 0x561ce7446220 'luaX_token2str' 'const char *(LexState *, int)'
luaX_token2str
   2: ImplicitCastExpr 0x561ce7447388 <llex.c:97:14> 'const char *(*)(LexState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce74472b0 <col:14> 'const char *(LexState *, int)' Function 0x561ce7446220 'luaX_token2str' 'const char *(LexState *, int)'
[B2.1] (ImplicitCastExpr, FunctionToPointerDecay, const char *(*)(LexState *, int))
   3: DeclRefExpr 0x561ce74472d8 <llex.c:97:29> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x561ce74473d8 <llex.c:97:29> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce74472d8 <col:29> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
[B2.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: DeclRefExpr 0x561ce7447300 <llex.c:97:33> 'int' lvalue ParmVar 0x561ce7446d60 'token' 'int'
token
   6: ImplicitCastExpr 0x561ce74473f0 <llex.c:97:33> 'int' <LValueToRValue>
`-DeclRefExpr 0x561ce7447300 <col:33> 'int' lvalue ParmVar 0x561ce7446d60 'token' 'int'
[B2.5] (ImplicitCastExpr, LValueToRValue, int)
   7: CallExpr 0x561ce74473a0 <llex.c:97:14, col:38> 'const char *'
|-ImplicitCastExpr 0x561ce7447388 <col:14> 'const char *(*)(LexState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce74472b0 <col:14> 'const char *(LexState *, int)' Function 0x561ce7446220 'luaX_token2str' 'const char *(LexState *, int)'
|-ImplicitCastExpr 0x561ce74473d8 <col:29> 'LexState *' <LValueToRValue>
| `-DeclRefExpr 0x561ce74472d8 <col:29> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
`-ImplicitCastExpr 0x561ce74473f0 <col:33> 'int' <LValueToRValue>
  `-DeclRefExpr 0x561ce7447300 <col:33> 'int' lvalue ParmVar 0x561ce7446d60 'token' 'int'
[B2.2]([B2.4], [B2.6])
   8: ReturnStmt 0x561ce7447408 <llex.c:97:7, col:38>
`-CallExpr 0x561ce74473a0 <col:14, col:38> 'const char *'
  |-ImplicitCastExpr 0x561ce7447388 <col:14> 'const char *(*)(LexState *, int)' <FunctionToPointerDecay>
  | `-DeclRefExpr 0x561ce74472b0 <col:14> 'const char *(LexState *, int)' Function 0x561ce7446220 'luaX_token2str' 'const char *(LexState *, int)'
  |-ImplicitCastExpr 0x561ce74473d8 <col:29> 'LexState *' <LValueToRValue>
  | `-DeclRefExpr 0x561ce74472d8 <col:29> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
  `-ImplicitCastExpr 0x561ce74473f0 <col:33> 'int' <LValueToRValue>
    `-DeclRefExpr 0x561ce7447300 <col:33> 'int' lvalue ParmVar 0x561ce7446d60 'token' 'int'
return [B2.7];
   Preds (1): B1
   Succs (1): B0

 [B3]
  case TK_NUMBER:
   1: DeclRefExpr 0x561ce7447038 <llex.c:94:7> 'void (LexState *, int)' Function 0x561ce7440ca0 'save' 'void (LexState *, int)'
save
   2: ImplicitCastExpr 0x561ce74470f8 <llex.c:94:7> 'void (*)(LexState *, int)' <FunctionToPointerDecay>
`-DeclRefExpr 0x561ce7447038 <col:7> 'void (LexState *, int)' Function 0x561ce7440ca0 'save' 'void (LexState *, int)'
[B3.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(LexState *, int))
   3: DeclRefExpr 0x561ce7447060 <llex.c:94:12> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
ls
   4: ImplicitCastExpr 0x561ce7447148 <llex.c:94:12> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447060 <col:12> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
[B3.3] (ImplicitCastExpr, LValueToRValue, LexState *)
   5: CharacterLiteral 0x561ce7447088 <llex.c:94:16> 'int' 0
'\x00'
   6: CallExpr 0x561ce7447110 <llex.c:94:7, col:20> 'void'
|-ImplicitCastExpr 0x561ce74470f8 <col:7> 'void (*)(LexState *, int)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x561ce7447038 <col:7> 'void (LexState *, int)' Function 0x561ce7440ca0 'save' 'void (LexState *, int)'
|-ImplicitCastExpr 0x561ce7447148 <col:12> 'LexState *' <LValueToRValue>
| `-DeclRefExpr 0x561ce7447060 <col:12> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
`-CharacterLiteral 0x561ce7447088 <col:16> 'int' 0
[B3.2]([B3.4], [B3.5])
   7: DeclRefExpr 0x561ce7447160 <llex.c:95:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
ls
   8: ImplicitCastExpr 0x561ce7447188 <llex.c:95:26> 'LexState *' <LValueToRValue>
`-DeclRefExpr 0x561ce7447160 <col:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
[B3.7] (ImplicitCastExpr, LValueToRValue, LexState *)
   9: MemberExpr 0x561ce74471a0 <llex.c:95:26, col:30> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
`-ImplicitCastExpr 0x561ce7447188 <col:26> 'LexState *' <LValueToRValue>
  `-DeclRefExpr 0x561ce7447160 <col:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
[B3.8]->buff
  10: ImplicitCastExpr 0x561ce74471f8 <./lzio.h:32:28, col:33> 'Mbuffer *' <LValueToRValue>
`-ParenExpr 0x561ce74471d8 <col:28, col:33> 'Mbuffer *' lvalue
  `-MemberExpr 0x561ce74471a0 <llex.c:95:26, col:30> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
    `-ImplicitCastExpr 0x561ce7447188 <col:26> 'LexState *' <LValueToRValue>
      `-DeclRefExpr 0x561ce7447160 <col:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
([B3.9]) (ImplicitCastExpr, LValueToRValue, Mbuffer *)
  11: MemberExpr 0x561ce7447210 <./lzio.h:32:28, col:36> 'char *' lvalue ->buffer 0x561ce74137f8
`-ImplicitCastExpr 0x561ce74471f8 <col:28, col:33> 'Mbuffer *' <LValueToRValue>
  `-ParenExpr 0x561ce74471d8 <col:28, col:33> 'Mbuffer *' lvalue
    `-MemberExpr 0x561ce74471a0 <llex.c:95:26, col:30> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
      `-ImplicitCastExpr 0x561ce7447188 <col:26> 'LexState *' <LValueToRValue>
        `-DeclRefExpr 0x561ce7447160 <col:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
[B3.10]->buffer
  12: ImplicitCastExpr 0x561ce7447268 <./lzio.h:32:27, col:42> 'char *' <LValueToRValue>
`-ParenExpr 0x561ce7447248 <col:27, col:42> 'char *' lvalue
  `-MemberExpr 0x561ce7447210 <col:28, col:36> 'char *' lvalue ->buffer 0x561ce74137f8
    `-ImplicitCastExpr 0x561ce74471f8 <col:28, col:33> 'Mbuffer *' <LValueToRValue>
      `-ParenExpr 0x561ce74471d8 <col:28, col:33> 'Mbuffer *' lvalue
        `-MemberExpr 0x561ce74471a0 <llex.c:95:26, col:30> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
          `-ImplicitCastExpr 0x561ce7447188 <col:26> 'LexState *' <LValueToRValue>
            `-DeclRefExpr 0x561ce7447160 <col:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
([B3.11]) (ImplicitCastExpr, LValueToRValue, char *)
  13: ImplicitCastExpr 0x561ce7447280 <./lzio.h:32:27, col:42> 'const char *' <BitCast>
`-ImplicitCastExpr 0x561ce7447268 <col:27, col:42> 'char *' <LValueToRValue>
  `-ParenExpr 0x561ce7447248 <col:27, col:42> 'char *' lvalue
    `-MemberExpr 0x561ce7447210 <col:28, col:36> 'char *' lvalue ->buffer 0x561ce74137f8
      `-ImplicitCastExpr 0x561ce74471f8 <col:28, col:33> 'Mbuffer *' <LValueToRValue>
        `-ParenExpr 0x561ce74471d8 <col:28, col:33> 'Mbuffer *' lvalue
          `-MemberExpr 0x561ce74471a0 <llex.c:95:26, col:30> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
            `-ImplicitCastExpr 0x561ce7447188 <col:26> 'LexState *' <LValueToRValue>
              `-DeclRefExpr 0x561ce7447160 <col:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
[B3.12] (ImplicitCastExpr, BitCast, const char *)
  14: ReturnStmt 0x561ce7447298 <llex.c:95:7, ./lzio.h:32:42>
`-ImplicitCastExpr 0x561ce7447280 <col:27, col:42> 'const char *' <BitCast>
  `-ImplicitCastExpr 0x561ce7447268 <col:27, col:42> 'char *' <LValueToRValue>
    `-ParenExpr 0x561ce7447248 <col:27, col:42> 'char *' lvalue
      `-MemberExpr 0x561ce7447210 <col:28, col:36> 'char *' lvalue ->buffer 0x561ce74137f8
        `-ImplicitCastExpr 0x561ce74471f8 <col:28, col:33> 'Mbuffer *' <LValueToRValue>
          `-ParenExpr 0x561ce74471d8 <col:28, col:33> 'Mbuffer *' lvalue
            `-MemberExpr 0x561ce74471a0 <llex.c:95:26, col:30> 'Mbuffer *' lvalue ->buff 0x561ce7426c60
              `-ImplicitCastExpr 0x561ce7447188 <col:26> 'LexState *' <LValueToRValue>
                `-DeclRefExpr 0x561ce7447160 <col:26> 'LexState *' lvalue ParmVar 0x561ce7446ce8 'ls' 'LexState *'
return [B3.13];
   Preds (2): B1 B5
   Succs (1): B0

 [B4]
  case TK_NAME:
   Preds (1): B1
   Succs (1): B5

 [B5]
  case TK_STRING:
   Preds (2): B4 B1
   Succs (1): B3

 [B0 (EXIT)]
   Preds (2): B2 B3
